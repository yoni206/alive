(set-info :status unknown)
(declare-fun mem0 () (_ BitVec 8))
(declare-fun %y () (_ BitVec 41))
(declare-fun %p2 () (_ BitVec 64))
(declare-fun idx () (_ BitVec 64))
(declare-fun %x () (_ BitVec 41))
(declare-fun %p1 () (_ BitVec 64))
(declare-fun |ana_equivalentAddressValues(%p1, %p2)| () (_ BitVec 1))
(assert
 (let ((?x11680 (ite (and (and (distinct %p2 (_ bv0 64)) true) (or true true) (= idx %p2)) (concat ((_ extract 7 1) mem0) ((_ extract 0 0) %y)) mem0)))
 (let (($x14788 (or true true)))
 (let (($x21710 (and (distinct %p2 (_ bv0 64)) true)))
 (let ((?x469 (ite (and $x21710 $x14788 (= idx (bvadd (bvadd %p2 (_ bv1 64)) (_ bv0 64)))) ((_ extract 8 1) %y) ?x11680)))
 (let ((?x21058 (ite (and $x21710 $x14788 (= idx (bvadd (bvadd %p2 (_ bv1 64)) (_ bv1 64)))) ((_ extract 16 9) %y) ?x469)))
 (let ((?x7644 (ite (and $x21710 $x14788 (= idx (bvadd (bvadd %p2 (_ bv1 64)) (_ bv2 64)))) ((_ extract 24 17) %y) ?x21058)))
 (let ((?x7967 (ite (and $x21710 $x14788 (= idx (bvadd (bvadd %p2 (_ bv1 64)) (_ bv3 64)))) ((_ extract 32 25) %y) ?x7644)))
 (let ((?x8220 (ite (and $x21710 $x14788 (= idx (bvadd (bvadd %p2 (_ bv1 64)) (_ bv4 64)))) ((_ extract 40 33) %y) ?x7967)))
 (let ((?x4757 (ite (and (and (distinct %p1 (_ bv0 64)) true) $x14788 (= idx %p1)) (concat ((_ extract 7 1) mem0) ((_ extract 0 0) %x)) mem0)))
 (let (($x17212 (and (distinct %p1 (_ bv0 64)) true)))
 (let ((?x6453 (ite (and $x17212 $x14788 (= idx (bvadd (bvadd %p1 (_ bv1 64)) (_ bv0 64)))) ((_ extract 8 1) %x) ?x4757)))
 (let ((?x2408 (ite (and $x17212 $x14788 (= idx (bvadd (bvadd %p1 (_ bv1 64)) (_ bv1 64)))) ((_ extract 16 9) %x) ?x6453)))
 (let ((?x24067 (ite (and $x17212 $x14788 (= idx (bvadd (bvadd %p1 (_ bv1 64)) (_ bv2 64)))) ((_ extract 24 17) %x) ?x2408)))
 (let ((?x12499 (ite (and $x17212 $x14788 (= idx (bvadd (bvadd %p1 (_ bv1 64)) (_ bv3 64)))) ((_ extract 32 25) %x) ?x24067)))
 (let ((?x15086 (ite (and $x17212 $x14788 (= idx (bvadd (bvadd %p1 (_ bv1 64)) (_ bv4 64)))) ((_ extract 40 33) %x) ?x12499)))
 (let ((?x4106 (ite (and $x17212 $x14788 (= %p2 %p1)) (concat ((_ extract 7 1) mem0) ((_ extract 0 0) %x)) mem0)))
 (let ((?x639 (ite (and $x17212 $x14788 (= %p2 (bvadd (bvadd %p1 (_ bv1 64)) (_ bv0 64)))) ((_ extract 8 1) %x) ?x4106)))
 (let ((?x18561 (ite (and $x17212 $x14788 (= %p2 (bvadd (bvadd %p1 (_ bv1 64)) (_ bv1 64)))) ((_ extract 16 9) %x) ?x639)))
 (let ((?x9066 (ite (and $x17212 $x14788 (= %p2 (bvadd (bvadd %p1 (_ bv1 64)) (_ bv2 64)))) ((_ extract 24 17) %x) ?x18561)))
 (let ((?x10663 (ite (and $x17212 $x14788 (= %p2 (bvadd (bvadd %p1 (_ bv1 64)) (_ bv3 64)))) ((_ extract 32 25) %x) ?x9066)))
 (let ((?x13774 (ite (and $x17212 $x14788 (= %p2 (bvadd (bvadd %p1 (_ bv1 64)) (_ bv4 64)))) ((_ extract 40 33) %x) ?x10663)))
 (let ((?x10110 (ite (and $x17212 $x14788 $x21710 $x14788 (= idx %p2)) (concat ((_ extract 7 1) ?x13774) ((_ extract 0 0) %y)) ?x15086)))
 (let ((?x389 (ite (and $x17212 $x14788 $x21710 $x14788 (= idx (bvadd (bvadd %p2 (_ bv1 64)) (_ bv0 64)))) ((_ extract 8 1) %y) ?x10110)))
 (let ((?x3207 (ite (and $x17212 $x14788 $x21710 $x14788 (= idx (bvadd (bvadd %p2 (_ bv1 64)) (_ bv1 64)))) ((_ extract 16 9) %y) ?x389)))
 (let ((?x8088 (ite (and $x17212 $x14788 $x21710 $x14788 (= idx (bvadd (bvadd %p2 (_ bv1 64)) (_ bv2 64)))) ((_ extract 24 17) %y) ?x3207)))
 (let ((?x4073 (ite (and $x17212 $x14788 $x21710 $x14788 (= idx (bvadd (bvadd %p2 (_ bv1 64)) (_ bv3 64)))) ((_ extract 32 25) %y) ?x8088)))
 (let ((?x494 (ite (and $x17212 $x14788 $x21710 $x14788 (= idx (bvadd (bvadd %p2 (_ bv1 64)) (_ bv4 64)))) ((_ extract 40 33) %y) ?x4073)))
 (let (($x23569 (= |ana_equivalentAddressValues(%p1, %p2)| (_ bv1 1))))
 (and (=> $x23569 (= %p1 %p2)) $x23569 (and (distinct ?x494 ?x8220) true)))))))))))))))))))))))))))))))
(check-sat)
