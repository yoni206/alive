(set-info :status unknown)
(declare-fun mem0 () (_ BitVec 8))
(declare-fun %x () (_ BitVec 59))
(declare-fun %p1 () (_ BitVec 64))
(declare-fun idx () (_ BitVec 64))
(declare-fun |ana_equivalentAddressValues(%p1, %p2)| () (_ BitVec 1))
(declare-fun %p2 () (_ BitVec 64))
(assert
 (let ((?x15865 (concat ((_ extract 7 3) mem0) ((_ extract 2 0) %x))))
 (let ((?x16547 (ite (and (and (distinct %p1 (_ bv0 64)) true) (or true true) (= idx %p1)) ?x15865 mem0)))
 (let ((?x8765 ((_ extract 10 3) %x)))
 (let (($x1700 (or true true)))
 (let (($x23786 (and (distinct %p1 (_ bv0 64)) true)))
 (let ((?x7441 (ite (and $x23786 $x1700 (= idx (bvadd (bvadd %p1 (_ bv1 64)) (_ bv0 64)))) ?x8765 ?x16547)))
 (let ((?x14137 ((_ extract 18 11) %x)))
 (let ((?x17826 (ite (and $x23786 $x1700 (= idx (bvadd (bvadd %p1 (_ bv1 64)) (_ bv1 64)))) ?x14137 ?x7441)))
 (let ((?x15971 ((_ extract 26 19) %x)))
 (let ((?x1914 (ite (and $x23786 $x1700 (= idx (bvadd (bvadd %p1 (_ bv1 64)) (_ bv2 64)))) ?x15971 ?x17826)))
 (let ((?x9814 ((_ extract 34 27) %x)))
 (let ((?x12128 (ite (and $x23786 $x1700 (= idx (bvadd (bvadd %p1 (_ bv1 64)) (_ bv3 64)))) ?x9814 ?x1914)))
 (let ((?x6201 ((_ extract 42 35) %x)))
 (let ((?x11922 (ite (and $x23786 $x1700 (= idx (bvadd (bvadd %p1 (_ bv1 64)) (_ bv4 64)))) ?x6201 ?x12128)))
 (let ((?x19961 ((_ extract 50 43) %x)))
 (let ((?x17097 (ite (and $x23786 $x1700 (= idx (bvadd (bvadd %p1 (_ bv1 64)) (_ bv5 64)))) ?x19961 ?x11922)))
 (let ((?x2633 ((_ extract 58 51) %x)))
 (let ((?x17348 (ite (and $x23786 $x1700 (= idx (bvadd (bvadd %p1 (_ bv1 64)) (_ bv6 64)))) ?x2633 ?x17097)))
 (let (($x2278 (= |ana_equivalentAddressValues(%p1, %p2)| (_ bv1 1))))
 (and (=> $x2278 (= %p1 %p2)) $x2278 (and (distinct ?x17348 ?x17348) true))))))))))))))))))))))
(check-sat)
