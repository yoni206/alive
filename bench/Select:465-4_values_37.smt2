(set-info :status unknown)
(declare-fun %Y () (_ BitVec 11))
(declare-fun C2 () (_ BitVec 11))
(declare-fun C1 () (_ BitVec 45))
(declare-fun %X () (_ BitVec 45))
(assert
 (let ((?x4791 (ite (and (distinct ((_ extract 2 2) C2) (_ bv0 1)) true) (_ bv2 45) (ite (and (distinct ((_ extract 1 1) C2) (_ bv0 1)) true) (_ bv1 45) (_ bv0 45)))))
 (let ((?x4554 (ite (and (distinct ((_ extract 5 5) C2) (_ bv0 1)) true) (_ bv5 45) (ite (and (distinct ((_ extract 4 4) C2) (_ bv0 1)) true) (_ bv4 45) (_ bv3 45)))))
 (let ((?x3209 (ite (and (distinct ((_ extract 8 8) C2) (_ bv0 1)) true) (_ bv8 45) (ite (and (distinct ((_ extract 7 7) C2) (_ bv0 1)) true) (_ bv7 45) (_ bv6 45)))))
 (let ((?x6414 (ite (and (distinct ((_ extract 10 9) C2) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) C2) (_ bv0 1)) true) (_ bv10 45) (_ bv9 45)) ?x3209)))
 (let ((?x3443 (ite (and (distinct ((_ extract 10 6) C2) (_ bv0 5)) true) ?x6414 (ite (and (distinct ((_ extract 5 3) C2) (_ bv0 3)) true) ?x4554 ?x4791))))
 (let ((?x4942 (ite (and (distinct ((_ extract 2 2) C1) (_ bv0 1)) true) (_ bv2 45) (ite (and (distinct ((_ extract 1 1) C1) (_ bv0 1)) true) (_ bv1 45) (_ bv0 45)))))
 (let ((?x3420 (ite (and (distinct ((_ extract 5 5) C1) (_ bv0 1)) true) (_ bv5 45) (ite (and (distinct ((_ extract 4 4) C1) (_ bv0 1)) true) (_ bv4 45) (_ bv3 45)))))
 (let ((?x2478 (ite (and (distinct ((_ extract 8 8) C1) (_ bv0 1)) true) (_ bv8 45) (ite (and (distinct ((_ extract 7 7) C1) (_ bv0 1)) true) (_ bv7 45) (_ bv6 45)))))
 (let ((?x2957 (ite (and (distinct ((_ extract 11 11) C1) (_ bv0 1)) true) (_ bv11 45) (ite (and (distinct ((_ extract 10 10) C1) (_ bv0 1)) true) (_ bv10 45) (_ bv9 45)))))
 (let ((?x3797 (ite (and (distinct ((_ extract 11 6) C1) (_ bv0 6)) true) (ite (and (distinct ((_ extract 11 9) C1) (_ bv0 3)) true) ?x2957 ?x2478) (ite (and (distinct ((_ extract 5 3) C1) (_ bv0 3)) true) ?x3420 ?x4942))))
 (let ((?x3902 (ite (and (distinct ((_ extract 14 14) C1) (_ bv0 1)) true) (_ bv14 45) (ite (and (distinct ((_ extract 13 13) C1) (_ bv0 1)) true) (_ bv13 45) (_ bv12 45)))))
 (let ((?x3679 (ite (and (distinct ((_ extract 17 17) C1) (_ bv0 1)) true) (_ bv17 45) (ite (and (distinct ((_ extract 16 16) C1) (_ bv0 1)) true) (_ bv16 45) (_ bv15 45)))))
 (let ((?x2589 (ite (and (distinct ((_ extract 20 20) C1) (_ bv0 1)) true) (_ bv20 45) (ite (and (distinct ((_ extract 19 19) C1) (_ bv0 1)) true) (_ bv19 45) (_ bv18 45)))))
 (let ((?x2854 (ite (and (distinct ((_ extract 22 21) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 22 22) C1) (_ bv0 1)) true) (_ bv22 45) (_ bv21 45)) ?x2589)))
 (let ((?x3613 (ite (and (distinct ((_ extract 22 18) C1) (_ bv0 5)) true) ?x2854 (ite (and (distinct ((_ extract 17 15) C1) (_ bv0 3)) true) ?x3679 ?x3902))))
 (let ((?x5759 (ite (and (distinct ((_ extract 25 25) C1) (_ bv0 1)) true) (_ bv25 45) (ite (and (distinct ((_ extract 24 24) C1) (_ bv0 1)) true) (_ bv24 45) (_ bv23 45)))))
 (let ((?x1467 (ite (and (distinct ((_ extract 28 28) C1) (_ bv0 1)) true) (_ bv28 45) (ite (and (distinct ((_ extract 27 27) C1) (_ bv0 1)) true) (_ bv27 45) (_ bv26 45)))))
 (let ((?x3712 (ite (and (distinct ((_ extract 31 31) C1) (_ bv0 1)) true) (_ bv31 45) (ite (and (distinct ((_ extract 30 30) C1) (_ bv0 1)) true) (_ bv30 45) (_ bv29 45)))))
 (let ((?x5373 (ite (and (distinct ((_ extract 33 32) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 33 33) C1) (_ bv0 1)) true) (_ bv33 45) (_ bv32 45)) ?x3712)))
 (let ((?x1455 (ite (and (distinct ((_ extract 33 29) C1) (_ bv0 5)) true) ?x5373 (ite (and (distinct ((_ extract 28 26) C1) (_ bv0 3)) true) ?x1467 ?x5759))))
 (let ((?x4836 (ite (and (distinct ((_ extract 36 36) C1) (_ bv0 1)) true) (_ bv36 45) (ite (and (distinct ((_ extract 35 35) C1) (_ bv0 1)) true) (_ bv35 45) (_ bv34 45)))))
 (let ((?x1271 (ite (and (distinct ((_ extract 39 39) C1) (_ bv0 1)) true) (_ bv39 45) (ite (and (distinct ((_ extract 38 38) C1) (_ bv0 1)) true) (_ bv38 45) (_ bv37 45)))))
 (let ((?x1994 (ite (and (distinct ((_ extract 42 42) C1) (_ bv0 1)) true) (_ bv42 45) (ite (and (distinct ((_ extract 41 41) C1) (_ bv0 1)) true) (_ bv41 45) (_ bv40 45)))))
 (let ((?x5390 (ite (and (distinct ((_ extract 44 43) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 44 44) C1) (_ bv0 1)) true) (_ bv44 45) (_ bv43 45)) ?x1994)))
 (let ((?x4474 (ite (and (distinct ((_ extract 44 40) C1) (_ bv0 5)) true) ?x5390 (ite (and (distinct ((_ extract 39 37) C1) (_ bv0 3)) true) ?x1271 ?x4836))))
 (let ((?x4079 (ite (and (distinct ((_ extract 44 23) C1) (_ bv0 22)) true) (ite (and (distinct ((_ extract 44 34) C1) (_ bv0 11)) true) ?x4474 ?x1455) (ite (and (distinct ((_ extract 22 12) C1) (_ bv0 11)) true) ?x3613 ?x3797))))
 (let ((?x4145 (bvsub ?x4079 ?x3443)))
 (let ((?x4513 (bvand %X C1)))
 (let ((?x4648 (bvor %Y C2)))
 (let (($x5598 (and (distinct (ite (= (ite (and (distinct ?x4513 (_ bv0 45)) true) (_ bv1 1) (_ bv0 1)) (_ bv1 1)) %Y ?x4648) (bvor (bvxor ((_ extract 10 0) (bvlshr ?x4513 ?x4145)) C2) %Y)) true)))
 (let ((?x3415 (ite (and (distinct ((_ extract 2 2) C1) (_ bv0 1)) true) (_ bv2 32) (ite (and (distinct ((_ extract 1 1) C1) (_ bv0 1)) true) (_ bv1 32) (_ bv0 32)))))
 (let ((?x3285 (ite (and (distinct ((_ extract 5 5) C1) (_ bv0 1)) true) (_ bv5 32) (ite (and (distinct ((_ extract 4 4) C1) (_ bv0 1)) true) (_ bv4 32) (_ bv3 32)))))
 (let ((?x6787 (ite (and (distinct ((_ extract 8 8) C1) (_ bv0 1)) true) (_ bv8 32) (ite (and (distinct ((_ extract 7 7) C1) (_ bv0 1)) true) (_ bv7 32) (_ bv6 32)))))
 (let ((?x3557 (ite (and (distinct ((_ extract 11 11) C1) (_ bv0 1)) true) (_ bv11 32) (ite (and (distinct ((_ extract 10 10) C1) (_ bv0 1)) true) (_ bv10 32) (_ bv9 32)))))
 (let ((?x3731 (ite (and (distinct ((_ extract 11 6) C1) (_ bv0 6)) true) (ite (and (distinct ((_ extract 11 9) C1) (_ bv0 3)) true) ?x3557 ?x6787) (ite (and (distinct ((_ extract 5 3) C1) (_ bv0 3)) true) ?x3285 ?x3415))))
 (let ((?x5051 (ite (and (distinct ((_ extract 14 14) C1) (_ bv0 1)) true) (_ bv14 32) (ite (and (distinct ((_ extract 13 13) C1) (_ bv0 1)) true) (_ bv13 32) (_ bv12 32)))))
 (let ((?x6343 (ite (and (distinct ((_ extract 17 17) C1) (_ bv0 1)) true) (_ bv17 32) (ite (and (distinct ((_ extract 16 16) C1) (_ bv0 1)) true) (_ bv16 32) (_ bv15 32)))))
 (let ((?x3771 (ite (and (distinct ((_ extract 20 20) C1) (_ bv0 1)) true) (_ bv20 32) (ite (and (distinct ((_ extract 19 19) C1) (_ bv0 1)) true) (_ bv19 32) (_ bv18 32)))))
 (let ((?x5842 (ite (and (distinct ((_ extract 22 21) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 22 22) C1) (_ bv0 1)) true) (_ bv22 32) (_ bv21 32)) ?x3771)))
 (let ((?x1878 (ite (and (distinct ((_ extract 22 18) C1) (_ bv0 5)) true) ?x5842 (ite (and (distinct ((_ extract 17 15) C1) (_ bv0 3)) true) ?x6343 ?x5051))))
 (let ((?x4475 (ite (and (distinct ((_ extract 25 25) C1) (_ bv0 1)) true) (_ bv25 32) (ite (and (distinct ((_ extract 24 24) C1) (_ bv0 1)) true) (_ bv24 32) (_ bv23 32)))))
 (let ((?x3052 (ite (and (distinct ((_ extract 28 28) C1) (_ bv0 1)) true) (_ bv28 32) (ite (and (distinct ((_ extract 27 27) C1) (_ bv0 1)) true) (_ bv27 32) (_ bv26 32)))))
 (let ((?x2323 (ite (and (distinct ((_ extract 31 31) C1) (_ bv0 1)) true) (_ bv31 32) (ite (and (distinct ((_ extract 30 30) C1) (_ bv0 1)) true) (_ bv30 32) (_ bv29 32)))))
 (let ((?x2280 (ite (and (distinct ((_ extract 33 32) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 33 33) C1) (_ bv0 1)) true) (_ bv33 32) (_ bv32 32)) ?x2323)))
 (let ((?x4075 (ite (and (distinct ((_ extract 33 29) C1) (_ bv0 5)) true) ?x2280 (ite (and (distinct ((_ extract 28 26) C1) (_ bv0 3)) true) ?x3052 ?x4475))))
 (let ((?x2758 (ite (and (distinct ((_ extract 36 36) C1) (_ bv0 1)) true) (_ bv36 32) (ite (and (distinct ((_ extract 35 35) C1) (_ bv0 1)) true) (_ bv35 32) (_ bv34 32)))))
 (let ((?x2189 (ite (and (distinct ((_ extract 39 39) C1) (_ bv0 1)) true) (_ bv39 32) (ite (and (distinct ((_ extract 38 38) C1) (_ bv0 1)) true) (_ bv38 32) (_ bv37 32)))))
 (let ((?x3292 (ite (and (distinct ((_ extract 42 42) C1) (_ bv0 1)) true) (_ bv42 32) (ite (and (distinct ((_ extract 41 41) C1) (_ bv0 1)) true) (_ bv41 32) (_ bv40 32)))))
 (let ((?x2651 (ite (and (distinct ((_ extract 44 43) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 44 44) C1) (_ bv0 1)) true) (_ bv44 32) (_ bv43 32)) ?x3292)))
 (let ((?x2246 (ite (and (distinct ((_ extract 44 40) C1) (_ bv0 5)) true) ?x2651 (ite (and (distinct ((_ extract 39 37) C1) (_ bv0 3)) true) ?x2189 ?x2758))))
 (let ((?x1204 (ite (and (distinct ((_ extract 44 23) C1) (_ bv0 22)) true) (ite (and (distinct ((_ extract 44 34) C1) (_ bv0 11)) true) ?x2246 ?x4075) (ite (and (distinct ((_ extract 22 12) C1) (_ bv0 11)) true) ?x1878 ?x3731))))
 (let ((?x3198 (ite (and (distinct ((_ extract 2 2) C2) (_ bv0 1)) true) (_ bv2 32) (ite (and (distinct ((_ extract 1 1) C2) (_ bv0 1)) true) (_ bv1 32) (_ bv0 32)))))
 (let ((?x6266 (ite (and (distinct ((_ extract 5 5) C2) (_ bv0 1)) true) (_ bv5 32) (ite (and (distinct ((_ extract 4 4) C2) (_ bv0 1)) true) (_ bv4 32) (_ bv3 32)))))
 (let ((?x6260 (ite (and (distinct ((_ extract 8 8) C2) (_ bv0 1)) true) (_ bv8 32) (ite (and (distinct ((_ extract 7 7) C2) (_ bv0 1)) true) (_ bv7 32) (_ bv6 32)))))
 (let ((?x6254 (ite (and (distinct ((_ extract 10 9) C2) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) C2) (_ bv0 1)) true) (_ bv10 32) (_ bv9 32)) ?x6260)))
 (let ((?x3775 (ite (and (distinct ((_ extract 10 6) C2) (_ bv0 5)) true) ?x6254 (ite (and (distinct ((_ extract 5 3) C2) (_ bv0 3)) true) ?x6266 ?x3198))))
 (and (and (and (distinct C1 (_ bv0 45)) true) (= (bvand C1 (bvsub C1 (_ bv1 45))) (_ bv0 45))) (and (and (distinct C2 (_ bv0 11)) true) (= (bvand C2 (bvsub C2 (_ bv1 11))) (_ bv0 11))) (bvslt ?x3775 ?x1204) $x5598))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
