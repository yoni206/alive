(set-info :status unknown)
(declare-fun mem0 () (_ BitVec 8))
(declare-fun alloca%a_3013 () (_ BitVec 8))
(declare-fun %a () (_ BitVec 64))
(declare-fun idx () (_ BitVec 64))
(declare-fun %x () (_ BitVec 5))
(declare-fun %idx () (_ BitVec 26))
(declare-fun u_%a () (_ BitVec 8))
(declare-fun u_%ptr () (_ BitVec 8))
(assert
 (forall ((alloca%a_3012 (_ BitVec 8)) (alloca%a_3014 (_ BitVec 8)) )(let (($x11747 (= idx (bvadd %a (_ bv0 64)))))
 (let ((?x10181 (ite $x11747 ((_ extract 7 0) alloca%a_3013) mem0)))
 (let ((?x2513 (ite (= (bvadd %a (bvmul (_ bv1 64) ((_ sign_extend 38) %idx))) (bvadd %a (_ bv0 64))) ((_ extract 7 0) alloca%a_3012) mem0)))
 (let (($x12598 (bvuge (_ bv0 64) (bvsub (bvadd %a (bvmul (_ bv1 64) ((_ sign_extend 38) %idx))) %a))))
 (let (($x15811 (and (distinct %a (_ bv0 64)) true)))
 (let (($x19638 (and $x15811 (and (distinct (bvadd %a (bvmul (_ bv1 64) ((_ sign_extend 38) %idx))) (_ bv0 64)) true) (and (bvuge (bvadd %a (bvmul (_ bv1 64) ((_ sign_extend 38) %idx))) %a) $x12598) (= idx (bvadd %a (bvmul (_ bv1 64) ((_ sign_extend 38) %idx)))))))
 (let ((?x16207 (ite $x19638 (concat ((_ extract 7 5) ?x2513) ((_ extract 4 0) %x)) (ite $x11747 ((_ extract 7 0) alloca%a_3012) mem0))))
 (and $x15811 $x15811 (= u_%ptr (_ bv1 8)) (= u_%a (_ bv1 8)) $x15811 $x15811 $x15811 (and (distinct (ite $x11747 ((_ extract 7 0) alloca%a_3014) ?x16207) ?x10181) true))))))))))
 )
(check-sat)
