(set-info :status unknown)
(declare-fun C2 () (_ BitVec 11))
(declare-fun C3 () (_ BitVec 11))
(declare-fun C () (_ BitVec 62))
(declare-fun %Op () (_ BitVec 62))
(assert
 (let ((?x5585 (ite (and (distinct ((_ extract 2 2) (bvsub C3 C2)) (_ bv0 1)) true) (_ bv2 11) (ite (and (distinct ((_ extract 1 1) (bvsub C3 C2)) (_ bv0 1)) true) (_ bv1 11) (_ bv0 11)))))
 (let ((?x5208 (ite (and (distinct ((_ extract 5 5) (bvsub C3 C2)) (_ bv0 1)) true) (_ bv5 11) (ite (and (distinct ((_ extract 4 4) (bvsub C3 C2)) (_ bv0 1)) true) (_ bv4 11) (_ bv3 11)))))
 (let ((?x3834 (ite (and (distinct ((_ extract 8 8) (bvsub C3 C2)) (_ bv0 1)) true) (_ bv8 11) (ite (and (distinct ((_ extract 7 7) (bvsub C3 C2)) (_ bv0 1)) true) (_ bv7 11) (_ bv6 11)))))
 (let ((?x6797 (ite (and (distinct ((_ extract 10 9) (bvsub C3 C2)) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) (bvsub C3 C2)) (_ bv0 1)) true) (_ bv10 11) (_ bv9 11)) ?x3834)))
 (let ((?x4691 (ite (and (distinct ((_ extract 10 6) (bvsub C3 C2)) (_ bv0 5)) true) ?x6797 (ite (and (distinct ((_ extract 5 3) (bvsub C3 C2)) (_ bv0 3)) true) ?x5208 ?x5585))))
 (let ((?x3415 (ite (and (distinct ((_ extract 3 2) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 3 3) C) (_ bv0 1)) true) (_ bv3 11) (_ bv2 11)) (ite (and (distinct ((_ extract 1 1) C) (_ bv0 1)) true) (_ bv1 11) (_ bv0 11)))))
 (let ((?x1447 (ite (and (distinct ((_ extract 7 6) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 7 7) C) (_ bv0 1)) true) (_ bv7 11) (_ bv6 11)) (ite (and (distinct ((_ extract 5 5) C) (_ bv0 1)) true) (_ bv5 11) (_ bv4 11)))))
 (let ((?x1354 (ite (and (distinct ((_ extract 11 10) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 11 11) C) (_ bv0 1)) true) (_ bv11 11) (_ bv10 11)) (ite (and (distinct ((_ extract 9 9) C) (_ bv0 1)) true) (_ bv9 11) (_ bv8 11)))))
 (let ((?x7878 (ite (and (distinct ((_ extract 15 14) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 15 15) C) (_ bv0 1)) true) (_ bv15 11) (_ bv14 11)) (ite (and (distinct ((_ extract 13 13) C) (_ bv0 1)) true) (_ bv13 11) (_ bv12 11)))))
 (let ((?x3489 (ite (and (distinct ((_ extract 15 8) C) (_ bv0 8)) true) (ite (and (distinct ((_ extract 15 12) C) (_ bv0 4)) true) ?x7878 ?x1354) (ite (and (distinct ((_ extract 7 4) C) (_ bv0 4)) true) ?x1447 ?x3415))))
 (let ((?x4534 (ite (and (distinct ((_ extract 19 18) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 19 19) C) (_ bv0 1)) true) (_ bv19 11) (_ bv18 11)) (ite (and (distinct ((_ extract 17 17) C) (_ bv0 1)) true) (_ bv17 11) (_ bv16 11)))))
 (let ((?x6475 (ite (and (distinct ((_ extract 23 22) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 23 23) C) (_ bv0 1)) true) (_ bv23 11) (_ bv22 11)) (ite (and (distinct ((_ extract 21 21) C) (_ bv0 1)) true) (_ bv21 11) (_ bv20 11)))))
 (let ((?x2873 (ite (and (distinct ((_ extract 27 26) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 27 27) C) (_ bv0 1)) true) (_ bv27 11) (_ bv26 11)) (ite (and (distinct ((_ extract 25 25) C) (_ bv0 1)) true) (_ bv25 11) (_ bv24 11)))))
 (let ((?x8361 (ite (and (distinct ((_ extract 30 30) C) (_ bv0 1)) true) (_ bv30 11) (ite (and (distinct ((_ extract 29 29) C) (_ bv0 1)) true) (_ bv29 11) (_ bv28 11)))))
 (let ((?x8017 (ite (and (distinct ((_ extract 30 24) C) (_ bv0 7)) true) (ite (and (distinct ((_ extract 30 28) C) (_ bv0 3)) true) ?x8361 ?x2873) (ite (and (distinct ((_ extract 23 20) C) (_ bv0 4)) true) ?x6475 ?x4534))))
 (let ((?x7274 (ite (and (distinct ((_ extract 34 33) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 34 34) C) (_ bv0 1)) true) (_ bv34 11) (_ bv33 11)) (ite (and (distinct ((_ extract 32 32) C) (_ bv0 1)) true) (_ bv32 11) (_ bv31 11)))))
 (let ((?x5692 (ite (and (distinct ((_ extract 38 37) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 38 38) C) (_ bv0 1)) true) (_ bv38 11) (_ bv37 11)) (ite (and (distinct ((_ extract 36 36) C) (_ bv0 1)) true) (_ bv36 11) (_ bv35 11)))))
 (let ((?x2960 (ite (and (distinct ((_ extract 42 41) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 42 42) C) (_ bv0 1)) true) (_ bv42 11) (_ bv41 11)) (ite (and (distinct ((_ extract 40 40) C) (_ bv0 1)) true) (_ bv40 11) (_ bv39 11)))))
 (let ((?x3726 (ite (and (distinct ((_ extract 46 45) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 46 46) C) (_ bv0 1)) true) (_ bv46 11) (_ bv45 11)) (ite (and (distinct ((_ extract 44 44) C) (_ bv0 1)) true) (_ bv44 11) (_ bv43 11)))))
 (let ((?x6775 (ite (and (distinct ((_ extract 46 39) C) (_ bv0 8)) true) (ite (and (distinct ((_ extract 46 43) C) (_ bv0 4)) true) ?x3726 ?x2960) (ite (and (distinct ((_ extract 38 35) C) (_ bv0 4)) true) ?x5692 ?x7274))))
 (let ((?x2537 (ite (and (distinct ((_ extract 50 49) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 50 50) C) (_ bv0 1)) true) (_ bv50 11) (_ bv49 11)) (ite (and (distinct ((_ extract 48 48) C) (_ bv0 1)) true) (_ bv48 11) (_ bv47 11)))))
 (let ((?x6087 (ite (and (distinct ((_ extract 54 53) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 54 54) C) (_ bv0 1)) true) (_ bv54 11) (_ bv53 11)) (ite (and (distinct ((_ extract 52 52) C) (_ bv0 1)) true) (_ bv52 11) (_ bv51 11)))))
 (let ((?x5471 (ite (and (distinct ((_ extract 58 57) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 58 58) C) (_ bv0 1)) true) (_ bv58 11) (_ bv57 11)) (ite (and (distinct ((_ extract 56 56) C) (_ bv0 1)) true) (_ bv56 11) (_ bv55 11)))))
 (let ((?x4354 (ite (and (distinct ((_ extract 61 61) C) (_ bv0 1)) true) (_ bv61 11) (ite (and (distinct ((_ extract 60 60) C) (_ bv0 1)) true) (_ bv60 11) (_ bv59 11)))))
 (let ((?x7884 (ite (and (distinct ((_ extract 61 55) C) (_ bv0 7)) true) (ite (and (distinct ((_ extract 61 59) C) (_ bv0 3)) true) ?x4354 ?x5471) (ite (and (distinct ((_ extract 54 51) C) (_ bv0 4)) true) ?x6087 ?x2537))))
 (let ((?x2470 (ite (and (distinct ((_ extract 61 31) C) (_ bv0 31)) true) (ite (and (distinct ((_ extract 61 47) C) (_ bv0 15)) true) ?x7884 ?x6775) (ite (and (distinct ((_ extract 30 16) C) (_ bv0 15)) true) ?x8017 ?x3489))))
 (let ((?x2390 (bvsub ?x2470 ?x4691)))
 (let ((?x3800 (ite (bvsgt (_ bv0 11) ?x2390) (_ bv0 11) ?x2390)))
 (let ((?x4302 (bvsub ?x4691 ?x2470)))
 (let ((?x3338 (ite (bvsgt (_ bv0 11) ?x4302) (_ bv0 11) ?x4302)))
 (let (($x5483 (and (distinct (ite (= (ite (= (bvand %Op C) (_ bv0 62)) (_ bv1 1) (_ bv0 1)) (_ bv1 1)) C2 C3) (bvadd (bvlshr (bvshl ((_ extract 10 0) (bvand %Op C)) ?x3338) ?x3800) C2)) true)))
 (let ((?x4793 (ite (and (distinct ((_ extract 3 2) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 3 3) C) (_ bv0 1)) true) (_ bv3 32) (_ bv2 32)) (ite (and (distinct ((_ extract 1 1) C) (_ bv0 1)) true) (_ bv1 32) (_ bv0 32)))))
 (let ((?x7306 (ite (and (distinct ((_ extract 7 6) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 7 7) C) (_ bv0 1)) true) (_ bv7 32) (_ bv6 32)) (ite (and (distinct ((_ extract 5 5) C) (_ bv0 1)) true) (_ bv5 32) (_ bv4 32)))))
 (let ((?x7387 (ite (and (distinct ((_ extract 11 10) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 11 11) C) (_ bv0 1)) true) (_ bv11 32) (_ bv10 32)) (ite (and (distinct ((_ extract 9 9) C) (_ bv0 1)) true) (_ bv9 32) (_ bv8 32)))))
 (let ((?x2916 (ite (and (distinct ((_ extract 15 14) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 15 15) C) (_ bv0 1)) true) (_ bv15 32) (_ bv14 32)) (ite (and (distinct ((_ extract 13 13) C) (_ bv0 1)) true) (_ bv13 32) (_ bv12 32)))))
 (let ((?x7477 (ite (and (distinct ((_ extract 15 8) C) (_ bv0 8)) true) (ite (and (distinct ((_ extract 15 12) C) (_ bv0 4)) true) ?x2916 ?x7387) (ite (and (distinct ((_ extract 7 4) C) (_ bv0 4)) true) ?x7306 ?x4793))))
 (let ((?x8546 (ite (and (distinct ((_ extract 19 18) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 19 19) C) (_ bv0 1)) true) (_ bv19 32) (_ bv18 32)) (ite (and (distinct ((_ extract 17 17) C) (_ bv0 1)) true) (_ bv17 32) (_ bv16 32)))))
 (let ((?x6632 (ite (and (distinct ((_ extract 23 22) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 23 23) C) (_ bv0 1)) true) (_ bv23 32) (_ bv22 32)) (ite (and (distinct ((_ extract 21 21) C) (_ bv0 1)) true) (_ bv21 32) (_ bv20 32)))))
 (let ((?x5943 (ite (and (distinct ((_ extract 27 26) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 27 27) C) (_ bv0 1)) true) (_ bv27 32) (_ bv26 32)) (ite (and (distinct ((_ extract 25 25) C) (_ bv0 1)) true) (_ bv25 32) (_ bv24 32)))))
 (let ((?x5237 (ite (and (distinct ((_ extract 30 30) C) (_ bv0 1)) true) (_ bv30 32) (ite (and (distinct ((_ extract 29 29) C) (_ bv0 1)) true) (_ bv29 32) (_ bv28 32)))))
 (let ((?x8257 (ite (and (distinct ((_ extract 30 24) C) (_ bv0 7)) true) (ite (and (distinct ((_ extract 30 28) C) (_ bv0 3)) true) ?x5237 ?x5943) (ite (and (distinct ((_ extract 23 20) C) (_ bv0 4)) true) ?x6632 ?x8546))))
 (let ((?x4044 (ite (and (distinct ((_ extract 34 33) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 34 34) C) (_ bv0 1)) true) (_ bv34 32) (_ bv33 32)) (ite (and (distinct ((_ extract 32 32) C) (_ bv0 1)) true) (_ bv32 32) (_ bv31 32)))))
 (let ((?x3152 (ite (and (distinct ((_ extract 38 37) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 38 38) C) (_ bv0 1)) true) (_ bv38 32) (_ bv37 32)) (ite (and (distinct ((_ extract 36 36) C) (_ bv0 1)) true) (_ bv36 32) (_ bv35 32)))))
 (let ((?x2372 (ite (and (distinct ((_ extract 42 41) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 42 42) C) (_ bv0 1)) true) (_ bv42 32) (_ bv41 32)) (ite (and (distinct ((_ extract 40 40) C) (_ bv0 1)) true) (_ bv40 32) (_ bv39 32)))))
 (let ((?x1923 (ite (and (distinct ((_ extract 46 45) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 46 46) C) (_ bv0 1)) true) (_ bv46 32) (_ bv45 32)) (ite (and (distinct ((_ extract 44 44) C) (_ bv0 1)) true) (_ bv44 32) (_ bv43 32)))))
 (let ((?x4845 (ite (and (distinct ((_ extract 46 39) C) (_ bv0 8)) true) (ite (and (distinct ((_ extract 46 43) C) (_ bv0 4)) true) ?x1923 ?x2372) (ite (and (distinct ((_ extract 38 35) C) (_ bv0 4)) true) ?x3152 ?x4044))))
 (let ((?x1482 (ite (and (distinct ((_ extract 50 49) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 50 50) C) (_ bv0 1)) true) (_ bv50 32) (_ bv49 32)) (ite (and (distinct ((_ extract 48 48) C) (_ bv0 1)) true) (_ bv48 32) (_ bv47 32)))))
 (let ((?x7408 (ite (and (distinct ((_ extract 54 53) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 54 54) C) (_ bv0 1)) true) (_ bv54 32) (_ bv53 32)) (ite (and (distinct ((_ extract 52 52) C) (_ bv0 1)) true) (_ bv52 32) (_ bv51 32)))))
 (let ((?x6276 (ite (and (distinct ((_ extract 58 57) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 58 58) C) (_ bv0 1)) true) (_ bv58 32) (_ bv57 32)) (ite (and (distinct ((_ extract 56 56) C) (_ bv0 1)) true) (_ bv56 32) (_ bv55 32)))))
 (let ((?x3591 (ite (and (distinct ((_ extract 61 61) C) (_ bv0 1)) true) (_ bv61 32) (ite (and (distinct ((_ extract 60 60) C) (_ bv0 1)) true) (_ bv60 32) (_ bv59 32)))))
 (let ((?x1339 (ite (and (distinct ((_ extract 61 55) C) (_ bv0 7)) true) (ite (and (distinct ((_ extract 61 59) C) (_ bv0 3)) true) ?x3591 ?x6276) (ite (and (distinct ((_ extract 54 51) C) (_ bv0 4)) true) ?x7408 ?x1482))))
 (let ((?x6638 (ite (and (distinct ((_ extract 61 31) C) (_ bv0 31)) true) (ite (and (distinct ((_ extract 61 47) C) (_ bv0 15)) true) ?x1339 ?x4845) (ite (and (distinct ((_ extract 30 16) C) (_ bv0 15)) true) ?x8257 ?x7477))))
 (let (($x2446 (and (and (distinct (bvsub C3 C2) (_ bv0 11)) true) (= (bvand (bvsub C3 C2) (bvsub (bvsub C3 C2) (_ bv1 11))) (_ bv0 11)))))
 (and (and (and (distinct C (_ bv0 62)) true) (= (bvand C (bvsub C (_ bv1 62))) (_ bv0 62))) $x2446 (bvslt ?x6638 (_ bv11 32)) $x5483)))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
