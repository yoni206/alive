(set-info :status unknown)
(declare-fun C2 () (_ BitVec 11))
(declare-fun C1 () (_ BitVec 60))
(assert
 (let ((?x18639 (ite (and (distinct ((_ extract 2 2) C2) (_ bv0 1)) true) (_ bv2 60) (ite (and (distinct ((_ extract 1 1) C2) (_ bv0 1)) true) (_ bv1 60) (_ bv0 60)))))
 (let ((?x11515 (ite (and (distinct ((_ extract 5 5) C2) (_ bv0 1)) true) (_ bv5 60) (ite (and (distinct ((_ extract 4 4) C2) (_ bv0 1)) true) (_ bv4 60) (_ bv3 60)))))
 (let ((?x16211 (ite (and (distinct ((_ extract 8 8) C2) (_ bv0 1)) true) (_ bv8 60) (ite (and (distinct ((_ extract 7 7) C2) (_ bv0 1)) true) (_ bv7 60) (_ bv6 60)))))
 (let ((?x6186 (ite (and (distinct ((_ extract 10 9) C2) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) C2) (_ bv0 1)) true) (_ bv10 60) (_ bv9 60)) ?x16211)))
 (let ((?x9417 (ite (and (distinct ((_ extract 10 6) C2) (_ bv0 5)) true) ?x6186 (ite (and (distinct ((_ extract 5 3) C2) (_ bv0 3)) true) ?x11515 ?x18639))))
 (let ((?x23273 (ite (and (distinct ((_ extract 3 2) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 3 3) C1) (_ bv0 1)) true) (_ bv3 60) (_ bv2 60)) (ite (and (distinct ((_ extract 1 1) C1) (_ bv0 1)) true) (_ bv1 60) (_ bv0 60)))))
 (let ((?x3442 (ite (and (distinct ((_ extract 7 6) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 7 7) C1) (_ bv0 1)) true) (_ bv7 60) (_ bv6 60)) (ite (and (distinct ((_ extract 5 5) C1) (_ bv0 1)) true) (_ bv5 60) (_ bv4 60)))))
 (let ((?x13011 (ite (and (distinct ((_ extract 11 10) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 11 11) C1) (_ bv0 1)) true) (_ bv11 60) (_ bv10 60)) (ite (and (distinct ((_ extract 9 9) C1) (_ bv0 1)) true) (_ bv9 60) (_ bv8 60)))))
 (let ((?x10856 (ite (and (distinct ((_ extract 14 14) C1) (_ bv0 1)) true) (_ bv14 60) (ite (and (distinct ((_ extract 13 13) C1) (_ bv0 1)) true) (_ bv13 60) (_ bv12 60)))))
 (let ((?x5996 (ite (and (distinct ((_ extract 14 8) C1) (_ bv0 7)) true) (ite (and (distinct ((_ extract 14 12) C1) (_ bv0 3)) true) ?x10856 ?x13011) (ite (and (distinct ((_ extract 7 4) C1) (_ bv0 4)) true) ?x3442 ?x23273))))
 (let ((?x16379 (ite (and (distinct ((_ extract 18 17) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 18 18) C1) (_ bv0 1)) true) (_ bv18 60) (_ bv17 60)) (ite (and (distinct ((_ extract 16 16) C1) (_ bv0 1)) true) (_ bv16 60) (_ bv15 60)))))
 (let ((?x10526 (ite (and (distinct ((_ extract 22 21) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 22 22) C1) (_ bv0 1)) true) (_ bv22 60) (_ bv21 60)) (ite (and (distinct ((_ extract 20 20) C1) (_ bv0 1)) true) (_ bv20 60) (_ bv19 60)))))
 (let ((?x14232 (ite (and (distinct ((_ extract 26 25) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 26 26) C1) (_ bv0 1)) true) (_ bv26 60) (_ bv25 60)) (ite (and (distinct ((_ extract 24 24) C1) (_ bv0 1)) true) (_ bv24 60) (_ bv23 60)))))
 (let ((?x2552 (ite (and (distinct ((_ extract 29 29) C1) (_ bv0 1)) true) (_ bv29 60) (ite (and (distinct ((_ extract 28 28) C1) (_ bv0 1)) true) (_ bv28 60) (_ bv27 60)))))
 (let ((?x2007 (ite (and (distinct ((_ extract 29 23) C1) (_ bv0 7)) true) (ite (and (distinct ((_ extract 29 27) C1) (_ bv0 3)) true) ?x2552 ?x14232) (ite (and (distinct ((_ extract 22 19) C1) (_ bv0 4)) true) ?x10526 ?x16379))))
 (let ((?x796 (ite (and (distinct ((_ extract 33 32) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 33 33) C1) (_ bv0 1)) true) (_ bv33 60) (_ bv32 60)) (ite (and (distinct ((_ extract 31 31) C1) (_ bv0 1)) true) (_ bv31 60) (_ bv30 60)))))
 (let ((?x8936 (ite (and (distinct ((_ extract 37 36) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 37 37) C1) (_ bv0 1)) true) (_ bv37 60) (_ bv36 60)) (ite (and (distinct ((_ extract 35 35) C1) (_ bv0 1)) true) (_ bv35 60) (_ bv34 60)))))
 (let ((?x23341 (ite (and (distinct ((_ extract 41 40) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 41 41) C1) (_ bv0 1)) true) (_ bv41 60) (_ bv40 60)) (ite (and (distinct ((_ extract 39 39) C1) (_ bv0 1)) true) (_ bv39 60) (_ bv38 60)))))
 (let ((?x23528 (ite (and (distinct ((_ extract 44 44) C1) (_ bv0 1)) true) (_ bv44 60) (ite (and (distinct ((_ extract 43 43) C1) (_ bv0 1)) true) (_ bv43 60) (_ bv42 60)))))
 (let ((?x9542 (ite (and (distinct ((_ extract 44 38) C1) (_ bv0 7)) true) (ite (and (distinct ((_ extract 44 42) C1) (_ bv0 3)) true) ?x23528 ?x23341) (ite (and (distinct ((_ extract 37 34) C1) (_ bv0 4)) true) ?x8936 ?x796))))
 (let ((?x536 (ite (and (distinct ((_ extract 48 47) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 48 48) C1) (_ bv0 1)) true) (_ bv48 60) (_ bv47 60)) (ite (and (distinct ((_ extract 46 46) C1) (_ bv0 1)) true) (_ bv46 60) (_ bv45 60)))))
 (let ((?x5987 (ite (and (distinct ((_ extract 52 51) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 52 52) C1) (_ bv0 1)) true) (_ bv52 60) (_ bv51 60)) (ite (and (distinct ((_ extract 50 50) C1) (_ bv0 1)) true) (_ bv50 60) (_ bv49 60)))))
 (let ((?x15312 (ite (and (distinct ((_ extract 56 55) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 56 56) C1) (_ bv0 1)) true) (_ bv56 60) (_ bv55 60)) (ite (and (distinct ((_ extract 54 54) C1) (_ bv0 1)) true) (_ bv54 60) (_ bv53 60)))))
 (let ((?x21183 (ite (and (distinct ((_ extract 59 59) C1) (_ bv0 1)) true) (_ bv59 60) (ite (and (distinct ((_ extract 58 58) C1) (_ bv0 1)) true) (_ bv58 60) (_ bv57 60)))))
 (let ((?x383 (ite (and (distinct ((_ extract 59 53) C1) (_ bv0 7)) true) (ite (and (distinct ((_ extract 59 57) C1) (_ bv0 3)) true) ?x21183 ?x15312) (ite (and (distinct ((_ extract 52 49) C1) (_ bv0 4)) true) ?x5987 ?x536))))
 (let ((?x17915 (ite (and (distinct ((_ extract 59 30) C1) (_ bv0 30)) true) (ite (and (distinct ((_ extract 59 45) C1) (_ bv0 15)) true) ?x383 ?x9542) (ite (and (distinct ((_ extract 29 15) C1) (_ bv0 15)) true) ?x2007 ?x5996))))
 (let ((?x16980 (bvsub ?x17915 ?x9417)))
 (let ((?x10571 (ite (and (distinct ((_ extract 3 2) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 3 3) C1) (_ bv0 1)) true) (_ bv3 32) (_ bv2 32)) (ite (and (distinct ((_ extract 1 1) C1) (_ bv0 1)) true) (_ bv1 32) (_ bv0 32)))))
 (let ((?x16847 (ite (and (distinct ((_ extract 7 6) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 7 7) C1) (_ bv0 1)) true) (_ bv7 32) (_ bv6 32)) (ite (and (distinct ((_ extract 5 5) C1) (_ bv0 1)) true) (_ bv5 32) (_ bv4 32)))))
 (let ((?x17959 (ite (and (distinct ((_ extract 11 10) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 11 11) C1) (_ bv0 1)) true) (_ bv11 32) (_ bv10 32)) (ite (and (distinct ((_ extract 9 9) C1) (_ bv0 1)) true) (_ bv9 32) (_ bv8 32)))))
 (let ((?x3456 (ite (and (distinct ((_ extract 14 14) C1) (_ bv0 1)) true) (_ bv14 32) (ite (and (distinct ((_ extract 13 13) C1) (_ bv0 1)) true) (_ bv13 32) (_ bv12 32)))))
 (let ((?x14237 (ite (and (distinct ((_ extract 14 8) C1) (_ bv0 7)) true) (ite (and (distinct ((_ extract 14 12) C1) (_ bv0 3)) true) ?x3456 ?x17959) (ite (and (distinct ((_ extract 7 4) C1) (_ bv0 4)) true) ?x16847 ?x10571))))
 (let ((?x23551 (ite (and (distinct ((_ extract 18 17) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 18 18) C1) (_ bv0 1)) true) (_ bv18 32) (_ bv17 32)) (ite (and (distinct ((_ extract 16 16) C1) (_ bv0 1)) true) (_ bv16 32) (_ bv15 32)))))
 (let ((?x1652 (ite (and (distinct ((_ extract 22 21) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 22 22) C1) (_ bv0 1)) true) (_ bv22 32) (_ bv21 32)) (ite (and (distinct ((_ extract 20 20) C1) (_ bv0 1)) true) (_ bv20 32) (_ bv19 32)))))
 (let ((?x21499 (ite (and (distinct ((_ extract 26 25) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 26 26) C1) (_ bv0 1)) true) (_ bv26 32) (_ bv25 32)) (ite (and (distinct ((_ extract 24 24) C1) (_ bv0 1)) true) (_ bv24 32) (_ bv23 32)))))
 (let ((?x18337 (ite (and (distinct ((_ extract 29 29) C1) (_ bv0 1)) true) (_ bv29 32) (ite (and (distinct ((_ extract 28 28) C1) (_ bv0 1)) true) (_ bv28 32) (_ bv27 32)))))
 (let ((?x18224 (ite (and (distinct ((_ extract 29 23) C1) (_ bv0 7)) true) (ite (and (distinct ((_ extract 29 27) C1) (_ bv0 3)) true) ?x18337 ?x21499) (ite (and (distinct ((_ extract 22 19) C1) (_ bv0 4)) true) ?x1652 ?x23551))))
 (let ((?x18701 (ite (and (distinct ((_ extract 33 32) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 33 33) C1) (_ bv0 1)) true) (_ bv33 32) (_ bv32 32)) (ite (and (distinct ((_ extract 31 31) C1) (_ bv0 1)) true) (_ bv31 32) (_ bv30 32)))))
 (let ((?x14420 (ite (and (distinct ((_ extract 37 36) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 37 37) C1) (_ bv0 1)) true) (_ bv37 32) (_ bv36 32)) (ite (and (distinct ((_ extract 35 35) C1) (_ bv0 1)) true) (_ bv35 32) (_ bv34 32)))))
 (let ((?x15126 (ite (and (distinct ((_ extract 41 40) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 41 41) C1) (_ bv0 1)) true) (_ bv41 32) (_ bv40 32)) (ite (and (distinct ((_ extract 39 39) C1) (_ bv0 1)) true) (_ bv39 32) (_ bv38 32)))))
 (let ((?x10444 (ite (and (distinct ((_ extract 44 44) C1) (_ bv0 1)) true) (_ bv44 32) (ite (and (distinct ((_ extract 43 43) C1) (_ bv0 1)) true) (_ bv43 32) (_ bv42 32)))))
 (let ((?x24809 (ite (and (distinct ((_ extract 44 38) C1) (_ bv0 7)) true) (ite (and (distinct ((_ extract 44 42) C1) (_ bv0 3)) true) ?x10444 ?x15126) (ite (and (distinct ((_ extract 37 34) C1) (_ bv0 4)) true) ?x14420 ?x18701))))
 (let ((?x6671 (ite (and (distinct ((_ extract 48 47) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 48 48) C1) (_ bv0 1)) true) (_ bv48 32) (_ bv47 32)) (ite (and (distinct ((_ extract 46 46) C1) (_ bv0 1)) true) (_ bv46 32) (_ bv45 32)))))
 (let ((?x7714 (ite (and (distinct ((_ extract 52 51) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 52 52) C1) (_ bv0 1)) true) (_ bv52 32) (_ bv51 32)) (ite (and (distinct ((_ extract 50 50) C1) (_ bv0 1)) true) (_ bv50 32) (_ bv49 32)))))
 (let ((?x10272 (ite (and (distinct ((_ extract 56 55) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 56 56) C1) (_ bv0 1)) true) (_ bv56 32) (_ bv55 32)) (ite (and (distinct ((_ extract 54 54) C1) (_ bv0 1)) true) (_ bv54 32) (_ bv53 32)))))
 (let ((?x12226 (ite (and (distinct ((_ extract 59 59) C1) (_ bv0 1)) true) (_ bv59 32) (ite (and (distinct ((_ extract 58 58) C1) (_ bv0 1)) true) (_ bv58 32) (_ bv57 32)))))
 (let ((?x8274 (ite (and (distinct ((_ extract 59 53) C1) (_ bv0 7)) true) (ite (and (distinct ((_ extract 59 57) C1) (_ bv0 3)) true) ?x12226 ?x10272) (ite (and (distinct ((_ extract 52 49) C1) (_ bv0 4)) true) ?x7714 ?x6671))))
 (let ((?x19361 (ite (and (distinct ((_ extract 59 30) C1) (_ bv0 30)) true) (ite (and (distinct ((_ extract 59 45) C1) (_ bv0 15)) true) ?x8274 ?x24809) (ite (and (distinct ((_ extract 29 15) C1) (_ bv0 15)) true) ?x18224 ?x14237))))
 (let ((?x19976 (ite (and (distinct ((_ extract 2 2) C2) (_ bv0 1)) true) (_ bv2 32) (ite (and (distinct ((_ extract 1 1) C2) (_ bv0 1)) true) (_ bv1 32) (_ bv0 32)))))
 (let ((?x2233 (ite (and (distinct ((_ extract 5 5) C2) (_ bv0 1)) true) (_ bv5 32) (ite (and (distinct ((_ extract 4 4) C2) (_ bv0 1)) true) (_ bv4 32) (_ bv3 32)))))
 (let ((?x10320 (ite (and (distinct ((_ extract 8 8) C2) (_ bv0 1)) true) (_ bv8 32) (ite (and (distinct ((_ extract 7 7) C2) (_ bv0 1)) true) (_ bv7 32) (_ bv6 32)))))
 (let ((?x9613 (ite (and (distinct ((_ extract 10 9) C2) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) C2) (_ bv0 1)) true) (_ bv10 32) (_ bv9 32)) ?x10320)))
 (let ((?x5323 (ite (and (distinct ((_ extract 10 6) C2) (_ bv0 5)) true) ?x9613 (ite (and (distinct ((_ extract 5 3) C2) (_ bv0 3)) true) ?x2233 ?x19976))))
 (and (and (and (distinct C1 (_ bv0 60)) true) (= (bvand C1 (bvsub C1 (_ bv1 60))) (_ bv0 60))) (and (and (distinct C2 (_ bv0 11)) true) (= (bvand C2 (bvsub C2 (_ bv1 11))) (_ bv0 11))) (bvslt ?x5323 ?x19361) (not (bvult ?x16980 (_ bv60 60))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
