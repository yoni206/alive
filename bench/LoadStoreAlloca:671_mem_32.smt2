(set-info :status unknown)
(declare-fun mem0 () (_ BitVec 8))
(declare-fun %y () (_ BitVec 34))
(declare-fun %p2 () (_ BitVec 64))
(declare-fun idx () (_ BitVec 64))
(declare-fun %x () (_ BitVec 34))
(declare-fun %p1 () (_ BitVec 64))
(declare-fun |ana_equivalentAddressValues(%p1, %p2)| () (_ BitVec 1))
(assert
 (let ((?x4692 (ite (and (and (distinct %p2 (_ bv0 64)) true) (or true true) (= idx %p2)) (concat ((_ extract 7 2) mem0) ((_ extract 1 0) %y)) mem0)))
 (let (($x7397 (or true true)))
 (let (($x6308 (and (distinct %p2 (_ bv0 64)) true)))
 (let ((?x639 (ite (and $x6308 $x7397 (= idx (bvadd (bvadd %p2 (_ bv1 64)) (_ bv0 64)))) ((_ extract 9 2) %y) ?x4692)))
 (let ((?x6196 (ite (and $x6308 $x7397 (= idx (bvadd (bvadd %p2 (_ bv1 64)) (_ bv1 64)))) ((_ extract 17 10) %y) ?x639)))
 (let ((?x8802 (ite (and $x6308 $x7397 (= idx (bvadd (bvadd %p2 (_ bv1 64)) (_ bv2 64)))) ((_ extract 25 18) %y) ?x6196)))
 (let ((?x15086 (ite (and $x6308 $x7397 (= idx (bvadd (bvadd %p2 (_ bv1 64)) (_ bv3 64)))) ((_ extract 33 26) %y) ?x8802)))
 (let ((?x6060 (ite (and (and (distinct %p1 (_ bv0 64)) true) $x7397 (= idx %p1)) (concat ((_ extract 7 2) mem0) ((_ extract 1 0) %x)) mem0)))
 (let (($x17212 (and (distinct %p1 (_ bv0 64)) true)))
 (let ((?x5000 (ite (and $x17212 $x7397 (= idx (bvadd (bvadd %p1 (_ bv1 64)) (_ bv0 64)))) ((_ extract 9 2) %x) ?x6060)))
 (let ((?x3698 (ite (and $x17212 $x7397 (= idx (bvadd (bvadd %p1 (_ bv1 64)) (_ bv1 64)))) ((_ extract 17 10) %x) ?x5000)))
 (let ((?x1172 (ite (and $x17212 $x7397 (= idx (bvadd (bvadd %p1 (_ bv1 64)) (_ bv2 64)))) ((_ extract 25 18) %x) ?x3698)))
 (let ((?x12869 (ite (and $x17212 $x7397 (= idx (bvadd (bvadd %p1 (_ bv1 64)) (_ bv3 64)))) ((_ extract 33 26) %x) ?x1172)))
 (let ((?x21710 (ite (and $x17212 $x7397 (= %p2 %p1)) (concat ((_ extract 7 2) mem0) ((_ extract 1 0) %x)) mem0)))
 (let ((?x10663 (ite (and $x17212 $x7397 (= %p2 (bvadd (bvadd %p1 (_ bv1 64)) (_ bv0 64)))) ((_ extract 9 2) %x) ?x21710)))
 (let ((?x13334 (ite (and $x17212 $x7397 (= %p2 (bvadd (bvadd %p1 (_ bv1 64)) (_ bv1 64)))) ((_ extract 17 10) %x) ?x10663)))
 (let ((?x4757 (ite (and $x17212 $x7397 (= %p2 (bvadd (bvadd %p1 (_ bv1 64)) (_ bv2 64)))) ((_ extract 25 18) %x) ?x13334)))
 (let ((?x14160 (ite (and $x17212 $x7397 (= %p2 (bvadd (bvadd %p1 (_ bv1 64)) (_ bv3 64)))) ((_ extract 33 26) %x) ?x4757)))
 (let ((?x17912 (ite (and $x17212 $x7397 $x6308 $x7397 (= idx %p2)) (concat ((_ extract 7 2) ?x14160) ((_ extract 1 0) %y)) ?x12869)))
 (let ((?x10538 (ite (and $x17212 $x7397 $x6308 $x7397 (= idx (bvadd (bvadd %p2 (_ bv1 64)) (_ bv0 64)))) ((_ extract 9 2) %y) ?x17912)))
 (let ((?x9066 (ite (and $x17212 $x7397 $x6308 $x7397 (= idx (bvadd (bvadd %p2 (_ bv1 64)) (_ bv1 64)))) ((_ extract 17 10) %y) ?x10538)))
 (let ((?x18598 (ite (and $x17212 $x7397 $x6308 $x7397 (= idx (bvadd (bvadd %p2 (_ bv1 64)) (_ bv2 64)))) ((_ extract 25 18) %y) ?x9066)))
 (let ((?x1219 (ite (and $x17212 $x7397 $x6308 $x7397 (= idx (bvadd (bvadd %p2 (_ bv1 64)) (_ bv3 64)))) ((_ extract 33 26) %y) ?x18598)))
 (let (($x10015 (= |ana_equivalentAddressValues(%p1, %p2)| (_ bv1 1))))
 (and (=> $x10015 (= %p1 %p2)) $x10015 (and (distinct ?x1219 ?x15086) true)))))))))))))))))))))))))))
(check-sat)
