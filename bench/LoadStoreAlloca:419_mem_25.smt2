(set-info :status unknown)
(declare-fun mem0 () (_ BitVec 8))
(declare-fun %x () (_ BitVec 26))
(declare-fun %p1 () (_ BitVec 64))
(declare-fun idx () (_ BitVec 64))
(declare-fun |ana_equivalentAddressValues(%p1, %p2)| () (_ BitVec 1))
(declare-fun %p2 () (_ BitVec 64))
(assert
 (let ((?x9168 (concat ((_ extract 7 2) mem0) ((_ extract 1 0) %x))))
 (let ((?x4119 (ite (and (and (distinct %p1 (_ bv0 64)) true) (or true true) (= idx %p1)) ?x9168 mem0)))
 (let ((?x1110 ((_ extract 9 2) %x)))
 (let (($x11105 (or true true)))
 (let (($x1312 (and (distinct %p1 (_ bv0 64)) true)))
 (let ((?x18512 (ite (and $x1312 $x11105 (= idx (bvadd (bvadd %p1 (_ bv1 64)) (_ bv0 64)))) ?x1110 ?x4119)))
 (let ((?x11745 ((_ extract 17 10) %x)))
 (let ((?x6517 (ite (and $x1312 $x11105 (= idx (bvadd (bvadd %p1 (_ bv1 64)) (_ bv1 64)))) ?x11745 ?x18512)))
 (let ((?x6835 ((_ extract 25 18) %x)))
 (let ((?x6231 (ite (and $x1312 $x11105 (= idx (bvadd (bvadd %p1 (_ bv1 64)) (_ bv2 64)))) ?x6835 ?x6517)))
 (let (($x10245 (= |ana_equivalentAddressValues(%p1, %p2)| (_ bv1 1))))
 (and (=> $x10245 (= %p1 %p2)) $x10245 (and (distinct ?x6231 ?x6231) true))))))))))))))
(check-sat)
