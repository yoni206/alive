(set-info :status unknown)
(declare-fun %Y () (_ BitVec 11))
(declare-fun C2 () (_ BitVec 11))
(declare-fun C1 () (_ BitVec 6))
(declare-fun %X () (_ BitVec 6))
(assert
 (let ((?x1758 (ite (and (distinct ((_ extract 2 2) C2) (_ bv0 1)) true) (_ bv2 6) (ite (and (distinct ((_ extract 1 1) C2) (_ bv0 1)) true) (_ bv1 6) (_ bv0 6)))))
 (let ((?x5668 (ite (and (distinct ((_ extract 5 5) C2) (_ bv0 1)) true) (_ bv5 6) (ite (and (distinct ((_ extract 4 4) C2) (_ bv0 1)) true) (_ bv4 6) (_ bv3 6)))))
 (let ((?x17573 (ite (and (distinct ((_ extract 8 8) C2) (_ bv0 1)) true) (_ bv8 6) (ite (and (distinct ((_ extract 7 7) C2) (_ bv0 1)) true) (_ bv7 6) (_ bv6 6)))))
 (let ((?x15488 (ite (and (distinct ((_ extract 10 9) C2) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) C2) (_ bv0 1)) true) (_ bv10 6) (_ bv9 6)) ?x17573)))
 (let ((?x5753 (ite (and (distinct ((_ extract 10 6) C2) (_ bv0 5)) true) ?x15488 (ite (and (distinct ((_ extract 5 3) C2) (_ bv0 3)) true) ?x5668 ?x1758))))
 (let ((?x17978 (ite (and (distinct ((_ extract 2 2) C1) (_ bv0 1)) true) (_ bv2 6) (ite (and (distinct ((_ extract 1 1) C1) (_ bv0 1)) true) (_ bv1 6) (_ bv0 6)))))
 (let ((?x23298 (ite (and (distinct ((_ extract 5 5) C1) (_ bv0 1)) true) (_ bv5 6) (ite (and (distinct ((_ extract 4 4) C1) (_ bv0 1)) true) (_ bv4 6) (_ bv3 6)))))
 (let ((?x4790 (bvsub (ite (and (distinct ((_ extract 5 3) C1) (_ bv0 3)) true) ?x23298 ?x17978) ?x5753)))
 (let ((?x13405 (bvand %X C1)))
 (let ((?x11186 (bvor %Y C2)))
 (let (($x14530 (and (distinct (ite (= (ite (and (distinct ?x13405 (_ bv0 6)) true) (_ bv1 1) (_ bv0 1)) (_ bv1 1)) ?x11186 %Y) (bvor ((_ zero_extend 5) (bvlshr ?x13405 ?x4790)) %Y)) true)))
 (let ((?x18304 (ite (and (distinct ((_ extract 2 2) C1) (_ bv0 1)) true) (_ bv2 32) (ite (and (distinct ((_ extract 1 1) C1) (_ bv0 1)) true) (_ bv1 32) (_ bv0 32)))))
 (let ((?x1568 (ite (and (distinct ((_ extract 5 5) C1) (_ bv0 1)) true) (_ bv5 32) (ite (and (distinct ((_ extract 4 4) C1) (_ bv0 1)) true) (_ bv4 32) (_ bv3 32)))))
 (let ((?x11069 (ite (and (distinct ((_ extract 2 2) C2) (_ bv0 1)) true) (_ bv2 32) (ite (and (distinct ((_ extract 1 1) C2) (_ bv0 1)) true) (_ bv1 32) (_ bv0 32)))))
 (let ((?x23613 (ite (and (distinct ((_ extract 5 5) C2) (_ bv0 1)) true) (_ bv5 32) (ite (and (distinct ((_ extract 4 4) C2) (_ bv0 1)) true) (_ bv4 32) (_ bv3 32)))))
 (let ((?x4436 (ite (and (distinct ((_ extract 8 8) C2) (_ bv0 1)) true) (_ bv8 32) (ite (and (distinct ((_ extract 7 7) C2) (_ bv0 1)) true) (_ bv7 32) (_ bv6 32)))))
 (let ((?x20250 (ite (and (distinct ((_ extract 10 9) C2) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) C2) (_ bv0 1)) true) (_ bv10 32) (_ bv9 32)) ?x4436)))
 (let ((?x7221 (ite (and (distinct ((_ extract 10 6) C2) (_ bv0 5)) true) ?x20250 (ite (and (distinct ((_ extract 5 3) C2) (_ bv0 3)) true) ?x23613 ?x11069))))
 (and (and (and (distinct C1 (_ bv0 6)) true) (= (bvand C1 (bvsub C1 (_ bv1 6))) (_ bv0 6))) (and (and (distinct C2 (_ bv0 11)) true) (= (bvand C2 (bvsub C2 (_ bv1 11))) (_ bv0 11))) (bvslt ?x7221 (ite (and (distinct ((_ extract 5 3) C1) (_ bv0 3)) true) ?x1568 ?x18304)) $x14530))))))))))))))))))))
(check-sat)
