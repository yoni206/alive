(set-info :status unknown)
(declare-fun %Y () (_ BitVec 11))
(declare-fun C2 () (_ BitVec 11))
(declare-fun C1 () (_ BitVec 8))
(declare-fun %X () (_ BitVec 8))
(assert
 (let ((?x17977 (ite (and (distinct ((_ extract 2 2) C2) (_ bv0 1)) true) (_ bv2 8) (ite (and (distinct ((_ extract 1 1) C2) (_ bv0 1)) true) (_ bv1 8) (_ bv0 8)))))
 (let ((?x15264 (ite (and (distinct ((_ extract 5 5) C2) (_ bv0 1)) true) (_ bv5 8) (ite (and (distinct ((_ extract 4 4) C2) (_ bv0 1)) true) (_ bv4 8) (_ bv3 8)))))
 (let ((?x8818 (ite (and (distinct ((_ extract 8 8) C2) (_ bv0 1)) true) (_ bv8 8) (ite (and (distinct ((_ extract 7 7) C2) (_ bv0 1)) true) (_ bv7 8) (_ bv6 8)))))
 (let ((?x16748 (ite (and (distinct ((_ extract 10 9) C2) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) C2) (_ bv0 1)) true) (_ bv10 8) (_ bv9 8)) ?x8818)))
 (let ((?x246 (ite (and (distinct ((_ extract 10 6) C2) (_ bv0 5)) true) ?x16748 (ite (and (distinct ((_ extract 5 3) C2) (_ bv0 3)) true) ?x15264 ?x17977))))
 (let ((?x16779 (ite (and (distinct ((_ extract 3 2) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 3 3) C1) (_ bv0 1)) true) (_ bv3 8) (_ bv2 8)) (ite (and (distinct ((_ extract 1 1) C1) (_ bv0 1)) true) (_ bv1 8) (_ bv0 8)))))
 (let ((?x2465 (ite (and (distinct ((_ extract 7 6) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 7 7) C1) (_ bv0 1)) true) (_ bv7 8) (_ bv6 8)) (ite (and (distinct ((_ extract 5 5) C1) (_ bv0 1)) true) (_ bv5 8) (_ bv4 8)))))
 (let ((?x20502 (bvsub (ite (and (distinct ((_ extract 7 4) C1) (_ bv0 4)) true) ?x2465 ?x16779) ?x246)))
 (let ((?x7960 (bvand %X C1)))
 (let (($x2945 (and (distinct (ite (= (ite (= ?x7960 (_ bv0 8)) (_ bv1 1) (_ bv0 1)) (_ bv1 1)) (bvor %Y C2) %Y) (bvor (bvxor ((_ zero_extend 3) (bvlshr ?x7960 ?x20502)) C2) %Y)) true)))
 (let ((?x1313 (ite (and (distinct ((_ extract 3 2) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 3 3) C1) (_ bv0 1)) true) (_ bv3 32) (_ bv2 32)) (ite (and (distinct ((_ extract 1 1) C1) (_ bv0 1)) true) (_ bv1 32) (_ bv0 32)))))
 (let ((?x8560 (ite (and (distinct ((_ extract 7 6) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 7 7) C1) (_ bv0 1)) true) (_ bv7 32) (_ bv6 32)) (ite (and (distinct ((_ extract 5 5) C1) (_ bv0 1)) true) (_ bv5 32) (_ bv4 32)))))
 (let ((?x24583 (ite (and (distinct ((_ extract 2 2) C2) (_ bv0 1)) true) (_ bv2 32) (ite (and (distinct ((_ extract 1 1) C2) (_ bv0 1)) true) (_ bv1 32) (_ bv0 32)))))
 (let ((?x19418 (ite (and (distinct ((_ extract 5 5) C2) (_ bv0 1)) true) (_ bv5 32) (ite (and (distinct ((_ extract 4 4) C2) (_ bv0 1)) true) (_ bv4 32) (_ bv3 32)))))
 (let ((?x9322 (ite (and (distinct ((_ extract 8 8) C2) (_ bv0 1)) true) (_ bv8 32) (ite (and (distinct ((_ extract 7 7) C2) (_ bv0 1)) true) (_ bv7 32) (_ bv6 32)))))
 (let ((?x5862 (ite (and (distinct ((_ extract 10 9) C2) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) C2) (_ bv0 1)) true) (_ bv10 32) (_ bv9 32)) ?x9322)))
 (let ((?x13990 (ite (and (distinct ((_ extract 10 6) C2) (_ bv0 5)) true) ?x5862 (ite (and (distinct ((_ extract 5 3) C2) (_ bv0 3)) true) ?x19418 ?x24583))))
 (and (and (and (distinct C1 (_ bv0 8)) true) (= (bvand C1 (bvsub C1 (_ bv1 8))) (_ bv0 8))) (and (and (distinct C2 (_ bv0 11)) true) (= (bvand C2 (bvsub C2 (_ bv1 11))) (_ bv0 11))) (bvslt ?x13990 (ite (and (distinct ((_ extract 7 4) C1) (_ bv0 4)) true) ?x8560 ?x1313)) $x2945)))))))))))))))))))
(check-sat)
