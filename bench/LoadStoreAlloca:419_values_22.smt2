(set-info :status unknown)
(declare-fun %x () (_ BitVec 23))
(declare-fun mem0 () (_ BitVec 8))
(declare-fun %p1 () (_ BitVec 64))
(declare-fun %p2 () (_ BitVec 64))
(declare-fun |ana_equivalentAddressValues(%p1, %p2)| () (_ BitVec 1))
(assert
 (let ((?x3641 (concat ((_ extract 7 7) mem0) ((_ extract 6 0) %x))))
 (let ((?x18079 (ite (and (and (distinct %p1 (_ bv0 64)) true) (or true true) (= %p2 %p1)) ?x3641 mem0)))
 (let ((?x10633 ((_ extract 14 7) %x)))
 (let (($x11745 (or true true)))
 (let (($x16514 (and (distinct %p1 (_ bv0 64)) true)))
 (let ((?x407 (ite (and $x16514 $x11745 (= %p2 (bvadd (bvadd %p1 (_ bv1 64)) (_ bv0 64)))) ?x10633 ?x18079)))
 (let ((?x3186 ((_ extract 22 15) %x)))
 (let ((?x11367 (ite (and $x16514 $x11745 (= %p2 (bvadd (bvadd %p1 (_ bv1 64)) (_ bv1 64)))) ?x3186 ?x407)))
 (let ((?x21807 (ite (and $x16514 $x11745 (= (bvadd (bvadd %p2 (_ bv1 64)) (_ bv0 64)) %p1)) ?x3641 mem0)))
 (let (($x10062 (and $x16514 $x11745 (= (bvadd (bvadd %p2 (_ bv1 64)) (_ bv0 64)) (bvadd (bvadd %p1 (_ bv1 64)) (_ bv0 64))))))
 (let (($x318 (and $x16514 $x11745 (= (bvadd (bvadd %p2 (_ bv1 64)) (_ bv0 64)) (bvadd (bvadd %p1 (_ bv1 64)) (_ bv1 64))))))
 (let ((?x23974 (ite (and $x16514 $x11745 (= (bvadd (bvadd %p2 (_ bv1 64)) (_ bv1 64)) %p1)) ?x3641 mem0)))
 (let (($x15191 (and $x16514 $x11745 (= (bvadd (bvadd %p2 (_ bv1 64)) (_ bv1 64)) (bvadd (bvadd %p1 (_ bv1 64)) (_ bv0 64))))))
 (let (($x11256 (and $x16514 $x11745 (= (bvadd (bvadd %p2 (_ bv1 64)) (_ bv1 64)) (bvadd (bvadd %p1 (_ bv1 64)) (_ bv1 64))))))
 (let ((?x4130 (concat (ite $x11256 ?x3186 (ite $x15191 ?x10633 ?x23974)) (ite $x318 ?x3186 (ite $x10062 ?x10633 ?x21807)))))
 (let (($x6124 (= |ana_equivalentAddressValues(%p1, %p2)| (_ bv1 1))))
 (let (($x17196 (and (distinct %p2 (_ bv0 64)) true)))
 (and $x16514 $x11745 $x17196 $x11745 $x17196 $x11745 (=> $x6124 (= %p1 %p2)) $x6124 (and (distinct (concat ?x4130 ((_ extract 6 0) ?x11367)) %x) true))))))))))))))))))))
(check-sat)
