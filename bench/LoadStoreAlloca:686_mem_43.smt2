(set-info :status unknown)
(declare-fun mem0 () (_ BitVec 8))
(declare-fun %p2 () (_ BitVec 64))
(declare-fun idx () (_ BitVec 64))
(declare-fun %p1 () (_ BitVec 64))
(declare-fun |ana_equivalentAddressValues(%p1, %p2)| () (_ BitVec 1))
(assert
 (let ((?x15425 (concat (concat (concat (concat (concat mem0 mem0) mem0) mem0) mem0) ((_ extract 6 0) mem0))))
 (let (($x13808 (or true true)))
 (let (($x1088 (and (distinct %p2 (_ bv0 64)) true)))
 (let (($x15642 (and (distinct %p1 (_ bv0 64)) true)))
 (let ((?x3284 (ite (and $x15642 $x13808 $x15642 $x13808 $x15642 $x13808 $x1088 $x13808 (= idx %p2)) (concat ((_ extract 7 7) mem0) ((_ extract 6 0) ?x15425)) mem0)))
 (let (($x20064 (and $x15642 $x13808 $x15642 $x13808 $x15642 $x13808 $x1088 $x13808 (= idx (bvadd (bvadd %p2 (_ bv1 64)) (_ bv0 64))))))
 (let (($x16121 (and $x15642 $x13808 $x15642 $x13808 $x15642 $x13808 $x1088 $x13808 (= idx (bvadd (bvadd %p2 (_ bv1 64)) (_ bv1 64))))))
 (let (($x17032 (and $x15642 $x13808 $x15642 $x13808 $x15642 $x13808 $x1088 $x13808 (= idx (bvadd (bvadd %p2 (_ bv1 64)) (_ bv2 64))))))
 (let ((?x3522 (ite $x17032 ((_ extract 30 23) ?x15425) (ite $x16121 ((_ extract 22 15) ?x15425) (ite $x20064 ((_ extract 14 7) ?x15425) ?x3284)))))
 (let (($x8433 (and $x15642 $x13808 $x15642 $x13808 $x15642 $x13808 $x1088 $x13808 (= idx (bvadd (bvadd %p2 (_ bv1 64)) (_ bv3 64))))))
 (let (($x8366 (and $x15642 $x13808 $x15642 $x13808 $x15642 $x13808 $x1088 $x13808 (= idx (bvadd (bvadd %p2 (_ bv1 64)) (_ bv4 64))))))
 (let ((?x18865 (ite $x8366 ((_ extract 46 39) ?x15425) (ite $x8433 ((_ extract 38 31) ?x15425) ?x3522))))
 (let (($x18864 (= |ana_equivalentAddressValues(%p1, %p2)| (_ bv1 1))))
 (and (=> $x18864 (= %p1 %p2)) $x18864 (and (distinct ?x18865 mem0) true))))))))))))))))
(check-sat)
