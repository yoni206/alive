(set-info :status unknown)
(declare-fun C2 () (_ BitVec 11))
(declare-fun C1 () (_ BitVec 38))
(assert
 (let ((?x6841 (ite (and (distinct ((_ extract 2 2) C2) (_ bv0 1)) true) (_ bv2 38) (ite (and (distinct ((_ extract 1 1) C2) (_ bv0 1)) true) (_ bv1 38) (_ bv0 38)))))
 (let ((?x1753 (ite (and (distinct ((_ extract 5 5) C2) (_ bv0 1)) true) (_ bv5 38) (ite (and (distinct ((_ extract 4 4) C2) (_ bv0 1)) true) (_ bv4 38) (_ bv3 38)))))
 (let ((?x2799 (ite (and (distinct ((_ extract 8 8) C2) (_ bv0 1)) true) (_ bv8 38) (ite (and (distinct ((_ extract 7 7) C2) (_ bv0 1)) true) (_ bv7 38) (_ bv6 38)))))
 (let ((?x6854 (ite (and (distinct ((_ extract 10 9) C2) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) C2) (_ bv0 1)) true) (_ bv10 38) (_ bv9 38)) ?x2799)))
 (let ((?x6213 (ite (and (distinct ((_ extract 10 6) C2) (_ bv0 5)) true) ?x6854 (ite (and (distinct ((_ extract 5 3) C2) (_ bv0 3)) true) ?x1753 ?x6841))))
 (let ((?x1448 (ite (and (distinct ((_ extract 2 2) C1) (_ bv0 1)) true) (_ bv2 38) (ite (and (distinct ((_ extract 1 1) C1) (_ bv0 1)) true) (_ bv1 38) (_ bv0 38)))))
 (let ((?x3718 (ite (and (distinct ((_ extract 4 3) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 4 4) C1) (_ bv0 1)) true) (_ bv4 38) (_ bv3 38)) ?x1448)))
 (let ((?x2421 (ite (and (distinct ((_ extract 7 7) C1) (_ bv0 1)) true) (_ bv7 38) (ite (and (distinct ((_ extract 6 6) C1) (_ bv0 1)) true) (_ bv6 38) (_ bv5 38)))))
 (let ((?x3167 (ite (and (distinct ((_ extract 9 8) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 9 9) C1) (_ bv0 1)) true) (_ bv9 38) (_ bv8 38)) ?x2421)))
 (let ((?x3290 (ite (and (distinct ((_ extract 12 12) C1) (_ bv0 1)) true) (_ bv12 38) (ite (and (distinct ((_ extract 11 11) C1) (_ bv0 1)) true) (_ bv11 38) (_ bv10 38)))))
 (let ((?x4056 (ite (and (distinct ((_ extract 14 13) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 14 14) C1) (_ bv0 1)) true) (_ bv14 38) (_ bv13 38)) ?x3290)))
 (let ((?x5127 (ite (and (distinct ((_ extract 18 17) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 18 18) C1) (_ bv0 1)) true) (_ bv18 38) (_ bv17 38)) (ite (and (distinct ((_ extract 16 16) C1) (_ bv0 1)) true) (_ bv16 38) (_ bv15 38)))))
 (let ((?x4096 (ite (and (distinct ((_ extract 18 10) C1) (_ bv0 9)) true) (ite (and (distinct ((_ extract 18 15) C1) (_ bv0 4)) true) ?x5127 ?x4056) (ite (and (distinct ((_ extract 9 5) C1) (_ bv0 5)) true) ?x3167 ?x3718))))
 (let ((?x1669 (ite (and (distinct ((_ extract 21 21) C1) (_ bv0 1)) true) (_ bv21 38) (ite (and (distinct ((_ extract 20 20) C1) (_ bv0 1)) true) (_ bv20 38) (_ bv19 38)))))
 (let ((?x3707 (ite (and (distinct ((_ extract 23 22) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 23 23) C1) (_ bv0 1)) true) (_ bv23 38) (_ bv22 38)) ?x1669)))
 (let ((?x5629 (ite (and (distinct ((_ extract 26 26) C1) (_ bv0 1)) true) (_ bv26 38) (ite (and (distinct ((_ extract 25 25) C1) (_ bv0 1)) true) (_ bv25 38) (_ bv24 38)))))
 (let ((?x2195 (ite (and (distinct ((_ extract 28 27) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 28 28) C1) (_ bv0 1)) true) (_ bv28 38) (_ bv27 38)) ?x5629)))
 (let ((?x3657 (ite (and (distinct ((_ extract 31 31) C1) (_ bv0 1)) true) (_ bv31 38) (ite (and (distinct ((_ extract 30 30) C1) (_ bv0 1)) true) (_ bv30 38) (_ bv29 38)))))
 (let ((?x6457 (ite (and (distinct ((_ extract 33 32) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 33 33) C1) (_ bv0 1)) true) (_ bv33 38) (_ bv32 38)) ?x3657)))
 (let ((?x5360 (ite (and (distinct ((_ extract 37 36) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 37 37) C1) (_ bv0 1)) true) (_ bv37 38) (_ bv36 38)) (ite (and (distinct ((_ extract 35 35) C1) (_ bv0 1)) true) (_ bv35 38) (_ bv34 38)))))
 (let ((?x6449 (ite (and (distinct ((_ extract 37 29) C1) (_ bv0 9)) true) (ite (and (distinct ((_ extract 37 34) C1) (_ bv0 4)) true) ?x5360 ?x6457) (ite (and (distinct ((_ extract 28 24) C1) (_ bv0 5)) true) ?x2195 ?x3707))))
 (let ((?x4535 (bvsub (ite (and (distinct ((_ extract 37 19) C1) (_ bv0 19)) true) ?x6449 ?x4096) ?x6213)))
 (let ((?x6456 (ite (and (distinct ((_ extract 2 2) C1) (_ bv0 1)) true) (_ bv2 32) (ite (and (distinct ((_ extract 1 1) C1) (_ bv0 1)) true) (_ bv1 32) (_ bv0 32)))))
 (let ((?x6729 (ite (and (distinct ((_ extract 4 3) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 4 4) C1) (_ bv0 1)) true) (_ bv4 32) (_ bv3 32)) ?x6456)))
 (let ((?x6645 (ite (and (distinct ((_ extract 7 7) C1) (_ bv0 1)) true) (_ bv7 32) (ite (and (distinct ((_ extract 6 6) C1) (_ bv0 1)) true) (_ bv6 32) (_ bv5 32)))))
 (let ((?x6488 (ite (and (distinct ((_ extract 9 8) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 9 9) C1) (_ bv0 1)) true) (_ bv9 32) (_ bv8 32)) ?x6645)))
 (let ((?x5921 (ite (and (distinct ((_ extract 12 12) C1) (_ bv0 1)) true) (_ bv12 32) (ite (and (distinct ((_ extract 11 11) C1) (_ bv0 1)) true) (_ bv11 32) (_ bv10 32)))))
 (let ((?x5862 (ite (and (distinct ((_ extract 14 13) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 14 14) C1) (_ bv0 1)) true) (_ bv14 32) (_ bv13 32)) ?x5921)))
 (let ((?x4106 (ite (and (distinct ((_ extract 18 17) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 18 18) C1) (_ bv0 1)) true) (_ bv18 32) (_ bv17 32)) (ite (and (distinct ((_ extract 16 16) C1) (_ bv0 1)) true) (_ bv16 32) (_ bv15 32)))))
 (let ((?x3547 (ite (and (distinct ((_ extract 18 10) C1) (_ bv0 9)) true) (ite (and (distinct ((_ extract 18 15) C1) (_ bv0 4)) true) ?x4106 ?x5862) (ite (and (distinct ((_ extract 9 5) C1) (_ bv0 5)) true) ?x6488 ?x6729))))
 (let ((?x3464 (ite (and (distinct ((_ extract 21 21) C1) (_ bv0 1)) true) (_ bv21 32) (ite (and (distinct ((_ extract 20 20) C1) (_ bv0 1)) true) (_ bv20 32) (_ bv19 32)))))
 (let ((?x2234 (ite (and (distinct ((_ extract 23 22) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 23 23) C1) (_ bv0 1)) true) (_ bv23 32) (_ bv22 32)) ?x3464)))
 (let ((?x2231 (ite (and (distinct ((_ extract 26 26) C1) (_ bv0 1)) true) (_ bv26 32) (ite (and (distinct ((_ extract 25 25) C1) (_ bv0 1)) true) (_ bv25 32) (_ bv24 32)))))
 (let ((?x3436 (ite (and (distinct ((_ extract 28 27) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 28 28) C1) (_ bv0 1)) true) (_ bv28 32) (_ bv27 32)) ?x2231)))
 (let ((?x1309 (ite (and (distinct ((_ extract 31 31) C1) (_ bv0 1)) true) (_ bv31 32) (ite (and (distinct ((_ extract 30 30) C1) (_ bv0 1)) true) (_ bv30 32) (_ bv29 32)))))
 (let ((?x1415 (ite (and (distinct ((_ extract 33 32) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 33 33) C1) (_ bv0 1)) true) (_ bv33 32) (_ bv32 32)) ?x1309)))
 (let ((?x1770 (ite (and (distinct ((_ extract 37 36) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 37 37) C1) (_ bv0 1)) true) (_ bv37 32) (_ bv36 32)) (ite (and (distinct ((_ extract 35 35) C1) (_ bv0 1)) true) (_ bv35 32) (_ bv34 32)))))
 (let ((?x2806 (ite (and (distinct ((_ extract 37 29) C1) (_ bv0 9)) true) (ite (and (distinct ((_ extract 37 34) C1) (_ bv0 4)) true) ?x1770 ?x1415) (ite (and (distinct ((_ extract 28 24) C1) (_ bv0 5)) true) ?x3436 ?x2234))))
 (let ((?x4982 (ite (and (distinct ((_ extract 2 2) C2) (_ bv0 1)) true) (_ bv2 32) (ite (and (distinct ((_ extract 1 1) C2) (_ bv0 1)) true) (_ bv1 32) (_ bv0 32)))))
 (let ((?x5386 (ite (and (distinct ((_ extract 5 5) C2) (_ bv0 1)) true) (_ bv5 32) (ite (and (distinct ((_ extract 4 4) C2) (_ bv0 1)) true) (_ bv4 32) (_ bv3 32)))))
 (let ((?x5561 (ite (and (distinct ((_ extract 8 8) C2) (_ bv0 1)) true) (_ bv8 32) (ite (and (distinct ((_ extract 7 7) C2) (_ bv0 1)) true) (_ bv7 32) (_ bv6 32)))))
 (let ((?x6471 (ite (and (distinct ((_ extract 10 9) C2) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) C2) (_ bv0 1)) true) (_ bv10 32) (_ bv9 32)) ?x5561)))
 (let ((?x6711 (ite (and (distinct ((_ extract 10 6) C2) (_ bv0 5)) true) ?x6471 (ite (and (distinct ((_ extract 5 3) C2) (_ bv0 3)) true) ?x5386 ?x4982))))
 (and (and (and (distinct C1 (_ bv0 38)) true) (= (bvand C1 (bvsub C1 (_ bv1 38))) (_ bv0 38))) (and (and (distinct C2 (_ bv0 11)) true) (= (bvand C2 (bvsub C2 (_ bv1 11))) (_ bv0 11))) (bvslt ?x6711 (ite (and (distinct ((_ extract 37 19) C1) (_ bv0 19)) true) ?x2806 ?x3547)) (not (bvult ?x4535 (_ bv38 38))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
