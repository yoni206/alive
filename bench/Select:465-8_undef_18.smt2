(set-info :status unknown)
(declare-fun C2 () (_ BitVec 11))
(declare-fun C1 () (_ BitVec 20))
(assert
 (let ((?x5264 (ite (and (distinct ((_ extract 2 2) C2) (_ bv0 1)) true) (_ bv2 20) (ite (and (distinct ((_ extract 1 1) C2) (_ bv0 1)) true) (_ bv1 20) (_ bv0 20)))))
 (let ((?x17894 (ite (and (distinct ((_ extract 5 5) C2) (_ bv0 1)) true) (_ bv5 20) (ite (and (distinct ((_ extract 4 4) C2) (_ bv0 1)) true) (_ bv4 20) (_ bv3 20)))))
 (let ((?x13418 (ite (and (distinct ((_ extract 8 8) C2) (_ bv0 1)) true) (_ bv8 20) (ite (and (distinct ((_ extract 7 7) C2) (_ bv0 1)) true) (_ bv7 20) (_ bv6 20)))))
 (let ((?x1568 (ite (and (distinct ((_ extract 10 9) C2) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) C2) (_ bv0 1)) true) (_ bv10 20) (_ bv9 20)) ?x13418)))
 (let ((?x8833 (ite (and (distinct ((_ extract 10 6) C2) (_ bv0 5)) true) ?x1568 (ite (and (distinct ((_ extract 5 3) C2) (_ bv0 3)) true) ?x17894 ?x5264))))
 (let ((?x23111 (ite (and (distinct ((_ extract 2 2) C1) (_ bv0 1)) true) (_ bv2 20) (ite (and (distinct ((_ extract 1 1) C1) (_ bv0 1)) true) (_ bv1 20) (_ bv0 20)))))
 (let ((?x17913 (ite (and (distinct ((_ extract 4 3) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 4 4) C1) (_ bv0 1)) true) (_ bv4 20) (_ bv3 20)) ?x23111)))
 (let ((?x1864 (ite (and (distinct ((_ extract 7 7) C1) (_ bv0 1)) true) (_ bv7 20) (ite (and (distinct ((_ extract 6 6) C1) (_ bv0 1)) true) (_ bv6 20) (_ bv5 20)))))
 (let ((?x21403 (ite (and (distinct ((_ extract 9 8) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 9 9) C1) (_ bv0 1)) true) (_ bv9 20) (_ bv8 20)) ?x1864)))
 (let ((?x4790 (ite (and (distinct ((_ extract 12 12) C1) (_ bv0 1)) true) (_ bv12 20) (ite (and (distinct ((_ extract 11 11) C1) (_ bv0 1)) true) (_ bv11 20) (_ bv10 20)))))
 (let ((?x18306 (ite (and (distinct ((_ extract 14 13) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 14 14) C1) (_ bv0 1)) true) (_ bv14 20) (_ bv13 20)) ?x4790)))
 (let ((?x20098 (ite (and (distinct ((_ extract 17 17) C1) (_ bv0 1)) true) (_ bv17 20) (ite (and (distinct ((_ extract 16 16) C1) (_ bv0 1)) true) (_ bv16 20) (_ bv15 20)))))
 (let ((?x13459 (ite (and (distinct ((_ extract 19 18) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 19 19) C1) (_ bv0 1)) true) (_ bv19 20) (_ bv18 20)) ?x20098)))
 (let ((?x4033 (ite (and (distinct ((_ extract 19 10) C1) (_ bv0 10)) true) (ite (and (distinct ((_ extract 19 15) C1) (_ bv0 5)) true) ?x13459 ?x18306) (ite (and (distinct ((_ extract 9 5) C1) (_ bv0 5)) true) ?x21403 ?x17913))))
 (let ((?x7097 (bvsub ?x4033 ?x8833)))
 (let ((?x5191 (ite (and (distinct ((_ extract 2 2) C1) (_ bv0 1)) true) (_ bv2 32) (ite (and (distinct ((_ extract 1 1) C1) (_ bv0 1)) true) (_ bv1 32) (_ bv0 32)))))
 (let ((?x9407 (ite (and (distinct ((_ extract 4 3) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 4 4) C1) (_ bv0 1)) true) (_ bv4 32) (_ bv3 32)) ?x5191)))
 (let ((?x3402 (ite (and (distinct ((_ extract 7 7) C1) (_ bv0 1)) true) (_ bv7 32) (ite (and (distinct ((_ extract 6 6) C1) (_ bv0 1)) true) (_ bv6 32) (_ bv5 32)))))
 (let ((?x2845 (ite (and (distinct ((_ extract 9 8) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 9 9) C1) (_ bv0 1)) true) (_ bv9 32) (_ bv8 32)) ?x3402)))
 (let ((?x1899 (ite (and (distinct ((_ extract 12 12) C1) (_ bv0 1)) true) (_ bv12 32) (ite (and (distinct ((_ extract 11 11) C1) (_ bv0 1)) true) (_ bv11 32) (_ bv10 32)))))
 (let ((?x347 (ite (and (distinct ((_ extract 14 13) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 14 14) C1) (_ bv0 1)) true) (_ bv14 32) (_ bv13 32)) ?x1899)))
 (let ((?x4859 (ite (and (distinct ((_ extract 17 17) C1) (_ bv0 1)) true) (_ bv17 32) (ite (and (distinct ((_ extract 16 16) C1) (_ bv0 1)) true) (_ bv16 32) (_ bv15 32)))))
 (let ((?x5043 (ite (and (distinct ((_ extract 19 18) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 19 19) C1) (_ bv0 1)) true) (_ bv19 32) (_ bv18 32)) ?x4859)))
 (let ((?x7850 (ite (and (distinct ((_ extract 19 10) C1) (_ bv0 10)) true) (ite (and (distinct ((_ extract 19 15) C1) (_ bv0 5)) true) ?x5043 ?x347) (ite (and (distinct ((_ extract 9 5) C1) (_ bv0 5)) true) ?x2845 ?x9407))))
 (let ((?x19897 (ite (and (distinct ((_ extract 2 2) C2) (_ bv0 1)) true) (_ bv2 32) (ite (and (distinct ((_ extract 1 1) C2) (_ bv0 1)) true) (_ bv1 32) (_ bv0 32)))))
 (let ((?x6045 (ite (and (distinct ((_ extract 5 5) C2) (_ bv0 1)) true) (_ bv5 32) (ite (and (distinct ((_ extract 4 4) C2) (_ bv0 1)) true) (_ bv4 32) (_ bv3 32)))))
 (let ((?x3437 (ite (and (distinct ((_ extract 8 8) C2) (_ bv0 1)) true) (_ bv8 32) (ite (and (distinct ((_ extract 7 7) C2) (_ bv0 1)) true) (_ bv7 32) (_ bv6 32)))))
 (let ((?x14642 (ite (and (distinct ((_ extract 10 9) C2) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) C2) (_ bv0 1)) true) (_ bv10 32) (_ bv9 32)) ?x3437)))
 (let ((?x16762 (ite (and (distinct ((_ extract 10 6) C2) (_ bv0 5)) true) ?x14642 (ite (and (distinct ((_ extract 5 3) C2) (_ bv0 3)) true) ?x6045 ?x19897))))
 (and (and (and (distinct C1 (_ bv0 20)) true) (= (bvand C1 (bvsub C1 (_ bv1 20))) (_ bv0 20))) (and (and (distinct C2 (_ bv0 11)) true) (= (bvand C2 (bvsub C2 (_ bv1 11))) (_ bv0 11))) (bvslt ?x16762 ?x7850) (not (bvult ?x7097 (_ bv20 20))))))))))))))))))))))))))))))))))
(check-sat)
