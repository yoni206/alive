(set-info :status unknown)
(declare-fun C2 () (_ BitVec 11))
(declare-fun C1 () (_ BitVec 19))
(assert
 (let ((?x204 (ite (and (distinct ((_ extract 2 2) C2) (_ bv0 1)) true) (_ bv2 19) (ite (and (distinct ((_ extract 1 1) C2) (_ bv0 1)) true) (_ bv1 19) (_ bv0 19)))))
 (let ((?x9067 (ite (and (distinct ((_ extract 5 5) C2) (_ bv0 1)) true) (_ bv5 19) (ite (and (distinct ((_ extract 4 4) C2) (_ bv0 1)) true) (_ bv4 19) (_ bv3 19)))))
 (let ((?x16928 (ite (and (distinct ((_ extract 8 8) C2) (_ bv0 1)) true) (_ bv8 19) (ite (and (distinct ((_ extract 7 7) C2) (_ bv0 1)) true) (_ bv7 19) (_ bv6 19)))))
 (let ((?x12065 (ite (and (distinct ((_ extract 10 9) C2) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) C2) (_ bv0 1)) true) (_ bv10 19) (_ bv9 19)) ?x16928)))
 (let ((?x5111 (ite (and (distinct ((_ extract 10 6) C2) (_ bv0 5)) true) ?x12065 (ite (and (distinct ((_ extract 5 3) C2) (_ bv0 3)) true) ?x9067 ?x204))))
 (let ((?x11985 (ite (and (distinct ((_ extract 2 2) C1) (_ bv0 1)) true) (_ bv2 19) (ite (and (distinct ((_ extract 1 1) C1) (_ bv0 1)) true) (_ bv1 19) (_ bv0 19)))))
 (let ((?x19803 (ite (and (distinct ((_ extract 4 3) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 4 4) C1) (_ bv0 1)) true) (_ bv4 19) (_ bv3 19)) ?x11985)))
 (let ((?x12230 (ite (and (distinct ((_ extract 7 7) C1) (_ bv0 1)) true) (_ bv7 19) (ite (and (distinct ((_ extract 6 6) C1) (_ bv0 1)) true) (_ bv6 19) (_ bv5 19)))))
 (let ((?x14622 (ite (and (distinct ((_ extract 9 8) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 9 9) C1) (_ bv0 1)) true) (_ bv9 19) (_ bv8 19)) ?x12230)))
 (let ((?x17611 (ite (and (distinct ((_ extract 12 12) C1) (_ bv0 1)) true) (_ bv12 19) (ite (and (distinct ((_ extract 11 11) C1) (_ bv0 1)) true) (_ bv11 19) (_ bv10 19)))))
 (let ((?x9272 (ite (and (distinct ((_ extract 14 13) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 14 14) C1) (_ bv0 1)) true) (_ bv14 19) (_ bv13 19)) ?x17611)))
 (let ((?x1044 (ite (and (distinct ((_ extract 18 17) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 18 18) C1) (_ bv0 1)) true) (_ bv18 19) (_ bv17 19)) (ite (and (distinct ((_ extract 16 16) C1) (_ bv0 1)) true) (_ bv16 19) (_ bv15 19)))))
 (let ((?x22926 (ite (and (distinct ((_ extract 18 10) C1) (_ bv0 9)) true) (ite (and (distinct ((_ extract 18 15) C1) (_ bv0 4)) true) ?x1044 ?x9272) (ite (and (distinct ((_ extract 9 5) C1) (_ bv0 5)) true) ?x14622 ?x19803))))
 (let ((?x18104 (bvsub ?x22926 ?x5111)))
 (let ((?x273 (ite (and (distinct ((_ extract 2 2) C1) (_ bv0 1)) true) (_ bv2 32) (ite (and (distinct ((_ extract 1 1) C1) (_ bv0 1)) true) (_ bv1 32) (_ bv0 32)))))
 (let ((?x6726 (ite (and (distinct ((_ extract 4 3) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 4 4) C1) (_ bv0 1)) true) (_ bv4 32) (_ bv3 32)) ?x273)))
 (let ((?x12115 (ite (and (distinct ((_ extract 7 7) C1) (_ bv0 1)) true) (_ bv7 32) (ite (and (distinct ((_ extract 6 6) C1) (_ bv0 1)) true) (_ bv6 32) (_ bv5 32)))))
 (let ((?x11515 (ite (and (distinct ((_ extract 9 8) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 9 9) C1) (_ bv0 1)) true) (_ bv9 32) (_ bv8 32)) ?x12115)))
 (let ((?x6929 (ite (and (distinct ((_ extract 12 12) C1) (_ bv0 1)) true) (_ bv12 32) (ite (and (distinct ((_ extract 11 11) C1) (_ bv0 1)) true) (_ bv11 32) (_ bv10 32)))))
 (let ((?x11076 (ite (and (distinct ((_ extract 14 13) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 14 14) C1) (_ bv0 1)) true) (_ bv14 32) (_ bv13 32)) ?x6929)))
 (let ((?x19167 (ite (and (distinct ((_ extract 18 17) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 18 18) C1) (_ bv0 1)) true) (_ bv18 32) (_ bv17 32)) (ite (and (distinct ((_ extract 16 16) C1) (_ bv0 1)) true) (_ bv16 32) (_ bv15 32)))))
 (let ((?x2973 (ite (and (distinct ((_ extract 18 10) C1) (_ bv0 9)) true) (ite (and (distinct ((_ extract 18 15) C1) (_ bv0 4)) true) ?x19167 ?x11076) (ite (and (distinct ((_ extract 9 5) C1) (_ bv0 5)) true) ?x11515 ?x6726))))
 (let ((?x10343 (ite (and (distinct ((_ extract 2 2) C2) (_ bv0 1)) true) (_ bv2 32) (ite (and (distinct ((_ extract 1 1) C2) (_ bv0 1)) true) (_ bv1 32) (_ bv0 32)))))
 (let ((?x15323 (ite (and (distinct ((_ extract 5 5) C2) (_ bv0 1)) true) (_ bv5 32) (ite (and (distinct ((_ extract 4 4) C2) (_ bv0 1)) true) (_ bv4 32) (_ bv3 32)))))
 (let ((?x12577 (ite (and (distinct ((_ extract 8 8) C2) (_ bv0 1)) true) (_ bv8 32) (ite (and (distinct ((_ extract 7 7) C2) (_ bv0 1)) true) (_ bv7 32) (_ bv6 32)))))
 (let ((?x17794 (ite (and (distinct ((_ extract 10 9) C2) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) C2) (_ bv0 1)) true) (_ bv10 32) (_ bv9 32)) ?x12577)))
 (let ((?x12466 (ite (and (distinct ((_ extract 10 6) C2) (_ bv0 5)) true) ?x17794 (ite (and (distinct ((_ extract 5 3) C2) (_ bv0 3)) true) ?x15323 ?x10343))))
 (and (and (and (distinct C1 (_ bv0 19)) true) (= (bvand C1 (bvsub C1 (_ bv1 19))) (_ bv0 19))) (and (and (distinct C2 (_ bv0 11)) true) (= (bvand C2 (bvsub C2 (_ bv1 11))) (_ bv0 11))) (bvslt ?x12466 ?x2973) (not (bvult ?x18104 (_ bv19 19))))))))))))))))))))))))))))))))
(check-sat)
