(set-info :source |
 Generated by Alive 0.1
 More info in N. P. Lopes, D. Menendez, S. Nagarakatte, J. Regehr.
 Provably Correct Peephole Optimizations with Alive. In PLDI'15.
|)

(set-info :status unknown)
(declare-fun C2 () (_ BitVec 24))
(declare-fun %B () (_ BitVec 24))
(declare-fun %A () (_ BitVec 24))
(declare-fun C1 () (_ BitVec 24))
(declare-fun |ana_MaskedValueIsZero(%B, ((1 << (width(C2) - countLeadingZeros(((C2 - 1) ^ C2)))) - 1))| () (_ BitVec 1))
(assert
 (let (($x60299 (and (distinct (bvand (bvadd (bvand %A C1) %B) C2) (bvand (bvadd %A %B) C2)) true)))
 (let (($x64669 (= |ana_MaskedValueIsZero(%B, ((1 << (width(C2) - countLeadingZeros(((C2 - 1) ^ C2)))) - 1))| (_ bv1 1))))
 (let ((?x10650 (bvsub C2 (_ bv1 24))))
 (let ((?x65438 (bvor ?x10650 C2)))
 (let (($x65601 (and (and (distinct ?x65438 (_ bv0 24)) true) (= (bvand (bvadd ?x65438 (_ bv1 24)) ?x65438) (_ bv0 24)) $x64669)))
 (let (($x65784 (or (= (bvand (bvadd C2 (_ bv1 24)) (bvsub (bvadd C2 (_ bv1 24)) (_ bv1 24))) (_ bv0 24)) $x65601)))
 (let ((?x53867 (bvand C1 C2)))
 (let (($x65517 (= ?x53867 C2)))
 (let ((?x60468 (ite (= ((_ extract 1 1) (bvxor ?x10650 C2)) (_ bv1 1)) (_ bv22 24) (ite (= ((_ extract 0 0) (bvxor ?x10650 C2)) (_ bv1 1)) (_ bv23 24) (_ bv24 24)))))
 (let ((?x65314 (ite (= ((_ extract 3 3) (bvxor ?x10650 C2)) (_ bv1 1)) (_ bv20 24) (ite (= ((_ extract 2 2) (bvxor ?x10650 C2)) (_ bv1 1)) (_ bv21 24) ?x60468))))
 (let ((?x66305 (ite (= ((_ extract 5 5) (bvxor ?x10650 C2)) (_ bv1 1)) (_ bv18 24) (ite (= ((_ extract 4 4) (bvxor ?x10650 C2)) (_ bv1 1)) (_ bv19 24) ?x65314))))
 (let ((?x62860 (ite (= ((_ extract 7 7) (bvxor ?x10650 C2)) (_ bv1 1)) (_ bv16 24) (ite (= ((_ extract 6 6) (bvxor ?x10650 C2)) (_ bv1 1)) (_ bv17 24) ?x66305))))
 (let ((?x62297 (ite (= ((_ extract 9 9) (bvxor ?x10650 C2)) (_ bv1 1)) (_ bv14 24) (ite (= ((_ extract 8 8) (bvxor ?x10650 C2)) (_ bv1 1)) (_ bv15 24) ?x62860))))
 (let ((?x63614 (ite (= ((_ extract 11 11) (bvxor ?x10650 C2)) (_ bv1 1)) (_ bv12 24) (ite (= ((_ extract 10 10) (bvxor ?x10650 C2)) (_ bv1 1)) (_ bv13 24) ?x62297))))
 (let ((?x64146 (ite (= ((_ extract 13 13) (bvxor ?x10650 C2)) (_ bv1 1)) (_ bv10 24) (ite (= ((_ extract 12 12) (bvxor ?x10650 C2)) (_ bv1 1)) (_ bv11 24) ?x63614))))
 (let ((?x63721 (ite (= ((_ extract 15 15) (bvxor ?x10650 C2)) (_ bv1 1)) (_ bv8 24) (ite (= ((_ extract 14 14) (bvxor ?x10650 C2)) (_ bv1 1)) (_ bv9 24) ?x64146))))
 (let ((?x64799 (ite (= ((_ extract 17 17) (bvxor ?x10650 C2)) (_ bv1 1)) (_ bv6 24) (ite (= ((_ extract 16 16) (bvxor ?x10650 C2)) (_ bv1 1)) (_ bv7 24) ?x63721))))
 (let ((?x64782 (ite (= ((_ extract 19 19) (bvxor ?x10650 C2)) (_ bv1 1)) (_ bv4 24) (ite (= ((_ extract 18 18) (bvxor ?x10650 C2)) (_ bv1 1)) (_ bv5 24) ?x64799))))
 (let ((?x64478 (ite (= ((_ extract 21 21) (bvxor ?x10650 C2)) (_ bv1 1)) (_ bv2 24) (ite (= ((_ extract 20 20) (bvxor ?x10650 C2)) (_ bv1 1)) (_ bv3 24) ?x64782))))
 (let ((?x63898 (ite (= ((_ extract 23 23) (bvxor ?x10650 C2)) (_ bv1 1)) (_ bv0 24) (ite (= ((_ extract 22 22) (bvxor ?x10650 C2)) (_ bv1 1)) (_ bv1 24) ?x64478))))
 (let (($x65696 (=> $x64669 (= (bvand %B (bvsub (bvshl (_ bv1 24) (bvsub (_ bv24 24) ?x63898)) (_ bv1 24))) (_ bv0 24)))))
 (and $x65696 $x65517 $x65784 $x60299)))))))))))))))))))))))
(check-sat)
