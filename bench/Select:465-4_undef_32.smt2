(set-info :status unknown)
(declare-fun C2 () (_ BitVec 11))
(declare-fun C1 () (_ BitVec 40))
(assert
 (let ((?x6051 (ite (and (distinct ((_ extract 2 2) C2) (_ bv0 1)) true) (_ bv2 40) (ite (and (distinct ((_ extract 1 1) C2) (_ bv0 1)) true) (_ bv1 40) (_ bv0 40)))))
 (let ((?x3689 (ite (and (distinct ((_ extract 5 5) C2) (_ bv0 1)) true) (_ bv5 40) (ite (and (distinct ((_ extract 4 4) C2) (_ bv0 1)) true) (_ bv4 40) (_ bv3 40)))))
 (let ((?x4115 (ite (and (distinct ((_ extract 8 8) C2) (_ bv0 1)) true) (_ bv8 40) (ite (and (distinct ((_ extract 7 7) C2) (_ bv0 1)) true) (_ bv7 40) (_ bv6 40)))))
 (let ((?x3557 (ite (and (distinct ((_ extract 10 9) C2) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) C2) (_ bv0 1)) true) (_ bv10 40) (_ bv9 40)) ?x4115)))
 (let ((?x5490 (ite (and (distinct ((_ extract 10 6) C2) (_ bv0 5)) true) ?x3557 (ite (and (distinct ((_ extract 5 3) C2) (_ bv0 3)) true) ?x3689 ?x6051))))
 (let ((?x5561 (ite (and (distinct ((_ extract 2 2) C1) (_ bv0 1)) true) (_ bv2 40) (ite (and (distinct ((_ extract 1 1) C1) (_ bv0 1)) true) (_ bv1 40) (_ bv0 40)))))
 (let ((?x2319 (ite (and (distinct ((_ extract 4 3) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 4 4) C1) (_ bv0 1)) true) (_ bv4 40) (_ bv3 40)) ?x5561)))
 (let ((?x4093 (ite (and (distinct ((_ extract 7 7) C1) (_ bv0 1)) true) (_ bv7 40) (ite (and (distinct ((_ extract 6 6) C1) (_ bv0 1)) true) (_ bv6 40) (_ bv5 40)))))
 (let ((?x3357 (ite (and (distinct ((_ extract 9 8) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 9 9) C1) (_ bv0 1)) true) (_ bv9 40) (_ bv8 40)) ?x4093)))
 (let ((?x2610 (ite (and (distinct ((_ extract 12 12) C1) (_ bv0 1)) true) (_ bv12 40) (ite (and (distinct ((_ extract 11 11) C1) (_ bv0 1)) true) (_ bv11 40) (_ bv10 40)))))
 (let ((?x2849 (ite (and (distinct ((_ extract 14 13) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 14 14) C1) (_ bv0 1)) true) (_ bv14 40) (_ bv13 40)) ?x2610)))
 (let ((?x1419 (ite (and (distinct ((_ extract 17 17) C1) (_ bv0 1)) true) (_ bv17 40) (ite (and (distinct ((_ extract 16 16) C1) (_ bv0 1)) true) (_ bv16 40) (_ bv15 40)))))
 (let ((?x2522 (ite (and (distinct ((_ extract 19 18) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 19 19) C1) (_ bv0 1)) true) (_ bv19 40) (_ bv18 40)) ?x1419)))
 (let ((?x2246 (ite (and (distinct ((_ extract 19 10) C1) (_ bv0 10)) true) (ite (and (distinct ((_ extract 19 15) C1) (_ bv0 5)) true) ?x2522 ?x2849) (ite (and (distinct ((_ extract 9 5) C1) (_ bv0 5)) true) ?x3357 ?x2319))))
 (let ((?x2706 (ite (and (distinct ((_ extract 22 22) C1) (_ bv0 1)) true) (_ bv22 40) (ite (and (distinct ((_ extract 21 21) C1) (_ bv0 1)) true) (_ bv21 40) (_ bv20 40)))))
 (let ((?x1846 (ite (and (distinct ((_ extract 24 23) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 24 24) C1) (_ bv0 1)) true) (_ bv24 40) (_ bv23 40)) ?x2706)))
 (let ((?x3555 (ite (and (distinct ((_ extract 27 27) C1) (_ bv0 1)) true) (_ bv27 40) (ite (and (distinct ((_ extract 26 26) C1) (_ bv0 1)) true) (_ bv26 40) (_ bv25 40)))))
 (let ((?x3888 (ite (and (distinct ((_ extract 29 28) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 29 29) C1) (_ bv0 1)) true) (_ bv29 40) (_ bv28 40)) ?x3555)))
 (let ((?x4570 (ite (and (distinct ((_ extract 32 32) C1) (_ bv0 1)) true) (_ bv32 40) (ite (and (distinct ((_ extract 31 31) C1) (_ bv0 1)) true) (_ bv31 40) (_ bv30 40)))))
 (let ((?x1390 (ite (and (distinct ((_ extract 34 33) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 34 34) C1) (_ bv0 1)) true) (_ bv34 40) (_ bv33 40)) ?x4570)))
 (let ((?x3902 (ite (and (distinct ((_ extract 37 37) C1) (_ bv0 1)) true) (_ bv37 40) (ite (and (distinct ((_ extract 36 36) C1) (_ bv0 1)) true) (_ bv36 40) (_ bv35 40)))))
 (let ((?x4630 (ite (and (distinct ((_ extract 39 38) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 39 39) C1) (_ bv0 1)) true) (_ bv39 40) (_ bv38 40)) ?x3902)))
 (let ((?x3483 (ite (and (distinct ((_ extract 39 30) C1) (_ bv0 10)) true) (ite (and (distinct ((_ extract 39 35) C1) (_ bv0 5)) true) ?x4630 ?x1390) (ite (and (distinct ((_ extract 29 25) C1) (_ bv0 5)) true) ?x3888 ?x1846))))
 (let ((?x3861 (bvsub (ite (and (distinct ((_ extract 39 20) C1) (_ bv0 20)) true) ?x3483 ?x2246) ?x5490)))
 (let ((?x6388 (ite (and (distinct ((_ extract 2 2) C1) (_ bv0 1)) true) (_ bv2 32) (ite (and (distinct ((_ extract 1 1) C1) (_ bv0 1)) true) (_ bv1 32) (_ bv0 32)))))
 (let ((?x5129 (ite (and (distinct ((_ extract 4 3) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 4 4) C1) (_ bv0 1)) true) (_ bv4 32) (_ bv3 32)) ?x6388)))
 (let ((?x5946 (ite (and (distinct ((_ extract 7 7) C1) (_ bv0 1)) true) (_ bv7 32) (ite (and (distinct ((_ extract 6 6) C1) (_ bv0 1)) true) (_ bv6 32) (_ bv5 32)))))
 (let ((?x5922 (ite (and (distinct ((_ extract 9 8) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 9 9) C1) (_ bv0 1)) true) (_ bv9 32) (_ bv8 32)) ?x5946)))
 (let ((?x5289 (ite (and (distinct ((_ extract 12 12) C1) (_ bv0 1)) true) (_ bv12 32) (ite (and (distinct ((_ extract 11 11) C1) (_ bv0 1)) true) (_ bv11 32) (_ bv10 32)))))
 (let ((?x5258 (ite (and (distinct ((_ extract 14 13) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 14 14) C1) (_ bv0 1)) true) (_ bv14 32) (_ bv13 32)) ?x5289)))
 (let ((?x4101 (ite (and (distinct ((_ extract 17 17) C1) (_ bv0 1)) true) (_ bv17 32) (ite (and (distinct ((_ extract 16 16) C1) (_ bv0 1)) true) (_ bv16 32) (_ bv15 32)))))
 (let ((?x4085 (ite (and (distinct ((_ extract 19 18) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 19 19) C1) (_ bv0 1)) true) (_ bv19 32) (_ bv18 32)) ?x4101)))
 (let ((?x5112 (ite (and (distinct ((_ extract 19 10) C1) (_ bv0 10)) true) (ite (and (distinct ((_ extract 19 15) C1) (_ bv0 5)) true) ?x4085 ?x5258) (ite (and (distinct ((_ extract 9 5) C1) (_ bv0 5)) true) ?x5922 ?x5129))))
 (let ((?x2701 (ite (and (distinct ((_ extract 22 22) C1) (_ bv0 1)) true) (_ bv22 32) (ite (and (distinct ((_ extract 21 21) C1) (_ bv0 1)) true) (_ bv21 32) (_ bv20 32)))))
 (let ((?x3310 (ite (and (distinct ((_ extract 24 23) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 24 24) C1) (_ bv0 1)) true) (_ bv24 32) (_ bv23 32)) ?x2701)))
 (let ((?x4958 (ite (and (distinct ((_ extract 27 27) C1) (_ bv0 1)) true) (_ bv27 32) (ite (and (distinct ((_ extract 26 26) C1) (_ bv0 1)) true) (_ bv26 32) (_ bv25 32)))))
 (let ((?x2684 (ite (and (distinct ((_ extract 29 28) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 29 29) C1) (_ bv0 1)) true) (_ bv29 32) (_ bv28 32)) ?x4958)))
 (let ((?x2045 (ite (and (distinct ((_ extract 32 32) C1) (_ bv0 1)) true) (_ bv32 32) (ite (and (distinct ((_ extract 31 31) C1) (_ bv0 1)) true) (_ bv31 32) (_ bv30 32)))))
 (let ((?x1545 (ite (and (distinct ((_ extract 34 33) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 34 34) C1) (_ bv0 1)) true) (_ bv34 32) (_ bv33 32)) ?x2045)))
 (let ((?x4828 (ite (and (distinct ((_ extract 37 37) C1) (_ bv0 1)) true) (_ bv37 32) (ite (and (distinct ((_ extract 36 36) C1) (_ bv0 1)) true) (_ bv36 32) (_ bv35 32)))))
 (let ((?x5565 (ite (and (distinct ((_ extract 39 38) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 39 39) C1) (_ bv0 1)) true) (_ bv39 32) (_ bv38 32)) ?x4828)))
 (let ((?x3154 (ite (and (distinct ((_ extract 39 30) C1) (_ bv0 10)) true) (ite (and (distinct ((_ extract 39 35) C1) (_ bv0 5)) true) ?x5565 ?x1545) (ite (and (distinct ((_ extract 29 25) C1) (_ bv0 5)) true) ?x2684 ?x3310))))
 (let ((?x3266 (ite (and (distinct ((_ extract 2 2) C2) (_ bv0 1)) true) (_ bv2 32) (ite (and (distinct ((_ extract 1 1) C2) (_ bv0 1)) true) (_ bv1 32) (_ bv0 32)))))
 (let ((?x5373 (ite (and (distinct ((_ extract 5 5) C2) (_ bv0 1)) true) (_ bv5 32) (ite (and (distinct ((_ extract 4 4) C2) (_ bv0 1)) true) (_ bv4 32) (_ bv3 32)))))
 (let ((?x1876 (ite (and (distinct ((_ extract 8 8) C2) (_ bv0 1)) true) (_ bv8 32) (ite (and (distinct ((_ extract 7 7) C2) (_ bv0 1)) true) (_ bv7 32) (_ bv6 32)))))
 (let ((?x2709 (ite (and (distinct ((_ extract 10 9) C2) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) C2) (_ bv0 1)) true) (_ bv10 32) (_ bv9 32)) ?x1876)))
 (let ((?x3344 (ite (and (distinct ((_ extract 10 6) C2) (_ bv0 5)) true) ?x2709 (ite (and (distinct ((_ extract 5 3) C2) (_ bv0 3)) true) ?x5373 ?x3266))))
 (and (and (and (distinct C1 (_ bv0 40)) true) (= (bvand C1 (bvsub C1 (_ bv1 40))) (_ bv0 40))) (and (and (distinct C2 (_ bv0 11)) true) (= (bvand C2 (bvsub C2 (_ bv1 11))) (_ bv0 11))) (bvslt ?x3344 (ite (and (distinct ((_ extract 39 20) C1) (_ bv0 20)) true) ?x3154 ?x5112)) (not (bvult ?x3861 (_ bv40 40))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
