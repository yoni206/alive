(set-info :status unknown)
(declare-fun C3 () (_ BitVec 11))
(declare-fun C2 () (_ BitVec 11))
(declare-fun C () (_ BitVec 22))
(assert
 (let ((?x1427 (ite (and (distinct ((_ extract 2 2) (bvsub C2 C3)) (_ bv0 1)) true) (_ bv2 11) (ite (and (distinct ((_ extract 1 1) (bvsub C2 C3)) (_ bv0 1)) true) (_ bv1 11) (_ bv0 11)))))
 (let ((?x2656 (ite (and (distinct ((_ extract 5 5) (bvsub C2 C3)) (_ bv0 1)) true) (_ bv5 11) (ite (and (distinct ((_ extract 4 4) (bvsub C2 C3)) (_ bv0 1)) true) (_ bv4 11) (_ bv3 11)))))
 (let ((?x6794 (ite (and (distinct ((_ extract 8 8) (bvsub C2 C3)) (_ bv0 1)) true) (_ bv8 11) (ite (and (distinct ((_ extract 7 7) (bvsub C2 C3)) (_ bv0 1)) true) (_ bv7 11) (_ bv6 11)))))
 (let ((?x3354 (ite (and (distinct ((_ extract 10 9) (bvsub C2 C3)) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) (bvsub C2 C3)) (_ bv0 1)) true) (_ bv10 11) (_ bv9 11)) ?x6794)))
 (let ((?x2715 (ite (and (distinct ((_ extract 10 6) (bvsub C2 C3)) (_ bv0 5)) true) ?x3354 (ite (and (distinct ((_ extract 5 3) (bvsub C2 C3)) (_ bv0 3)) true) ?x2656 ?x1427))))
 (let ((?x5494 (ite (and (distinct ((_ extract 2 2) C) (_ bv0 1)) true) (_ bv2 11) (ite (and (distinct ((_ extract 1 1) C) (_ bv0 1)) true) (_ bv1 11) (_ bv0 11)))))
 (let ((?x6470 (ite (and (distinct ((_ extract 5 5) C) (_ bv0 1)) true) (_ bv5 11) (ite (and (distinct ((_ extract 4 4) C) (_ bv0 1)) true) (_ bv4 11) (_ bv3 11)))))
 (let ((?x3607 (ite (and (distinct ((_ extract 8 8) C) (_ bv0 1)) true) (_ bv8 11) (ite (and (distinct ((_ extract 7 7) C) (_ bv0 1)) true) (_ bv7 11) (_ bv6 11)))))
 (let ((?x1294 (ite (and (distinct ((_ extract 10 9) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) C) (_ bv0 1)) true) (_ bv10 11) (_ bv9 11)) ?x3607)))
 (let ((?x6912 (ite (and (distinct ((_ extract 10 6) C) (_ bv0 5)) true) ?x1294 (ite (and (distinct ((_ extract 5 3) C) (_ bv0 3)) true) ?x6470 ?x5494))))
 (let ((?x1380 (ite (and (distinct ((_ extract 13 13) C) (_ bv0 1)) true) (_ bv13 11) (ite (and (distinct ((_ extract 12 12) C) (_ bv0 1)) true) (_ bv12 11) (_ bv11 11)))))
 (let ((?x5722 (ite (and (distinct ((_ extract 16 16) C) (_ bv0 1)) true) (_ bv16 11) (ite (and (distinct ((_ extract 15 15) C) (_ bv0 1)) true) (_ bv15 11) (_ bv14 11)))))
 (let ((?x2598 (ite (and (distinct ((_ extract 19 19) C) (_ bv0 1)) true) (_ bv19 11) (ite (and (distinct ((_ extract 18 18) C) (_ bv0 1)) true) (_ bv18 11) (_ bv17 11)))))
 (let ((?x6679 (ite (and (distinct ((_ extract 21 20) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 21 21) C) (_ bv0 1)) true) (_ bv21 11) (_ bv20 11)) ?x2598)))
 (let ((?x1782 (ite (and (distinct ((_ extract 21 17) C) (_ bv0 5)) true) ?x6679 (ite (and (distinct ((_ extract 16 14) C) (_ bv0 3)) true) ?x5722 ?x1380))))
 (let ((?x5518 (bvsub (ite (and (distinct ((_ extract 21 11) C) (_ bv0 11)) true) ?x1782 ?x6912) ?x2715)))
 (let ((?x7439 (ite (bvsgt (_ bv0 11) ?x5518) (_ bv0 11) ?x5518)))
 (let ((?x4924 (bvsub ?x2715 (ite (and (distinct ((_ extract 21 11) C) (_ bv0 11)) true) ?x1782 ?x6912))))
 (let ((?x7143 (ite (bvsgt (_ bv0 11) ?x4924) (_ bv0 11) ?x4924)))
 (let ((?x1783 (ite (and (distinct ((_ extract 2 2) C) (_ bv0 1)) true) (_ bv2 32) (ite (and (distinct ((_ extract 1 1) C) (_ bv0 1)) true) (_ bv1 32) (_ bv0 32)))))
 (let ((?x1219 (ite (and (distinct ((_ extract 5 5) C) (_ bv0 1)) true) (_ bv5 32) (ite (and (distinct ((_ extract 4 4) C) (_ bv0 1)) true) (_ bv4 32) (_ bv3 32)))))
 (let ((?x3084 (ite (and (distinct ((_ extract 8 8) C) (_ bv0 1)) true) (_ bv8 32) (ite (and (distinct ((_ extract 7 7) C) (_ bv0 1)) true) (_ bv7 32) (_ bv6 32)))))
 (let ((?x6582 (ite (and (distinct ((_ extract 10 9) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) C) (_ bv0 1)) true) (_ bv10 32) (_ bv9 32)) ?x3084)))
 (let ((?x1279 (ite (and (distinct ((_ extract 10 6) C) (_ bv0 5)) true) ?x6582 (ite (and (distinct ((_ extract 5 3) C) (_ bv0 3)) true) ?x1219 ?x1783))))
 (let ((?x2221 (ite (and (distinct ((_ extract 13 13) C) (_ bv0 1)) true) (_ bv13 32) (ite (and (distinct ((_ extract 12 12) C) (_ bv0 1)) true) (_ bv12 32) (_ bv11 32)))))
 (let ((?x2831 (ite (and (distinct ((_ extract 16 16) C) (_ bv0 1)) true) (_ bv16 32) (ite (and (distinct ((_ extract 15 15) C) (_ bv0 1)) true) (_ bv15 32) (_ bv14 32)))))
 (let ((?x8322 (ite (and (distinct ((_ extract 19 19) C) (_ bv0 1)) true) (_ bv19 32) (ite (and (distinct ((_ extract 18 18) C) (_ bv0 1)) true) (_ bv18 32) (_ bv17 32)))))
 (let ((?x5291 (ite (and (distinct ((_ extract 21 20) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 21 21) C) (_ bv0 1)) true) (_ bv21 32) (_ bv20 32)) ?x8322)))
 (let ((?x3363 (ite (and (distinct ((_ extract 21 17) C) (_ bv0 5)) true) ?x5291 (ite (and (distinct ((_ extract 16 14) C) (_ bv0 3)) true) ?x2831 ?x2221))))
 (let (($x1371 (and (and (distinct (bvsub C2 C3) (_ bv0 11)) true) (= (bvand (bvsub C2 C3) (bvsub (bvsub C2 C3) (_ bv1 11))) (_ bv0 11)))))
 (and (and (and (distinct C (_ bv0 22)) true) (= (bvand C (bvsub C (_ bv1 22))) (_ bv0 22))) $x1371 (bvslt (ite (and (distinct ((_ extract 21 11) C) (_ bv0 11)) true) ?x3363 ?x1279) (_ bv11 32)) (not (and (bvult ?x7143 (_ bv11 11)) (bvult ?x7439 (_ bv11 11))))))))))))))))))))))))))))))))))))
(check-sat)
