(set-info :status unknown)
(declare-fun mem0 () (_ BitVec 8))
(declare-fun alloca%a_2962 () (_ BitVec 8))
(declare-fun %a () (_ BitVec 64))
(declare-fun idx () (_ BitVec 64))
(declare-fun %x () (_ BitVec 5))
(declare-fun %idx () (_ BitVec 9))
(declare-fun u_%a () (_ BitVec 8))
(declare-fun u_%ptr () (_ BitVec 8))
(assert
 (forall ((alloca%a_2961 (_ BitVec 8)) (alloca%a_2963 (_ BitVec 8)) )(let (($x13347 (= idx (bvadd %a (_ bv0 64)))))
 (let ((?x3737 (ite $x13347 ((_ extract 7 0) alloca%a_2962) mem0)))
 (let ((?x14222 (ite (= (bvadd %a (bvmul (_ bv1 64) ((_ sign_extend 55) %idx))) (bvadd %a (_ bv0 64))) ((_ extract 7 0) alloca%a_2961) mem0)))
 (let (($x12911 (bvuge (_ bv0 64) (bvsub (bvadd %a (bvmul (_ bv1 64) ((_ sign_extend 55) %idx))) %a))))
 (let (($x13016 (and (distinct %a (_ bv0 64)) true)))
 (let (($x16835 (and $x13016 (and (distinct (bvadd %a (bvmul (_ bv1 64) ((_ sign_extend 55) %idx))) (_ bv0 64)) true) (and (bvuge (bvadd %a (bvmul (_ bv1 64) ((_ sign_extend 55) %idx))) %a) $x12911) (= idx (bvadd %a (bvmul (_ bv1 64) ((_ sign_extend 55) %idx)))))))
 (let ((?x4916 (ite $x16835 (concat ((_ extract 7 5) ?x14222) ((_ extract 4 0) %x)) (ite $x13347 ((_ extract 7 0) alloca%a_2961) mem0))))
 (and $x13016 $x13016 (= u_%ptr (_ bv1 8)) (= u_%a (_ bv1 8)) $x13016 $x13016 $x13016 (and (distinct (ite $x13347 ((_ extract 7 0) alloca%a_2963) ?x4916) ?x3737) true))))))))))
 )
(check-sat)
