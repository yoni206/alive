(set-info :status unknown)
(declare-fun mem0 () (_ BitVec 8))
(declare-fun alloca%a_2983 () (_ BitVec 8))
(declare-fun %a () (_ BitVec 64))
(declare-fun idx () (_ BitVec 64))
(declare-fun %x () (_ BitVec 5))
(declare-fun %idx () (_ BitVec 16))
(declare-fun u_%a () (_ BitVec 8))
(declare-fun u_%ptr () (_ BitVec 8))
(assert
 (forall ((alloca%a_2982 (_ BitVec 8)) (alloca%a_2984 (_ BitVec 8)) )(let (($x2944 (= idx (bvadd %a (_ bv0 64)))))
 (let ((?x1440 (ite $x2944 ((_ extract 7 0) alloca%a_2983) mem0)))
 (let ((?x16990 (ite (= (bvadd %a (bvmul (_ bv1 64) ((_ sign_extend 48) %idx))) (bvadd %a (_ bv0 64))) ((_ extract 7 0) alloca%a_2982) mem0)))
 (let (($x16308 (bvuge (_ bv0 64) (bvsub (bvadd %a (bvmul (_ bv1 64) ((_ sign_extend 48) %idx))) %a))))
 (let (($x10650 (and (distinct %a (_ bv0 64)) true)))
 (let (($x18372 (and $x10650 (and (distinct (bvadd %a (bvmul (_ bv1 64) ((_ sign_extend 48) %idx))) (_ bv0 64)) true) (and (bvuge (bvadd %a (bvmul (_ bv1 64) ((_ sign_extend 48) %idx))) %a) $x16308) (= idx (bvadd %a (bvmul (_ bv1 64) ((_ sign_extend 48) %idx)))))))
 (let ((?x12694 (ite $x18372 (concat ((_ extract 7 5) ?x16990) ((_ extract 4 0) %x)) (ite $x2944 ((_ extract 7 0) alloca%a_2982) mem0))))
 (and $x10650 $x10650 (= u_%ptr (_ bv1 8)) (= u_%a (_ bv1 8)) $x10650 $x10650 $x10650 (and (distinct (ite $x2944 ((_ extract 7 0) alloca%a_2984) ?x12694) ?x1440) true))))))))))
 )
(check-sat)
