(set-info :status unknown)
(declare-fun mem0 () (_ BitVec 8))
(declare-fun %y () (_ BitVec 38))
(declare-fun %p2 () (_ BitVec 64))
(declare-fun idx () (_ BitVec 64))
(declare-fun %x () (_ BitVec 38))
(declare-fun %p1 () (_ BitVec 64))
(declare-fun |ana_equivalentAddressValues(%p1, %p2)| () (_ BitVec 1))
(assert
 (let ((?x11219 (ite (and (and (distinct %p2 (_ bv0 64)) true) (or true true) (= idx %p2)) (concat ((_ extract 7 6) mem0) ((_ extract 5 0) %y)) mem0)))
 (let (($x7848 (or true true)))
 (let (($x11371 (and (distinct %p2 (_ bv0 64)) true)))
 (let ((?x7397 (ite (and $x11371 $x7848 (= idx (bvadd (bvadd %p2 (_ bv1 64)) (_ bv0 64)))) ((_ extract 13 6) %y) ?x11219)))
 (let ((?x15136 (ite (and $x11371 $x7848 (= idx (bvadd (bvadd %p2 (_ bv1 64)) (_ bv1 64)))) ((_ extract 21 14) %y) ?x7397)))
 (let ((?x1219 (ite (and $x11371 $x7848 (= idx (bvadd (bvadd %p2 (_ bv1 64)) (_ bv2 64)))) ((_ extract 29 22) %y) ?x15136)))
 (let ((?x3794 (ite (and $x11371 $x7848 (= idx (bvadd (bvadd %p2 (_ bv1 64)) (_ bv3 64)))) ((_ extract 37 30) %y) ?x1219)))
 (let ((?x6283 (ite (and (and (distinct %p1 (_ bv0 64)) true) $x7848 (= idx %p1)) (concat ((_ extract 7 6) mem0) ((_ extract 5 0) %x)) mem0)))
 (let (($x17212 (and (distinct %p1 (_ bv0 64)) true)))
 (let ((?x1172 (ite (and $x17212 $x7848 (= idx (bvadd (bvadd %p1 (_ bv1 64)) (_ bv0 64)))) ((_ extract 13 6) %x) ?x6283)))
 (let ((?x5140 (ite (and $x17212 $x7848 (= idx (bvadd (bvadd %p1 (_ bv1 64)) (_ bv1 64)))) ((_ extract 21 14) %x) ?x1172)))
 (let ((?x18561 (ite (and $x17212 $x7848 (= idx (bvadd (bvadd %p1 (_ bv1 64)) (_ bv2 64)))) ((_ extract 29 22) %x) ?x5140)))
 (let ((?x9066 (ite (and $x17212 $x7848 (= idx (bvadd (bvadd %p1 (_ bv1 64)) (_ bv3 64)))) ((_ extract 37 30) %x) ?x18561)))
 (let ((?x14457 (ite (and $x17212 $x7848 (= %p2 %p1)) (concat ((_ extract 7 6) mem0) ((_ extract 5 0) %x)) mem0)))
 (let ((?x11965 (ite (and $x17212 $x7848 (= %p2 (bvadd (bvadd %p1 (_ bv1 64)) (_ bv0 64)))) ((_ extract 13 6) %x) ?x14457)))
 (let ((?x17704 (ite (and $x17212 $x7848 (= %p2 (bvadd (bvadd %p1 (_ bv1 64)) (_ bv1 64)))) ((_ extract 21 14) %x) ?x11965)))
 (let ((?x14365 (ite (and $x17212 $x7848 (= %p2 (bvadd (bvadd %p1 (_ bv1 64)) (_ bv2 64)))) ((_ extract 29 22) %x) ?x17704)))
 (let ((?x15086 (ite (and $x17212 $x7848 (= %p2 (bvadd (bvadd %p1 (_ bv1 64)) (_ bv3 64)))) ((_ extract 37 30) %x) ?x14365)))
 (let ((?x7164 (ite (and $x17212 $x7848 $x11371 $x7848 (= idx %p2)) (concat ((_ extract 7 6) ?x15086) ((_ extract 5 0) %y)) ?x9066)))
 (let ((?x1668 (ite (and $x17212 $x7848 $x11371 $x7848 (= idx (bvadd (bvadd %p2 (_ bv1 64)) (_ bv0 64)))) ((_ extract 13 6) %y) ?x7164)))
 (let ((?x17144 (ite (and $x17212 $x7848 $x11371 $x7848 (= idx (bvadd (bvadd %p2 (_ bv1 64)) (_ bv1 64)))) ((_ extract 21 14) %y) ?x1668)))
 (let ((?x13552 (ite (and $x17212 $x7848 $x11371 $x7848 (= idx (bvadd (bvadd %p2 (_ bv1 64)) (_ bv2 64)))) ((_ extract 29 22) %y) ?x17144)))
 (let ((?x16781 (ite (and $x17212 $x7848 $x11371 $x7848 (= idx (bvadd (bvadd %p2 (_ bv1 64)) (_ bv3 64)))) ((_ extract 37 30) %y) ?x13552)))
 (let (($x9931 (= |ana_equivalentAddressValues(%p1, %p2)| (_ bv1 1))))
 (and (=> $x9931 (= %p1 %p2)) $x9931 (and (distinct ?x16781 ?x3794) true)))))))))))))))))))))))))))
(check-sat)
