(set-info :status unknown)
(declare-fun %K2 () (_ BitVec 64))
(declare-fun %K1 () (_ BitVec 64))
(declare-fun %A () (_ BitVec 64))
(declare-fun |ana_isPowerOf2(%K2)| () (_ BitVec 1))
(declare-fun |ana_isPowerOf2(%K1)| () (_ BitVec 1))
(assert
 (let ((?x14896 (ite (and (distinct (bvand %A (bvor %K1 %K2)) (bvor %K1 %K2)) true) (_ bv1 1) (_ bv0 1))))
 (let ((?x313 (ite (= (bvand %A %K2) (_ bv0 64)) (_ bv1 1) (_ bv0 1))))
 (let ((?x9693 (ite (= (bvand %A %K1) (_ bv0 64)) (_ bv1 1) (_ bv0 1))))
 (let (($x18040 (= |ana_isPowerOf2(%K2)| (_ bv1 1))))
 (let (($x16225 (= |ana_isPowerOf2(%K1)| (_ bv1 1))))
 (let (($x18402 (=> $x18040 (and (and (distinct %K2 (_ bv0 64)) true) (= (bvand %K2 (bvsub %K2 (_ bv1 64))) (_ bv0 64))))))
 (let (($x14046 (=> $x16225 (and (and (distinct %K1 (_ bv0 64)) true) (= (bvand %K1 (bvsub %K1 (_ bv1 64))) (_ bv0 64))))))
 (and $x14046 $x18402 $x16225 $x18040 (and (distinct (bvor ?x9693 ?x313) ?x14896) true))))))))))
(check-sat)
