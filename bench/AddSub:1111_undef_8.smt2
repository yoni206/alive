(set-info :status unknown)
(declare-fun C2 () (_ BitVec 14))
(declare-fun C1 () (_ BitVec 14))
(assert
 (let ((?x3936 (ite (and (distinct ((_ extract 3 2) C2) (_ bv0 2)) true) (ite (and (distinct ((_ extract 3 3) C2) (_ bv0 1)) true) (_ bv3 14) (_ bv2 14)) (ite (and (distinct ((_ extract 1 1) C2) (_ bv0 1)) true) (_ bv1 14) (_ bv0 14)))))
 (let ((?x5092 (ite (and (distinct ((_ extract 6 6) C2) (_ bv0 1)) true) (_ bv6 14) (ite (and (distinct ((_ extract 5 5) C2) (_ bv0 1)) true) (_ bv5 14) (_ bv4 14)))))
 (let ((?x3908 (ite (and (distinct ((_ extract 10 9) C2) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) C2) (_ bv0 1)) true) (_ bv10 14) (_ bv9 14)) (ite (and (distinct ((_ extract 8 8) C2) (_ bv0 1)) true) (_ bv8 14) (_ bv7 14)))))
 (let ((?x4212 (ite (and (distinct ((_ extract 13 13) C2) (_ bv0 1)) true) (_ bv13 14) (ite (and (distinct ((_ extract 12 12) C2) (_ bv0 1)) true) (_ bv12 14) (_ bv11 14)))))
 (let ((?x2618 (ite (and (distinct ((_ extract 13 7) C2) (_ bv0 7)) true) (ite (and (distinct ((_ extract 13 11) C2) (_ bv0 3)) true) ?x4212 ?x3908) (ite (and (distinct ((_ extract 6 4) C2) (_ bv0 3)) true) ?x5092 ?x3936))))
 (let ((?x3394 (bvsub (_ bv14 14) (bvsub (bvsub (_ bv14 14) ?x2618) (_ bv1 14)))))
 (let (($x763 (bvult ?x3394 (_ bv14 14))))
 (and (= C1 (bvneg C2)) (and (and (distinct C2 (_ bv0 14)) true) (= (bvand C2 (bvsub C2 (_ bv1 14))) (_ bv0 14))) (not (= (bvand C2 (bvshl (_ bv16383 14) ?x3394)) (_ bv0 14))) (not (and $x763 $x763)))))))))))
(check-sat)
