(set-info :status unknown)
(declare-fun mem0 () (_ BitVec 8))
(declare-fun %x () (_ BitVec 18))
(declare-fun %p1 () (_ BitVec 64))
(declare-fun idx () (_ BitVec 64))
(declare-fun |ana_equivalentAddressValues(%p1, %p2)| () (_ BitVec 1))
(declare-fun %p2 () (_ BitVec 64))
(assert
 (let ((?x13904 (concat ((_ extract 7 2) mem0) ((_ extract 1 0) %x))))
 (let ((?x3677 (ite (and (and (distinct %p1 (_ bv0 64)) true) (or true true) (= idx %p1)) ?x13904 mem0)))
 (let ((?x1989 ((_ extract 9 2) %x)))
 (let (($x9014 (or true true)))
 (let (($x6055 (and (distinct %p1 (_ bv0 64)) true)))
 (let ((?x12216 (ite (and $x6055 $x9014 (= idx (bvadd (bvadd %p1 (_ bv1 64)) (_ bv0 64)))) ?x1989 ?x3677)))
 (let ((?x8283 ((_ extract 17 10) %x)))
 (let ((?x14693 (ite (and $x6055 $x9014 (= idx (bvadd (bvadd %p1 (_ bv1 64)) (_ bv1 64)))) ?x8283 ?x12216)))
 (let (($x3641 (= |ana_equivalentAddressValues(%p1, %p2)| (_ bv1 1))))
 (and (=> $x3641 (= %p1 %p2)) $x3641 (and (distinct ?x14693 ?x14693) true))))))))))))
(check-sat)
