(set-info :status unknown)
(declare-fun mem0 () (_ BitVec 8))
(declare-fun %p2 () (_ BitVec 64))
(declare-fun idx () (_ BitVec 64))
(declare-fun %p1 () (_ BitVec 64))
(declare-fun |ana_equivalentAddressValues(%p1, %p2)| () (_ BitVec 1))
(assert
 (let (($x11352 (or true true)))
 (let (($x18224 (and (distinct %p2 (_ bv0 64)) true)))
 (let (($x19893 (and (distinct %p1 (_ bv0 64)) true)))
 (let ((?x16348 (ite (and $x19893 $x11352 $x19893 $x11352 $x19893 $x11352 $x18224 $x11352 (= idx %p2)) (concat ((_ extract 7 4) mem0) ((_ extract 3 0) (concat mem0 ((_ extract 3 0) mem0)))) mem0)))
 (let (($x5623 (and $x19893 $x11352 $x19893 $x11352 $x19893 $x11352 $x18224 $x11352 (= idx (bvadd (bvadd %p2 (_ bv1 64)) (_ bv0 64))))))
 (let ((?x11553 (ite $x5623 ((_ extract 11 4) (concat mem0 ((_ extract 3 0) mem0))) ?x16348)))
 (let (($x9749 (= |ana_equivalentAddressValues(%p1, %p2)| (_ bv1 1))))
 (and (=> $x9749 (= %p1 %p2)) $x9749 (and (distinct ?x11553 mem0) true))))))))))
(check-sat)
