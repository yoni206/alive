(set-info :status unknown)
(declare-fun C2 () (_ BitVec 58))
(declare-fun %Y () (_ BitVec 58))
(declare-fun C1 () (_ BitVec 58))
(declare-fun |ana_MaskedValueIsZero(%Y, (-1 << (log2(C2) + 1)))| () (_ BitVec 1))
(assert
 (let ((?x5142 (ite (and (distinct ((_ extract 3 2) C2) (_ bv0 2)) true) (ite (and (distinct ((_ extract 3 3) C2) (_ bv0 1)) true) (_ bv3 58) (_ bv2 58)) (ite (and (distinct ((_ extract 1 1) C2) (_ bv0 1)) true) (_ bv1 58) (_ bv0 58)))))
 (let ((?x2580 (ite (and (distinct ((_ extract 7 6) C2) (_ bv0 2)) true) (ite (and (distinct ((_ extract 7 7) C2) (_ bv0 1)) true) (_ bv7 58) (_ bv6 58)) (ite (and (distinct ((_ extract 5 5) C2) (_ bv0 1)) true) (_ bv5 58) (_ bv4 58)))))
 (let ((?x11432 (ite (and (distinct ((_ extract 11 10) C2) (_ bv0 2)) true) (ite (and (distinct ((_ extract 11 11) C2) (_ bv0 1)) true) (_ bv11 58) (_ bv10 58)) (ite (and (distinct ((_ extract 9 9) C2) (_ bv0 1)) true) (_ bv9 58) (_ bv8 58)))))
 (let ((?x11251 (ite (and (distinct ((_ extract 14 14) C2) (_ bv0 1)) true) (_ bv14 58) (ite (and (distinct ((_ extract 13 13) C2) (_ bv0 1)) true) (_ bv13 58) (_ bv12 58)))))
 (let ((?x7987 (ite (and (distinct ((_ extract 14 8) C2) (_ bv0 7)) true) (ite (and (distinct ((_ extract 14 12) C2) (_ bv0 3)) true) ?x11251 ?x11432) (ite (and (distinct ((_ extract 7 4) C2) (_ bv0 4)) true) ?x2580 ?x5142))))
 (let ((?x9912 (ite (and (distinct ((_ extract 18 17) C2) (_ bv0 2)) true) (ite (and (distinct ((_ extract 18 18) C2) (_ bv0 1)) true) (_ bv18 58) (_ bv17 58)) (ite (and (distinct ((_ extract 16 16) C2) (_ bv0 1)) true) (_ bv16 58) (_ bv15 58)))))
 (let ((?x3818 (ite (and (distinct ((_ extract 21 21) C2) (_ bv0 1)) true) (_ bv21 58) (ite (and (distinct ((_ extract 20 20) C2) (_ bv0 1)) true) (_ bv20 58) (_ bv19 58)))))
 (let ((?x9501 (ite (and (distinct ((_ extract 25 24) C2) (_ bv0 2)) true) (ite (and (distinct ((_ extract 25 25) C2) (_ bv0 1)) true) (_ bv25 58) (_ bv24 58)) (ite (and (distinct ((_ extract 23 23) C2) (_ bv0 1)) true) (_ bv23 58) (_ bv22 58)))))
 (let ((?x1442 (ite (and (distinct ((_ extract 28 28) C2) (_ bv0 1)) true) (_ bv28 58) (ite (and (distinct ((_ extract 27 27) C2) (_ bv0 1)) true) (_ bv27 58) (_ bv26 58)))))
 (let ((?x9284 (ite (and (distinct ((_ extract 28 22) C2) (_ bv0 7)) true) (ite (and (distinct ((_ extract 28 26) C2) (_ bv0 3)) true) ?x1442 ?x9501) (ite (and (distinct ((_ extract 21 19) C2) (_ bv0 3)) true) ?x3818 ?x9912))))
 (let ((?x10475 (ite (and (distinct ((_ extract 32 31) C2) (_ bv0 2)) true) (ite (and (distinct ((_ extract 32 32) C2) (_ bv0 1)) true) (_ bv32 58) (_ bv31 58)) (ite (and (distinct ((_ extract 30 30) C2) (_ bv0 1)) true) (_ bv30 58) (_ bv29 58)))))
 (let ((?x8676 (ite (and (distinct ((_ extract 36 35) C2) (_ bv0 2)) true) (ite (and (distinct ((_ extract 36 36) C2) (_ bv0 1)) true) (_ bv36 58) (_ bv35 58)) (ite (and (distinct ((_ extract 34 34) C2) (_ bv0 1)) true) (_ bv34 58) (_ bv33 58)))))
 (let ((?x554 (ite (and (distinct ((_ extract 40 39) C2) (_ bv0 2)) true) (ite (and (distinct ((_ extract 40 40) C2) (_ bv0 1)) true) (_ bv40 58) (_ bv39 58)) (ite (and (distinct ((_ extract 38 38) C2) (_ bv0 1)) true) (_ bv38 58) (_ bv37 58)))))
 (let ((?x7250 (ite (and (distinct ((_ extract 43 43) C2) (_ bv0 1)) true) (_ bv43 58) (ite (and (distinct ((_ extract 42 42) C2) (_ bv0 1)) true) (_ bv42 58) (_ bv41 58)))))
 (let ((?x9314 (ite (and (distinct ((_ extract 43 37) C2) (_ bv0 7)) true) (ite (and (distinct ((_ extract 43 41) C2) (_ bv0 3)) true) ?x7250 ?x554) (ite (and (distinct ((_ extract 36 33) C2) (_ bv0 4)) true) ?x8676 ?x10475))))
 (let ((?x11016 (ite (and (distinct ((_ extract 47 46) C2) (_ bv0 2)) true) (ite (and (distinct ((_ extract 47 47) C2) (_ bv0 1)) true) (_ bv47 58) (_ bv46 58)) (ite (and (distinct ((_ extract 45 45) C2) (_ bv0 1)) true) (_ bv45 58) (_ bv44 58)))))
 (let ((?x7139 (ite (and (distinct ((_ extract 50 50) C2) (_ bv0 1)) true) (_ bv50 58) (ite (and (distinct ((_ extract 49 49) C2) (_ bv0 1)) true) (_ bv49 58) (_ bv48 58)))))
 (let ((?x9127 (ite (and (distinct ((_ extract 54 53) C2) (_ bv0 2)) true) (ite (and (distinct ((_ extract 54 54) C2) (_ bv0 1)) true) (_ bv54 58) (_ bv53 58)) (ite (and (distinct ((_ extract 52 52) C2) (_ bv0 1)) true) (_ bv52 58) (_ bv51 58)))))
 (let ((?x3696 (ite (and (distinct ((_ extract 57 57) C2) (_ bv0 1)) true) (_ bv57 58) (ite (and (distinct ((_ extract 56 56) C2) (_ bv0 1)) true) (_ bv56 58) (_ bv55 58)))))
 (let ((?x4755 (ite (and (distinct ((_ extract 57 51) C2) (_ bv0 7)) true) (ite (and (distinct ((_ extract 57 55) C2) (_ bv0 3)) true) ?x3696 ?x9127) (ite (and (distinct ((_ extract 50 48) C2) (_ bv0 3)) true) ?x7139 ?x11016))))
 (let ((?x10760 (ite (and (distinct ((_ extract 57 29) C2) (_ bv0 29)) true) (ite (and (distinct ((_ extract 57 44) C2) (_ bv0 14)) true) ?x4755 ?x9314) (ite (and (distinct ((_ extract 28 15) C2) (_ bv0 14)) true) ?x9284 ?x7987))))
 (let ((?x8767 (bvsub (bvsub (_ bv58 58) ?x10760) (_ bv1 58))))
 (let (($x3838 (and (distinct (bvadd (bvxor %Y C2) C1) (bvashr (bvshl %Y ?x8767) ?x8767)) true)))
 (let (($x8100 (= |ana_MaskedValueIsZero(%Y, (-1 << (log2(C2) + 1)))| (_ bv1 1))))
 (and (=> $x8100 (= (bvand %Y (bvshl (_ bv288230376151711743 58) (bvadd ?x10760 (_ bv1 58)))) (_ bv0 58))) (= C2 (bvneg C1)) (and (and (distinct C2 (_ bv0 58)) true) (= (bvand C2 (bvsub C2 (_ bv1 58))) (_ bv0 58))) $x8100 $x3838))))))))))))))))))))))))))
(check-sat)
