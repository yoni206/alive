(set-info :status unknown)
(declare-fun mem0 () (_ BitVec 8))
(declare-fun %x () (_ BitVec 35))
(declare-fun %p1 () (_ BitVec 64))
(declare-fun idx () (_ BitVec 64))
(declare-fun |ana_equivalentAddressValues(%p1, %p2)| () (_ BitVec 1))
(declare-fun %p2 () (_ BitVec 64))
(assert
 (let ((?x19414 (concat ((_ extract 7 3) mem0) ((_ extract 2 0) %x))))
 (let ((?x1038 (ite (and (and (distinct %p1 (_ bv0 64)) true) (or true true) (= idx %p1)) ?x19414 mem0)))
 (let ((?x5799 ((_ extract 10 3) %x)))
 (let (($x11100 (or true true)))
 (let (($x5280 (and (distinct %p1 (_ bv0 64)) true)))
 (let ((?x18254 (ite (and $x5280 $x11100 (= idx (bvadd (bvadd %p1 (_ bv1 64)) (_ bv0 64)))) ?x5799 ?x1038)))
 (let ((?x21161 ((_ extract 18 11) %x)))
 (let ((?x16569 (ite (and $x5280 $x11100 (= idx (bvadd (bvadd %p1 (_ bv1 64)) (_ bv1 64)))) ?x21161 ?x18254)))
 (let ((?x21669 ((_ extract 26 19) %x)))
 (let ((?x7441 (ite (and $x5280 $x11100 (= idx (bvadd (bvadd %p1 (_ bv1 64)) (_ bv2 64)))) ?x21669 ?x16569)))
 (let ((?x24966 ((_ extract 34 27) %x)))
 (let ((?x3717 (ite (and $x5280 $x11100 (= idx (bvadd (bvadd %p1 (_ bv1 64)) (_ bv3 64)))) ?x24966 ?x7441)))
 (let (($x6292 (= |ana_equivalentAddressValues(%p1, %p2)| (_ bv1 1))))
 (and (=> $x6292 (= %p1 %p2)) $x6292 (and (distinct ?x3717 ?x3717) true))))))))))))))))
(check-sat)
