(set-info :source |
 Generated by Alive 0.1
 More info in N. P. Lopes, D. Menendez, S. Nagarakatte, J. Regehr.
 Provably Correct Peephole Optimizations with Alive. In PLDI'15.
|)

(set-info :status unknown)
(declare-fun mem0 () (_ BitVec 8))
(declare-fun |ana_MaskedValueIsZero(%B, ((1 << (width(C2) - countLeadingZeros(((C2 - 1) ^ C2)))) - 1))| () (_ BitVec 1))
(declare-fun C2 () (_ BitVec 37))
(declare-fun C1 () (_ BitVec 37))
(declare-fun %B () (_ BitVec 37))
(assert
 (let (($x817 (and (distinct mem0 mem0) true)))
 (let (($x64669 (= |ana_MaskedValueIsZero(%B, ((1 << (width(C2) - countLeadingZeros(((C2 - 1) ^ C2)))) - 1))| (_ bv1 1))))
 (let ((?x13262 (bvsub C2 (_ bv1 37))))
 (let ((?x70284 (bvor ?x13262 C2)))
 (let (($x67771 (and (and (distinct ?x70284 (_ bv0 37)) true) (= (bvand (bvadd ?x70284 (_ bv1 37)) ?x70284) (_ bv0 37)) $x64669)))
 (let (($x70321 (or (= (bvand (bvadd C2 (_ bv1 37)) (bvsub (bvadd C2 (_ bv1 37)) (_ bv1 37))) (_ bv0 37)) $x67771)))
 (let ((?x51704 (bvand C1 C2)))
 (let (($x67969 (= ?x51704 C2)))
 (let ((?x69623 (ite (= ((_ extract 1 1) (bvxor ?x13262 C2)) (_ bv1 1)) (_ bv35 37) (ite (= ((_ extract 0 0) (bvxor ?x13262 C2)) (_ bv1 1)) (_ bv36 37) (_ bv37 37)))))
 (let ((?x69309 (ite (= ((_ extract 3 3) (bvxor ?x13262 C2)) (_ bv1 1)) (_ bv33 37) (ite (= ((_ extract 2 2) (bvxor ?x13262 C2)) (_ bv1 1)) (_ bv34 37) ?x69623))))
 (let ((?x70089 (ite (= ((_ extract 5 5) (bvxor ?x13262 C2)) (_ bv1 1)) (_ bv31 37) (ite (= ((_ extract 4 4) (bvxor ?x13262 C2)) (_ bv1 1)) (_ bv32 37) ?x69309))))
 (let ((?x70480 (ite (= ((_ extract 7 7) (bvxor ?x13262 C2)) (_ bv1 1)) (_ bv29 37) (ite (= ((_ extract 6 6) (bvxor ?x13262 C2)) (_ bv1 1)) (_ bv30 37) ?x70089))))
 (let ((?x70352 (ite (= ((_ extract 9 9) (bvxor ?x13262 C2)) (_ bv1 1)) (_ bv27 37) (ite (= ((_ extract 8 8) (bvxor ?x13262 C2)) (_ bv1 1)) (_ bv28 37) ?x70480))))
 (let ((?x71306 (ite (= ((_ extract 11 11) (bvxor ?x13262 C2)) (_ bv1 1)) (_ bv25 37) (ite (= ((_ extract 10 10) (bvxor ?x13262 C2)) (_ bv1 1)) (_ bv26 37) ?x70352))))
 (let ((?x71287 (ite (= ((_ extract 13 13) (bvxor ?x13262 C2)) (_ bv1 1)) (_ bv23 37) (ite (= ((_ extract 12 12) (bvxor ?x13262 C2)) (_ bv1 1)) (_ bv24 37) ?x71306))))
 (let ((?x70780 (ite (= ((_ extract 15 15) (bvxor ?x13262 C2)) (_ bv1 1)) (_ bv21 37) (ite (= ((_ extract 14 14) (bvxor ?x13262 C2)) (_ bv1 1)) (_ bv22 37) ?x71287))))
 (let ((?x66050 (ite (= ((_ extract 17 17) (bvxor ?x13262 C2)) (_ bv1 1)) (_ bv19 37) (ite (= ((_ extract 16 16) (bvxor ?x13262 C2)) (_ bv1 1)) (_ bv20 37) ?x70780))))
 (let ((?x70090 (ite (= ((_ extract 19 19) (bvxor ?x13262 C2)) (_ bv1 1)) (_ bv17 37) (ite (= ((_ extract 18 18) (bvxor ?x13262 C2)) (_ bv1 1)) (_ bv18 37) ?x66050))))
 (let ((?x70986 (ite (= ((_ extract 21 21) (bvxor ?x13262 C2)) (_ bv1 1)) (_ bv15 37) (ite (= ((_ extract 20 20) (bvxor ?x13262 C2)) (_ bv1 1)) (_ bv16 37) ?x70090))))
 (let ((?x67952 (ite (= ((_ extract 23 23) (bvxor ?x13262 C2)) (_ bv1 1)) (_ bv13 37) (ite (= ((_ extract 22 22) (bvxor ?x13262 C2)) (_ bv1 1)) (_ bv14 37) ?x70986))))
 (let ((?x64886 (ite (= ((_ extract 25 25) (bvxor ?x13262 C2)) (_ bv1 1)) (_ bv11 37) (ite (= ((_ extract 24 24) (bvxor ?x13262 C2)) (_ bv1 1)) (_ bv12 37) ?x67952))))
 (let ((?x71127 (ite (= ((_ extract 27 27) (bvxor ?x13262 C2)) (_ bv1 1)) (_ bv9 37) (ite (= ((_ extract 26 26) (bvxor ?x13262 C2)) (_ bv1 1)) (_ bv10 37) ?x64886))))
 (let ((?x67601 (ite (= ((_ extract 29 29) (bvxor ?x13262 C2)) (_ bv1 1)) (_ bv7 37) (ite (= ((_ extract 28 28) (bvxor ?x13262 C2)) (_ bv1 1)) (_ bv8 37) ?x71127))))
 (let ((?x71108 (ite (= ((_ extract 31 31) (bvxor ?x13262 C2)) (_ bv1 1)) (_ bv5 37) (ite (= ((_ extract 30 30) (bvxor ?x13262 C2)) (_ bv1 1)) (_ bv6 37) ?x67601))))
 (let ((?x68565 (ite (= ((_ extract 33 33) (bvxor ?x13262 C2)) (_ bv1 1)) (_ bv3 37) (ite (= ((_ extract 32 32) (bvxor ?x13262 C2)) (_ bv1 1)) (_ bv4 37) ?x71108))))
 (let ((?x63858 (ite (= ((_ extract 35 35) (bvxor ?x13262 C2)) (_ bv1 1)) (_ bv1 37) (ite (= ((_ extract 34 34) (bvxor ?x13262 C2)) (_ bv1 1)) (_ bv2 37) ?x68565))))
 (let ((?x70651 (bvshl (_ bv1 37) (bvsub (_ bv37 37) (ite (= ((_ extract 36 36) (bvxor ?x13262 C2)) (_ bv1 1)) (_ bv0 37) ?x63858)))))
 (let (($x69855 (=> $x64669 (= (bvand %B (bvsub ?x70651 (_ bv1 37))) (_ bv0 37)))))
 (and $x69855 $x67969 $x70321 $x817))))))))))))))))))))))))))))))
(check-sat)
