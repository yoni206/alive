(set-info :status unknown)
(declare-fun C2 () (_ BitVec 11))
(declare-fun C1 () (_ BitVec 24))
(assert
 (let ((?x10221 (ite (and (distinct ((_ extract 2 2) C2) (_ bv0 1)) true) (_ bv2 24) (ite (and (distinct ((_ extract 1 1) C2) (_ bv0 1)) true) (_ bv1 24) (_ bv0 24)))))
 (let ((?x23054 (ite (and (distinct ((_ extract 5 5) C2) (_ bv0 1)) true) (_ bv5 24) (ite (and (distinct ((_ extract 4 4) C2) (_ bv0 1)) true) (_ bv4 24) (_ bv3 24)))))
 (let ((?x21514 (ite (and (distinct ((_ extract 8 8) C2) (_ bv0 1)) true) (_ bv8 24) (ite (and (distinct ((_ extract 7 7) C2) (_ bv0 1)) true) (_ bv7 24) (_ bv6 24)))))
 (let ((?x3468 (ite (and (distinct ((_ extract 10 9) C2) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) C2) (_ bv0 1)) true) (_ bv10 24) (_ bv9 24)) ?x21514)))
 (let ((?x16578 (ite (and (distinct ((_ extract 10 6) C2) (_ bv0 5)) true) ?x3468 (ite (and (distinct ((_ extract 5 3) C2) (_ bv0 3)) true) ?x23054 ?x10221))))
 (let ((?x11076 (ite (and (distinct ((_ extract 2 2) C1) (_ bv0 1)) true) (_ bv2 24) (ite (and (distinct ((_ extract 1 1) C1) (_ bv0 1)) true) (_ bv1 24) (_ bv0 24)))))
 (let ((?x8639 (ite (and (distinct ((_ extract 5 5) C1) (_ bv0 1)) true) (_ bv5 24) (ite (and (distinct ((_ extract 4 4) C1) (_ bv0 1)) true) (_ bv4 24) (_ bv3 24)))))
 (let ((?x13460 (ite (and (distinct ((_ extract 8 8) C1) (_ bv0 1)) true) (_ bv8 24) (ite (and (distinct ((_ extract 7 7) C1) (_ bv0 1)) true) (_ bv7 24) (_ bv6 24)))))
 (let ((?x18325 (ite (and (distinct ((_ extract 11 11) C1) (_ bv0 1)) true) (_ bv11 24) (ite (and (distinct ((_ extract 10 10) C1) (_ bv0 1)) true) (_ bv10 24) (_ bv9 24)))))
 (let ((?x24188 (ite (and (distinct ((_ extract 11 6) C1) (_ bv0 6)) true) (ite (and (distinct ((_ extract 11 9) C1) (_ bv0 3)) true) ?x18325 ?x13460) (ite (and (distinct ((_ extract 5 3) C1) (_ bv0 3)) true) ?x8639 ?x11076))))
 (let ((?x2465 (ite (and (distinct ((_ extract 14 14) C1) (_ bv0 1)) true) (_ bv14 24) (ite (and (distinct ((_ extract 13 13) C1) (_ bv0 1)) true) (_ bv13 24) (_ bv12 24)))))
 (let ((?x9869 (ite (and (distinct ((_ extract 17 17) C1) (_ bv0 1)) true) (_ bv17 24) (ite (and (distinct ((_ extract 16 16) C1) (_ bv0 1)) true) (_ bv16 24) (_ bv15 24)))))
 (let ((?x20005 (ite (and (distinct ((_ extract 20 20) C1) (_ bv0 1)) true) (_ bv20 24) (ite (and (distinct ((_ extract 19 19) C1) (_ bv0 1)) true) (_ bv19 24) (_ bv18 24)))))
 (let ((?x6726 (ite (and (distinct ((_ extract 23 23) C1) (_ bv0 1)) true) (_ bv23 24) (ite (and (distinct ((_ extract 22 22) C1) (_ bv0 1)) true) (_ bv22 24) (_ bv21 24)))))
 (let ((?x22671 (ite (and (distinct ((_ extract 23 18) C1) (_ bv0 6)) true) (ite (and (distinct ((_ extract 23 21) C1) (_ bv0 3)) true) ?x6726 ?x20005) (ite (and (distinct ((_ extract 17 15) C1) (_ bv0 3)) true) ?x9869 ?x2465))))
 (let ((?x9770 (bvsub (ite (and (distinct ((_ extract 23 12) C1) (_ bv0 12)) true) ?x22671 ?x24188) ?x16578)))
 (let ((?x12981 (ite (and (distinct ((_ extract 2 2) C1) (_ bv0 1)) true) (_ bv2 32) (ite (and (distinct ((_ extract 1 1) C1) (_ bv0 1)) true) (_ bv1 32) (_ bv0 32)))))
 (let ((?x10681 (ite (and (distinct ((_ extract 5 5) C1) (_ bv0 1)) true) (_ bv5 32) (ite (and (distinct ((_ extract 4 4) C1) (_ bv0 1)) true) (_ bv4 32) (_ bv3 32)))))
 (let ((?x5344 (ite (and (distinct ((_ extract 8 8) C1) (_ bv0 1)) true) (_ bv8 32) (ite (and (distinct ((_ extract 7 7) C1) (_ bv0 1)) true) (_ bv7 32) (_ bv6 32)))))
 (let ((?x708 (ite (and (distinct ((_ extract 11 11) C1) (_ bv0 1)) true) (_ bv11 32) (ite (and (distinct ((_ extract 10 10) C1) (_ bv0 1)) true) (_ bv10 32) (_ bv9 32)))))
 (let ((?x12273 (ite (and (distinct ((_ extract 11 6) C1) (_ bv0 6)) true) (ite (and (distinct ((_ extract 11 9) C1) (_ bv0 3)) true) ?x708 ?x5344) (ite (and (distinct ((_ extract 5 3) C1) (_ bv0 3)) true) ?x10681 ?x12981))))
 (let ((?x324 (ite (and (distinct ((_ extract 14 14) C1) (_ bv0 1)) true) (_ bv14 32) (ite (and (distinct ((_ extract 13 13) C1) (_ bv0 1)) true) (_ bv13 32) (_ bv12 32)))))
 (let ((?x11144 (ite (and (distinct ((_ extract 17 17) C1) (_ bv0 1)) true) (_ bv17 32) (ite (and (distinct ((_ extract 16 16) C1) (_ bv0 1)) true) (_ bv16 32) (_ bv15 32)))))
 (let ((?x17030 (ite (and (distinct ((_ extract 20 20) C1) (_ bv0 1)) true) (_ bv20 32) (ite (and (distinct ((_ extract 19 19) C1) (_ bv0 1)) true) (_ bv19 32) (_ bv18 32)))))
 (let ((?x9816 (ite (and (distinct ((_ extract 23 23) C1) (_ bv0 1)) true) (_ bv23 32) (ite (and (distinct ((_ extract 22 22) C1) (_ bv0 1)) true) (_ bv22 32) (_ bv21 32)))))
 (let ((?x16925 (ite (and (distinct ((_ extract 23 18) C1) (_ bv0 6)) true) (ite (and (distinct ((_ extract 23 21) C1) (_ bv0 3)) true) ?x9816 ?x17030) (ite (and (distinct ((_ extract 17 15) C1) (_ bv0 3)) true) ?x11144 ?x324))))
 (let ((?x18445 (ite (and (distinct ((_ extract 2 2) C2) (_ bv0 1)) true) (_ bv2 32) (ite (and (distinct ((_ extract 1 1) C2) (_ bv0 1)) true) (_ bv1 32) (_ bv0 32)))))
 (let ((?x2812 (ite (and (distinct ((_ extract 5 5) C2) (_ bv0 1)) true) (_ bv5 32) (ite (and (distinct ((_ extract 4 4) C2) (_ bv0 1)) true) (_ bv4 32) (_ bv3 32)))))
 (let ((?x16144 (ite (and (distinct ((_ extract 8 8) C2) (_ bv0 1)) true) (_ bv8 32) (ite (and (distinct ((_ extract 7 7) C2) (_ bv0 1)) true) (_ bv7 32) (_ bv6 32)))))
 (let ((?x869 (ite (and (distinct ((_ extract 10 9) C2) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) C2) (_ bv0 1)) true) (_ bv10 32) (_ bv9 32)) ?x16144)))
 (let ((?x22439 (ite (and (distinct ((_ extract 10 6) C2) (_ bv0 5)) true) ?x869 (ite (and (distinct ((_ extract 5 3) C2) (_ bv0 3)) true) ?x2812 ?x18445))))
 (and (and (and (distinct C1 (_ bv0 24)) true) (= (bvand C1 (bvsub C1 (_ bv1 24))) (_ bv0 24))) (and (and (distinct C2 (_ bv0 11)) true) (= (bvand C2 (bvsub C2 (_ bv1 11))) (_ bv0 11))) (bvslt ?x22439 (ite (and (distinct ((_ extract 23 12) C1) (_ bv0 12)) true) ?x16925 ?x12273)) (not (bvult ?x9770 (_ bv24 24))))))))))))))))))))))))))))))))))))
(check-sat)
