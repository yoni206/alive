(set-info :status unknown)
(declare-fun C2 () (_ BitVec 11))
(declare-fun C1 () (_ BitVec 27))
(assert
 (let ((?x4733 (ite (and (distinct ((_ extract 2 2) C2) (_ bv0 1)) true) (_ bv2 27) (ite (and (distinct ((_ extract 1 1) C2) (_ bv0 1)) true) (_ bv1 27) (_ bv0 27)))))
 (let ((?x2760 (ite (and (distinct ((_ extract 5 5) C2) (_ bv0 1)) true) (_ bv5 27) (ite (and (distinct ((_ extract 4 4) C2) (_ bv0 1)) true) (_ bv4 27) (_ bv3 27)))))
 (let ((?x3659 (ite (and (distinct ((_ extract 8 8) C2) (_ bv0 1)) true) (_ bv8 27) (ite (and (distinct ((_ extract 7 7) C2) (_ bv0 1)) true) (_ bv7 27) (_ bv6 27)))))
 (let ((?x2575 (ite (and (distinct ((_ extract 10 9) C2) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) C2) (_ bv0 1)) true) (_ bv10 27) (_ bv9 27)) ?x3659)))
 (let ((?x6335 (ite (and (distinct ((_ extract 10 6) C2) (_ bv0 5)) true) ?x2575 (ite (and (distinct ((_ extract 5 3) C2) (_ bv0 3)) true) ?x2760 ?x4733))))
 (let ((?x2466 (ite (and (distinct ((_ extract 3 2) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 3 3) C1) (_ bv0 1)) true) (_ bv3 27) (_ bv2 27)) (ite (and (distinct ((_ extract 1 1) C1) (_ bv0 1)) true) (_ bv1 27) (_ bv0 27)))))
 (let ((?x3477 (ite (and (distinct ((_ extract 6 6) C1) (_ bv0 1)) true) (_ bv6 27) (ite (and (distinct ((_ extract 5 5) C1) (_ bv0 1)) true) (_ bv5 27) (_ bv4 27)))))
 (let ((?x2989 (ite (and (distinct ((_ extract 10 9) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) C1) (_ bv0 1)) true) (_ bv10 27) (_ bv9 27)) (ite (and (distinct ((_ extract 8 8) C1) (_ bv0 1)) true) (_ bv8 27) (_ bv7 27)))))
 (let ((?x2326 (ite (and (distinct ((_ extract 13 13) C1) (_ bv0 1)) true) (_ bv13 27) (ite (and (distinct ((_ extract 12 12) C1) (_ bv0 1)) true) (_ bv12 27) (_ bv11 27)))))
 (let ((?x3304 (ite (and (distinct ((_ extract 13 7) C1) (_ bv0 7)) true) (ite (and (distinct ((_ extract 13 11) C1) (_ bv0 3)) true) ?x2326 ?x2989) (ite (and (distinct ((_ extract 6 4) C1) (_ bv0 3)) true) ?x3477 ?x2466))))
 (let ((?x3545 (ite (and (distinct ((_ extract 17 16) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 17 17) C1) (_ bv0 1)) true) (_ bv17 27) (_ bv16 27)) (ite (and (distinct ((_ extract 15 15) C1) (_ bv0 1)) true) (_ bv15 27) (_ bv14 27)))))
 (let ((?x2847 (ite (and (distinct ((_ extract 20 20) C1) (_ bv0 1)) true) (_ bv20 27) (ite (and (distinct ((_ extract 19 19) C1) (_ bv0 1)) true) (_ bv19 27) (_ bv18 27)))))
 (let ((?x3057 (ite (and (distinct ((_ extract 23 23) C1) (_ bv0 1)) true) (_ bv23 27) (ite (and (distinct ((_ extract 22 22) C1) (_ bv0 1)) true) (_ bv22 27) (_ bv21 27)))))
 (let ((?x1968 (ite (and (distinct ((_ extract 26 26) C1) (_ bv0 1)) true) (_ bv26 27) (ite (and (distinct ((_ extract 25 25) C1) (_ bv0 1)) true) (_ bv25 27) (_ bv24 27)))))
 (let ((?x5884 (ite (and (distinct ((_ extract 26 21) C1) (_ bv0 6)) true) (ite (and (distinct ((_ extract 26 24) C1) (_ bv0 3)) true) ?x1968 ?x3057) (ite (and (distinct ((_ extract 20 18) C1) (_ bv0 3)) true) ?x2847 ?x3545))))
 (let ((?x3918 (bvsub (ite (and (distinct ((_ extract 26 14) C1) (_ bv0 13)) true) ?x5884 ?x3304) ?x6335)))
 (let ((?x4509 (ite (and (distinct ((_ extract 3 2) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 3 3) C1) (_ bv0 1)) true) (_ bv3 32) (_ bv2 32)) (ite (and (distinct ((_ extract 1 1) C1) (_ bv0 1)) true) (_ bv1 32) (_ bv0 32)))))
 (let ((?x3679 (ite (and (distinct ((_ extract 6 6) C1) (_ bv0 1)) true) (_ bv6 32) (ite (and (distinct ((_ extract 5 5) C1) (_ bv0 1)) true) (_ bv5 32) (_ bv4 32)))))
 (let ((?x4368 (ite (and (distinct ((_ extract 10 9) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) C1) (_ bv0 1)) true) (_ bv10 32) (_ bv9 32)) (ite (and (distinct ((_ extract 8 8) C1) (_ bv0 1)) true) (_ bv8 32) (_ bv7 32)))))
 (let ((?x3508 (ite (and (distinct ((_ extract 13 13) C1) (_ bv0 1)) true) (_ bv13 32) (ite (and (distinct ((_ extract 12 12) C1) (_ bv0 1)) true) (_ bv12 32) (_ bv11 32)))))
 (let ((?x4422 (ite (and (distinct ((_ extract 13 7) C1) (_ bv0 7)) true) (ite (and (distinct ((_ extract 13 11) C1) (_ bv0 3)) true) ?x3508 ?x4368) (ite (and (distinct ((_ extract 6 4) C1) (_ bv0 3)) true) ?x3679 ?x4509))))
 (let ((?x3092 (ite (and (distinct ((_ extract 17 16) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 17 17) C1) (_ bv0 1)) true) (_ bv17 32) (_ bv16 32)) (ite (and (distinct ((_ extract 15 15) C1) (_ bv0 1)) true) (_ bv15 32) (_ bv14 32)))))
 (let ((?x2576 (ite (and (distinct ((_ extract 20 20) C1) (_ bv0 1)) true) (_ bv20 32) (ite (and (distinct ((_ extract 19 19) C1) (_ bv0 1)) true) (_ bv19 32) (_ bv18 32)))))
 (let ((?x3037 (ite (and (distinct ((_ extract 23 23) C1) (_ bv0 1)) true) (_ bv23 32) (ite (and (distinct ((_ extract 22 22) C1) (_ bv0 1)) true) (_ bv22 32) (_ bv21 32)))))
 (let ((?x2118 (ite (and (distinct ((_ extract 26 26) C1) (_ bv0 1)) true) (_ bv26 32) (ite (and (distinct ((_ extract 25 25) C1) (_ bv0 1)) true) (_ bv25 32) (_ bv24 32)))))
 (let ((?x2913 (ite (and (distinct ((_ extract 26 21) C1) (_ bv0 6)) true) (ite (and (distinct ((_ extract 26 24) C1) (_ bv0 3)) true) ?x2118 ?x3037) (ite (and (distinct ((_ extract 20 18) C1) (_ bv0 3)) true) ?x2576 ?x3092))))
 (let ((?x2343 (ite (and (distinct ((_ extract 2 2) C2) (_ bv0 1)) true) (_ bv2 32) (ite (and (distinct ((_ extract 1 1) C2) (_ bv0 1)) true) (_ bv1 32) (_ bv0 32)))))
 (let ((?x3460 (ite (and (distinct ((_ extract 5 5) C2) (_ bv0 1)) true) (_ bv5 32) (ite (and (distinct ((_ extract 4 4) C2) (_ bv0 1)) true) (_ bv4 32) (_ bv3 32)))))
 (let ((?x5025 (ite (and (distinct ((_ extract 8 8) C2) (_ bv0 1)) true) (_ bv8 32) (ite (and (distinct ((_ extract 7 7) C2) (_ bv0 1)) true) (_ bv7 32) (_ bv6 32)))))
 (let ((?x1332 (ite (and (distinct ((_ extract 10 9) C2) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) C2) (_ bv0 1)) true) (_ bv10 32) (_ bv9 32)) ?x5025)))
 (let ((?x3764 (ite (and (distinct ((_ extract 10 6) C2) (_ bv0 5)) true) ?x1332 (ite (and (distinct ((_ extract 5 3) C2) (_ bv0 3)) true) ?x3460 ?x2343))))
 (and (and (and (distinct C1 (_ bv0 27)) true) (= (bvand C1 (bvsub C1 (_ bv1 27))) (_ bv0 27))) (and (and (distinct C2 (_ bv0 11)) true) (= (bvand C2 (bvsub C2 (_ bv1 11))) (_ bv0 11))) (bvslt ?x3764 (ite (and (distinct ((_ extract 26 14) C1) (_ bv0 13)) true) ?x2913 ?x4422)) (not (bvult ?x3918 (_ bv27 27))))))))))))))))))))))))))))))))))))
(check-sat)
