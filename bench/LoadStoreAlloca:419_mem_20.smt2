(set-info :status unknown)
(declare-fun mem0 () (_ BitVec 8))
(declare-fun %x () (_ BitVec 21))
(declare-fun %p1 () (_ BitVec 64))
(declare-fun idx () (_ BitVec 64))
(declare-fun |ana_equivalentAddressValues(%p1, %p2)| () (_ BitVec 1))
(declare-fun %p2 () (_ BitVec 64))
(assert
 (let ((?x6229 (concat ((_ extract 7 5) mem0) ((_ extract 4 0) %x))))
 (let ((?x8080 (ite (and (and (distinct %p1 (_ bv0 64)) true) (or true true) (= idx %p1)) ?x6229 mem0)))
 (let ((?x6201 ((_ extract 12 5) %x)))
 (let (($x407 (or true true)))
 (let (($x431 (and (distinct %p1 (_ bv0 64)) true)))
 (let ((?x8283 (ite (and $x431 $x407 (= idx (bvadd (bvadd %p1 (_ bv1 64)) (_ bv0 64)))) ?x6201 ?x8080)))
 (let ((?x10633 ((_ extract 20 13) %x)))
 (let ((?x18720 (ite (and $x431 $x407 (= idx (bvadd (bvadd %p1 (_ bv1 64)) (_ bv1 64)))) ?x10633 ?x8283)))
 (let (($x11225 (= |ana_equivalentAddressValues(%p1, %p2)| (_ bv1 1))))
 (and (=> $x11225 (= %p1 %p2)) $x11225 (and (distinct ?x18720 ?x18720) true))))))))))))
(check-sat)
