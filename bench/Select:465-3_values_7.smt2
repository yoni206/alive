(set-info :status unknown)
(declare-fun %Y () (_ BitVec 11))
(declare-fun C2 () (_ BitVec 11))
(declare-fun C1 () (_ BitVec 7))
(declare-fun %X () (_ BitVec 7))
(assert
 (let ((?x1296 (ite (and (distinct ((_ extract 2 2) C2) (_ bv0 1)) true) (_ bv2 7) (ite (and (distinct ((_ extract 1 1) C2) (_ bv0 1)) true) (_ bv1 7) (_ bv0 7)))))
 (let ((?x4681 (ite (and (distinct ((_ extract 5 5) C2) (_ bv0 1)) true) (_ bv5 7) (ite (and (distinct ((_ extract 4 4) C2) (_ bv0 1)) true) (_ bv4 7) (_ bv3 7)))))
 (let ((?x3447 (ite (and (distinct ((_ extract 8 8) C2) (_ bv0 1)) true) (_ bv8 7) (ite (and (distinct ((_ extract 7 7) C2) (_ bv0 1)) true) (_ bv7 7) (_ bv6 7)))))
 (let ((?x2202 (ite (and (distinct ((_ extract 10 9) C2) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) C2) (_ bv0 1)) true) (_ bv10 7) (_ bv9 7)) ?x3447)))
 (let ((?x1241 (ite (and (distinct ((_ extract 10 6) C2) (_ bv0 5)) true) ?x2202 (ite (and (distinct ((_ extract 5 3) C2) (_ bv0 3)) true) ?x4681 ?x1296))))
 (let ((?x4505 (ite (and (distinct ((_ extract 3 2) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 3 3) C1) (_ bv0 1)) true) (_ bv3 7) (_ bv2 7)) (ite (and (distinct ((_ extract 1 1) C1) (_ bv0 1)) true) (_ bv1 7) (_ bv0 7)))))
 (let ((?x2686 (ite (and (distinct ((_ extract 6 6) C1) (_ bv0 1)) true) (_ bv6 7) (ite (and (distinct ((_ extract 5 5) C1) (_ bv0 1)) true) (_ bv5 7) (_ bv4 7)))))
 (let ((?x1775 (bvsub (ite (and (distinct ((_ extract 6 4) C1) (_ bv0 3)) true) ?x2686 ?x4505) ?x1241)))
 (let ((?x2754 (bvand %X C1)))
 (let (($x3394 (and (distinct (ite (= (ite (= ?x2754 (_ bv0 7)) (_ bv1 1) (_ bv0 1)) (_ bv1 1)) %Y (bvor %Y C2)) (bvor ((_ zero_extend 4) (bvlshr ?x2754 ?x1775)) %Y)) true)))
 (let ((?x4557 (ite (and (distinct ((_ extract 3 2) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 3 3) C1) (_ bv0 1)) true) (_ bv3 32) (_ bv2 32)) (ite (and (distinct ((_ extract 1 1) C1) (_ bv0 1)) true) (_ bv1 32) (_ bv0 32)))))
 (let ((?x3095 (ite (and (distinct ((_ extract 6 6) C1) (_ bv0 1)) true) (_ bv6 32) (ite (and (distinct ((_ extract 5 5) C1) (_ bv0 1)) true) (_ bv5 32) (_ bv4 32)))))
 (let ((?x1387 (ite (and (distinct ((_ extract 2 2) C2) (_ bv0 1)) true) (_ bv2 32) (ite (and (distinct ((_ extract 1 1) C2) (_ bv0 1)) true) (_ bv1 32) (_ bv0 32)))))
 (let ((?x4334 (ite (and (distinct ((_ extract 5 5) C2) (_ bv0 1)) true) (_ bv5 32) (ite (and (distinct ((_ extract 4 4) C2) (_ bv0 1)) true) (_ bv4 32) (_ bv3 32)))))
 (let ((?x3844 (ite (and (distinct ((_ extract 8 8) C2) (_ bv0 1)) true) (_ bv8 32) (ite (and (distinct ((_ extract 7 7) C2) (_ bv0 1)) true) (_ bv7 32) (_ bv6 32)))))
 (let ((?x4739 (ite (and (distinct ((_ extract 10 9) C2) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) C2) (_ bv0 1)) true) (_ bv10 32) (_ bv9 32)) ?x3844)))
 (let ((?x5276 (ite (and (distinct ((_ extract 10 6) C2) (_ bv0 5)) true) ?x4739 (ite (and (distinct ((_ extract 5 3) C2) (_ bv0 3)) true) ?x4334 ?x1387))))
 (and (and (and (distinct C1 (_ bv0 7)) true) (= (bvand C1 (bvsub C1 (_ bv1 7))) (_ bv0 7))) (and (and (distinct C2 (_ bv0 11)) true) (= (bvand C2 (bvsub C2 (_ bv1 11))) (_ bv0 11))) (bvslt ?x5276 (ite (and (distinct ((_ extract 6 4) C1) (_ bv0 3)) true) ?x3095 ?x4557)) $x3394)))))))))))))))))))
(check-sat)
