(set-info :status unknown)
(declare-fun %Y () (_ BitVec 11))
(declare-fun C2 () (_ BitVec 11))
(declare-fun C1 () (_ BitVec 53))
(declare-fun %X () (_ BitVec 53))
(assert
 (let ((?x5667 (ite (and (distinct ((_ extract 2 2) C2) (_ bv0 1)) true) (_ bv2 53) (ite (and (distinct ((_ extract 1 1) C2) (_ bv0 1)) true) (_ bv1 53) (_ bv0 53)))))
 (let ((?x3646 (ite (and (distinct ((_ extract 5 5) C2) (_ bv0 1)) true) (_ bv5 53) (ite (and (distinct ((_ extract 4 4) C2) (_ bv0 1)) true) (_ bv4 53) (_ bv3 53)))))
 (let ((?x1612 (ite (and (distinct ((_ extract 8 8) C2) (_ bv0 1)) true) (_ bv8 53) (ite (and (distinct ((_ extract 7 7) C2) (_ bv0 1)) true) (_ bv7 53) (_ bv6 53)))))
 (let ((?x4594 (ite (and (distinct ((_ extract 10 9) C2) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) C2) (_ bv0 1)) true) (_ bv10 53) (_ bv9 53)) ?x1612)))
 (let ((?x5745 (ite (and (distinct ((_ extract 10 6) C2) (_ bv0 5)) true) ?x4594 (ite (and (distinct ((_ extract 5 3) C2) (_ bv0 3)) true) ?x3646 ?x5667))))
 (let ((?x5648 (ite (and (distinct ((_ extract 3 2) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 3 3) C1) (_ bv0 1)) true) (_ bv3 53) (_ bv2 53)) (ite (and (distinct ((_ extract 1 1) C1) (_ bv0 1)) true) (_ bv1 53) (_ bv0 53)))))
 (let ((?x5663 (ite (and (distinct ((_ extract 6 6) C1) (_ bv0 1)) true) (_ bv6 53) (ite (and (distinct ((_ extract 5 5) C1) (_ bv0 1)) true) (_ bv5 53) (_ bv4 53)))))
 (let ((?x2327 (ite (and (distinct ((_ extract 10 9) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) C1) (_ bv0 1)) true) (_ bv10 53) (_ bv9 53)) (ite (and (distinct ((_ extract 8 8) C1) (_ bv0 1)) true) (_ bv8 53) (_ bv7 53)))))
 (let ((?x5682 (ite (and (distinct ((_ extract 13 13) C1) (_ bv0 1)) true) (_ bv13 53) (ite (and (distinct ((_ extract 12 12) C1) (_ bv0 1)) true) (_ bv12 53) (_ bv11 53)))))
 (let ((?x5367 (ite (and (distinct ((_ extract 13 7) C1) (_ bv0 7)) true) (ite (and (distinct ((_ extract 13 11) C1) (_ bv0 3)) true) ?x5682 ?x2327) (ite (and (distinct ((_ extract 6 4) C1) (_ bv0 3)) true) ?x5663 ?x5648))))
 (let ((?x5660 (ite (and (distinct ((_ extract 17 16) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 17 17) C1) (_ bv0 1)) true) (_ bv17 53) (_ bv16 53)) (ite (and (distinct ((_ extract 15 15) C1) (_ bv0 1)) true) (_ bv15 53) (_ bv14 53)))))
 (let ((?x5099 (ite (and (distinct ((_ extract 20 20) C1) (_ bv0 1)) true) (_ bv20 53) (ite (and (distinct ((_ extract 19 19) C1) (_ bv0 1)) true) (_ bv19 53) (_ bv18 53)))))
 (let ((?x4701 (ite (and (distinct ((_ extract 23 23) C1) (_ bv0 1)) true) (_ bv23 53) (ite (and (distinct ((_ extract 22 22) C1) (_ bv0 1)) true) (_ bv22 53) (_ bv21 53)))))
 (let ((?x3403 (ite (and (distinct ((_ extract 26 26) C1) (_ bv0 1)) true) (_ bv26 53) (ite (and (distinct ((_ extract 25 25) C1) (_ bv0 1)) true) (_ bv25 53) (_ bv24 53)))))
 (let ((?x2646 (ite (and (distinct ((_ extract 26 21) C1) (_ bv0 6)) true) (ite (and (distinct ((_ extract 26 24) C1) (_ bv0 3)) true) ?x3403 ?x4701) (ite (and (distinct ((_ extract 20 18) C1) (_ bv0 3)) true) ?x5099 ?x5660))))
 (let ((?x3409 (ite (and (distinct ((_ extract 30 29) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 30 30) C1) (_ bv0 1)) true) (_ bv30 53) (_ bv29 53)) (ite (and (distinct ((_ extract 28 28) C1) (_ bv0 1)) true) (_ bv28 53) (_ bv27 53)))))
 (let ((?x1605 (ite (and (distinct ((_ extract 33 33) C1) (_ bv0 1)) true) (_ bv33 53) (ite (and (distinct ((_ extract 32 32) C1) (_ bv0 1)) true) (_ bv32 53) (_ bv31 53)))))
 (let ((?x1494 (ite (and (distinct ((_ extract 36 36) C1) (_ bv0 1)) true) (_ bv36 53) (ite (and (distinct ((_ extract 35 35) C1) (_ bv0 1)) true) (_ bv35 53) (_ bv34 53)))))
 (let ((?x4712 (ite (and (distinct ((_ extract 39 39) C1) (_ bv0 1)) true) (_ bv39 53) (ite (and (distinct ((_ extract 38 38) C1) (_ bv0 1)) true) (_ bv38 53) (_ bv37 53)))))
 (let ((?x1454 (ite (and (distinct ((_ extract 39 34) C1) (_ bv0 6)) true) (ite (and (distinct ((_ extract 39 37) C1) (_ bv0 3)) true) ?x4712 ?x1494) (ite (and (distinct ((_ extract 33 31) C1) (_ bv0 3)) true) ?x1605 ?x3409))))
 (let ((?x1808 (ite (and (distinct ((_ extract 43 42) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 43 43) C1) (_ bv0 1)) true) (_ bv43 53) (_ bv42 53)) (ite (and (distinct ((_ extract 41 41) C1) (_ bv0 1)) true) (_ bv41 53) (_ bv40 53)))))
 (let ((?x5801 (ite (and (distinct ((_ extract 46 46) C1) (_ bv0 1)) true) (_ bv46 53) (ite (and (distinct ((_ extract 45 45) C1) (_ bv0 1)) true) (_ bv45 53) (_ bv44 53)))))
 (let ((?x3510 (ite (and (distinct ((_ extract 49 49) C1) (_ bv0 1)) true) (_ bv49 53) (ite (and (distinct ((_ extract 48 48) C1) (_ bv0 1)) true) (_ bv48 53) (_ bv47 53)))))
 (let ((?x5811 (ite (and (distinct ((_ extract 52 52) C1) (_ bv0 1)) true) (_ bv52 53) (ite (and (distinct ((_ extract 51 51) C1) (_ bv0 1)) true) (_ bv51 53) (_ bv50 53)))))
 (let ((?x1563 (ite (and (distinct ((_ extract 52 47) C1) (_ bv0 6)) true) (ite (and (distinct ((_ extract 52 50) C1) (_ bv0 3)) true) ?x5811 ?x3510) (ite (and (distinct ((_ extract 46 44) C1) (_ bv0 3)) true) ?x5801 ?x1808))))
 (let ((?x3132 (ite (and (distinct ((_ extract 52 27) C1) (_ bv0 26)) true) (ite (and (distinct ((_ extract 52 40) C1) (_ bv0 13)) true) ?x1563 ?x1454) (ite (and (distinct ((_ extract 26 14) C1) (_ bv0 13)) true) ?x2646 ?x5367))))
 (let ((?x5661 (bvsub ?x3132 ?x5745)))
 (let ((?x5828 (bvand %X C1)))
 (let (($x5515 (and (distinct (ite (= (ite (= ?x5828 (_ bv0 53)) (_ bv1 1) (_ bv0 1)) (_ bv1 1)) %Y (bvor %Y C2)) (bvor ((_ extract 10 0) (bvlshr ?x5828 ?x5661)) %Y)) true)))
 (let ((?x5581 (ite (and (distinct ((_ extract 3 2) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 3 3) C1) (_ bv0 1)) true) (_ bv3 32) (_ bv2 32)) (ite (and (distinct ((_ extract 1 1) C1) (_ bv0 1)) true) (_ bv1 32) (_ bv0 32)))))
 (let ((?x4562 (ite (and (distinct ((_ extract 6 6) C1) (_ bv0 1)) true) (_ bv6 32) (ite (and (distinct ((_ extract 5 5) C1) (_ bv0 1)) true) (_ bv5 32) (_ bv4 32)))))
 (let ((?x4452 (ite (and (distinct ((_ extract 10 9) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) C1) (_ bv0 1)) true) (_ bv10 32) (_ bv9 32)) (ite (and (distinct ((_ extract 8 8) C1) (_ bv0 1)) true) (_ bv8 32) (_ bv7 32)))))
 (let ((?x2383 (ite (and (distinct ((_ extract 13 13) C1) (_ bv0 1)) true) (_ bv13 32) (ite (and (distinct ((_ extract 12 12) C1) (_ bv0 1)) true) (_ bv12 32) (_ bv11 32)))))
 (let ((?x4951 (ite (and (distinct ((_ extract 13 7) C1) (_ bv0 7)) true) (ite (and (distinct ((_ extract 13 11) C1) (_ bv0 3)) true) ?x2383 ?x4452) (ite (and (distinct ((_ extract 6 4) C1) (_ bv0 3)) true) ?x4562 ?x5581))))
 (let ((?x5101 (ite (and (distinct ((_ extract 17 16) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 17 17) C1) (_ bv0 1)) true) (_ bv17 32) (_ bv16 32)) (ite (and (distinct ((_ extract 15 15) C1) (_ bv0 1)) true) (_ bv15 32) (_ bv14 32)))))
 (let ((?x1211 (ite (and (distinct ((_ extract 20 20) C1) (_ bv0 1)) true) (_ bv20 32) (ite (and (distinct ((_ extract 19 19) C1) (_ bv0 1)) true) (_ bv19 32) (_ bv18 32)))))
 (let ((?x5030 (ite (and (distinct ((_ extract 23 23) C1) (_ bv0 1)) true) (_ bv23 32) (ite (and (distinct ((_ extract 22 22) C1) (_ bv0 1)) true) (_ bv22 32) (_ bv21 32)))))
 (let ((?x5746 (ite (and (distinct ((_ extract 26 26) C1) (_ bv0 1)) true) (_ bv26 32) (ite (and (distinct ((_ extract 25 25) C1) (_ bv0 1)) true) (_ bv25 32) (_ bv24 32)))))
 (let ((?x4391 (ite (and (distinct ((_ extract 26 21) C1) (_ bv0 6)) true) (ite (and (distinct ((_ extract 26 24) C1) (_ bv0 3)) true) ?x5746 ?x5030) (ite (and (distinct ((_ extract 20 18) C1) (_ bv0 3)) true) ?x1211 ?x5101))))
 (let ((?x4408 (ite (and (distinct ((_ extract 30 29) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 30 30) C1) (_ bv0 1)) true) (_ bv30 32) (_ bv29 32)) (ite (and (distinct ((_ extract 28 28) C1) (_ bv0 1)) true) (_ bv28 32) (_ bv27 32)))))
 (let ((?x3819 (ite (and (distinct ((_ extract 33 33) C1) (_ bv0 1)) true) (_ bv33 32) (ite (and (distinct ((_ extract 32 32) C1) (_ bv0 1)) true) (_ bv32 32) (_ bv31 32)))))
 (let ((?x3354 (ite (and (distinct ((_ extract 36 36) C1) (_ bv0 1)) true) (_ bv36 32) (ite (and (distinct ((_ extract 35 35) C1) (_ bv0 1)) true) (_ bv35 32) (_ bv34 32)))))
 (let ((?x1707 (ite (and (distinct ((_ extract 39 39) C1) (_ bv0 1)) true) (_ bv39 32) (ite (and (distinct ((_ extract 38 38) C1) (_ bv0 1)) true) (_ bv38 32) (_ bv37 32)))))
 (let ((?x5516 (ite (and (distinct ((_ extract 39 34) C1) (_ bv0 6)) true) (ite (and (distinct ((_ extract 39 37) C1) (_ bv0 3)) true) ?x1707 ?x3354) (ite (and (distinct ((_ extract 33 31) C1) (_ bv0 3)) true) ?x3819 ?x4408))))
 (let ((?x2258 (ite (and (distinct ((_ extract 43 42) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 43 43) C1) (_ bv0 1)) true) (_ bv43 32) (_ bv42 32)) (ite (and (distinct ((_ extract 41 41) C1) (_ bv0 1)) true) (_ bv41 32) (_ bv40 32)))))
 (let ((?x1282 (ite (and (distinct ((_ extract 46 46) C1) (_ bv0 1)) true) (_ bv46 32) (ite (and (distinct ((_ extract 45 45) C1) (_ bv0 1)) true) (_ bv45 32) (_ bv44 32)))))
 (let ((?x1238 (ite (and (distinct ((_ extract 49 49) C1) (_ bv0 1)) true) (_ bv49 32) (ite (and (distinct ((_ extract 48 48) C1) (_ bv0 1)) true) (_ bv48 32) (_ bv47 32)))))
 (let ((?x2735 (ite (and (distinct ((_ extract 52 52) C1) (_ bv0 1)) true) (_ bv52 32) (ite (and (distinct ((_ extract 51 51) C1) (_ bv0 1)) true) (_ bv51 32) (_ bv50 32)))))
 (let ((?x2461 (ite (and (distinct ((_ extract 52 47) C1) (_ bv0 6)) true) (ite (and (distinct ((_ extract 52 50) C1) (_ bv0 3)) true) ?x2735 ?x1238) (ite (and (distinct ((_ extract 46 44) C1) (_ bv0 3)) true) ?x1282 ?x2258))))
 (let ((?x4407 (ite (and (distinct ((_ extract 52 27) C1) (_ bv0 26)) true) (ite (and (distinct ((_ extract 52 40) C1) (_ bv0 13)) true) ?x2461 ?x5516) (ite (and (distinct ((_ extract 26 14) C1) (_ bv0 13)) true) ?x4391 ?x4951))))
 (let ((?x2266 (ite (and (distinct ((_ extract 2 2) C2) (_ bv0 1)) true) (_ bv2 32) (ite (and (distinct ((_ extract 1 1) C2) (_ bv0 1)) true) (_ bv1 32) (_ bv0 32)))))
 (let ((?x5514 (ite (and (distinct ((_ extract 5 5) C2) (_ bv0 1)) true) (_ bv5 32) (ite (and (distinct ((_ extract 4 4) C2) (_ bv0 1)) true) (_ bv4 32) (_ bv3 32)))))
 (let ((?x5883 (ite (and (distinct ((_ extract 8 8) C2) (_ bv0 1)) true) (_ bv8 32) (ite (and (distinct ((_ extract 7 7) C2) (_ bv0 1)) true) (_ bv7 32) (_ bv6 32)))))
 (let ((?x5884 (ite (and (distinct ((_ extract 10 9) C2) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) C2) (_ bv0 1)) true) (_ bv10 32) (_ bv9 32)) ?x5883)))
 (let ((?x4815 (ite (and (distinct ((_ extract 10 6) C2) (_ bv0 5)) true) ?x5884 (ite (and (distinct ((_ extract 5 3) C2) (_ bv0 3)) true) ?x5514 ?x2266))))
 (and (and (and (distinct C1 (_ bv0 53)) true) (= (bvand C1 (bvsub C1 (_ bv1 53))) (_ bv0 53))) (and (and (distinct C2 (_ bv0 11)) true) (= (bvand C2 (bvsub C2 (_ bv1 11))) (_ bv0 11))) (bvslt ?x4815 ?x4407) $x5515)))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
