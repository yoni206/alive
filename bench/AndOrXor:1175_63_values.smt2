(set-info :source |
 Generated by Alive 0.1
 More info in N. P. Lopes, D. Menendez, S. Nagarakatte, J. Regehr.
 Provably Correct Peephole Optimizations with Alive. In PLDI'15.
|)

(set-info :status unknown)
(declare-fun C () (_ BitVec 64))
(declare-fun %B () (_ BitVec 64))
(declare-fun %A () (_ BitVec 64))
(declare-fun |ana_MaskedValueIsZero(%A, lshr(-1, countLeadingZeros(C)))| () (_ BitVec 1))
(assert
 (let (($x81416 (and (distinct (bvand (bvsub %A %B) C) (bvand (bvsub (_ bv0 64) %B) C)) true)))
 (let (($x83083 (= |ana_MaskedValueIsZero(%A, lshr(-1, countLeadingZeros(C)))| (_ bv1 1))))
 (let ((?x86656 (ite (= ((_ extract 1 1) C) (_ bv1 1)) (_ bv62 64) (ite (= ((_ extract 0 0) C) (_ bv1 1)) (_ bv63 64) (_ bv64 64)))))
 (let ((?x86106 (ite (= ((_ extract 3 3) C) (_ bv1 1)) (_ bv60 64) (ite (= ((_ extract 2 2) C) (_ bv1 1)) (_ bv61 64) ?x86656))))
 (let ((?x70967 (ite (= ((_ extract 5 5) C) (_ bv1 1)) (_ bv58 64) (ite (= ((_ extract 4 4) C) (_ bv1 1)) (_ bv59 64) ?x86106))))
 (let ((?x86998 (ite (= ((_ extract 7 7) C) (_ bv1 1)) (_ bv56 64) (ite (= ((_ extract 6 6) C) (_ bv1 1)) (_ bv57 64) ?x70967))))
 (let ((?x81715 (ite (= ((_ extract 9 9) C) (_ bv1 1)) (_ bv54 64) (ite (= ((_ extract 8 8) C) (_ bv1 1)) (_ bv55 64) ?x86998))))
 (let ((?x87510 (ite (= ((_ extract 11 11) C) (_ bv1 1)) (_ bv52 64) (ite (= ((_ extract 10 10) C) (_ bv1 1)) (_ bv53 64) ?x81715))))
 (let ((?x73479 (ite (= ((_ extract 13 13) C) (_ bv1 1)) (_ bv50 64) (ite (= ((_ extract 12 12) C) (_ bv1 1)) (_ bv51 64) ?x87510))))
 (let ((?x87042 (ite (= ((_ extract 15 15) C) (_ bv1 1)) (_ bv48 64) (ite (= ((_ extract 14 14) C) (_ bv1 1)) (_ bv49 64) ?x73479))))
 (let ((?x86337 (ite (= ((_ extract 17 17) C) (_ bv1 1)) (_ bv46 64) (ite (= ((_ extract 16 16) C) (_ bv1 1)) (_ bv47 64) ?x87042))))
 (let ((?x85887 (ite (= ((_ extract 19 19) C) (_ bv1 1)) (_ bv44 64) (ite (= ((_ extract 18 18) C) (_ bv1 1)) (_ bv45 64) ?x86337))))
 (let ((?x80200 (ite (= ((_ extract 21 21) C) (_ bv1 1)) (_ bv42 64) (ite (= ((_ extract 20 20) C) (_ bv1 1)) (_ bv43 64) ?x85887))))
 (let ((?x78149 (ite (= ((_ extract 23 23) C) (_ bv1 1)) (_ bv40 64) (ite (= ((_ extract 22 22) C) (_ bv1 1)) (_ bv41 64) ?x80200))))
 (let ((?x86650 (ite (= ((_ extract 25 25) C) (_ bv1 1)) (_ bv38 64) (ite (= ((_ extract 24 24) C) (_ bv1 1)) (_ bv39 64) ?x78149))))
 (let ((?x85961 (ite (= ((_ extract 27 27) C) (_ bv1 1)) (_ bv36 64) (ite (= ((_ extract 26 26) C) (_ bv1 1)) (_ bv37 64) ?x86650))))
 (let ((?x86806 (ite (= ((_ extract 29 29) C) (_ bv1 1)) (_ bv34 64) (ite (= ((_ extract 28 28) C) (_ bv1 1)) (_ bv35 64) ?x85961))))
 (let ((?x82103 (ite (= ((_ extract 31 31) C) (_ bv1 1)) (_ bv32 64) (ite (= ((_ extract 30 30) C) (_ bv1 1)) (_ bv33 64) ?x86806))))
 (let ((?x86431 (ite (= ((_ extract 33 33) C) (_ bv1 1)) (_ bv30 64) (ite (= ((_ extract 32 32) C) (_ bv1 1)) (_ bv31 64) ?x82103))))
 (let ((?x86740 (ite (= ((_ extract 35 35) C) (_ bv1 1)) (_ bv28 64) (ite (= ((_ extract 34 34) C) (_ bv1 1)) (_ bv29 64) ?x86431))))
 (let ((?x87119 (ite (= ((_ extract 37 37) C) (_ bv1 1)) (_ bv26 64) (ite (= ((_ extract 36 36) C) (_ bv1 1)) (_ bv27 64) ?x86740))))
 (let ((?x84517 (ite (= ((_ extract 39 39) C) (_ bv1 1)) (_ bv24 64) (ite (= ((_ extract 38 38) C) (_ bv1 1)) (_ bv25 64) ?x87119))))
 (let ((?x85511 (ite (= ((_ extract 41 41) C) (_ bv1 1)) (_ bv22 64) (ite (= ((_ extract 40 40) C) (_ bv1 1)) (_ bv23 64) ?x84517))))
 (let ((?x85484 (ite (= ((_ extract 43 43) C) (_ bv1 1)) (_ bv20 64) (ite (= ((_ extract 42 42) C) (_ bv1 1)) (_ bv21 64) ?x85511))))
 (let ((?x84910 (ite (= ((_ extract 45 45) C) (_ bv1 1)) (_ bv18 64) (ite (= ((_ extract 44 44) C) (_ bv1 1)) (_ bv19 64) ?x85484))))
 (let ((?x84669 (ite (= ((_ extract 47 47) C) (_ bv1 1)) (_ bv16 64) (ite (= ((_ extract 46 46) C) (_ bv1 1)) (_ bv17 64) ?x84910))))
 (let ((?x87067 (ite (= ((_ extract 49 49) C) (_ bv1 1)) (_ bv14 64) (ite (= ((_ extract 48 48) C) (_ bv1 1)) (_ bv15 64) ?x84669))))
 (let ((?x86963 (ite (= ((_ extract 51 51) C) (_ bv1 1)) (_ bv12 64) (ite (= ((_ extract 50 50) C) (_ bv1 1)) (_ bv13 64) ?x87067))))
 (let ((?x86897 (ite (= ((_ extract 53 53) C) (_ bv1 1)) (_ bv10 64) (ite (= ((_ extract 52 52) C) (_ bv1 1)) (_ bv11 64) ?x86963))))
 (let ((?x86900 (ite (= ((_ extract 55 55) C) (_ bv1 1)) (_ bv8 64) (ite (= ((_ extract 54 54) C) (_ bv1 1)) (_ bv9 64) ?x86897))))
 (let ((?x86891 (ite (= ((_ extract 57 57) C) (_ bv1 1)) (_ bv6 64) (ite (= ((_ extract 56 56) C) (_ bv1 1)) (_ bv7 64) ?x86900))))
 (let ((?x85422 (ite (= ((_ extract 59 59) C) (_ bv1 1)) (_ bv4 64) (ite (= ((_ extract 58 58) C) (_ bv1 1)) (_ bv5 64) ?x86891))))
 (let ((?x85281 (ite (= ((_ extract 61 61) C) (_ bv1 1)) (_ bv2 64) (ite (= ((_ extract 60 60) C) (_ bv1 1)) (_ bv3 64) ?x85422))))
 (let ((?x86049 (ite (= ((_ extract 63 63) C) (_ bv1 1)) (_ bv0 64) (ite (= ((_ extract 62 62) C) (_ bv1 1)) (_ bv1 64) ?x85281))))
 (let (($x87345 (=> $x83083 (= (bvand %A (bvlshr (_ bv18446744073709551615 64) ?x86049)) (_ bv0 64)))))
 (and $x87345 $x83083 $x81416)))))))))))))))))))))))))))))))))))))
(check-sat)
