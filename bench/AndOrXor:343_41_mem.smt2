(set-info :source |
 Generated by Alive 0.1
 More info in N. P. Lopes, D. Menendez, S. Nagarakatte, J. Regehr.
 Provably Correct Peephole Optimizations with Alive. In PLDI'15.
|)

(set-info :status unknown)
(declare-fun mem0 () (_ BitVec 8))
(declare-fun |ana_MaskedValueIsZero(%B, ((1 << (width(C2) - countLeadingZeros(((C2 - 1) ^ C2)))) - 1))| () (_ BitVec 1))
(declare-fun C2 () (_ BitVec 43))
(declare-fun C1 () (_ BitVec 43))
(declare-fun %B () (_ BitVec 43))
(assert
 (let (($x817 (and (distinct mem0 mem0) true)))
 (let (($x64669 (= |ana_MaskedValueIsZero(%B, ((1 << (width(C2) - countLeadingZeros(((C2 - 1) ^ C2)))) - 1))| (_ bv1 1))))
 (let ((?x16979 (bvsub C2 (_ bv1 43))))
 (let ((?x72699 (bvor ?x16979 C2)))
 (let (($x68806 (and (and (distinct ?x72699 (_ bv0 43)) true) (= (bvand (bvadd ?x72699 (_ bv1 43)) ?x72699) (_ bv0 43)) $x64669)))
 (let (($x68831 (or (= (bvand (bvadd C2 (_ bv1 43)) (bvsub (bvadd C2 (_ bv1 43)) (_ bv1 43))) (_ bv0 43)) $x68806)))
 (let ((?x49050 (bvand C1 C2)))
 (let (($x73297 (= ?x49050 C2)))
 (let ((?x73801 (ite (= ((_ extract 1 1) (bvxor ?x16979 C2)) (_ bv1 1)) (_ bv41 43) (ite (= ((_ extract 0 0) (bvxor ?x16979 C2)) (_ bv1 1)) (_ bv42 43) (_ bv43 43)))))
 (let ((?x73765 (ite (= ((_ extract 3 3) (bvxor ?x16979 C2)) (_ bv1 1)) (_ bv39 43) (ite (= ((_ extract 2 2) (bvxor ?x16979 C2)) (_ bv1 1)) (_ bv40 43) ?x73801))))
 (let ((?x70772 (ite (= ((_ extract 5 5) (bvxor ?x16979 C2)) (_ bv1 1)) (_ bv37 43) (ite (= ((_ extract 4 4) (bvxor ?x16979 C2)) (_ bv1 1)) (_ bv38 43) ?x73765))))
 (let ((?x71374 (ite (= ((_ extract 7 7) (bvxor ?x16979 C2)) (_ bv1 1)) (_ bv35 43) (ite (= ((_ extract 6 6) (bvxor ?x16979 C2)) (_ bv1 1)) (_ bv36 43) ?x70772))))
 (let ((?x66932 (ite (= ((_ extract 9 9) (bvxor ?x16979 C2)) (_ bv1 1)) (_ bv33 43) (ite (= ((_ extract 8 8) (bvxor ?x16979 C2)) (_ bv1 1)) (_ bv34 43) ?x71374))))
 (let ((?x73254 (ite (= ((_ extract 11 11) (bvxor ?x16979 C2)) (_ bv1 1)) (_ bv31 43) (ite (= ((_ extract 10 10) (bvxor ?x16979 C2)) (_ bv1 1)) (_ bv32 43) ?x66932))))
 (let ((?x65095 (ite (= ((_ extract 13 13) (bvxor ?x16979 C2)) (_ bv1 1)) (_ bv29 43) (ite (= ((_ extract 12 12) (bvxor ?x16979 C2)) (_ bv1 1)) (_ bv30 43) ?x73254))))
 (let ((?x74181 (ite (= ((_ extract 15 15) (bvxor ?x16979 C2)) (_ bv1 1)) (_ bv27 43) (ite (= ((_ extract 14 14) (bvxor ?x16979 C2)) (_ bv1 1)) (_ bv28 43) ?x65095))))
 (let ((?x71095 (ite (= ((_ extract 17 17) (bvxor ?x16979 C2)) (_ bv1 1)) (_ bv25 43) (ite (= ((_ extract 16 16) (bvxor ?x16979 C2)) (_ bv1 1)) (_ bv26 43) ?x74181))))
 (let ((?x71702 (ite (= ((_ extract 19 19) (bvxor ?x16979 C2)) (_ bv1 1)) (_ bv23 43) (ite (= ((_ extract 18 18) (bvxor ?x16979 C2)) (_ bv1 1)) (_ bv24 43) ?x71095))))
 (let ((?x69330 (ite (= ((_ extract 21 21) (bvxor ?x16979 C2)) (_ bv1 1)) (_ bv21 43) (ite (= ((_ extract 20 20) (bvxor ?x16979 C2)) (_ bv1 1)) (_ bv22 43) ?x71702))))
 (let ((?x67815 (ite (= ((_ extract 23 23) (bvxor ?x16979 C2)) (_ bv1 1)) (_ bv19 43) (ite (= ((_ extract 22 22) (bvxor ?x16979 C2)) (_ bv1 1)) (_ bv20 43) ?x69330))))
 (let ((?x73244 (ite (= ((_ extract 25 25) (bvxor ?x16979 C2)) (_ bv1 1)) (_ bv17 43) (ite (= ((_ extract 24 24) (bvxor ?x16979 C2)) (_ bv1 1)) (_ bv18 43) ?x67815))))
 (let ((?x65021 (ite (= ((_ extract 27 27) (bvxor ?x16979 C2)) (_ bv1 1)) (_ bv15 43) (ite (= ((_ extract 26 26) (bvxor ?x16979 C2)) (_ bv1 1)) (_ bv16 43) ?x73244))))
 (let ((?x62519 (ite (= ((_ extract 29 29) (bvxor ?x16979 C2)) (_ bv1 1)) (_ bv13 43) (ite (= ((_ extract 28 28) (bvxor ?x16979 C2)) (_ bv1 1)) (_ bv14 43) ?x65021))))
 (let ((?x69895 (ite (= ((_ extract 31 31) (bvxor ?x16979 C2)) (_ bv1 1)) (_ bv11 43) (ite (= ((_ extract 30 30) (bvxor ?x16979 C2)) (_ bv1 1)) (_ bv12 43) ?x62519))))
 (let ((?x62716 (ite (= ((_ extract 33 33) (bvxor ?x16979 C2)) (_ bv1 1)) (_ bv9 43) (ite (= ((_ extract 32 32) (bvxor ?x16979 C2)) (_ bv1 1)) (_ bv10 43) ?x69895))))
 (let ((?x71335 (ite (= ((_ extract 35 35) (bvxor ?x16979 C2)) (_ bv1 1)) (_ bv7 43) (ite (= ((_ extract 34 34) (bvxor ?x16979 C2)) (_ bv1 1)) (_ bv8 43) ?x62716))))
 (let ((?x71866 (ite (= ((_ extract 37 37) (bvxor ?x16979 C2)) (_ bv1 1)) (_ bv5 43) (ite (= ((_ extract 36 36) (bvxor ?x16979 C2)) (_ bv1 1)) (_ bv6 43) ?x71335))))
 (let ((?x70179 (ite (= ((_ extract 39 39) (bvxor ?x16979 C2)) (_ bv1 1)) (_ bv3 43) (ite (= ((_ extract 38 38) (bvxor ?x16979 C2)) (_ bv1 1)) (_ bv4 43) ?x71866))))
 (let ((?x71895 (ite (= ((_ extract 41 41) (bvxor ?x16979 C2)) (_ bv1 1)) (_ bv1 43) (ite (= ((_ extract 40 40) (bvxor ?x16979 C2)) (_ bv1 1)) (_ bv2 43) ?x70179))))
 (let ((?x71310 (bvshl (_ bv1 43) (bvsub (_ bv43 43) (ite (= ((_ extract 42 42) (bvxor ?x16979 C2)) (_ bv1 1)) (_ bv0 43) ?x71895)))))
 (let (($x74086 (=> $x64669 (= (bvand %B (bvsub ?x71310 (_ bv1 43))) (_ bv0 43)))))
 (and $x74086 $x73297 $x68831 $x817)))))))))))))))))))))))))))))))))
(check-sat)
