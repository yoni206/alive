(set-info :status unknown)
(declare-fun %Y () (_ BitVec 11))
(declare-fun C2 () (_ BitVec 11))
(declare-fun C1 () (_ BitVec 61))
(declare-fun %X () (_ BitVec 61))
(assert
 (let ((?x9296 (ite (and (distinct ((_ extract 2 2) C2) (_ bv0 1)) true) (_ bv2 61) (ite (and (distinct ((_ extract 1 1) C2) (_ bv0 1)) true) (_ bv1 61) (_ bv0 61)))))
 (let ((?x3453 (ite (and (distinct ((_ extract 5 5) C2) (_ bv0 1)) true) (_ bv5 61) (ite (and (distinct ((_ extract 4 4) C2) (_ bv0 1)) true) (_ bv4 61) (_ bv3 61)))))
 (let ((?x5252 (ite (and (distinct ((_ extract 8 8) C2) (_ bv0 1)) true) (_ bv8 61) (ite (and (distinct ((_ extract 7 7) C2) (_ bv0 1)) true) (_ bv7 61) (_ bv6 61)))))
 (let ((?x15437 (ite (and (distinct ((_ extract 10 9) C2) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) C2) (_ bv0 1)) true) (_ bv10 61) (_ bv9 61)) ?x5252)))
 (let ((?x2509 (ite (and (distinct ((_ extract 10 6) C2) (_ bv0 5)) true) ?x15437 (ite (and (distinct ((_ extract 5 3) C2) (_ bv0 3)) true) ?x3453 ?x9296))))
 (let ((?x18010 (ite (and (distinct ((_ extract 3 2) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 3 3) C1) (_ bv0 1)) true) (_ bv3 61) (_ bv2 61)) (ite (and (distinct ((_ extract 1 1) C1) (_ bv0 1)) true) (_ bv1 61) (_ bv0 61)))))
 (let ((?x6462 (ite (and (distinct ((_ extract 7 6) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 7 7) C1) (_ bv0 1)) true) (_ bv7 61) (_ bv6 61)) (ite (and (distinct ((_ extract 5 5) C1) (_ bv0 1)) true) (_ bv5 61) (_ bv4 61)))))
 (let ((?x7620 (ite (and (distinct ((_ extract 11 10) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 11 11) C1) (_ bv0 1)) true) (_ bv11 61) (_ bv10 61)) (ite (and (distinct ((_ extract 9 9) C1) (_ bv0 1)) true) (_ bv9 61) (_ bv8 61)))))
 (let ((?x24058 (ite (and (distinct ((_ extract 15 14) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 15 15) C1) (_ bv0 1)) true) (_ bv15 61) (_ bv14 61)) (ite (and (distinct ((_ extract 13 13) C1) (_ bv0 1)) true) (_ bv13 61) (_ bv12 61)))))
 (let ((?x9361 (ite (and (distinct ((_ extract 15 8) C1) (_ bv0 8)) true) (ite (and (distinct ((_ extract 15 12) C1) (_ bv0 4)) true) ?x24058 ?x7620) (ite (and (distinct ((_ extract 7 4) C1) (_ bv0 4)) true) ?x6462 ?x18010))))
 (let ((?x12515 (ite (and (distinct ((_ extract 19 18) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 19 19) C1) (_ bv0 1)) true) (_ bv19 61) (_ bv18 61)) (ite (and (distinct ((_ extract 17 17) C1) (_ bv0 1)) true) (_ bv17 61) (_ bv16 61)))))
 (let ((?x21722 (ite (and (distinct ((_ extract 23 22) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 23 23) C1) (_ bv0 1)) true) (_ bv23 61) (_ bv22 61)) (ite (and (distinct ((_ extract 21 21) C1) (_ bv0 1)) true) (_ bv21 61) (_ bv20 61)))))
 (let ((?x15402 (ite (and (distinct ((_ extract 27 26) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 27 27) C1) (_ bv0 1)) true) (_ bv27 61) (_ bv26 61)) (ite (and (distinct ((_ extract 25 25) C1) (_ bv0 1)) true) (_ bv25 61) (_ bv24 61)))))
 (let ((?x5719 (ite (and (distinct ((_ extract 30 30) C1) (_ bv0 1)) true) (_ bv30 61) (ite (and (distinct ((_ extract 29 29) C1) (_ bv0 1)) true) (_ bv29 61) (_ bv28 61)))))
 (let ((?x13053 (ite (and (distinct ((_ extract 30 24) C1) (_ bv0 7)) true) (ite (and (distinct ((_ extract 30 28) C1) (_ bv0 3)) true) ?x5719 ?x15402) (ite (and (distinct ((_ extract 23 20) C1) (_ bv0 4)) true) ?x21722 ?x12515))))
 (let ((?x9332 (ite (and (distinct ((_ extract 34 33) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 34 34) C1) (_ bv0 1)) true) (_ bv34 61) (_ bv33 61)) (ite (and (distinct ((_ extract 32 32) C1) (_ bv0 1)) true) (_ bv32 61) (_ bv31 61)))))
 (let ((?x6895 (ite (and (distinct ((_ extract 38 37) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 38 38) C1) (_ bv0 1)) true) (_ bv38 61) (_ bv37 61)) (ite (and (distinct ((_ extract 36 36) C1) (_ bv0 1)) true) (_ bv36 61) (_ bv35 61)))))
 (let ((?x4959 (ite (and (distinct ((_ extract 42 41) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 42 42) C1) (_ bv0 1)) true) (_ bv42 61) (_ bv41 61)) (ite (and (distinct ((_ extract 40 40) C1) (_ bv0 1)) true) (_ bv40 61) (_ bv39 61)))))
 (let ((?x22503 (ite (and (distinct ((_ extract 45 45) C1) (_ bv0 1)) true) (_ bv45 61) (ite (and (distinct ((_ extract 44 44) C1) (_ bv0 1)) true) (_ bv44 61) (_ bv43 61)))))
 (let ((?x14159 (ite (and (distinct ((_ extract 45 39) C1) (_ bv0 7)) true) (ite (and (distinct ((_ extract 45 43) C1) (_ bv0 3)) true) ?x22503 ?x4959) (ite (and (distinct ((_ extract 38 35) C1) (_ bv0 4)) true) ?x6895 ?x9332))))
 (let ((?x3050 (ite (and (distinct ((_ extract 49 48) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 49 49) C1) (_ bv0 1)) true) (_ bv49 61) (_ bv48 61)) (ite (and (distinct ((_ extract 47 47) C1) (_ bv0 1)) true) (_ bv47 61) (_ bv46 61)))))
 (let ((?x10389 (ite (and (distinct ((_ extract 53 52) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 53 53) C1) (_ bv0 1)) true) (_ bv53 61) (_ bv52 61)) (ite (and (distinct ((_ extract 51 51) C1) (_ bv0 1)) true) (_ bv51 61) (_ bv50 61)))))
 (let ((?x10725 (ite (and (distinct ((_ extract 57 56) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 57 57) C1) (_ bv0 1)) true) (_ bv57 61) (_ bv56 61)) (ite (and (distinct ((_ extract 55 55) C1) (_ bv0 1)) true) (_ bv55 61) (_ bv54 61)))))
 (let ((?x925 (ite (and (distinct ((_ extract 60 60) C1) (_ bv0 1)) true) (_ bv60 61) (ite (and (distinct ((_ extract 59 59) C1) (_ bv0 1)) true) (_ bv59 61) (_ bv58 61)))))
 (let ((?x23771 (ite (and (distinct ((_ extract 60 54) C1) (_ bv0 7)) true) (ite (and (distinct ((_ extract 60 58) C1) (_ bv0 3)) true) ?x925 ?x10725) (ite (and (distinct ((_ extract 53 50) C1) (_ bv0 4)) true) ?x10389 ?x3050))))
 (let ((?x12490 (ite (and (distinct ((_ extract 60 31) C1) (_ bv0 30)) true) (ite (and (distinct ((_ extract 60 46) C1) (_ bv0 15)) true) ?x23771 ?x14159) (ite (and (distinct ((_ extract 30 16) C1) (_ bv0 15)) true) ?x13053 ?x9361))))
 (let ((?x9628 (bvsub ?x12490 ?x2509)))
 (let ((?x5152 (bvand %X C1)))
 (let (($x4915 (and (distinct (ite (= (ite (= ?x5152 (_ bv0 61)) (_ bv1 1) (_ bv0 1)) (_ bv1 1)) %Y (bvor %Y C2)) (bvor ((_ extract 10 0) (bvlshr ?x5152 ?x9628)) %Y)) true)))
 (let ((?x22040 (ite (and (distinct ((_ extract 3 2) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 3 3) C1) (_ bv0 1)) true) (_ bv3 32) (_ bv2 32)) (ite (and (distinct ((_ extract 1 1) C1) (_ bv0 1)) true) (_ bv1 32) (_ bv0 32)))))
 (let ((?x11019 (ite (and (distinct ((_ extract 7 6) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 7 7) C1) (_ bv0 1)) true) (_ bv7 32) (_ bv6 32)) (ite (and (distinct ((_ extract 5 5) C1) (_ bv0 1)) true) (_ bv5 32) (_ bv4 32)))))
 (let ((?x935 (ite (and (distinct ((_ extract 11 10) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 11 11) C1) (_ bv0 1)) true) (_ bv11 32) (_ bv10 32)) (ite (and (distinct ((_ extract 9 9) C1) (_ bv0 1)) true) (_ bv9 32) (_ bv8 32)))))
 (let ((?x19564 (ite (and (distinct ((_ extract 15 14) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 15 15) C1) (_ bv0 1)) true) (_ bv15 32) (_ bv14 32)) (ite (and (distinct ((_ extract 13 13) C1) (_ bv0 1)) true) (_ bv13 32) (_ bv12 32)))))
 (let ((?x12933 (ite (and (distinct ((_ extract 15 8) C1) (_ bv0 8)) true) (ite (and (distinct ((_ extract 15 12) C1) (_ bv0 4)) true) ?x19564 ?x935) (ite (and (distinct ((_ extract 7 4) C1) (_ bv0 4)) true) ?x11019 ?x22040))))
 (let ((?x11383 (ite (and (distinct ((_ extract 19 18) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 19 19) C1) (_ bv0 1)) true) (_ bv19 32) (_ bv18 32)) (ite (and (distinct ((_ extract 17 17) C1) (_ bv0 1)) true) (_ bv17 32) (_ bv16 32)))))
 (let ((?x1440 (ite (and (distinct ((_ extract 23 22) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 23 23) C1) (_ bv0 1)) true) (_ bv23 32) (_ bv22 32)) (ite (and (distinct ((_ extract 21 21) C1) (_ bv0 1)) true) (_ bv21 32) (_ bv20 32)))))
 (let ((?x10801 (ite (and (distinct ((_ extract 27 26) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 27 27) C1) (_ bv0 1)) true) (_ bv27 32) (_ bv26 32)) (ite (and (distinct ((_ extract 25 25) C1) (_ bv0 1)) true) (_ bv25 32) (_ bv24 32)))))
 (let ((?x13281 (ite (and (distinct ((_ extract 30 30) C1) (_ bv0 1)) true) (_ bv30 32) (ite (and (distinct ((_ extract 29 29) C1) (_ bv0 1)) true) (_ bv29 32) (_ bv28 32)))))
 (let ((?x7055 (ite (and (distinct ((_ extract 30 24) C1) (_ bv0 7)) true) (ite (and (distinct ((_ extract 30 28) C1) (_ bv0 3)) true) ?x13281 ?x10801) (ite (and (distinct ((_ extract 23 20) C1) (_ bv0 4)) true) ?x1440 ?x11383))))
 (let ((?x22407 (ite (and (distinct ((_ extract 34 33) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 34 34) C1) (_ bv0 1)) true) (_ bv34 32) (_ bv33 32)) (ite (and (distinct ((_ extract 32 32) C1) (_ bv0 1)) true) (_ bv32 32) (_ bv31 32)))))
 (let ((?x21922 (ite (and (distinct ((_ extract 38 37) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 38 38) C1) (_ bv0 1)) true) (_ bv38 32) (_ bv37 32)) (ite (and (distinct ((_ extract 36 36) C1) (_ bv0 1)) true) (_ bv36 32) (_ bv35 32)))))
 (let ((?x16308 (ite (and (distinct ((_ extract 42 41) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 42 42) C1) (_ bv0 1)) true) (_ bv42 32) (_ bv41 32)) (ite (and (distinct ((_ extract 40 40) C1) (_ bv0 1)) true) (_ bv40 32) (_ bv39 32)))))
 (let ((?x12902 (ite (and (distinct ((_ extract 45 45) C1) (_ bv0 1)) true) (_ bv45 32) (ite (and (distinct ((_ extract 44 44) C1) (_ bv0 1)) true) (_ bv44 32) (_ bv43 32)))))
 (let ((?x21957 (ite (and (distinct ((_ extract 45 39) C1) (_ bv0 7)) true) (ite (and (distinct ((_ extract 45 43) C1) (_ bv0 3)) true) ?x12902 ?x16308) (ite (and (distinct ((_ extract 38 35) C1) (_ bv0 4)) true) ?x21922 ?x22407))))
 (let ((?x11257 (ite (and (distinct ((_ extract 49 48) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 49 49) C1) (_ bv0 1)) true) (_ bv49 32) (_ bv48 32)) (ite (and (distinct ((_ extract 47 47) C1) (_ bv0 1)) true) (_ bv47 32) (_ bv46 32)))))
 (let ((?x8059 (ite (and (distinct ((_ extract 53 52) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 53 53) C1) (_ bv0 1)) true) (_ bv53 32) (_ bv52 32)) (ite (and (distinct ((_ extract 51 51) C1) (_ bv0 1)) true) (_ bv51 32) (_ bv50 32)))))
 (let ((?x29 (ite (and (distinct ((_ extract 57 56) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 57 57) C1) (_ bv0 1)) true) (_ bv57 32) (_ bv56 32)) (ite (and (distinct ((_ extract 55 55) C1) (_ bv0 1)) true) (_ bv55 32) (_ bv54 32)))))
 (let ((?x6210 (ite (and (distinct ((_ extract 60 60) C1) (_ bv0 1)) true) (_ bv60 32) (ite (and (distinct ((_ extract 59 59) C1) (_ bv0 1)) true) (_ bv59 32) (_ bv58 32)))))
 (let ((?x10628 (ite (and (distinct ((_ extract 60 54) C1) (_ bv0 7)) true) (ite (and (distinct ((_ extract 60 58) C1) (_ bv0 3)) true) ?x6210 ?x29) (ite (and (distinct ((_ extract 53 50) C1) (_ bv0 4)) true) ?x8059 ?x11257))))
 (let ((?x2798 (ite (and (distinct ((_ extract 60 31) C1) (_ bv0 30)) true) (ite (and (distinct ((_ extract 60 46) C1) (_ bv0 15)) true) ?x10628 ?x21957) (ite (and (distinct ((_ extract 30 16) C1) (_ bv0 15)) true) ?x7055 ?x12933))))
 (let ((?x16065 (ite (and (distinct ((_ extract 2 2) C2) (_ bv0 1)) true) (_ bv2 32) (ite (and (distinct ((_ extract 1 1) C2) (_ bv0 1)) true) (_ bv1 32) (_ bv0 32)))))
 (let ((?x3402 (ite (and (distinct ((_ extract 5 5) C2) (_ bv0 1)) true) (_ bv5 32) (ite (and (distinct ((_ extract 4 4) C2) (_ bv0 1)) true) (_ bv4 32) (_ bv3 32)))))
 (let ((?x13506 (ite (and (distinct ((_ extract 8 8) C2) (_ bv0 1)) true) (_ bv8 32) (ite (and (distinct ((_ extract 7 7) C2) (_ bv0 1)) true) (_ bv7 32) (_ bv6 32)))))
 (let ((?x11420 (ite (and (distinct ((_ extract 10 9) C2) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) C2) (_ bv0 1)) true) (_ bv10 32) (_ bv9 32)) ?x13506)))
 (let ((?x2961 (ite (and (distinct ((_ extract 10 6) C2) (_ bv0 5)) true) ?x11420 (ite (and (distinct ((_ extract 5 3) C2) (_ bv0 3)) true) ?x3402 ?x16065))))
 (and (and (and (distinct C1 (_ bv0 61)) true) (= (bvand C1 (bvsub C1 (_ bv1 61))) (_ bv0 61))) (and (and (distinct C2 (_ bv0 11)) true) (= (bvand C2 (bvsub C2 (_ bv1 11))) (_ bv0 11))) (bvslt ?x2961 ?x2798) $x4915)))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
