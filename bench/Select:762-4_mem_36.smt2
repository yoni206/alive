(set-info :status unknown)
(declare-fun mem0 () (_ BitVec 8))
(declare-fun C () (_ BitVec 41))
(declare-fun C2 () (_ BitVec 11))
(declare-fun C3 () (_ BitVec 11))
(assert
 (let ((?x6092 (ite (and (distinct ((_ extract 2 2) C) (_ bv0 1)) true) (_ bv2 32) (ite (and (distinct ((_ extract 1 1) C) (_ bv0 1)) true) (_ bv1 32) (_ bv0 32)))))
 (let ((?x5124 (ite (and (distinct ((_ extract 5 5) C) (_ bv0 1)) true) (_ bv5 32) (ite (and (distinct ((_ extract 4 4) C) (_ bv0 1)) true) (_ bv4 32) (_ bv3 32)))))
 (let ((?x3817 (ite (and (distinct ((_ extract 8 8) C) (_ bv0 1)) true) (_ bv8 32) (ite (and (distinct ((_ extract 7 7) C) (_ bv0 1)) true) (_ bv7 32) (_ bv6 32)))))
 (let ((?x4462 (ite (and (distinct ((_ extract 10 9) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) C) (_ bv0 1)) true) (_ bv10 32) (_ bv9 32)) ?x3817)))
 (let ((?x4834 (ite (and (distinct ((_ extract 10 6) C) (_ bv0 5)) true) ?x4462 (ite (and (distinct ((_ extract 5 3) C) (_ bv0 3)) true) ?x5124 ?x6092))))
 (let ((?x3069 (ite (and (distinct ((_ extract 13 13) C) (_ bv0 1)) true) (_ bv13 32) (ite (and (distinct ((_ extract 12 12) C) (_ bv0 1)) true) (_ bv12 32) (_ bv11 32)))))
 (let ((?x2936 (ite (and (distinct ((_ extract 15 14) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 15 15) C) (_ bv0 1)) true) (_ bv15 32) (_ bv14 32)) ?x3069)))
 (let ((?x1784 (ite (and (distinct ((_ extract 18 18) C) (_ bv0 1)) true) (_ bv18 32) (ite (and (distinct ((_ extract 17 17) C) (_ bv0 1)) true) (_ bv17 32) (_ bv16 32)))))
 (let ((?x2347 (ite (and (distinct ((_ extract 20 19) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 20 20) C) (_ bv0 1)) true) (_ bv20 32) (_ bv19 32)) ?x1784)))
 (let ((?x7152 (ite (and (distinct ((_ extract 20 11) C) (_ bv0 10)) true) (ite (and (distinct ((_ extract 20 16) C) (_ bv0 5)) true) ?x2347 ?x2936) ?x4834)))
 (let ((?x8080 (ite (and (distinct ((_ extract 23 23) C) (_ bv0 1)) true) (_ bv23 32) (ite (and (distinct ((_ extract 22 22) C) (_ bv0 1)) true) (_ bv22 32) (_ bv21 32)))))
 (let ((?x7900 (ite (and (distinct ((_ extract 25 24) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 25 25) C) (_ bv0 1)) true) (_ bv25 32) (_ bv24 32)) ?x8080)))
 (let ((?x7830 (ite (and (distinct ((_ extract 28 28) C) (_ bv0 1)) true) (_ bv28 32) (ite (and (distinct ((_ extract 27 27) C) (_ bv0 1)) true) (_ bv27 32) (_ bv26 32)))))
 (let ((?x5782 (ite (and (distinct ((_ extract 30 29) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 30 30) C) (_ bv0 1)) true) (_ bv30 32) (_ bv29 32)) ?x7830)))
 (let ((?x4948 (ite (and (distinct ((_ extract 33 33) C) (_ bv0 1)) true) (_ bv33 32) (ite (and (distinct ((_ extract 32 32) C) (_ bv0 1)) true) (_ bv32 32) (_ bv31 32)))))
 (let ((?x3348 (ite (and (distinct ((_ extract 35 34) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 35 35) C) (_ bv0 1)) true) (_ bv35 32) (_ bv34 32)) ?x4948)))
 (let ((?x3419 (ite (and (distinct ((_ extract 38 38) C) (_ bv0 1)) true) (_ bv38 32) (ite (and (distinct ((_ extract 37 37) C) (_ bv0 1)) true) (_ bv37 32) (_ bv36 32)))))
 (let ((?x6788 (ite (and (distinct ((_ extract 40 39) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 40 40) C) (_ bv0 1)) true) (_ bv40 32) (_ bv39 32)) ?x3419)))
 (let ((?x6127 (ite (and (distinct ((_ extract 40 31) C) (_ bv0 10)) true) (ite (and (distinct ((_ extract 40 36) C) (_ bv0 5)) true) ?x6788 ?x3348) (ite (and (distinct ((_ extract 30 26) C) (_ bv0 5)) true) ?x5782 ?x7900))))
 (let (($x5627 (and (and (distinct (bvsub C3 C2) (_ bv0 11)) true) (= (bvand (bvsub C3 C2) (bvsub (bvsub C3 C2) (_ bv1 11))) (_ bv0 11)))))
 (and (and (and (distinct C (_ bv0 41)) true) (= (bvand C (bvsub C (_ bv1 41))) (_ bv0 41))) $x5627 (bvslt (ite (and (distinct ((_ extract 40 21) C) (_ bv0 20)) true) ?x6127 ?x7152) (_ bv11 32)) (and (distinct mem0 mem0) true)))))))))))))))))))))))
(check-sat)
