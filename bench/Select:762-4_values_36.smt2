(set-info :status unknown)
(declare-fun C2 () (_ BitVec 11))
(declare-fun C3 () (_ BitVec 11))
(declare-fun C () (_ BitVec 41))
(declare-fun %Op () (_ BitVec 41))
(assert
 (let ((?x5098 (bvsub C3 C2)))
 (let ((?x1144 (ite (and (distinct ((_ extract 2 2) ?x5098) (_ bv0 1)) true) (_ bv2 11) (ite (and (distinct ((_ extract 1 1) ?x5098) (_ bv0 1)) true) (_ bv1 11) (_ bv0 11)))))
 (let ((?x7594 (ite (and (distinct ((_ extract 5 5) ?x5098) (_ bv0 1)) true) (_ bv5 11) (ite (and (distinct ((_ extract 4 4) ?x5098) (_ bv0 1)) true) (_ bv4 11) (_ bv3 11)))))
 (let ((?x2853 (ite (and (distinct ((_ extract 8 8) ?x5098) (_ bv0 1)) true) (_ bv8 11) (ite (and (distinct ((_ extract 7 7) ?x5098) (_ bv0 1)) true) (_ bv7 11) (_ bv6 11)))))
 (let ((?x5995 (ite (and (distinct ((_ extract 10 9) ?x5098) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) ?x5098) (_ bv0 1)) true) (_ bv10 11) (_ bv9 11)) ?x2853)))
 (let ((?x6964 (ite (and (distinct ((_ extract 10 6) ?x5098) (_ bv0 5)) true) ?x5995 (ite (and (distinct ((_ extract 5 3) ?x5098) (_ bv0 3)) true) ?x7594 ?x1144))))
 (let ((?x4624 (ite (and (distinct ((_ extract 2 2) C) (_ bv0 1)) true) (_ bv2 11) (ite (and (distinct ((_ extract 1 1) C) (_ bv0 1)) true) (_ bv1 11) (_ bv0 11)))))
 (let ((?x3298 (ite (and (distinct ((_ extract 5 5) C) (_ bv0 1)) true) (_ bv5 11) (ite (and (distinct ((_ extract 4 4) C) (_ bv0 1)) true) (_ bv4 11) (_ bv3 11)))))
 (let ((?x2220 (ite (and (distinct ((_ extract 8 8) C) (_ bv0 1)) true) (_ bv8 11) (ite (and (distinct ((_ extract 7 7) C) (_ bv0 1)) true) (_ bv7 11) (_ bv6 11)))))
 (let ((?x1948 (ite (and (distinct ((_ extract 10 9) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) C) (_ bv0 1)) true) (_ bv10 11) (_ bv9 11)) ?x2220)))
 (let ((?x6526 (ite (and (distinct ((_ extract 10 6) C) (_ bv0 5)) true) ?x1948 (ite (and (distinct ((_ extract 5 3) C) (_ bv0 3)) true) ?x3298 ?x4624))))
 (let ((?x5923 (ite (and (distinct ((_ extract 13 13) C) (_ bv0 1)) true) (_ bv13 11) (ite (and (distinct ((_ extract 12 12) C) (_ bv0 1)) true) (_ bv12 11) (_ bv11 11)))))
 (let ((?x5619 (ite (and (distinct ((_ extract 15 14) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 15 15) C) (_ bv0 1)) true) (_ bv15 11) (_ bv14 11)) ?x5923)))
 (let ((?x4599 (ite (and (distinct ((_ extract 18 18) C) (_ bv0 1)) true) (_ bv18 11) (ite (and (distinct ((_ extract 17 17) C) (_ bv0 1)) true) (_ bv17 11) (_ bv16 11)))))
 (let ((?x7277 (ite (and (distinct ((_ extract 20 19) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 20 20) C) (_ bv0 1)) true) (_ bv20 11) (_ bv19 11)) ?x4599)))
 (let ((?x4651 (ite (and (distinct ((_ extract 20 11) C) (_ bv0 10)) true) (ite (and (distinct ((_ extract 20 16) C) (_ bv0 5)) true) ?x7277 ?x5619) ?x6526)))
 (let ((?x2190 (ite (and (distinct ((_ extract 23 23) C) (_ bv0 1)) true) (_ bv23 11) (ite (and (distinct ((_ extract 22 22) C) (_ bv0 1)) true) (_ bv22 11) (_ bv21 11)))))
 (let ((?x2803 (ite (and (distinct ((_ extract 25 24) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 25 25) C) (_ bv0 1)) true) (_ bv25 11) (_ bv24 11)) ?x2190)))
 (let ((?x1375 (ite (and (distinct ((_ extract 28 28) C) (_ bv0 1)) true) (_ bv28 11) (ite (and (distinct ((_ extract 27 27) C) (_ bv0 1)) true) (_ bv27 11) (_ bv26 11)))))
 (let ((?x1190 (ite (and (distinct ((_ extract 30 29) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 30 30) C) (_ bv0 1)) true) (_ bv30 11) (_ bv29 11)) ?x1375)))
 (let ((?x7069 (ite (and (distinct ((_ extract 33 33) C) (_ bv0 1)) true) (_ bv33 11) (ite (and (distinct ((_ extract 32 32) C) (_ bv0 1)) true) (_ bv32 11) (_ bv31 11)))))
 (let ((?x6198 (ite (and (distinct ((_ extract 35 34) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 35 35) C) (_ bv0 1)) true) (_ bv35 11) (_ bv34 11)) ?x7069)))
 (let ((?x8359 (ite (and (distinct ((_ extract 38 38) C) (_ bv0 1)) true) (_ bv38 11) (ite (and (distinct ((_ extract 37 37) C) (_ bv0 1)) true) (_ bv37 11) (_ bv36 11)))))
 (let ((?x3894 (ite (and (distinct ((_ extract 40 39) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 40 40) C) (_ bv0 1)) true) (_ bv40 11) (_ bv39 11)) ?x8359)))
 (let ((?x2503 (ite (and (distinct ((_ extract 40 31) C) (_ bv0 10)) true) (ite (and (distinct ((_ extract 40 36) C) (_ bv0 5)) true) ?x3894 ?x6198) (ite (and (distinct ((_ extract 30 26) C) (_ bv0 5)) true) ?x1190 ?x2803))))
 (let ((?x6308 (bvsub (ite (and (distinct ((_ extract 40 21) C) (_ bv0 20)) true) ?x2503 ?x4651) ?x6964)))
 (let ((?x3896 (ite (bvsgt (_ bv0 11) ?x6308) (_ bv0 11) ?x6308)))
 (let ((?x3016 (bvsub ?x6964 (ite (and (distinct ((_ extract 40 21) C) (_ bv0 20)) true) ?x2503 ?x4651))))
 (let ((?x2589 (ite (bvsgt (_ bv0 11) ?x3016) (_ bv0 11) ?x3016)))
 (let ((?x5002 (bvadd (bvxor (bvlshr (bvshl ((_ extract 10 0) (bvand %Op C)) ?x2589) ?x3896) ?x5098) C2)))
 (let ((?x4929 (ite (= (ite (and (distinct (bvand %Op C) (_ bv0 41)) true) (_ bv1 1) (_ bv0 1)) (_ bv1 1)) C2 C3)))
 (let ((?x6092 (ite (and (distinct ((_ extract 2 2) C) (_ bv0 1)) true) (_ bv2 32) (ite (and (distinct ((_ extract 1 1) C) (_ bv0 1)) true) (_ bv1 32) (_ bv0 32)))))
 (let ((?x5124 (ite (and (distinct ((_ extract 5 5) C) (_ bv0 1)) true) (_ bv5 32) (ite (and (distinct ((_ extract 4 4) C) (_ bv0 1)) true) (_ bv4 32) (_ bv3 32)))))
 (let ((?x3817 (ite (and (distinct ((_ extract 8 8) C) (_ bv0 1)) true) (_ bv8 32) (ite (and (distinct ((_ extract 7 7) C) (_ bv0 1)) true) (_ bv7 32) (_ bv6 32)))))
 (let ((?x4462 (ite (and (distinct ((_ extract 10 9) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) C) (_ bv0 1)) true) (_ bv10 32) (_ bv9 32)) ?x3817)))
 (let ((?x4834 (ite (and (distinct ((_ extract 10 6) C) (_ bv0 5)) true) ?x4462 (ite (and (distinct ((_ extract 5 3) C) (_ bv0 3)) true) ?x5124 ?x6092))))
 (let ((?x3069 (ite (and (distinct ((_ extract 13 13) C) (_ bv0 1)) true) (_ bv13 32) (ite (and (distinct ((_ extract 12 12) C) (_ bv0 1)) true) (_ bv12 32) (_ bv11 32)))))
 (let ((?x2936 (ite (and (distinct ((_ extract 15 14) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 15 15) C) (_ bv0 1)) true) (_ bv15 32) (_ bv14 32)) ?x3069)))
 (let ((?x1784 (ite (and (distinct ((_ extract 18 18) C) (_ bv0 1)) true) (_ bv18 32) (ite (and (distinct ((_ extract 17 17) C) (_ bv0 1)) true) (_ bv17 32) (_ bv16 32)))))
 (let ((?x2347 (ite (and (distinct ((_ extract 20 19) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 20 20) C) (_ bv0 1)) true) (_ bv20 32) (_ bv19 32)) ?x1784)))
 (let ((?x7152 (ite (and (distinct ((_ extract 20 11) C) (_ bv0 10)) true) (ite (and (distinct ((_ extract 20 16) C) (_ bv0 5)) true) ?x2347 ?x2936) ?x4834)))
 (let ((?x8080 (ite (and (distinct ((_ extract 23 23) C) (_ bv0 1)) true) (_ bv23 32) (ite (and (distinct ((_ extract 22 22) C) (_ bv0 1)) true) (_ bv22 32) (_ bv21 32)))))
 (let ((?x7900 (ite (and (distinct ((_ extract 25 24) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 25 25) C) (_ bv0 1)) true) (_ bv25 32) (_ bv24 32)) ?x8080)))
 (let ((?x7830 (ite (and (distinct ((_ extract 28 28) C) (_ bv0 1)) true) (_ bv28 32) (ite (and (distinct ((_ extract 27 27) C) (_ bv0 1)) true) (_ bv27 32) (_ bv26 32)))))
 (let ((?x5782 (ite (and (distinct ((_ extract 30 29) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 30 30) C) (_ bv0 1)) true) (_ bv30 32) (_ bv29 32)) ?x7830)))
 (let ((?x4948 (ite (and (distinct ((_ extract 33 33) C) (_ bv0 1)) true) (_ bv33 32) (ite (and (distinct ((_ extract 32 32) C) (_ bv0 1)) true) (_ bv32 32) (_ bv31 32)))))
 (let ((?x3348 (ite (and (distinct ((_ extract 35 34) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 35 35) C) (_ bv0 1)) true) (_ bv35 32) (_ bv34 32)) ?x4948)))
 (let ((?x3419 (ite (and (distinct ((_ extract 38 38) C) (_ bv0 1)) true) (_ bv38 32) (ite (and (distinct ((_ extract 37 37) C) (_ bv0 1)) true) (_ bv37 32) (_ bv36 32)))))
 (let ((?x6788 (ite (and (distinct ((_ extract 40 39) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 40 40) C) (_ bv0 1)) true) (_ bv40 32) (_ bv39 32)) ?x3419)))
 (let ((?x6127 (ite (and (distinct ((_ extract 40 31) C) (_ bv0 10)) true) (ite (and (distinct ((_ extract 40 36) C) (_ bv0 5)) true) ?x6788 ?x3348) (ite (and (distinct ((_ extract 30 26) C) (_ bv0 5)) true) ?x5782 ?x7900))))
 (and (and (and (distinct C (_ bv0 41)) true) (= (bvand C (bvsub C (_ bv1 41))) (_ bv0 41))) (and (and (distinct ?x5098 (_ bv0 11)) true) (= (bvand ?x5098 (bvsub ?x5098 (_ bv1 11))) (_ bv0 11))) (bvslt (ite (and (distinct ((_ extract 40 21) C) (_ bv0 20)) true) ?x6127 ?x7152) (_ bv11 32)) (and (distinct ?x4929 ?x5002) true)))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
