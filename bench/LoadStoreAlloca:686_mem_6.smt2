(set-info :status unknown)
(declare-fun mem0 () (_ BitVec 8))
(declare-fun %p2 () (_ BitVec 64))
(declare-fun idx () (_ BitVec 64))
(declare-fun %p1 () (_ BitVec 64))
(declare-fun |ana_equivalentAddressValues(%p1, %p2)| () (_ BitVec 1))
(assert
 (let (($x16348 (or true true)))
 (let (($x18224 (and (distinct %p2 (_ bv0 64)) true)))
 (let (($x11553 (and (distinct %p1 (_ bv0 64)) true)))
 (let ((?x10716 (ite (and $x11553 $x16348 $x11553 $x16348 $x11553 $x16348 $x18224 $x16348 (= idx %p2)) (concat ((_ extract 7 2) mem0) ((_ extract 1 0) (concat mem0 ((_ extract 1 0) mem0)))) mem0)))
 (let (($x16460 (and $x11553 $x16348 $x11553 $x16348 $x11553 $x16348 $x18224 $x16348 (= idx (bvadd (bvadd %p2 (_ bv1 64)) (_ bv0 64))))))
 (let ((?x23352 (ite $x16460 ((_ extract 9 2) (concat mem0 ((_ extract 1 0) mem0))) ?x10716)))
 (let (($x649 (= |ana_equivalentAddressValues(%p1, %p2)| (_ bv1 1))))
 (and (=> $x649 (= %p1 %p2)) $x649 (and (distinct ?x23352 mem0) true))))))))))
(check-sat)
