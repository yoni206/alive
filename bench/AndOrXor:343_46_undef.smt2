(set-info :source |
 Generated by Alive 0.1
 More info in N. P. Lopes, D. Menendez, S. Nagarakatte, J. Regehr.
 Provably Correct Peephole Optimizations with Alive. In PLDI'15.
|)

(set-info :status unknown)
(declare-fun |ana_MaskedValueIsZero(%B, ((1 << (width(C2) - countLeadingZeros(((C2 - 1) ^ C2)))) - 1))| () (_ BitVec 1))
(declare-fun C2 () (_ BitVec 48))
(declare-fun C1 () (_ BitVec 48))
(declare-fun %B () (_ BitVec 48))
(assert
 (let (($x64669 (= |ana_MaskedValueIsZero(%B, ((1 << (width(C2) - countLeadingZeros(((C2 - 1) ^ C2)))) - 1))| (_ bv1 1))))
 (let ((?x20909 (bvsub C2 (_ bv1 48))))
 (let ((?x75050 (bvor ?x20909 C2)))
 (let (($x74866 (and (and (distinct ?x75050 (_ bv0 48)) true) (= (bvand (bvadd ?x75050 (_ bv1 48)) ?x75050) (_ bv0 48)) $x64669)))
 (let (($x74222 (or (= (bvand (bvadd C2 (_ bv1 48)) (bvsub (bvadd C2 (_ bv1 48)) (_ bv1 48))) (_ bv0 48)) $x74866)))
 (let ((?x50093 (bvand C1 C2)))
 (let (($x74883 (= ?x50093 C2)))
 (let ((?x75206 (ite (= ((_ extract 1 1) (bvxor ?x20909 C2)) (_ bv1 1)) (_ bv46 48) (ite (= ((_ extract 0 0) (bvxor ?x20909 C2)) (_ bv1 1)) (_ bv47 48) (_ bv48 48)))))
 (let ((?x68626 (ite (= ((_ extract 3 3) (bvxor ?x20909 C2)) (_ bv1 1)) (_ bv44 48) (ite (= ((_ extract 2 2) (bvxor ?x20909 C2)) (_ bv1 1)) (_ bv45 48) ?x75206))))
 (let ((?x74340 (ite (= ((_ extract 5 5) (bvxor ?x20909 C2)) (_ bv1 1)) (_ bv42 48) (ite (= ((_ extract 4 4) (bvxor ?x20909 C2)) (_ bv1 1)) (_ bv43 48) ?x68626))))
 (let ((?x68122 (ite (= ((_ extract 7 7) (bvxor ?x20909 C2)) (_ bv1 1)) (_ bv40 48) (ite (= ((_ extract 6 6) (bvxor ?x20909 C2)) (_ bv1 1)) (_ bv41 48) ?x74340))))
 (let ((?x75073 (ite (= ((_ extract 9 9) (bvxor ?x20909 C2)) (_ bv1 1)) (_ bv38 48) (ite (= ((_ extract 8 8) (bvxor ?x20909 C2)) (_ bv1 1)) (_ bv39 48) ?x68122))))
 (let ((?x69382 (ite (= ((_ extract 11 11) (bvxor ?x20909 C2)) (_ bv1 1)) (_ bv36 48) (ite (= ((_ extract 10 10) (bvxor ?x20909 C2)) (_ bv1 1)) (_ bv37 48) ?x75073))))
 (let ((?x74813 (ite (= ((_ extract 13 13) (bvxor ?x20909 C2)) (_ bv1 1)) (_ bv34 48) (ite (= ((_ extract 12 12) (bvxor ?x20909 C2)) (_ bv1 1)) (_ bv35 48) ?x69382))))
 (let ((?x75694 (ite (= ((_ extract 15 15) (bvxor ?x20909 C2)) (_ bv1 1)) (_ bv32 48) (ite (= ((_ extract 14 14) (bvxor ?x20909 C2)) (_ bv1 1)) (_ bv33 48) ?x74813))))
 (let ((?x76066 (ite (= ((_ extract 17 17) (bvxor ?x20909 C2)) (_ bv1 1)) (_ bv30 48) (ite (= ((_ extract 16 16) (bvxor ?x20909 C2)) (_ bv1 1)) (_ bv31 48) ?x75694))))
 (let ((?x72730 (ite (= ((_ extract 19 19) (bvxor ?x20909 C2)) (_ bv1 1)) (_ bv28 48) (ite (= ((_ extract 18 18) (bvxor ?x20909 C2)) (_ bv1 1)) (_ bv29 48) ?x76066))))
 (let ((?x74094 (ite (= ((_ extract 21 21) (bvxor ?x20909 C2)) (_ bv1 1)) (_ bv26 48) (ite (= ((_ extract 20 20) (bvxor ?x20909 C2)) (_ bv1 1)) (_ bv27 48) ?x72730))))
 (let ((?x71405 (ite (= ((_ extract 23 23) (bvxor ?x20909 C2)) (_ bv1 1)) (_ bv24 48) (ite (= ((_ extract 22 22) (bvxor ?x20909 C2)) (_ bv1 1)) (_ bv25 48) ?x74094))))
 (let ((?x70332 (ite (= ((_ extract 25 25) (bvxor ?x20909 C2)) (_ bv1 1)) (_ bv22 48) (ite (= ((_ extract 24 24) (bvxor ?x20909 C2)) (_ bv1 1)) (_ bv23 48) ?x71405))))
 (let ((?x73903 (ite (= ((_ extract 27 27) (bvxor ?x20909 C2)) (_ bv1 1)) (_ bv20 48) (ite (= ((_ extract 26 26) (bvxor ?x20909 C2)) (_ bv1 1)) (_ bv21 48) ?x70332))))
 (let ((?x72684 (ite (= ((_ extract 29 29) (bvxor ?x20909 C2)) (_ bv1 1)) (_ bv18 48) (ite (= ((_ extract 28 28) (bvxor ?x20909 C2)) (_ bv1 1)) (_ bv19 48) ?x73903))))
 (let ((?x71406 (ite (= ((_ extract 31 31) (bvxor ?x20909 C2)) (_ bv1 1)) (_ bv16 48) (ite (= ((_ extract 30 30) (bvxor ?x20909 C2)) (_ bv1 1)) (_ bv17 48) ?x72684))))
 (let ((?x70653 (ite (= ((_ extract 33 33) (bvxor ?x20909 C2)) (_ bv1 1)) (_ bv14 48) (ite (= ((_ extract 32 32) (bvxor ?x20909 C2)) (_ bv1 1)) (_ bv15 48) ?x71406))))
 (let ((?x72778 (ite (= ((_ extract 35 35) (bvxor ?x20909 C2)) (_ bv1 1)) (_ bv12 48) (ite (= ((_ extract 34 34) (bvxor ?x20909 C2)) (_ bv1 1)) (_ bv13 48) ?x70653))))
 (let ((?x69963 (ite (= ((_ extract 37 37) (bvxor ?x20909 C2)) (_ bv1 1)) (_ bv10 48) (ite (= ((_ extract 36 36) (bvxor ?x20909 C2)) (_ bv1 1)) (_ bv11 48) ?x72778))))
 (let ((?x75948 (ite (= ((_ extract 39 39) (bvxor ?x20909 C2)) (_ bv1 1)) (_ bv8 48) (ite (= ((_ extract 38 38) (bvxor ?x20909 C2)) (_ bv1 1)) (_ bv9 48) ?x69963))))
 (let ((?x72789 (ite (= ((_ extract 41 41) (bvxor ?x20909 C2)) (_ bv1 1)) (_ bv6 48) (ite (= ((_ extract 40 40) (bvxor ?x20909 C2)) (_ bv1 1)) (_ bv7 48) ?x75948))))
 (let ((?x76359 (ite (= ((_ extract 43 43) (bvxor ?x20909 C2)) (_ bv1 1)) (_ bv4 48) (ite (= ((_ extract 42 42) (bvxor ?x20909 C2)) (_ bv1 1)) (_ bv5 48) ?x72789))))
 (let ((?x65839 (ite (= ((_ extract 45 45) (bvxor ?x20909 C2)) (_ bv1 1)) (_ bv2 48) (ite (= ((_ extract 44 44) (bvxor ?x20909 C2)) (_ bv1 1)) (_ bv3 48) ?x76359))))
 (let ((?x75487 (ite (= ((_ extract 47 47) (bvxor ?x20909 C2)) (_ bv1 1)) (_ bv0 48) (ite (= ((_ extract 46 46) (bvxor ?x20909 C2)) (_ bv1 1)) (_ bv1 48) ?x65839))))
 (let (($x74825 (=> $x64669 (= (bvand %B (bvsub (bvshl (_ bv1 48) (bvsub (_ bv48 48) ?x75487)) (_ bv1 48))) (_ bv0 48)))))
 (and $x74825 $x74883 $x74222 false))))))))))))))))))))))))))))))))))
(check-sat)
