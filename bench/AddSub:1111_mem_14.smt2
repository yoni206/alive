(set-info :status unknown)
(declare-fun mem0 () (_ BitVec 8))
(declare-fun C2 () (_ BitVec 20))
(declare-fun C1 () (_ BitVec 20))
(assert
 (let ((?x2087 (ite (and (distinct ((_ extract 2 2) C2) (_ bv0 1)) true) (_ bv2 20) (ite (and (distinct ((_ extract 1 1) C2) (_ bv0 1)) true) (_ bv1 20) (_ bv0 20)))))
 (let ((?x3526 (ite (and (distinct ((_ extract 4 3) C2) (_ bv0 2)) true) (ite (and (distinct ((_ extract 4 4) C2) (_ bv0 1)) true) (_ bv4 20) (_ bv3 20)) ?x2087)))
 (let ((?x1546 (ite (and (distinct ((_ extract 7 7) C2) (_ bv0 1)) true) (_ bv7 20) (ite (and (distinct ((_ extract 6 6) C2) (_ bv0 1)) true) (_ bv6 20) (_ bv5 20)))))
 (let ((?x4445 (ite (and (distinct ((_ extract 9 8) C2) (_ bv0 2)) true) (ite (and (distinct ((_ extract 9 9) C2) (_ bv0 1)) true) (_ bv9 20) (_ bv8 20)) ?x1546)))
 (let ((?x3719 (ite (and (distinct ((_ extract 12 12) C2) (_ bv0 1)) true) (_ bv12 20) (ite (and (distinct ((_ extract 11 11) C2) (_ bv0 1)) true) (_ bv11 20) (_ bv10 20)))))
 (let ((?x3725 (ite (and (distinct ((_ extract 14 13) C2) (_ bv0 2)) true) (ite (and (distinct ((_ extract 14 14) C2) (_ bv0 1)) true) (_ bv14 20) (_ bv13 20)) ?x3719)))
 (let ((?x1385 (ite (and (distinct ((_ extract 17 17) C2) (_ bv0 1)) true) (_ bv17 20) (ite (and (distinct ((_ extract 16 16) C2) (_ bv0 1)) true) (_ bv16 20) (_ bv15 20)))))
 (let ((?x5299 (ite (and (distinct ((_ extract 19 18) C2) (_ bv0 2)) true) (ite (and (distinct ((_ extract 19 19) C2) (_ bv0 1)) true) (_ bv19 20) (_ bv18 20)) ?x1385)))
 (let ((?x2321 (ite (and (distinct ((_ extract 19 10) C2) (_ bv0 10)) true) (ite (and (distinct ((_ extract 19 15) C2) (_ bv0 5)) true) ?x5299 ?x3725) (ite (and (distinct ((_ extract 9 5) C2) (_ bv0 5)) true) ?x4445 ?x3526))))
 (let ((?x468 (bvsub (_ bv20 20) (bvsub (bvsub (_ bv20 20) ?x2321) (_ bv1 20)))))
 (and (= C1 (bvneg C2)) (and (and (distinct C2 (_ bv0 20)) true) (= (bvand C2 (bvsub C2 (_ bv1 20))) (_ bv0 20))) (not (= (bvand C2 (bvshl (_ bv1048575 20) ?x468)) (_ bv0 20))) (and (distinct mem0 mem0) true)))))))))))))
(check-sat)
