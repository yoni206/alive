(set-info :status unknown)
(declare-fun %K2 () (_ BitVec 4))
(declare-fun %K1 () (_ BitVec 4))
(declare-fun %A () (_ BitVec 4))
(declare-fun |ana_isPowerOf2(%K2)| () (_ BitVec 1))
(declare-fun |ana_isPowerOf2(%K1)| () (_ BitVec 1))
(assert
 (let ((?x19725 (ite (and (distinct (bvand %A (bvor %K1 %K2)) (bvor %K1 %K2)) true) (_ bv1 1) (_ bv0 1))))
 (let ((?x3166 (ite (= (bvand %A %K2) (_ bv0 4)) (_ bv1 1) (_ bv0 1))))
 (let ((?x20423 (ite (= (bvand %A %K1) (_ bv0 4)) (_ bv1 1) (_ bv0 1))))
 (let (($x10376 (= |ana_isPowerOf2(%K2)| (_ bv1 1))))
 (let (($x16168 (= |ana_isPowerOf2(%K1)| (_ bv1 1))))
 (let (($x9854 (=> $x10376 (and (and (distinct %K2 (_ bv0 4)) true) (= (bvand %K2 (bvsub %K2 (_ bv1 4))) (_ bv0 4))))))
 (let (($x15234 (=> $x16168 (and (and (distinct %K1 (_ bv0 4)) true) (= (bvand %K1 (bvsub %K1 (_ bv1 4))) (_ bv0 4))))))
 (and $x15234 $x9854 $x16168 $x10376 (and (distinct (bvor ?x20423 ?x3166) ?x19725) true))))))))))
(check-sat)
