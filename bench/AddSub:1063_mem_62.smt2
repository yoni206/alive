(set-info :status unknown)
(declare-fun mem0 () (_ BitVec 8))
(declare-fun C2 () (_ BitVec 64))
(declare-fun C1 () (_ BitVec 64))
(assert
 (let ((?x3625 (ite (= ((_ extract 62 62) C1) (_ bv1 1)) (_ bv62 32) (ite (= ((_ extract 63 63) C1) (_ bv1 1)) (_ bv63 32) (_ bv64 32)))))
 (let ((?x1841 (ite (= ((_ extract 60 60) C1) (_ bv1 1)) (_ bv60 32) (ite (= ((_ extract 61 61) C1) (_ bv1 1)) (_ bv61 32) ?x3625))))
 (let ((?x2159 (ite (= ((_ extract 58 58) C1) (_ bv1 1)) (_ bv58 32) (ite (= ((_ extract 59 59) C1) (_ bv1 1)) (_ bv59 32) ?x1841))))
 (let ((?x1844 (ite (= ((_ extract 56 56) C1) (_ bv1 1)) (_ bv56 32) (ite (= ((_ extract 57 57) C1) (_ bv1 1)) (_ bv57 32) ?x2159))))
 (let ((?x2993 (ite (= ((_ extract 54 54) C1) (_ bv1 1)) (_ bv54 32) (ite (= ((_ extract 55 55) C1) (_ bv1 1)) (_ bv55 32) ?x1844))))
 (let ((?x5447 (ite (= ((_ extract 52 52) C1) (_ bv1 1)) (_ bv52 32) (ite (= ((_ extract 53 53) C1) (_ bv1 1)) (_ bv53 32) ?x2993))))
 (let ((?x2991 (ite (= ((_ extract 50 50) C1) (_ bv1 1)) (_ bv50 32) (ite (= ((_ extract 51 51) C1) (_ bv1 1)) (_ bv51 32) ?x5447))))
 (let ((?x2995 (ite (= ((_ extract 48 48) C1) (_ bv1 1)) (_ bv48 32) (ite (= ((_ extract 49 49) C1) (_ bv1 1)) (_ bv49 32) ?x2991))))
 (let ((?x2552 (ite (= ((_ extract 46 46) C1) (_ bv1 1)) (_ bv46 32) (ite (= ((_ extract 47 47) C1) (_ bv1 1)) (_ bv47 32) ?x2995))))
 (let ((?x2989 (ite (= ((_ extract 44 44) C1) (_ bv1 1)) (_ bv44 32) (ite (= ((_ extract 45 45) C1) (_ bv1 1)) (_ bv45 32) ?x2552))))
 (let ((?x3229 (ite (= ((_ extract 42 42) C1) (_ bv1 1)) (_ bv42 32) (ite (= ((_ extract 43 43) C1) (_ bv1 1)) (_ bv43 32) ?x2989))))
 (let ((?x3076 (ite (= ((_ extract 40 40) C1) (_ bv1 1)) (_ bv40 32) (ite (= ((_ extract 41 41) C1) (_ bv1 1)) (_ bv41 32) ?x3229))))
 (let ((?x3128 (ite (= ((_ extract 38 38) C1) (_ bv1 1)) (_ bv38 32) (ite (= ((_ extract 39 39) C1) (_ bv1 1)) (_ bv39 32) ?x3076))))
 (let ((?x4228 (ite (= ((_ extract 36 36) C1) (_ bv1 1)) (_ bv36 32) (ite (= ((_ extract 37 37) C1) (_ bv1 1)) (_ bv37 32) ?x3128))))
 (let ((?x5383 (ite (= ((_ extract 34 34) C1) (_ bv1 1)) (_ bv34 32) (ite (= ((_ extract 35 35) C1) (_ bv1 1)) (_ bv35 32) ?x4228))))
 (let ((?x4145 (ite (= ((_ extract 32 32) C1) (_ bv1 1)) (_ bv32 32) (ite (= ((_ extract 33 33) C1) (_ bv1 1)) (_ bv33 32) ?x5383))))
 (let ((?x4955 (ite (= ((_ extract 30 30) C1) (_ bv1 1)) (_ bv30 32) (ite (= ((_ extract 31 31) C1) (_ bv1 1)) (_ bv31 32) ?x4145))))
 (let ((?x3551 (ite (= ((_ extract 28 28) C1) (_ bv1 1)) (_ bv28 32) (ite (= ((_ extract 29 29) C1) (_ bv1 1)) (_ bv29 32) ?x4955))))
 (let ((?x4186 (ite (= ((_ extract 26 26) C1) (_ bv1 1)) (_ bv26 32) (ite (= ((_ extract 27 27) C1) (_ bv1 1)) (_ bv27 32) ?x3551))))
 (let ((?x3864 (ite (= ((_ extract 24 24) C1) (_ bv1 1)) (_ bv24 32) (ite (= ((_ extract 25 25) C1) (_ bv1 1)) (_ bv25 32) ?x4186))))
 (let ((?x5341 (ite (= ((_ extract 22 22) C1) (_ bv1 1)) (_ bv22 32) (ite (= ((_ extract 23 23) C1) (_ bv1 1)) (_ bv23 32) ?x3864))))
 (let ((?x4946 (ite (= ((_ extract 20 20) C1) (_ bv1 1)) (_ bv20 32) (ite (= ((_ extract 21 21) C1) (_ bv1 1)) (_ bv21 32) ?x5341))))
 (let ((?x5216 (ite (= ((_ extract 18 18) C1) (_ bv1 1)) (_ bv18 32) (ite (= ((_ extract 19 19) C1) (_ bv1 1)) (_ bv19 32) ?x4946))))
 (let ((?x5220 (ite (= ((_ extract 16 16) C1) (_ bv1 1)) (_ bv16 32) (ite (= ((_ extract 17 17) C1) (_ bv1 1)) (_ bv17 32) ?x5216))))
 (let ((?x4765 (ite (= ((_ extract 14 14) C1) (_ bv1 1)) (_ bv14 32) (ite (= ((_ extract 15 15) C1) (_ bv1 1)) (_ bv15 32) ?x5220))))
 (let ((?x2258 (ite (= ((_ extract 12 12) C1) (_ bv1 1)) (_ bv12 32) (ite (= ((_ extract 13 13) C1) (_ bv1 1)) (_ bv13 32) ?x4765))))
 (let ((?x5089 (ite (= ((_ extract 10 10) C1) (_ bv1 1)) (_ bv10 32) (ite (= ((_ extract 11 11) C1) (_ bv1 1)) (_ bv11 32) ?x2258))))
 (let ((?x4938 (ite (= ((_ extract 8 8) C1) (_ bv1 1)) (_ bv8 32) (ite (= ((_ extract 9 9) C1) (_ bv1 1)) (_ bv9 32) ?x5089))))
 (let ((?x3382 (ite (= ((_ extract 6 6) C1) (_ bv1 1)) (_ bv6 32) (ite (= ((_ extract 7 7) C1) (_ bv1 1)) (_ bv7 32) ?x4938))))
 (let ((?x4870 (ite (= ((_ extract 4 4) C1) (_ bv1 1)) (_ bv4 32) (ite (= ((_ extract 5 5) C1) (_ bv1 1)) (_ bv5 32) ?x3382))))
 (let ((?x4654 (ite (= ((_ extract 2 2) C1) (_ bv1 1)) (_ bv2 32) (ite (= ((_ extract 3 3) C1) (_ bv1 1)) (_ bv3 32) ?x4870))))
 (let ((?x5382 (ite (= ((_ extract 0 0) C1) (_ bv1 1)) (_ bv0 32) (ite (= ((_ extract 1 1) C1) (_ bv1 1)) (_ bv1 32) ?x4654))))
 (and (= ?x5382 (_ bv0 32)) (= C1 (bvadd C2 (_ bv1 64))) (and (distinct mem0 mem0) true)))))))))))))))))))))))))))))))))))
(check-sat)
