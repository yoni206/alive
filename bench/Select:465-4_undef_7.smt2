(set-info :status unknown)
(declare-fun C2 () (_ BitVec 11))
(declare-fun C1 () (_ BitVec 15))
(assert
 (let ((?x5040 (ite (and (distinct ((_ extract 2 2) C2) (_ bv0 1)) true) (_ bv2 15) (ite (and (distinct ((_ extract 1 1) C2) (_ bv0 1)) true) (_ bv1 15) (_ bv0 15)))))
 (let ((?x1518 (ite (and (distinct ((_ extract 5 5) C2) (_ bv0 1)) true) (_ bv5 15) (ite (and (distinct ((_ extract 4 4) C2) (_ bv0 1)) true) (_ bv4 15) (_ bv3 15)))))
 (let ((?x3831 (ite (and (distinct ((_ extract 8 8) C2) (_ bv0 1)) true) (_ bv8 15) (ite (and (distinct ((_ extract 7 7) C2) (_ bv0 1)) true) (_ bv7 15) (_ bv6 15)))))
 (let ((?x5392 (ite (and (distinct ((_ extract 10 9) C2) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) C2) (_ bv0 1)) true) (_ bv10 15) (_ bv9 15)) ?x3831)))
 (let ((?x5616 (ite (and (distinct ((_ extract 10 6) C2) (_ bv0 5)) true) ?x5392 (ite (and (distinct ((_ extract 5 3) C2) (_ bv0 3)) true) ?x1518 ?x5040))))
 (let ((?x6735 (ite (and (distinct ((_ extract 3 2) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 3 3) C1) (_ bv0 1)) true) (_ bv3 15) (_ bv2 15)) (ite (and (distinct ((_ extract 1 1) C1) (_ bv0 1)) true) (_ bv1 15) (_ bv0 15)))))
 (let ((?x5955 (ite (and (distinct ((_ extract 7 6) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 7 7) C1) (_ bv0 1)) true) (_ bv7 15) (_ bv6 15)) (ite (and (distinct ((_ extract 5 5) C1) (_ bv0 1)) true) (_ bv5 15) (_ bv4 15)))))
 (let ((?x3318 (ite (and (distinct ((_ extract 11 10) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 11 11) C1) (_ bv0 1)) true) (_ bv11 15) (_ bv10 15)) (ite (and (distinct ((_ extract 9 9) C1) (_ bv0 1)) true) (_ bv9 15) (_ bv8 15)))))
 (let ((?x5901 (ite (and (distinct ((_ extract 14 14) C1) (_ bv0 1)) true) (_ bv14 15) (ite (and (distinct ((_ extract 13 13) C1) (_ bv0 1)) true) (_ bv13 15) (_ bv12 15)))))
 (let ((?x2975 (ite (and (distinct ((_ extract 14 8) C1) (_ bv0 7)) true) (ite (and (distinct ((_ extract 14 12) C1) (_ bv0 3)) true) ?x5901 ?x3318) (ite (and (distinct ((_ extract 7 4) C1) (_ bv0 4)) true) ?x5955 ?x6735))))
 (let ((?x1774 (bvsub ?x2975 ?x5616)))
 (let ((?x1464 (ite (and (distinct ((_ extract 3 2) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 3 3) C1) (_ bv0 1)) true) (_ bv3 32) (_ bv2 32)) (ite (and (distinct ((_ extract 1 1) C1) (_ bv0 1)) true) (_ bv1 32) (_ bv0 32)))))
 (let ((?x1483 (ite (and (distinct ((_ extract 7 6) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 7 7) C1) (_ bv0 1)) true) (_ bv7 32) (_ bv6 32)) (ite (and (distinct ((_ extract 5 5) C1) (_ bv0 1)) true) (_ bv5 32) (_ bv4 32)))))
 (let ((?x1404 (ite (and (distinct ((_ extract 11 10) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 11 11) C1) (_ bv0 1)) true) (_ bv11 32) (_ bv10 32)) (ite (and (distinct ((_ extract 9 9) C1) (_ bv0 1)) true) (_ bv9 32) (_ bv8 32)))))
 (let ((?x4468 (ite (and (distinct ((_ extract 14 14) C1) (_ bv0 1)) true) (_ bv14 32) (ite (and (distinct ((_ extract 13 13) C1) (_ bv0 1)) true) (_ bv13 32) (_ bv12 32)))))
 (let ((?x1317 (ite (and (distinct ((_ extract 14 8) C1) (_ bv0 7)) true) (ite (and (distinct ((_ extract 14 12) C1) (_ bv0 3)) true) ?x4468 ?x1404) (ite (and (distinct ((_ extract 7 4) C1) (_ bv0 4)) true) ?x1483 ?x1464))))
 (let ((?x2928 (ite (and (distinct ((_ extract 2 2) C2) (_ bv0 1)) true) (_ bv2 32) (ite (and (distinct ((_ extract 1 1) C2) (_ bv0 1)) true) (_ bv1 32) (_ bv0 32)))))
 (let ((?x6348 (ite (and (distinct ((_ extract 5 5) C2) (_ bv0 1)) true) (_ bv5 32) (ite (and (distinct ((_ extract 4 4) C2) (_ bv0 1)) true) (_ bv4 32) (_ bv3 32)))))
 (let ((?x4621 (ite (and (distinct ((_ extract 8 8) C2) (_ bv0 1)) true) (_ bv8 32) (ite (and (distinct ((_ extract 7 7) C2) (_ bv0 1)) true) (_ bv7 32) (_ bv6 32)))))
 (let ((?x2008 (ite (and (distinct ((_ extract 10 9) C2) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) C2) (_ bv0 1)) true) (_ bv10 32) (_ bv9 32)) ?x4621)))
 (let ((?x5210 (ite (and (distinct ((_ extract 10 6) C2) (_ bv0 5)) true) ?x2008 (ite (and (distinct ((_ extract 5 3) C2) (_ bv0 3)) true) ?x6348 ?x2928))))
 (and (and (and (distinct C1 (_ bv0 15)) true) (= (bvand C1 (bvsub C1 (_ bv1 15))) (_ bv0 15))) (and (and (distinct C2 (_ bv0 11)) true) (= (bvand C2 (bvsub C2 (_ bv1 11))) (_ bv0 11))) (bvslt ?x5210 ?x1317) (not (bvult ?x1774 (_ bv15 15))))))))))))))))))))))))))
(check-sat)
