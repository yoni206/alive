(set-info :status unknown)
(declare-fun C2 () (_ BitVec 11))
(declare-fun C1 () (_ BitVec 40))
(assert
 (let ((?x10907 (ite (and (distinct ((_ extract 2 2) C2) (_ bv0 1)) true) (_ bv2 40) (ite (and (distinct ((_ extract 1 1) C2) (_ bv0 1)) true) (_ bv1 40) (_ bv0 40)))))
 (let ((?x13713 (ite (and (distinct ((_ extract 5 5) C2) (_ bv0 1)) true) (_ bv5 40) (ite (and (distinct ((_ extract 4 4) C2) (_ bv0 1)) true) (_ bv4 40) (_ bv3 40)))))
 (let ((?x16984 (ite (and (distinct ((_ extract 8 8) C2) (_ bv0 1)) true) (_ bv8 40) (ite (and (distinct ((_ extract 7 7) C2) (_ bv0 1)) true) (_ bv7 40) (_ bv6 40)))))
 (let ((?x13190 (ite (and (distinct ((_ extract 10 9) C2) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) C2) (_ bv0 1)) true) (_ bv10 40) (_ bv9 40)) ?x16984)))
 (let ((?x10721 (ite (and (distinct ((_ extract 10 6) C2) (_ bv0 5)) true) ?x13190 (ite (and (distinct ((_ extract 5 3) C2) (_ bv0 3)) true) ?x13713 ?x10907))))
 (let ((?x13292 (ite (and (distinct ((_ extract 2 2) C1) (_ bv0 1)) true) (_ bv2 40) (ite (and (distinct ((_ extract 1 1) C1) (_ bv0 1)) true) (_ bv1 40) (_ bv0 40)))))
 (let ((?x19803 (ite (and (distinct ((_ extract 4 3) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 4 4) C1) (_ bv0 1)) true) (_ bv4 40) (_ bv3 40)) ?x13292)))
 (let ((?x10629 (ite (and (distinct ((_ extract 7 7) C1) (_ bv0 1)) true) (_ bv7 40) (ite (and (distinct ((_ extract 6 6) C1) (_ bv0 1)) true) (_ bv6 40) (_ bv5 40)))))
 (let ((?x16644 (ite (and (distinct ((_ extract 9 8) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 9 9) C1) (_ bv0 1)) true) (_ bv9 40) (_ bv8 40)) ?x10629)))
 (let ((?x12619 (ite (and (distinct ((_ extract 12 12) C1) (_ bv0 1)) true) (_ bv12 40) (ite (and (distinct ((_ extract 11 11) C1) (_ bv0 1)) true) (_ bv11 40) (_ bv10 40)))))
 (let ((?x11654 (ite (and (distinct ((_ extract 14 13) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 14 14) C1) (_ bv0 1)) true) (_ bv14 40) (_ bv13 40)) ?x12619)))
 (let ((?x6332 (ite (and (distinct ((_ extract 17 17) C1) (_ bv0 1)) true) (_ bv17 40) (ite (and (distinct ((_ extract 16 16) C1) (_ bv0 1)) true) (_ bv16 40) (_ bv15 40)))))
 (let ((?x10987 (ite (and (distinct ((_ extract 19 18) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 19 19) C1) (_ bv0 1)) true) (_ bv19 40) (_ bv18 40)) ?x6332)))
 (let ((?x18153 (ite (and (distinct ((_ extract 19 10) C1) (_ bv0 10)) true) (ite (and (distinct ((_ extract 19 15) C1) (_ bv0 5)) true) ?x10987 ?x11654) (ite (and (distinct ((_ extract 9 5) C1) (_ bv0 5)) true) ?x16644 ?x19803))))
 (let ((?x20398 (ite (and (distinct ((_ extract 22 22) C1) (_ bv0 1)) true) (_ bv22 40) (ite (and (distinct ((_ extract 21 21) C1) (_ bv0 1)) true) (_ bv21 40) (_ bv20 40)))))
 (let ((?x20091 (ite (and (distinct ((_ extract 24 23) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 24 24) C1) (_ bv0 1)) true) (_ bv24 40) (_ bv23 40)) ?x20398)))
 (let ((?x4790 (ite (and (distinct ((_ extract 27 27) C1) (_ bv0 1)) true) (_ bv27 40) (ite (and (distinct ((_ extract 26 26) C1) (_ bv0 1)) true) (_ bv26 40) (_ bv25 40)))))
 (let ((?x8878 (ite (and (distinct ((_ extract 29 28) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 29 29) C1) (_ bv0 1)) true) (_ bv29 40) (_ bv28 40)) ?x4790)))
 (let ((?x11059 (ite (and (distinct ((_ extract 32 32) C1) (_ bv0 1)) true) (_ bv32 40) (ite (and (distinct ((_ extract 31 31) C1) (_ bv0 1)) true) (_ bv31 40) (_ bv30 40)))))
 (let ((?x13902 (ite (and (distinct ((_ extract 34 33) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 34 34) C1) (_ bv0 1)) true) (_ bv34 40) (_ bv33 40)) ?x11059)))
 (let ((?x8639 (ite (and (distinct ((_ extract 37 37) C1) (_ bv0 1)) true) (_ bv37 40) (ite (and (distinct ((_ extract 36 36) C1) (_ bv0 1)) true) (_ bv36 40) (_ bv35 40)))))
 (let ((?x23473 (ite (and (distinct ((_ extract 39 38) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 39 39) C1) (_ bv0 1)) true) (_ bv39 40) (_ bv38 40)) ?x8639)))
 (let ((?x3139 (ite (and (distinct ((_ extract 39 30) C1) (_ bv0 10)) true) (ite (and (distinct ((_ extract 39 35) C1) (_ bv0 5)) true) ?x23473 ?x13902) (ite (and (distinct ((_ extract 29 25) C1) (_ bv0 5)) true) ?x8878 ?x20091))))
 (let ((?x10022 (bvsub (ite (and (distinct ((_ extract 39 20) C1) (_ bv0 20)) true) ?x3139 ?x18153) ?x10721)))
 (let ((?x22369 (ite (and (distinct ((_ extract 2 2) C1) (_ bv0 1)) true) (_ bv2 32) (ite (and (distinct ((_ extract 1 1) C1) (_ bv0 1)) true) (_ bv1 32) (_ bv0 32)))))
 (let ((?x16659 (ite (and (distinct ((_ extract 4 3) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 4 4) C1) (_ bv0 1)) true) (_ bv4 32) (_ bv3 32)) ?x22369)))
 (let ((?x22414 (ite (and (distinct ((_ extract 7 7) C1) (_ bv0 1)) true) (_ bv7 32) (ite (and (distinct ((_ extract 6 6) C1) (_ bv0 1)) true) (_ bv6 32) (_ bv5 32)))))
 (let ((?x20719 (ite (and (distinct ((_ extract 9 8) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 9 9) C1) (_ bv0 1)) true) (_ bv9 32) (_ bv8 32)) ?x22414)))
 (let ((?x18428 (ite (and (distinct ((_ extract 12 12) C1) (_ bv0 1)) true) (_ bv12 32) (ite (and (distinct ((_ extract 11 11) C1) (_ bv0 1)) true) (_ bv11 32) (_ bv10 32)))))
 (let ((?x17526 (ite (and (distinct ((_ extract 14 13) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 14 14) C1) (_ bv0 1)) true) (_ bv14 32) (_ bv13 32)) ?x18428)))
 (let ((?x19725 (ite (and (distinct ((_ extract 17 17) C1) (_ bv0 1)) true) (_ bv17 32) (ite (and (distinct ((_ extract 16 16) C1) (_ bv0 1)) true) (_ bv16 32) (_ bv15 32)))))
 (let ((?x17490 (ite (and (distinct ((_ extract 19 18) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 19 19) C1) (_ bv0 1)) true) (_ bv19 32) (_ bv18 32)) ?x19725)))
 (let ((?x3057 (ite (and (distinct ((_ extract 19 10) C1) (_ bv0 10)) true) (ite (and (distinct ((_ extract 19 15) C1) (_ bv0 5)) true) ?x17490 ?x17526) (ite (and (distinct ((_ extract 9 5) C1) (_ bv0 5)) true) ?x20719 ?x16659))))
 (let ((?x8011 (ite (and (distinct ((_ extract 22 22) C1) (_ bv0 1)) true) (_ bv22 32) (ite (and (distinct ((_ extract 21 21) C1) (_ bv0 1)) true) (_ bv21 32) (_ bv20 32)))))
 (let ((?x6969 (ite (and (distinct ((_ extract 24 23) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 24 24) C1) (_ bv0 1)) true) (_ bv24 32) (_ bv23 32)) ?x8011)))
 (let ((?x3871 (ite (and (distinct ((_ extract 27 27) C1) (_ bv0 1)) true) (_ bv27 32) (ite (and (distinct ((_ extract 26 26) C1) (_ bv0 1)) true) (_ bv26 32) (_ bv25 32)))))
 (let ((?x6185 (ite (and (distinct ((_ extract 29 28) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 29 29) C1) (_ bv0 1)) true) (_ bv29 32) (_ bv28 32)) ?x3871)))
 (let ((?x2837 (ite (and (distinct ((_ extract 32 32) C1) (_ bv0 1)) true) (_ bv32 32) (ite (and (distinct ((_ extract 31 31) C1) (_ bv0 1)) true) (_ bv31 32) (_ bv30 32)))))
 (let ((?x2117 (ite (and (distinct ((_ extract 34 33) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 34 34) C1) (_ bv0 1)) true) (_ bv34 32) (_ bv33 32)) ?x2837)))
 (let ((?x9391 (ite (and (distinct ((_ extract 37 37) C1) (_ bv0 1)) true) (_ bv37 32) (ite (and (distinct ((_ extract 36 36) C1) (_ bv0 1)) true) (_ bv36 32) (_ bv35 32)))))
 (let ((?x15294 (ite (and (distinct ((_ extract 39 38) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 39 39) C1) (_ bv0 1)) true) (_ bv39 32) (_ bv38 32)) ?x9391)))
 (let ((?x14580 (ite (and (distinct ((_ extract 39 30) C1) (_ bv0 10)) true) (ite (and (distinct ((_ extract 39 35) C1) (_ bv0 5)) true) ?x15294 ?x2117) (ite (and (distinct ((_ extract 29 25) C1) (_ bv0 5)) true) ?x6185 ?x6969))))
 (let ((?x14208 (ite (and (distinct ((_ extract 2 2) C2) (_ bv0 1)) true) (_ bv2 32) (ite (and (distinct ((_ extract 1 1) C2) (_ bv0 1)) true) (_ bv1 32) (_ bv0 32)))))
 (let ((?x7850 (ite (and (distinct ((_ extract 5 5) C2) (_ bv0 1)) true) (_ bv5 32) (ite (and (distinct ((_ extract 4 4) C2) (_ bv0 1)) true) (_ bv4 32) (_ bv3 32)))))
 (let ((?x9130 (ite (and (distinct ((_ extract 8 8) C2) (_ bv0 1)) true) (_ bv8 32) (ite (and (distinct ((_ extract 7 7) C2) (_ bv0 1)) true) (_ bv7 32) (_ bv6 32)))))
 (let ((?x8546 (ite (and (distinct ((_ extract 10 9) C2) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) C2) (_ bv0 1)) true) (_ bv10 32) (_ bv9 32)) ?x9130)))
 (let ((?x10770 (ite (and (distinct ((_ extract 10 6) C2) (_ bv0 5)) true) ?x8546 (ite (and (distinct ((_ extract 5 3) C2) (_ bv0 3)) true) ?x7850 ?x14208))))
 (and (and (and (distinct C1 (_ bv0 40)) true) (= (bvand C1 (bvsub C1 (_ bv1 40))) (_ bv0 40))) (and (and (distinct C2 (_ bv0 11)) true) (= (bvand C2 (bvsub C2 (_ bv1 11))) (_ bv0 11))) (bvslt ?x10770 (ite (and (distinct ((_ extract 39 20) C1) (_ bv0 20)) true) ?x14580 ?x3057)) (not (bvult ?x10022 (_ bv40 40))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
