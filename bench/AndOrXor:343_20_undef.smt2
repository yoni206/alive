(set-info :source |
 Generated by Alive 0.1
 More info in N. P. Lopes, D. Menendez, S. Nagarakatte, J. Regehr.
 Provably Correct Peephole Optimizations with Alive. In PLDI'15.
|)

(set-info :status unknown)
(declare-fun |ana_MaskedValueIsZero(%B, ((1 << (width(C2) - countLeadingZeros(((C2 - 1) ^ C2)))) - 1))| () (_ BitVec 1))
(declare-fun C2 () (_ BitVec 22))
(declare-fun C1 () (_ BitVec 22))
(declare-fun %B () (_ BitVec 22))
(assert
 (let (($x64669 (= |ana_MaskedValueIsZero(%B, ((1 << (width(C2) - countLeadingZeros(((C2 - 1) ^ C2)))) - 1))| (_ bv1 1))))
 (let ((?x10545 (bvsub C2 (_ bv1 22))))
 (let ((?x64030 (bvor ?x10545 C2)))
 (let (($x64381 (and (and (distinct ?x64030 (_ bv0 22)) true) (= (bvand (bvadd ?x64030 (_ bv1 22)) ?x64030) (_ bv0 22)) $x64669)))
 (let (($x65590 (or (= (bvand (bvadd C2 (_ bv1 22)) (bvsub (bvadd C2 (_ bv1 22)) (_ bv1 22))) (_ bv0 22)) $x64381)))
 (let ((?x51595 (bvand C1 C2)))
 (let (($x64301 (= ?x51595 C2)))
 (let ((?x62738 (ite (= ((_ extract 1 1) (bvxor ?x10545 C2)) (_ bv1 1)) (_ bv20 22) (ite (= ((_ extract 0 0) (bvxor ?x10545 C2)) (_ bv1 1)) (_ bv21 22) (_ bv22 22)))))
 (let ((?x61474 (ite (= ((_ extract 3 3) (bvxor ?x10545 C2)) (_ bv1 1)) (_ bv18 22) (ite (= ((_ extract 2 2) (bvxor ?x10545 C2)) (_ bv1 1)) (_ bv19 22) ?x62738))))
 (let ((?x60815 (ite (= ((_ extract 5 5) (bvxor ?x10545 C2)) (_ bv1 1)) (_ bv16 22) (ite (= ((_ extract 4 4) (bvxor ?x10545 C2)) (_ bv1 1)) (_ bv17 22) ?x61474))))
 (let ((?x61364 (ite (= ((_ extract 7 7) (bvxor ?x10545 C2)) (_ bv1 1)) (_ bv14 22) (ite (= ((_ extract 6 6) (bvxor ?x10545 C2)) (_ bv1 1)) (_ bv15 22) ?x60815))))
 (let ((?x64889 (ite (= ((_ extract 9 9) (bvxor ?x10545 C2)) (_ bv1 1)) (_ bv12 22) (ite (= ((_ extract 8 8) (bvxor ?x10545 C2)) (_ bv1 1)) (_ bv13 22) ?x61364))))
 (let ((?x62940 (ite (= ((_ extract 11 11) (bvxor ?x10545 C2)) (_ bv1 1)) (_ bv10 22) (ite (= ((_ extract 10 10) (bvxor ?x10545 C2)) (_ bv1 1)) (_ bv11 22) ?x64889))))
 (let ((?x62769 (ite (= ((_ extract 13 13) (bvxor ?x10545 C2)) (_ bv1 1)) (_ bv8 22) (ite (= ((_ extract 12 12) (bvxor ?x10545 C2)) (_ bv1 1)) (_ bv9 22) ?x62940))))
 (let ((?x63215 (ite (= ((_ extract 15 15) (bvxor ?x10545 C2)) (_ bv1 1)) (_ bv6 22) (ite (= ((_ extract 14 14) (bvxor ?x10545 C2)) (_ bv1 1)) (_ bv7 22) ?x62769))))
 (let ((?x63559 (ite (= ((_ extract 17 17) (bvxor ?x10545 C2)) (_ bv1 1)) (_ bv4 22) (ite (= ((_ extract 16 16) (bvxor ?x10545 C2)) (_ bv1 1)) (_ bv5 22) ?x63215))))
 (let ((?x63496 (ite (= ((_ extract 19 19) (bvxor ?x10545 C2)) (_ bv1 1)) (_ bv2 22) (ite (= ((_ extract 18 18) (bvxor ?x10545 C2)) (_ bv1 1)) (_ bv3 22) ?x63559))))
 (let ((?x63863 (ite (= ((_ extract 21 21) (bvxor ?x10545 C2)) (_ bv1 1)) (_ bv0 22) (ite (= ((_ extract 20 20) (bvxor ?x10545 C2)) (_ bv1 1)) (_ bv1 22) ?x63496))))
 (let (($x64950 (=> $x64669 (= (bvand %B (bvsub (bvshl (_ bv1 22) (bvsub (_ bv22 22) ?x63863)) (_ bv1 22))) (_ bv0 22)))))
 (and $x64950 $x64301 $x65590 false)))))))))))))))))))))
(check-sat)
