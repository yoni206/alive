(set-info :status unknown)
(declare-fun C3 () (_ BitVec 11))
(declare-fun C2 () (_ BitVec 11))
(declare-fun C () (_ BitVec 62))
(declare-fun %Op () (_ BitVec 62))
(assert
 (let ((?x6239 (ite (and (distinct ((_ extract 2 2) (bvsub C2 C3)) (_ bv0 1)) true) (_ bv2 11) (ite (and (distinct ((_ extract 1 1) (bvsub C2 C3)) (_ bv0 1)) true) (_ bv1 11) (_ bv0 11)))))
 (let ((?x5448 (ite (and (distinct ((_ extract 5 5) (bvsub C2 C3)) (_ bv0 1)) true) (_ bv5 11) (ite (and (distinct ((_ extract 4 4) (bvsub C2 C3)) (_ bv0 1)) true) (_ bv4 11) (_ bv3 11)))))
 (let ((?x3805 (ite (and (distinct ((_ extract 8 8) (bvsub C2 C3)) (_ bv0 1)) true) (_ bv8 11) (ite (and (distinct ((_ extract 7 7) (bvsub C2 C3)) (_ bv0 1)) true) (_ bv7 11) (_ bv6 11)))))
 (let ((?x6319 (ite (and (distinct ((_ extract 10 9) (bvsub C2 C3)) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) (bvsub C2 C3)) (_ bv0 1)) true) (_ bv10 11) (_ bv9 11)) ?x3805)))
 (let ((?x1447 (ite (and (distinct ((_ extract 10 6) (bvsub C2 C3)) (_ bv0 5)) true) ?x6319 (ite (and (distinct ((_ extract 5 3) (bvsub C2 C3)) (_ bv0 3)) true) ?x5448 ?x6239))))
 (let ((?x2936 (ite (and (distinct ((_ extract 3 2) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 3 3) C) (_ bv0 1)) true) (_ bv3 11) (_ bv2 11)) (ite (and (distinct ((_ extract 1 1) C) (_ bv0 1)) true) (_ bv1 11) (_ bv0 11)))))
 (let ((?x2482 (ite (and (distinct ((_ extract 7 6) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 7 7) C) (_ bv0 1)) true) (_ bv7 11) (_ bv6 11)) (ite (and (distinct ((_ extract 5 5) C) (_ bv0 1)) true) (_ bv5 11) (_ bv4 11)))))
 (let ((?x3489 (ite (and (distinct ((_ extract 11 10) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 11 11) C) (_ bv0 1)) true) (_ bv11 11) (_ bv10 11)) (ite (and (distinct ((_ extract 9 9) C) (_ bv0 1)) true) (_ bv9 11) (_ bv8 11)))))
 (let ((?x7103 (ite (and (distinct ((_ extract 15 14) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 15 15) C) (_ bv0 1)) true) (_ bv15 11) (_ bv14 11)) (ite (and (distinct ((_ extract 13 13) C) (_ bv0 1)) true) (_ bv13 11) (_ bv12 11)))))
 (let ((?x6733 (ite (and (distinct ((_ extract 15 8) C) (_ bv0 8)) true) (ite (and (distinct ((_ extract 15 12) C) (_ bv0 4)) true) ?x7103 ?x3489) (ite (and (distinct ((_ extract 7 4) C) (_ bv0 4)) true) ?x2482 ?x2936))))
 (let ((?x2161 (ite (and (distinct ((_ extract 19 18) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 19 19) C) (_ bv0 1)) true) (_ bv19 11) (_ bv18 11)) (ite (and (distinct ((_ extract 17 17) C) (_ bv0 1)) true) (_ bv17 11) (_ bv16 11)))))
 (let ((?x1429 (ite (and (distinct ((_ extract 23 22) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 23 23) C) (_ bv0 1)) true) (_ bv23 11) (_ bv22 11)) (ite (and (distinct ((_ extract 21 21) C) (_ bv0 1)) true) (_ bv21 11) (_ bv20 11)))))
 (let ((?x4596 (ite (and (distinct ((_ extract 27 26) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 27 27) C) (_ bv0 1)) true) (_ bv27 11) (_ bv26 11)) (ite (and (distinct ((_ extract 25 25) C) (_ bv0 1)) true) (_ bv25 11) (_ bv24 11)))))
 (let ((?x7815 (ite (and (distinct ((_ extract 30 30) C) (_ bv0 1)) true) (_ bv30 11) (ite (and (distinct ((_ extract 29 29) C) (_ bv0 1)) true) (_ bv29 11) (_ bv28 11)))))
 (let ((?x2977 (ite (and (distinct ((_ extract 30 24) C) (_ bv0 7)) true) (ite (and (distinct ((_ extract 30 28) C) (_ bv0 3)) true) ?x7815 ?x4596) (ite (and (distinct ((_ extract 23 20) C) (_ bv0 4)) true) ?x1429 ?x2161))))
 (let ((?x4470 (ite (and (distinct ((_ extract 34 33) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 34 34) C) (_ bv0 1)) true) (_ bv34 11) (_ bv33 11)) (ite (and (distinct ((_ extract 32 32) C) (_ bv0 1)) true) (_ bv32 11) (_ bv31 11)))))
 (let ((?x5553 (ite (and (distinct ((_ extract 38 37) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 38 38) C) (_ bv0 1)) true) (_ bv38 11) (_ bv37 11)) (ite (and (distinct ((_ extract 36 36) C) (_ bv0 1)) true) (_ bv36 11) (_ bv35 11)))))
 (let ((?x7394 (ite (and (distinct ((_ extract 42 41) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 42 42) C) (_ bv0 1)) true) (_ bv42 11) (_ bv41 11)) (ite (and (distinct ((_ extract 40 40) C) (_ bv0 1)) true) (_ bv40 11) (_ bv39 11)))))
 (let ((?x4112 (ite (and (distinct ((_ extract 46 45) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 46 46) C) (_ bv0 1)) true) (_ bv46 11) (_ bv45 11)) (ite (and (distinct ((_ extract 44 44) C) (_ bv0 1)) true) (_ bv44 11) (_ bv43 11)))))
 (let ((?x6036 (ite (and (distinct ((_ extract 46 39) C) (_ bv0 8)) true) (ite (and (distinct ((_ extract 46 43) C) (_ bv0 4)) true) ?x4112 ?x7394) (ite (and (distinct ((_ extract 38 35) C) (_ bv0 4)) true) ?x5553 ?x4470))))
 (let ((?x2890 (ite (and (distinct ((_ extract 50 49) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 50 50) C) (_ bv0 1)) true) (_ bv50 11) (_ bv49 11)) (ite (and (distinct ((_ extract 48 48) C) (_ bv0 1)) true) (_ bv48 11) (_ bv47 11)))))
 (let ((?x6860 (ite (and (distinct ((_ extract 54 53) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 54 54) C) (_ bv0 1)) true) (_ bv54 11) (_ bv53 11)) (ite (and (distinct ((_ extract 52 52) C) (_ bv0 1)) true) (_ bv52 11) (_ bv51 11)))))
 (let ((?x5874 (ite (and (distinct ((_ extract 58 57) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 58 58) C) (_ bv0 1)) true) (_ bv58 11) (_ bv57 11)) (ite (and (distinct ((_ extract 56 56) C) (_ bv0 1)) true) (_ bv56 11) (_ bv55 11)))))
 (let ((?x8208 (ite (and (distinct ((_ extract 61 61) C) (_ bv0 1)) true) (_ bv61 11) (ite (and (distinct ((_ extract 60 60) C) (_ bv0 1)) true) (_ bv60 11) (_ bv59 11)))))
 (let ((?x8091 (ite (and (distinct ((_ extract 61 55) C) (_ bv0 7)) true) (ite (and (distinct ((_ extract 61 59) C) (_ bv0 3)) true) ?x8208 ?x5874) (ite (and (distinct ((_ extract 54 51) C) (_ bv0 4)) true) ?x6860 ?x2890))))
 (let ((?x3596 (ite (and (distinct ((_ extract 61 31) C) (_ bv0 31)) true) (ite (and (distinct ((_ extract 61 47) C) (_ bv0 15)) true) ?x8091 ?x6036) (ite (and (distinct ((_ extract 30 16) C) (_ bv0 15)) true) ?x2977 ?x6733))))
 (let ((?x4040 (bvsub ?x3596 ?x1447)))
 (let ((?x4519 (ite (bvsgt (_ bv0 11) ?x4040) (_ bv0 11) ?x4040)))
 (let ((?x6581 (bvsub ?x1447 ?x3596)))
 (let ((?x3211 (ite (bvsgt (_ bv0 11) ?x6581) (_ bv0 11) ?x6581)))
 (let ((?x4567 (ite (= (ite (and (distinct (bvand %Op C) (_ bv0 62)) true) (_ bv1 1) (_ bv0 1)) (_ bv1 1)) C2 C3)))
 (let (($x7879 (and (distinct ?x4567 (bvadd (bvlshr (bvshl ((_ extract 10 0) (bvand %Op C)) ?x3211) ?x4519) C3)) true)))
 (let ((?x1857 (ite (and (distinct ((_ extract 3 2) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 3 3) C) (_ bv0 1)) true) (_ bv3 32) (_ bv2 32)) (ite (and (distinct ((_ extract 1 1) C) (_ bv0 1)) true) (_ bv1 32) (_ bv0 32)))))
 (let ((?x6572 (ite (and (distinct ((_ extract 7 6) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 7 7) C) (_ bv0 1)) true) (_ bv7 32) (_ bv6 32)) (ite (and (distinct ((_ extract 5 5) C) (_ bv0 1)) true) (_ bv5 32) (_ bv4 32)))))
 (let ((?x1488 (ite (and (distinct ((_ extract 11 10) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 11 11) C) (_ bv0 1)) true) (_ bv11 32) (_ bv10 32)) (ite (and (distinct ((_ extract 9 9) C) (_ bv0 1)) true) (_ bv9 32) (_ bv8 32)))))
 (let ((?x1898 (ite (and (distinct ((_ extract 15 14) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 15 15) C) (_ bv0 1)) true) (_ bv15 32) (_ bv14 32)) (ite (and (distinct ((_ extract 13 13) C) (_ bv0 1)) true) (_ bv13 32) (_ bv12 32)))))
 (let ((?x8266 (ite (and (distinct ((_ extract 15 8) C) (_ bv0 8)) true) (ite (and (distinct ((_ extract 15 12) C) (_ bv0 4)) true) ?x1898 ?x1488) (ite (and (distinct ((_ extract 7 4) C) (_ bv0 4)) true) ?x6572 ?x1857))))
 (let ((?x7760 (ite (and (distinct ((_ extract 19 18) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 19 19) C) (_ bv0 1)) true) (_ bv19 32) (_ bv18 32)) (ite (and (distinct ((_ extract 17 17) C) (_ bv0 1)) true) (_ bv17 32) (_ bv16 32)))))
 (let ((?x7521 (ite (and (distinct ((_ extract 23 22) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 23 23) C) (_ bv0 1)) true) (_ bv23 32) (_ bv22 32)) (ite (and (distinct ((_ extract 21 21) C) (_ bv0 1)) true) (_ bv21 32) (_ bv20 32)))))
 (let ((?x5899 (ite (and (distinct ((_ extract 27 26) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 27 27) C) (_ bv0 1)) true) (_ bv27 32) (_ bv26 32)) (ite (and (distinct ((_ extract 25 25) C) (_ bv0 1)) true) (_ bv25 32) (_ bv24 32)))))
 (let ((?x4900 (ite (and (distinct ((_ extract 30 30) C) (_ bv0 1)) true) (_ bv30 32) (ite (and (distinct ((_ extract 29 29) C) (_ bv0 1)) true) (_ bv29 32) (_ bv28 32)))))
 (let ((?x8099 (ite (and (distinct ((_ extract 30 24) C) (_ bv0 7)) true) (ite (and (distinct ((_ extract 30 28) C) (_ bv0 3)) true) ?x4900 ?x5899) (ite (and (distinct ((_ extract 23 20) C) (_ bv0 4)) true) ?x7521 ?x7760))))
 (let ((?x4273 (ite (and (distinct ((_ extract 34 33) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 34 34) C) (_ bv0 1)) true) (_ bv34 32) (_ bv33 32)) (ite (and (distinct ((_ extract 32 32) C) (_ bv0 1)) true) (_ bv32 32) (_ bv31 32)))))
 (let ((?x5382 (ite (and (distinct ((_ extract 38 37) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 38 38) C) (_ bv0 1)) true) (_ bv38 32) (_ bv37 32)) (ite (and (distinct ((_ extract 36 36) C) (_ bv0 1)) true) (_ bv36 32) (_ bv35 32)))))
 (let ((?x2679 (ite (and (distinct ((_ extract 42 41) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 42 42) C) (_ bv0 1)) true) (_ bv42 32) (_ bv41 32)) (ite (and (distinct ((_ extract 40 40) C) (_ bv0 1)) true) (_ bv40 32) (_ bv39 32)))))
 (let ((?x1485 (ite (and (distinct ((_ extract 46 45) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 46 46) C) (_ bv0 1)) true) (_ bv46 32) (_ bv45 32)) (ite (and (distinct ((_ extract 44 44) C) (_ bv0 1)) true) (_ bv44 32) (_ bv43 32)))))
 (let ((?x4147 (ite (and (distinct ((_ extract 46 39) C) (_ bv0 8)) true) (ite (and (distinct ((_ extract 46 43) C) (_ bv0 4)) true) ?x1485 ?x2679) (ite (and (distinct ((_ extract 38 35) C) (_ bv0 4)) true) ?x5382 ?x4273))))
 (let ((?x5301 (ite (and (distinct ((_ extract 50 49) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 50 50) C) (_ bv0 1)) true) (_ bv50 32) (_ bv49 32)) (ite (and (distinct ((_ extract 48 48) C) (_ bv0 1)) true) (_ bv48 32) (_ bv47 32)))))
 (let ((?x1640 (ite (and (distinct ((_ extract 54 53) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 54 54) C) (_ bv0 1)) true) (_ bv54 32) (_ bv53 32)) (ite (and (distinct ((_ extract 52 52) C) (_ bv0 1)) true) (_ bv52 32) (_ bv51 32)))))
 (let ((?x7576 (ite (and (distinct ((_ extract 58 57) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 58 58) C) (_ bv0 1)) true) (_ bv58 32) (_ bv57 32)) (ite (and (distinct ((_ extract 56 56) C) (_ bv0 1)) true) (_ bv56 32) (_ bv55 32)))))
 (let ((?x2760 (ite (and (distinct ((_ extract 61 61) C) (_ bv0 1)) true) (_ bv61 32) (ite (and (distinct ((_ extract 60 60) C) (_ bv0 1)) true) (_ bv60 32) (_ bv59 32)))))
 (let ((?x6161 (ite (and (distinct ((_ extract 61 55) C) (_ bv0 7)) true) (ite (and (distinct ((_ extract 61 59) C) (_ bv0 3)) true) ?x2760 ?x7576) (ite (and (distinct ((_ extract 54 51) C) (_ bv0 4)) true) ?x1640 ?x5301))))
 (let ((?x1856 (ite (and (distinct ((_ extract 61 31) C) (_ bv0 31)) true) (ite (and (distinct ((_ extract 61 47) C) (_ bv0 15)) true) ?x6161 ?x4147) (ite (and (distinct ((_ extract 30 16) C) (_ bv0 15)) true) ?x8099 ?x8266))))
 (let (($x1207 (and (and (distinct (bvsub C2 C3) (_ bv0 11)) true) (= (bvand (bvsub C2 C3) (bvsub (bvsub C2 C3) (_ bv1 11))) (_ bv0 11)))))
 (and (and (and (distinct C (_ bv0 62)) true) (= (bvand C (bvsub C (_ bv1 62))) (_ bv0 62))) $x1207 (bvslt ?x1856 (_ bv11 32)) $x7879))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
