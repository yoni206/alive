(set-info :status unknown)
(declare-fun C2 () (_ BitVec 11))
(declare-fun C3 () (_ BitVec 11))
(declare-fun C () (_ BitVec 7))
(declare-fun %Op () (_ BitVec 7))
(assert
 (let ((?x6072 (bvsub C3 C2)))
 (let ((?x3660 (ite (and (distinct ((_ extract 2 2) ?x6072) (_ bv0 1)) true) (_ bv2 11) (ite (and (distinct ((_ extract 1 1) ?x6072) (_ bv0 1)) true) (_ bv1 11) (_ bv0 11)))))
 (let ((?x2616 (ite (and (distinct ((_ extract 5 5) ?x6072) (_ bv0 1)) true) (_ bv5 11) (ite (and (distinct ((_ extract 4 4) ?x6072) (_ bv0 1)) true) (_ bv4 11) (_ bv3 11)))))
 (let ((?x5937 (ite (and (distinct ((_ extract 8 8) ?x6072) (_ bv0 1)) true) (_ bv8 11) (ite (and (distinct ((_ extract 7 7) ?x6072) (_ bv0 1)) true) (_ bv7 11) (_ bv6 11)))))
 (let ((?x4205 (ite (and (distinct ((_ extract 10 9) ?x6072) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) ?x6072) (_ bv0 1)) true) (_ bv10 11) (_ bv9 11)) ?x5937)))
 (let ((?x3069 (ite (and (distinct ((_ extract 10 6) ?x6072) (_ bv0 5)) true) ?x4205 (ite (and (distinct ((_ extract 5 3) ?x6072) (_ bv0 3)) true) ?x2616 ?x3660))))
 (let ((?x2342 (ite (and (distinct ((_ extract 3 2) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 3 3) C) (_ bv0 1)) true) (_ bv3 11) (_ bv2 11)) (ite (and (distinct ((_ extract 1 1) C) (_ bv0 1)) true) (_ bv1 11) (_ bv0 11)))))
 (let ((?x6402 (ite (and (distinct ((_ extract 6 6) C) (_ bv0 1)) true) (_ bv6 11) (ite (and (distinct ((_ extract 5 5) C) (_ bv0 1)) true) (_ bv5 11) (_ bv4 11)))))
 (let ((?x2515 (bvsub (ite (and (distinct ((_ extract 6 4) C) (_ bv0 3)) true) ?x6402 ?x2342) ?x3069)))
 (let ((?x2305 (ite (bvsgt (_ bv0 11) ?x2515) (_ bv0 11) ?x2515)))
 (let ((?x8277 (bvsub ?x3069 (ite (and (distinct ((_ extract 6 4) C) (_ bv0 3)) true) ?x6402 ?x2342))))
 (let ((?x7255 (ite (bvsgt (_ bv0 11) ?x8277) (_ bv0 11) ?x8277)))
 (let ((?x1511 (bvxor (bvlshr (bvshl ((_ zero_extend 4) (bvand %Op C)) ?x7255) ?x2305) ?x6072)))
 (let ((?x7838 (ite (= (ite (and (distinct (bvand %Op C) (_ bv0 7)) true) (_ bv1 1) (_ bv0 1)) (_ bv1 1)) C2 C3)))
 (let ((?x5241 (ite (and (distinct ((_ extract 3 2) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 3 3) C) (_ bv0 1)) true) (_ bv3 32) (_ bv2 32)) (ite (and (distinct ((_ extract 1 1) C) (_ bv0 1)) true) (_ bv1 32) (_ bv0 32)))))
 (let ((?x8369 (ite (and (distinct ((_ extract 6 6) C) (_ bv0 1)) true) (_ bv6 32) (ite (and (distinct ((_ extract 5 5) C) (_ bv0 1)) true) (_ bv5 32) (_ bv4 32)))))
 (and (and (and (distinct C (_ bv0 7)) true) (= (bvand C (bvsub C (_ bv1 7))) (_ bv0 7))) (and (and (distinct ?x6072 (_ bv0 11)) true) (= (bvand ?x6072 (bvsub ?x6072 (_ bv1 11))) (_ bv0 11))) (bvslt (ite (and (distinct ((_ extract 6 4) C) (_ bv0 3)) true) ?x8369 ?x5241) (_ bv11 32)) (and (distinct ?x7838 (bvadd ?x1511 C2)) true)))))))))))))))))))
(check-sat)
