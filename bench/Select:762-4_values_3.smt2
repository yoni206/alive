(set-info :status unknown)
(declare-fun C2 () (_ BitVec 11))
(declare-fun C3 () (_ BitVec 11))
(declare-fun C () (_ BitVec 7))
(declare-fun %Op () (_ BitVec 7))
(assert
 (let ((?x7786 (bvsub C3 C2)))
 (let ((?x15884 (ite (and (distinct ((_ extract 2 2) ?x7786) (_ bv0 1)) true) (_ bv2 11) (ite (and (distinct ((_ extract 1 1) ?x7786) (_ bv0 1)) true) (_ bv1 11) (_ bv0 11)))))
 (let ((?x20044 (ite (and (distinct ((_ extract 5 5) ?x7786) (_ bv0 1)) true) (_ bv5 11) (ite (and (distinct ((_ extract 4 4) ?x7786) (_ bv0 1)) true) (_ bv4 11) (_ bv3 11)))))
 (let ((?x5307 (ite (and (distinct ((_ extract 8 8) ?x7786) (_ bv0 1)) true) (_ bv8 11) (ite (and (distinct ((_ extract 7 7) ?x7786) (_ bv0 1)) true) (_ bv7 11) (_ bv6 11)))))
 (let ((?x23809 (ite (and (distinct ((_ extract 10 9) ?x7786) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) ?x7786) (_ bv0 1)) true) (_ bv10 11) (_ bv9 11)) ?x5307)))
 (let ((?x21593 (ite (and (distinct ((_ extract 10 6) ?x7786) (_ bv0 5)) true) ?x23809 (ite (and (distinct ((_ extract 5 3) ?x7786) (_ bv0 3)) true) ?x20044 ?x15884))))
 (let ((?x9988 (ite (and (distinct ((_ extract 3 2) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 3 3) C) (_ bv0 1)) true) (_ bv3 11) (_ bv2 11)) (ite (and (distinct ((_ extract 1 1) C) (_ bv0 1)) true) (_ bv1 11) (_ bv0 11)))))
 (let ((?x5354 (ite (and (distinct ((_ extract 6 6) C) (_ bv0 1)) true) (_ bv6 11) (ite (and (distinct ((_ extract 5 5) C) (_ bv0 1)) true) (_ bv5 11) (_ bv4 11)))))
 (let ((?x786 (bvsub (ite (and (distinct ((_ extract 6 4) C) (_ bv0 3)) true) ?x5354 ?x9988) ?x21593)))
 (let ((?x669 (ite (bvsgt (_ bv0 11) ?x786) (_ bv0 11) ?x786)))
 (let ((?x14149 (bvsub ?x21593 (ite (and (distinct ((_ extract 6 4) C) (_ bv0 3)) true) ?x5354 ?x9988))))
 (let ((?x19427 (ite (bvsgt (_ bv0 11) ?x14149) (_ bv0 11) ?x14149)))
 (let ((?x17233 (bvxor (bvlshr (bvshl ((_ zero_extend 4) (bvand %Op C)) ?x19427) ?x669) ?x7786)))
 (let ((?x15640 (ite (= (ite (and (distinct (bvand %Op C) (_ bv0 7)) true) (_ bv1 1) (_ bv0 1)) (_ bv1 1)) C2 C3)))
 (let ((?x4659 (ite (and (distinct ((_ extract 3 2) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 3 3) C) (_ bv0 1)) true) (_ bv3 32) (_ bv2 32)) (ite (and (distinct ((_ extract 1 1) C) (_ bv0 1)) true) (_ bv1 32) (_ bv0 32)))))
 (let ((?x13840 (ite (and (distinct ((_ extract 6 6) C) (_ bv0 1)) true) (_ bv6 32) (ite (and (distinct ((_ extract 5 5) C) (_ bv0 1)) true) (_ bv5 32) (_ bv4 32)))))
 (and (and (and (distinct C (_ bv0 7)) true) (= (bvand C (bvsub C (_ bv1 7))) (_ bv0 7))) (and (and (distinct ?x7786 (_ bv0 11)) true) (= (bvand ?x7786 (bvsub ?x7786 (_ bv1 11))) (_ bv0 11))) (bvslt (ite (and (distinct ((_ extract 6 4) C) (_ bv0 3)) true) ?x13840 ?x4659) (_ bv11 32)) (and (distinct ?x15640 (bvadd ?x17233 C2)) true)))))))))))))))))))
(check-sat)
