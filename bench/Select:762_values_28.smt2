(set-info :status unknown)
(declare-fun C3 () (_ BitVec 11))
(declare-fun C2 () (_ BitVec 11))
(declare-fun C () (_ BitVec 32))
(declare-fun %Op () (_ BitVec 32))
(assert
 (let ((?x1890 (bvsub C2 C3)))
 (let ((?x5687 (ite (and (distinct ((_ extract 2 2) ?x1890) (_ bv0 1)) true) (_ bv2 11) (ite (and (distinct ((_ extract 1 1) ?x1890) (_ bv0 1)) true) (_ bv1 11) (_ bv0 11)))))
 (let ((?x8092 (ite (and (distinct ((_ extract 5 5) ?x1890) (_ bv0 1)) true) (_ bv5 11) (ite (and (distinct ((_ extract 4 4) ?x1890) (_ bv0 1)) true) (_ bv4 11) (_ bv3 11)))))
 (let ((?x1658 (ite (and (distinct ((_ extract 8 8) ?x1890) (_ bv0 1)) true) (_ bv8 11) (ite (and (distinct ((_ extract 7 7) ?x1890) (_ bv0 1)) true) (_ bv7 11) (_ bv6 11)))))
 (let ((?x5907 (ite (and (distinct ((_ extract 10 9) ?x1890) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) ?x1890) (_ bv0 1)) true) (_ bv10 11) (_ bv9 11)) ?x1658)))
 (let ((?x1206 (ite (and (distinct ((_ extract 10 6) ?x1890) (_ bv0 5)) true) ?x5907 (ite (and (distinct ((_ extract 5 3) ?x1890) (_ bv0 3)) true) ?x8092 ?x5687))))
 (let ((?x6206 (ite (and (distinct ((_ extract 3 2) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 3 3) C) (_ bv0 1)) true) (_ bv3 11) (_ bv2 11)) (ite (and (distinct ((_ extract 1 1) C) (_ bv0 1)) true) (_ bv1 11) (_ bv0 11)))))
 (let ((?x5758 (ite (and (distinct ((_ extract 7 6) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 7 7) C) (_ bv0 1)) true) (_ bv7 11) (_ bv6 11)) (ite (and (distinct ((_ extract 5 5) C) (_ bv0 1)) true) (_ bv5 11) (_ bv4 11)))))
 (let ((?x6175 (ite (and (distinct ((_ extract 11 10) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 11 11) C) (_ bv0 1)) true) (_ bv11 11) (_ bv10 11)) (ite (and (distinct ((_ extract 9 9) C) (_ bv0 1)) true) (_ bv9 11) (_ bv8 11)))))
 (let ((?x3266 (ite (and (distinct ((_ extract 15 14) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 15 15) C) (_ bv0 1)) true) (_ bv15 11) (_ bv14 11)) (ite (and (distinct ((_ extract 13 13) C) (_ bv0 1)) true) (_ bv13 11) (_ bv12 11)))))
 (let ((?x7742 (ite (and (distinct ((_ extract 15 8) C) (_ bv0 8)) true) (ite (and (distinct ((_ extract 15 12) C) (_ bv0 4)) true) ?x3266 ?x6175) (ite (and (distinct ((_ extract 7 4) C) (_ bv0 4)) true) ?x5758 ?x6206))))
 (let ((?x2189 (ite (and (distinct ((_ extract 19 18) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 19 19) C) (_ bv0 1)) true) (_ bv19 11) (_ bv18 11)) (ite (and (distinct ((_ extract 17 17) C) (_ bv0 1)) true) (_ bv17 11) (_ bv16 11)))))
 (let ((?x2307 (ite (and (distinct ((_ extract 23 22) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 23 23) C) (_ bv0 1)) true) (_ bv23 11) (_ bv22 11)) (ite (and (distinct ((_ extract 21 21) C) (_ bv0 1)) true) (_ bv21 11) (_ bv20 11)))))
 (let ((?x6138 (ite (and (distinct ((_ extract 27 26) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 27 27) C) (_ bv0 1)) true) (_ bv27 11) (_ bv26 11)) (ite (and (distinct ((_ extract 25 25) C) (_ bv0 1)) true) (_ bv25 11) (_ bv24 11)))))
 (let ((?x5494 (ite (and (distinct ((_ extract 31 30) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 31 31) C) (_ bv0 1)) true) (_ bv31 11) (_ bv30 11)) (ite (and (distinct ((_ extract 29 29) C) (_ bv0 1)) true) (_ bv29 11) (_ bv28 11)))))
 (let ((?x2424 (ite (and (distinct ((_ extract 31 24) C) (_ bv0 8)) true) (ite (and (distinct ((_ extract 31 28) C) (_ bv0 4)) true) ?x5494 ?x6138) (ite (and (distinct ((_ extract 23 20) C) (_ bv0 4)) true) ?x2307 ?x2189))))
 (let ((?x8133 (bvsub (ite (and (distinct ((_ extract 31 16) C) (_ bv0 16)) true) ?x2424 ?x7742) ?x1206)))
 (let ((?x7953 (ite (bvsgt (_ bv0 11) ?x8133) (_ bv0 11) ?x8133)))
 (let ((?x4567 (bvsub ?x1206 (ite (and (distinct ((_ extract 31 16) C) (_ bv0 16)) true) ?x2424 ?x7742))))
 (let ((?x5475 (ite (bvsgt (_ bv0 11) ?x4567) (_ bv0 11) ?x4567)))
 (let ((?x3607 (bvadd (bvxor (bvlshr (bvshl ((_ extract 10 0) (bvand %Op C)) ?x5475) ?x7953) ?x1890) C3)))
 (let (($x3924 (and (distinct (ite (= (ite (= (bvand %Op C) (_ bv0 32)) (_ bv1 1) (_ bv0 1)) (_ bv1 1)) C2 C3) ?x3607) true)))
 (let ((?x3683 (ite (and (distinct ((_ extract 3 2) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 3 3) C) (_ bv0 1)) true) (_ bv3 32) (_ bv2 32)) (ite (and (distinct ((_ extract 1 1) C) (_ bv0 1)) true) (_ bv1 32) (_ bv0 32)))))
 (let ((?x2700 (ite (and (distinct ((_ extract 7 6) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 7 7) C) (_ bv0 1)) true) (_ bv7 32) (_ bv6 32)) (ite (and (distinct ((_ extract 5 5) C) (_ bv0 1)) true) (_ bv5 32) (_ bv4 32)))))
 (let ((?x1966 (ite (and (distinct ((_ extract 11 10) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 11 11) C) (_ bv0 1)) true) (_ bv11 32) (_ bv10 32)) (ite (and (distinct ((_ extract 9 9) C) (_ bv0 1)) true) (_ bv9 32) (_ bv8 32)))))
 (let ((?x6788 (ite (and (distinct ((_ extract 15 14) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 15 15) C) (_ bv0 1)) true) (_ bv15 32) (_ bv14 32)) (ite (and (distinct ((_ extract 13 13) C) (_ bv0 1)) true) (_ bv13 32) (_ bv12 32)))))
 (let ((?x3413 (ite (and (distinct ((_ extract 15 8) C) (_ bv0 8)) true) (ite (and (distinct ((_ extract 15 12) C) (_ bv0 4)) true) ?x6788 ?x1966) (ite (and (distinct ((_ extract 7 4) C) (_ bv0 4)) true) ?x2700 ?x3683))))
 (let ((?x3890 (ite (and (distinct ((_ extract 19 18) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 19 19) C) (_ bv0 1)) true) (_ bv19 32) (_ bv18 32)) (ite (and (distinct ((_ extract 17 17) C) (_ bv0 1)) true) (_ bv17 32) (_ bv16 32)))))
 (let ((?x6375 (ite (and (distinct ((_ extract 23 22) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 23 23) C) (_ bv0 1)) true) (_ bv23 32) (_ bv22 32)) (ite (and (distinct ((_ extract 21 21) C) (_ bv0 1)) true) (_ bv21 32) (_ bv20 32)))))
 (let ((?x3489 (ite (and (distinct ((_ extract 27 26) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 27 27) C) (_ bv0 1)) true) (_ bv27 32) (_ bv26 32)) (ite (and (distinct ((_ extract 25 25) C) (_ bv0 1)) true) (_ bv25 32) (_ bv24 32)))))
 (let ((?x5422 (ite (and (distinct ((_ extract 31 30) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 31 31) C) (_ bv0 1)) true) (_ bv31 32) (_ bv30 32)) (ite (and (distinct ((_ extract 29 29) C) (_ bv0 1)) true) (_ bv29 32) (_ bv28 32)))))
 (let ((?x6687 (ite (and (distinct ((_ extract 31 24) C) (_ bv0 8)) true) (ite (and (distinct ((_ extract 31 28) C) (_ bv0 4)) true) ?x5422 ?x3489) (ite (and (distinct ((_ extract 23 20) C) (_ bv0 4)) true) ?x6375 ?x3890))))
 (and (and (and (distinct C (_ bv0 32)) true) (= (bvand C (bvsub C (_ bv1 32))) (_ bv0 32))) (and (and (distinct ?x1890 (_ bv0 11)) true) (= (bvand ?x1890 (bvsub ?x1890 (_ bv1 11))) (_ bv0 11))) (bvslt (ite (and (distinct ((_ extract 31 16) C) (_ bv0 16)) true) ?x6687 ?x3413) (_ bv11 32)) $x3924))))))))))))))))))))))))))))))))))
(check-sat)
