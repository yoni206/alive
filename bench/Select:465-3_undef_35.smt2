(set-info :status unknown)
(declare-fun C2 () (_ BitVec 11))
(declare-fun C1 () (_ BitVec 37))
(assert
 (let ((?x21889 (ite (and (distinct ((_ extract 2 2) C2) (_ bv0 1)) true) (_ bv2 37) (ite (and (distinct ((_ extract 1 1) C2) (_ bv0 1)) true) (_ bv1 37) (_ bv0 37)))))
 (let ((?x2573 (ite (and (distinct ((_ extract 5 5) C2) (_ bv0 1)) true) (_ bv5 37) (ite (and (distinct ((_ extract 4 4) C2) (_ bv0 1)) true) (_ bv4 37) (_ bv3 37)))))
 (let ((?x10524 (ite (and (distinct ((_ extract 8 8) C2) (_ bv0 1)) true) (_ bv8 37) (ite (and (distinct ((_ extract 7 7) C2) (_ bv0 1)) true) (_ bv7 37) (_ bv6 37)))))
 (let ((?x20291 (ite (and (distinct ((_ extract 10 9) C2) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) C2) (_ bv0 1)) true) (_ bv10 37) (_ bv9 37)) ?x10524)))
 (let ((?x23985 (ite (and (distinct ((_ extract 10 6) C2) (_ bv0 5)) true) ?x20291 (ite (and (distinct ((_ extract 5 3) C2) (_ bv0 3)) true) ?x2573 ?x21889))))
 (let ((?x12692 (ite (and (distinct ((_ extract 2 2) C1) (_ bv0 1)) true) (_ bv2 37) (ite (and (distinct ((_ extract 1 1) C1) (_ bv0 1)) true) (_ bv1 37) (_ bv0 37)))))
 (let ((?x8193 (ite (and (distinct ((_ extract 4 3) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 4 4) C1) (_ bv0 1)) true) (_ bv4 37) (_ bv3 37)) ?x12692)))
 (let ((?x11702 (ite (and (distinct ((_ extract 7 7) C1) (_ bv0 1)) true) (_ bv7 37) (ite (and (distinct ((_ extract 6 6) C1) (_ bv0 1)) true) (_ bv6 37) (_ bv5 37)))))
 (let ((?x11439 (ite (and (distinct ((_ extract 9 8) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 9 9) C1) (_ bv0 1)) true) (_ bv9 37) (_ bv8 37)) ?x11702)))
 (let ((?x725 (ite (and (distinct ((_ extract 12 12) C1) (_ bv0 1)) true) (_ bv12 37) (ite (and (distinct ((_ extract 11 11) C1) (_ bv0 1)) true) (_ bv11 37) (_ bv10 37)))))
 (let ((?x15522 (ite (and (distinct ((_ extract 14 13) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 14 14) C1) (_ bv0 1)) true) (_ bv14 37) (_ bv13 37)) ?x725)))
 (let ((?x7092 (ite (and (distinct ((_ extract 18 17) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 18 18) C1) (_ bv0 1)) true) (_ bv18 37) (_ bv17 37)) (ite (and (distinct ((_ extract 16 16) C1) (_ bv0 1)) true) (_ bv16 37) (_ bv15 37)))))
 (let ((?x2882 (ite (and (distinct ((_ extract 18 10) C1) (_ bv0 9)) true) (ite (and (distinct ((_ extract 18 15) C1) (_ bv0 4)) true) ?x7092 ?x15522) (ite (and (distinct ((_ extract 9 5) C1) (_ bv0 5)) true) ?x11439 ?x8193))))
 (let ((?x5402 (ite (and (distinct ((_ extract 21 21) C1) (_ bv0 1)) true) (_ bv21 37) (ite (and (distinct ((_ extract 20 20) C1) (_ bv0 1)) true) (_ bv20 37) (_ bv19 37)))))
 (let ((?x1104 (ite (and (distinct ((_ extract 23 22) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 23 23) C1) (_ bv0 1)) true) (_ bv23 37) (_ bv22 37)) ?x5402)))
 (let ((?x8640 (ite (and (distinct ((_ extract 27 26) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 27 27) C1) (_ bv0 1)) true) (_ bv27 37) (_ bv26 37)) (ite (and (distinct ((_ extract 25 25) C1) (_ bv0 1)) true) (_ bv25 37) (_ bv24 37)))))
 (let ((?x14082 (ite (and (distinct ((_ extract 30 30) C1) (_ bv0 1)) true) (_ bv30 37) (ite (and (distinct ((_ extract 29 29) C1) (_ bv0 1)) true) (_ bv29 37) (_ bv28 37)))))
 (let ((?x24806 (ite (and (distinct ((_ extract 32 31) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 32 32) C1) (_ bv0 1)) true) (_ bv32 37) (_ bv31 37)) ?x14082)))
 (let ((?x18699 (ite (and (distinct ((_ extract 36 35) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 36 36) C1) (_ bv0 1)) true) (_ bv36 37) (_ bv35 37)) (ite (and (distinct ((_ extract 34 34) C1) (_ bv0 1)) true) (_ bv34 37) (_ bv33 37)))))
 (let ((?x20093 (ite (and (distinct ((_ extract 36 28) C1) (_ bv0 9)) true) (ite (and (distinct ((_ extract 36 33) C1) (_ bv0 4)) true) ?x18699 ?x24806) (ite (and (distinct ((_ extract 27 24) C1) (_ bv0 4)) true) ?x8640 ?x1104))))
 (let ((?x4996 (bvsub (ite (and (distinct ((_ extract 36 19) C1) (_ bv0 18)) true) ?x20093 ?x2882) ?x23985)))
 (let ((?x19333 (ite (and (distinct ((_ extract 2 2) C1) (_ bv0 1)) true) (_ bv2 32) (ite (and (distinct ((_ extract 1 1) C1) (_ bv0 1)) true) (_ bv1 32) (_ bv0 32)))))
 (let ((?x17368 (ite (and (distinct ((_ extract 4 3) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 4 4) C1) (_ bv0 1)) true) (_ bv4 32) (_ bv3 32)) ?x19333)))
 (let ((?x24759 (ite (and (distinct ((_ extract 7 7) C1) (_ bv0 1)) true) (_ bv7 32) (ite (and (distinct ((_ extract 6 6) C1) (_ bv0 1)) true) (_ bv6 32) (_ bv5 32)))))
 (let ((?x8117 (ite (and (distinct ((_ extract 9 8) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 9 9) C1) (_ bv0 1)) true) (_ bv9 32) (_ bv8 32)) ?x24759)))
 (let ((?x14843 (ite (and (distinct ((_ extract 12 12) C1) (_ bv0 1)) true) (_ bv12 32) (ite (and (distinct ((_ extract 11 11) C1) (_ bv0 1)) true) (_ bv11 32) (_ bv10 32)))))
 (let ((?x16350 (ite (and (distinct ((_ extract 14 13) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 14 14) C1) (_ bv0 1)) true) (_ bv14 32) (_ bv13 32)) ?x14843)))
 (let ((?x935 (ite (and (distinct ((_ extract 18 17) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 18 18) C1) (_ bv0 1)) true) (_ bv18 32) (_ bv17 32)) (ite (and (distinct ((_ extract 16 16) C1) (_ bv0 1)) true) (_ bv16 32) (_ bv15 32)))))
 (let ((?x11703 (ite (and (distinct ((_ extract 18 10) C1) (_ bv0 9)) true) (ite (and (distinct ((_ extract 18 15) C1) (_ bv0 4)) true) ?x935 ?x16350) (ite (and (distinct ((_ extract 9 5) C1) (_ bv0 5)) true) ?x8117 ?x17368))))
 (let ((?x726 (ite (and (distinct ((_ extract 21 21) C1) (_ bv0 1)) true) (_ bv21 32) (ite (and (distinct ((_ extract 20 20) C1) (_ bv0 1)) true) (_ bv20 32) (_ bv19 32)))))
 (let ((?x9257 (ite (and (distinct ((_ extract 23 22) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 23 23) C1) (_ bv0 1)) true) (_ bv23 32) (_ bv22 32)) ?x726)))
 (let ((?x3064 (ite (and (distinct ((_ extract 27 26) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 27 27) C1) (_ bv0 1)) true) (_ bv27 32) (_ bv26 32)) (ite (and (distinct ((_ extract 25 25) C1) (_ bv0 1)) true) (_ bv25 32) (_ bv24 32)))))
 (let ((?x6703 (ite (and (distinct ((_ extract 30 30) C1) (_ bv0 1)) true) (_ bv30 32) (ite (and (distinct ((_ extract 29 29) C1) (_ bv0 1)) true) (_ bv29 32) (_ bv28 32)))))
 (let ((?x2693 (ite (and (distinct ((_ extract 32 31) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 32 32) C1) (_ bv0 1)) true) (_ bv32 32) (_ bv31 32)) ?x6703)))
 (let ((?x20665 (ite (and (distinct ((_ extract 36 35) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 36 36) C1) (_ bv0 1)) true) (_ bv36 32) (_ bv35 32)) (ite (and (distinct ((_ extract 34 34) C1) (_ bv0 1)) true) (_ bv34 32) (_ bv33 32)))))
 (let ((?x9238 (ite (and (distinct ((_ extract 36 28) C1) (_ bv0 9)) true) (ite (and (distinct ((_ extract 36 33) C1) (_ bv0 4)) true) ?x20665 ?x2693) (ite (and (distinct ((_ extract 27 24) C1) (_ bv0 4)) true) ?x3064 ?x9257))))
 (let ((?x8440 (ite (and (distinct ((_ extract 2 2) C2) (_ bv0 1)) true) (_ bv2 32) (ite (and (distinct ((_ extract 1 1) C2) (_ bv0 1)) true) (_ bv1 32) (_ bv0 32)))))
 (let ((?x17007 (ite (and (distinct ((_ extract 5 5) C2) (_ bv0 1)) true) (_ bv5 32) (ite (and (distinct ((_ extract 4 4) C2) (_ bv0 1)) true) (_ bv4 32) (_ bv3 32)))))
 (let ((?x22348 (ite (and (distinct ((_ extract 8 8) C2) (_ bv0 1)) true) (_ bv8 32) (ite (and (distinct ((_ extract 7 7) C2) (_ bv0 1)) true) (_ bv7 32) (_ bv6 32)))))
 (let ((?x17654 (ite (and (distinct ((_ extract 10 9) C2) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) C2) (_ bv0 1)) true) (_ bv10 32) (_ bv9 32)) ?x22348)))
 (let ((?x4820 (ite (and (distinct ((_ extract 10 6) C2) (_ bv0 5)) true) ?x17654 (ite (and (distinct ((_ extract 5 3) C2) (_ bv0 3)) true) ?x17007 ?x8440))))
 (and (and (and (distinct C1 (_ bv0 37)) true) (= (bvand C1 (bvsub C1 (_ bv1 37))) (_ bv0 37))) (and (and (distinct C2 (_ bv0 11)) true) (= (bvand C2 (bvsub C2 (_ bv1 11))) (_ bv0 11))) (bvslt ?x4820 (ite (and (distinct ((_ extract 36 19) C1) (_ bv0 18)) true) ?x9238 ?x11703)) (not (bvult ?x4996 (_ bv37 37))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
