(set-info :status unknown)
(declare-fun C2 () (_ BitVec 51))
(declare-fun C1 () (_ BitVec 51))
(assert
 (let ((?x2776 (ite (and (distinct ((_ extract 3 2) C2) (_ bv0 2)) true) (ite (and (distinct ((_ extract 3 3) C2) (_ bv0 1)) true) (_ bv3 51) (_ bv2 51)) (ite (and (distinct ((_ extract 1 1) C2) (_ bv0 1)) true) (_ bv1 51) (_ bv0 51)))))
 (let ((?x2923 (ite (and (distinct ((_ extract 6 6) C2) (_ bv0 1)) true) (_ bv6 51) (ite (and (distinct ((_ extract 5 5) C2) (_ bv0 1)) true) (_ bv5 51) (_ bv4 51)))))
 (let ((?x4349 (ite (and (distinct ((_ extract 9 9) C2) (_ bv0 1)) true) (_ bv9 51) (ite (and (distinct ((_ extract 8 8) C2) (_ bv0 1)) true) (_ bv8 51) (_ bv7 51)))))
 (let ((?x1473 (ite (and (distinct ((_ extract 12 12) C2) (_ bv0 1)) true) (_ bv12 51) (ite (and (distinct ((_ extract 11 11) C2) (_ bv0 1)) true) (_ bv11 51) (_ bv10 51)))))
 (let ((?x5327 (ite (and (distinct ((_ extract 12 7) C2) (_ bv0 6)) true) (ite (and (distinct ((_ extract 12 10) C2) (_ bv0 3)) true) ?x1473 ?x4349) (ite (and (distinct ((_ extract 6 4) C2) (_ bv0 3)) true) ?x2923 ?x2776))))
 (let ((?x3918 (ite (and (distinct ((_ extract 16 15) C2) (_ bv0 2)) true) (ite (and (distinct ((_ extract 16 16) C2) (_ bv0 1)) true) (_ bv16 51) (_ bv15 51)) (ite (and (distinct ((_ extract 14 14) C2) (_ bv0 1)) true) (_ bv14 51) (_ bv13 51)))))
 (let ((?x5533 (ite (and (distinct ((_ extract 19 19) C2) (_ bv0 1)) true) (_ bv19 51) (ite (and (distinct ((_ extract 18 18) C2) (_ bv0 1)) true) (_ bv18 51) (_ bv17 51)))))
 (let ((?x4995 (ite (and (distinct ((_ extract 22 22) C2) (_ bv0 1)) true) (_ bv22 51) (ite (and (distinct ((_ extract 21 21) C2) (_ bv0 1)) true) (_ bv21 51) (_ bv20 51)))))
 (let ((?x3727 (ite (and (distinct ((_ extract 25 25) C2) (_ bv0 1)) true) (_ bv25 51) (ite (and (distinct ((_ extract 24 24) C2) (_ bv0 1)) true) (_ bv24 51) (_ bv23 51)))))
 (let ((?x2302 (ite (and (distinct ((_ extract 25 20) C2) (_ bv0 6)) true) (ite (and (distinct ((_ extract 25 23) C2) (_ bv0 3)) true) ?x3727 ?x4995) (ite (and (distinct ((_ extract 19 17) C2) (_ bv0 3)) true) ?x5533 ?x3918))))
 (let ((?x4460 (ite (and (distinct ((_ extract 29 28) C2) (_ bv0 2)) true) (ite (and (distinct ((_ extract 29 29) C2) (_ bv0 1)) true) (_ bv29 51) (_ bv28 51)) (ite (and (distinct ((_ extract 27 27) C2) (_ bv0 1)) true) (_ bv27 51) (_ bv26 51)))))
 (let ((?x6857 (ite (and (distinct ((_ extract 32 32) C2) (_ bv0 1)) true) (_ bv32 51) (ite (and (distinct ((_ extract 31 31) C2) (_ bv0 1)) true) (_ bv31 51) (_ bv30 51)))))
 (let ((?x6812 (ite (and (distinct ((_ extract 35 35) C2) (_ bv0 1)) true) (_ bv35 51) (ite (and (distinct ((_ extract 34 34) C2) (_ bv0 1)) true) (_ bv34 51) (_ bv33 51)))))
 (let ((?x7371 (ite (and (distinct ((_ extract 38 38) C2) (_ bv0 1)) true) (_ bv38 51) (ite (and (distinct ((_ extract 37 37) C2) (_ bv0 1)) true) (_ bv37 51) (_ bv36 51)))))
 (let ((?x4701 (ite (and (distinct ((_ extract 38 33) C2) (_ bv0 6)) true) (ite (and (distinct ((_ extract 38 36) C2) (_ bv0 3)) true) ?x7371 ?x6812) (ite (and (distinct ((_ extract 32 30) C2) (_ bv0 3)) true) ?x6857 ?x4460))))
 (let ((?x3973 (ite (and (distinct ((_ extract 41 41) C2) (_ bv0 1)) true) (_ bv41 51) (ite (and (distinct ((_ extract 40 40) C2) (_ bv0 1)) true) (_ bv40 51) (_ bv39 51)))))
 (let ((?x5099 (ite (and (distinct ((_ extract 44 44) C2) (_ bv0 1)) true) (_ bv44 51) (ite (and (distinct ((_ extract 43 43) C2) (_ bv0 1)) true) (_ bv43 51) (_ bv42 51)))))
 (let ((?x8205 (ite (and (distinct ((_ extract 47 47) C2) (_ bv0 1)) true) (_ bv47 51) (ite (and (distinct ((_ extract 46 46) C2) (_ bv0 1)) true) (_ bv46 51) (_ bv45 51)))))
 (let ((?x8368 (ite (and (distinct ((_ extract 50 50) C2) (_ bv0 1)) true) (_ bv50 51) (ite (and (distinct ((_ extract 49 49) C2) (_ bv0 1)) true) (_ bv49 51) (_ bv48 51)))))
 (let ((?x7705 (ite (and (distinct ((_ extract 50 45) C2) (_ bv0 6)) true) (ite (and (distinct ((_ extract 50 48) C2) (_ bv0 3)) true) ?x8368 ?x8205) (ite (and (distinct ((_ extract 44 42) C2) (_ bv0 3)) true) ?x5099 ?x3973))))
 (let ((?x4019 (ite (and (distinct ((_ extract 50 26) C2) (_ bv0 25)) true) (ite (and (distinct ((_ extract 50 39) C2) (_ bv0 12)) true) ?x7705 ?x4701) (ite (and (distinct ((_ extract 25 13) C2) (_ bv0 13)) true) ?x2302 ?x5327))))
 (let ((?x1502 (bvsub (_ bv51 51) (bvsub (bvsub (_ bv51 51) ?x4019) (_ bv1 51)))))
 (and (= C1 (bvneg C2)) (and (and (distinct C2 (_ bv0 51)) true) (= (bvand C2 (bvsub C2 (_ bv1 51))) (_ bv0 51))) (not (= (bvand C2 (bvshl (_ bv2251799813685247 51) ?x1502)) (_ bv0 51))) false))))))))))))))))))))))))
(check-sat)
