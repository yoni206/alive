(set-info :status unknown)
(declare-fun mem0 () (_ BitVec 8))
(declare-fun %p2 () (_ BitVec 64))
(declare-fun idx () (_ BitVec 64))
(declare-fun %p1 () (_ BitVec 64))
(declare-fun |ana_equivalentAddressValues(%p1, %p2)| () (_ BitVec 1))
(assert
 (let ((?x23091 (concat (concat (concat (concat mem0 mem0) mem0) mem0) ((_ extract 4 0) mem0))))
 (let (($x15463 (or true true)))
 (let (($x18818 (and (distinct %p2 (_ bv0 64)) true)))
 (let (($x14632 (and (distinct %p1 (_ bv0 64)) true)))
 (let ((?x10055 (ite (and $x14632 $x15463 $x14632 $x15463 $x14632 $x15463 $x18818 $x15463 (= idx %p2)) (concat ((_ extract 7 5) mem0) ((_ extract 4 0) ?x23091)) mem0)))
 (let (($x1702 (and $x14632 $x15463 $x14632 $x15463 $x14632 $x15463 $x18818 $x15463 (= idx (bvadd (bvadd %p2 (_ bv1 64)) (_ bv0 64))))))
 (let (($x18812 (and $x14632 $x15463 $x14632 $x15463 $x14632 $x15463 $x18818 $x15463 (= idx (bvadd (bvadd %p2 (_ bv1 64)) (_ bv1 64))))))
 (let (($x16294 (and $x14632 $x15463 $x14632 $x15463 $x14632 $x15463 $x18818 $x15463 (= idx (bvadd (bvadd %p2 (_ bv1 64)) (_ bv2 64))))))
 (let ((?x15736 (ite $x16294 ((_ extract 28 21) ?x23091) (ite $x18812 ((_ extract 20 13) ?x23091) (ite $x1702 ((_ extract 12 5) ?x23091) ?x10055)))))
 (let (($x16348 (and $x14632 $x15463 $x14632 $x15463 $x14632 $x15463 $x18818 $x15463 (= idx (bvadd (bvadd %p2 (_ bv1 64)) (_ bv3 64))))))
 (let ((?x21383 (ite $x16348 ((_ extract 36 29) ?x23091) ?x15736)))
 (let (($x10633 (= |ana_equivalentAddressValues(%p1, %p2)| (_ bv1 1))))
 (and (=> $x10633 (= %p1 %p2)) $x10633 (and (distinct ?x21383 mem0) true)))))))))))))))
(check-sat)
