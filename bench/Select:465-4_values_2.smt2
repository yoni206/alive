(set-info :status unknown)
(declare-fun %Y () (_ BitVec 11))
(declare-fun C2 () (_ BitVec 11))
(declare-fun C1 () (_ BitVec 6))
(declare-fun %X () (_ BitVec 6))
(assert
 (let ((?x10690 (ite (and (distinct ((_ extract 2 2) C2) (_ bv0 1)) true) (_ bv2 6) (ite (and (distinct ((_ extract 1 1) C2) (_ bv0 1)) true) (_ bv1 6) (_ bv0 6)))))
 (let ((?x23999 (ite (and (distinct ((_ extract 5 5) C2) (_ bv0 1)) true) (_ bv5 6) (ite (and (distinct ((_ extract 4 4) C2) (_ bv0 1)) true) (_ bv4 6) (_ bv3 6)))))
 (let ((?x22802 (ite (and (distinct ((_ extract 8 8) C2) (_ bv0 1)) true) (_ bv8 6) (ite (and (distinct ((_ extract 7 7) C2) (_ bv0 1)) true) (_ bv7 6) (_ bv6 6)))))
 (let ((?x22503 (ite (and (distinct ((_ extract 10 9) C2) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) C2) (_ bv0 1)) true) (_ bv10 6) (_ bv9 6)) ?x22802)))
 (let ((?x4537 (ite (and (distinct ((_ extract 10 6) C2) (_ bv0 5)) true) ?x22503 (ite (and (distinct ((_ extract 5 3) C2) (_ bv0 3)) true) ?x23999 ?x10690))))
 (let ((?x4888 (ite (and (distinct ((_ extract 2 2) C1) (_ bv0 1)) true) (_ bv2 6) (ite (and (distinct ((_ extract 1 1) C1) (_ bv0 1)) true) (_ bv1 6) (_ bv0 6)))))
 (let ((?x13505 (ite (and (distinct ((_ extract 5 5) C1) (_ bv0 1)) true) (_ bv5 6) (ite (and (distinct ((_ extract 4 4) C1) (_ bv0 1)) true) (_ bv4 6) (_ bv3 6)))))
 (let ((?x20831 (bvsub (ite (and (distinct ((_ extract 5 3) C1) (_ bv0 3)) true) ?x13505 ?x4888) ?x4537)))
 (let ((?x3062 (bvand %X C1)))
 (let ((?x11195 (bvor %Y C2)))
 (let (($x1025 (and (distinct (ite (= (ite (and (distinct ?x3062 (_ bv0 6)) true) (_ bv1 1) (_ bv0 1)) (_ bv1 1)) %Y ?x11195) (bvor (bvxor ((_ zero_extend 5) (bvlshr ?x3062 ?x20831)) C2) %Y)) true)))
 (let ((?x23473 (ite (and (distinct ((_ extract 2 2) C1) (_ bv0 1)) true) (_ bv2 32) (ite (and (distinct ((_ extract 1 1) C1) (_ bv0 1)) true) (_ bv1 32) (_ bv0 32)))))
 (let ((?x19802 (ite (and (distinct ((_ extract 5 5) C1) (_ bv0 1)) true) (_ bv5 32) (ite (and (distinct ((_ extract 4 4) C1) (_ bv0 1)) true) (_ bv4 32) (_ bv3 32)))))
 (let ((?x1833 (ite (and (distinct ((_ extract 2 2) C2) (_ bv0 1)) true) (_ bv2 32) (ite (and (distinct ((_ extract 1 1) C2) (_ bv0 1)) true) (_ bv1 32) (_ bv0 32)))))
 (let ((?x7344 (ite (and (distinct ((_ extract 5 5) C2) (_ bv0 1)) true) (_ bv5 32) (ite (and (distinct ((_ extract 4 4) C2) (_ bv0 1)) true) (_ bv4 32) (_ bv3 32)))))
 (let ((?x4425 (ite (and (distinct ((_ extract 8 8) C2) (_ bv0 1)) true) (_ bv8 32) (ite (and (distinct ((_ extract 7 7) C2) (_ bv0 1)) true) (_ bv7 32) (_ bv6 32)))))
 (let ((?x8903 (ite (and (distinct ((_ extract 10 9) C2) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) C2) (_ bv0 1)) true) (_ bv10 32) (_ bv9 32)) ?x4425)))
 (let ((?x5208 (ite (and (distinct ((_ extract 10 6) C2) (_ bv0 5)) true) ?x8903 (ite (and (distinct ((_ extract 5 3) C2) (_ bv0 3)) true) ?x7344 ?x1833))))
 (and (and (and (distinct C1 (_ bv0 6)) true) (= (bvand C1 (bvsub C1 (_ bv1 6))) (_ bv0 6))) (and (and (distinct C2 (_ bv0 11)) true) (= (bvand C2 (bvsub C2 (_ bv1 11))) (_ bv0 11))) (bvslt ?x5208 (ite (and (distinct ((_ extract 5 3) C1) (_ bv0 3)) true) ?x19802 ?x23473)) $x1025))))))))))))))))))))
(check-sat)
