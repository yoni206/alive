(set-info :source |
 Generated by Alive 0.1
 More info in N. P. Lopes, D. Menendez, S. Nagarakatte, J. Regehr.
 Provably Correct Peephole Optimizations with Alive. In PLDI'15.
|)

(set-info :status unknown)
(declare-fun |ana_MaskedValueIsZero(%Y, (-1 << (log2(C1) + 1)))| () (_ BitVec 1))
(declare-fun C1 () (_ BitVec 40))
(declare-fun C2 () (_ BitVec 40))
(declare-fun %Y () (_ BitVec 40))
(assert
 (let (($x462 (= |ana_MaskedValueIsZero(%Y, (-1 << (log2(C1) + 1)))| (_ bv1 1))))
 (let (($x8358 (and (and (distinct C1 (_ bv0 40)) true) (= (bvand C1 (bvsub C1 (_ bv1 40))) (_ bv0 40)))))
 (let (($x7846 (= C2 (bvneg C1))))
 (let ((?x14366 (ite (and (distinct ((_ extract 2 2) C1) (_ bv0 1)) true) (_ bv2 40) (ite (and (distinct ((_ extract 1 1) C1) (_ bv0 1)) true) (_ bv1 40) (_ bv0 40)))))
 (let ((?x7333 (ite (and (distinct ((_ extract 4 3) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 4 4) C1) (_ bv0 1)) true) (_ bv4 40) (_ bv3 40)) ?x14366)))
 (let ((?x27715 (ite (and (distinct ((_ extract 7 7) C1) (_ bv0 1)) true) (_ bv7 40) (ite (and (distinct ((_ extract 6 6) C1) (_ bv0 1)) true) (_ bv6 40) (_ bv5 40)))))
 (let ((?x25878 (ite (and (distinct ((_ extract 9 8) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 9 9) C1) (_ bv0 1)) true) (_ bv9 40) (_ bv8 40)) ?x27715)))
 (let ((?x15628 (ite (and (distinct ((_ extract 12 12) C1) (_ bv0 1)) true) (_ bv12 40) (ite (and (distinct ((_ extract 11 11) C1) (_ bv0 1)) true) (_ bv11 40) (_ bv10 40)))))
 (let ((?x21041 (ite (and (distinct ((_ extract 14 13) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 14 14) C1) (_ bv0 1)) true) (_ bv14 40) (_ bv13 40)) ?x15628)))
 (let ((?x24139 (ite (and (distinct ((_ extract 17 17) C1) (_ bv0 1)) true) (_ bv17 40) (ite (and (distinct ((_ extract 16 16) C1) (_ bv0 1)) true) (_ bv16 40) (_ bv15 40)))))
 (let ((?x22870 (ite (and (distinct ((_ extract 19 18) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 19 19) C1) (_ bv0 1)) true) (_ bv19 40) (_ bv18 40)) ?x24139)))
 (let ((?x7305 (ite (and (distinct ((_ extract 19 10) C1) (_ bv0 10)) true) (ite (and (distinct ((_ extract 19 15) C1) (_ bv0 5)) true) ?x22870 ?x21041) (ite (and (distinct ((_ extract 9 5) C1) (_ bv0 5)) true) ?x25878 ?x7333))))
 (let ((?x16754 (ite (and (distinct ((_ extract 22 22) C1) (_ bv0 1)) true) (_ bv22 40) (ite (and (distinct ((_ extract 21 21) C1) (_ bv0 1)) true) (_ bv21 40) (_ bv20 40)))))
 (let ((?x25912 (ite (and (distinct ((_ extract 24 23) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 24 24) C1) (_ bv0 1)) true) (_ bv24 40) (_ bv23 40)) ?x16754)))
 (let ((?x10014 (ite (and (distinct ((_ extract 27 27) C1) (_ bv0 1)) true) (_ bv27 40) (ite (and (distinct ((_ extract 26 26) C1) (_ bv0 1)) true) (_ bv26 40) (_ bv25 40)))))
 (let ((?x6870 (ite (and (distinct ((_ extract 29 28) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 29 29) C1) (_ bv0 1)) true) (_ bv29 40) (_ bv28 40)) ?x10014)))
 (let ((?x9089 (ite (and (distinct ((_ extract 32 32) C1) (_ bv0 1)) true) (_ bv32 40) (ite (and (distinct ((_ extract 31 31) C1) (_ bv0 1)) true) (_ bv31 40) (_ bv30 40)))))
 (let ((?x12468 (ite (and (distinct ((_ extract 34 33) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 34 34) C1) (_ bv0 1)) true) (_ bv34 40) (_ bv33 40)) ?x9089)))
 (let ((?x1780 (ite (and (distinct ((_ extract 37 37) C1) (_ bv0 1)) true) (_ bv37 40) (ite (and (distinct ((_ extract 36 36) C1) (_ bv0 1)) true) (_ bv36 40) (_ bv35 40)))))
 (let ((?x28607 (ite (and (distinct ((_ extract 39 38) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 39 39) C1) (_ bv0 1)) true) (_ bv39 40) (_ bv38 40)) ?x1780)))
 (let ((?x14731 (ite (and (distinct ((_ extract 39 30) C1) (_ bv0 10)) true) (ite (and (distinct ((_ extract 39 35) C1) (_ bv0 5)) true) ?x28607 ?x12468) (ite (and (distinct ((_ extract 29 25) C1) (_ bv0 5)) true) ?x6870 ?x25912))))
 (let ((?x16437 (bvshl (_ bv1099511627775 40) (bvadd (ite (and (distinct ((_ extract 39 20) C1) (_ bv0 20)) true) ?x14731 ?x7305) (_ bv1 40)))))
 (let (($x9351 (=> $x462 (= (bvand %Y ?x16437) (_ bv0 40)))))
 (and $x9351 $x7846 $x8358 $x462 false)))))))))))))))))))))))))
(check-sat)
