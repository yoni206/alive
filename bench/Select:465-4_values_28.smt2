(set-info :status unknown)
(declare-fun %Y () (_ BitVec 11))
(declare-fun C2 () (_ BitVec 11))
(declare-fun C1 () (_ BitVec 36))
(declare-fun %X () (_ BitVec 36))
(assert
 (let ((?x4489 (ite (and (distinct ((_ extract 2 2) C2) (_ bv0 1)) true) (_ bv2 36) (ite (and (distinct ((_ extract 1 1) C2) (_ bv0 1)) true) (_ bv1 36) (_ bv0 36)))))
 (let ((?x3649 (ite (and (distinct ((_ extract 5 5) C2) (_ bv0 1)) true) (_ bv5 36) (ite (and (distinct ((_ extract 4 4) C2) (_ bv0 1)) true) (_ bv4 36) (_ bv3 36)))))
 (let ((?x3113 (ite (and (distinct ((_ extract 8 8) C2) (_ bv0 1)) true) (_ bv8 36) (ite (and (distinct ((_ extract 7 7) C2) (_ bv0 1)) true) (_ bv7 36) (_ bv6 36)))))
 (let ((?x2758 (ite (and (distinct ((_ extract 10 9) C2) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) C2) (_ bv0 1)) true) (_ bv10 36) (_ bv9 36)) ?x3113)))
 (let ((?x5567 (ite (and (distinct ((_ extract 10 6) C2) (_ bv0 5)) true) ?x2758 (ite (and (distinct ((_ extract 5 3) C2) (_ bv0 3)) true) ?x3649 ?x4489))))
 (let ((?x3742 (ite (and (distinct ((_ extract 2 2) C1) (_ bv0 1)) true) (_ bv2 36) (ite (and (distinct ((_ extract 1 1) C1) (_ bv0 1)) true) (_ bv1 36) (_ bv0 36)))))
 (let ((?x3735 (ite (and (distinct ((_ extract 4 3) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 4 4) C1) (_ bv0 1)) true) (_ bv4 36) (_ bv3 36)) ?x3742)))
 (let ((?x2692 (ite (and (distinct ((_ extract 8 7) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 8 8) C1) (_ bv0 1)) true) (_ bv8 36) (_ bv7 36)) (ite (and (distinct ((_ extract 6 6) C1) (_ bv0 1)) true) (_ bv6 36) (_ bv5 36)))))
 (let ((?x3202 (ite (and (distinct ((_ extract 11 11) C1) (_ bv0 1)) true) (_ bv11 36) (ite (and (distinct ((_ extract 10 10) C1) (_ bv0 1)) true) (_ bv10 36) (_ bv9 36)))))
 (let ((?x2309 (ite (and (distinct ((_ extract 13 12) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 13 13) C1) (_ bv0 1)) true) (_ bv13 36) (_ bv12 36)) ?x3202)))
 (let ((?x4276 (ite (and (distinct ((_ extract 17 16) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 17 17) C1) (_ bv0 1)) true) (_ bv17 36) (_ bv16 36)) (ite (and (distinct ((_ extract 15 15) C1) (_ bv0 1)) true) (_ bv15 36) (_ bv14 36)))))
 (let ((?x2268 (ite (and (distinct ((_ extract 17 9) C1) (_ bv0 9)) true) (ite (and (distinct ((_ extract 17 14) C1) (_ bv0 4)) true) ?x4276 ?x2309) (ite (and (distinct ((_ extract 8 5) C1) (_ bv0 4)) true) ?x2692 ?x3735))))
 (let ((?x3689 (ite (and (distinct ((_ extract 20 20) C1) (_ bv0 1)) true) (_ bv20 36) (ite (and (distinct ((_ extract 19 19) C1) (_ bv0 1)) true) (_ bv19 36) (_ bv18 36)))))
 (let ((?x3318 (ite (and (distinct ((_ extract 22 21) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 22 22) C1) (_ bv0 1)) true) (_ bv22 36) (_ bv21 36)) ?x3689)))
 (let ((?x3723 (ite (and (distinct ((_ extract 26 25) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 26 26) C1) (_ bv0 1)) true) (_ bv26 36) (_ bv25 36)) (ite (and (distinct ((_ extract 24 24) C1) (_ bv0 1)) true) (_ bv24 36) (_ bv23 36)))))
 (let ((?x4472 (ite (and (distinct ((_ extract 29 29) C1) (_ bv0 1)) true) (_ bv29 36) (ite (and (distinct ((_ extract 28 28) C1) (_ bv0 1)) true) (_ bv28 36) (_ bv27 36)))))
 (let ((?x5222 (ite (and (distinct ((_ extract 31 30) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 31 31) C1) (_ bv0 1)) true) (_ bv31 36) (_ bv30 36)) ?x4472)))
 (let ((?x4287 (ite (and (distinct ((_ extract 35 34) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 35 35) C1) (_ bv0 1)) true) (_ bv35 36) (_ bv34 36)) (ite (and (distinct ((_ extract 33 33) C1) (_ bv0 1)) true) (_ bv33 36) (_ bv32 36)))))
 (let ((?x3469 (ite (and (distinct ((_ extract 35 27) C1) (_ bv0 9)) true) (ite (and (distinct ((_ extract 35 32) C1) (_ bv0 4)) true) ?x4287 ?x5222) (ite (and (distinct ((_ extract 26 23) C1) (_ bv0 4)) true) ?x3723 ?x3318))))
 (let ((?x5341 (bvsub (ite (and (distinct ((_ extract 35 18) C1) (_ bv0 18)) true) ?x3469 ?x2268) ?x5567)))
 (let ((?x4884 (bvand %X C1)))
 (let ((?x3478 (bvor %Y C2)))
 (let (($x6515 (and (distinct (ite (= (ite (and (distinct ?x4884 (_ bv0 36)) true) (_ bv1 1) (_ bv0 1)) (_ bv1 1)) %Y ?x3478) (bvor (bvxor ((_ extract 10 0) (bvlshr ?x4884 ?x5341)) C2) %Y)) true)))
 (let ((?x5069 (ite (and (distinct ((_ extract 2 2) C1) (_ bv0 1)) true) (_ bv2 32) (ite (and (distinct ((_ extract 1 1) C1) (_ bv0 1)) true) (_ bv1 32) (_ bv0 32)))))
 (let ((?x4828 (ite (and (distinct ((_ extract 4 3) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 4 4) C1) (_ bv0 1)) true) (_ bv4 32) (_ bv3 32)) ?x5069)))
 (let ((?x1765 (ite (and (distinct ((_ extract 8 7) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 8 8) C1) (_ bv0 1)) true) (_ bv8 32) (_ bv7 32)) (ite (and (distinct ((_ extract 6 6) C1) (_ bv0 1)) true) (_ bv6 32) (_ bv5 32)))))
 (let ((?x4265 (ite (and (distinct ((_ extract 11 11) C1) (_ bv0 1)) true) (_ bv11 32) (ite (and (distinct ((_ extract 10 10) C1) (_ bv0 1)) true) (_ bv10 32) (_ bv9 32)))))
 (let ((?x3729 (ite (and (distinct ((_ extract 13 12) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 13 13) C1) (_ bv0 1)) true) (_ bv13 32) (_ bv12 32)) ?x4265)))
 (let ((?x3332 (ite (and (distinct ((_ extract 17 16) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 17 17) C1) (_ bv0 1)) true) (_ bv17 32) (_ bv16 32)) (ite (and (distinct ((_ extract 15 15) C1) (_ bv0 1)) true) (_ bv15 32) (_ bv14 32)))))
 (let ((?x5946 (ite (and (distinct ((_ extract 17 9) C1) (_ bv0 9)) true) (ite (and (distinct ((_ extract 17 14) C1) (_ bv0 4)) true) ?x3332 ?x3729) (ite (and (distinct ((_ extract 8 5) C1) (_ bv0 4)) true) ?x1765 ?x4828))))
 (let ((?x1873 (ite (and (distinct ((_ extract 20 20) C1) (_ bv0 1)) true) (_ bv20 32) (ite (and (distinct ((_ extract 19 19) C1) (_ bv0 1)) true) (_ bv19 32) (_ bv18 32)))))
 (let ((?x2578 (ite (and (distinct ((_ extract 22 21) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 22 22) C1) (_ bv0 1)) true) (_ bv22 32) (_ bv21 32)) ?x1873)))
 (let ((?x1786 (ite (and (distinct ((_ extract 26 25) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 26 26) C1) (_ bv0 1)) true) (_ bv26 32) (_ bv25 32)) (ite (and (distinct ((_ extract 24 24) C1) (_ bv0 1)) true) (_ bv24 32) (_ bv23 32)))))
 (let ((?x1714 (ite (and (distinct ((_ extract 29 29) C1) (_ bv0 1)) true) (_ bv29 32) (ite (and (distinct ((_ extract 28 28) C1) (_ bv0 1)) true) (_ bv28 32) (_ bv27 32)))))
 (let ((?x2861 (ite (and (distinct ((_ extract 31 30) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 31 31) C1) (_ bv0 1)) true) (_ bv31 32) (_ bv30 32)) ?x1714)))
 (let ((?x2635 (ite (and (distinct ((_ extract 35 34) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 35 35) C1) (_ bv0 1)) true) (_ bv35 32) (_ bv34 32)) (ite (and (distinct ((_ extract 33 33) C1) (_ bv0 1)) true) (_ bv33 32) (_ bv32 32)))))
 (let ((?x2320 (ite (and (distinct ((_ extract 35 27) C1) (_ bv0 9)) true) (ite (and (distinct ((_ extract 35 32) C1) (_ bv0 4)) true) ?x2635 ?x2861) (ite (and (distinct ((_ extract 26 23) C1) (_ bv0 4)) true) ?x1786 ?x2578))))
 (let ((?x5024 (ite (and (distinct ((_ extract 2 2) C2) (_ bv0 1)) true) (_ bv2 32) (ite (and (distinct ((_ extract 1 1) C2) (_ bv0 1)) true) (_ bv1 32) (_ bv0 32)))))
 (let ((?x2336 (ite (and (distinct ((_ extract 5 5) C2) (_ bv0 1)) true) (_ bv5 32) (ite (and (distinct ((_ extract 4 4) C2) (_ bv0 1)) true) (_ bv4 32) (_ bv3 32)))))
 (let ((?x5687 (ite (and (distinct ((_ extract 8 8) C2) (_ bv0 1)) true) (_ bv8 32) (ite (and (distinct ((_ extract 7 7) C2) (_ bv0 1)) true) (_ bv7 32) (_ bv6 32)))))
 (let ((?x5275 (ite (and (distinct ((_ extract 10 9) C2) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) C2) (_ bv0 1)) true) (_ bv10 32) (_ bv9 32)) ?x5687)))
 (let ((?x1419 (ite (and (distinct ((_ extract 10 6) C2) (_ bv0 5)) true) ?x5275 (ite (and (distinct ((_ extract 5 3) C2) (_ bv0 3)) true) ?x2336 ?x5024))))
 (and (and (and (distinct C1 (_ bv0 36)) true) (= (bvand C1 (bvsub C1 (_ bv1 36))) (_ bv0 36))) (and (and (distinct C2 (_ bv0 11)) true) (= (bvand C2 (bvsub C2 (_ bv1 11))) (_ bv0 11))) (bvslt ?x1419 (ite (and (distinct ((_ extract 35 18) C1) (_ bv0 18)) true) ?x2320 ?x5946)) $x6515))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
