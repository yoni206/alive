(set-info :status unknown)
(declare-fun C3 () (_ BitVec 11))
(declare-fun C2 () (_ BitVec 11))
(declare-fun C () (_ BitVec 23))
(assert
 (let ((?x6027 (ite (and (distinct ((_ extract 2 2) (bvsub C2 C3)) (_ bv0 1)) true) (_ bv2 11) (ite (and (distinct ((_ extract 1 1) (bvsub C2 C3)) (_ bv0 1)) true) (_ bv1 11) (_ bv0 11)))))
 (let ((?x15890 (ite (and (distinct ((_ extract 5 5) (bvsub C2 C3)) (_ bv0 1)) true) (_ bv5 11) (ite (and (distinct ((_ extract 4 4) (bvsub C2 C3)) (_ bv0 1)) true) (_ bv4 11) (_ bv3 11)))))
 (let ((?x3145 (ite (and (distinct ((_ extract 8 8) (bvsub C2 C3)) (_ bv0 1)) true) (_ bv8 11) (ite (and (distinct ((_ extract 7 7) (bvsub C2 C3)) (_ bv0 1)) true) (_ bv7 11) (_ bv6 11)))))
 (let ((?x14401 (ite (and (distinct ((_ extract 10 9) (bvsub C2 C3)) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) (bvsub C2 C3)) (_ bv0 1)) true) (_ bv10 11) (_ bv9 11)) ?x3145)))
 (let ((?x2685 (ite (and (distinct ((_ extract 10 6) (bvsub C2 C3)) (_ bv0 5)) true) ?x14401 (ite (and (distinct ((_ extract 5 3) (bvsub C2 C3)) (_ bv0 3)) true) ?x15890 ?x6027))))
 (let ((?x13135 (ite (and (distinct ((_ extract 2 2) C) (_ bv0 1)) true) (_ bv2 11) (ite (and (distinct ((_ extract 1 1) C) (_ bv0 1)) true) (_ bv1 11) (_ bv0 11)))))
 (let ((?x10402 (ite (and (distinct ((_ extract 5 5) C) (_ bv0 1)) true) (_ bv5 11) (ite (and (distinct ((_ extract 4 4) C) (_ bv0 1)) true) (_ bv4 11) (_ bv3 11)))))
 (let ((?x13748 (ite (and (distinct ((_ extract 8 8) C) (_ bv0 1)) true) (_ bv8 11) (ite (and (distinct ((_ extract 7 7) C) (_ bv0 1)) true) (_ bv7 11) (_ bv6 11)))))
 (let ((?x18541 (ite (and (distinct ((_ extract 11 11) C) (_ bv0 1)) true) (_ bv11 11) (ite (and (distinct ((_ extract 10 10) C) (_ bv0 1)) true) (_ bv10 11) (_ bv9 11)))))
 (let ((?x6939 (ite (and (distinct ((_ extract 11 6) C) (_ bv0 6)) true) (ite (and (distinct ((_ extract 11 9) C) (_ bv0 3)) true) ?x18541 ?x13748) (ite (and (distinct ((_ extract 5 3) C) (_ bv0 3)) true) ?x10402 ?x13135))))
 (let ((?x10034 (ite (and (distinct ((_ extract 14 14) C) (_ bv0 1)) true) (_ bv14 11) (ite (and (distinct ((_ extract 13 13) C) (_ bv0 1)) true) (_ bv13 11) (_ bv12 11)))))
 (let ((?x6790 (ite (and (distinct ((_ extract 17 17) C) (_ bv0 1)) true) (_ bv17 11) (ite (and (distinct ((_ extract 16 16) C) (_ bv0 1)) true) (_ bv16 11) (_ bv15 11)))))
 (let ((?x8295 (ite (and (distinct ((_ extract 20 20) C) (_ bv0 1)) true) (_ bv20 11) (ite (and (distinct ((_ extract 19 19) C) (_ bv0 1)) true) (_ bv19 11) (_ bv18 11)))))
 (let ((?x7454 (ite (and (distinct ((_ extract 22 21) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 22 22) C) (_ bv0 1)) true) (_ bv22 11) (_ bv21 11)) ?x8295)))
 (let ((?x1654 (ite (and (distinct ((_ extract 22 18) C) (_ bv0 5)) true) ?x7454 (ite (and (distinct ((_ extract 17 15) C) (_ bv0 3)) true) ?x6790 ?x10034))))
 (let ((?x18258 (bvsub (ite (and (distinct ((_ extract 22 12) C) (_ bv0 11)) true) ?x1654 ?x6939) ?x2685)))
 (let ((?x24069 (ite (bvsgt (_ bv0 11) ?x18258) (_ bv0 11) ?x18258)))
 (let ((?x13121 (bvsub ?x2685 (ite (and (distinct ((_ extract 22 12) C) (_ bv0 11)) true) ?x1654 ?x6939))))
 (let ((?x18367 (ite (bvsgt (_ bv0 11) ?x13121) (_ bv0 11) ?x13121)))
 (let ((?x3437 (ite (and (distinct ((_ extract 2 2) C) (_ bv0 1)) true) (_ bv2 32) (ite (and (distinct ((_ extract 1 1) C) (_ bv0 1)) true) (_ bv1 32) (_ bv0 32)))))
 (let ((?x1432 (ite (and (distinct ((_ extract 5 5) C) (_ bv0 1)) true) (_ bv5 32) (ite (and (distinct ((_ extract 4 4) C) (_ bv0 1)) true) (_ bv4 32) (_ bv3 32)))))
 (let ((?x22355 (ite (and (distinct ((_ extract 8 8) C) (_ bv0 1)) true) (_ bv8 32) (ite (and (distinct ((_ extract 7 7) C) (_ bv0 1)) true) (_ bv7 32) (_ bv6 32)))))
 (let ((?x18573 (ite (and (distinct ((_ extract 11 11) C) (_ bv0 1)) true) (_ bv11 32) (ite (and (distinct ((_ extract 10 10) C) (_ bv0 1)) true) (_ bv10 32) (_ bv9 32)))))
 (let ((?x5396 (ite (and (distinct ((_ extract 11 6) C) (_ bv0 6)) true) (ite (and (distinct ((_ extract 11 9) C) (_ bv0 3)) true) ?x18573 ?x22355) (ite (and (distinct ((_ extract 5 3) C) (_ bv0 3)) true) ?x1432 ?x3437))))
 (let ((?x14730 (ite (and (distinct ((_ extract 14 14) C) (_ bv0 1)) true) (_ bv14 32) (ite (and (distinct ((_ extract 13 13) C) (_ bv0 1)) true) (_ bv13 32) (_ bv12 32)))))
 (let ((?x19912 (ite (and (distinct ((_ extract 17 17) C) (_ bv0 1)) true) (_ bv17 32) (ite (and (distinct ((_ extract 16 16) C) (_ bv0 1)) true) (_ bv16 32) (_ bv15 32)))))
 (let ((?x3762 (ite (and (distinct ((_ extract 20 20) C) (_ bv0 1)) true) (_ bv20 32) (ite (and (distinct ((_ extract 19 19) C) (_ bv0 1)) true) (_ bv19 32) (_ bv18 32)))))
 (let ((?x4302 (ite (and (distinct ((_ extract 22 21) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 22 22) C) (_ bv0 1)) true) (_ bv22 32) (_ bv21 32)) ?x3762)))
 (let ((?x2593 (ite (and (distinct ((_ extract 22 18) C) (_ bv0 5)) true) ?x4302 (ite (and (distinct ((_ extract 17 15) C) (_ bv0 3)) true) ?x19912 ?x14730))))
 (let (($x4641 (and (and (distinct (bvsub C2 C3) (_ bv0 11)) true) (= (bvand (bvsub C2 C3) (bvsub (bvsub C2 C3) (_ bv1 11))) (_ bv0 11)))))
 (and (and (and (distinct C (_ bv0 23)) true) (= (bvand C (bvsub C (_ bv1 23))) (_ bv0 23))) $x4641 (bvslt (ite (and (distinct ((_ extract 22 12) C) (_ bv0 11)) true) ?x2593 ?x5396) (_ bv11 32)) (not (and (bvult ?x18367 (_ bv11 11)) (bvult ?x24069 (_ bv11 11))))))))))))))))))))))))))))))))))))
(check-sat)
