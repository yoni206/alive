(set-info :status unknown)
(declare-fun C2 () (_ BitVec 39))
(declare-fun C1 () (_ BitVec 39))
(assert
 (let ((?x5299 (ite (and (distinct ((_ extract 2 2) C2) (_ bv0 1)) true) (_ bv2 39) (ite (and (distinct ((_ extract 1 1) C2) (_ bv0 1)) true) (_ bv1 39) (_ bv0 39)))))
 (let ((?x2879 (ite (and (distinct ((_ extract 4 3) C2) (_ bv0 2)) true) (ite (and (distinct ((_ extract 4 4) C2) (_ bv0 1)) true) (_ bv4 39) (_ bv3 39)) ?x5299)))
 (let ((?x3969 (ite (and (distinct ((_ extract 7 7) C2) (_ bv0 1)) true) (_ bv7 39) (ite (and (distinct ((_ extract 6 6) C2) (_ bv0 1)) true) (_ bv6 39) (_ bv5 39)))))
 (let ((?x1502 (ite (and (distinct ((_ extract 9 8) C2) (_ bv0 2)) true) (ite (and (distinct ((_ extract 9 9) C2) (_ bv0 1)) true) (_ bv9 39) (_ bv8 39)) ?x3969)))
 (let ((?x3763 (ite (and (distinct ((_ extract 12 12) C2) (_ bv0 1)) true) (_ bv12 39) (ite (and (distinct ((_ extract 11 11) C2) (_ bv0 1)) true) (_ bv11 39) (_ bv10 39)))))
 (let ((?x4087 (ite (and (distinct ((_ extract 14 13) C2) (_ bv0 2)) true) (ite (and (distinct ((_ extract 14 14) C2) (_ bv0 1)) true) (_ bv14 39) (_ bv13 39)) ?x3763)))
 (let ((?x4436 (ite (and (distinct ((_ extract 17 17) C2) (_ bv0 1)) true) (_ bv17 39) (ite (and (distinct ((_ extract 16 16) C2) (_ bv0 1)) true) (_ bv16 39) (_ bv15 39)))))
 (let ((?x4499 (ite (and (distinct ((_ extract 19 18) C2) (_ bv0 2)) true) (ite (and (distinct ((_ extract 19 19) C2) (_ bv0 1)) true) (_ bv19 39) (_ bv18 39)) ?x4436)))
 (let ((?x3691 (ite (and (distinct ((_ extract 19 10) C2) (_ bv0 10)) true) (ite (and (distinct ((_ extract 19 15) C2) (_ bv0 5)) true) ?x4499 ?x4087) (ite (and (distinct ((_ extract 9 5) C2) (_ bv0 5)) true) ?x1502 ?x2879))))
 (let ((?x4834 (ite (and (distinct ((_ extract 22 22) C2) (_ bv0 1)) true) (_ bv22 39) (ite (and (distinct ((_ extract 21 21) C2) (_ bv0 1)) true) (_ bv21 39) (_ bv20 39)))))
 (let ((?x1718 (ite (and (distinct ((_ extract 24 23) C2) (_ bv0 2)) true) (ite (and (distinct ((_ extract 24 24) C2) (_ bv0 1)) true) (_ bv24 39) (_ bv23 39)) ?x4834)))
 (let ((?x5540 (ite (and (distinct ((_ extract 27 27) C2) (_ bv0 1)) true) (_ bv27 39) (ite (and (distinct ((_ extract 26 26) C2) (_ bv0 1)) true) (_ bv26 39) (_ bv25 39)))))
 (let ((?x5531 (ite (and (distinct ((_ extract 29 28) C2) (_ bv0 2)) true) (ite (and (distinct ((_ extract 29 29) C2) (_ bv0 1)) true) (_ bv29 39) (_ bv28 39)) ?x5540)))
 (let ((?x6031 (ite (and (distinct ((_ extract 32 32) C2) (_ bv0 1)) true) (_ bv32 39) (ite (and (distinct ((_ extract 31 31) C2) (_ bv0 1)) true) (_ bv31 39) (_ bv30 39)))))
 (let ((?x6027 (ite (and (distinct ((_ extract 34 33) C2) (_ bv0 2)) true) (ite (and (distinct ((_ extract 34 34) C2) (_ bv0 1)) true) (_ bv34 39) (_ bv33 39)) ?x6031)))
 (let ((?x4178 (ite (and (distinct ((_ extract 38 37) C2) (_ bv0 2)) true) (ite (and (distinct ((_ extract 38 38) C2) (_ bv0 1)) true) (_ bv38 39) (_ bv37 39)) (ite (and (distinct ((_ extract 36 36) C2) (_ bv0 1)) true) (_ bv36 39) (_ bv35 39)))))
 (let ((?x2209 (ite (and (distinct ((_ extract 38 30) C2) (_ bv0 9)) true) (ite (and (distinct ((_ extract 38 35) C2) (_ bv0 4)) true) ?x4178 ?x6027) (ite (and (distinct ((_ extract 29 25) C2) (_ bv0 5)) true) ?x5531 ?x1718))))
 (let ((?x3719 (bvsub (bvsub (_ bv39 39) (ite (and (distinct ((_ extract 38 20) C2) (_ bv0 19)) true) ?x2209 ?x3691)) (_ bv1 39))))
 (let ((?x3725 (bvsub (_ bv39 39) ?x3719)))
 (let (($x6854 (bvult ?x3725 (_ bv39 39))))
 (and (= C1 (bvneg C2)) (and (and (distinct C2 (_ bv0 39)) true) (= (bvand C2 (bvsub C2 (_ bv1 39))) (_ bv0 39))) (not (= (bvand C2 (bvshl (_ bv549755813887 39) ?x3725)) (_ bv0 39))) (not (and $x6854 $x6854))))))))))))))))))))))))
(check-sat)
