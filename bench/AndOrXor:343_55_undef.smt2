(set-info :source |
 Generated by Alive 0.1
 More info in N. P. Lopes, D. Menendez, S. Nagarakatte, J. Regehr.
 Provably Correct Peephole Optimizations with Alive. In PLDI'15.
|)

(set-info :status unknown)
(declare-fun |ana_MaskedValueIsZero(%B, ((1 << (width(C2) - countLeadingZeros(((C2 - 1) ^ C2)))) - 1))| () (_ BitVec 1))
(declare-fun C2 () (_ BitVec 57))
(declare-fun C1 () (_ BitVec 57))
(declare-fun %B () (_ BitVec 57))
(assert
 (let (($x64669 (= |ana_MaskedValueIsZero(%B, ((1 << (width(C2) - countLeadingZeros(((C2 - 1) ^ C2)))) - 1))| (_ bv1 1))))
 (let ((?x24264 (bvsub C2 (_ bv1 57))))
 (let ((?x79426 (bvor ?x24264 C2)))
 (let (($x70541 (and (and (distinct ?x79426 (_ bv0 57)) true) (= (bvand (bvadd ?x79426 (_ bv1 57)) ?x79426) (_ bv0 57)) $x64669)))
 (let (($x71047 (or (= (bvand (bvadd C2 (_ bv1 57)) (bvsub (bvadd C2 (_ bv1 57)) (_ bv1 57))) (_ bv0 57)) $x70541)))
 (let ((?x54498 (bvand C1 C2)))
 (let (($x74084 (= ?x54498 C2)))
 (let ((?x73854 (ite (= ((_ extract 1 1) (bvxor ?x24264 C2)) (_ bv1 1)) (_ bv55 57) (ite (= ((_ extract 0 0) (bvxor ?x24264 C2)) (_ bv1 1)) (_ bv56 57) (_ bv57 57)))))
 (let ((?x78115 (ite (= ((_ extract 3 3) (bvxor ?x24264 C2)) (_ bv1 1)) (_ bv53 57) (ite (= ((_ extract 2 2) (bvxor ?x24264 C2)) (_ bv1 1)) (_ bv54 57) ?x73854))))
 (let ((?x71731 (ite (= ((_ extract 5 5) (bvxor ?x24264 C2)) (_ bv1 1)) (_ bv51 57) (ite (= ((_ extract 4 4) (bvxor ?x24264 C2)) (_ bv1 1)) (_ bv52 57) ?x78115))))
 (let ((?x76232 (ite (= ((_ extract 7 7) (bvxor ?x24264 C2)) (_ bv1 1)) (_ bv49 57) (ite (= ((_ extract 6 6) (bvxor ?x24264 C2)) (_ bv1 1)) (_ bv50 57) ?x71731))))
 (let ((?x75942 (ite (= ((_ extract 9 9) (bvxor ?x24264 C2)) (_ bv1 1)) (_ bv47 57) (ite (= ((_ extract 8 8) (bvxor ?x24264 C2)) (_ bv1 1)) (_ bv48 57) ?x76232))))
 (let ((?x76895 (ite (= ((_ extract 11 11) (bvxor ?x24264 C2)) (_ bv1 1)) (_ bv45 57) (ite (= ((_ extract 10 10) (bvxor ?x24264 C2)) (_ bv1 1)) (_ bv46 57) ?x75942))))
 (let ((?x74182 (ite (= ((_ extract 13 13) (bvxor ?x24264 C2)) (_ bv1 1)) (_ bv43 57) (ite (= ((_ extract 12 12) (bvxor ?x24264 C2)) (_ bv1 1)) (_ bv44 57) ?x76895))))
 (let ((?x79284 (ite (= ((_ extract 15 15) (bvxor ?x24264 C2)) (_ bv1 1)) (_ bv41 57) (ite (= ((_ extract 14 14) (bvxor ?x24264 C2)) (_ bv1 1)) (_ bv42 57) ?x74182))))
 (let ((?x75716 (ite (= ((_ extract 17 17) (bvxor ?x24264 C2)) (_ bv1 1)) (_ bv39 57) (ite (= ((_ extract 16 16) (bvxor ?x24264 C2)) (_ bv1 1)) (_ bv40 57) ?x79284))))
 (let ((?x75039 (ite (= ((_ extract 19 19) (bvxor ?x24264 C2)) (_ bv1 1)) (_ bv37 57) (ite (= ((_ extract 18 18) (bvxor ?x24264 C2)) (_ bv1 1)) (_ bv38 57) ?x75716))))
 (let ((?x78770 (ite (= ((_ extract 21 21) (bvxor ?x24264 C2)) (_ bv1 1)) (_ bv35 57) (ite (= ((_ extract 20 20) (bvxor ?x24264 C2)) (_ bv1 1)) (_ bv36 57) ?x75039))))
 (let ((?x76149 (ite (= ((_ extract 23 23) (bvxor ?x24264 C2)) (_ bv1 1)) (_ bv33 57) (ite (= ((_ extract 22 22) (bvxor ?x24264 C2)) (_ bv1 1)) (_ bv34 57) ?x78770))))
 (let ((?x77239 (ite (= ((_ extract 25 25) (bvxor ?x24264 C2)) (_ bv1 1)) (_ bv31 57) (ite (= ((_ extract 24 24) (bvxor ?x24264 C2)) (_ bv1 1)) (_ bv32 57) ?x76149))))
 (let ((?x79120 (ite (= ((_ extract 27 27) (bvxor ?x24264 C2)) (_ bv1 1)) (_ bv29 57) (ite (= ((_ extract 26 26) (bvxor ?x24264 C2)) (_ bv1 1)) (_ bv30 57) ?x77239))))
 (let ((?x74536 (ite (= ((_ extract 29 29) (bvxor ?x24264 C2)) (_ bv1 1)) (_ bv27 57) (ite (= ((_ extract 28 28) (bvxor ?x24264 C2)) (_ bv1 1)) (_ bv28 57) ?x79120))))
 (let ((?x78241 (ite (= ((_ extract 31 31) (bvxor ?x24264 C2)) (_ bv1 1)) (_ bv25 57) (ite (= ((_ extract 30 30) (bvxor ?x24264 C2)) (_ bv1 1)) (_ bv26 57) ?x74536))))
 (let ((?x57466 (ite (= ((_ extract 33 33) (bvxor ?x24264 C2)) (_ bv1 1)) (_ bv23 57) (ite (= ((_ extract 32 32) (bvxor ?x24264 C2)) (_ bv1 1)) (_ bv24 57) ?x78241))))
 (let ((?x77145 (ite (= ((_ extract 35 35) (bvxor ?x24264 C2)) (_ bv1 1)) (_ bv21 57) (ite (= ((_ extract 34 34) (bvxor ?x24264 C2)) (_ bv1 1)) (_ bv22 57) ?x57466))))
 (let ((?x76162 (ite (= ((_ extract 37 37) (bvxor ?x24264 C2)) (_ bv1 1)) (_ bv19 57) (ite (= ((_ extract 36 36) (bvxor ?x24264 C2)) (_ bv1 1)) (_ bv20 57) ?x77145))))
 (let ((?x73378 (ite (= ((_ extract 39 39) (bvxor ?x24264 C2)) (_ bv1 1)) (_ bv17 57) (ite (= ((_ extract 38 38) (bvxor ?x24264 C2)) (_ bv1 1)) (_ bv18 57) ?x76162))))
 (let ((?x77798 (ite (= ((_ extract 41 41) (bvxor ?x24264 C2)) (_ bv1 1)) (_ bv15 57) (ite (= ((_ extract 40 40) (bvxor ?x24264 C2)) (_ bv1 1)) (_ bv16 57) ?x73378))))
 (let ((?x68543 (ite (= ((_ extract 43 43) (bvxor ?x24264 C2)) (_ bv1 1)) (_ bv13 57) (ite (= ((_ extract 42 42) (bvxor ?x24264 C2)) (_ bv1 1)) (_ bv14 57) ?x77798))))
 (let ((?x74559 (ite (= ((_ extract 45 45) (bvxor ?x24264 C2)) (_ bv1 1)) (_ bv11 57) (ite (= ((_ extract 44 44) (bvxor ?x24264 C2)) (_ bv1 1)) (_ bv12 57) ?x68543))))
 (let ((?x75066 (ite (= ((_ extract 47 47) (bvxor ?x24264 C2)) (_ bv1 1)) (_ bv9 57) (ite (= ((_ extract 46 46) (bvxor ?x24264 C2)) (_ bv1 1)) (_ bv10 57) ?x74559))))
 (let ((?x77775 (ite (= ((_ extract 49 49) (bvxor ?x24264 C2)) (_ bv1 1)) (_ bv7 57) (ite (= ((_ extract 48 48) (bvxor ?x24264 C2)) (_ bv1 1)) (_ bv8 57) ?x75066))))
 (let ((?x77582 (ite (= ((_ extract 51 51) (bvxor ?x24264 C2)) (_ bv1 1)) (_ bv5 57) (ite (= ((_ extract 50 50) (bvxor ?x24264 C2)) (_ bv1 1)) (_ bv6 57) ?x77775))))
 (let ((?x73702 (ite (= ((_ extract 53 53) (bvxor ?x24264 C2)) (_ bv1 1)) (_ bv3 57) (ite (= ((_ extract 52 52) (bvxor ?x24264 C2)) (_ bv1 1)) (_ bv4 57) ?x77582))))
 (let ((?x76710 (ite (= ((_ extract 55 55) (bvxor ?x24264 C2)) (_ bv1 1)) (_ bv1 57) (ite (= ((_ extract 54 54) (bvxor ?x24264 C2)) (_ bv1 1)) (_ bv2 57) ?x73702))))
 (let ((?x76766 (bvshl (_ bv1 57) (bvsub (_ bv57 57) (ite (= ((_ extract 56 56) (bvxor ?x24264 C2)) (_ bv1 1)) (_ bv0 57) ?x76710)))))
 (let (($x76583 (=> $x64669 (= (bvand %B (bvsub ?x76766 (_ bv1 57))) (_ bv0 57)))))
 (and $x76583 $x74084 $x71047 false)))))))))))))))))))))))))))))))))))))))
(check-sat)
