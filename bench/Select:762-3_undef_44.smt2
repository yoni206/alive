(set-info :status unknown)
(declare-fun C2 () (_ BitVec 11))
(declare-fun C3 () (_ BitVec 11))
(declare-fun C () (_ BitVec 48))
(assert
 (let ((?x4845 (ite (and (distinct ((_ extract 2 2) (bvsub C3 C2)) (_ bv0 1)) true) (_ bv2 11) (ite (and (distinct ((_ extract 1 1) (bvsub C3 C2)) (_ bv0 1)) true) (_ bv1 11) (_ bv0 11)))))
 (let ((?x1342 (ite (and (distinct ((_ extract 5 5) (bvsub C3 C2)) (_ bv0 1)) true) (_ bv5 11) (ite (and (distinct ((_ extract 4 4) (bvsub C3 C2)) (_ bv0 1)) true) (_ bv4 11) (_ bv3 11)))))
 (let ((?x2039 (ite (and (distinct ((_ extract 8 8) (bvsub C3 C2)) (_ bv0 1)) true) (_ bv8 11) (ite (and (distinct ((_ extract 7 7) (bvsub C3 C2)) (_ bv0 1)) true) (_ bv7 11) (_ bv6 11)))))
 (let ((?x4339 (ite (and (distinct ((_ extract 10 9) (bvsub C3 C2)) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) (bvsub C3 C2)) (_ bv0 1)) true) (_ bv10 11) (_ bv9 11)) ?x2039)))
 (let ((?x6166 (ite (and (distinct ((_ extract 10 6) (bvsub C3 C2)) (_ bv0 5)) true) ?x4339 (ite (and (distinct ((_ extract 5 3) (bvsub C3 C2)) (_ bv0 3)) true) ?x1342 ?x4845))))
 (let ((?x6230 (ite (and (distinct ((_ extract 2 2) C) (_ bv0 1)) true) (_ bv2 11) (ite (and (distinct ((_ extract 1 1) C) (_ bv0 1)) true) (_ bv1 11) (_ bv0 11)))))
 (let ((?x6911 (ite (and (distinct ((_ extract 5 5) C) (_ bv0 1)) true) (_ bv5 11) (ite (and (distinct ((_ extract 4 4) C) (_ bv0 1)) true) (_ bv4 11) (_ bv3 11)))))
 (let ((?x5764 (ite (and (distinct ((_ extract 8 8) C) (_ bv0 1)) true) (_ bv8 11) (ite (and (distinct ((_ extract 7 7) C) (_ bv0 1)) true) (_ bv7 11) (_ bv6 11)))))
 (let ((?x2770 (ite (and (distinct ((_ extract 11 11) C) (_ bv0 1)) true) (_ bv11 11) (ite (and (distinct ((_ extract 10 10) C) (_ bv0 1)) true) (_ bv10 11) (_ bv9 11)))))
 (let ((?x5924 (ite (and (distinct ((_ extract 11 6) C) (_ bv0 6)) true) (ite (and (distinct ((_ extract 11 9) C) (_ bv0 3)) true) ?x2770 ?x5764) (ite (and (distinct ((_ extract 5 3) C) (_ bv0 3)) true) ?x6911 ?x6230))))
 (let ((?x2599 (ite (and (distinct ((_ extract 14 14) C) (_ bv0 1)) true) (_ bv14 11) (ite (and (distinct ((_ extract 13 13) C) (_ bv0 1)) true) (_ bv13 11) (_ bv12 11)))))
 (let ((?x4888 (ite (and (distinct ((_ extract 17 17) C) (_ bv0 1)) true) (_ bv17 11) (ite (and (distinct ((_ extract 16 16) C) (_ bv0 1)) true) (_ bv16 11) (_ bv15 11)))))
 (let ((?x8328 (ite (and (distinct ((_ extract 20 20) C) (_ bv0 1)) true) (_ bv20 11) (ite (and (distinct ((_ extract 19 19) C) (_ bv0 1)) true) (_ bv19 11) (_ bv18 11)))))
 (let ((?x1682 (ite (and (distinct ((_ extract 23 23) C) (_ bv0 1)) true) (_ bv23 11) (ite (and (distinct ((_ extract 22 22) C) (_ bv0 1)) true) (_ bv22 11) (_ bv21 11)))))
 (let ((?x7734 (ite (and (distinct ((_ extract 23 18) C) (_ bv0 6)) true) (ite (and (distinct ((_ extract 23 21) C) (_ bv0 3)) true) ?x1682 ?x8328) (ite (and (distinct ((_ extract 17 15) C) (_ bv0 3)) true) ?x4888 ?x2599))))
 (let ((?x6519 (ite (and (distinct ((_ extract 26 26) C) (_ bv0 1)) true) (_ bv26 11) (ite (and (distinct ((_ extract 25 25) C) (_ bv0 1)) true) (_ bv25 11) (_ bv24 11)))))
 (let ((?x5741 (ite (and (distinct ((_ extract 29 29) C) (_ bv0 1)) true) (_ bv29 11) (ite (and (distinct ((_ extract 28 28) C) (_ bv0 1)) true) (_ bv28 11) (_ bv27 11)))))
 (let ((?x4828 (ite (and (distinct ((_ extract 32 32) C) (_ bv0 1)) true) (_ bv32 11) (ite (and (distinct ((_ extract 31 31) C) (_ bv0 1)) true) (_ bv31 11) (_ bv30 11)))))
 (let ((?x6905 (ite (and (distinct ((_ extract 35 35) C) (_ bv0 1)) true) (_ bv35 11) (ite (and (distinct ((_ extract 34 34) C) (_ bv0 1)) true) (_ bv34 11) (_ bv33 11)))))
 (let ((?x6377 (ite (and (distinct ((_ extract 35 30) C) (_ bv0 6)) true) (ite (and (distinct ((_ extract 35 33) C) (_ bv0 3)) true) ?x6905 ?x4828) (ite (and (distinct ((_ extract 29 27) C) (_ bv0 3)) true) ?x5741 ?x6519))))
 (let ((?x2517 (ite (and (distinct ((_ extract 38 38) C) (_ bv0 1)) true) (_ bv38 11) (ite (and (distinct ((_ extract 37 37) C) (_ bv0 1)) true) (_ bv37 11) (_ bv36 11)))))
 (let ((?x1670 (ite (and (distinct ((_ extract 41 41) C) (_ bv0 1)) true) (_ bv41 11) (ite (and (distinct ((_ extract 40 40) C) (_ bv0 1)) true) (_ bv40 11) (_ bv39 11)))))
 (let ((?x4044 (ite (and (distinct ((_ extract 44 44) C) (_ bv0 1)) true) (_ bv44 11) (ite (and (distinct ((_ extract 43 43) C) (_ bv0 1)) true) (_ bv43 11) (_ bv42 11)))))
 (let ((?x3095 (ite (and (distinct ((_ extract 47 47) C) (_ bv0 1)) true) (_ bv47 11) (ite (and (distinct ((_ extract 46 46) C) (_ bv0 1)) true) (_ bv46 11) (_ bv45 11)))))
 (let ((?x2441 (ite (and (distinct ((_ extract 47 42) C) (_ bv0 6)) true) (ite (and (distinct ((_ extract 47 45) C) (_ bv0 3)) true) ?x3095 ?x4044) (ite (and (distinct ((_ extract 41 39) C) (_ bv0 3)) true) ?x1670 ?x2517))))
 (let ((?x6164 (ite (and (distinct ((_ extract 47 24) C) (_ bv0 24)) true) (ite (and (distinct ((_ extract 47 36) C) (_ bv0 12)) true) ?x2441 ?x6377) (ite (and (distinct ((_ extract 23 12) C) (_ bv0 12)) true) ?x7734 ?x5924))))
 (let ((?x1944 (bvsub ?x6164 ?x6166)))
 (let ((?x4098 (ite (bvsgt (_ bv0 11) ?x1944) (_ bv0 11) ?x1944)))
 (let ((?x3790 (bvsub ?x6166 ?x6164)))
 (let ((?x5807 (ite (bvsgt (_ bv0 11) ?x3790) (_ bv0 11) ?x3790)))
 (let ((?x6829 (ite (and (distinct ((_ extract 2 2) C) (_ bv0 1)) true) (_ bv2 32) (ite (and (distinct ((_ extract 1 1) C) (_ bv0 1)) true) (_ bv1 32) (_ bv0 32)))))
 (let ((?x7786 (ite (and (distinct ((_ extract 5 5) C) (_ bv0 1)) true) (_ bv5 32) (ite (and (distinct ((_ extract 4 4) C) (_ bv0 1)) true) (_ bv4 32) (_ bv3 32)))))
 (let ((?x7096 (ite (and (distinct ((_ extract 8 8) C) (_ bv0 1)) true) (_ bv8 32) (ite (and (distinct ((_ extract 7 7) C) (_ bv0 1)) true) (_ bv7 32) (_ bv6 32)))))
 (let ((?x6660 (ite (and (distinct ((_ extract 11 11) C) (_ bv0 1)) true) (_ bv11 32) (ite (and (distinct ((_ extract 10 10) C) (_ bv0 1)) true) (_ bv10 32) (_ bv9 32)))))
 (let ((?x3876 (ite (and (distinct ((_ extract 11 6) C) (_ bv0 6)) true) (ite (and (distinct ((_ extract 11 9) C) (_ bv0 3)) true) ?x6660 ?x7096) (ite (and (distinct ((_ extract 5 3) C) (_ bv0 3)) true) ?x7786 ?x6829))))
 (let ((?x5672 (ite (and (distinct ((_ extract 14 14) C) (_ bv0 1)) true) (_ bv14 32) (ite (and (distinct ((_ extract 13 13) C) (_ bv0 1)) true) (_ bv13 32) (_ bv12 32)))))
 (let ((?x5087 (ite (and (distinct ((_ extract 17 17) C) (_ bv0 1)) true) (_ bv17 32) (ite (and (distinct ((_ extract 16 16) C) (_ bv0 1)) true) (_ bv16 32) (_ bv15 32)))))
 (let ((?x3953 (ite (and (distinct ((_ extract 20 20) C) (_ bv0 1)) true) (_ bv20 32) (ite (and (distinct ((_ extract 19 19) C) (_ bv0 1)) true) (_ bv19 32) (_ bv18 32)))))
 (let ((?x3246 (ite (and (distinct ((_ extract 23 23) C) (_ bv0 1)) true) (_ bv23 32) (ite (and (distinct ((_ extract 22 22) C) (_ bv0 1)) true) (_ bv22 32) (_ bv21 32)))))
 (let ((?x5926 (ite (and (distinct ((_ extract 23 18) C) (_ bv0 6)) true) (ite (and (distinct ((_ extract 23 21) C) (_ bv0 3)) true) ?x3246 ?x3953) (ite (and (distinct ((_ extract 17 15) C) (_ bv0 3)) true) ?x5087 ?x5672))))
 (let ((?x1951 (ite (and (distinct ((_ extract 26 26) C) (_ bv0 1)) true) (_ bv26 32) (ite (and (distinct ((_ extract 25 25) C) (_ bv0 1)) true) (_ bv25 32) (_ bv24 32)))))
 (let ((?x2537 (ite (and (distinct ((_ extract 29 29) C) (_ bv0 1)) true) (_ bv29 32) (ite (and (distinct ((_ extract 28 28) C) (_ bv0 1)) true) (_ bv28 32) (_ bv27 32)))))
 (let ((?x1560 (ite (and (distinct ((_ extract 32 32) C) (_ bv0 1)) true) (_ bv32 32) (ite (and (distinct ((_ extract 31 31) C) (_ bv0 1)) true) (_ bv31 32) (_ bv30 32)))))
 (let ((?x5638 (ite (and (distinct ((_ extract 35 35) C) (_ bv0 1)) true) (_ bv35 32) (ite (and (distinct ((_ extract 34 34) C) (_ bv0 1)) true) (_ bv34 32) (_ bv33 32)))))
 (let ((?x2594 (ite (and (distinct ((_ extract 35 30) C) (_ bv0 6)) true) (ite (and (distinct ((_ extract 35 33) C) (_ bv0 3)) true) ?x5638 ?x1560) (ite (and (distinct ((_ extract 29 27) C) (_ bv0 3)) true) ?x2537 ?x1951))))
 (let ((?x5491 (ite (and (distinct ((_ extract 38 38) C) (_ bv0 1)) true) (_ bv38 32) (ite (and (distinct ((_ extract 37 37) C) (_ bv0 1)) true) (_ bv37 32) (_ bv36 32)))))
 (let ((?x5465 (ite (and (distinct ((_ extract 41 41) C) (_ bv0 1)) true) (_ bv41 32) (ite (and (distinct ((_ extract 40 40) C) (_ bv0 1)) true) (_ bv40 32) (_ bv39 32)))))
 (let ((?x4173 (ite (and (distinct ((_ extract 44 44) C) (_ bv0 1)) true) (_ bv44 32) (ite (and (distinct ((_ extract 43 43) C) (_ bv0 1)) true) (_ bv43 32) (_ bv42 32)))))
 (let ((?x7601 (ite (and (distinct ((_ extract 47 47) C) (_ bv0 1)) true) (_ bv47 32) (ite (and (distinct ((_ extract 46 46) C) (_ bv0 1)) true) (_ bv46 32) (_ bv45 32)))))
 (let ((?x6638 (ite (and (distinct ((_ extract 47 42) C) (_ bv0 6)) true) (ite (and (distinct ((_ extract 47 45) C) (_ bv0 3)) true) ?x7601 ?x4173) (ite (and (distinct ((_ extract 41 39) C) (_ bv0 3)) true) ?x5465 ?x5491))))
 (let ((?x1966 (ite (and (distinct ((_ extract 47 24) C) (_ bv0 24)) true) (ite (and (distinct ((_ extract 47 36) C) (_ bv0 12)) true) ?x6638 ?x2594) (ite (and (distinct ((_ extract 23 12) C) (_ bv0 12)) true) ?x5926 ?x3876))))
 (let (($x2225 (and (and (distinct (bvsub C3 C2) (_ bv0 11)) true) (= (bvand (bvsub C3 C2) (bvsub (bvsub C3 C2) (_ bv1 11))) (_ bv0 11)))))
 (and (and (and (distinct C (_ bv0 48)) true) (= (bvand C (bvsub C (_ bv1 48))) (_ bv0 48))) $x2225 (bvslt ?x1966 (_ bv11 32)) (not (and (bvult ?x5807 (_ bv11 11)) (bvult ?x4098 (_ bv11 11))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
