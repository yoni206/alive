(set-info :status unknown)
(declare-fun C2 () (_ BitVec 61))
(declare-fun %Z () (_ BitVec 61))
(declare-fun %RHS () (_ BitVec 61))
(declare-fun C1 () (_ BitVec 61))
(assert
 (let (($x4233 (and (distinct (bvadd (bvxor (bvand %Z C2) C1) %RHS) (bvsub %RHS (bvor %Z (bvnot C2)))) true)))
 (let ((?x3232 (ite (= ((_ extract 59 59) C1) (_ bv1 1)) (_ bv59 32) (ite (= ((_ extract 60 60) C1) (_ bv1 1)) (_ bv60 32) (_ bv61 32)))))
 (let ((?x2722 (ite (= ((_ extract 57 57) C1) (_ bv1 1)) (_ bv57 32) (ite (= ((_ extract 58 58) C1) (_ bv1 1)) (_ bv58 32) ?x3232))))
 (let ((?x2725 (ite (= ((_ extract 55 55) C1) (_ bv1 1)) (_ bv55 32) (ite (= ((_ extract 56 56) C1) (_ bv1 1)) (_ bv56 32) ?x2722))))
 (let ((?x2737 (ite (= ((_ extract 53 53) C1) (_ bv1 1)) (_ bv53 32) (ite (= ((_ extract 54 54) C1) (_ bv1 1)) (_ bv54 32) ?x2725))))
 (let ((?x3393 (ite (= ((_ extract 51 51) C1) (_ bv1 1)) (_ bv51 32) (ite (= ((_ extract 52 52) C1) (_ bv1 1)) (_ bv52 32) ?x2737))))
 (let ((?x4312 (ite (= ((_ extract 49 49) C1) (_ bv1 1)) (_ bv49 32) (ite (= ((_ extract 50 50) C1) (_ bv1 1)) (_ bv50 32) ?x3393))))
 (let ((?x4043 (ite (= ((_ extract 47 47) C1) (_ bv1 1)) (_ bv47 32) (ite (= ((_ extract 48 48) C1) (_ bv1 1)) (_ bv48 32) ?x4312))))
 (let ((?x3380 (ite (= ((_ extract 45 45) C1) (_ bv1 1)) (_ bv45 32) (ite (= ((_ extract 46 46) C1) (_ bv1 1)) (_ bv46 32) ?x4043))))
 (let ((?x2511 (ite (= ((_ extract 43 43) C1) (_ bv1 1)) (_ bv43 32) (ite (= ((_ extract 44 44) C1) (_ bv1 1)) (_ bv44 32) ?x3380))))
 (let ((?x1372 (ite (= ((_ extract 41 41) C1) (_ bv1 1)) (_ bv41 32) (ite (= ((_ extract 42 42) C1) (_ bv1 1)) (_ bv42 32) ?x2511))))
 (let ((?x2000 (ite (= ((_ extract 39 39) C1) (_ bv1 1)) (_ bv39 32) (ite (= ((_ extract 40 40) C1) (_ bv1 1)) (_ bv40 32) ?x1372))))
 (let ((?x1814 (ite (= ((_ extract 37 37) C1) (_ bv1 1)) (_ bv37 32) (ite (= ((_ extract 38 38) C1) (_ bv1 1)) (_ bv38 32) ?x2000))))
 (let ((?x590 (ite (= ((_ extract 35 35) C1) (_ bv1 1)) (_ bv35 32) (ite (= ((_ extract 36 36) C1) (_ bv1 1)) (_ bv36 32) ?x1814))))
 (let ((?x4308 (ite (= ((_ extract 33 33) C1) (_ bv1 1)) (_ bv33 32) (ite (= ((_ extract 34 34) C1) (_ bv1 1)) (_ bv34 32) ?x590))))
 (let ((?x3757 (ite (= ((_ extract 31 31) C1) (_ bv1 1)) (_ bv31 32) (ite (= ((_ extract 32 32) C1) (_ bv1 1)) (_ bv32 32) ?x4308))))
 (let ((?x2170 (ite (= ((_ extract 29 29) C1) (_ bv1 1)) (_ bv29 32) (ite (= ((_ extract 30 30) C1) (_ bv1 1)) (_ bv30 32) ?x3757))))
 (let ((?x1306 (ite (= ((_ extract 27 27) C1) (_ bv1 1)) (_ bv27 32) (ite (= ((_ extract 28 28) C1) (_ bv1 1)) (_ bv28 32) ?x2170))))
 (let ((?x3702 (ite (= ((_ extract 25 25) C1) (_ bv1 1)) (_ bv25 32) (ite (= ((_ extract 26 26) C1) (_ bv1 1)) (_ bv26 32) ?x1306))))
 (let ((?x4632 (ite (= ((_ extract 23 23) C1) (_ bv1 1)) (_ bv23 32) (ite (= ((_ extract 24 24) C1) (_ bv1 1)) (_ bv24 32) ?x3702))))
 (let ((?x4882 (ite (= ((_ extract 21 21) C1) (_ bv1 1)) (_ bv21 32) (ite (= ((_ extract 22 22) C1) (_ bv1 1)) (_ bv22 32) ?x4632))))
 (let ((?x1845 (ite (= ((_ extract 19 19) C1) (_ bv1 1)) (_ bv19 32) (ite (= ((_ extract 20 20) C1) (_ bv1 1)) (_ bv20 32) ?x4882))))
 (let ((?x1849 (ite (= ((_ extract 17 17) C1) (_ bv1 1)) (_ bv17 32) (ite (= ((_ extract 18 18) C1) (_ bv1 1)) (_ bv18 32) ?x1845))))
 (let ((?x1839 (ite (= ((_ extract 15 15) C1) (_ bv1 1)) (_ bv15 32) (ite (= ((_ extract 16 16) C1) (_ bv1 1)) (_ bv16 32) ?x1849))))
 (let ((?x2982 (ite (= ((_ extract 13 13) C1) (_ bv1 1)) (_ bv13 32) (ite (= ((_ extract 14 14) C1) (_ bv1 1)) (_ bv14 32) ?x1839))))
 (let ((?x2911 (ite (= ((_ extract 11 11) C1) (_ bv1 1)) (_ bv11 32) (ite (= ((_ extract 12 12) C1) (_ bv1 1)) (_ bv12 32) ?x2982))))
 (let ((?x3504 (ite (= ((_ extract 9 9) C1) (_ bv1 1)) (_ bv9 32) (ite (= ((_ extract 10 10) C1) (_ bv1 1)) (_ bv10 32) ?x2911))))
 (let ((?x2120 (ite (= ((_ extract 7 7) C1) (_ bv1 1)) (_ bv7 32) (ite (= ((_ extract 8 8) C1) (_ bv1 1)) (_ bv8 32) ?x3504))))
 (let ((?x3962 (ite (= ((_ extract 5 5) C1) (_ bv1 1)) (_ bv5 32) (ite (= ((_ extract 6 6) C1) (_ bv1 1)) (_ bv6 32) ?x2120))))
 (let ((?x1279 (ite (= ((_ extract 3 3) C1) (_ bv1 1)) (_ bv3 32) (ite (= ((_ extract 4 4) C1) (_ bv1 1)) (_ bv4 32) ?x3962))))
 (let ((?x2754 (ite (= ((_ extract 1 1) C1) (_ bv1 1)) (_ bv1 32) (ite (= ((_ extract 2 2) C1) (_ bv1 1)) (_ bv2 32) ?x1279))))
 (and (= (ite (= ((_ extract 0 0) C1) (_ bv1 1)) (_ bv0 32) ?x2754) (_ bv0 32)) (= C1 (bvadd C2 (_ bv1 61))) $x4233)))))))))))))))))))))))))))))))))
(check-sat)
