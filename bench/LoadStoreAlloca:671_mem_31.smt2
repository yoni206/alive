(set-info :status unknown)
(declare-fun mem0 () (_ BitVec 8))
(declare-fun %y () (_ BitVec 33))
(declare-fun %p2 () (_ BitVec 64))
(declare-fun idx () (_ BitVec 64))
(declare-fun %x () (_ BitVec 33))
(declare-fun %p1 () (_ BitVec 64))
(declare-fun |ana_equivalentAddressValues(%p1, %p2)| () (_ BitVec 1))
(assert
 (let ((?x15086 (ite (and (and (distinct %p2 (_ bv0 64)) true) (or true true) (= idx %p2)) (concat ((_ extract 7 1) mem0) ((_ extract 0 0) %y)) mem0)))
 (let (($x6060 (or true true)))
 (let (($x7397 (and (distinct %p2 (_ bv0 64)) true)))
 (let ((?x5515 (ite (and $x7397 $x6060 (= idx (bvadd (bvadd %p2 (_ bv1 64)) (_ bv0 64)))) ((_ extract 8 1) %y) ?x15086)))
 (let ((?x21869 (ite (and $x7397 $x6060 (= idx (bvadd (bvadd %p2 (_ bv1 64)) (_ bv1 64)))) ((_ extract 16 9) %y) ?x5515)))
 (let ((?x10015 (ite (and $x7397 $x6060 (= idx (bvadd (bvadd %p2 (_ bv1 64)) (_ bv2 64)))) ((_ extract 24 17) %y) ?x21869)))
 (let ((?x7501 (ite (and $x7397 $x6060 (= idx (bvadd (bvadd %p2 (_ bv1 64)) (_ bv3 64)))) ((_ extract 32 25) %y) ?x10015)))
 (let ((?x18598 (ite (and (and (distinct %p1 (_ bv0 64)) true) $x6060 (= idx %p1)) (concat ((_ extract 7 1) mem0) ((_ extract 0 0) %x)) mem0)))
 (let (($x17212 (and (distinct %p1 (_ bv0 64)) true)))
 (let ((?x20865 (ite (and $x17212 $x6060 (= idx (bvadd (bvadd %p1 (_ bv1 64)) (_ bv0 64)))) ((_ extract 8 1) %x) ?x18598)))
 (let ((?x14365 (ite (and $x17212 $x6060 (= idx (bvadd (bvadd %p1 (_ bv1 64)) (_ bv1 64)))) ((_ extract 16 9) %x) ?x20865)))
 (let ((?x4515 (ite (and $x17212 $x6060 (= idx (bvadd (bvadd %p1 (_ bv1 64)) (_ bv2 64)))) ((_ extract 24 17) %x) ?x14365)))
 (let ((?x2094 (ite (and $x17212 $x6060 (= idx (bvadd (bvadd %p1 (_ bv1 64)) (_ bv3 64)))) ((_ extract 32 25) %x) ?x4515)))
 (let ((?x23767 (ite (and $x17212 $x6060 (= %p2 %p1)) (concat ((_ extract 7 1) mem0) ((_ extract 0 0) %x)) mem0)))
 (let ((?x8887 (ite (and $x17212 $x6060 (= %p2 (bvadd (bvadd %p1 (_ bv1 64)) (_ bv0 64)))) ((_ extract 8 1) %x) ?x23767)))
 (let ((?x17912 (ite (and $x17212 $x6060 (= %p2 (bvadd (bvadd %p1 (_ bv1 64)) (_ bv1 64)))) ((_ extract 16 9) %x) ?x8887)))
 (let ((?x11371 (ite (and $x17212 $x6060 (= %p2 (bvadd (bvadd %p1 (_ bv1 64)) (_ bv2 64)))) ((_ extract 24 17) %x) ?x17912)))
 (let ((?x11965 (ite (and $x17212 $x6060 (= %p2 (bvadd (bvadd %p1 (_ bv1 64)) (_ bv3 64)))) ((_ extract 32 25) %x) ?x11371)))
 (let ((?x1219 (ite (and $x17212 $x6060 $x7397 $x6060 (= idx %p2)) (concat ((_ extract 7 1) ?x11965) ((_ extract 0 0) %y)) ?x2094)))
 (let ((?x6453 (ite (and $x17212 $x6060 $x7397 $x6060 (= idx (bvadd (bvadd %p2 (_ bv1 64)) (_ bv0 64)))) ((_ extract 8 1) %y) ?x1219)))
 (let ((?x6196 (ite (and $x17212 $x6060 $x7397 $x6060 (= idx (bvadd (bvadd %p2 (_ bv1 64)) (_ bv1 64)))) ((_ extract 16 9) %y) ?x6453)))
 (let ((?x6572 (ite (and $x17212 $x6060 $x7397 $x6060 (= idx (bvadd (bvadd %p2 (_ bv1 64)) (_ bv2 64)))) ((_ extract 24 17) %y) ?x6196)))
 (let ((?x9931 (ite (and $x17212 $x6060 $x7397 $x6060 (= idx (bvadd (bvadd %p2 (_ bv1 64)) (_ bv3 64)))) ((_ extract 32 25) %y) ?x6572)))
 (let (($x17704 (= |ana_equivalentAddressValues(%p1, %p2)| (_ bv1 1))))
 (and (=> $x17704 (= %p1 %p2)) $x17704 (and (distinct ?x9931 ?x7501) true)))))))))))))))))))))))))))
(check-sat)
