(set-info :status unknown)
(declare-fun %Y () (_ BitVec 11))
(declare-fun C1 () (_ BitVec 22))
(declare-fun C2 () (_ BitVec 11))
(declare-fun %X () (_ BitVec 22))
(assert
 (let ((?x2321 (ite (and (distinct ((_ extract 2 2) C1) (_ bv0 1)) true) (_ bv2 11) (ite (and (distinct ((_ extract 1 1) C1) (_ bv0 1)) true) (_ bv1 11) (_ bv0 11)))))
 (let ((?x2062 (ite (and (distinct ((_ extract 5 5) C1) (_ bv0 1)) true) (_ bv5 11) (ite (and (distinct ((_ extract 4 4) C1) (_ bv0 1)) true) (_ bv4 11) (_ bv3 11)))))
 (let ((?x1442 (ite (and (distinct ((_ extract 8 8) C1) (_ bv0 1)) true) (_ bv8 11) (ite (and (distinct ((_ extract 7 7) C1) (_ bv0 1)) true) (_ bv7 11) (_ bv6 11)))))
 (let ((?x1111 (ite (and (distinct ((_ extract 10 9) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) C1) (_ bv0 1)) true) (_ bv10 11) (_ bv9 11)) ?x1442)))
 (let ((?x1818 (ite (and (distinct ((_ extract 10 6) C1) (_ bv0 5)) true) ?x1111 (ite (and (distinct ((_ extract 5 3) C1) (_ bv0 3)) true) ?x2062 ?x2321))))
 (let ((?x3750 (ite (and (distinct ((_ extract 13 13) C1) (_ bv0 1)) true) (_ bv13 11) (ite (and (distinct ((_ extract 12 12) C1) (_ bv0 1)) true) (_ bv12 11) (_ bv11 11)))))
 (let ((?x3764 (ite (and (distinct ((_ extract 16 16) C1) (_ bv0 1)) true) (_ bv16 11) (ite (and (distinct ((_ extract 15 15) C1) (_ bv0 1)) true) (_ bv15 11) (_ bv14 11)))))
 (let ((?x3346 (ite (and (distinct ((_ extract 19 19) C1) (_ bv0 1)) true) (_ bv19 11) (ite (and (distinct ((_ extract 18 18) C1) (_ bv0 1)) true) (_ bv18 11) (_ bv17 11)))))
 (let ((?x3808 (ite (and (distinct ((_ extract 21 20) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 21 21) C1) (_ bv0 1)) true) (_ bv21 11) (_ bv20 11)) ?x3346)))
 (let ((?x5826 (ite (and (distinct ((_ extract 21 17) C1) (_ bv0 5)) true) ?x3808 (ite (and (distinct ((_ extract 16 14) C1) (_ bv0 3)) true) ?x3764 ?x3750))))
 (let ((?x3413 (ite (and (distinct ((_ extract 2 2) C2) (_ bv0 1)) true) (_ bv2 11) (ite (and (distinct ((_ extract 1 1) C2) (_ bv0 1)) true) (_ bv1 11) (_ bv0 11)))))
 (let ((?x3771 (ite (and (distinct ((_ extract 5 5) C2) (_ bv0 1)) true) (_ bv5 11) (ite (and (distinct ((_ extract 4 4) C2) (_ bv0 1)) true) (_ bv4 11) (_ bv3 11)))))
 (let ((?x5135 (ite (and (distinct ((_ extract 8 8) C2) (_ bv0 1)) true) (_ bv8 11) (ite (and (distinct ((_ extract 7 7) C2) (_ bv0 1)) true) (_ bv7 11) (_ bv6 11)))))
 (let ((?x4517 (ite (and (distinct ((_ extract 10 9) C2) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) C2) (_ bv0 1)) true) (_ bv10 11) (_ bv9 11)) ?x5135)))
 (let ((?x5413 (ite (and (distinct ((_ extract 10 6) C2) (_ bv0 5)) true) ?x4517 (ite (and (distinct ((_ extract 5 3) C2) (_ bv0 3)) true) ?x3771 ?x3413))))
 (let ((?x4535 (bvsub ?x5413 (ite (and (distinct ((_ extract 21 11) C1) (_ bv0 11)) true) ?x5826 ?x1818))))
 (let ((?x3203 (bvor %Y C2)))
 (let ((?x2186 (ite (= (ite (and (distinct (bvand %X C1) (_ bv0 22)) true) (_ bv1 1) (_ bv0 1)) (_ bv1 1)) ?x3203 %Y)))
 (let ((?x2277 (ite (and (distinct ((_ extract 2 2) C1) (_ bv0 1)) true) (_ bv2 32) (ite (and (distinct ((_ extract 1 1) C1) (_ bv0 1)) true) (_ bv1 32) (_ bv0 32)))))
 (let ((?x3095 (ite (and (distinct ((_ extract 5 5) C1) (_ bv0 1)) true) (_ bv5 32) (ite (and (distinct ((_ extract 4 4) C1) (_ bv0 1)) true) (_ bv4 32) (_ bv3 32)))))
 (let ((?x1562 (ite (and (distinct ((_ extract 8 8) C1) (_ bv0 1)) true) (_ bv8 32) (ite (and (distinct ((_ extract 7 7) C1) (_ bv0 1)) true) (_ bv7 32) (_ bv6 32)))))
 (let ((?x1499 (ite (and (distinct ((_ extract 10 9) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) C1) (_ bv0 1)) true) (_ bv10 32) (_ bv9 32)) ?x1562)))
 (let ((?x1967 (ite (and (distinct ((_ extract 10 6) C1) (_ bv0 5)) true) ?x1499 (ite (and (distinct ((_ extract 5 3) C1) (_ bv0 3)) true) ?x3095 ?x2277))))
 (let ((?x3305 (ite (and (distinct ((_ extract 13 13) C1) (_ bv0 1)) true) (_ bv13 32) (ite (and (distinct ((_ extract 12 12) C1) (_ bv0 1)) true) (_ bv12 32) (_ bv11 32)))))
 (let ((?x5600 (ite (and (distinct ((_ extract 16 16) C1) (_ bv0 1)) true) (_ bv16 32) (ite (and (distinct ((_ extract 15 15) C1) (_ bv0 1)) true) (_ bv15 32) (_ bv14 32)))))
 (let ((?x1955 (ite (and (distinct ((_ extract 19 19) C1) (_ bv0 1)) true) (_ bv19 32) (ite (and (distinct ((_ extract 18 18) C1) (_ bv0 1)) true) (_ bv18 32) (_ bv17 32)))))
 (let ((?x1775 (ite (and (distinct ((_ extract 21 20) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 21 21) C1) (_ bv0 1)) true) (_ bv21 32) (_ bv20 32)) ?x1955)))
 (let ((?x1205 (ite (and (distinct ((_ extract 21 17) C1) (_ bv0 5)) true) ?x1775 (ite (and (distinct ((_ extract 16 14) C1) (_ bv0 3)) true) ?x5600 ?x3305))))
 (let ((?x1398 (ite (and (distinct ((_ extract 2 2) C2) (_ bv0 1)) true) (_ bv2 32) (ite (and (distinct ((_ extract 1 1) C2) (_ bv0 1)) true) (_ bv1 32) (_ bv0 32)))))
 (let ((?x4994 (ite (and (distinct ((_ extract 5 5) C2) (_ bv0 1)) true) (_ bv5 32) (ite (and (distinct ((_ extract 4 4) C2) (_ bv0 1)) true) (_ bv4 32) (_ bv3 32)))))
 (let ((?x1494 (ite (and (distinct ((_ extract 8 8) C2) (_ bv0 1)) true) (_ bv8 32) (ite (and (distinct ((_ extract 7 7) C2) (_ bv0 1)) true) (_ bv7 32) (_ bv6 32)))))
 (let ((?x2798 (ite (and (distinct ((_ extract 10 9) C2) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) C2) (_ bv0 1)) true) (_ bv10 32) (_ bv9 32)) ?x1494)))
 (let ((?x2906 (ite (and (distinct ((_ extract 10 6) C2) (_ bv0 5)) true) ?x2798 (ite (and (distinct ((_ extract 5 3) C2) (_ bv0 3)) true) ?x4994 ?x1398))))
 (and (and (and (distinct C1 (_ bv0 22)) true) (= (bvand C1 (bvsub C1 (_ bv1 22))) (_ bv0 22))) (and (and (distinct C2 (_ bv0 11)) true) (= (bvand C2 (bvsub C2 (_ bv1 11))) (_ bv0 11))) (bvsge ?x2906 (ite (and (distinct ((_ extract 21 11) C1) (_ bv0 11)) true) ?x1205 ?x1967)) (and (distinct ?x2186 (bvor (bvshl ((_ extract 10 0) (bvand %X C1)) ?x4535) %Y)) true))))))))))))))))))))))))))))))))))))
(check-sat)
