(set-info :status unknown)
(declare-fun %Y () (_ BitVec 11))
(declare-fun C1 () (_ BitVec 52))
(declare-fun C2 () (_ BitVec 11))
(declare-fun %X () (_ BitVec 52))
(assert
 (let ((?x2057 (ite (and (distinct ((_ extract 3 2) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 3 3) C1) (_ bv0 1)) true) (_ bv3 11) (_ bv2 11)) (ite (and (distinct ((_ extract 1 1) C1) (_ bv0 1)) true) (_ bv1 11) (_ bv0 11)))))
 (let ((?x4030 (ite (and (distinct ((_ extract 6 6) C1) (_ bv0 1)) true) (_ bv6 11) (ite (and (distinct ((_ extract 5 5) C1) (_ bv0 1)) true) (_ bv5 11) (_ bv4 11)))))
 (let ((?x1711 (ite (and (distinct ((_ extract 9 9) C1) (_ bv0 1)) true) (_ bv9 11) (ite (and (distinct ((_ extract 8 8) C1) (_ bv0 1)) true) (_ bv8 11) (_ bv7 11)))))
 (let ((?x3702 (ite (and (distinct ((_ extract 12 12) C1) (_ bv0 1)) true) (_ bv12 11) (ite (and (distinct ((_ extract 11 11) C1) (_ bv0 1)) true) (_ bv11 11) (_ bv10 11)))))
 (let ((?x1211 (ite (and (distinct ((_ extract 12 7) C1) (_ bv0 6)) true) (ite (and (distinct ((_ extract 12 10) C1) (_ bv0 3)) true) ?x3702 ?x1711) (ite (and (distinct ((_ extract 6 4) C1) (_ bv0 3)) true) ?x4030 ?x2057))))
 (let ((?x5511 (ite (and (distinct ((_ extract 16 15) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 16 16) C1) (_ bv0 1)) true) (_ bv16 11) (_ bv15 11)) (ite (and (distinct ((_ extract 14 14) C1) (_ bv0 1)) true) (_ bv14 11) (_ bv13 11)))))
 (let ((?x4006 (ite (and (distinct ((_ extract 19 19) C1) (_ bv0 1)) true) (_ bv19 11) (ite (and (distinct ((_ extract 18 18) C1) (_ bv0 1)) true) (_ bv18 11) (_ bv17 11)))))
 (let ((?x4677 (ite (and (distinct ((_ extract 22 22) C1) (_ bv0 1)) true) (_ bv22 11) (ite (and (distinct ((_ extract 21 21) C1) (_ bv0 1)) true) (_ bv21 11) (_ bv20 11)))))
 (let ((?x2961 (ite (and (distinct ((_ extract 25 25) C1) (_ bv0 1)) true) (_ bv25 11) (ite (and (distinct ((_ extract 24 24) C1) (_ bv0 1)) true) (_ bv24 11) (_ bv23 11)))))
 (let ((?x4124 (ite (and (distinct ((_ extract 25 20) C1) (_ bv0 6)) true) (ite (and (distinct ((_ extract 25 23) C1) (_ bv0 3)) true) ?x2961 ?x4677) (ite (and (distinct ((_ extract 19 17) C1) (_ bv0 3)) true) ?x4006 ?x5511))))
 (let ((?x3688 (ite (and (distinct ((_ extract 29 28) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 29 29) C1) (_ bv0 1)) true) (_ bv29 11) (_ bv28 11)) (ite (and (distinct ((_ extract 27 27) C1) (_ bv0 1)) true) (_ bv27 11) (_ bv26 11)))))
 (let ((?x2712 (ite (and (distinct ((_ extract 32 32) C1) (_ bv0 1)) true) (_ bv32 11) (ite (and (distinct ((_ extract 31 31) C1) (_ bv0 1)) true) (_ bv31 11) (_ bv30 11)))))
 (let ((?x2287 (ite (and (distinct ((_ extract 35 35) C1) (_ bv0 1)) true) (_ bv35 11) (ite (and (distinct ((_ extract 34 34) C1) (_ bv0 1)) true) (_ bv34 11) (_ bv33 11)))))
 (let ((?x2021 (ite (and (distinct ((_ extract 38 38) C1) (_ bv0 1)) true) (_ bv38 11) (ite (and (distinct ((_ extract 37 37) C1) (_ bv0 1)) true) (_ bv37 11) (_ bv36 11)))))
 (let ((?x3701 (ite (and (distinct ((_ extract 38 33) C1) (_ bv0 6)) true) (ite (and (distinct ((_ extract 38 36) C1) (_ bv0 3)) true) ?x2021 ?x2287) (ite (and (distinct ((_ extract 32 30) C1) (_ bv0 3)) true) ?x2712 ?x3688))))
 (let ((?x5156 (ite (and (distinct ((_ extract 42 41) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 42 42) C1) (_ bv0 1)) true) (_ bv42 11) (_ bv41 11)) (ite (and (distinct ((_ extract 40 40) C1) (_ bv0 1)) true) (_ bv40 11) (_ bv39 11)))))
 (let ((?x3494 (ite (and (distinct ((_ extract 45 45) C1) (_ bv0 1)) true) (_ bv45 11) (ite (and (distinct ((_ extract 44 44) C1) (_ bv0 1)) true) (_ bv44 11) (_ bv43 11)))))
 (let ((?x2242 (ite (and (distinct ((_ extract 48 48) C1) (_ bv0 1)) true) (_ bv48 11) (ite (and (distinct ((_ extract 47 47) C1) (_ bv0 1)) true) (_ bv47 11) (_ bv46 11)))))
 (let ((?x3052 (ite (and (distinct ((_ extract 51 51) C1) (_ bv0 1)) true) (_ bv51 11) (ite (and (distinct ((_ extract 50 50) C1) (_ bv0 1)) true) (_ bv50 11) (_ bv49 11)))))
 (let ((?x3535 (ite (and (distinct ((_ extract 51 46) C1) (_ bv0 6)) true) (ite (and (distinct ((_ extract 51 49) C1) (_ bv0 3)) true) ?x3052 ?x2242) (ite (and (distinct ((_ extract 45 43) C1) (_ bv0 3)) true) ?x3494 ?x5156))))
 (let ((?x3109 (ite (and (distinct ((_ extract 51 26) C1) (_ bv0 26)) true) (ite (and (distinct ((_ extract 51 39) C1) (_ bv0 13)) true) ?x3535 ?x3701) (ite (and (distinct ((_ extract 25 13) C1) (_ bv0 13)) true) ?x4124 ?x1211))))
 (let ((?x2558 (ite (and (distinct ((_ extract 2 2) C2) (_ bv0 1)) true) (_ bv2 11) (ite (and (distinct ((_ extract 1 1) C2) (_ bv0 1)) true) (_ bv1 11) (_ bv0 11)))))
 (let ((?x1737 (ite (and (distinct ((_ extract 5 5) C2) (_ bv0 1)) true) (_ bv5 11) (ite (and (distinct ((_ extract 4 4) C2) (_ bv0 1)) true) (_ bv4 11) (_ bv3 11)))))
 (let ((?x1578 (ite (and (distinct ((_ extract 8 8) C2) (_ bv0 1)) true) (_ bv8 11) (ite (and (distinct ((_ extract 7 7) C2) (_ bv0 1)) true) (_ bv7 11) (_ bv6 11)))))
 (let ((?x5568 (ite (and (distinct ((_ extract 10 9) C2) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) C2) (_ bv0 1)) true) (_ bv10 11) (_ bv9 11)) ?x1578)))
 (let ((?x1146 (ite (and (distinct ((_ extract 10 6) C2) (_ bv0 5)) true) ?x5568 (ite (and (distinct ((_ extract 5 3) C2) (_ bv0 3)) true) ?x1737 ?x2558))))
 (let ((?x4667 (bvsub ?x1146 ?x3109)))
 (let ((?x2216 (bvor %Y C2)))
 (let (($x5612 (and (distinct (ite (= (ite (= (bvand %X C1) (_ bv0 52)) (_ bv1 1) (_ bv0 1)) (_ bv1 1)) %Y ?x2216) (bvor (bvshl ((_ extract 10 0) (bvand %X C1)) ?x4667) %Y)) true)))
 (let ((?x2015 (ite (and (distinct ((_ extract 3 2) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 3 3) C1) (_ bv0 1)) true) (_ bv3 32) (_ bv2 32)) (ite (and (distinct ((_ extract 1 1) C1) (_ bv0 1)) true) (_ bv1 32) (_ bv0 32)))))
 (let ((?x3227 (ite (and (distinct ((_ extract 6 6) C1) (_ bv0 1)) true) (_ bv6 32) (ite (and (distinct ((_ extract 5 5) C1) (_ bv0 1)) true) (_ bv5 32) (_ bv4 32)))))
 (let ((?x5695 (ite (and (distinct ((_ extract 9 9) C1) (_ bv0 1)) true) (_ bv9 32) (ite (and (distinct ((_ extract 8 8) C1) (_ bv0 1)) true) (_ bv8 32) (_ bv7 32)))))
 (let ((?x1316 (ite (and (distinct ((_ extract 12 12) C1) (_ bv0 1)) true) (_ bv12 32) (ite (and (distinct ((_ extract 11 11) C1) (_ bv0 1)) true) (_ bv11 32) (_ bv10 32)))))
 (let ((?x1245 (ite (and (distinct ((_ extract 12 7) C1) (_ bv0 6)) true) (ite (and (distinct ((_ extract 12 10) C1) (_ bv0 3)) true) ?x1316 ?x5695) (ite (and (distinct ((_ extract 6 4) C1) (_ bv0 3)) true) ?x3227 ?x2015))))
 (let ((?x1918 (ite (and (distinct ((_ extract 16 15) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 16 16) C1) (_ bv0 1)) true) (_ bv16 32) (_ bv15 32)) (ite (and (distinct ((_ extract 14 14) C1) (_ bv0 1)) true) (_ bv14 32) (_ bv13 32)))))
 (let ((?x3741 (ite (and (distinct ((_ extract 19 19) C1) (_ bv0 1)) true) (_ bv19 32) (ite (and (distinct ((_ extract 18 18) C1) (_ bv0 1)) true) (_ bv18 32) (_ bv17 32)))))
 (let ((?x5490 (ite (and (distinct ((_ extract 22 22) C1) (_ bv0 1)) true) (_ bv22 32) (ite (and (distinct ((_ extract 21 21) C1) (_ bv0 1)) true) (_ bv21 32) (_ bv20 32)))))
 (let ((?x5254 (ite (and (distinct ((_ extract 25 25) C1) (_ bv0 1)) true) (_ bv25 32) (ite (and (distinct ((_ extract 24 24) C1) (_ bv0 1)) true) (_ bv24 32) (_ bv23 32)))))
 (let ((?x5324 (ite (and (distinct ((_ extract 25 20) C1) (_ bv0 6)) true) (ite (and (distinct ((_ extract 25 23) C1) (_ bv0 3)) true) ?x5254 ?x5490) (ite (and (distinct ((_ extract 19 17) C1) (_ bv0 3)) true) ?x3741 ?x1918))))
 (let ((?x3896 (ite (and (distinct ((_ extract 29 28) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 29 29) C1) (_ bv0 1)) true) (_ bv29 32) (_ bv28 32)) (ite (and (distinct ((_ extract 27 27) C1) (_ bv0 1)) true) (_ bv27 32) (_ bv26 32)))))
 (let ((?x3221 (ite (and (distinct ((_ extract 32 32) C1) (_ bv0 1)) true) (_ bv32 32) (ite (and (distinct ((_ extract 31 31) C1) (_ bv0 1)) true) (_ bv31 32) (_ bv30 32)))))
 (let ((?x2476 (ite (and (distinct ((_ extract 35 35) C1) (_ bv0 1)) true) (_ bv35 32) (ite (and (distinct ((_ extract 34 34) C1) (_ bv0 1)) true) (_ bv34 32) (_ bv33 32)))))
 (let ((?x1845 (ite (and (distinct ((_ extract 38 38) C1) (_ bv0 1)) true) (_ bv38 32) (ite (and (distinct ((_ extract 37 37) C1) (_ bv0 1)) true) (_ bv37 32) (_ bv36 32)))))
 (let ((?x4388 (ite (and (distinct ((_ extract 38 33) C1) (_ bv0 6)) true) (ite (and (distinct ((_ extract 38 36) C1) (_ bv0 3)) true) ?x1845 ?x2476) (ite (and (distinct ((_ extract 32 30) C1) (_ bv0 3)) true) ?x3221 ?x3896))))
 (let ((?x3481 (ite (and (distinct ((_ extract 42 41) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 42 42) C1) (_ bv0 1)) true) (_ bv42 32) (_ bv41 32)) (ite (and (distinct ((_ extract 40 40) C1) (_ bv0 1)) true) (_ bv40 32) (_ bv39 32)))))
 (let ((?x1960 (ite (and (distinct ((_ extract 45 45) C1) (_ bv0 1)) true) (_ bv45 32) (ite (and (distinct ((_ extract 44 44) C1) (_ bv0 1)) true) (_ bv44 32) (_ bv43 32)))))
 (let ((?x1764 (ite (and (distinct ((_ extract 48 48) C1) (_ bv0 1)) true) (_ bv48 32) (ite (and (distinct ((_ extract 47 47) C1) (_ bv0 1)) true) (_ bv47 32) (_ bv46 32)))))
 (let ((?x2743 (ite (and (distinct ((_ extract 51 51) C1) (_ bv0 1)) true) (_ bv51 32) (ite (and (distinct ((_ extract 50 50) C1) (_ bv0 1)) true) (_ bv50 32) (_ bv49 32)))))
 (let ((?x1843 (ite (and (distinct ((_ extract 51 46) C1) (_ bv0 6)) true) (ite (and (distinct ((_ extract 51 49) C1) (_ bv0 3)) true) ?x2743 ?x1764) (ite (and (distinct ((_ extract 45 43) C1) (_ bv0 3)) true) ?x1960 ?x3481))))
 (let ((?x3246 (ite (and (distinct ((_ extract 51 26) C1) (_ bv0 26)) true) (ite (and (distinct ((_ extract 51 39) C1) (_ bv0 13)) true) ?x1843 ?x4388) (ite (and (distinct ((_ extract 25 13) C1) (_ bv0 13)) true) ?x5324 ?x1245))))
 (let ((?x4603 (ite (and (distinct ((_ extract 2 2) C2) (_ bv0 1)) true) (_ bv2 32) (ite (and (distinct ((_ extract 1 1) C2) (_ bv0 1)) true) (_ bv1 32) (_ bv0 32)))))
 (let ((?x2393 (ite (and (distinct ((_ extract 5 5) C2) (_ bv0 1)) true) (_ bv5 32) (ite (and (distinct ((_ extract 4 4) C2) (_ bv0 1)) true) (_ bv4 32) (_ bv3 32)))))
 (let ((?x1828 (ite (and (distinct ((_ extract 8 8) C2) (_ bv0 1)) true) (_ bv8 32) (ite (and (distinct ((_ extract 7 7) C2) (_ bv0 1)) true) (_ bv7 32) (_ bv6 32)))))
 (let ((?x5260 (ite (and (distinct ((_ extract 10 9) C2) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) C2) (_ bv0 1)) true) (_ bv10 32) (_ bv9 32)) ?x1828)))
 (let ((?x3754 (ite (and (distinct ((_ extract 10 6) C2) (_ bv0 5)) true) ?x5260 (ite (and (distinct ((_ extract 5 3) C2) (_ bv0 3)) true) ?x2393 ?x4603))))
 (and (and (and (distinct C1 (_ bv0 52)) true) (= (bvand C1 (bvsub C1 (_ bv1 52))) (_ bv0 52))) (and (and (distinct C2 (_ bv0 11)) true) (= (bvand C2 (bvsub C2 (_ bv1 11))) (_ bv0 11))) (bvsge ?x3754 ?x3246) $x5612)))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
