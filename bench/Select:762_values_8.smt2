(set-info :status unknown)
(declare-fun C3 () (_ BitVec 11))
(declare-fun C2 () (_ BitVec 11))
(declare-fun C () (_ BitVec 12))
(declare-fun %Op () (_ BitVec 12))
(assert
 (let ((?x7573 (bvsub C2 C3)))
 (let ((?x2232 (ite (and (distinct ((_ extract 2 2) ?x7573) (_ bv0 1)) true) (_ bv2 11) (ite (and (distinct ((_ extract 1 1) ?x7573) (_ bv0 1)) true) (_ bv1 11) (_ bv0 11)))))
 (let ((?x1868 (ite (and (distinct ((_ extract 5 5) ?x7573) (_ bv0 1)) true) (_ bv5 11) (ite (and (distinct ((_ extract 4 4) ?x7573) (_ bv0 1)) true) (_ bv4 11) (_ bv3 11)))))
 (let ((?x1140 (ite (and (distinct ((_ extract 8 8) ?x7573) (_ bv0 1)) true) (_ bv8 11) (ite (and (distinct ((_ extract 7 7) ?x7573) (_ bv0 1)) true) (_ bv7 11) (_ bv6 11)))))
 (let ((?x2580 (ite (and (distinct ((_ extract 10 9) ?x7573) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) ?x7573) (_ bv0 1)) true) (_ bv10 11) (_ bv9 11)) ?x1140)))
 (let ((?x2753 (ite (and (distinct ((_ extract 10 6) ?x7573) (_ bv0 5)) true) ?x2580 (ite (and (distinct ((_ extract 5 3) ?x7573) (_ bv0 3)) true) ?x1868 ?x2232))))
 (let ((?x1255 (ite (and (distinct ((_ extract 2 2) C) (_ bv0 1)) true) (_ bv2 11) (ite (and (distinct ((_ extract 1 1) C) (_ bv0 1)) true) (_ bv1 11) (_ bv0 11)))))
 (let ((?x5480 (ite (and (distinct ((_ extract 5 5) C) (_ bv0 1)) true) (_ bv5 11) (ite (and (distinct ((_ extract 4 4) C) (_ bv0 1)) true) (_ bv4 11) (_ bv3 11)))))
 (let ((?x7437 (ite (and (distinct ((_ extract 8 8) C) (_ bv0 1)) true) (_ bv8 11) (ite (and (distinct ((_ extract 7 7) C) (_ bv0 1)) true) (_ bv7 11) (_ bv6 11)))))
 (let ((?x8223 (ite (and (distinct ((_ extract 11 11) C) (_ bv0 1)) true) (_ bv11 11) (ite (and (distinct ((_ extract 10 10) C) (_ bv0 1)) true) (_ bv10 11) (_ bv9 11)))))
 (let ((?x7884 (ite (and (distinct ((_ extract 11 6) C) (_ bv0 6)) true) (ite (and (distinct ((_ extract 11 9) C) (_ bv0 3)) true) ?x8223 ?x7437) (ite (and (distinct ((_ extract 5 3) C) (_ bv0 3)) true) ?x5480 ?x1255))))
 (let ((?x5586 (bvsub ?x7884 ?x2753)))
 (let ((?x1447 (ite (bvsgt (_ bv0 11) ?x5586) (_ bv0 11) ?x5586)))
 (let ((?x4501 (bvsub ?x2753 ?x7884)))
 (let ((?x2383 (ite (bvsgt (_ bv0 11) ?x4501) (_ bv0 11) ?x4501)))
 (let ((?x7169 (bvadd (bvxor (bvlshr (bvshl ((_ extract 10 0) (bvand %Op C)) ?x2383) ?x1447) ?x7573) C3)))
 (let (($x7357 (and (distinct (ite (= (ite (= (bvand %Op C) (_ bv0 12)) (_ bv1 1) (_ bv0 1)) (_ bv1 1)) C2 C3) ?x7169) true)))
 (let ((?x4649 (ite (and (distinct ((_ extract 2 2) C) (_ bv0 1)) true) (_ bv2 32) (ite (and (distinct ((_ extract 1 1) C) (_ bv0 1)) true) (_ bv1 32) (_ bv0 32)))))
 (let ((?x2841 (ite (and (distinct ((_ extract 5 5) C) (_ bv0 1)) true) (_ bv5 32) (ite (and (distinct ((_ extract 4 4) C) (_ bv0 1)) true) (_ bv4 32) (_ bv3 32)))))
 (let ((?x1686 (ite (and (distinct ((_ extract 8 8) C) (_ bv0 1)) true) (_ bv8 32) (ite (and (distinct ((_ extract 7 7) C) (_ bv0 1)) true) (_ bv7 32) (_ bv6 32)))))
 (let ((?x1448 (ite (and (distinct ((_ extract 11 11) C) (_ bv0 1)) true) (_ bv11 32) (ite (and (distinct ((_ extract 10 10) C) (_ bv0 1)) true) (_ bv10 32) (_ bv9 32)))))
 (let ((?x4085 (ite (and (distinct ((_ extract 11 6) C) (_ bv0 6)) true) (ite (and (distinct ((_ extract 11 9) C) (_ bv0 3)) true) ?x1448 ?x1686) (ite (and (distinct ((_ extract 5 3) C) (_ bv0 3)) true) ?x2841 ?x4649))))
 (and (and (and (distinct C (_ bv0 12)) true) (= (bvand C (bvsub C (_ bv1 12))) (_ bv0 12))) (and (and (distinct ?x7573 (_ bv0 11)) true) (= (bvand ?x7573 (bvsub ?x7573 (_ bv1 11))) (_ bv0 11))) (bvslt ?x4085 (_ bv11 32)) $x7357))))))))))))))))))))))))
(check-sat)
