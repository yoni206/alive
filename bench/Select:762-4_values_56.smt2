(set-info :status unknown)
(declare-fun C2 () (_ BitVec 11))
(declare-fun C3 () (_ BitVec 11))
(declare-fun C () (_ BitVec 61))
(declare-fun %Op () (_ BitVec 61))
(assert
 (let ((?x2185 (bvsub C3 C2)))
 (let ((?x1117 (ite (and (distinct ((_ extract 2 2) ?x2185) (_ bv0 1)) true) (_ bv2 11) (ite (and (distinct ((_ extract 1 1) ?x2185) (_ bv0 1)) true) (_ bv1 11) (_ bv0 11)))))
 (let ((?x2220 (ite (and (distinct ((_ extract 5 5) ?x2185) (_ bv0 1)) true) (_ bv5 11) (ite (and (distinct ((_ extract 4 4) ?x2185) (_ bv0 1)) true) (_ bv4 11) (_ bv3 11)))))
 (let ((?x4188 (ite (and (distinct ((_ extract 8 8) ?x2185) (_ bv0 1)) true) (_ bv8 11) (ite (and (distinct ((_ extract 7 7) ?x2185) (_ bv0 1)) true) (_ bv7 11) (_ bv6 11)))))
 (let ((?x1435 (ite (and (distinct ((_ extract 10 9) ?x2185) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) ?x2185) (_ bv0 1)) true) (_ bv10 11) (_ bv9 11)) ?x4188)))
 (let ((?x2619 (ite (and (distinct ((_ extract 10 6) ?x2185) (_ bv0 5)) true) ?x1435 (ite (and (distinct ((_ extract 5 3) ?x2185) (_ bv0 3)) true) ?x2220 ?x1117))))
 (let ((?x7573 (ite (and (distinct ((_ extract 3 2) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 3 3) C) (_ bv0 1)) true) (_ bv3 11) (_ bv2 11)) (ite (and (distinct ((_ extract 1 1) C) (_ bv0 1)) true) (_ bv1 11) (_ bv0 11)))))
 (let ((?x6503 (ite (and (distinct ((_ extract 7 6) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 7 7) C) (_ bv0 1)) true) (_ bv7 11) (_ bv6 11)) (ite (and (distinct ((_ extract 5 5) C) (_ bv0 1)) true) (_ bv5 11) (_ bv4 11)))))
 (let ((?x4700 (ite (and (distinct ((_ extract 11 10) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 11 11) C) (_ bv0 1)) true) (_ bv11 11) (_ bv10 11)) (ite (and (distinct ((_ extract 9 9) C) (_ bv0 1)) true) (_ bv9 11) (_ bv8 11)))))
 (let ((?x5400 (ite (and (distinct ((_ extract 15 14) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 15 15) C) (_ bv0 1)) true) (_ bv15 11) (_ bv14 11)) (ite (and (distinct ((_ extract 13 13) C) (_ bv0 1)) true) (_ bv13 11) (_ bv12 11)))))
 (let ((?x7895 (ite (and (distinct ((_ extract 15 8) C) (_ bv0 8)) true) (ite (and (distinct ((_ extract 15 12) C) (_ bv0 4)) true) ?x5400 ?x4700) (ite (and (distinct ((_ extract 7 4) C) (_ bv0 4)) true) ?x6503 ?x7573))))
 (let ((?x7909 (ite (and (distinct ((_ extract 19 18) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 19 19) C) (_ bv0 1)) true) (_ bv19 11) (_ bv18 11)) (ite (and (distinct ((_ extract 17 17) C) (_ bv0 1)) true) (_ bv17 11) (_ bv16 11)))))
 (let ((?x7887 (ite (and (distinct ((_ extract 23 22) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 23 23) C) (_ bv0 1)) true) (_ bv23 11) (_ bv22 11)) (ite (and (distinct ((_ extract 21 21) C) (_ bv0 1)) true) (_ bv21 11) (_ bv20 11)))))
 (let ((?x6173 (ite (and (distinct ((_ extract 27 26) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 27 27) C) (_ bv0 1)) true) (_ bv27 11) (_ bv26 11)) (ite (and (distinct ((_ extract 25 25) C) (_ bv0 1)) true) (_ bv25 11) (_ bv24 11)))))
 (let ((?x5527 (ite (and (distinct ((_ extract 30 30) C) (_ bv0 1)) true) (_ bv30 11) (ite (and (distinct ((_ extract 29 29) C) (_ bv0 1)) true) (_ bv29 11) (_ bv28 11)))))
 (let ((?x3021 (ite (and (distinct ((_ extract 30 24) C) (_ bv0 7)) true) (ite (and (distinct ((_ extract 30 28) C) (_ bv0 3)) true) ?x5527 ?x6173) (ite (and (distinct ((_ extract 23 20) C) (_ bv0 4)) true) ?x7887 ?x7909))))
 (let ((?x5450 (ite (and (distinct ((_ extract 34 33) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 34 34) C) (_ bv0 1)) true) (_ bv34 11) (_ bv33 11)) (ite (and (distinct ((_ extract 32 32) C) (_ bv0 1)) true) (_ bv32 11) (_ bv31 11)))))
 (let ((?x4060 (ite (and (distinct ((_ extract 38 37) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 38 38) C) (_ bv0 1)) true) (_ bv38 11) (_ bv37 11)) (ite (and (distinct ((_ extract 36 36) C) (_ bv0 1)) true) (_ bv36 11) (_ bv35 11)))))
 (let ((?x8295 (ite (and (distinct ((_ extract 42 41) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 42 42) C) (_ bv0 1)) true) (_ bv42 11) (_ bv41 11)) (ite (and (distinct ((_ extract 40 40) C) (_ bv0 1)) true) (_ bv40 11) (_ bv39 11)))))
 (let ((?x6830 (ite (and (distinct ((_ extract 45 45) C) (_ bv0 1)) true) (_ bv45 11) (ite (and (distinct ((_ extract 44 44) C) (_ bv0 1)) true) (_ bv44 11) (_ bv43 11)))))
 (let ((?x4552 (ite (and (distinct ((_ extract 45 39) C) (_ bv0 7)) true) (ite (and (distinct ((_ extract 45 43) C) (_ bv0 3)) true) ?x6830 ?x8295) (ite (and (distinct ((_ extract 38 35) C) (_ bv0 4)) true) ?x4060 ?x5450))))
 (let ((?x1300 (ite (and (distinct ((_ extract 49 48) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 49 49) C) (_ bv0 1)) true) (_ bv49 11) (_ bv48 11)) (ite (and (distinct ((_ extract 47 47) C) (_ bv0 1)) true) (_ bv47 11) (_ bv46 11)))))
 (let ((?x3738 (ite (and (distinct ((_ extract 53 52) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 53 53) C) (_ bv0 1)) true) (_ bv53 11) (_ bv52 11)) (ite (and (distinct ((_ extract 51 51) C) (_ bv0 1)) true) (_ bv51 11) (_ bv50 11)))))
 (let ((?x2250 (ite (and (distinct ((_ extract 57 56) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 57 57) C) (_ bv0 1)) true) (_ bv57 11) (_ bv56 11)) (ite (and (distinct ((_ extract 55 55) C) (_ bv0 1)) true) (_ bv55 11) (_ bv54 11)))))
 (let ((?x1811 (ite (and (distinct ((_ extract 60 60) C) (_ bv0 1)) true) (_ bv60 11) (ite (and (distinct ((_ extract 59 59) C) (_ bv0 1)) true) (_ bv59 11) (_ bv58 11)))))
 (let ((?x3828 (ite (and (distinct ((_ extract 60 54) C) (_ bv0 7)) true) (ite (and (distinct ((_ extract 60 58) C) (_ bv0 3)) true) ?x1811 ?x2250) (ite (and (distinct ((_ extract 53 50) C) (_ bv0 4)) true) ?x3738 ?x1300))))
 (let ((?x1482 (ite (and (distinct ((_ extract 60 31) C) (_ bv0 30)) true) (ite (and (distinct ((_ extract 60 46) C) (_ bv0 15)) true) ?x3828 ?x4552) (ite (and (distinct ((_ extract 30 16) C) (_ bv0 15)) true) ?x3021 ?x7895))))
 (let ((?x6245 (bvsub ?x1482 ?x2619)))
 (let ((?x4915 (ite (bvsgt (_ bv0 11) ?x6245) (_ bv0 11) ?x6245)))
 (let ((?x6888 (bvsub ?x2619 ?x1482)))
 (let ((?x6879 (ite (bvsgt (_ bv0 11) ?x6888) (_ bv0 11) ?x6888)))
 (let ((?x7155 (bvadd (bvxor (bvlshr (bvshl ((_ extract 10 0) (bvand %Op C)) ?x6879) ?x4915) ?x2185) C2)))
 (let ((?x5474 (ite (= (ite (and (distinct (bvand %Op C) (_ bv0 61)) true) (_ bv1 1) (_ bv0 1)) (_ bv1 1)) C2 C3)))
 (let ((?x8372 (ite (and (distinct ((_ extract 3 2) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 3 3) C) (_ bv0 1)) true) (_ bv3 32) (_ bv2 32)) (ite (and (distinct ((_ extract 1 1) C) (_ bv0 1)) true) (_ bv1 32) (_ bv0 32)))))
 (let ((?x6510 (ite (and (distinct ((_ extract 7 6) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 7 7) C) (_ bv0 1)) true) (_ bv7 32) (_ bv6 32)) (ite (and (distinct ((_ extract 5 5) C) (_ bv0 1)) true) (_ bv5 32) (_ bv4 32)))))
 (let ((?x1568 (ite (and (distinct ((_ extract 11 10) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 11 11) C) (_ bv0 1)) true) (_ bv11 32) (_ bv10 32)) (ite (and (distinct ((_ extract 9 9) C) (_ bv0 1)) true) (_ bv9 32) (_ bv8 32)))))
 (let ((?x7742 (ite (and (distinct ((_ extract 15 14) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 15 15) C) (_ bv0 1)) true) (_ bv15 32) (_ bv14 32)) (ite (and (distinct ((_ extract 13 13) C) (_ bv0 1)) true) (_ bv13 32) (_ bv12 32)))))
 (let ((?x4750 (ite (and (distinct ((_ extract 15 8) C) (_ bv0 8)) true) (ite (and (distinct ((_ extract 15 12) C) (_ bv0 4)) true) ?x7742 ?x1568) (ite (and (distinct ((_ extract 7 4) C) (_ bv0 4)) true) ?x6510 ?x8372))))
 (let ((?x6320 (ite (and (distinct ((_ extract 19 18) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 19 19) C) (_ bv0 1)) true) (_ bv19 32) (_ bv18 32)) (ite (and (distinct ((_ extract 17 17) C) (_ bv0 1)) true) (_ bv17 32) (_ bv16 32)))))
 (let ((?x6190 (ite (and (distinct ((_ extract 23 22) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 23 23) C) (_ bv0 1)) true) (_ bv23 32) (_ bv22 32)) (ite (and (distinct ((_ extract 21 21) C) (_ bv0 1)) true) (_ bv21 32) (_ bv20 32)))))
 (let ((?x4547 (ite (and (distinct ((_ extract 27 26) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 27 27) C) (_ bv0 1)) true) (_ bv27 32) (_ bv26 32)) (ite (and (distinct ((_ extract 25 25) C) (_ bv0 1)) true) (_ bv25 32) (_ bv24 32)))))
 (let ((?x3894 (ite (and (distinct ((_ extract 30 30) C) (_ bv0 1)) true) (_ bv30 32) (ite (and (distinct ((_ extract 29 29) C) (_ bv0 1)) true) (_ bv29 32) (_ bv28 32)))))
 (let ((?x6651 (ite (and (distinct ((_ extract 30 24) C) (_ bv0 7)) true) (ite (and (distinct ((_ extract 30 28) C) (_ bv0 3)) true) ?x3894 ?x4547) (ite (and (distinct ((_ extract 23 20) C) (_ bv0 4)) true) ?x6190 ?x6320))))
 (let ((?x2825 (ite (and (distinct ((_ extract 34 33) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 34 34) C) (_ bv0 1)) true) (_ bv34 32) (_ bv33 32)) (ite (and (distinct ((_ extract 32 32) C) (_ bv0 1)) true) (_ bv32 32) (_ bv31 32)))))
 (let ((?x2490 (ite (and (distinct ((_ extract 38 37) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 38 38) C) (_ bv0 1)) true) (_ bv38 32) (_ bv37 32)) (ite (and (distinct ((_ extract 36 36) C) (_ bv0 1)) true) (_ bv36 32) (_ bv35 32)))))
 (let ((?x1652 (ite (and (distinct ((_ extract 42 41) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 42 42) C) (_ bv0 1)) true) (_ bv42 32) (_ bv41 32)) (ite (and (distinct ((_ extract 40 40) C) (_ bv0 1)) true) (_ bv40 32) (_ bv39 32)))))
 (let ((?x3899 (ite (and (distinct ((_ extract 45 45) C) (_ bv0 1)) true) (_ bv45 32) (ite (and (distinct ((_ extract 44 44) C) (_ bv0 1)) true) (_ bv44 32) (_ bv43 32)))))
 (let ((?x3582 (ite (and (distinct ((_ extract 45 39) C) (_ bv0 7)) true) (ite (and (distinct ((_ extract 45 43) C) (_ bv0 3)) true) ?x3899 ?x1652) (ite (and (distinct ((_ extract 38 35) C) (_ bv0 4)) true) ?x2490 ?x2825))))
 (let ((?x1251 (ite (and (distinct ((_ extract 49 48) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 49 49) C) (_ bv0 1)) true) (_ bv49 32) (_ bv48 32)) (ite (and (distinct ((_ extract 47 47) C) (_ bv0 1)) true) (_ bv47 32) (_ bv46 32)))))
 (let ((?x2156 (ite (and (distinct ((_ extract 53 52) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 53 53) C) (_ bv0 1)) true) (_ bv53 32) (_ bv52 32)) (ite (and (distinct ((_ extract 51 51) C) (_ bv0 1)) true) (_ bv51 32) (_ bv50 32)))))
 (let ((?x4040 (ite (and (distinct ((_ extract 57 56) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 57 57) C) (_ bv0 1)) true) (_ bv57 32) (_ bv56 32)) (ite (and (distinct ((_ extract 55 55) C) (_ bv0 1)) true) (_ bv55 32) (_ bv54 32)))))
 (let ((?x3032 (ite (and (distinct ((_ extract 60 60) C) (_ bv0 1)) true) (_ bv60 32) (ite (and (distinct ((_ extract 59 59) C) (_ bv0 1)) true) (_ bv59 32) (_ bv58 32)))))
 (let ((?x7761 (ite (and (distinct ((_ extract 60 54) C) (_ bv0 7)) true) (ite (and (distinct ((_ extract 60 58) C) (_ bv0 3)) true) ?x3032 ?x4040) (ite (and (distinct ((_ extract 53 50) C) (_ bv0 4)) true) ?x2156 ?x1251))))
 (let ((?x5136 (ite (and (distinct ((_ extract 60 31) C) (_ bv0 30)) true) (ite (and (distinct ((_ extract 60 46) C) (_ bv0 15)) true) ?x7761 ?x3582) (ite (and (distinct ((_ extract 30 16) C) (_ bv0 15)) true) ?x6651 ?x4750))))
 (and (and (and (distinct C (_ bv0 61)) true) (= (bvand C (bvsub C (_ bv1 61))) (_ bv0 61))) (and (and (distinct ?x2185 (_ bv0 11)) true) (= (bvand ?x2185 (bvsub ?x2185 (_ bv1 11))) (_ bv0 11))) (bvslt ?x5136 (_ bv11 32)) (and (distinct ?x5474 ?x7155) true)))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
