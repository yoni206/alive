(set-info :status unknown)
(declare-fun mem0 () (_ BitVec 8))
(declare-fun %p2 () (_ BitVec 64))
(declare-fun idx () (_ BitVec 64))
(declare-fun %p1 () (_ BitVec 64))
(declare-fun |ana_equivalentAddressValues(%p1, %p2)| () (_ BitVec 1))
(assert
 (let ((?x15398 (concat (concat (concat (concat (concat mem0 mem0) mem0) mem0) mem0) ((_ extract 2 0) mem0))))
 (let (($x18699 (or true true)))
 (let (($x1088 (and (distinct %p2 (_ bv0 64)) true)))
 (let (($x19155 (and (distinct %p1 (_ bv0 64)) true)))
 (let ((?x17826 (ite (and $x19155 $x18699 $x19155 $x18699 $x19155 $x18699 $x1088 $x18699 (= idx %p2)) (concat ((_ extract 7 3) mem0) ((_ extract 2 0) ?x15398)) mem0)))
 (let (($x11071 (and $x19155 $x18699 $x19155 $x18699 $x19155 $x18699 $x1088 $x18699 (= idx (bvadd (bvadd %p2 (_ bv1 64)) (_ bv0 64))))))
 (let (($x13413 (and $x19155 $x18699 $x19155 $x18699 $x19155 $x18699 $x1088 $x18699 (= idx (bvadd (bvadd %p2 (_ bv1 64)) (_ bv1 64))))))
 (let (($x5885 (and $x19155 $x18699 $x19155 $x18699 $x19155 $x18699 $x1088 $x18699 (= idx (bvadd (bvadd %p2 (_ bv1 64)) (_ bv2 64))))))
 (let ((?x12169 (ite $x5885 ((_ extract 26 19) ?x15398) (ite $x13413 ((_ extract 18 11) ?x15398) (ite $x11071 ((_ extract 10 3) ?x15398) ?x17826)))))
 (let (($x16243 (and $x19155 $x18699 $x19155 $x18699 $x19155 $x18699 $x1088 $x18699 (= idx (bvadd (bvadd %p2 (_ bv1 64)) (_ bv3 64))))))
 (let (($x18818 (and $x19155 $x18699 $x19155 $x18699 $x19155 $x18699 $x1088 $x18699 (= idx (bvadd (bvadd %p2 (_ bv1 64)) (_ bv4 64))))))
 (let ((?x10633 (ite $x18818 ((_ extract 42 35) ?x15398) (ite $x16243 ((_ extract 34 27) ?x15398) ?x12169))))
 (let (($x6351 (= |ana_equivalentAddressValues(%p1, %p2)| (_ bv1 1))))
 (and (=> $x6351 (= %p1 %p2)) $x6351 (and (distinct ?x10633 mem0) true))))))))))))))))
(check-sat)
