(set-info :status unknown)
(declare-fun %x () (_ BitVec 30))
(declare-fun mem0 () (_ BitVec 8))
(declare-fun %p1 () (_ BitVec 64))
(declare-fun %p2 () (_ BitVec 64))
(declare-fun |ana_equivalentAddressValues(%p1, %p2)| () (_ BitVec 1))
(assert
 (let ((?x2376 (concat ((_ extract 7 6) mem0) ((_ extract 5 0) %x))))
 (let ((?x407 (ite (and (and (distinct %p1 (_ bv0 64)) true) (or true true) (= %p2 %p1)) ?x2376 mem0)))
 (let ((?x21807 ((_ extract 13 6) %x)))
 (let (($x10275 (or true true)))
 (let (($x7310 (and (distinct %p1 (_ bv0 64)) true)))
 (let ((?x3186 (ite (and $x7310 $x10275 (= %p2 (bvadd (bvadd %p1 (_ bv1 64)) (_ bv0 64)))) ?x21807 ?x407)))
 (let ((?x17396 ((_ extract 21 14) %x)))
 (let ((?x16361 (ite (and $x7310 $x10275 (= %p2 (bvadd (bvadd %p1 (_ bv1 64)) (_ bv1 64)))) ?x17396 ?x3186)))
 (let ((?x10245 ((_ extract 29 22) %x)))
 (let ((?x23906 (ite (and $x7310 $x10275 (= %p2 (bvadd (bvadd %p1 (_ bv1 64)) (_ bv2 64)))) ?x10245 ?x16361)))
 (let ((?x6705 (ite (and $x7310 $x10275 (= (bvadd (bvadd %p2 (_ bv1 64)) (_ bv0 64)) %p1)) ?x2376 mem0)))
 (let (($x4133 (and $x7310 $x10275 (= (bvadd (bvadd %p2 (_ bv1 64)) (_ bv0 64)) (bvadd (bvadd %p1 (_ bv1 64)) (_ bv0 64))))))
 (let (($x976 (and $x7310 $x10275 (= (bvadd (bvadd %p2 (_ bv1 64)) (_ bv0 64)) (bvadd (bvadd %p1 (_ bv1 64)) (_ bv1 64))))))
 (let (($x1477 (and $x7310 $x10275 (= (bvadd (bvadd %p2 (_ bv1 64)) (_ bv0 64)) (bvadd (bvadd %p1 (_ bv1 64)) (_ bv2 64))))))
 (let ((?x8383 (ite (and $x7310 $x10275 (= (bvadd (bvadd %p2 (_ bv1 64)) (_ bv1 64)) %p1)) ?x2376 mem0)))
 (let (($x11089 (and $x7310 $x10275 (= (bvadd (bvadd %p2 (_ bv1 64)) (_ bv1 64)) (bvadd (bvadd %p1 (_ bv1 64)) (_ bv0 64))))))
 (let (($x4130 (and $x7310 $x10275 (= (bvadd (bvadd %p2 (_ bv1 64)) (_ bv1 64)) (bvadd (bvadd %p1 (_ bv1 64)) (_ bv1 64))))))
 (let (($x4159 (and $x7310 $x10275 (= (bvadd (bvadd %p2 (_ bv1 64)) (_ bv1 64)) (bvadd (bvadd %p1 (_ bv1 64)) (_ bv2 64))))))
 (let ((?x6517 (ite (and $x7310 $x10275 (= (bvadd (bvadd %p2 (_ bv1 64)) (_ bv2 64)) %p1)) ?x2376 mem0)))
 (let (($x23093 (and $x7310 $x10275 (= (bvadd (bvadd %p2 (_ bv1 64)) (_ bv2 64)) (bvadd (bvadd %p1 (_ bv1 64)) (_ bv0 64))))))
 (let (($x16015 (and $x7310 $x10275 (= (bvadd (bvadd %p2 (_ bv1 64)) (_ bv2 64)) (bvadd (bvadd %p1 (_ bv1 64)) (_ bv1 64))))))
 (let (($x25137 (and $x7310 $x10275 (= (bvadd (bvadd %p2 (_ bv1 64)) (_ bv2 64)) (bvadd (bvadd %p1 (_ bv1 64)) (_ bv2 64))))))
 (let ((?x17172 (concat (ite $x25137 ?x10245 (ite $x16015 ?x17396 (ite $x23093 ?x21807 ?x6517))) (ite $x4159 ?x10245 (ite $x4130 ?x17396 (ite $x11089 ?x21807 ?x8383))))))
 (let ((?x6249 (concat (concat ?x17172 (ite $x1477 ?x10245 (ite $x976 ?x17396 (ite $x4133 ?x21807 ?x6705)))) ((_ extract 5 0) ?x23906))))
 (let (($x19414 (= |ana_equivalentAddressValues(%p1, %p2)| (_ bv1 1))))
 (let (($x318 (and (distinct %p2 (_ bv0 64)) true)))
 (and $x7310 $x10275 $x318 $x10275 $x318 $x10275 (=> $x19414 (= %p1 %p2)) $x19414 (and (distinct ?x6249 %x) true)))))))))))))))))))))))))))))
(check-sat)
