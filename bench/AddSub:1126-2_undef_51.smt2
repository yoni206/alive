(set-info :status unknown)
(declare-fun C2 () (_ BitVec 56))
(declare-fun |ana_MaskedValueIsZero(%Y, (-1 << (log2(C2) + 1)))| () (_ BitVec 1))
(declare-fun C1 () (_ BitVec 56))
(declare-fun %Y () (_ BitVec 56))
(assert
 (let ((?x651 (ite (and (distinct ((_ extract 3 2) C2) (_ bv0 2)) true) (ite (and (distinct ((_ extract 3 3) C2) (_ bv0 1)) true) (_ bv3 56) (_ bv2 56)) (ite (and (distinct ((_ extract 1 1) C2) (_ bv0 1)) true) (_ bv1 56) (_ bv0 56)))))
 (let ((?x7128 (ite (and (distinct ((_ extract 6 6) C2) (_ bv0 1)) true) (_ bv6 56) (ite (and (distinct ((_ extract 5 5) C2) (_ bv0 1)) true) (_ bv5 56) (_ bv4 56)))))
 (let ((?x4532 (ite (and (distinct ((_ extract 10 9) C2) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) C2) (_ bv0 1)) true) (_ bv10 56) (_ bv9 56)) (ite (and (distinct ((_ extract 8 8) C2) (_ bv0 1)) true) (_ bv8 56) (_ bv7 56)))))
 (let ((?x7014 (ite (and (distinct ((_ extract 13 13) C2) (_ bv0 1)) true) (_ bv13 56) (ite (and (distinct ((_ extract 12 12) C2) (_ bv0 1)) true) (_ bv12 56) (_ bv11 56)))))
 (let ((?x7976 (ite (and (distinct ((_ extract 13 7) C2) (_ bv0 7)) true) (ite (and (distinct ((_ extract 13 11) C2) (_ bv0 3)) true) ?x7014 ?x4532) (ite (and (distinct ((_ extract 6 4) C2) (_ bv0 3)) true) ?x7128 ?x651))))
 (let ((?x11651 (ite (and (distinct ((_ extract 17 16) C2) (_ bv0 2)) true) (ite (and (distinct ((_ extract 17 17) C2) (_ bv0 1)) true) (_ bv17 56) (_ bv16 56)) (ite (and (distinct ((_ extract 15 15) C2) (_ bv0 1)) true) (_ bv15 56) (_ bv14 56)))))
 (let ((?x8985 (ite (and (distinct ((_ extract 20 20) C2) (_ bv0 1)) true) (_ bv20 56) (ite (and (distinct ((_ extract 19 19) C2) (_ bv0 1)) true) (_ bv19 56) (_ bv18 56)))))
 (let ((?x1009 (ite (and (distinct ((_ extract 24 23) C2) (_ bv0 2)) true) (ite (and (distinct ((_ extract 24 24) C2) (_ bv0 1)) true) (_ bv24 56) (_ bv23 56)) (ite (and (distinct ((_ extract 22 22) C2) (_ bv0 1)) true) (_ bv22 56) (_ bv21 56)))))
 (let ((?x4873 (ite (and (distinct ((_ extract 27 27) C2) (_ bv0 1)) true) (_ bv27 56) (ite (and (distinct ((_ extract 26 26) C2) (_ bv0 1)) true) (_ bv26 56) (_ bv25 56)))))
 (let ((?x2891 (ite (and (distinct ((_ extract 27 21) C2) (_ bv0 7)) true) (ite (and (distinct ((_ extract 27 25) C2) (_ bv0 3)) true) ?x4873 ?x1009) (ite (and (distinct ((_ extract 20 18) C2) (_ bv0 3)) true) ?x8985 ?x11651))))
 (let ((?x888 (ite (and (distinct ((_ extract 31 30) C2) (_ bv0 2)) true) (ite (and (distinct ((_ extract 31 31) C2) (_ bv0 1)) true) (_ bv31 56) (_ bv30 56)) (ite (and (distinct ((_ extract 29 29) C2) (_ bv0 1)) true) (_ bv29 56) (_ bv28 56)))))
 (let ((?x10420 (ite (and (distinct ((_ extract 34 34) C2) (_ bv0 1)) true) (_ bv34 56) (ite (and (distinct ((_ extract 33 33) C2) (_ bv0 1)) true) (_ bv33 56) (_ bv32 56)))))
 (let ((?x554 (ite (and (distinct ((_ extract 38 37) C2) (_ bv0 2)) true) (ite (and (distinct ((_ extract 38 38) C2) (_ bv0 1)) true) (_ bv38 56) (_ bv37 56)) (ite (and (distinct ((_ extract 36 36) C2) (_ bv0 1)) true) (_ bv36 56) (_ bv35 56)))))
 (let ((?x7250 (ite (and (distinct ((_ extract 41 41) C2) (_ bv0 1)) true) (_ bv41 56) (ite (and (distinct ((_ extract 40 40) C2) (_ bv0 1)) true) (_ bv40 56) (_ bv39 56)))))
 (let ((?x5665 (ite (and (distinct ((_ extract 41 35) C2) (_ bv0 7)) true) (ite (and (distinct ((_ extract 41 39) C2) (_ bv0 3)) true) ?x7250 ?x554) (ite (and (distinct ((_ extract 34 32) C2) (_ bv0 3)) true) ?x10420 ?x888))))
 (let ((?x11016 (ite (and (distinct ((_ extract 45 44) C2) (_ bv0 2)) true) (ite (and (distinct ((_ extract 45 45) C2) (_ bv0 1)) true) (_ bv45 56) (_ bv44 56)) (ite (and (distinct ((_ extract 43 43) C2) (_ bv0 1)) true) (_ bv43 56) (_ bv42 56)))))
 (let ((?x7139 (ite (and (distinct ((_ extract 48 48) C2) (_ bv0 1)) true) (_ bv48 56) (ite (and (distinct ((_ extract 47 47) C2) (_ bv0 1)) true) (_ bv47 56) (_ bv46 56)))))
 (let ((?x9127 (ite (and (distinct ((_ extract 52 51) C2) (_ bv0 2)) true) (ite (and (distinct ((_ extract 52 52) C2) (_ bv0 1)) true) (_ bv52 56) (_ bv51 56)) (ite (and (distinct ((_ extract 50 50) C2) (_ bv0 1)) true) (_ bv50 56) (_ bv49 56)))))
 (let ((?x3696 (ite (and (distinct ((_ extract 55 55) C2) (_ bv0 1)) true) (_ bv55 56) (ite (and (distinct ((_ extract 54 54) C2) (_ bv0 1)) true) (_ bv54 56) (_ bv53 56)))))
 (let ((?x4755 (ite (and (distinct ((_ extract 55 49) C2) (_ bv0 7)) true) (ite (and (distinct ((_ extract 55 53) C2) (_ bv0 3)) true) ?x3696 ?x9127) (ite (and (distinct ((_ extract 48 46) C2) (_ bv0 3)) true) ?x7139 ?x11016))))
 (let ((?x10111 (ite (and (distinct ((_ extract 55 28) C2) (_ bv0 28)) true) (ite (and (distinct ((_ extract 55 42) C2) (_ bv0 14)) true) ?x4755 ?x5665) (ite (and (distinct ((_ extract 27 14) C2) (_ bv0 14)) true) ?x2891 ?x7976))))
 (let ((?x3824 (bvsub (bvsub (_ bv56 56) ?x10111) (_ bv1 56))))
 (let (($x7456 (bvult ?x3824 (_ bv56 56))))
 (let (($x3052 (= |ana_MaskedValueIsZero(%Y, (-1 << (log2(C2) + 1)))| (_ bv1 1))))
 (and (=> $x3052 (= (bvand %Y (bvshl (_ bv72057594037927935 56) (bvadd ?x10111 (_ bv1 56)))) (_ bv0 56))) (= C2 (bvneg C1)) (and (and (distinct C2 (_ bv0 56)) true) (= (bvand C2 (bvsub C2 (_ bv1 56))) (_ bv0 56))) $x3052 (not (and $x7456 $x7456))))))))))))))))))))))))))))
(check-sat)
