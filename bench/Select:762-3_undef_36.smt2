(set-info :status unknown)
(declare-fun C2 () (_ BitVec 11))
(declare-fun C3 () (_ BitVec 11))
(declare-fun C () (_ BitVec 40))
(assert
 (let ((?x6852 (ite (and (distinct ((_ extract 2 2) (bvsub C3 C2)) (_ bv0 1)) true) (_ bv2 11) (ite (and (distinct ((_ extract 1 1) (bvsub C3 C2)) (_ bv0 1)) true) (_ bv1 11) (_ bv0 11)))))
 (let ((?x5379 (ite (and (distinct ((_ extract 5 5) (bvsub C3 C2)) (_ bv0 1)) true) (_ bv5 11) (ite (and (distinct ((_ extract 4 4) (bvsub C3 C2)) (_ bv0 1)) true) (_ bv4 11) (_ bv3 11)))))
 (let ((?x3278 (ite (and (distinct ((_ extract 8 8) (bvsub C3 C2)) (_ bv0 1)) true) (_ bv8 11) (ite (and (distinct ((_ extract 7 7) (bvsub C3 C2)) (_ bv0 1)) true) (_ bv7 11) (_ bv6 11)))))
 (let ((?x3789 (ite (and (distinct ((_ extract 10 9) (bvsub C3 C2)) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) (bvsub C3 C2)) (_ bv0 1)) true) (_ bv10 11) (_ bv9 11)) ?x3278)))
 (let ((?x3064 (ite (and (distinct ((_ extract 10 6) (bvsub C3 C2)) (_ bv0 5)) true) ?x3789 (ite (and (distinct ((_ extract 5 3) (bvsub C3 C2)) (_ bv0 3)) true) ?x5379 ?x6852))))
 (let ((?x4407 (ite (and (distinct ((_ extract 2 2) C) (_ bv0 1)) true) (_ bv2 11) (ite (and (distinct ((_ extract 1 1) C) (_ bv0 1)) true) (_ bv1 11) (_ bv0 11)))))
 (let ((?x7637 (ite (and (distinct ((_ extract 4 3) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 4 4) C) (_ bv0 1)) true) (_ bv4 11) (_ bv3 11)) ?x4407)))
 (let ((?x4910 (ite (and (distinct ((_ extract 7 7) C) (_ bv0 1)) true) (_ bv7 11) (ite (and (distinct ((_ extract 6 6) C) (_ bv0 1)) true) (_ bv6 11) (_ bv5 11)))))
 (let ((?x1951 (ite (and (distinct ((_ extract 9 8) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 9 9) C) (_ bv0 1)) true) (_ bv9 11) (_ bv8 11)) ?x4910)))
 (let ((?x6100 (ite (and (distinct ((_ extract 12 12) C) (_ bv0 1)) true) (_ bv12 11) (ite (and (distinct ((_ extract 11 11) C) (_ bv0 1)) true) (_ bv11 11) (_ bv10 11)))))
 (let ((?x6840 (ite (and (distinct ((_ extract 14 13) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 14 14) C) (_ bv0 1)) true) (_ bv14 11) (_ bv13 11)) ?x6100)))
 (let ((?x1489 (ite (and (distinct ((_ extract 17 17) C) (_ bv0 1)) true) (_ bv17 11) (ite (and (distinct ((_ extract 16 16) C) (_ bv0 1)) true) (_ bv16 11) (_ bv15 11)))))
 (let ((?x6396 (ite (and (distinct ((_ extract 19 18) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 19 19) C) (_ bv0 1)) true) (_ bv19 11) (_ bv18 11)) ?x1489)))
 (let ((?x1736 (ite (and (distinct ((_ extract 19 10) C) (_ bv0 10)) true) (ite (and (distinct ((_ extract 19 15) C) (_ bv0 5)) true) ?x6396 ?x6840) (ite (and (distinct ((_ extract 9 5) C) (_ bv0 5)) true) ?x1951 ?x7637))))
 (let ((?x3431 (ite (and (distinct ((_ extract 22 22) C) (_ bv0 1)) true) (_ bv22 11) (ite (and (distinct ((_ extract 21 21) C) (_ bv0 1)) true) (_ bv21 11) (_ bv20 11)))))
 (let ((?x3539 (ite (and (distinct ((_ extract 24 23) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 24 24) C) (_ bv0 1)) true) (_ bv24 11) (_ bv23 11)) ?x3431)))
 (let ((?x3594 (ite (and (distinct ((_ extract 27 27) C) (_ bv0 1)) true) (_ bv27 11) (ite (and (distinct ((_ extract 26 26) C) (_ bv0 1)) true) (_ bv26 11) (_ bv25 11)))))
 (let ((?x3338 (ite (and (distinct ((_ extract 29 28) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 29 29) C) (_ bv0 1)) true) (_ bv29 11) (_ bv28 11)) ?x3594)))
 (let ((?x3751 (ite (and (distinct ((_ extract 32 32) C) (_ bv0 1)) true) (_ bv32 11) (ite (and (distinct ((_ extract 31 31) C) (_ bv0 1)) true) (_ bv31 11) (_ bv30 11)))))
 (let ((?x5149 (ite (and (distinct ((_ extract 34 33) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 34 34) C) (_ bv0 1)) true) (_ bv34 11) (_ bv33 11)) ?x3751)))
 (let ((?x2786 (ite (and (distinct ((_ extract 37 37) C) (_ bv0 1)) true) (_ bv37 11) (ite (and (distinct ((_ extract 36 36) C) (_ bv0 1)) true) (_ bv36 11) (_ bv35 11)))))
 (let ((?x2575 (ite (and (distinct ((_ extract 39 38) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 39 39) C) (_ bv0 1)) true) (_ bv39 11) (_ bv38 11)) ?x2786)))
 (let ((?x7525 (ite (and (distinct ((_ extract 39 30) C) (_ bv0 10)) true) (ite (and (distinct ((_ extract 39 35) C) (_ bv0 5)) true) ?x2575 ?x5149) (ite (and (distinct ((_ extract 29 25) C) (_ bv0 5)) true) ?x3338 ?x3539))))
 (let ((?x3890 (bvsub (ite (and (distinct ((_ extract 39 20) C) (_ bv0 20)) true) ?x7525 ?x1736) ?x3064)))
 (let ((?x4572 (ite (bvsgt (_ bv0 11) ?x3890) (_ bv0 11) ?x3890)))
 (let ((?x3993 (bvsub ?x3064 (ite (and (distinct ((_ extract 39 20) C) (_ bv0 20)) true) ?x7525 ?x1736))))
 (let ((?x1582 (ite (bvsgt (_ bv0 11) ?x3993) (_ bv0 11) ?x3993)))
 (let ((?x5890 (ite (and (distinct ((_ extract 2 2) C) (_ bv0 1)) true) (_ bv2 32) (ite (and (distinct ((_ extract 1 1) C) (_ bv0 1)) true) (_ bv1 32) (_ bv0 32)))))
 (let ((?x6134 (ite (and (distinct ((_ extract 4 3) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 4 4) C) (_ bv0 1)) true) (_ bv4 32) (_ bv3 32)) ?x5890)))
 (let ((?x4906 (ite (and (distinct ((_ extract 7 7) C) (_ bv0 1)) true) (_ bv7 32) (ite (and (distinct ((_ extract 6 6) C) (_ bv0 1)) true) (_ bv6 32) (_ bv5 32)))))
 (let ((?x4900 (ite (and (distinct ((_ extract 9 8) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 9 9) C) (_ bv0 1)) true) (_ bv9 32) (_ bv8 32)) ?x4906)))
 (let ((?x3492 (ite (and (distinct ((_ extract 12 12) C) (_ bv0 1)) true) (_ bv12 32) (ite (and (distinct ((_ extract 11 11) C) (_ bv0 1)) true) (_ bv11 32) (_ bv10 32)))))
 (let ((?x3301 (ite (and (distinct ((_ extract 14 13) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 14 14) C) (_ bv0 1)) true) (_ bv14 32) (_ bv13 32)) ?x3492)))
 (let ((?x2594 (ite (and (distinct ((_ extract 17 17) C) (_ bv0 1)) true) (_ bv17 32) (ite (and (distinct ((_ extract 16 16) C) (_ bv0 1)) true) (_ bv16 32) (_ bv15 32)))))
 (let ((?x1528 (ite (and (distinct ((_ extract 19 18) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 19 19) C) (_ bv0 1)) true) (_ bv19 32) (_ bv18 32)) ?x2594)))
 (let ((?x5970 (ite (and (distinct ((_ extract 19 10) C) (_ bv0 10)) true) (ite (and (distinct ((_ extract 19 15) C) (_ bv0 5)) true) ?x1528 ?x3301) (ite (and (distinct ((_ extract 9 5) C) (_ bv0 5)) true) ?x4900 ?x6134))))
 (let ((?x1794 (ite (and (distinct ((_ extract 22 22) C) (_ bv0 1)) true) (_ bv22 32) (ite (and (distinct ((_ extract 21 21) C) (_ bv0 1)) true) (_ bv21 32) (_ bv20 32)))))
 (let ((?x1745 (ite (and (distinct ((_ extract 24 23) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 24 24) C) (_ bv0 1)) true) (_ bv24 32) (_ bv23 32)) ?x1794)))
 (let ((?x2851 (ite (and (distinct ((_ extract 27 27) C) (_ bv0 1)) true) (_ bv27 32) (ite (and (distinct ((_ extract 26 26) C) (_ bv0 1)) true) (_ bv26 32) (_ bv25 32)))))
 (let ((?x1406 (ite (and (distinct ((_ extract 29 28) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 29 29) C) (_ bv0 1)) true) (_ bv29 32) (_ bv28 32)) ?x2851)))
 (let ((?x6751 (ite (and (distinct ((_ extract 32 32) C) (_ bv0 1)) true) (_ bv32 32) (ite (and (distinct ((_ extract 31 31) C) (_ bv0 1)) true) (_ bv31 32) (_ bv30 32)))))
 (let ((?x6370 (ite (and (distinct ((_ extract 34 33) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 34 34) C) (_ bv0 1)) true) (_ bv34 32) (_ bv33 32)) ?x6751)))
 (let ((?x7584 (ite (and (distinct ((_ extract 37 37) C) (_ bv0 1)) true) (_ bv37 32) (ite (and (distinct ((_ extract 36 36) C) (_ bv0 1)) true) (_ bv36 32) (_ bv35 32)))))
 (let ((?x8420 (ite (and (distinct ((_ extract 39 38) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 39 39) C) (_ bv0 1)) true) (_ bv39 32) (_ bv38 32)) ?x7584)))
 (let ((?x6258 (ite (and (distinct ((_ extract 39 30) C) (_ bv0 10)) true) (ite (and (distinct ((_ extract 39 35) C) (_ bv0 5)) true) ?x8420 ?x6370) (ite (and (distinct ((_ extract 29 25) C) (_ bv0 5)) true) ?x1406 ?x1745))))
 (let (($x1213 (and (and (distinct (bvsub C3 C2) (_ bv0 11)) true) (= (bvand (bvsub C3 C2) (bvsub (bvsub C3 C2) (_ bv1 11))) (_ bv0 11)))))
 (and (and (and (distinct C (_ bv0 40)) true) (= (bvand C (bvsub C (_ bv1 40))) (_ bv0 40))) $x1213 (bvslt (ite (and (distinct ((_ extract 39 20) C) (_ bv0 20)) true) ?x6258 ?x5970) (_ bv11 32)) (not (and (bvult ?x1582 (_ bv11 11)) (bvult ?x4572 (_ bv11 11))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
