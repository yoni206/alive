(set-info :status unknown)
(declare-fun C2 () (_ BitVec 11))
(declare-fun C3 () (_ BitVec 11))
(declare-fun C () (_ BitVec 43))
(declare-fun %Op () (_ BitVec 43))
(assert
 (let ((?x3557 (bvsub C3 C2)))
 (let ((?x10524 (ite (and (distinct ((_ extract 2 2) ?x3557) (_ bv0 1)) true) (_ bv2 11) (ite (and (distinct ((_ extract 1 1) ?x3557) (_ bv0 1)) true) (_ bv1 11) (_ bv0 11)))))
 (let ((?x18386 (ite (and (distinct ((_ extract 5 5) ?x3557) (_ bv0 1)) true) (_ bv5 11) (ite (and (distinct ((_ extract 4 4) ?x3557) (_ bv0 1)) true) (_ bv4 11) (_ bv3 11)))))
 (let ((?x3368 (ite (and (distinct ((_ extract 8 8) ?x3557) (_ bv0 1)) true) (_ bv8 11) (ite (and (distinct ((_ extract 7 7) ?x3557) (_ bv0 1)) true) (_ bv7 11) (_ bv6 11)))))
 (let ((?x17515 (ite (and (distinct ((_ extract 10 9) ?x3557) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) ?x3557) (_ bv0 1)) true) (_ bv10 11) (_ bv9 11)) ?x3368)))
 (let ((?x17573 (ite (and (distinct ((_ extract 10 6) ?x3557) (_ bv0 5)) true) ?x17515 (ite (and (distinct ((_ extract 5 3) ?x3557) (_ bv0 3)) true) ?x18386 ?x10524))))
 (let ((?x17583 (ite (and (distinct ((_ extract 2 2) C) (_ bv0 1)) true) (_ bv2 11) (ite (and (distinct ((_ extract 1 1) C) (_ bv0 1)) true) (_ bv1 11) (_ bv0 11)))))
 (let ((?x13990 (ite (and (distinct ((_ extract 5 5) C) (_ bv0 1)) true) (_ bv5 11) (ite (and (distinct ((_ extract 4 4) C) (_ bv0 1)) true) (_ bv4 11) (_ bv3 11)))))
 (let ((?x2103 (ite (and (distinct ((_ extract 8 8) C) (_ bv0 1)) true) (_ bv8 11) (ite (and (distinct ((_ extract 7 7) C) (_ bv0 1)) true) (_ bv7 11) (_ bv6 11)))))
 (let ((?x14827 (ite (and (distinct ((_ extract 10 9) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) C) (_ bv0 1)) true) (_ bv10 11) (_ bv9 11)) ?x2103)))
 (let ((?x5453 (ite (and (distinct ((_ extract 10 6) C) (_ bv0 5)) true) ?x14827 (ite (and (distinct ((_ extract 5 3) C) (_ bv0 3)) true) ?x13990 ?x17583))))
 (let ((?x16282 (ite (and (distinct ((_ extract 13 13) C) (_ bv0 1)) true) (_ bv13 11) (ite (and (distinct ((_ extract 12 12) C) (_ bv0 1)) true) (_ bv12 11) (_ bv11 11)))))
 (let ((?x15333 (ite (and (distinct ((_ extract 16 16) C) (_ bv0 1)) true) (_ bv16 11) (ite (and (distinct ((_ extract 15 15) C) (_ bv0 1)) true) (_ bv15 11) (_ bv14 11)))))
 (let ((?x22395 (ite (and (distinct ((_ extract 19 19) C) (_ bv0 1)) true) (_ bv19 11) (ite (and (distinct ((_ extract 18 18) C) (_ bv0 1)) true) (_ bv18 11) (_ bv17 11)))))
 (let ((?x14156 (ite (and (distinct ((_ extract 21 20) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 21 21) C) (_ bv0 1)) true) (_ bv21 11) (_ bv20 11)) ?x22395)))
 (let ((?x17936 (ite (and (distinct ((_ extract 21 17) C) (_ bv0 5)) true) ?x14156 (ite (and (distinct ((_ extract 16 14) C) (_ bv0 3)) true) ?x15333 ?x16282))))
 (let ((?x5800 (ite (and (distinct ((_ extract 24 24) C) (_ bv0 1)) true) (_ bv24 11) (ite (and (distinct ((_ extract 23 23) C) (_ bv0 1)) true) (_ bv23 11) (_ bv22 11)))))
 (let ((?x14436 (ite (and (distinct ((_ extract 27 27) C) (_ bv0 1)) true) (_ bv27 11) (ite (and (distinct ((_ extract 26 26) C) (_ bv0 1)) true) (_ bv26 11) (_ bv25 11)))))
 (let ((?x11533 (ite (and (distinct ((_ extract 30 30) C) (_ bv0 1)) true) (_ bv30 11) (ite (and (distinct ((_ extract 29 29) C) (_ bv0 1)) true) (_ bv29 11) (_ bv28 11)))))
 (let ((?x3252 (ite (and (distinct ((_ extract 32 31) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 32 32) C) (_ bv0 1)) true) (_ bv32 11) (_ bv31 11)) ?x11533)))
 (let ((?x7357 (ite (and (distinct ((_ extract 32 28) C) (_ bv0 5)) true) ?x3252 (ite (and (distinct ((_ extract 27 25) C) (_ bv0 3)) true) ?x14436 ?x5800))))
 (let ((?x5885 (ite (and (distinct ((_ extract 35 35) C) (_ bv0 1)) true) (_ bv35 11) (ite (and (distinct ((_ extract 34 34) C) (_ bv0 1)) true) (_ bv34 11) (_ bv33 11)))))
 (let ((?x11506 (ite (and (distinct ((_ extract 37 36) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 37 37) C) (_ bv0 1)) true) (_ bv37 11) (_ bv36 11)) ?x5885)))
 (let ((?x5272 (ite (and (distinct ((_ extract 40 40) C) (_ bv0 1)) true) (_ bv40 11) (ite (and (distinct ((_ extract 39 39) C) (_ bv0 1)) true) (_ bv39 11) (_ bv38 11)))))
 (let ((?x2932 (ite (and (distinct ((_ extract 42 41) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 42 42) C) (_ bv0 1)) true) (_ bv42 11) (_ bv41 11)) ?x5272)))
 (let ((?x9144 (ite (and (distinct ((_ extract 42 33) C) (_ bv0 10)) true) (ite (and (distinct ((_ extract 42 38) C) (_ bv0 5)) true) ?x2932 ?x11506) ?x7357)))
 (let ((?x8893 (ite (and (distinct ((_ extract 42 22) C) (_ bv0 21)) true) ?x9144 (ite (and (distinct ((_ extract 21 11) C) (_ bv0 11)) true) ?x17936 ?x5453))))
 (let ((?x12779 (bvsub ?x8893 ?x17573)))
 (let ((?x5927 (ite (bvsgt (_ bv0 11) ?x12779) (_ bv0 11) ?x12779)))
 (let ((?x15369 (bvsub ?x17573 ?x8893)))
 (let ((?x2838 (ite (bvsgt (_ bv0 11) ?x15369) (_ bv0 11) ?x15369)))
 (let ((?x20691 (bvadd (bvxor (bvlshr (bvshl ((_ extract 10 0) (bvand %Op C)) ?x2838) ?x5927) ?x3557) C2)))
 (let ((?x14484 (ite (= (ite (and (distinct (bvand %Op C) (_ bv0 43)) true) (_ bv1 1) (_ bv0 1)) (_ bv1 1)) C2 C3)))
 (let ((?x16033 (ite (and (distinct ((_ extract 2 2) C) (_ bv0 1)) true) (_ bv2 32) (ite (and (distinct ((_ extract 1 1) C) (_ bv0 1)) true) (_ bv1 32) (_ bv0 32)))))
 (let ((?x14543 (ite (and (distinct ((_ extract 5 5) C) (_ bv0 1)) true) (_ bv5 32) (ite (and (distinct ((_ extract 4 4) C) (_ bv0 1)) true) (_ bv4 32) (_ bv3 32)))))
 (let ((?x12907 (ite (and (distinct ((_ extract 8 8) C) (_ bv0 1)) true) (_ bv8 32) (ite (and (distinct ((_ extract 7 7) C) (_ bv0 1)) true) (_ bv7 32) (_ bv6 32)))))
 (let ((?x12567 (ite (and (distinct ((_ extract 10 9) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) C) (_ bv0 1)) true) (_ bv10 32) (_ bv9 32)) ?x12907)))
 (let ((?x19424 (ite (and (distinct ((_ extract 10 6) C) (_ bv0 5)) true) ?x12567 (ite (and (distinct ((_ extract 5 3) C) (_ bv0 3)) true) ?x14543 ?x16033))))
 (let ((?x7510 (ite (and (distinct ((_ extract 13 13) C) (_ bv0 1)) true) (_ bv13 32) (ite (and (distinct ((_ extract 12 12) C) (_ bv0 1)) true) (_ bv12 32) (_ bv11 32)))))
 (let ((?x6431 (ite (and (distinct ((_ extract 16 16) C) (_ bv0 1)) true) (_ bv16 32) (ite (and (distinct ((_ extract 15 15) C) (_ bv0 1)) true) (_ bv15 32) (_ bv14 32)))))
 (let ((?x3866 (ite (and (distinct ((_ extract 19 19) C) (_ bv0 1)) true) (_ bv19 32) (ite (and (distinct ((_ extract 18 18) C) (_ bv0 1)) true) (_ bv18 32) (_ bv17 32)))))
 (let ((?x3780 (ite (and (distinct ((_ extract 21 20) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 21 21) C) (_ bv0 1)) true) (_ bv21 32) (_ bv20 32)) ?x3866)))
 (let ((?x10306 (ite (and (distinct ((_ extract 21 17) C) (_ bv0 5)) true) ?x3780 (ite (and (distinct ((_ extract 16 14) C) (_ bv0 3)) true) ?x6431 ?x7510))))
 (let ((?x16941 (ite (and (distinct ((_ extract 24 24) C) (_ bv0 1)) true) (_ bv24 32) (ite (and (distinct ((_ extract 23 23) C) (_ bv0 1)) true) (_ bv23 32) (_ bv22 32)))))
 (let ((?x19427 (ite (and (distinct ((_ extract 27 27) C) (_ bv0 1)) true) (_ bv27 32) (ite (and (distinct ((_ extract 26 26) C) (_ bv0 1)) true) (_ bv26 32) (_ bv25 32)))))
 (let ((?x1180 (ite (and (distinct ((_ extract 30 30) C) (_ bv0 1)) true) (_ bv30 32) (ite (and (distinct ((_ extract 29 29) C) (_ bv0 1)) true) (_ bv29 32) (_ bv28 32)))))
 (let ((?x1035 (ite (and (distinct ((_ extract 32 31) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 32 32) C) (_ bv0 1)) true) (_ bv32 32) (_ bv31 32)) ?x1180)))
 (let ((?x17007 (ite (and (distinct ((_ extract 32 28) C) (_ bv0 5)) true) ?x1035 (ite (and (distinct ((_ extract 27 25) C) (_ bv0 3)) true) ?x19427 ?x16941))))
 (let ((?x14096 (ite (and (distinct ((_ extract 35 35) C) (_ bv0 1)) true) (_ bv35 32) (ite (and (distinct ((_ extract 34 34) C) (_ bv0 1)) true) (_ bv34 32) (_ bv33 32)))))
 (let ((?x18644 (ite (and (distinct ((_ extract 37 36) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 37 37) C) (_ bv0 1)) true) (_ bv37 32) (_ bv36 32)) ?x14096)))
 (let ((?x13770 (ite (and (distinct ((_ extract 40 40) C) (_ bv0 1)) true) (_ bv40 32) (ite (and (distinct ((_ extract 39 39) C) (_ bv0 1)) true) (_ bv39 32) (_ bv38 32)))))
 (let ((?x18152 (ite (and (distinct ((_ extract 42 41) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 42 42) C) (_ bv0 1)) true) (_ bv42 32) (_ bv41 32)) ?x13770)))
 (let ((?x2291 (ite (and (distinct ((_ extract 42 33) C) (_ bv0 10)) true) (ite (and (distinct ((_ extract 42 38) C) (_ bv0 5)) true) ?x18152 ?x18644) ?x17007)))
 (let ((?x19791 (ite (and (distinct ((_ extract 42 22) C) (_ bv0 21)) true) ?x2291 (ite (and (distinct ((_ extract 21 11) C) (_ bv0 11)) true) ?x10306 ?x19424))))
 (and (and (and (distinct C (_ bv0 43)) true) (= (bvand C (bvsub C (_ bv1 43))) (_ bv0 43))) (and (and (distinct ?x3557 (_ bv0 11)) true) (= (bvand ?x3557 (bvsub ?x3557 (_ bv1 11))) (_ bv0 11))) (bvslt ?x19791 (_ bv11 32)) (and (distinct ?x14484 ?x20691) true)))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
