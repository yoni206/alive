(set-info :status unknown)
(declare-fun C2 () (_ BitVec 11))
(declare-fun C3 () (_ BitVec 11))
(declare-fun C () (_ BitVec 44))
(declare-fun %Op () (_ BitVec 44))
(assert
 (let ((?x5535 (bvsub C3 C2)))
 (let ((?x4057 (ite (and (distinct ((_ extract 2 2) ?x5535) (_ bv0 1)) true) (_ bv2 11) (ite (and (distinct ((_ extract 1 1) ?x5535) (_ bv0 1)) true) (_ bv1 11) (_ bv0 11)))))
 (let ((?x2347 (ite (and (distinct ((_ extract 5 5) ?x5535) (_ bv0 1)) true) (_ bv5 11) (ite (and (distinct ((_ extract 4 4) ?x5535) (_ bv0 1)) true) (_ bv4 11) (_ bv3 11)))))
 (let ((?x1569 (ite (and (distinct ((_ extract 8 8) ?x5535) (_ bv0 1)) true) (_ bv8 11) (ite (and (distinct ((_ extract 7 7) ?x5535) (_ bv0 1)) true) (_ bv7 11) (_ bv6 11)))))
 (let ((?x1550 (ite (and (distinct ((_ extract 10 9) ?x5535) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) ?x5535) (_ bv0 1)) true) (_ bv10 11) (_ bv9 11)) ?x1569)))
 (let ((?x5666 (ite (and (distinct ((_ extract 10 6) ?x5535) (_ bv0 5)) true) ?x1550 (ite (and (distinct ((_ extract 5 3) ?x5535) (_ bv0 3)) true) ?x2347 ?x4057))))
 (let ((?x5421 (ite (and (distinct ((_ extract 2 2) C) (_ bv0 1)) true) (_ bv2 11) (ite (and (distinct ((_ extract 1 1) C) (_ bv0 1)) true) (_ bv1 11) (_ bv0 11)))))
 (let ((?x5801 (ite (and (distinct ((_ extract 5 5) C) (_ bv0 1)) true) (_ bv5 11) (ite (and (distinct ((_ extract 4 4) C) (_ bv0 1)) true) (_ bv4 11) (_ bv3 11)))))
 (let ((?x6823 (ite (and (distinct ((_ extract 8 8) C) (_ bv0 1)) true) (_ bv8 11) (ite (and (distinct ((_ extract 7 7) C) (_ bv0 1)) true) (_ bv7 11) (_ bv6 11)))))
 (let ((?x8080 (ite (and (distinct ((_ extract 10 9) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) C) (_ bv0 1)) true) (_ bv10 11) (_ bv9 11)) ?x6823)))
 (let ((?x7901 (ite (and (distinct ((_ extract 10 6) C) (_ bv0 5)) true) ?x8080 (ite (and (distinct ((_ extract 5 3) C) (_ bv0 3)) true) ?x5801 ?x5421))))
 (let ((?x6788 (ite (and (distinct ((_ extract 13 13) C) (_ bv0 1)) true) (_ bv13 11) (ite (and (distinct ((_ extract 12 12) C) (_ bv0 1)) true) (_ bv12 11) (_ bv11 11)))))
 (let ((?x5542 (ite (and (distinct ((_ extract 16 16) C) (_ bv0 1)) true) (_ bv16 11) (ite (and (distinct ((_ extract 15 15) C) (_ bv0 1)) true) (_ bv15 11) (_ bv14 11)))))
 (let ((?x4376 (ite (and (distinct ((_ extract 19 19) C) (_ bv0 1)) true) (_ bv19 11) (ite (and (distinct ((_ extract 18 18) C) (_ bv0 1)) true) (_ bv18 11) (_ bv17 11)))))
 (let ((?x4864 (ite (and (distinct ((_ extract 21 20) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 21 21) C) (_ bv0 1)) true) (_ bv21 11) (_ bv20 11)) ?x4376)))
 (let ((?x6576 (ite (and (distinct ((_ extract 21 17) C) (_ bv0 5)) true) ?x4864 (ite (and (distinct ((_ extract 16 14) C) (_ bv0 3)) true) ?x5542 ?x6788))))
 (let ((?x4934 (ite (and (distinct ((_ extract 24 24) C) (_ bv0 1)) true) (_ bv24 11) (ite (and (distinct ((_ extract 23 23) C) (_ bv0 1)) true) (_ bv23 11) (_ bv22 11)))))
 (let ((?x6460 (ite (and (distinct ((_ extract 27 27) C) (_ bv0 1)) true) (_ bv27 11) (ite (and (distinct ((_ extract 26 26) C) (_ bv0 1)) true) (_ bv26 11) (_ bv25 11)))))
 (let ((?x4418 (ite (and (distinct ((_ extract 30 30) C) (_ bv0 1)) true) (_ bv30 11) (ite (and (distinct ((_ extract 29 29) C) (_ bv0 1)) true) (_ bv29 11) (_ bv28 11)))))
 (let ((?x1881 (ite (and (distinct ((_ extract 32 31) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 32 32) C) (_ bv0 1)) true) (_ bv32 11) (_ bv31 11)) ?x4418)))
 (let ((?x3574 (ite (and (distinct ((_ extract 32 28) C) (_ bv0 5)) true) ?x1881 (ite (and (distinct ((_ extract 27 25) C) (_ bv0 3)) true) ?x6460 ?x4934))))
 (let ((?x7742 (ite (and (distinct ((_ extract 35 35) C) (_ bv0 1)) true) (_ bv35 11) (ite (and (distinct ((_ extract 34 34) C) (_ bv0 1)) true) (_ bv34 11) (_ bv33 11)))))
 (let ((?x2833 (ite (and (distinct ((_ extract 38 38) C) (_ bv0 1)) true) (_ bv38 11) (ite (and (distinct ((_ extract 37 37) C) (_ bv0 1)) true) (_ bv37 11) (_ bv36 11)))))
 (let ((?x3016 (ite (and (distinct ((_ extract 41 41) C) (_ bv0 1)) true) (_ bv41 11) (ite (and (distinct ((_ extract 40 40) C) (_ bv0 1)) true) (_ bv40 11) (_ bv39 11)))))
 (let ((?x6756 (ite (and (distinct ((_ extract 43 42) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 43 43) C) (_ bv0 1)) true) (_ bv43 11) (_ bv42 11)) ?x3016)))
 (let ((?x7291 (ite (and (distinct ((_ extract 43 39) C) (_ bv0 5)) true) ?x6756 (ite (and (distinct ((_ extract 38 36) C) (_ bv0 3)) true) ?x2833 ?x7742))))
 (let ((?x4769 (ite (and (distinct ((_ extract 43 22) C) (_ bv0 22)) true) (ite (and (distinct ((_ extract 43 33) C) (_ bv0 11)) true) ?x7291 ?x3574) (ite (and (distinct ((_ extract 21 11) C) (_ bv0 11)) true) ?x6576 ?x7901))))
 (let ((?x3657 (bvsub ?x4769 ?x5666)))
 (let ((?x4476 (ite (bvsgt (_ bv0 11) ?x3657) (_ bv0 11) ?x3657)))
 (let ((?x8526 (bvsub ?x5666 ?x4769)))
 (let ((?x1377 (ite (bvsgt (_ bv0 11) ?x8526) (_ bv0 11) ?x8526)))
 (let ((?x4643 (bvadd (bvxor (bvlshr (bvshl ((_ extract 10 0) (bvand %Op C)) ?x1377) ?x4476) ?x5535) C2)))
 (let ((?x1833 (ite (= (ite (and (distinct (bvand %Op C) (_ bv0 44)) true) (_ bv1 1) (_ bv0 1)) (_ bv1 1)) C2 C3)))
 (let ((?x6658 (ite (and (distinct ((_ extract 2 2) C) (_ bv0 1)) true) (_ bv2 32) (ite (and (distinct ((_ extract 1 1) C) (_ bv0 1)) true) (_ bv1 32) (_ bv0 32)))))
 (let ((?x6499 (ite (and (distinct ((_ extract 5 5) C) (_ bv0 1)) true) (_ bv5 32) (ite (and (distinct ((_ extract 4 4) C) (_ bv0 1)) true) (_ bv4 32) (_ bv3 32)))))
 (let ((?x5543 (ite (and (distinct ((_ extract 8 8) C) (_ bv0 1)) true) (_ bv8 32) (ite (and (distinct ((_ extract 7 7) C) (_ bv0 1)) true) (_ bv7 32) (_ bv6 32)))))
 (let ((?x6130 (ite (and (distinct ((_ extract 10 9) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) C) (_ bv0 1)) true) (_ bv10 32) (_ bv9 32)) ?x5543)))
 (let ((?x6648 (ite (and (distinct ((_ extract 10 6) C) (_ bv0 5)) true) ?x6130 (ite (and (distinct ((_ extract 5 3) C) (_ bv0 3)) true) ?x6499 ?x6658))))
 (let ((?x4955 (ite (and (distinct ((_ extract 13 13) C) (_ bv0 1)) true) (_ bv13 32) (ite (and (distinct ((_ extract 12 12) C) (_ bv0 1)) true) (_ bv12 32) (_ bv11 32)))))
 (let ((?x2960 (ite (and (distinct ((_ extract 16 16) C) (_ bv0 1)) true) (_ bv16 32) (ite (and (distinct ((_ extract 15 15) C) (_ bv0 1)) true) (_ bv15 32) (_ bv14 32)))))
 (let ((?x2545 (ite (and (distinct ((_ extract 19 19) C) (_ bv0 1)) true) (_ bv19 32) (ite (and (distinct ((_ extract 18 18) C) (_ bv0 1)) true) (_ bv18 32) (_ bv17 32)))))
 (let ((?x2930 (ite (and (distinct ((_ extract 21 20) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 21 21) C) (_ bv0 1)) true) (_ bv21 32) (_ bv20 32)) ?x2545)))
 (let ((?x5140 (ite (and (distinct ((_ extract 21 17) C) (_ bv0 5)) true) ?x2930 (ite (and (distinct ((_ extract 16 14) C) (_ bv0 3)) true) ?x2960 ?x4955))))
 (let ((?x5098 (ite (and (distinct ((_ extract 24 24) C) (_ bv0 1)) true) (_ bv24 32) (ite (and (distinct ((_ extract 23 23) C) (_ bv0 1)) true) (_ bv23 32) (_ bv22 32)))))
 (let ((?x1125 (ite (and (distinct ((_ extract 27 27) C) (_ bv0 1)) true) (_ bv27 32) (ite (and (distinct ((_ extract 26 26) C) (_ bv0 1)) true) (_ bv26 32) (_ bv25 32)))))
 (let ((?x3761 (ite (and (distinct ((_ extract 30 30) C) (_ bv0 1)) true) (_ bv30 32) (ite (and (distinct ((_ extract 29 29) C) (_ bv0 1)) true) (_ bv29 32) (_ bv28 32)))))
 (let ((?x7329 (ite (and (distinct ((_ extract 32 31) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 32 32) C) (_ bv0 1)) true) (_ bv32 32) (_ bv31 32)) ?x3761)))
 (let ((?x1748 (ite (and (distinct ((_ extract 32 28) C) (_ bv0 5)) true) ?x7329 (ite (and (distinct ((_ extract 27 25) C) (_ bv0 3)) true) ?x1125 ?x5098))))
 (let ((?x6679 (ite (and (distinct ((_ extract 35 35) C) (_ bv0 1)) true) (_ bv35 32) (ite (and (distinct ((_ extract 34 34) C) (_ bv0 1)) true) (_ bv34 32) (_ bv33 32)))))
 (let ((?x1126 (ite (and (distinct ((_ extract 38 38) C) (_ bv0 1)) true) (_ bv38 32) (ite (and (distinct ((_ extract 37 37) C) (_ bv0 1)) true) (_ bv37 32) (_ bv36 32)))))
 (let ((?x2246 (ite (and (distinct ((_ extract 41 41) C) (_ bv0 1)) true) (_ bv41 32) (ite (and (distinct ((_ extract 40 40) C) (_ bv0 1)) true) (_ bv40 32) (_ bv39 32)))))
 (let ((?x2595 (ite (and (distinct ((_ extract 43 42) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 43 43) C) (_ bv0 1)) true) (_ bv43 32) (_ bv42 32)) ?x2246)))
 (let ((?x5953 (ite (and (distinct ((_ extract 43 39) C) (_ bv0 5)) true) ?x2595 (ite (and (distinct ((_ extract 38 36) C) (_ bv0 3)) true) ?x1126 ?x6679))))
 (let ((?x7186 (ite (and (distinct ((_ extract 43 22) C) (_ bv0 22)) true) (ite (and (distinct ((_ extract 43 33) C) (_ bv0 11)) true) ?x5953 ?x1748) (ite (and (distinct ((_ extract 21 11) C) (_ bv0 11)) true) ?x5140 ?x6648))))
 (and (and (and (distinct C (_ bv0 44)) true) (= (bvand C (bvsub C (_ bv1 44))) (_ bv0 44))) (and (and (distinct ?x5535 (_ bv0 11)) true) (= (bvand ?x5535 (bvsub ?x5535 (_ bv1 11))) (_ bv0 11))) (bvslt ?x7186 (_ bv11 32)) (and (distinct ?x1833 ?x4643) true)))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
