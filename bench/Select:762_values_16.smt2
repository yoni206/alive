(set-info :status unknown)
(declare-fun C3 () (_ BitVec 11))
(declare-fun C2 () (_ BitVec 11))
(declare-fun C () (_ BitVec 20))
(declare-fun %Op () (_ BitVec 20))
(assert
 (let ((?x8380 (bvsub C2 C3)))
 (let ((?x2535 (ite (and (distinct ((_ extract 2 2) ?x8380) (_ bv0 1)) true) (_ bv2 11) (ite (and (distinct ((_ extract 1 1) ?x8380) (_ bv0 1)) true) (_ bv1 11) (_ bv0 11)))))
 (let ((?x5945 (ite (and (distinct ((_ extract 5 5) ?x8380) (_ bv0 1)) true) (_ bv5 11) (ite (and (distinct ((_ extract 4 4) ?x8380) (_ bv0 1)) true) (_ bv4 11) (_ bv3 11)))))
 (let ((?x7659 (ite (and (distinct ((_ extract 8 8) ?x8380) (_ bv0 1)) true) (_ bv8 11) (ite (and (distinct ((_ extract 7 7) ?x8380) (_ bv0 1)) true) (_ bv7 11) (_ bv6 11)))))
 (let ((?x3967 (ite (and (distinct ((_ extract 10 9) ?x8380) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) ?x8380) (_ bv0 1)) true) (_ bv10 11) (_ bv9 11)) ?x7659)))
 (let ((?x4284 (ite (and (distinct ((_ extract 10 6) ?x8380) (_ bv0 5)) true) ?x3967 (ite (and (distinct ((_ extract 5 3) ?x8380) (_ bv0 3)) true) ?x5945 ?x2535))))
 (let ((?x3977 (ite (and (distinct ((_ extract 2 2) C) (_ bv0 1)) true) (_ bv2 11) (ite (and (distinct ((_ extract 1 1) C) (_ bv0 1)) true) (_ bv1 11) (_ bv0 11)))))
 (let ((?x5291 (ite (and (distinct ((_ extract 4 3) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 4 4) C) (_ bv0 1)) true) (_ bv4 11) (_ bv3 11)) ?x3977)))
 (let ((?x6147 (ite (and (distinct ((_ extract 7 7) C) (_ bv0 1)) true) (_ bv7 11) (ite (and (distinct ((_ extract 6 6) C) (_ bv0 1)) true) (_ bv6 11) (_ bv5 11)))))
 (let ((?x2160 (ite (and (distinct ((_ extract 9 8) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 9 9) C) (_ bv0 1)) true) (_ bv9 11) (_ bv8 11)) ?x6147)))
 (let ((?x1255 (ite (and (distinct ((_ extract 12 12) C) (_ bv0 1)) true) (_ bv12 11) (ite (and (distinct ((_ extract 11 11) C) (_ bv0 1)) true) (_ bv11 11) (_ bv10 11)))))
 (let ((?x2482 (ite (and (distinct ((_ extract 14 13) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 14 14) C) (_ bv0 1)) true) (_ bv14 11) (_ bv13 11)) ?x1255)))
 (let ((?x4398 (ite (and (distinct ((_ extract 17 17) C) (_ bv0 1)) true) (_ bv17 11) (ite (and (distinct ((_ extract 16 16) C) (_ bv0 1)) true) (_ bv16 11) (_ bv15 11)))))
 (let ((?x3013 (ite (and (distinct ((_ extract 19 18) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 19 19) C) (_ bv0 1)) true) (_ bv19 11) (_ bv18 11)) ?x4398)))
 (let ((?x8126 (ite (and (distinct ((_ extract 19 10) C) (_ bv0 10)) true) (ite (and (distinct ((_ extract 19 15) C) (_ bv0 5)) true) ?x3013 ?x2482) (ite (and (distinct ((_ extract 9 5) C) (_ bv0 5)) true) ?x2160 ?x5291))))
 (let ((?x7656 (bvsub ?x8126 ?x4284)))
 (let ((?x6020 (ite (bvsgt (_ bv0 11) ?x7656) (_ bv0 11) ?x7656)))
 (let ((?x5286 (bvsub ?x4284 ?x8126)))
 (let ((?x8322 (ite (bvsgt (_ bv0 11) ?x5286) (_ bv0 11) ?x5286)))
 (let ((?x1686 (bvadd (bvxor (bvlshr (bvshl ((_ extract 10 0) (bvand %Op C)) ?x8322) ?x6020) ?x8380) C3)))
 (let (($x1871 (and (distinct (ite (= (ite (= (bvand %Op C) (_ bv0 20)) (_ bv1 1) (_ bv0 1)) (_ bv1 1)) C2 C3) ?x1686) true)))
 (let ((?x1310 (ite (and (distinct ((_ extract 2 2) C) (_ bv0 1)) true) (_ bv2 32) (ite (and (distinct ((_ extract 1 1) C) (_ bv0 1)) true) (_ bv1 32) (_ bv0 32)))))
 (let ((?x7336 (ite (and (distinct ((_ extract 4 3) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 4 4) C) (_ bv0 1)) true) (_ bv4 32) (_ bv3 32)) ?x1310)))
 (let ((?x4403 (ite (and (distinct ((_ extract 7 7) C) (_ bv0 1)) true) (_ bv7 32) (ite (and (distinct ((_ extract 6 6) C) (_ bv0 1)) true) (_ bv6 32) (_ bv5 32)))))
 (let ((?x3981 (ite (and (distinct ((_ extract 9 8) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 9 9) C) (_ bv0 1)) true) (_ bv9 32) (_ bv8 32)) ?x4403)))
 (let ((?x3413 (ite (and (distinct ((_ extract 12 12) C) (_ bv0 1)) true) (_ bv12 32) (ite (and (distinct ((_ extract 11 11) C) (_ bv0 1)) true) (_ bv11 32) (_ bv10 32)))))
 (let ((?x2664 (ite (and (distinct ((_ extract 14 13) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 14 14) C) (_ bv0 1)) true) (_ bv14 32) (_ bv13 32)) ?x3413)))
 (let ((?x2643 (ite (and (distinct ((_ extract 17 17) C) (_ bv0 1)) true) (_ bv17 32) (ite (and (distinct ((_ extract 16 16) C) (_ bv0 1)) true) (_ bv16 32) (_ bv15 32)))))
 (let ((?x1566 (ite (and (distinct ((_ extract 19 18) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 19 19) C) (_ bv0 1)) true) (_ bv19 32) (_ bv18 32)) ?x2643)))
 (let ((?x1604 (ite (and (distinct ((_ extract 19 10) C) (_ bv0 10)) true) (ite (and (distinct ((_ extract 19 15) C) (_ bv0 5)) true) ?x1566 ?x2664) (ite (and (distinct ((_ extract 9 5) C) (_ bv0 5)) true) ?x3981 ?x7336))))
 (and (and (and (distinct C (_ bv0 20)) true) (= (bvand C (bvsub C (_ bv1 20))) (_ bv0 20))) (and (and (distinct ?x8380 (_ bv0 11)) true) (= (bvand ?x8380 (bvsub ?x8380 (_ bv1 11))) (_ bv0 11))) (bvslt ?x1604 (_ bv11 32)) $x1871))))))))))))))))))))))))))))))))
(check-sat)
