(set-info :status unknown)
(declare-fun %Y () (_ BitVec 11))
(declare-fun C1 () (_ BitVec 44))
(declare-fun C2 () (_ BitVec 11))
(declare-fun %X () (_ BitVec 44))
(assert
 (let ((?x737 (ite (and (distinct ((_ extract 2 2) C1) (_ bv0 1)) true) (_ bv2 11) (ite (and (distinct ((_ extract 1 1) C1) (_ bv0 1)) true) (_ bv1 11) (_ bv0 11)))))
 (let ((?x23758 (ite (and (distinct ((_ extract 5 5) C1) (_ bv0 1)) true) (_ bv5 11) (ite (and (distinct ((_ extract 4 4) C1) (_ bv0 1)) true) (_ bv4 11) (_ bv3 11)))))
 (let ((?x7841 (ite (and (distinct ((_ extract 8 8) C1) (_ bv0 1)) true) (_ bv8 11) (ite (and (distinct ((_ extract 7 7) C1) (_ bv0 1)) true) (_ bv7 11) (_ bv6 11)))))
 (let ((?x18991 (ite (and (distinct ((_ extract 10 9) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) C1) (_ bv0 1)) true) (_ bv10 11) (_ bv9 11)) ?x7841)))
 (let ((?x3562 (ite (and (distinct ((_ extract 10 6) C1) (_ bv0 5)) true) ?x18991 (ite (and (distinct ((_ extract 5 3) C1) (_ bv0 3)) true) ?x23758 ?x737))))
 (let ((?x23999 (ite (and (distinct ((_ extract 13 13) C1) (_ bv0 1)) true) (_ bv13 11) (ite (and (distinct ((_ extract 12 12) C1) (_ bv0 1)) true) (_ bv12 11) (_ bv11 11)))))
 (let ((?x17242 (ite (and (distinct ((_ extract 16 16) C1) (_ bv0 1)) true) (_ bv16 11) (ite (and (distinct ((_ extract 15 15) C1) (_ bv0 1)) true) (_ bv15 11) (_ bv14 11)))))
 (let ((?x15664 (ite (and (distinct ((_ extract 19 19) C1) (_ bv0 1)) true) (_ bv19 11) (ite (and (distinct ((_ extract 18 18) C1) (_ bv0 1)) true) (_ bv18 11) (_ bv17 11)))))
 (let ((?x195 (ite (and (distinct ((_ extract 21 20) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 21 21) C1) (_ bv0 1)) true) (_ bv21 11) (_ bv20 11)) ?x15664)))
 (let ((?x16321 (ite (and (distinct ((_ extract 21 17) C1) (_ bv0 5)) true) ?x195 (ite (and (distinct ((_ extract 16 14) C1) (_ bv0 3)) true) ?x17242 ?x23999))))
 (let ((?x9493 (ite (and (distinct ((_ extract 24 24) C1) (_ bv0 1)) true) (_ bv24 11) (ite (and (distinct ((_ extract 23 23) C1) (_ bv0 1)) true) (_ bv23 11) (_ bv22 11)))))
 (let ((?x5379 (ite (and (distinct ((_ extract 27 27) C1) (_ bv0 1)) true) (_ bv27 11) (ite (and (distinct ((_ extract 26 26) C1) (_ bv0 1)) true) (_ bv26 11) (_ bv25 11)))))
 (let ((?x1258 (ite (and (distinct ((_ extract 30 30) C1) (_ bv0 1)) true) (_ bv30 11) (ite (and (distinct ((_ extract 29 29) C1) (_ bv0 1)) true) (_ bv29 11) (_ bv28 11)))))
 (let ((?x7353 (ite (and (distinct ((_ extract 32 31) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 32 32) C1) (_ bv0 1)) true) (_ bv32 11) (_ bv31 11)) ?x1258)))
 (let ((?x11912 (ite (and (distinct ((_ extract 32 28) C1) (_ bv0 5)) true) ?x7353 (ite (and (distinct ((_ extract 27 25) C1) (_ bv0 3)) true) ?x5379 ?x9493))))
 (let ((?x13013 (ite (and (distinct ((_ extract 35 35) C1) (_ bv0 1)) true) (_ bv35 11) (ite (and (distinct ((_ extract 34 34) C1) (_ bv0 1)) true) (_ bv34 11) (_ bv33 11)))))
 (let ((?x9097 (ite (and (distinct ((_ extract 38 38) C1) (_ bv0 1)) true) (_ bv38 11) (ite (and (distinct ((_ extract 37 37) C1) (_ bv0 1)) true) (_ bv37 11) (_ bv36 11)))))
 (let ((?x2099 (ite (and (distinct ((_ extract 41 41) C1) (_ bv0 1)) true) (_ bv41 11) (ite (and (distinct ((_ extract 40 40) C1) (_ bv0 1)) true) (_ bv40 11) (_ bv39 11)))))
 (let ((?x2899 (ite (and (distinct ((_ extract 43 42) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 43 43) C1) (_ bv0 1)) true) (_ bv43 11) (_ bv42 11)) ?x2099)))
 (let ((?x11639 (ite (and (distinct ((_ extract 43 39) C1) (_ bv0 5)) true) ?x2899 (ite (and (distinct ((_ extract 38 36) C1) (_ bv0 3)) true) ?x9097 ?x13013))))
 (let ((?x11808 (ite (and (distinct ((_ extract 43 22) C1) (_ bv0 22)) true) (ite (and (distinct ((_ extract 43 33) C1) (_ bv0 11)) true) ?x11639 ?x11912) (ite (and (distinct ((_ extract 21 11) C1) (_ bv0 11)) true) ?x16321 ?x3562))))
 (let ((?x2278 (ite (and (distinct ((_ extract 2 2) C2) (_ bv0 1)) true) (_ bv2 11) (ite (and (distinct ((_ extract 1 1) C2) (_ bv0 1)) true) (_ bv1 11) (_ bv0 11)))))
 (let ((?x2051 (ite (and (distinct ((_ extract 5 5) C2) (_ bv0 1)) true) (_ bv5 11) (ite (and (distinct ((_ extract 4 4) C2) (_ bv0 1)) true) (_ bv4 11) (_ bv3 11)))))
 (let ((?x12877 (ite (and (distinct ((_ extract 8 8) C2) (_ bv0 1)) true) (_ bv8 11) (ite (and (distinct ((_ extract 7 7) C2) (_ bv0 1)) true) (_ bv7 11) (_ bv6 11)))))
 (let ((?x14285 (ite (and (distinct ((_ extract 10 9) C2) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) C2) (_ bv0 1)) true) (_ bv10 11) (_ bv9 11)) ?x12877)))
 (let ((?x667 (ite (and (distinct ((_ extract 10 6) C2) (_ bv0 5)) true) ?x14285 (ite (and (distinct ((_ extract 5 3) C2) (_ bv0 3)) true) ?x2051 ?x2278))))
 (let ((?x6169 (bvsub ?x667 ?x11808)))
 (let ((?x5528 (bvor %Y C2)))
 (let ((?x571 (ite (= (ite (and (distinct (bvand %X C1) (_ bv0 44)) true) (_ bv1 1) (_ bv0 1)) (_ bv1 1)) ?x5528 %Y)))
 (let ((?x2492 (ite (and (distinct ((_ extract 2 2) C1) (_ bv0 1)) true) (_ bv2 32) (ite (and (distinct ((_ extract 1 1) C1) (_ bv0 1)) true) (_ bv1 32) (_ bv0 32)))))
 (let ((?x12936 (ite (and (distinct ((_ extract 5 5) C1) (_ bv0 1)) true) (_ bv5 32) (ite (and (distinct ((_ extract 4 4) C1) (_ bv0 1)) true) (_ bv4 32) (_ bv3 32)))))
 (let ((?x4539 (ite (and (distinct ((_ extract 8 8) C1) (_ bv0 1)) true) (_ bv8 32) (ite (and (distinct ((_ extract 7 7) C1) (_ bv0 1)) true) (_ bv7 32) (_ bv6 32)))))
 (let ((?x15196 (ite (and (distinct ((_ extract 10 9) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) C1) (_ bv0 1)) true) (_ bv10 32) (_ bv9 32)) ?x4539)))
 (let ((?x3883 (ite (and (distinct ((_ extract 10 6) C1) (_ bv0 5)) true) ?x15196 (ite (and (distinct ((_ extract 5 3) C1) (_ bv0 3)) true) ?x12936 ?x2492))))
 (let ((?x20562 (ite (and (distinct ((_ extract 13 13) C1) (_ bv0 1)) true) (_ bv13 32) (ite (and (distinct ((_ extract 12 12) C1) (_ bv0 1)) true) (_ bv12 32) (_ bv11 32)))))
 (let ((?x16109 (ite (and (distinct ((_ extract 16 16) C1) (_ bv0 1)) true) (_ bv16 32) (ite (and (distinct ((_ extract 15 15) C1) (_ bv0 1)) true) (_ bv15 32) (_ bv14 32)))))
 (let ((?x14672 (ite (and (distinct ((_ extract 19 19) C1) (_ bv0 1)) true) (_ bv19 32) (ite (and (distinct ((_ extract 18 18) C1) (_ bv0 1)) true) (_ bv18 32) (_ bv17 32)))))
 (let ((?x14248 (ite (and (distinct ((_ extract 21 20) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 21 21) C1) (_ bv0 1)) true) (_ bv21 32) (_ bv20 32)) ?x14672)))
 (let ((?x20246 (ite (and (distinct ((_ extract 21 17) C1) (_ bv0 5)) true) ?x14248 (ite (and (distinct ((_ extract 16 14) C1) (_ bv0 3)) true) ?x16109 ?x20562))))
 (let ((?x6431 (ite (and (distinct ((_ extract 24 24) C1) (_ bv0 1)) true) (_ bv24 32) (ite (and (distinct ((_ extract 23 23) C1) (_ bv0 1)) true) (_ bv23 32) (_ bv22 32)))))
 (let ((?x8116 (ite (and (distinct ((_ extract 27 27) C1) (_ bv0 1)) true) (_ bv27 32) (ite (and (distinct ((_ extract 26 26) C1) (_ bv0 1)) true) (_ bv26 32) (_ bv25 32)))))
 (let ((?x12185 (ite (and (distinct ((_ extract 30 30) C1) (_ bv0 1)) true) (_ bv30 32) (ite (and (distinct ((_ extract 29 29) C1) (_ bv0 1)) true) (_ bv29 32) (_ bv28 32)))))
 (let ((?x5878 (ite (and (distinct ((_ extract 32 31) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 32 32) C1) (_ bv0 1)) true) (_ bv32 32) (_ bv31 32)) ?x12185)))
 (let ((?x10163 (ite (and (distinct ((_ extract 32 28) C1) (_ bv0 5)) true) ?x5878 (ite (and (distinct ((_ extract 27 25) C1) (_ bv0 3)) true) ?x8116 ?x6431))))
 (let ((?x11106 (ite (and (distinct ((_ extract 35 35) C1) (_ bv0 1)) true) (_ bv35 32) (ite (and (distinct ((_ extract 34 34) C1) (_ bv0 1)) true) (_ bv34 32) (_ bv33 32)))))
 (let ((?x14016 (ite (and (distinct ((_ extract 38 38) C1) (_ bv0 1)) true) (_ bv38 32) (ite (and (distinct ((_ extract 37 37) C1) (_ bv0 1)) true) (_ bv37 32) (_ bv36 32)))))
 (let ((?x6360 (ite (and (distinct ((_ extract 41 41) C1) (_ bv0 1)) true) (_ bv41 32) (ite (and (distinct ((_ extract 40 40) C1) (_ bv0 1)) true) (_ bv40 32) (_ bv39 32)))))
 (let ((?x10019 (ite (and (distinct ((_ extract 43 42) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 43 43) C1) (_ bv0 1)) true) (_ bv43 32) (_ bv42 32)) ?x6360)))
 (let ((?x5186 (ite (and (distinct ((_ extract 43 39) C1) (_ bv0 5)) true) ?x10019 (ite (and (distinct ((_ extract 38 36) C1) (_ bv0 3)) true) ?x14016 ?x11106))))
 (let ((?x3716 (ite (and (distinct ((_ extract 43 22) C1) (_ bv0 22)) true) (ite (and (distinct ((_ extract 43 33) C1) (_ bv0 11)) true) ?x5186 ?x10163) (ite (and (distinct ((_ extract 21 11) C1) (_ bv0 11)) true) ?x20246 ?x3883))))
 (let ((?x10803 (ite (and (distinct ((_ extract 2 2) C2) (_ bv0 1)) true) (_ bv2 32) (ite (and (distinct ((_ extract 1 1) C2) (_ bv0 1)) true) (_ bv1 32) (_ bv0 32)))))
 (let ((?x18728 (ite (and (distinct ((_ extract 5 5) C2) (_ bv0 1)) true) (_ bv5 32) (ite (and (distinct ((_ extract 4 4) C2) (_ bv0 1)) true) (_ bv4 32) (_ bv3 32)))))
 (let ((?x19024 (ite (and (distinct ((_ extract 8 8) C2) (_ bv0 1)) true) (_ bv8 32) (ite (and (distinct ((_ extract 7 7) C2) (_ bv0 1)) true) (_ bv7 32) (_ bv6 32)))))
 (let ((?x2986 (ite (and (distinct ((_ extract 10 9) C2) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) C2) (_ bv0 1)) true) (_ bv10 32) (_ bv9 32)) ?x19024)))
 (let ((?x7276 (ite (and (distinct ((_ extract 10 6) C2) (_ bv0 5)) true) ?x2986 (ite (and (distinct ((_ extract 5 3) C2) (_ bv0 3)) true) ?x18728 ?x10803))))
 (and (and (and (distinct C1 (_ bv0 44)) true) (= (bvand C1 (bvsub C1 (_ bv1 44))) (_ bv0 44))) (and (and (distinct C2 (_ bv0 11)) true) (= (bvand C2 (bvsub C2 (_ bv1 11))) (_ bv0 11))) (bvsge ?x7276 ?x3716) (and (distinct ?x571 (bvor (bvshl ((_ extract 10 0) (bvand %X C1)) ?x6169) %Y)) true))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
