(set-info :status unknown)
(declare-fun mem0 () (_ BitVec 8))
(declare-fun %y () (_ BitVec 14))
(declare-fun %p2 () (_ BitVec 64))
(declare-fun idx () (_ BitVec 64))
(declare-fun %x () (_ BitVec 14))
(declare-fun %p1 () (_ BitVec 64))
(declare-fun |ana_equivalentAddressValues(%p1, %p2)| () (_ BitVec 1))
(assert
 (let ((?x8029 (ite (and (and (distinct %p2 (_ bv0 64)) true) (or true true) (= idx %p2)) (concat ((_ extract 7 6) mem0) ((_ extract 5 0) %y)) mem0)))
 (let (($x9453 (or true true)))
 (let (($x12673 (and (distinct %p2 (_ bv0 64)) true)))
 (let ((?x10461 (ite (and $x12673 $x9453 (= idx (bvadd (bvadd %p2 (_ bv1 64)) (_ bv0 64)))) ((_ extract 13 6) %y) ?x8029)))
 (let ((?x11570 (ite (and (and (distinct %p1 (_ bv0 64)) true) $x9453 (= idx %p1)) (concat ((_ extract 7 6) mem0) ((_ extract 5 0) %x)) mem0)))
 (let (($x17212 (and (distinct %p1 (_ bv0 64)) true)))
 (let ((?x5408 (ite (and $x17212 $x9453 (= idx (bvadd (bvadd %p1 (_ bv1 64)) (_ bv0 64)))) ((_ extract 13 6) %x) ?x11570)))
 (let ((?x4855 (ite (and $x17212 $x9453 (= %p2 %p1)) (concat ((_ extract 7 6) mem0) ((_ extract 5 0) %x)) mem0)))
 (let ((?x18561 (ite (and $x17212 $x9453 (= %p2 (bvadd (bvadd %p1 (_ bv1 64)) (_ bv0 64)))) ((_ extract 13 6) %x) ?x4855)))
 (let ((?x2377 (ite (and $x17212 $x9453 $x12673 $x9453 (= idx %p2)) (concat ((_ extract 7 6) ?x18561) ((_ extract 5 0) %y)) ?x5408)))
 (let ((?x12067 (ite (and $x17212 $x9453 $x12673 $x9453 (= idx (bvadd (bvadd %p2 (_ bv1 64)) (_ bv0 64)))) ((_ extract 13 6) %y) ?x2377)))
 (let (($x6308 (= |ana_equivalentAddressValues(%p1, %p2)| (_ bv1 1))))
 (and (=> $x6308 (= %p1 %p2)) $x6308 (and (distinct ?x12067 ?x10461) true)))))))))))))))
(check-sat)
