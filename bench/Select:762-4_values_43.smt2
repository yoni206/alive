(set-info :status unknown)
(declare-fun C2 () (_ BitVec 11))
(declare-fun C3 () (_ BitVec 11))
(declare-fun C () (_ BitVec 48))
(declare-fun %Op () (_ BitVec 48))
(assert
 (let ((?x3563 (bvsub C3 C2)))
 (let ((?x5945 (ite (and (distinct ((_ extract 2 2) ?x3563) (_ bv0 1)) true) (_ bv2 11) (ite (and (distinct ((_ extract 1 1) ?x3563) (_ bv0 1)) true) (_ bv1 11) (_ bv0 11)))))
 (let ((?x6602 (ite (and (distinct ((_ extract 5 5) ?x3563) (_ bv0 1)) true) (_ bv5 11) (ite (and (distinct ((_ extract 4 4) ?x3563) (_ bv0 1)) true) (_ bv4 11) (_ bv3 11)))))
 (let ((?x1169 (ite (and (distinct ((_ extract 8 8) ?x3563) (_ bv0 1)) true) (_ bv8 11) (ite (and (distinct ((_ extract 7 7) ?x3563) (_ bv0 1)) true) (_ bv7 11) (_ bv6 11)))))
 (let ((?x6058 (ite (and (distinct ((_ extract 10 9) ?x3563) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) ?x3563) (_ bv0 1)) true) (_ bv10 11) (_ bv9 11)) ?x1169)))
 (let ((?x5476 (ite (and (distinct ((_ extract 10 6) ?x3563) (_ bv0 5)) true) ?x6058 (ite (and (distinct ((_ extract 5 3) ?x3563) (_ bv0 3)) true) ?x6602 ?x5945))))
 (let ((?x1630 (ite (and (distinct ((_ extract 2 2) C) (_ bv0 1)) true) (_ bv2 11) (ite (and (distinct ((_ extract 1 1) C) (_ bv0 1)) true) (_ bv1 11) (_ bv0 11)))))
 (let ((?x4972 (ite (and (distinct ((_ extract 5 5) C) (_ bv0 1)) true) (_ bv5 11) (ite (and (distinct ((_ extract 4 4) C) (_ bv0 1)) true) (_ bv4 11) (_ bv3 11)))))
 (let ((?x8122 (ite (and (distinct ((_ extract 8 8) C) (_ bv0 1)) true) (_ bv8 11) (ite (and (distinct ((_ extract 7 7) C) (_ bv0 1)) true) (_ bv7 11) (_ bv6 11)))))
 (let ((?x8258 (ite (and (distinct ((_ extract 11 11) C) (_ bv0 1)) true) (_ bv11 11) (ite (and (distinct ((_ extract 10 10) C) (_ bv0 1)) true) (_ bv10 11) (_ bv9 11)))))
 (let ((?x6075 (ite (and (distinct ((_ extract 11 6) C) (_ bv0 6)) true) (ite (and (distinct ((_ extract 11 9) C) (_ bv0 3)) true) ?x8258 ?x8122) (ite (and (distinct ((_ extract 5 3) C) (_ bv0 3)) true) ?x4972 ?x1630))))
 (let ((?x4111 (ite (and (distinct ((_ extract 14 14) C) (_ bv0 1)) true) (_ bv14 11) (ite (and (distinct ((_ extract 13 13) C) (_ bv0 1)) true) (_ bv13 11) (_ bv12 11)))))
 (let ((?x7874 (ite (and (distinct ((_ extract 17 17) C) (_ bv0 1)) true) (_ bv17 11) (ite (and (distinct ((_ extract 16 16) C) (_ bv0 1)) true) (_ bv16 11) (_ bv15 11)))))
 (let ((?x2753 (ite (and (distinct ((_ extract 20 20) C) (_ bv0 1)) true) (_ bv20 11) (ite (and (distinct ((_ extract 19 19) C) (_ bv0 1)) true) (_ bv19 11) (_ bv18 11)))))
 (let ((?x7656 (ite (and (distinct ((_ extract 23 23) C) (_ bv0 1)) true) (_ bv23 11) (ite (and (distinct ((_ extract 22 22) C) (_ bv0 1)) true) (_ bv22 11) (_ bv21 11)))))
 (let ((?x7368 (ite (and (distinct ((_ extract 23 18) C) (_ bv0 6)) true) (ite (and (distinct ((_ extract 23 21) C) (_ bv0 3)) true) ?x7656 ?x2753) (ite (and (distinct ((_ extract 17 15) C) (_ bv0 3)) true) ?x7874 ?x4111))))
 (let ((?x3828 (ite (and (distinct ((_ extract 26 26) C) (_ bv0 1)) true) (_ bv26 11) (ite (and (distinct ((_ extract 25 25) C) (_ bv0 1)) true) (_ bv25 11) (_ bv24 11)))))
 (let ((?x6772 (ite (and (distinct ((_ extract 29 29) C) (_ bv0 1)) true) (_ bv29 11) (ite (and (distinct ((_ extract 28 28) C) (_ bv0 1)) true) (_ bv28 11) (_ bv27 11)))))
 (let ((?x5542 (ite (and (distinct ((_ extract 32 32) C) (_ bv0 1)) true) (_ bv32 11) (ite (and (distinct ((_ extract 31 31) C) (_ bv0 1)) true) (_ bv31 11) (_ bv30 11)))))
 (let ((?x6727 (ite (and (distinct ((_ extract 35 35) C) (_ bv0 1)) true) (_ bv35 11) (ite (and (distinct ((_ extract 34 34) C) (_ bv0 1)) true) (_ bv34 11) (_ bv33 11)))))
 (let ((?x4418 (ite (and (distinct ((_ extract 35 30) C) (_ bv0 6)) true) (ite (and (distinct ((_ extract 35 33) C) (_ bv0 3)) true) ?x6727 ?x5542) (ite (and (distinct ((_ extract 29 27) C) (_ bv0 3)) true) ?x6772 ?x3828))))
 (let ((?x3941 (ite (and (distinct ((_ extract 38 38) C) (_ bv0 1)) true) (_ bv38 11) (ite (and (distinct ((_ extract 37 37) C) (_ bv0 1)) true) (_ bv37 11) (_ bv36 11)))))
 (let ((?x3202 (ite (and (distinct ((_ extract 41 41) C) (_ bv0 1)) true) (_ bv41 11) (ite (and (distinct ((_ extract 40 40) C) (_ bv0 1)) true) (_ bv40 11) (_ bv39 11)))))
 (let ((?x2853 (ite (and (distinct ((_ extract 44 44) C) (_ bv0 1)) true) (_ bv44 11) (ite (and (distinct ((_ extract 43 43) C) (_ bv0 1)) true) (_ bv43 11) (_ bv42 11)))))
 (let ((?x1347 (ite (and (distinct ((_ extract 47 47) C) (_ bv0 1)) true) (_ bv47 11) (ite (and (distinct ((_ extract 46 46) C) (_ bv0 1)) true) (_ bv46 11) (_ bv45 11)))))
 (let ((?x2075 (ite (and (distinct ((_ extract 47 42) C) (_ bv0 6)) true) (ite (and (distinct ((_ extract 47 45) C) (_ bv0 3)) true) ?x1347 ?x2853) (ite (and (distinct ((_ extract 41 39) C) (_ bv0 3)) true) ?x3202 ?x3941))))
 (let ((?x5916 (ite (and (distinct ((_ extract 47 24) C) (_ bv0 24)) true) (ite (and (distinct ((_ extract 47 36) C) (_ bv0 12)) true) ?x2075 ?x4418) (ite (and (distinct ((_ extract 23 12) C) (_ bv0 12)) true) ?x7368 ?x6075))))
 (let ((?x3329 (bvsub ?x5916 ?x5476)))
 (let ((?x6526 (ite (bvsgt (_ bv0 11) ?x3329) (_ bv0 11) ?x3329)))
 (let ((?x8150 (bvsub ?x5476 ?x5916)))
 (let ((?x3223 (ite (bvsgt (_ bv0 11) ?x8150) (_ bv0 11) ?x8150)))
 (let ((?x5148 (bvadd (bvxor (bvlshr (bvshl ((_ extract 10 0) (bvand %Op C)) ?x3223) ?x6526) ?x3563) C2)))
 (let ((?x1380 (ite (= (ite (and (distinct (bvand %Op C) (_ bv0 48)) true) (_ bv1 1) (_ bv0 1)) (_ bv1 1)) C2 C3)))
 (let ((?x6499 (ite (and (distinct ((_ extract 2 2) C) (_ bv0 1)) true) (_ bv2 32) (ite (and (distinct ((_ extract 1 1) C) (_ bv0 1)) true) (_ bv1 32) (_ bv0 32)))))
 (let ((?x5782 (ite (and (distinct ((_ extract 5 5) C) (_ bv0 1)) true) (_ bv5 32) (ite (and (distinct ((_ extract 4 4) C) (_ bv0 1)) true) (_ bv4 32) (_ bv3 32)))))
 (let ((?x5240 (ite (and (distinct ((_ extract 8 8) C) (_ bv0 1)) true) (_ bv8 32) (ite (and (distinct ((_ extract 7 7) C) (_ bv0 1)) true) (_ bv7 32) (_ bv6 32)))))
 (let ((?x4891 (ite (and (distinct ((_ extract 11 11) C) (_ bv0 1)) true) (_ bv11 32) (ite (and (distinct ((_ extract 10 10) C) (_ bv0 1)) true) (_ bv10 32) (_ bv9 32)))))
 (let ((?x7086 (ite (and (distinct ((_ extract 11 6) C) (_ bv0 6)) true) (ite (and (distinct ((_ extract 11 9) C) (_ bv0 3)) true) ?x4891 ?x5240) (ite (and (distinct ((_ extract 5 3) C) (_ bv0 3)) true) ?x5782 ?x6499))))
 (let ((?x4058 (ite (and (distinct ((_ extract 14 14) C) (_ bv0 1)) true) (_ bv14 32) (ite (and (distinct ((_ extract 13 13) C) (_ bv0 1)) true) (_ bv13 32) (_ bv12 32)))))
 (let ((?x3248 (ite (and (distinct ((_ extract 17 17) C) (_ bv0 1)) true) (_ bv17 32) (ite (and (distinct ((_ extract 16 16) C) (_ bv0 1)) true) (_ bv16 32) (_ bv15 32)))))
 (let ((?x2782 (ite (and (distinct ((_ extract 20 20) C) (_ bv0 1)) true) (_ bv20 32) (ite (and (distinct ((_ extract 19 19) C) (_ bv0 1)) true) (_ bv19 32) (_ bv18 32)))))
 (let ((?x2712 (ite (and (distinct ((_ extract 23 23) C) (_ bv0 1)) true) (_ bv23 32) (ite (and (distinct ((_ extract 22 22) C) (_ bv0 1)) true) (_ bv22 32) (_ bv21 32)))))
 (let ((?x4319 (ite (and (distinct ((_ extract 23 18) C) (_ bv0 6)) true) (ite (and (distinct ((_ extract 23 21) C) (_ bv0 3)) true) ?x2712 ?x2782) (ite (and (distinct ((_ extract 17 15) C) (_ bv0 3)) true) ?x3248 ?x4058))))
 (let ((?x1467 (ite (and (distinct ((_ extract 26 26) C) (_ bv0 1)) true) (_ bv26 32) (ite (and (distinct ((_ extract 25 25) C) (_ bv0 1)) true) (_ bv25 32) (_ bv24 32)))))
 (let ((?x2503 (ite (and (distinct ((_ extract 29 29) C) (_ bv0 1)) true) (_ bv29 32) (ite (and (distinct ((_ extract 28 28) C) (_ bv0 1)) true) (_ bv28 32) (_ bv27 32)))))
 (let ((?x6644 (ite (and (distinct ((_ extract 32 32) C) (_ bv0 1)) true) (_ bv32 32) (ite (and (distinct ((_ extract 31 31) C) (_ bv0 1)) true) (_ bv31 32) (_ bv30 32)))))
 (let ((?x1928 (ite (and (distinct ((_ extract 35 35) C) (_ bv0 1)) true) (_ bv35 32) (ite (and (distinct ((_ extract 34 34) C) (_ bv0 1)) true) (_ bv34 32) (_ bv33 32)))))
 (let ((?x1341 (ite (and (distinct ((_ extract 35 30) C) (_ bv0 6)) true) (ite (and (distinct ((_ extract 35 33) C) (_ bv0 3)) true) ?x1928 ?x6644) (ite (and (distinct ((_ extract 29 27) C) (_ bv0 3)) true) ?x2503 ?x1467))))
 (let ((?x1783 (ite (and (distinct ((_ extract 38 38) C) (_ bv0 1)) true) (_ bv38 32) (ite (and (distinct ((_ extract 37 37) C) (_ bv0 1)) true) (_ bv37 32) (_ bv36 32)))))
 (let ((?x6218 (ite (and (distinct ((_ extract 41 41) C) (_ bv0 1)) true) (_ bv41 32) (ite (and (distinct ((_ extract 40 40) C) (_ bv0 1)) true) (_ bv40 32) (_ bv39 32)))))
 (let ((?x4548 (ite (and (distinct ((_ extract 44 44) C) (_ bv0 1)) true) (_ bv44 32) (ite (and (distinct ((_ extract 43 43) C) (_ bv0 1)) true) (_ bv43 32) (_ bv42 32)))))
 (let ((?x2006 (ite (and (distinct ((_ extract 47 47) C) (_ bv0 1)) true) (_ bv47 32) (ite (and (distinct ((_ extract 46 46) C) (_ bv0 1)) true) (_ bv46 32) (_ bv45 32)))))
 (let ((?x1621 (ite (and (distinct ((_ extract 47 42) C) (_ bv0 6)) true) (ite (and (distinct ((_ extract 47 45) C) (_ bv0 3)) true) ?x2006 ?x4548) (ite (and (distinct ((_ extract 41 39) C) (_ bv0 3)) true) ?x6218 ?x1783))))
 (let ((?x7688 (ite (and (distinct ((_ extract 47 24) C) (_ bv0 24)) true) (ite (and (distinct ((_ extract 47 36) C) (_ bv0 12)) true) ?x1621 ?x1341) (ite (and (distinct ((_ extract 23 12) C) (_ bv0 12)) true) ?x4319 ?x7086))))
 (and (and (and (distinct C (_ bv0 48)) true) (= (bvand C (bvsub C (_ bv1 48))) (_ bv0 48))) (and (and (distinct ?x3563 (_ bv0 11)) true) (= (bvand ?x3563 (bvsub ?x3563 (_ bv1 11))) (_ bv0 11))) (bvslt ?x7688 (_ bv11 32)) (and (distinct ?x1380 ?x5148) true)))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
