(set-info :status unknown)
(declare-fun mem0 () (_ BitVec 8))
(declare-fun alloca%a_2947 () (_ BitVec 8))
(declare-fun %a () (_ BitVec 64))
(declare-fun idx () (_ BitVec 64))
(declare-fun %x () (_ BitVec 5))
(declare-fun %idx () (_ BitVec 5))
(declare-fun u_%a () (_ BitVec 8))
(declare-fun u_%ptr () (_ BitVec 8))
(assert
 (forall ((alloca%a_2946 (_ BitVec 8)) (alloca%a_2948 (_ BitVec 8)) )(let (($x7067 (= idx (bvadd %a (_ bv0 64)))))
 (let ((?x15916 (ite $x7067 ((_ extract 7 0) alloca%a_2947) mem0)))
 (let ((?x16835 (ite (= (bvadd %a (bvmul (_ bv1 64) ((_ sign_extend 59) %idx))) (bvadd %a (_ bv0 64))) ((_ extract 7 0) alloca%a_2946) mem0)))
 (let (($x10154 (bvuge (_ bv0 64) (bvsub (bvadd %a (bvmul (_ bv1 64) ((_ sign_extend 59) %idx))) %a))))
 (let (($x16864 (and (distinct %a (_ bv0 64)) true)))
 (let (($x3548 (and $x16864 (and (distinct (bvadd %a (bvmul (_ bv1 64) ((_ sign_extend 59) %idx))) (_ bv0 64)) true) (and (bvuge (bvadd %a (bvmul (_ bv1 64) ((_ sign_extend 59) %idx))) %a) $x10154) (= idx (bvadd %a (bvmul (_ bv1 64) ((_ sign_extend 59) %idx)))))))
 (let ((?x13523 (ite $x3548 (concat ((_ extract 7 5) ?x16835) ((_ extract 4 0) %x)) (ite $x7067 ((_ extract 7 0) alloca%a_2946) mem0))))
 (and $x16864 $x16864 (= u_%ptr (_ bv1 8)) (= u_%a (_ bv1 8)) $x16864 $x16864 $x16864 (and (distinct (ite $x7067 ((_ extract 7 0) alloca%a_2948) ?x13523) ?x15916) true))))))))))
 )
(check-sat)
