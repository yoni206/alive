(set-info :status unknown)
(declare-fun C3 () (_ BitVec 11))
(declare-fun C2 () (_ BitVec 11))
(declare-fun C () (_ BitVec 56))
(assert
 (let ((?x12721 (ite (and (distinct ((_ extract 2 2) (bvsub C2 C3)) (_ bv0 1)) true) (_ bv2 11) (ite (and (distinct ((_ extract 1 1) (bvsub C2 C3)) (_ bv0 1)) true) (_ bv1 11) (_ bv0 11)))))
 (let ((?x3319 (ite (and (distinct ((_ extract 5 5) (bvsub C2 C3)) (_ bv0 1)) true) (_ bv5 11) (ite (and (distinct ((_ extract 4 4) (bvsub C2 C3)) (_ bv0 1)) true) (_ bv4 11) (_ bv3 11)))))
 (let ((?x5634 (ite (and (distinct ((_ extract 8 8) (bvsub C2 C3)) (_ bv0 1)) true) (_ bv8 11) (ite (and (distinct ((_ extract 7 7) (bvsub C2 C3)) (_ bv0 1)) true) (_ bv7 11) (_ bv6 11)))))
 (let ((?x16399 (ite (and (distinct ((_ extract 10 9) (bvsub C2 C3)) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) (bvsub C2 C3)) (_ bv0 1)) true) (_ bv10 11) (_ bv9 11)) ?x5634)))
 (let ((?x13901 (ite (and (distinct ((_ extract 10 6) (bvsub C2 C3)) (_ bv0 5)) true) ?x16399 (ite (and (distinct ((_ extract 5 3) (bvsub C2 C3)) (_ bv0 3)) true) ?x3319 ?x12721))))
 (let ((?x2693 (ite (and (distinct ((_ extract 3 2) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 3 3) C) (_ bv0 1)) true) (_ bv3 11) (_ bv2 11)) (ite (and (distinct ((_ extract 1 1) C) (_ bv0 1)) true) (_ bv1 11) (_ bv0 11)))))
 (let ((?x7195 (ite (and (distinct ((_ extract 6 6) C) (_ bv0 1)) true) (_ bv6 11) (ite (and (distinct ((_ extract 5 5) C) (_ bv0 1)) true) (_ bv5 11) (_ bv4 11)))))
 (let ((?x10648 (ite (and (distinct ((_ extract 10 9) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) C) (_ bv0 1)) true) (_ bv10 11) (_ bv9 11)) (ite (and (distinct ((_ extract 8 8) C) (_ bv0 1)) true) (_ bv8 11) (_ bv7 11)))))
 (let ((?x10092 (ite (and (distinct ((_ extract 13 13) C) (_ bv0 1)) true) (_ bv13 11) (ite (and (distinct ((_ extract 12 12) C) (_ bv0 1)) true) (_ bv12 11) (_ bv11 11)))))
 (let ((?x1352 (ite (and (distinct ((_ extract 13 7) C) (_ bv0 7)) true) (ite (and (distinct ((_ extract 13 11) C) (_ bv0 3)) true) ?x10092 ?x10648) (ite (and (distinct ((_ extract 6 4) C) (_ bv0 3)) true) ?x7195 ?x2693))))
 (let ((?x20376 (ite (and (distinct ((_ extract 17 16) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 17 17) C) (_ bv0 1)) true) (_ bv17 11) (_ bv16 11)) (ite (and (distinct ((_ extract 15 15) C) (_ bv0 1)) true) (_ bv15 11) (_ bv14 11)))))
 (let ((?x20155 (ite (and (distinct ((_ extract 20 20) C) (_ bv0 1)) true) (_ bv20 11) (ite (and (distinct ((_ extract 19 19) C) (_ bv0 1)) true) (_ bv19 11) (_ bv18 11)))))
 (let ((?x18549 (ite (and (distinct ((_ extract 24 23) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 24 24) C) (_ bv0 1)) true) (_ bv24 11) (_ bv23 11)) (ite (and (distinct ((_ extract 22 22) C) (_ bv0 1)) true) (_ bv22 11) (_ bv21 11)))))
 (let ((?x16507 (ite (and (distinct ((_ extract 27 27) C) (_ bv0 1)) true) (_ bv27 11) (ite (and (distinct ((_ extract 26 26) C) (_ bv0 1)) true) (_ bv26 11) (_ bv25 11)))))
 (let ((?x8222 (ite (and (distinct ((_ extract 27 21) C) (_ bv0 7)) true) (ite (and (distinct ((_ extract 27 25) C) (_ bv0 3)) true) ?x16507 ?x18549) (ite (and (distinct ((_ extract 20 18) C) (_ bv0 3)) true) ?x20155 ?x20376))))
 (let ((?x19800 (ite (and (distinct ((_ extract 31 30) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 31 31) C) (_ bv0 1)) true) (_ bv31 11) (_ bv30 11)) (ite (and (distinct ((_ extract 29 29) C) (_ bv0 1)) true) (_ bv29 11) (_ bv28 11)))))
 (let ((?x15976 (ite (and (distinct ((_ extract 34 34) C) (_ bv0 1)) true) (_ bv34 11) (ite (and (distinct ((_ extract 33 33) C) (_ bv0 1)) true) (_ bv33 11) (_ bv32 11)))))
 (let ((?x14586 (ite (and (distinct ((_ extract 38 37) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 38 38) C) (_ bv0 1)) true) (_ bv38 11) (_ bv37 11)) (ite (and (distinct ((_ extract 36 36) C) (_ bv0 1)) true) (_ bv36 11) (_ bv35 11)))))
 (let ((?x7229 (ite (and (distinct ((_ extract 41 41) C) (_ bv0 1)) true) (_ bv41 11) (ite (and (distinct ((_ extract 40 40) C) (_ bv0 1)) true) (_ bv40 11) (_ bv39 11)))))
 (let ((?x12658 (ite (and (distinct ((_ extract 41 35) C) (_ bv0 7)) true) (ite (and (distinct ((_ extract 41 39) C) (_ bv0 3)) true) ?x7229 ?x14586) (ite (and (distinct ((_ extract 34 32) C) (_ bv0 3)) true) ?x15976 ?x19800))))
 (let ((?x2216 (ite (and (distinct ((_ extract 45 44) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 45 45) C) (_ bv0 1)) true) (_ bv45 11) (_ bv44 11)) (ite (and (distinct ((_ extract 43 43) C) (_ bv0 1)) true) (_ bv43 11) (_ bv42 11)))))
 (let ((?x1257 (ite (and (distinct ((_ extract 48 48) C) (_ bv0 1)) true) (_ bv48 11) (ite (and (distinct ((_ extract 47 47) C) (_ bv0 1)) true) (_ bv47 11) (_ bv46 11)))))
 (let ((?x8646 (ite (and (distinct ((_ extract 52 51) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 52 52) C) (_ bv0 1)) true) (_ bv52 11) (_ bv51 11)) (ite (and (distinct ((_ extract 50 50) C) (_ bv0 1)) true) (_ bv50 11) (_ bv49 11)))))
 (let ((?x2343 (ite (and (distinct ((_ extract 55 55) C) (_ bv0 1)) true) (_ bv55 11) (ite (and (distinct ((_ extract 54 54) C) (_ bv0 1)) true) (_ bv54 11) (_ bv53 11)))))
 (let ((?x8935 (ite (and (distinct ((_ extract 55 49) C) (_ bv0 7)) true) (ite (and (distinct ((_ extract 55 53) C) (_ bv0 3)) true) ?x2343 ?x8646) (ite (and (distinct ((_ extract 48 46) C) (_ bv0 3)) true) ?x1257 ?x2216))))
 (let ((?x1657 (ite (and (distinct ((_ extract 55 28) C) (_ bv0 28)) true) (ite (and (distinct ((_ extract 55 42) C) (_ bv0 14)) true) ?x8935 ?x12658) (ite (and (distinct ((_ extract 27 14) C) (_ bv0 14)) true) ?x8222 ?x1352))))
 (let ((?x7461 (bvsub ?x1657 ?x13901)))
 (let ((?x22988 (ite (bvsgt (_ bv0 11) ?x7461) (_ bv0 11) ?x7461)))
 (let ((?x286 (bvsub ?x13901 ?x1657)))
 (let ((?x25191 (ite (bvsgt (_ bv0 11) ?x286) (_ bv0 11) ?x286)))
 (let ((?x7353 (ite (and (distinct ((_ extract 3 2) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 3 3) C) (_ bv0 1)) true) (_ bv3 32) (_ bv2 32)) (ite (and (distinct ((_ extract 1 1) C) (_ bv0 1)) true) (_ bv1 32) (_ bv0 32)))))
 (let ((?x23854 (ite (and (distinct ((_ extract 6 6) C) (_ bv0 1)) true) (_ bv6 32) (ite (and (distinct ((_ extract 5 5) C) (_ bv0 1)) true) (_ bv5 32) (_ bv4 32)))))
 (let ((?x20655 (ite (and (distinct ((_ extract 10 9) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) C) (_ bv0 1)) true) (_ bv10 32) (_ bv9 32)) (ite (and (distinct ((_ extract 8 8) C) (_ bv0 1)) true) (_ bv8 32) (_ bv7 32)))))
 (let ((?x17845 (ite (and (distinct ((_ extract 13 13) C) (_ bv0 1)) true) (_ bv13 32) (ite (and (distinct ((_ extract 12 12) C) (_ bv0 1)) true) (_ bv12 32) (_ bv11 32)))))
 (let ((?x5233 (ite (and (distinct ((_ extract 13 7) C) (_ bv0 7)) true) (ite (and (distinct ((_ extract 13 11) C) (_ bv0 3)) true) ?x17845 ?x20655) (ite (and (distinct ((_ extract 6 4) C) (_ bv0 3)) true) ?x23854 ?x7353))))
 (let ((?x13578 (ite (and (distinct ((_ extract 17 16) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 17 17) C) (_ bv0 1)) true) (_ bv17 32) (_ bv16 32)) (ite (and (distinct ((_ extract 15 15) C) (_ bv0 1)) true) (_ bv15 32) (_ bv14 32)))))
 (let ((?x11337 (ite (and (distinct ((_ extract 20 20) C) (_ bv0 1)) true) (_ bv20 32) (ite (and (distinct ((_ extract 19 19) C) (_ bv0 1)) true) (_ bv19 32) (_ bv18 32)))))
 (let ((?x10296 (ite (and (distinct ((_ extract 24 23) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 24 24) C) (_ bv0 1)) true) (_ bv24 32) (_ bv23 32)) (ite (and (distinct ((_ extract 22 22) C) (_ bv0 1)) true) (_ bv22 32) (_ bv21 32)))))
 (let ((?x6979 (ite (and (distinct ((_ extract 27 27) C) (_ bv0 1)) true) (_ bv27 32) (ite (and (distinct ((_ extract 26 26) C) (_ bv0 1)) true) (_ bv26 32) (_ bv25 32)))))
 (let ((?x15720 (ite (and (distinct ((_ extract 27 21) C) (_ bv0 7)) true) (ite (and (distinct ((_ extract 27 25) C) (_ bv0 3)) true) ?x6979 ?x10296) (ite (and (distinct ((_ extract 20 18) C) (_ bv0 3)) true) ?x11337 ?x13578))))
 (let ((?x5699 (ite (and (distinct ((_ extract 31 30) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 31 31) C) (_ bv0 1)) true) (_ bv31 32) (_ bv30 32)) (ite (and (distinct ((_ extract 29 29) C) (_ bv0 1)) true) (_ bv29 32) (_ bv28 32)))))
 (let ((?x3525 (ite (and (distinct ((_ extract 34 34) C) (_ bv0 1)) true) (_ bv34 32) (ite (and (distinct ((_ extract 33 33) C) (_ bv0 1)) true) (_ bv33 32) (_ bv32 32)))))
 (let ((?x4485 (ite (and (distinct ((_ extract 38 37) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 38 38) C) (_ bv0 1)) true) (_ bv38 32) (_ bv37 32)) (ite (and (distinct ((_ extract 36 36) C) (_ bv0 1)) true) (_ bv36 32) (_ bv35 32)))))
 (let ((?x1399 (ite (and (distinct ((_ extract 41 41) C) (_ bv0 1)) true) (_ bv41 32) (ite (and (distinct ((_ extract 40 40) C) (_ bv0 1)) true) (_ bv40 32) (_ bv39 32)))))
 (let ((?x5358 (ite (and (distinct ((_ extract 41 35) C) (_ bv0 7)) true) (ite (and (distinct ((_ extract 41 39) C) (_ bv0 3)) true) ?x1399 ?x4485) (ite (and (distinct ((_ extract 34 32) C) (_ bv0 3)) true) ?x3525 ?x5699))))
 (let ((?x19782 (ite (and (distinct ((_ extract 45 44) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 45 45) C) (_ bv0 1)) true) (_ bv45 32) (_ bv44 32)) (ite (and (distinct ((_ extract 43 43) C) (_ bv0 1)) true) (_ bv43 32) (_ bv42 32)))))
 (let ((?x22871 (ite (and (distinct ((_ extract 48 48) C) (_ bv0 1)) true) (_ bv48 32) (ite (and (distinct ((_ extract 47 47) C) (_ bv0 1)) true) (_ bv47 32) (_ bv46 32)))))
 (let ((?x22935 (ite (and (distinct ((_ extract 52 51) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 52 52) C) (_ bv0 1)) true) (_ bv52 32) (_ bv51 32)) (ite (and (distinct ((_ extract 50 50) C) (_ bv0 1)) true) (_ bv50 32) (_ bv49 32)))))
 (let ((?x6653 (ite (and (distinct ((_ extract 55 55) C) (_ bv0 1)) true) (_ bv55 32) (ite (and (distinct ((_ extract 54 54) C) (_ bv0 1)) true) (_ bv54 32) (_ bv53 32)))))
 (let ((?x20220 (ite (and (distinct ((_ extract 55 49) C) (_ bv0 7)) true) (ite (and (distinct ((_ extract 55 53) C) (_ bv0 3)) true) ?x6653 ?x22935) (ite (and (distinct ((_ extract 48 46) C) (_ bv0 3)) true) ?x22871 ?x19782))))
 (let ((?x21953 (ite (and (distinct ((_ extract 55 28) C) (_ bv0 28)) true) (ite (and (distinct ((_ extract 55 42) C) (_ bv0 14)) true) ?x20220 ?x5358) (ite (and (distinct ((_ extract 27 14) C) (_ bv0 14)) true) ?x15720 ?x5233))))
 (let (($x4211 (and (and (distinct (bvsub C2 C3) (_ bv0 11)) true) (= (bvand (bvsub C2 C3) (bvsub (bvsub C2 C3) (_ bv1 11))) (_ bv0 11)))))
 (and (and (and (distinct C (_ bv0 56)) true) (= (bvand C (bvsub C (_ bv1 56))) (_ bv0 56))) $x4211 (bvslt ?x21953 (_ bv11 32)) (not (and (bvult ?x25191 (_ bv11 11)) (bvult ?x22988 (_ bv11 11))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
