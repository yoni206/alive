(set-info :status unknown)
(declare-fun C3 () (_ BitVec 11))
(declare-fun C2 () (_ BitVec 11))
(declare-fun C () (_ BitVec 55))
(assert
 (let ((?x4961 (ite (and (distinct ((_ extract 2 2) (bvsub C2 C3)) (_ bv0 1)) true) (_ bv2 11) (ite (and (distinct ((_ extract 1 1) (bvsub C2 C3)) (_ bv0 1)) true) (_ bv1 11) (_ bv0 11)))))
 (let ((?x3505 (ite (and (distinct ((_ extract 5 5) (bvsub C2 C3)) (_ bv0 1)) true) (_ bv5 11) (ite (and (distinct ((_ extract 4 4) (bvsub C2 C3)) (_ bv0 1)) true) (_ bv4 11) (_ bv3 11)))))
 (let ((?x8075 (ite (and (distinct ((_ extract 8 8) (bvsub C2 C3)) (_ bv0 1)) true) (_ bv8 11) (ite (and (distinct ((_ extract 7 7) (bvsub C2 C3)) (_ bv0 1)) true) (_ bv7 11) (_ bv6 11)))))
 (let ((?x3083 (ite (and (distinct ((_ extract 10 9) (bvsub C2 C3)) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) (bvsub C2 C3)) (_ bv0 1)) true) (_ bv10 11) (_ bv9 11)) ?x8075)))
 (let ((?x7089 (ite (and (distinct ((_ extract 10 6) (bvsub C2 C3)) (_ bv0 5)) true) ?x3083 (ite (and (distinct ((_ extract 5 3) (bvsub C2 C3)) (_ bv0 3)) true) ?x3505 ?x4961))))
 (let ((?x4917 (ite (and (distinct ((_ extract 3 2) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 3 3) C) (_ bv0 1)) true) (_ bv3 11) (_ bv2 11)) (ite (and (distinct ((_ extract 1 1) C) (_ bv0 1)) true) (_ bv1 11) (_ bv0 11)))))
 (let ((?x3210 (ite (and (distinct ((_ extract 6 6) C) (_ bv0 1)) true) (_ bv6 11) (ite (and (distinct ((_ extract 5 5) C) (_ bv0 1)) true) (_ bv5 11) (_ bv4 11)))))
 (let ((?x1822 (ite (and (distinct ((_ extract 10 9) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) C) (_ bv0 1)) true) (_ bv10 11) (_ bv9 11)) (ite (and (distinct ((_ extract 8 8) C) (_ bv0 1)) true) (_ bv8 11) (_ bv7 11)))))
 (let ((?x4623 (ite (and (distinct ((_ extract 13 13) C) (_ bv0 1)) true) (_ bv13 11) (ite (and (distinct ((_ extract 12 12) C) (_ bv0 1)) true) (_ bv12 11) (_ bv11 11)))))
 (let ((?x7149 (ite (and (distinct ((_ extract 13 7) C) (_ bv0 7)) true) (ite (and (distinct ((_ extract 13 11) C) (_ bv0 3)) true) ?x4623 ?x1822) (ite (and (distinct ((_ extract 6 4) C) (_ bv0 3)) true) ?x3210 ?x4917))))
 (let ((?x2652 (ite (and (distinct ((_ extract 17 16) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 17 17) C) (_ bv0 1)) true) (_ bv17 11) (_ bv16 11)) (ite (and (distinct ((_ extract 15 15) C) (_ bv0 1)) true) (_ bv15 11) (_ bv14 11)))))
 (let ((?x7625 (ite (and (distinct ((_ extract 20 20) C) (_ bv0 1)) true) (_ bv20 11) (ite (and (distinct ((_ extract 19 19) C) (_ bv0 1)) true) (_ bv19 11) (_ bv18 11)))))
 (let ((?x2961 (ite (and (distinct ((_ extract 24 23) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 24 24) C) (_ bv0 1)) true) (_ bv24 11) (_ bv23 11)) (ite (and (distinct ((_ extract 22 22) C) (_ bv0 1)) true) (_ bv22 11) (_ bv21 11)))))
 (let ((?x7568 (ite (and (distinct ((_ extract 27 27) C) (_ bv0 1)) true) (_ bv27 11) (ite (and (distinct ((_ extract 26 26) C) (_ bv0 1)) true) (_ bv26 11) (_ bv25 11)))))
 (let ((?x8341 (ite (and (distinct ((_ extract 27 21) C) (_ bv0 7)) true) (ite (and (distinct ((_ extract 27 25) C) (_ bv0 3)) true) ?x7568 ?x2961) (ite (and (distinct ((_ extract 20 18) C) (_ bv0 3)) true) ?x7625 ?x2652))))
 (let ((?x3683 (ite (and (distinct ((_ extract 31 30) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 31 31) C) (_ bv0 1)) true) (_ bv31 11) (_ bv30 11)) (ite (and (distinct ((_ extract 29 29) C) (_ bv0 1)) true) (_ bv29 11) (_ bv28 11)))))
 (let ((?x3393 (ite (and (distinct ((_ extract 34 34) C) (_ bv0 1)) true) (_ bv34 11) (ite (and (distinct ((_ extract 33 33) C) (_ bv0 1)) true) (_ bv33 11) (_ bv32 11)))))
 (let ((?x7034 (ite (and (distinct ((_ extract 38 37) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 38 38) C) (_ bv0 1)) true) (_ bv38 11) (_ bv37 11)) (ite (and (distinct ((_ extract 36 36) C) (_ bv0 1)) true) (_ bv36 11) (_ bv35 11)))))
 (let ((?x2482 (ite (and (distinct ((_ extract 41 41) C) (_ bv0 1)) true) (_ bv41 11) (ite (and (distinct ((_ extract 40 40) C) (_ bv0 1)) true) (_ bv40 11) (_ bv39 11)))))
 (let ((?x5652 (ite (and (distinct ((_ extract 41 35) C) (_ bv0 7)) true) (ite (and (distinct ((_ extract 41 39) C) (_ bv0 3)) true) ?x2482 ?x7034) (ite (and (distinct ((_ extract 34 32) C) (_ bv0 3)) true) ?x3393 ?x3683))))
 (let ((?x1688 (ite (and (distinct ((_ extract 45 44) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 45 45) C) (_ bv0 1)) true) (_ bv45 11) (_ bv44 11)) (ite (and (distinct ((_ extract 43 43) C) (_ bv0 1)) true) (_ bv43 11) (_ bv42 11)))))
 (let ((?x4894 (ite (and (distinct ((_ extract 48 48) C) (_ bv0 1)) true) (_ bv48 11) (ite (and (distinct ((_ extract 47 47) C) (_ bv0 1)) true) (_ bv47 11) (_ bv46 11)))))
 (let ((?x1555 (ite (and (distinct ((_ extract 51 51) C) (_ bv0 1)) true) (_ bv51 11) (ite (and (distinct ((_ extract 50 50) C) (_ bv0 1)) true) (_ bv50 11) (_ bv49 11)))))
 (let ((?x1370 (ite (and (distinct ((_ extract 54 54) C) (_ bv0 1)) true) (_ bv54 11) (ite (and (distinct ((_ extract 53 53) C) (_ bv0 1)) true) (_ bv53 11) (_ bv52 11)))))
 (let ((?x1604 (ite (and (distinct ((_ extract 54 49) C) (_ bv0 6)) true) (ite (and (distinct ((_ extract 54 52) C) (_ bv0 3)) true) ?x1370 ?x1555) (ite (and (distinct ((_ extract 48 46) C) (_ bv0 3)) true) ?x4894 ?x1688))))
 (let ((?x5370 (ite (and (distinct ((_ extract 54 28) C) (_ bv0 27)) true) (ite (and (distinct ((_ extract 54 42) C) (_ bv0 13)) true) ?x1604 ?x5652) (ite (and (distinct ((_ extract 27 14) C) (_ bv0 14)) true) ?x8341 ?x7149))))
 (let ((?x1782 (bvsub ?x5370 ?x7089)))
 (let ((?x5508 (ite (bvsgt (_ bv0 11) ?x1782) (_ bv0 11) ?x1782)))
 (let ((?x6415 (bvsub ?x7089 ?x5370)))
 (let ((?x5107 (ite (bvsgt (_ bv0 11) ?x6415) (_ bv0 11) ?x6415)))
 (let ((?x1966 (ite (and (distinct ((_ extract 3 2) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 3 3) C) (_ bv0 1)) true) (_ bv3 32) (_ bv2 32)) (ite (and (distinct ((_ extract 1 1) C) (_ bv0 1)) true) (_ bv1 32) (_ bv0 32)))))
 (let ((?x6027 (ite (and (distinct ((_ extract 6 6) C) (_ bv0 1)) true) (_ bv6 32) (ite (and (distinct ((_ extract 5 5) C) (_ bv0 1)) true) (_ bv5 32) (_ bv4 32)))))
 (let ((?x7978 (ite (and (distinct ((_ extract 10 9) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) C) (_ bv0 1)) true) (_ bv10 32) (_ bv9 32)) (ite (and (distinct ((_ extract 8 8) C) (_ bv0 1)) true) (_ bv8 32) (_ bv7 32)))))
 (let ((?x6777 (ite (and (distinct ((_ extract 13 13) C) (_ bv0 1)) true) (_ bv13 32) (ite (and (distinct ((_ extract 12 12) C) (_ bv0 1)) true) (_ bv12 32) (_ bv11 32)))))
 (let ((?x3884 (ite (and (distinct ((_ extract 13 7) C) (_ bv0 7)) true) (ite (and (distinct ((_ extract 13 11) C) (_ bv0 3)) true) ?x6777 ?x7978) (ite (and (distinct ((_ extract 6 4) C) (_ bv0 3)) true) ?x6027 ?x1966))))
 (let ((?x5696 (ite (and (distinct ((_ extract 17 16) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 17 17) C) (_ bv0 1)) true) (_ bv17 32) (_ bv16 32)) (ite (and (distinct ((_ extract 15 15) C) (_ bv0 1)) true) (_ bv15 32) (_ bv14 32)))))
 (let ((?x5505 (ite (and (distinct ((_ extract 20 20) C) (_ bv0 1)) true) (_ bv20 32) (ite (and (distinct ((_ extract 19 19) C) (_ bv0 1)) true) (_ bv19 32) (_ bv18 32)))))
 (let ((?x4602 (ite (and (distinct ((_ extract 24 23) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 24 24) C) (_ bv0 1)) true) (_ bv24 32) (_ bv23 32)) (ite (and (distinct ((_ extract 22 22) C) (_ bv0 1)) true) (_ bv22 32) (_ bv21 32)))))
 (let ((?x4568 (ite (and (distinct ((_ extract 27 27) C) (_ bv0 1)) true) (_ bv27 32) (ite (and (distinct ((_ extract 26 26) C) (_ bv0 1)) true) (_ bv26 32) (_ bv25 32)))))
 (let ((?x6040 (ite (and (distinct ((_ extract 27 21) C) (_ bv0 7)) true) (ite (and (distinct ((_ extract 27 25) C) (_ bv0 3)) true) ?x4568 ?x4602) (ite (and (distinct ((_ extract 20 18) C) (_ bv0 3)) true) ?x5505 ?x5696))))
 (let ((?x3138 (ite (and (distinct ((_ extract 31 30) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 31 31) C) (_ bv0 1)) true) (_ bv31 32) (_ bv30 32)) (ite (and (distinct ((_ extract 29 29) C) (_ bv0 1)) true) (_ bv29 32) (_ bv28 32)))))
 (let ((?x1711 (ite (and (distinct ((_ extract 34 34) C) (_ bv0 1)) true) (_ bv34 32) (ite (and (distinct ((_ extract 33 33) C) (_ bv0 1)) true) (_ bv33 32) (_ bv32 32)))))
 (let ((?x3183 (ite (and (distinct ((_ extract 38 37) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 38 38) C) (_ bv0 1)) true) (_ bv38 32) (_ bv37 32)) (ite (and (distinct ((_ extract 36 36) C) (_ bv0 1)) true) (_ bv36 32) (_ bv35 32)))))
 (let ((?x3471 (ite (and (distinct ((_ extract 41 41) C) (_ bv0 1)) true) (_ bv41 32) (ite (and (distinct ((_ extract 40 40) C) (_ bv0 1)) true) (_ bv40 32) (_ bv39 32)))))
 (let ((?x3782 (ite (and (distinct ((_ extract 41 35) C) (_ bv0 7)) true) (ite (and (distinct ((_ extract 41 39) C) (_ bv0 3)) true) ?x3471 ?x3183) (ite (and (distinct ((_ extract 34 32) C) (_ bv0 3)) true) ?x1711 ?x3138))))
 (let ((?x1528 (ite (and (distinct ((_ extract 45 44) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 45 45) C) (_ bv0 1)) true) (_ bv45 32) (_ bv44 32)) (ite (and (distinct ((_ extract 43 43) C) (_ bv0 1)) true) (_ bv43 32) (_ bv42 32)))))
 (let ((?x6710 (ite (and (distinct ((_ extract 48 48) C) (_ bv0 1)) true) (_ bv48 32) (ite (and (distinct ((_ extract 47 47) C) (_ bv0 1)) true) (_ bv47 32) (_ bv46 32)))))
 (let ((?x6354 (ite (and (distinct ((_ extract 51 51) C) (_ bv0 1)) true) (_ bv51 32) (ite (and (distinct ((_ extract 50 50) C) (_ bv0 1)) true) (_ bv50 32) (_ bv49 32)))))
 (let ((?x2208 (ite (and (distinct ((_ extract 54 54) C) (_ bv0 1)) true) (_ bv54 32) (ite (and (distinct ((_ extract 53 53) C) (_ bv0 1)) true) (_ bv53 32) (_ bv52 32)))))
 (let ((?x6881 (ite (and (distinct ((_ extract 54 49) C) (_ bv0 6)) true) (ite (and (distinct ((_ extract 54 52) C) (_ bv0 3)) true) ?x2208 ?x6354) (ite (and (distinct ((_ extract 48 46) C) (_ bv0 3)) true) ?x6710 ?x1528))))
 (let ((?x1575 (ite (and (distinct ((_ extract 54 28) C) (_ bv0 27)) true) (ite (and (distinct ((_ extract 54 42) C) (_ bv0 13)) true) ?x6881 ?x3782) (ite (and (distinct ((_ extract 27 14) C) (_ bv0 14)) true) ?x6040 ?x3884))))
 (let (($x1131 (and (and (distinct (bvsub C2 C3) (_ bv0 11)) true) (= (bvand (bvsub C2 C3) (bvsub (bvsub C2 C3) (_ bv1 11))) (_ bv0 11)))))
 (and (and (and (distinct C (_ bv0 55)) true) (= (bvand C (bvsub C (_ bv1 55))) (_ bv0 55))) $x1131 (bvslt ?x1575 (_ bv11 32)) (not (and (bvult ?x5107 (_ bv11 11)) (bvult ?x5508 (_ bv11 11))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
