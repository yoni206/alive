(set-info :status unknown)
(declare-fun %Y () (_ BitVec 11))
(declare-fun C2 () (_ BitVec 11))
(declare-fun C1 () (_ BitVec 34))
(declare-fun %X () (_ BitVec 34))
(assert
 (let ((?x5692 (ite (and (distinct ((_ extract 2 2) C2) (_ bv0 1)) true) (_ bv2 34) (ite (and (distinct ((_ extract 1 1) C2) (_ bv0 1)) true) (_ bv1 34) (_ bv0 34)))))
 (let ((?x2516 (ite (and (distinct ((_ extract 5 5) C2) (_ bv0 1)) true) (_ bv5 34) (ite (and (distinct ((_ extract 4 4) C2) (_ bv0 1)) true) (_ bv4 34) (_ bv3 34)))))
 (let ((?x6024 (ite (and (distinct ((_ extract 8 8) C2) (_ bv0 1)) true) (_ bv8 34) (ite (and (distinct ((_ extract 7 7) C2) (_ bv0 1)) true) (_ bv7 34) (_ bv6 34)))))
 (let ((?x4728 (ite (and (distinct ((_ extract 10 9) C2) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) C2) (_ bv0 1)) true) (_ bv10 34) (_ bv9 34)) ?x6024)))
 (let ((?x6466 (ite (and (distinct ((_ extract 10 6) C2) (_ bv0 5)) true) ?x4728 (ite (and (distinct ((_ extract 5 3) C2) (_ bv0 3)) true) ?x2516 ?x5692))))
 (let ((?x5426 (ite (and (distinct ((_ extract 2 2) C1) (_ bv0 1)) true) (_ bv2 34) (ite (and (distinct ((_ extract 1 1) C1) (_ bv0 1)) true) (_ bv1 34) (_ bv0 34)))))
 (let ((?x3020 (ite (and (distinct ((_ extract 4 3) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 4 4) C1) (_ bv0 1)) true) (_ bv4 34) (_ bv3 34)) ?x5426)))
 (let ((?x5702 (ite (and (distinct ((_ extract 8 7) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 8 8) C1) (_ bv0 1)) true) (_ bv8 34) (_ bv7 34)) (ite (and (distinct ((_ extract 6 6) C1) (_ bv0 1)) true) (_ bv6 34) (_ bv5 34)))))
 (let ((?x1419 (ite (and (distinct ((_ extract 12 11) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 12 12) C1) (_ bv0 1)) true) (_ bv12 34) (_ bv11 34)) (ite (and (distinct ((_ extract 10 10) C1) (_ bv0 1)) true) (_ bv10 34) (_ bv9 34)))))
 (let ((?x5963 (ite (and (distinct ((_ extract 16 15) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 16 16) C1) (_ bv0 1)) true) (_ bv16 34) (_ bv15 34)) (ite (and (distinct ((_ extract 14 14) C1) (_ bv0 1)) true) (_ bv14 34) (_ bv13 34)))))
 (let ((?x6854 (ite (and (distinct ((_ extract 16 9) C1) (_ bv0 8)) true) (ite (and (distinct ((_ extract 16 13) C1) (_ bv0 4)) true) ?x5963 ?x1419) (ite (and (distinct ((_ extract 8 5) C1) (_ bv0 4)) true) ?x5702 ?x3020))))
 (let ((?x2705 (ite (and (distinct ((_ extract 19 19) C1) (_ bv0 1)) true) (_ bv19 34) (ite (and (distinct ((_ extract 18 18) C1) (_ bv0 1)) true) (_ bv18 34) (_ bv17 34)))))
 (let ((?x5147 (ite (and (distinct ((_ extract 21 20) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 21 21) C1) (_ bv0 1)) true) (_ bv21 34) (_ bv20 34)) ?x2705)))
 (let ((?x3852 (ite (and (distinct ((_ extract 25 24) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 25 25) C1) (_ bv0 1)) true) (_ bv25 34) (_ bv24 34)) (ite (and (distinct ((_ extract 23 23) C1) (_ bv0 1)) true) (_ bv23 34) (_ bv22 34)))))
 (let ((?x4994 (ite (and (distinct ((_ extract 29 28) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 29 29) C1) (_ bv0 1)) true) (_ bv29 34) (_ bv28 34)) (ite (and (distinct ((_ extract 27 27) C1) (_ bv0 1)) true) (_ bv27 34) (_ bv26 34)))))
 (let ((?x2733 (ite (and (distinct ((_ extract 33 32) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 33 33) C1) (_ bv0 1)) true) (_ bv33 34) (_ bv32 34)) (ite (and (distinct ((_ extract 31 31) C1) (_ bv0 1)) true) (_ bv31 34) (_ bv30 34)))))
 (let ((?x2832 (ite (and (distinct ((_ extract 33 26) C1) (_ bv0 8)) true) (ite (and (distinct ((_ extract 33 30) C1) (_ bv0 4)) true) ?x2733 ?x4994) (ite (and (distinct ((_ extract 25 22) C1) (_ bv0 4)) true) ?x3852 ?x5147))))
 (let ((?x4526 (bvsub (ite (and (distinct ((_ extract 33 17) C1) (_ bv0 17)) true) ?x2832 ?x6854) ?x6466)))
 (let ((?x2578 (bvand %X C1)))
 (let ((?x4328 (bvor %Y C2)))
 (let (($x6727 (and (distinct (ite (= (ite (and (distinct ?x2578 (_ bv0 34)) true) (_ bv1 1) (_ bv0 1)) (_ bv1 1)) ?x4328 %Y) (bvor ((_ extract 10 0) (bvlshr ?x2578 ?x4526)) %Y)) true)))
 (let ((?x5862 (ite (and (distinct ((_ extract 2 2) C1) (_ bv0 1)) true) (_ bv2 32) (ite (and (distinct ((_ extract 1 1) C1) (_ bv0 1)) true) (_ bv1 32) (_ bv0 32)))))
 (let ((?x2307 (ite (and (distinct ((_ extract 4 3) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 4 4) C1) (_ bv0 1)) true) (_ bv4 32) (_ bv3 32)) ?x5862)))
 (let ((?x5758 (ite (and (distinct ((_ extract 8 7) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 8 8) C1) (_ bv0 1)) true) (_ bv8 32) (_ bv7 32)) (ite (and (distinct ((_ extract 6 6) C1) (_ bv0 1)) true) (_ bv6 32) (_ bv5 32)))))
 (let ((?x5164 (ite (and (distinct ((_ extract 12 11) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 12 12) C1) (_ bv0 1)) true) (_ bv12 32) (_ bv11 32)) (ite (and (distinct ((_ extract 10 10) C1) (_ bv0 1)) true) (_ bv10 32) (_ bv9 32)))))
 (let ((?x4276 (ite (and (distinct ((_ extract 16 15) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 16 16) C1) (_ bv0 1)) true) (_ bv16 32) (_ bv15 32)) (ite (and (distinct ((_ extract 14 14) C1) (_ bv0 1)) true) (_ bv14 32) (_ bv13 32)))))
 (let ((?x1308 (ite (and (distinct ((_ extract 16 9) C1) (_ bv0 8)) true) (ite (and (distinct ((_ extract 16 13) C1) (_ bv0 4)) true) ?x4276 ?x5164) (ite (and (distinct ((_ extract 8 5) C1) (_ bv0 4)) true) ?x5758 ?x2307))))
 (let ((?x3751 (ite (and (distinct ((_ extract 19 19) C1) (_ bv0 1)) true) (_ bv19 32) (ite (and (distinct ((_ extract 18 18) C1) (_ bv0 1)) true) (_ bv18 32) (_ bv17 32)))))
 (let ((?x3567 (ite (and (distinct ((_ extract 21 20) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 21 21) C1) (_ bv0 1)) true) (_ bv21 32) (_ bv20 32)) ?x3751)))
 (let ((?x1985 (ite (and (distinct ((_ extract 25 24) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 25 25) C1) (_ bv0 1)) true) (_ bv25 32) (_ bv24 32)) (ite (and (distinct ((_ extract 23 23) C1) (_ bv0 1)) true) (_ bv23 32) (_ bv22 32)))))
 (let ((?x3224 (ite (and (distinct ((_ extract 29 28) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 29 29) C1) (_ bv0 1)) true) (_ bv29 32) (_ bv28 32)) (ite (and (distinct ((_ extract 27 27) C1) (_ bv0 1)) true) (_ bv27 32) (_ bv26 32)))))
 (let ((?x2854 (ite (and (distinct ((_ extract 33 32) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 33 33) C1) (_ bv0 1)) true) (_ bv33 32) (_ bv32 32)) (ite (and (distinct ((_ extract 31 31) C1) (_ bv0 1)) true) (_ bv31 32) (_ bv30 32)))))
 (let ((?x3089 (ite (and (distinct ((_ extract 33 26) C1) (_ bv0 8)) true) (ite (and (distinct ((_ extract 33 30) C1) (_ bv0 4)) true) ?x2854 ?x3224) (ite (and (distinct ((_ extract 25 22) C1) (_ bv0 4)) true) ?x1985 ?x3567))))
 (let ((?x6770 (ite (and (distinct ((_ extract 2 2) C2) (_ bv0 1)) true) (_ bv2 32) (ite (and (distinct ((_ extract 1 1) C2) (_ bv0 1)) true) (_ bv1 32) (_ bv0 32)))))
 (let ((?x1377 (ite (and (distinct ((_ extract 5 5) C2) (_ bv0 1)) true) (_ bv5 32) (ite (and (distinct ((_ extract 4 4) C2) (_ bv0 1)) true) (_ bv4 32) (_ bv3 32)))))
 (let ((?x3021 (ite (and (distinct ((_ extract 8 8) C2) (_ bv0 1)) true) (_ bv8 32) (ite (and (distinct ((_ extract 7 7) C2) (_ bv0 1)) true) (_ bv7 32) (_ bv6 32)))))
 (let ((?x3287 (ite (and (distinct ((_ extract 10 9) C2) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) C2) (_ bv0 1)) true) (_ bv10 32) (_ bv9 32)) ?x3021)))
 (let ((?x2816 (ite (and (distinct ((_ extract 10 6) C2) (_ bv0 5)) true) ?x3287 (ite (and (distinct ((_ extract 5 3) C2) (_ bv0 3)) true) ?x1377 ?x6770))))
 (and (and (and (distinct C1 (_ bv0 34)) true) (= (bvand C1 (bvsub C1 (_ bv1 34))) (_ bv0 34))) (and (and (distinct C2 (_ bv0 11)) true) (= (bvand C2 (bvsub C2 (_ bv1 11))) (_ bv0 11))) (bvslt ?x2816 (ite (and (distinct ((_ extract 33 17) C1) (_ bv0 17)) true) ?x3089 ?x1308)) $x6727))))))))))))))))))))))))))))))))))))))))
(check-sat)
