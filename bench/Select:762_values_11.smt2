(set-info :status unknown)
(declare-fun C3 () (_ BitVec 11))
(declare-fun C2 () (_ BitVec 11))
(declare-fun C () (_ BitVec 15))
(declare-fun %Op () (_ BitVec 15))
(assert
 (let ((?x4640 (bvsub C2 C3)))
 (let ((?x3092 (ite (and (distinct ((_ extract 2 2) ?x4640) (_ bv0 1)) true) (_ bv2 11) (ite (and (distinct ((_ extract 1 1) ?x4640) (_ bv0 1)) true) (_ bv1 11) (_ bv0 11)))))
 (let ((?x1416 (ite (and (distinct ((_ extract 5 5) ?x4640) (_ bv0 1)) true) (_ bv5 11) (ite (and (distinct ((_ extract 4 4) ?x4640) (_ bv0 1)) true) (_ bv4 11) (_ bv3 11)))))
 (let ((?x6066 (ite (and (distinct ((_ extract 8 8) ?x4640) (_ bv0 1)) true) (_ bv8 11) (ite (and (distinct ((_ extract 7 7) ?x4640) (_ bv0 1)) true) (_ bv7 11) (_ bv6 11)))))
 (let ((?x14717 (ite (and (distinct ((_ extract 10 9) ?x4640) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) ?x4640) (_ bv0 1)) true) (_ bv10 11) (_ bv9 11)) ?x6066)))
 (let ((?x1654 (ite (and (distinct ((_ extract 10 6) ?x4640) (_ bv0 5)) true) ?x14717 (ite (and (distinct ((_ extract 5 3) ?x4640) (_ bv0 3)) true) ?x1416 ?x3092))))
 (let ((?x15744 (ite (and (distinct ((_ extract 3 2) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 3 3) C) (_ bv0 1)) true) (_ bv3 11) (_ bv2 11)) (ite (and (distinct ((_ extract 1 1) C) (_ bv0 1)) true) (_ bv1 11) (_ bv0 11)))))
 (let ((?x18690 (ite (and (distinct ((_ extract 7 6) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 7 7) C) (_ bv0 1)) true) (_ bv7 11) (_ bv6 11)) (ite (and (distinct ((_ extract 5 5) C) (_ bv0 1)) true) (_ bv5 11) (_ bv4 11)))))
 (let ((?x21435 (ite (and (distinct ((_ extract 11 10) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 11 11) C) (_ bv0 1)) true) (_ bv11 11) (_ bv10 11)) (ite (and (distinct ((_ extract 9 9) C) (_ bv0 1)) true) (_ bv9 11) (_ bv8 11)))))
 (let ((?x10524 (ite (and (distinct ((_ extract 14 14) C) (_ bv0 1)) true) (_ bv14 11) (ite (and (distinct ((_ extract 13 13) C) (_ bv0 1)) true) (_ bv13 11) (_ bv12 11)))))
 (let ((?x8435 (ite (and (distinct ((_ extract 14 8) C) (_ bv0 7)) true) (ite (and (distinct ((_ extract 14 12) C) (_ bv0 3)) true) ?x10524 ?x21435) (ite (and (distinct ((_ extract 7 4) C) (_ bv0 4)) true) ?x18690 ?x15744))))
 (let ((?x2700 (bvsub ?x8435 ?x1654)))
 (let ((?x133 (ite (bvsgt (_ bv0 11) ?x2700) (_ bv0 11) ?x2700)))
 (let ((?x25094 (bvsub ?x1654 ?x8435)))
 (let ((?x10409 (ite (bvsgt (_ bv0 11) ?x25094) (_ bv0 11) ?x25094)))
 (let ((?x11106 (bvadd (bvxor (bvlshr (bvshl ((_ extract 10 0) (bvand %Op C)) ?x10409) ?x133) ?x4640) C3)))
 (let (($x216 (and (distinct (ite (= (ite (= (bvand %Op C) (_ bv0 15)) (_ bv1 1) (_ bv0 1)) (_ bv1 1)) C2 C3) ?x11106) true)))
 (let ((?x14279 (ite (and (distinct ((_ extract 3 2) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 3 3) C) (_ bv0 1)) true) (_ bv3 32) (_ bv2 32)) (ite (and (distinct ((_ extract 1 1) C) (_ bv0 1)) true) (_ bv1 32) (_ bv0 32)))))
 (let ((?x9118 (ite (and (distinct ((_ extract 7 6) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 7 7) C) (_ bv0 1)) true) (_ bv7 32) (_ bv6 32)) (ite (and (distinct ((_ extract 5 5) C) (_ bv0 1)) true) (_ bv5 32) (_ bv4 32)))))
 (let ((?x3219 (ite (and (distinct ((_ extract 11 10) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 11 11) C) (_ bv0 1)) true) (_ bv11 32) (_ bv10 32)) (ite (and (distinct ((_ extract 9 9) C) (_ bv0 1)) true) (_ bv9 32) (_ bv8 32)))))
 (let ((?x5911 (ite (and (distinct ((_ extract 14 14) C) (_ bv0 1)) true) (_ bv14 32) (ite (and (distinct ((_ extract 13 13) C) (_ bv0 1)) true) (_ bv13 32) (_ bv12 32)))))
 (let ((?x13655 (ite (and (distinct ((_ extract 14 8) C) (_ bv0 7)) true) (ite (and (distinct ((_ extract 14 12) C) (_ bv0 3)) true) ?x5911 ?x3219) (ite (and (distinct ((_ extract 7 4) C) (_ bv0 4)) true) ?x9118 ?x14279))))
 (and (and (and (distinct C (_ bv0 15)) true) (= (bvand C (bvsub C (_ bv1 15))) (_ bv0 15))) (and (and (distinct ?x4640 (_ bv0 11)) true) (= (bvand ?x4640 (bvsub ?x4640 (_ bv1 11))) (_ bv0 11))) (bvslt ?x13655 (_ bv11 32)) $x216))))))))))))))))))))))))
(check-sat)
