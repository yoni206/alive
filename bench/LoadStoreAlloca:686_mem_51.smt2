(set-info :status unknown)
(declare-fun mem0 () (_ BitVec 8))
(declare-fun %p2 () (_ BitVec 64))
(declare-fun idx () (_ BitVec 64))
(declare-fun %p1 () (_ BitVec 64))
(declare-fun |ana_equivalentAddressValues(%p1, %p2)| () (_ BitVec 1))
(assert
 (let ((?x8148 (concat (concat (concat (concat (concat mem0 mem0) mem0) mem0) mem0) mem0)))
 (let ((?x1088 (concat ?x8148 ((_ extract 6 0) mem0))))
 (let (($x15398 (or true true)))
 (let (($x15642 (and (distinct %p2 (_ bv0 64)) true)))
 (let (($x7122 (and (distinct %p1 (_ bv0 64)) true)))
 (let ((?x22732 (ite (and $x7122 $x15398 $x7122 $x15398 $x7122 $x15398 $x15642 $x15398 (= idx %p2)) (concat ((_ extract 7 7) mem0) ((_ extract 6 0) ?x1088)) mem0)))
 (let (($x15581 (and $x7122 $x15398 $x7122 $x15398 $x7122 $x15398 $x15642 $x15398 (= idx (bvadd (bvadd %p2 (_ bv1 64)) (_ bv0 64))))))
 (let (($x20180 (and $x7122 $x15398 $x7122 $x15398 $x7122 $x15398 $x15642 $x15398 (= idx (bvadd (bvadd %p2 (_ bv1 64)) (_ bv1 64))))))
 (let (($x16243 (and $x7122 $x15398 $x7122 $x15398 $x7122 $x15398 $x15642 $x15398 (= idx (bvadd (bvadd %p2 (_ bv1 64)) (_ bv2 64))))))
 (let ((?x15939 (ite $x16243 ((_ extract 30 23) ?x1088) (ite $x20180 ((_ extract 22 15) ?x1088) (ite $x15581 ((_ extract 14 7) ?x1088) ?x22732)))))
 (let (($x6657 (and $x7122 $x15398 $x7122 $x15398 $x7122 $x15398 $x15642 $x15398 (= idx (bvadd (bvadd %p2 (_ bv1 64)) (_ bv3 64))))))
 (let (($x23024 (and $x7122 $x15398 $x7122 $x15398 $x7122 $x15398 $x15642 $x15398 (= idx (bvadd (bvadd %p2 (_ bv1 64)) (_ bv4 64))))))
 (let (($x7360 (and $x7122 $x15398 $x7122 $x15398 $x7122 $x15398 $x15642 $x15398 (= idx (bvadd (bvadd %p2 (_ bv1 64)) (_ bv5 64))))))
 (let ((?x22768 (ite $x7360 ((_ extract 54 47) ?x1088) (ite $x23024 ((_ extract 46 39) ?x1088) (ite $x6657 ((_ extract 38 31) ?x1088) ?x15939)))))
 (let (($x14327 (= |ana_equivalentAddressValues(%p1, %p2)| (_ bv1 1))))
 (and (=> $x14327 (= %p1 %p2)) $x14327 (and (distinct ?x22768 mem0) true))))))))))))))))))
(check-sat)
