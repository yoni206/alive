(set-info :status unknown)
(declare-fun C2 () (_ BitVec 11))
(declare-fun C1 () (_ BitVec 40))
(assert
 (let ((?x2079 (ite (and (distinct ((_ extract 2 2) C2) (_ bv0 1)) true) (_ bv2 40) (ite (and (distinct ((_ extract 1 1) C2) (_ bv0 1)) true) (_ bv1 40) (_ bv0 40)))))
 (let ((?x5691 (ite (and (distinct ((_ extract 5 5) C2) (_ bv0 1)) true) (_ bv5 40) (ite (and (distinct ((_ extract 4 4) C2) (_ bv0 1)) true) (_ bv4 40) (_ bv3 40)))))
 (let ((?x3644 (ite (and (distinct ((_ extract 8 8) C2) (_ bv0 1)) true) (_ bv8 40) (ite (and (distinct ((_ extract 7 7) C2) (_ bv0 1)) true) (_ bv7 40) (_ bv6 40)))))
 (let ((?x4784 (ite (and (distinct ((_ extract 10 9) C2) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) C2) (_ bv0 1)) true) (_ bv10 40) (_ bv9 40)) ?x3644)))
 (let ((?x3567 (ite (and (distinct ((_ extract 10 6) C2) (_ bv0 5)) true) ?x4784 (ite (and (distinct ((_ extract 5 3) C2) (_ bv0 3)) true) ?x5691 ?x2079))))
 (let ((?x5712 (ite (and (distinct ((_ extract 2 2) C1) (_ bv0 1)) true) (_ bv2 40) (ite (and (distinct ((_ extract 1 1) C1) (_ bv0 1)) true) (_ bv1 40) (_ bv0 40)))))
 (let ((?x4097 (ite (and (distinct ((_ extract 4 3) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 4 4) C1) (_ bv0 1)) true) (_ bv4 40) (_ bv3 40)) ?x5712)))
 (let ((?x2033 (ite (and (distinct ((_ extract 7 7) C1) (_ bv0 1)) true) (_ bv7 40) (ite (and (distinct ((_ extract 6 6) C1) (_ bv0 1)) true) (_ bv6 40) (_ bv5 40)))))
 (let ((?x5428 (ite (and (distinct ((_ extract 9 8) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 9 9) C1) (_ bv0 1)) true) (_ bv9 40) (_ bv8 40)) ?x2033)))
 (let ((?x3246 (ite (and (distinct ((_ extract 12 12) C1) (_ bv0 1)) true) (_ bv12 40) (ite (and (distinct ((_ extract 11 11) C1) (_ bv0 1)) true) (_ bv11 40) (_ bv10 40)))))
 (let ((?x2861 (ite (and (distinct ((_ extract 14 13) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 14 14) C1) (_ bv0 1)) true) (_ bv14 40) (_ bv13 40)) ?x3246)))
 (let ((?x2104 (ite (and (distinct ((_ extract 17 17) C1) (_ bv0 1)) true) (_ bv17 40) (ite (and (distinct ((_ extract 16 16) C1) (_ bv0 1)) true) (_ bv16 40) (_ bv15 40)))))
 (let ((?x2017 (ite (and (distinct ((_ extract 19 18) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 19 19) C1) (_ bv0 1)) true) (_ bv19 40) (_ bv18 40)) ?x2104)))
 (let ((?x5545 (ite (and (distinct ((_ extract 19 10) C1) (_ bv0 10)) true) (ite (and (distinct ((_ extract 19 15) C1) (_ bv0 5)) true) ?x2017 ?x2861) (ite (and (distinct ((_ extract 9 5) C1) (_ bv0 5)) true) ?x5428 ?x4097))))
 (let ((?x2208 (ite (and (distinct ((_ extract 22 22) C1) (_ bv0 1)) true) (_ bv22 40) (ite (and (distinct ((_ extract 21 21) C1) (_ bv0 1)) true) (_ bv21 40) (_ bv20 40)))))
 (let ((?x4031 (ite (and (distinct ((_ extract 24 23) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 24 24) C1) (_ bv0 1)) true) (_ bv24 40) (_ bv23 40)) ?x2208)))
 (let ((?x2465 (ite (and (distinct ((_ extract 27 27) C1) (_ bv0 1)) true) (_ bv27 40) (ite (and (distinct ((_ extract 26 26) C1) (_ bv0 1)) true) (_ bv26 40) (_ bv25 40)))))
 (let ((?x3090 (ite (and (distinct ((_ extract 29 28) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 29 29) C1) (_ bv0 1)) true) (_ bv29 40) (_ bv28 40)) ?x2465)))
 (let ((?x3200 (ite (and (distinct ((_ extract 32 32) C1) (_ bv0 1)) true) (_ bv32 40) (ite (and (distinct ((_ extract 31 31) C1) (_ bv0 1)) true) (_ bv31 40) (_ bv30 40)))))
 (let ((?x2733 (ite (and (distinct ((_ extract 34 33) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 34 34) C1) (_ bv0 1)) true) (_ bv34 40) (_ bv33 40)) ?x3200)))
 (let ((?x2942 (ite (and (distinct ((_ extract 37 37) C1) (_ bv0 1)) true) (_ bv37 40) (ite (and (distinct ((_ extract 36 36) C1) (_ bv0 1)) true) (_ bv36 40) (_ bv35 40)))))
 (let ((?x5049 (ite (and (distinct ((_ extract 39 38) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 39 39) C1) (_ bv0 1)) true) (_ bv39 40) (_ bv38 40)) ?x2942)))
 (let ((?x5740 (ite (and (distinct ((_ extract 39 30) C1) (_ bv0 10)) true) (ite (and (distinct ((_ extract 39 35) C1) (_ bv0 5)) true) ?x5049 ?x2733) (ite (and (distinct ((_ extract 29 25) C1) (_ bv0 5)) true) ?x3090 ?x4031))))
 (let ((?x2267 (bvsub (ite (and (distinct ((_ extract 39 20) C1) (_ bv0 20)) true) ?x5740 ?x5545) ?x3567)))
 (let ((?x1314 (ite (and (distinct ((_ extract 2 2) C1) (_ bv0 1)) true) (_ bv2 32) (ite (and (distinct ((_ extract 1 1) C1) (_ bv0 1)) true) (_ bv1 32) (_ bv0 32)))))
 (let ((?x6546 (ite (and (distinct ((_ extract 4 3) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 4 4) C1) (_ bv0 1)) true) (_ bv4 32) (_ bv3 32)) ?x1314)))
 (let ((?x6449 (ite (and (distinct ((_ extract 7 7) C1) (_ bv0 1)) true) (_ bv7 32) (ite (and (distinct ((_ extract 6 6) C1) (_ bv0 1)) true) (_ bv6 32) (_ bv5 32)))))
 (let ((?x6319 (ite (and (distinct ((_ extract 9 8) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 9 9) C1) (_ bv0 1)) true) (_ bv9 32) (_ bv8 32)) ?x6449)))
 (let ((?x6472 (ite (and (distinct ((_ extract 12 12) C1) (_ bv0 1)) true) (_ bv12 32) (ite (and (distinct ((_ extract 11 11) C1) (_ bv0 1)) true) (_ bv11 32) (_ bv10 32)))))
 (let ((?x6854 (ite (and (distinct ((_ extract 14 13) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 14 14) C1) (_ bv0 1)) true) (_ bv14 32) (_ bv13 32)) ?x6472)))
 (let ((?x5094 (ite (and (distinct ((_ extract 17 17) C1) (_ bv0 1)) true) (_ bv17 32) (ite (and (distinct ((_ extract 16 16) C1) (_ bv0 1)) true) (_ bv16 32) (_ bv15 32)))))
 (let ((?x4902 (ite (and (distinct ((_ extract 19 18) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 19 19) C1) (_ bv0 1)) true) (_ bv19 32) (_ bv18 32)) ?x5094)))
 (let ((?x2412 (ite (and (distinct ((_ extract 19 10) C1) (_ bv0 10)) true) (ite (and (distinct ((_ extract 19 15) C1) (_ bv0 5)) true) ?x4902 ?x6854) (ite (and (distinct ((_ extract 9 5) C1) (_ bv0 5)) true) ?x6319 ?x6546))))
 (let ((?x2816 (ite (and (distinct ((_ extract 22 22) C1) (_ bv0 1)) true) (_ bv22 32) (ite (and (distinct ((_ extract 21 21) C1) (_ bv0 1)) true) (_ bv21 32) (_ bv20 32)))))
 (let ((?x4753 (ite (and (distinct ((_ extract 24 23) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 24 24) C1) (_ bv0 1)) true) (_ bv24 32) (_ bv23 32)) ?x2816)))
 (let ((?x1629 (ite (and (distinct ((_ extract 27 27) C1) (_ bv0 1)) true) (_ bv27 32) (ite (and (distinct ((_ extract 26 26) C1) (_ bv0 1)) true) (_ bv26 32) (_ bv25 32)))))
 (let ((?x2689 (ite (and (distinct ((_ extract 29 28) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 29 29) C1) (_ bv0 1)) true) (_ bv29 32) (_ bv28 32)) ?x1629)))
 (let ((?x5127 (ite (and (distinct ((_ extract 32 32) C1) (_ bv0 1)) true) (_ bv32 32) (ite (and (distinct ((_ extract 31 31) C1) (_ bv0 1)) true) (_ bv31 32) (_ bv30 32)))))
 (let ((?x2933 (ite (and (distinct ((_ extract 34 33) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 34 34) C1) (_ bv0 1)) true) (_ bv34 32) (_ bv33 32)) ?x5127)))
 (let ((?x4112 (ite (and (distinct ((_ extract 37 37) C1) (_ bv0 1)) true) (_ bv37 32) (ite (and (distinct ((_ extract 36 36) C1) (_ bv0 1)) true) (_ bv36 32) (_ bv35 32)))))
 (let ((?x4490 (ite (and (distinct ((_ extract 39 38) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 39 39) C1) (_ bv0 1)) true) (_ bv39 32) (_ bv38 32)) ?x4112)))
 (let ((?x4747 (ite (and (distinct ((_ extract 39 30) C1) (_ bv0 10)) true) (ite (and (distinct ((_ extract 39 35) C1) (_ bv0 5)) true) ?x4490 ?x2933) (ite (and (distinct ((_ extract 29 25) C1) (_ bv0 5)) true) ?x2689 ?x4753))))
 (let ((?x3713 (ite (and (distinct ((_ extract 2 2) C2) (_ bv0 1)) true) (_ bv2 32) (ite (and (distinct ((_ extract 1 1) C2) (_ bv0 1)) true) (_ bv1 32) (_ bv0 32)))))
 (let ((?x4345 (ite (and (distinct ((_ extract 5 5) C2) (_ bv0 1)) true) (_ bv5 32) (ite (and (distinct ((_ extract 4 4) C2) (_ bv0 1)) true) (_ bv4 32) (_ bv3 32)))))
 (let ((?x2046 (ite (and (distinct ((_ extract 8 8) C2) (_ bv0 1)) true) (_ bv8 32) (ite (and (distinct ((_ extract 7 7) C2) (_ bv0 1)) true) (_ bv7 32) (_ bv6 32)))))
 (let ((?x1639 (ite (and (distinct ((_ extract 10 9) C2) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) C2) (_ bv0 1)) true) (_ bv10 32) (_ bv9 32)) ?x2046)))
 (let ((?x3158 (ite (and (distinct ((_ extract 10 6) C2) (_ bv0 5)) true) ?x1639 (ite (and (distinct ((_ extract 5 3) C2) (_ bv0 3)) true) ?x4345 ?x3713))))
 (and (and (and (distinct C1 (_ bv0 40)) true) (= (bvand C1 (bvsub C1 (_ bv1 40))) (_ bv0 40))) (and (and (distinct C2 (_ bv0 11)) true) (= (bvand C2 (bvsub C2 (_ bv1 11))) (_ bv0 11))) (bvslt ?x3158 (ite (and (distinct ((_ extract 39 20) C1) (_ bv0 20)) true) ?x4747 ?x2412)) (not (bvult ?x2267 (_ bv40 40))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
