(set-info :status unknown)
(declare-fun %Y () (_ BitVec 11))
(declare-fun C2 () (_ BitVec 11))
(declare-fun C1 () (_ BitVec 17))
(declare-fun %X () (_ BitVec 17))
(assert
 (let ((?x2232 (ite (and (distinct ((_ extract 2 2) C2) (_ bv0 1)) true) (_ bv2 17) (ite (and (distinct ((_ extract 1 1) C2) (_ bv0 1)) true) (_ bv1 17) (_ bv0 17)))))
 (let ((?x4675 (ite (and (distinct ((_ extract 5 5) C2) (_ bv0 1)) true) (_ bv5 17) (ite (and (distinct ((_ extract 4 4) C2) (_ bv0 1)) true) (_ bv4 17) (_ bv3 17)))))
 (let ((?x5122 (ite (and (distinct ((_ extract 8 8) C2) (_ bv0 1)) true) (_ bv8 17) (ite (and (distinct ((_ extract 7 7) C2) (_ bv0 1)) true) (_ bv7 17) (_ bv6 17)))))
 (let ((?x1550 (ite (and (distinct ((_ extract 10 9) C2) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) C2) (_ bv0 1)) true) (_ bv10 17) (_ bv9 17)) ?x5122)))
 (let ((?x2125 (ite (and (distinct ((_ extract 10 6) C2) (_ bv0 5)) true) ?x1550 (ite (and (distinct ((_ extract 5 3) C2) (_ bv0 3)) true) ?x4675 ?x2232))))
 (let ((?x1552 (ite (and (distinct ((_ extract 2 2) C1) (_ bv0 1)) true) (_ bv2 17) (ite (and (distinct ((_ extract 1 1) C1) (_ bv0 1)) true) (_ bv1 17) (_ bv0 17)))))
 (let ((?x2813 (ite (and (distinct ((_ extract 4 3) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 4 4) C1) (_ bv0 1)) true) (_ bv4 17) (_ bv3 17)) ?x1552)))
 (let ((?x3358 (ite (and (distinct ((_ extract 8 7) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 8 8) C1) (_ bv0 1)) true) (_ bv8 17) (_ bv7 17)) (ite (and (distinct ((_ extract 6 6) C1) (_ bv0 1)) true) (_ bv6 17) (_ bv5 17)))))
 (let ((?x3803 (ite (and (distinct ((_ extract 12 11) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 12 12) C1) (_ bv0 1)) true) (_ bv12 17) (_ bv11 17)) (ite (and (distinct ((_ extract 10 10) C1) (_ bv0 1)) true) (_ bv10 17) (_ bv9 17)))))
 (let ((?x4309 (ite (and (distinct ((_ extract 16 15) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 16 16) C1) (_ bv0 1)) true) (_ bv16 17) (_ bv15 17)) (ite (and (distinct ((_ extract 14 14) C1) (_ bv0 1)) true) (_ bv14 17) (_ bv13 17)))))
 (let ((?x3583 (ite (and (distinct ((_ extract 16 9) C1) (_ bv0 8)) true) (ite (and (distinct ((_ extract 16 13) C1) (_ bv0 4)) true) ?x4309 ?x3803) (ite (and (distinct ((_ extract 8 5) C1) (_ bv0 4)) true) ?x3358 ?x2813))))
 (let ((?x2503 (bvsub ?x3583 ?x2125)))
 (let ((?x5079 (bvand %X C1)))
 (let (($x2649 (and (distinct (ite (= (ite (= ?x5079 (_ bv0 17)) (_ bv1 1) (_ bv0 1)) (_ bv1 1)) %Y (bvor %Y C2)) (bvor ((_ extract 10 0) (bvlshr ?x5079 ?x2503)) %Y)) true)))
 (let ((?x3808 (ite (and (distinct ((_ extract 2 2) C1) (_ bv0 1)) true) (_ bv2 32) (ite (and (distinct ((_ extract 1 1) C1) (_ bv0 1)) true) (_ bv1 32) (_ bv0 32)))))
 (let ((?x2288 (ite (and (distinct ((_ extract 4 3) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 4 4) C1) (_ bv0 1)) true) (_ bv4 32) (_ bv3 32)) ?x3808)))
 (let ((?x1573 (ite (and (distinct ((_ extract 8 7) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 8 8) C1) (_ bv0 1)) true) (_ bv8 32) (_ bv7 32)) (ite (and (distinct ((_ extract 6 6) C1) (_ bv0 1)) true) (_ bv6 32) (_ bv5 32)))))
 (let ((?x1641 (ite (and (distinct ((_ extract 12 11) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 12 12) C1) (_ bv0 1)) true) (_ bv12 32) (_ bv11 32)) (ite (and (distinct ((_ extract 10 10) C1) (_ bv0 1)) true) (_ bv10 32) (_ bv9 32)))))
 (let ((?x5183 (ite (and (distinct ((_ extract 16 15) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 16 16) C1) (_ bv0 1)) true) (_ bv16 32) (_ bv15 32)) (ite (and (distinct ((_ extract 14 14) C1) (_ bv0 1)) true) (_ bv14 32) (_ bv13 32)))))
 (let ((?x1850 (ite (and (distinct ((_ extract 16 9) C1) (_ bv0 8)) true) (ite (and (distinct ((_ extract 16 13) C1) (_ bv0 4)) true) ?x5183 ?x1641) (ite (and (distinct ((_ extract 8 5) C1) (_ bv0 4)) true) ?x1573 ?x2288))))
 (let ((?x5023 (ite (and (distinct ((_ extract 2 2) C2) (_ bv0 1)) true) (_ bv2 32) (ite (and (distinct ((_ extract 1 1) C2) (_ bv0 1)) true) (_ bv1 32) (_ bv0 32)))))
 (let ((?x4310 (ite (and (distinct ((_ extract 5 5) C2) (_ bv0 1)) true) (_ bv5 32) (ite (and (distinct ((_ extract 4 4) C2) (_ bv0 1)) true) (_ bv4 32) (_ bv3 32)))))
 (let ((?x4723 (ite (and (distinct ((_ extract 8 8) C2) (_ bv0 1)) true) (_ bv8 32) (ite (and (distinct ((_ extract 7 7) C2) (_ bv0 1)) true) (_ bv7 32) (_ bv6 32)))))
 (let ((?x1612 (ite (and (distinct ((_ extract 10 9) C2) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) C2) (_ bv0 1)) true) (_ bv10 32) (_ bv9 32)) ?x4723)))
 (let ((?x2553 (ite (and (distinct ((_ extract 10 6) C2) (_ bv0 5)) true) ?x1612 (ite (and (distinct ((_ extract 5 3) C2) (_ bv0 3)) true) ?x4310 ?x5023))))
 (and (and (and (distinct C1 (_ bv0 17)) true) (= (bvand C1 (bvsub C1 (_ bv1 17))) (_ bv0 17))) (and (and (distinct C2 (_ bv0 11)) true) (= (bvand C2 (bvsub C2 (_ bv1 11))) (_ bv0 11))) (bvslt ?x2553 ?x1850) $x2649)))))))))))))))))))))))))))
(check-sat)
