(set-info :status unknown)
(declare-fun mem0 () (_ BitVec 8))
(declare-fun %x () (_ BitVec 37))
(declare-fun %p1 () (_ BitVec 64))
(declare-fun idx () (_ BitVec 64))
(declare-fun |ana_equivalentAddressValues(%p1, %p2)| () (_ BitVec 1))
(declare-fun %p2 () (_ BitVec 64))
(assert
 (let ((?x19589 (concat ((_ extract 7 5) mem0) ((_ extract 4 0) %x))))
 (let ((?x5280 (ite (and (and (distinct %p1 (_ bv0 64)) true) (or true true) (= idx %p1)) ?x19589 mem0)))
 (let ((?x12905 ((_ extract 12 5) %x)))
 (let (($x11770 (or true true)))
 (let (($x13744 (and (distinct %p1 (_ bv0 64)) true)))
 (let ((?x4952 (ite (and $x13744 $x11770 (= idx (bvadd (bvadd %p1 (_ bv1 64)) (_ bv0 64)))) ?x12905 ?x5280)))
 (let ((?x6091 ((_ extract 20 13) %x)))
 (let ((?x23453 (ite (and $x13744 $x11770 (= idx (bvadd (bvadd %p1 (_ bv1 64)) (_ bv1 64)))) ?x6091 ?x4952)))
 (let ((?x23999 ((_ extract 28 21) %x)))
 (let ((?x17396 (ite (and $x13744 $x11770 (= idx (bvadd (bvadd %p1 (_ bv1 64)) (_ bv2 64)))) ?x23999 ?x23453)))
 (let ((?x19053 ((_ extract 36 29) %x)))
 (let ((?x11100 (ite (and $x13744 $x11770 (= idx (bvadd (bvadd %p1 (_ bv1 64)) (_ bv3 64)))) ?x19053 ?x17396)))
 (let (($x18317 (= |ana_equivalentAddressValues(%p1, %p2)| (_ bv1 1))))
 (and (=> $x18317 (= %p1 %p2)) $x18317 (and (distinct ?x11100 ?x11100) true))))))))))))))))
(check-sat)
