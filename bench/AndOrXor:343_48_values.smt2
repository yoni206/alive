(set-info :source |
 Generated by Alive 0.1
 More info in N. P. Lopes, D. Menendez, S. Nagarakatte, J. Regehr.
 Provably Correct Peephole Optimizations with Alive. In PLDI'15.
|)

(set-info :status unknown)
(declare-fun C2 () (_ BitVec 50))
(declare-fun %B () (_ BitVec 50))
(declare-fun %A () (_ BitVec 50))
(declare-fun C1 () (_ BitVec 50))
(declare-fun |ana_MaskedValueIsZero(%B, ((1 << (width(C2) - countLeadingZeros(((C2 - 1) ^ C2)))) - 1))| () (_ BitVec 1))
(assert
 (let (($x66969 (and (distinct (bvand (bvadd (bvand %A C1) %B) C2) (bvand (bvadd %A %B) C2)) true)))
 (let (($x64669 (= |ana_MaskedValueIsZero(%B, ((1 << (width(C2) - countLeadingZeros(((C2 - 1) ^ C2)))) - 1))| (_ bv1 1))))
 (let ((?x21385 (bvsub C2 (_ bv1 50))))
 (let ((?x73544 (bvor ?x21385 C2)))
 (let (($x73941 (and (and (distinct ?x73544 (_ bv0 50)) true) (= (bvand (bvadd ?x73544 (_ bv1 50)) ?x73544) (_ bv0 50)) $x64669)))
 (let (($x73087 (or (= (bvand (bvadd C2 (_ bv1 50)) (bvsub (bvadd C2 (_ bv1 50)) (_ bv1 50))) (_ bv0 50)) $x73941)))
 (let ((?x54514 (bvand C1 C2)))
 (let (($x72496 (= ?x54514 C2)))
 (let ((?x73145 (ite (= ((_ extract 1 1) (bvxor ?x21385 C2)) (_ bv1 1)) (_ bv48 50) (ite (= ((_ extract 0 0) (bvxor ?x21385 C2)) (_ bv1 1)) (_ bv49 50) (_ bv50 50)))))
 (let ((?x74420 (ite (= ((_ extract 3 3) (bvxor ?x21385 C2)) (_ bv1 1)) (_ bv46 50) (ite (= ((_ extract 2 2) (bvxor ?x21385 C2)) (_ bv1 1)) (_ bv47 50) ?x73145))))
 (let ((?x71446 (ite (= ((_ extract 5 5) (bvxor ?x21385 C2)) (_ bv1 1)) (_ bv44 50) (ite (= ((_ extract 4 4) (bvxor ?x21385 C2)) (_ bv1 1)) (_ bv45 50) ?x74420))))
 (let ((?x66925 (ite (= ((_ extract 7 7) (bvxor ?x21385 C2)) (_ bv1 1)) (_ bv42 50) (ite (= ((_ extract 6 6) (bvxor ?x21385 C2)) (_ bv1 1)) (_ bv43 50) ?x71446))))
 (let ((?x71252 (ite (= ((_ extract 9 9) (bvxor ?x21385 C2)) (_ bv1 1)) (_ bv40 50) (ite (= ((_ extract 8 8) (bvxor ?x21385 C2)) (_ bv1 1)) (_ bv41 50) ?x66925))))
 (let ((?x64748 (ite (= ((_ extract 11 11) (bvxor ?x21385 C2)) (_ bv1 1)) (_ bv38 50) (ite (= ((_ extract 10 10) (bvxor ?x21385 C2)) (_ bv1 1)) (_ bv39 50) ?x71252))))
 (let ((?x72925 (ite (= ((_ extract 13 13) (bvxor ?x21385 C2)) (_ bv1 1)) (_ bv36 50) (ite (= ((_ extract 12 12) (bvxor ?x21385 C2)) (_ bv1 1)) (_ bv37 50) ?x64748))))
 (let ((?x75972 (ite (= ((_ extract 15 15) (bvxor ?x21385 C2)) (_ bv1 1)) (_ bv34 50) (ite (= ((_ extract 14 14) (bvxor ?x21385 C2)) (_ bv1 1)) (_ bv35 50) ?x72925))))
 (let ((?x77066 (ite (= ((_ extract 17 17) (bvxor ?x21385 C2)) (_ bv1 1)) (_ bv32 50) (ite (= ((_ extract 16 16) (bvxor ?x21385 C2)) (_ bv1 1)) (_ bv33 50) ?x75972))))
 (let ((?x69103 (ite (= ((_ extract 19 19) (bvxor ?x21385 C2)) (_ bv1 1)) (_ bv30 50) (ite (= ((_ extract 18 18) (bvxor ?x21385 C2)) (_ bv1 1)) (_ bv31 50) ?x77066))))
 (let ((?x75493 (ite (= ((_ extract 21 21) (bvxor ?x21385 C2)) (_ bv1 1)) (_ bv28 50) (ite (= ((_ extract 20 20) (bvxor ?x21385 C2)) (_ bv1 1)) (_ bv29 50) ?x69103))))
 (let ((?x76392 (ite (= ((_ extract 23 23) (bvxor ?x21385 C2)) (_ bv1 1)) (_ bv26 50) (ite (= ((_ extract 22 22) (bvxor ?x21385 C2)) (_ bv1 1)) (_ bv27 50) ?x75493))))
 (let ((?x70597 (ite (= ((_ extract 25 25) (bvxor ?x21385 C2)) (_ bv1 1)) (_ bv24 50) (ite (= ((_ extract 24 24) (bvxor ?x21385 C2)) (_ bv1 1)) (_ bv25 50) ?x76392))))
 (let ((?x74948 (ite (= ((_ extract 27 27) (bvxor ?x21385 C2)) (_ bv1 1)) (_ bv22 50) (ite (= ((_ extract 26 26) (bvxor ?x21385 C2)) (_ bv1 1)) (_ bv23 50) ?x70597))))
 (let ((?x76143 (ite (= ((_ extract 29 29) (bvxor ?x21385 C2)) (_ bv1 1)) (_ bv20 50) (ite (= ((_ extract 28 28) (bvxor ?x21385 C2)) (_ bv1 1)) (_ bv21 50) ?x74948))))
 (let ((?x73884 (ite (= ((_ extract 31 31) (bvxor ?x21385 C2)) (_ bv1 1)) (_ bv18 50) (ite (= ((_ extract 30 30) (bvxor ?x21385 C2)) (_ bv1 1)) (_ bv19 50) ?x76143))))
 (let ((?x72383 (ite (= ((_ extract 33 33) (bvxor ?x21385 C2)) (_ bv1 1)) (_ bv16 50) (ite (= ((_ extract 32 32) (bvxor ?x21385 C2)) (_ bv1 1)) (_ bv17 50) ?x73884))))
 (let ((?x74757 (ite (= ((_ extract 35 35) (bvxor ?x21385 C2)) (_ bv1 1)) (_ bv14 50) (ite (= ((_ extract 34 34) (bvxor ?x21385 C2)) (_ bv1 1)) (_ bv15 50) ?x72383))))
 (let ((?x75520 (ite (= ((_ extract 37 37) (bvxor ?x21385 C2)) (_ bv1 1)) (_ bv12 50) (ite (= ((_ extract 36 36) (bvxor ?x21385 C2)) (_ bv1 1)) (_ bv13 50) ?x74757))))
 (let ((?x68243 (ite (= ((_ extract 39 39) (bvxor ?x21385 C2)) (_ bv1 1)) (_ bv10 50) (ite (= ((_ extract 38 38) (bvxor ?x21385 C2)) (_ bv1 1)) (_ bv11 50) ?x75520))))
 (let ((?x74242 (ite (= ((_ extract 41 41) (bvxor ?x21385 C2)) (_ bv1 1)) (_ bv8 50) (ite (= ((_ extract 40 40) (bvxor ?x21385 C2)) (_ bv1 1)) (_ bv9 50) ?x68243))))
 (let ((?x73421 (ite (= ((_ extract 43 43) (bvxor ?x21385 C2)) (_ bv1 1)) (_ bv6 50) (ite (= ((_ extract 42 42) (bvxor ?x21385 C2)) (_ bv1 1)) (_ bv7 50) ?x74242))))
 (let ((?x74115 (ite (= ((_ extract 45 45) (bvxor ?x21385 C2)) (_ bv1 1)) (_ bv4 50) (ite (= ((_ extract 44 44) (bvxor ?x21385 C2)) (_ bv1 1)) (_ bv5 50) ?x73421))))
 (let ((?x75893 (ite (= ((_ extract 47 47) (bvxor ?x21385 C2)) (_ bv1 1)) (_ bv2 50) (ite (= ((_ extract 46 46) (bvxor ?x21385 C2)) (_ bv1 1)) (_ bv3 50) ?x74115))))
 (let ((?x68559 (ite (= ((_ extract 49 49) (bvxor ?x21385 C2)) (_ bv1 1)) (_ bv0 50) (ite (= ((_ extract 48 48) (bvxor ?x21385 C2)) (_ bv1 1)) (_ bv1 50) ?x75893))))
 (let (($x69225 (=> $x64669 (= (bvand %B (bvsub (bvshl (_ bv1 50) (bvsub (_ bv50 50) ?x68559)) (_ bv1 50))) (_ bv0 50)))))
 (and $x69225 $x72496 $x73087 $x66969))))))))))))))))))))))))))))))))))))
(check-sat)
