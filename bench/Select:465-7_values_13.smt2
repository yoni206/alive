(set-info :status unknown)
(declare-fun %Y () (_ BitVec 11))
(declare-fun C2 () (_ BitVec 11))
(declare-fun C1 () (_ BitVec 18))
(declare-fun %X () (_ BitVec 18))
(assert
 (let ((?x9770 (ite (and (distinct ((_ extract 2 2) C2) (_ bv0 1)) true) (_ bv2 18) (ite (and (distinct ((_ extract 1 1) C2) (_ bv0 1)) true) (_ bv1 18) (_ bv0 18)))))
 (let ((?x16882 (ite (and (distinct ((_ extract 5 5) C2) (_ bv0 1)) true) (_ bv5 18) (ite (and (distinct ((_ extract 4 4) C2) (_ bv0 1)) true) (_ bv4 18) (_ bv3 18)))))
 (let ((?x18896 (ite (and (distinct ((_ extract 8 8) C2) (_ bv0 1)) true) (_ bv8 18) (ite (and (distinct ((_ extract 7 7) C2) (_ bv0 1)) true) (_ bv7 18) (_ bv6 18)))))
 (let ((?x14374 (ite (and (distinct ((_ extract 10 9) C2) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) C2) (_ bv0 1)) true) (_ bv10 18) (_ bv9 18)) ?x18896)))
 (let ((?x2576 (ite (and (distinct ((_ extract 10 6) C2) (_ bv0 5)) true) ?x14374 (ite (and (distinct ((_ extract 5 3) C2) (_ bv0 3)) true) ?x16882 ?x9770))))
 (let ((?x20691 (ite (and (distinct ((_ extract 2 2) C1) (_ bv0 1)) true) (_ bv2 18) (ite (and (distinct ((_ extract 1 1) C1) (_ bv0 1)) true) (_ bv1 18) (_ bv0 18)))))
 (let ((?x4243 (ite (and (distinct ((_ extract 4 3) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 4 4) C1) (_ bv0 1)) true) (_ bv4 18) (_ bv3 18)) ?x20691)))
 (let ((?x21148 (ite (and (distinct ((_ extract 8 7) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 8 8) C1) (_ bv0 1)) true) (_ bv8 18) (_ bv7 18)) (ite (and (distinct ((_ extract 6 6) C1) (_ bv0 1)) true) (_ bv6 18) (_ bv5 18)))))
 (let ((?x16925 (ite (and (distinct ((_ extract 11 11) C1) (_ bv0 1)) true) (_ bv11 18) (ite (and (distinct ((_ extract 10 10) C1) (_ bv0 1)) true) (_ bv10 18) (_ bv9 18)))))
 (let ((?x10837 (ite (and (distinct ((_ extract 13 12) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 13 13) C1) (_ bv0 1)) true) (_ bv13 18) (_ bv12 18)) ?x16925)))
 (let ((?x18344 (ite (and (distinct ((_ extract 17 16) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 17 17) C1) (_ bv0 1)) true) (_ bv17 18) (_ bv16 18)) (ite (and (distinct ((_ extract 15 15) C1) (_ bv0 1)) true) (_ bv15 18) (_ bv14 18)))))
 (let ((?x23536 (ite (and (distinct ((_ extract 17 9) C1) (_ bv0 9)) true) (ite (and (distinct ((_ extract 17 14) C1) (_ bv0 4)) true) ?x18344 ?x10837) (ite (and (distinct ((_ extract 8 5) C1) (_ bv0 4)) true) ?x21148 ?x4243))))
 (let ((?x8121 (bvsub ?x23536 ?x2576)))
 (let ((?x17855 (bvand %X C1)))
 (let (($x4028 (and (distinct (ite (= (ite (= ?x17855 (_ bv0 18)) (_ bv1 1) (_ bv0 1)) (_ bv1 1)) (bvor %Y C2) %Y) (bvor (bvxor ((_ extract 10 0) (bvlshr ?x17855 ?x8121)) C2) %Y)) true)))
 (let ((?x21036 (ite (and (distinct ((_ extract 2 2) C1) (_ bv0 1)) true) (_ bv2 32) (ite (and (distinct ((_ extract 1 1) C1) (_ bv0 1)) true) (_ bv1 32) (_ bv0 32)))))
 (let ((?x340 (ite (and (distinct ((_ extract 4 3) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 4 4) C1) (_ bv0 1)) true) (_ bv4 32) (_ bv3 32)) ?x21036)))
 (let ((?x16234 (ite (and (distinct ((_ extract 8 7) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 8 8) C1) (_ bv0 1)) true) (_ bv8 32) (_ bv7 32)) (ite (and (distinct ((_ extract 6 6) C1) (_ bv0 1)) true) (_ bv6 32) (_ bv5 32)))))
 (let ((?x24081 (ite (and (distinct ((_ extract 11 11) C1) (_ bv0 1)) true) (_ bv11 32) (ite (and (distinct ((_ extract 10 10) C1) (_ bv0 1)) true) (_ bv10 32) (_ bv9 32)))))
 (let ((?x8544 (ite (and (distinct ((_ extract 13 12) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 13 13) C1) (_ bv0 1)) true) (_ bv13 32) (_ bv12 32)) ?x24081)))
 (let ((?x22302 (ite (and (distinct ((_ extract 17 16) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 17 17) C1) (_ bv0 1)) true) (_ bv17 32) (_ bv16 32)) (ite (and (distinct ((_ extract 15 15) C1) (_ bv0 1)) true) (_ bv15 32) (_ bv14 32)))))
 (let ((?x3701 (ite (and (distinct ((_ extract 17 9) C1) (_ bv0 9)) true) (ite (and (distinct ((_ extract 17 14) C1) (_ bv0 4)) true) ?x22302 ?x8544) (ite (and (distinct ((_ extract 8 5) C1) (_ bv0 4)) true) ?x16234 ?x340))))
 (let ((?x5344 (ite (and (distinct ((_ extract 2 2) C2) (_ bv0 1)) true) (_ bv2 32) (ite (and (distinct ((_ extract 1 1) C2) (_ bv0 1)) true) (_ bv1 32) (_ bv0 32)))))
 (let ((?x5927 (ite (and (distinct ((_ extract 5 5) C2) (_ bv0 1)) true) (_ bv5 32) (ite (and (distinct ((_ extract 4 4) C2) (_ bv0 1)) true) (_ bv4 32) (_ bv3 32)))))
 (let ((?x21514 (ite (and (distinct ((_ extract 8 8) C2) (_ bv0 1)) true) (_ bv8 32) (ite (and (distinct ((_ extract 7 7) C2) (_ bv0 1)) true) (_ bv7 32) (_ bv6 32)))))
 (let ((?x20175 (ite (and (distinct ((_ extract 10 9) C2) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) C2) (_ bv0 1)) true) (_ bv10 32) (_ bv9 32)) ?x21514)))
 (let ((?x12629 (ite (and (distinct ((_ extract 10 6) C2) (_ bv0 5)) true) ?x20175 (ite (and (distinct ((_ extract 5 3) C2) (_ bv0 3)) true) ?x5927 ?x5344))))
 (and (and (and (distinct C1 (_ bv0 18)) true) (= (bvand C1 (bvsub C1 (_ bv1 18))) (_ bv0 18))) (and (and (distinct C2 (_ bv0 11)) true) (= (bvand C2 (bvsub C2 (_ bv1 11))) (_ bv0 11))) (bvslt ?x12629 ?x3701) $x4028)))))))))))))))))))))))))))))
(check-sat)
