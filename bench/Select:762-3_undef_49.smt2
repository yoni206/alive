(set-info :status unknown)
(declare-fun C2 () (_ BitVec 11))
(declare-fun C3 () (_ BitVec 11))
(declare-fun C () (_ BitVec 53))
(assert
 (let ((?x12268 (ite (and (distinct ((_ extract 2 2) (bvsub C3 C2)) (_ bv0 1)) true) (_ bv2 11) (ite (and (distinct ((_ extract 1 1) (bvsub C3 C2)) (_ bv0 1)) true) (_ bv1 11) (_ bv0 11)))))
 (let ((?x21528 (ite (and (distinct ((_ extract 5 5) (bvsub C3 C2)) (_ bv0 1)) true) (_ bv5 11) (ite (and (distinct ((_ extract 4 4) (bvsub C3 C2)) (_ bv0 1)) true) (_ bv4 11) (_ bv3 11)))))
 (let ((?x4548 (ite (and (distinct ((_ extract 8 8) (bvsub C3 C2)) (_ bv0 1)) true) (_ bv8 11) (ite (and (distinct ((_ extract 7 7) (bvsub C3 C2)) (_ bv0 1)) true) (_ bv7 11) (_ bv6 11)))))
 (let ((?x16927 (ite (and (distinct ((_ extract 10 9) (bvsub C3 C2)) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) (bvsub C3 C2)) (_ bv0 1)) true) (_ bv10 11) (_ bv9 11)) ?x4548)))
 (let ((?x9381 (ite (and (distinct ((_ extract 10 6) (bvsub C3 C2)) (_ bv0 5)) true) ?x16927 (ite (and (distinct ((_ extract 5 3) (bvsub C3 C2)) (_ bv0 3)) true) ?x21528 ?x12268))))
 (let ((?x15734 (ite (and (distinct ((_ extract 3 2) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 3 3) C) (_ bv0 1)) true) (_ bv3 11) (_ bv2 11)) (ite (and (distinct ((_ extract 1 1) C) (_ bv0 1)) true) (_ bv1 11) (_ bv0 11)))))
 (let ((?x4203 (ite (and (distinct ((_ extract 6 6) C) (_ bv0 1)) true) (_ bv6 11) (ite (and (distinct ((_ extract 5 5) C) (_ bv0 1)) true) (_ bv5 11) (_ bv4 11)))))
 (let ((?x6740 (ite (and (distinct ((_ extract 10 9) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) C) (_ bv0 1)) true) (_ bv10 11) (_ bv9 11)) (ite (and (distinct ((_ extract 8 8) C) (_ bv0 1)) true) (_ bv8 11) (_ bv7 11)))))
 (let ((?x11670 (ite (and (distinct ((_ extract 13 13) C) (_ bv0 1)) true) (_ bv13 11) (ite (and (distinct ((_ extract 12 12) C) (_ bv0 1)) true) (_ bv12 11) (_ bv11 11)))))
 (let ((?x9828 (ite (and (distinct ((_ extract 13 7) C) (_ bv0 7)) true) (ite (and (distinct ((_ extract 13 11) C) (_ bv0 3)) true) ?x11670 ?x6740) (ite (and (distinct ((_ extract 6 4) C) (_ bv0 3)) true) ?x4203 ?x15734))))
 (let ((?x19780 (ite (and (distinct ((_ extract 17 16) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 17 17) C) (_ bv0 1)) true) (_ bv17 11) (_ bv16 11)) (ite (and (distinct ((_ extract 15 15) C) (_ bv0 1)) true) (_ bv15 11) (_ bv14 11)))))
 (let ((?x22475 (ite (and (distinct ((_ extract 20 20) C) (_ bv0 1)) true) (_ bv20 11) (ite (and (distinct ((_ extract 19 19) C) (_ bv0 1)) true) (_ bv19 11) (_ bv18 11)))))
 (let ((?x16522 (ite (and (distinct ((_ extract 23 23) C) (_ bv0 1)) true) (_ bv23 11) (ite (and (distinct ((_ extract 22 22) C) (_ bv0 1)) true) (_ bv22 11) (_ bv21 11)))))
 (let ((?x4307 (ite (and (distinct ((_ extract 26 26) C) (_ bv0 1)) true) (_ bv26 11) (ite (and (distinct ((_ extract 25 25) C) (_ bv0 1)) true) (_ bv25 11) (_ bv24 11)))))
 (let ((?x16685 (ite (and (distinct ((_ extract 26 21) C) (_ bv0 6)) true) (ite (and (distinct ((_ extract 26 24) C) (_ bv0 3)) true) ?x4307 ?x16522) (ite (and (distinct ((_ extract 20 18) C) (_ bv0 3)) true) ?x22475 ?x19780))))
 (let ((?x11325 (ite (and (distinct ((_ extract 30 29) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 30 30) C) (_ bv0 1)) true) (_ bv30 11) (_ bv29 11)) (ite (and (distinct ((_ extract 28 28) C) (_ bv0 1)) true) (_ bv28 11) (_ bv27 11)))))
 (let ((?x10799 (ite (and (distinct ((_ extract 33 33) C) (_ bv0 1)) true) (_ bv33 11) (ite (and (distinct ((_ extract 32 32) C) (_ bv0 1)) true) (_ bv32 11) (_ bv31 11)))))
 (let ((?x15754 (ite (and (distinct ((_ extract 36 36) C) (_ bv0 1)) true) (_ bv36 11) (ite (and (distinct ((_ extract 35 35) C) (_ bv0 1)) true) (_ bv35 11) (_ bv34 11)))))
 (let ((?x13342 (ite (and (distinct ((_ extract 39 39) C) (_ bv0 1)) true) (_ bv39 11) (ite (and (distinct ((_ extract 38 38) C) (_ bv0 1)) true) (_ bv38 11) (_ bv37 11)))))
 (let ((?x18714 (ite (and (distinct ((_ extract 39 34) C) (_ bv0 6)) true) (ite (and (distinct ((_ extract 39 37) C) (_ bv0 3)) true) ?x13342 ?x15754) (ite (and (distinct ((_ extract 33 31) C) (_ bv0 3)) true) ?x10799 ?x11325))))
 (let ((?x9025 (ite (and (distinct ((_ extract 43 42) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 43 43) C) (_ bv0 1)) true) (_ bv43 11) (_ bv42 11)) (ite (and (distinct ((_ extract 41 41) C) (_ bv0 1)) true) (_ bv41 11) (_ bv40 11)))))
 (let ((?x1886 (ite (and (distinct ((_ extract 46 46) C) (_ bv0 1)) true) (_ bv46 11) (ite (and (distinct ((_ extract 45 45) C) (_ bv0 1)) true) (_ bv45 11) (_ bv44 11)))))
 (let ((?x16597 (ite (and (distinct ((_ extract 49 49) C) (_ bv0 1)) true) (_ bv49 11) (ite (and (distinct ((_ extract 48 48) C) (_ bv0 1)) true) (_ bv48 11) (_ bv47 11)))))
 (let ((?x3402 (ite (and (distinct ((_ extract 52 52) C) (_ bv0 1)) true) (_ bv52 11) (ite (and (distinct ((_ extract 51 51) C) (_ bv0 1)) true) (_ bv51 11) (_ bv50 11)))))
 (let ((?x17619 (ite (and (distinct ((_ extract 52 47) C) (_ bv0 6)) true) (ite (and (distinct ((_ extract 52 50) C) (_ bv0 3)) true) ?x3402 ?x16597) (ite (and (distinct ((_ extract 46 44) C) (_ bv0 3)) true) ?x1886 ?x9025))))
 (let ((?x10803 (ite (and (distinct ((_ extract 52 27) C) (_ bv0 26)) true) (ite (and (distinct ((_ extract 52 40) C) (_ bv0 13)) true) ?x17619 ?x18714) (ite (and (distinct ((_ extract 26 14) C) (_ bv0 13)) true) ?x16685 ?x9828))))
 (let ((?x3372 (bvsub ?x10803 ?x9381)))
 (let ((?x11106 (ite (bvsgt (_ bv0 11) ?x3372) (_ bv0 11) ?x3372)))
 (let ((?x11224 (bvsub ?x9381 ?x10803)))
 (let ((?x7161 (ite (bvsgt (_ bv0 11) ?x11224) (_ bv0 11) ?x11224)))
 (let ((?x23639 (ite (and (distinct ((_ extract 3 2) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 3 3) C) (_ bv0 1)) true) (_ bv3 32) (_ bv2 32)) (ite (and (distinct ((_ extract 1 1) C) (_ bv0 1)) true) (_ bv1 32) (_ bv0 32)))))
 (let ((?x19912 (ite (and (distinct ((_ extract 6 6) C) (_ bv0 1)) true) (_ bv6 32) (ite (and (distinct ((_ extract 5 5) C) (_ bv0 1)) true) (_ bv5 32) (_ bv4 32)))))
 (let ((?x23283 (ite (and (distinct ((_ extract 10 9) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) C) (_ bv0 1)) true) (_ bv10 32) (_ bv9 32)) (ite (and (distinct ((_ extract 8 8) C) (_ bv0 1)) true) (_ bv8 32) (_ bv7 32)))))
 (let ((?x18337 (ite (and (distinct ((_ extract 13 13) C) (_ bv0 1)) true) (_ bv13 32) (ite (and (distinct ((_ extract 12 12) C) (_ bv0 1)) true) (_ bv12 32) (_ bv11 32)))))
 (let ((?x4893 (ite (and (distinct ((_ extract 13 7) C) (_ bv0 7)) true) (ite (and (distinct ((_ extract 13 11) C) (_ bv0 3)) true) ?x18337 ?x23283) (ite (and (distinct ((_ extract 6 4) C) (_ bv0 3)) true) ?x19912 ?x23639))))
 (let ((?x17092 (ite (and (distinct ((_ extract 17 16) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 17 17) C) (_ bv0 1)) true) (_ bv17 32) (_ bv16 32)) (ite (and (distinct ((_ extract 15 15) C) (_ bv0 1)) true) (_ bv15 32) (_ bv14 32)))))
 (let ((?x13258 (ite (and (distinct ((_ extract 20 20) C) (_ bv0 1)) true) (_ bv20 32) (ite (and (distinct ((_ extract 19 19) C) (_ bv0 1)) true) (_ bv19 32) (_ bv18 32)))))
 (let ((?x10051 (ite (and (distinct ((_ extract 23 23) C) (_ bv0 1)) true) (_ bv23 32) (ite (and (distinct ((_ extract 22 22) C) (_ bv0 1)) true) (_ bv22 32) (_ bv21 32)))))
 (let ((?x7861 (ite (and (distinct ((_ extract 26 26) C) (_ bv0 1)) true) (_ bv26 32) (ite (and (distinct ((_ extract 25 25) C) (_ bv0 1)) true) (_ bv25 32) (_ bv24 32)))))
 (let ((?x16686 (ite (and (distinct ((_ extract 26 21) C) (_ bv0 6)) true) (ite (and (distinct ((_ extract 26 24) C) (_ bv0 3)) true) ?x7861 ?x10051) (ite (and (distinct ((_ extract 20 18) C) (_ bv0 3)) true) ?x13258 ?x17092))))
 (let ((?x6605 (ite (and (distinct ((_ extract 30 29) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 30 30) C) (_ bv0 1)) true) (_ bv30 32) (_ bv29 32)) (ite (and (distinct ((_ extract 28 28) C) (_ bv0 1)) true) (_ bv28 32) (_ bv27 32)))))
 (let ((?x2575 (ite (and (distinct ((_ extract 33 33) C) (_ bv0 1)) true) (_ bv33 32) (ite (and (distinct ((_ extract 32 32) C) (_ bv0 1)) true) (_ bv32 32) (_ bv31 32)))))
 (let ((?x732 (ite (and (distinct ((_ extract 36 36) C) (_ bv0 1)) true) (_ bv36 32) (ite (and (distinct ((_ extract 35 35) C) (_ bv0 1)) true) (_ bv35 32) (_ bv34 32)))))
 (let ((?x23425 (ite (and (distinct ((_ extract 39 39) C) (_ bv0 1)) true) (_ bv39 32) (ite (and (distinct ((_ extract 38 38) C) (_ bv0 1)) true) (_ bv38 32) (_ bv37 32)))))
 (let ((?x5829 (ite (and (distinct ((_ extract 39 34) C) (_ bv0 6)) true) (ite (and (distinct ((_ extract 39 37) C) (_ bv0 3)) true) ?x23425 ?x732) (ite (and (distinct ((_ extract 33 31) C) (_ bv0 3)) true) ?x2575 ?x6605))))
 (let ((?x9680 (ite (and (distinct ((_ extract 43 42) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 43 43) C) (_ bv0 1)) true) (_ bv43 32) (_ bv42 32)) (ite (and (distinct ((_ extract 41 41) C) (_ bv0 1)) true) (_ bv41 32) (_ bv40 32)))))
 (let ((?x16171 (ite (and (distinct ((_ extract 46 46) C) (_ bv0 1)) true) (_ bv46 32) (ite (and (distinct ((_ extract 45 45) C) (_ bv0 1)) true) (_ bv45 32) (_ bv44 32)))))
 (let ((?x14676 (ite (and (distinct ((_ extract 49 49) C) (_ bv0 1)) true) (_ bv49 32) (ite (and (distinct ((_ extract 48 48) C) (_ bv0 1)) true) (_ bv48 32) (_ bv47 32)))))
 (let ((?x7835 (ite (and (distinct ((_ extract 52 52) C) (_ bv0 1)) true) (_ bv52 32) (ite (and (distinct ((_ extract 51 51) C) (_ bv0 1)) true) (_ bv51 32) (_ bv50 32)))))
 (let ((?x18131 (ite (and (distinct ((_ extract 52 47) C) (_ bv0 6)) true) (ite (and (distinct ((_ extract 52 50) C) (_ bv0 3)) true) ?x7835 ?x14676) (ite (and (distinct ((_ extract 46 44) C) (_ bv0 3)) true) ?x16171 ?x9680))))
 (let ((?x14642 (ite (and (distinct ((_ extract 52 27) C) (_ bv0 26)) true) (ite (and (distinct ((_ extract 52 40) C) (_ bv0 13)) true) ?x18131 ?x5829) (ite (and (distinct ((_ extract 26 14) C) (_ bv0 13)) true) ?x16686 ?x4893))))
 (let (($x6187 (and (and (distinct (bvsub C3 C2) (_ bv0 11)) true) (= (bvand (bvsub C3 C2) (bvsub (bvsub C3 C2) (_ bv1 11))) (_ bv0 11)))))
 (and (and (and (distinct C (_ bv0 53)) true) (= (bvand C (bvsub C (_ bv1 53))) (_ bv0 53))) $x6187 (bvslt ?x14642 (_ bv11 32)) (not (and (bvult ?x7161 (_ bv11 11)) (bvult ?x11106 (_ bv11 11))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
