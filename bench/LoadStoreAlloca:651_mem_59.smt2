(set-info :status unknown)
(declare-fun mem0 () (_ BitVec 8))
(declare-fun alloca%a_3121 () (_ BitVec 8))
(declare-fun %a () (_ BitVec 64))
(declare-fun idx () (_ BitVec 64))
(declare-fun %x () (_ BitVec 5))
(declare-fun %idx () (_ BitVec 62))
(declare-fun u_%a () (_ BitVec 8))
(declare-fun u_%ptr () (_ BitVec 8))
(assert
 (forall ((alloca%a_3120 (_ BitVec 8)) (alloca%a_3122 (_ BitVec 8)) )(let (($x14089 (= idx (bvadd %a (_ bv0 64)))))
 (let ((?x5932 (ite $x14089 ((_ extract 7 0) alloca%a_3121) mem0)))
 (let ((?x17046 (ite (= (bvadd %a (bvmul (_ bv1 64) ((_ sign_extend 2) %idx))) (bvadd %a (_ bv0 64))) ((_ extract 7 0) alloca%a_3120) mem0)))
 (let (($x2816 (bvuge (_ bv0 64) (bvsub (bvadd %a (bvmul (_ bv1 64) ((_ sign_extend 2) %idx))) %a))))
 (let (($x19830 (and (distinct %a (_ bv0 64)) true)))
 (let (($x17912 (and $x19830 (and (distinct (bvadd %a (bvmul (_ bv1 64) ((_ sign_extend 2) %idx))) (_ bv0 64)) true) (and (bvuge (bvadd %a (bvmul (_ bv1 64) ((_ sign_extend 2) %idx))) %a) $x2816) (= idx (bvadd %a (bvmul (_ bv1 64) ((_ sign_extend 2) %idx)))))))
 (let ((?x5868 (ite $x17912 (concat ((_ extract 7 5) ?x17046) ((_ extract 4 0) %x)) (ite $x14089 ((_ extract 7 0) alloca%a_3120) mem0))))
 (and $x19830 $x19830 (= u_%ptr (_ bv1 8)) (= u_%a (_ bv1 8)) $x19830 $x19830 $x19830 (and (distinct (ite $x14089 ((_ extract 7 0) alloca%a_3122) ?x5868) ?x5932) true))))))))))
 )
(check-sat)
