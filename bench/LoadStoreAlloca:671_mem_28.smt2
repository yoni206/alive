(set-info :status unknown)
(declare-fun mem0 () (_ BitVec 8))
(declare-fun %y () (_ BitVec 30))
(declare-fun %p2 () (_ BitVec 64))
(declare-fun idx () (_ BitVec 64))
(declare-fun %x () (_ BitVec 30))
(declare-fun %p1 () (_ BitVec 64))
(declare-fun |ana_equivalentAddressValues(%p1, %p2)| () (_ BitVec 1))
(assert
 (let ((?x13334 (ite (and (and (distinct %p2 (_ bv0 64)) true) (or true true) (= idx %p2)) (concat ((_ extract 7 6) mem0) ((_ extract 5 0) %y)) mem0)))
 (let (($x3641 (or true true)))
 (let (($x1668 (and (distinct %p2 (_ bv0 64)) true)))
 (let ((?x13552 (ite (and $x1668 $x3641 (= idx (bvadd (bvadd %p2 (_ bv1 64)) (_ bv0 64)))) ((_ extract 13 6) %y) ?x13334)))
 (let ((?x16781 (ite (and $x1668 $x3641 (= idx (bvadd (bvadd %p2 (_ bv1 64)) (_ bv1 64)))) ((_ extract 21 14) %y) ?x13552)))
 (let ((?x14160 (ite (and $x1668 $x3641 (= idx (bvadd (bvadd %p2 (_ bv1 64)) (_ bv2 64)))) ((_ extract 29 22) %y) ?x16781)))
 (let ((?x4757 (ite (and (and (distinct %p1 (_ bv0 64)) true) $x3641 (= idx %p1)) (concat ((_ extract 7 6) mem0) ((_ extract 5 0) %x)) mem0)))
 (let (($x17212 (and (distinct %p1 (_ bv0 64)) true)))
 (let ((?x11219 (ite (and $x17212 $x3641 (= idx (bvadd (bvadd %p1 (_ bv1 64)) (_ bv0 64)))) ((_ extract 13 6) %x) ?x4757)))
 (let ((?x17912 (ite (and $x17212 $x3641 (= idx (bvadd (bvadd %p1 (_ bv1 64)) (_ bv1 64)))) ((_ extract 21 14) %x) ?x11219)))
 (let ((?x15905 (ite (and $x17212 $x3641 (= idx (bvadd (bvadd %p1 (_ bv1 64)) (_ bv2 64)))) ((_ extract 29 22) %x) ?x17912)))
 (let ((?x14788 (ite (and $x17212 $x3641 (= %p2 %p1)) (concat ((_ extract 7 6) mem0) ((_ extract 5 0) %x)) mem0)))
 (let ((?x6308 (ite (and $x17212 $x3641 (= %p2 (bvadd (bvadd %p1 (_ bv1 64)) (_ bv0 64)))) ((_ extract 13 6) %x) ?x14788)))
 (let ((?x6453 (ite (and $x17212 $x3641 (= %p2 (bvadd (bvadd %p1 (_ bv1 64)) (_ bv1 64)))) ((_ extract 21 14) %x) ?x6308)))
 (let ((?x1702 (ite (and $x17212 $x3641 (= %p2 (bvadd (bvadd %p1 (_ bv1 64)) (_ bv2 64)))) ((_ extract 29 22) %x) ?x6453)))
 (let ((?x1070 (ite (and $x17212 $x3641 $x1668 $x3641 (= idx %p2)) (concat ((_ extract 7 6) ?x1702) ((_ extract 5 0) %y)) ?x15905)))
 (let ((?x12694 (ite (and $x17212 $x3641 $x1668 $x3641 (= idx (bvadd (bvadd %p2 (_ bv1 64)) (_ bv0 64)))) ((_ extract 13 6) %y) ?x1070)))
 (let ((?x284 (ite (and $x17212 $x3641 $x1668 $x3641 (= idx (bvadd (bvadd %p2 (_ bv1 64)) (_ bv1 64)))) ((_ extract 21 14) %y) ?x12694)))
 (let ((?x769 (ite (and $x17212 $x3641 $x1668 $x3641 (= idx (bvadd (bvadd %p2 (_ bv1 64)) (_ bv2 64)))) ((_ extract 29 22) %y) ?x284)))
 (let (($x2401 (= |ana_equivalentAddressValues(%p1, %p2)| (_ bv1 1))))
 (and (=> $x2401 (= %p1 %p2)) $x2401 (and (distinct ?x769 ?x14160) true)))))))))))))))))))))))
(check-sat)
