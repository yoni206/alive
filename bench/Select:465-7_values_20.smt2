(set-info :status unknown)
(declare-fun %Y () (_ BitVec 11))
(declare-fun C2 () (_ BitVec 11))
(declare-fun C1 () (_ BitVec 28))
(declare-fun %X () (_ BitVec 28))
(assert
 (let ((?x4456 (ite (and (distinct ((_ extract 2 2) C2) (_ bv0 1)) true) (_ bv2 28) (ite (and (distinct ((_ extract 1 1) C2) (_ bv0 1)) true) (_ bv1 28) (_ bv0 28)))))
 (let ((?x2589 (ite (and (distinct ((_ extract 5 5) C2) (_ bv0 1)) true) (_ bv5 28) (ite (and (distinct ((_ extract 4 4) C2) (_ bv0 1)) true) (_ bv4 28) (_ bv3 28)))))
 (let ((?x3510 (ite (and (distinct ((_ extract 8 8) C2) (_ bv0 1)) true) (_ bv8 28) (ite (and (distinct ((_ extract 7 7) C2) (_ bv0 1)) true) (_ bv7 28) (_ bv6 28)))))
 (let ((?x5580 (ite (and (distinct ((_ extract 10 9) C2) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) C2) (_ bv0 1)) true) (_ bv10 28) (_ bv9 28)) ?x3510)))
 (let ((?x4370 (ite (and (distinct ((_ extract 10 6) C2) (_ bv0 5)) true) ?x5580 (ite (and (distinct ((_ extract 5 3) C2) (_ bv0 3)) true) ?x2589 ?x4456))))
 (let ((?x4545 (ite (and (distinct ((_ extract 3 2) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 3 3) C1) (_ bv0 1)) true) (_ bv3 28) (_ bv2 28)) (ite (and (distinct ((_ extract 1 1) C1) (_ bv0 1)) true) (_ bv1 28) (_ bv0 28)))))
 (let ((?x3092 (ite (and (distinct ((_ extract 6 6) C1) (_ bv0 1)) true) (_ bv6 28) (ite (and (distinct ((_ extract 5 5) C1) (_ bv0 1)) true) (_ bv5 28) (_ bv4 28)))))
 (let ((?x4434 (ite (and (distinct ((_ extract 10 9) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) C1) (_ bv0 1)) true) (_ bv10 28) (_ bv9 28)) (ite (and (distinct ((_ extract 8 8) C1) (_ bv0 1)) true) (_ bv8 28) (_ bv7 28)))))
 (let ((?x3037 (ite (and (distinct ((_ extract 13 13) C1) (_ bv0 1)) true) (_ bv13 28) (ite (and (distinct ((_ extract 12 12) C1) (_ bv0 1)) true) (_ bv12 28) (_ bv11 28)))))
 (let ((?x6673 (ite (and (distinct ((_ extract 13 7) C1) (_ bv0 7)) true) (ite (and (distinct ((_ extract 13 11) C1) (_ bv0 3)) true) ?x3037 ?x4434) (ite (and (distinct ((_ extract 6 4) C1) (_ bv0 3)) true) ?x3092 ?x4545))))
 (let ((?x6274 (ite (and (distinct ((_ extract 17 16) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 17 17) C1) (_ bv0 1)) true) (_ bv17 28) (_ bv16 28)) (ite (and (distinct ((_ extract 15 15) C1) (_ bv0 1)) true) (_ bv15 28) (_ bv14 28)))))
 (let ((?x2343 (ite (and (distinct ((_ extract 20 20) C1) (_ bv0 1)) true) (_ bv20 28) (ite (and (distinct ((_ extract 19 19) C1) (_ bv0 1)) true) (_ bv19 28) (_ bv18 28)))))
 (let ((?x4487 (ite (and (distinct ((_ extract 24 23) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 24 24) C1) (_ bv0 1)) true) (_ bv24 28) (_ bv23 28)) (ite (and (distinct ((_ extract 22 22) C1) (_ bv0 1)) true) (_ bv22 28) (_ bv21 28)))))
 (let ((?x1953 (ite (and (distinct ((_ extract 27 27) C1) (_ bv0 1)) true) (_ bv27 28) (ite (and (distinct ((_ extract 26 26) C1) (_ bv0 1)) true) (_ bv26 28) (_ bv25 28)))))
 (let ((?x3259 (ite (and (distinct ((_ extract 27 21) C1) (_ bv0 7)) true) (ite (and (distinct ((_ extract 27 25) C1) (_ bv0 3)) true) ?x1953 ?x4487) (ite (and (distinct ((_ extract 20 18) C1) (_ bv0 3)) true) ?x2343 ?x6274))))
 (let ((?x4712 (bvsub (ite (and (distinct ((_ extract 27 14) C1) (_ bv0 14)) true) ?x3259 ?x6673) ?x4370)))
 (let ((?x5115 (bvand %X C1)))
 (let (($x4772 (and (distinct (ite (= (ite (= ?x5115 (_ bv0 28)) (_ bv1 1) (_ bv0 1)) (_ bv1 1)) (bvor %Y C2) %Y) (bvor (bvxor ((_ extract 10 0) (bvlshr ?x5115 ?x4712)) C2) %Y)) true)))
 (let ((?x4018 (ite (and (distinct ((_ extract 3 2) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 3 3) C1) (_ bv0 1)) true) (_ bv3 32) (_ bv2 32)) (ite (and (distinct ((_ extract 1 1) C1) (_ bv0 1)) true) (_ bv1 32) (_ bv0 32)))))
 (let ((?x3431 (ite (and (distinct ((_ extract 6 6) C1) (_ bv0 1)) true) (_ bv6 32) (ite (and (distinct ((_ extract 5 5) C1) (_ bv0 1)) true) (_ bv5 32) (_ bv4 32)))))
 (let ((?x3639 (ite (and (distinct ((_ extract 10 9) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) C1) (_ bv0 1)) true) (_ bv10 32) (_ bv9 32)) (ite (and (distinct ((_ extract 8 8) C1) (_ bv0 1)) true) (_ bv8 32) (_ bv7 32)))))
 (let ((?x2874 (ite (and (distinct ((_ extract 13 13) C1) (_ bv0 1)) true) (_ bv13 32) (ite (and (distinct ((_ extract 12 12) C1) (_ bv0 1)) true) (_ bv12 32) (_ bv11 32)))))
 (let ((?x3938 (ite (and (distinct ((_ extract 13 7) C1) (_ bv0 7)) true) (ite (and (distinct ((_ extract 13 11) C1) (_ bv0 3)) true) ?x2874 ?x3639) (ite (and (distinct ((_ extract 6 4) C1) (_ bv0 3)) true) ?x3431 ?x4018))))
 (let ((?x2056 (ite (and (distinct ((_ extract 17 16) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 17 17) C1) (_ bv0 1)) true) (_ bv17 32) (_ bv16 32)) (ite (and (distinct ((_ extract 15 15) C1) (_ bv0 1)) true) (_ bv15 32) (_ bv14 32)))))
 (let ((?x6712 (ite (and (distinct ((_ extract 20 20) C1) (_ bv0 1)) true) (_ bv20 32) (ite (and (distinct ((_ extract 19 19) C1) (_ bv0 1)) true) (_ bv19 32) (_ bv18 32)))))
 (let ((?x3058 (ite (and (distinct ((_ extract 24 23) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 24 24) C1) (_ bv0 1)) true) (_ bv24 32) (_ bv23 32)) (ite (and (distinct ((_ extract 22 22) C1) (_ bv0 1)) true) (_ bv22 32) (_ bv21 32)))))
 (let ((?x1763 (ite (and (distinct ((_ extract 27 27) C1) (_ bv0 1)) true) (_ bv27 32) (ite (and (distinct ((_ extract 26 26) C1) (_ bv0 1)) true) (_ bv26 32) (_ bv25 32)))))
 (let ((?x1845 (ite (and (distinct ((_ extract 27 21) C1) (_ bv0 7)) true) (ite (and (distinct ((_ extract 27 25) C1) (_ bv0 3)) true) ?x1763 ?x3058) (ite (and (distinct ((_ extract 20 18) C1) (_ bv0 3)) true) ?x6712 ?x2056))))
 (let ((?x6247 (ite (and (distinct ((_ extract 2 2) C2) (_ bv0 1)) true) (_ bv2 32) (ite (and (distinct ((_ extract 1 1) C2) (_ bv0 1)) true) (_ bv1 32) (_ bv0 32)))))
 (let ((?x5948 (ite (and (distinct ((_ extract 5 5) C2) (_ bv0 1)) true) (_ bv5 32) (ite (and (distinct ((_ extract 4 4) C2) (_ bv0 1)) true) (_ bv4 32) (_ bv3 32)))))
 (let ((?x6800 (ite (and (distinct ((_ extract 8 8) C2) (_ bv0 1)) true) (_ bv8 32) (ite (and (distinct ((_ extract 7 7) C2) (_ bv0 1)) true) (_ bv7 32) (_ bv6 32)))))
 (let ((?x4550 (ite (and (distinct ((_ extract 10 9) C2) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) C2) (_ bv0 1)) true) (_ bv10 32) (_ bv9 32)) ?x6800)))
 (let ((?x6313 (ite (and (distinct ((_ extract 10 6) C2) (_ bv0 5)) true) ?x4550 (ite (and (distinct ((_ extract 5 3) C2) (_ bv0 3)) true) ?x5948 ?x6247))))
 (and (and (and (distinct C1 (_ bv0 28)) true) (= (bvand C1 (bvsub C1 (_ bv1 28))) (_ bv0 28))) (and (and (distinct C2 (_ bv0 11)) true) (= (bvand C2 (bvsub C2 (_ bv1 11))) (_ bv0 11))) (bvslt ?x6313 (ite (and (distinct ((_ extract 27 14) C1) (_ bv0 14)) true) ?x1845 ?x3938)) $x4772)))))))))))))))))))))))))))))))))))
(check-sat)
