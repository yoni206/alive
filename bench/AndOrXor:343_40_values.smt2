(set-info :source |
 Generated by Alive 0.1
 More info in N. P. Lopes, D. Menendez, S. Nagarakatte, J. Regehr.
 Provably Correct Peephole Optimizations with Alive. In PLDI'15.
|)

(set-info :status unknown)
(declare-fun C2 () (_ BitVec 42))
(declare-fun %B () (_ BitVec 42))
(declare-fun %A () (_ BitVec 42))
(declare-fun C1 () (_ BitVec 42))
(declare-fun |ana_MaskedValueIsZero(%B, ((1 << (width(C2) - countLeadingZeros(((C2 - 1) ^ C2)))) - 1))| () (_ BitVec 1))
(assert
 (let (($x72899 (and (distinct (bvand (bvadd (bvand %A C1) %B) C2) (bvand (bvadd %A %B) C2)) true)))
 (let (($x64669 (= |ana_MaskedValueIsZero(%B, ((1 << (width(C2) - countLeadingZeros(((C2 - 1) ^ C2)))) - 1))| (_ bv1 1))))
 (let ((?x14182 (bvsub C2 (_ bv1 42))))
 (let ((?x69790 (bvor ?x14182 C2)))
 (let (($x69279 (and (and (distinct ?x69790 (_ bv0 42)) true) (= (bvand (bvadd ?x69790 (_ bv1 42)) ?x69790) (_ bv0 42)) $x64669)))
 (let (($x71170 (or (= (bvand (bvadd C2 (_ bv1 42)) (bvsub (bvadd C2 (_ bv1 42)) (_ bv1 42))) (_ bv0 42)) $x69279)))
 (let ((?x54036 (bvand C1 C2)))
 (let (($x66952 (= ?x54036 C2)))
 (let ((?x73367 (ite (= ((_ extract 1 1) (bvxor ?x14182 C2)) (_ bv1 1)) (_ bv40 42) (ite (= ((_ extract 0 0) (bvxor ?x14182 C2)) (_ bv1 1)) (_ bv41 42) (_ bv42 42)))))
 (let ((?x73354 (ite (= ((_ extract 3 3) (bvxor ?x14182 C2)) (_ bv1 1)) (_ bv38 42) (ite (= ((_ extract 2 2) (bvxor ?x14182 C2)) (_ bv1 1)) (_ bv39 42) ?x73367))))
 (let ((?x73171 (ite (= ((_ extract 5 5) (bvxor ?x14182 C2)) (_ bv1 1)) (_ bv36 42) (ite (= ((_ extract 4 4) (bvxor ?x14182 C2)) (_ bv1 1)) (_ bv37 42) ?x73354))))
 (let ((?x71217 (ite (= ((_ extract 7 7) (bvxor ?x14182 C2)) (_ bv1 1)) (_ bv34 42) (ite (= ((_ extract 6 6) (bvxor ?x14182 C2)) (_ bv1 1)) (_ bv35 42) ?x73171))))
 (let ((?x73012 (ite (= ((_ extract 9 9) (bvxor ?x14182 C2)) (_ bv1 1)) (_ bv32 42) (ite (= ((_ extract 8 8) (bvxor ?x14182 C2)) (_ bv1 1)) (_ bv33 42) ?x71217))))
 (let ((?x69069 (ite (= ((_ extract 11 11) (bvxor ?x14182 C2)) (_ bv1 1)) (_ bv30 42) (ite (= ((_ extract 10 10) (bvxor ?x14182 C2)) (_ bv1 1)) (_ bv31 42) ?x73012))))
 (let ((?x72388 (ite (= ((_ extract 13 13) (bvxor ?x14182 C2)) (_ bv1 1)) (_ bv28 42) (ite (= ((_ extract 12 12) (bvxor ?x14182 C2)) (_ bv1 1)) (_ bv29 42) ?x69069))))
 (let ((?x72155 (ite (= ((_ extract 15 15) (bvxor ?x14182 C2)) (_ bv1 1)) (_ bv26 42) (ite (= ((_ extract 14 14) (bvxor ?x14182 C2)) (_ bv1 1)) (_ bv27 42) ?x72388))))
 (let ((?x72464 (ite (= ((_ extract 17 17) (bvxor ?x14182 C2)) (_ bv1 1)) (_ bv24 42) (ite (= ((_ extract 16 16) (bvxor ?x14182 C2)) (_ bv1 1)) (_ bv25 42) ?x72155))))
 (let ((?x70533 (ite (= ((_ extract 19 19) (bvxor ?x14182 C2)) (_ bv1 1)) (_ bv22 42) (ite (= ((_ extract 18 18) (bvxor ?x14182 C2)) (_ bv1 1)) (_ bv23 42) ?x72464))))
 (let ((?x72320 (ite (= ((_ extract 21 21) (bvxor ?x14182 C2)) (_ bv1 1)) (_ bv20 42) (ite (= ((_ extract 20 20) (bvxor ?x14182 C2)) (_ bv1 1)) (_ bv21 42) ?x70533))))
 (let ((?x68476 (ite (= ((_ extract 23 23) (bvxor ?x14182 C2)) (_ bv1 1)) (_ bv18 42) (ite (= ((_ extract 22 22) (bvxor ?x14182 C2)) (_ bv1 1)) (_ bv19 42) ?x72320))))
 (let ((?x72988 (ite (= ((_ extract 25 25) (bvxor ?x14182 C2)) (_ bv1 1)) (_ bv16 42) (ite (= ((_ extract 24 24) (bvxor ?x14182 C2)) (_ bv1 1)) (_ bv17 42) ?x68476))))
 (let ((?x72895 (ite (= ((_ extract 27 27) (bvxor ?x14182 C2)) (_ bv1 1)) (_ bv14 42) (ite (= ((_ extract 26 26) (bvxor ?x14182 C2)) (_ bv1 1)) (_ bv15 42) ?x72988))))
 (let ((?x71422 (ite (= ((_ extract 29 29) (bvxor ?x14182 C2)) (_ bv1 1)) (_ bv12 42) (ite (= ((_ extract 28 28) (bvxor ?x14182 C2)) (_ bv1 1)) (_ bv13 42) ?x72895))))
 (let ((?x73818 (ite (= ((_ extract 31 31) (bvxor ?x14182 C2)) (_ bv1 1)) (_ bv10 42) (ite (= ((_ extract 30 30) (bvxor ?x14182 C2)) (_ bv1 1)) (_ bv11 42) ?x71422))))
 (let ((?x65809 (ite (= ((_ extract 33 33) (bvxor ?x14182 C2)) (_ bv1 1)) (_ bv8 42) (ite (= ((_ extract 32 32) (bvxor ?x14182 C2)) (_ bv1 1)) (_ bv9 42) ?x73818))))
 (let ((?x65454 (ite (= ((_ extract 35 35) (bvxor ?x14182 C2)) (_ bv1 1)) (_ bv6 42) (ite (= ((_ extract 34 34) (bvxor ?x14182 C2)) (_ bv1 1)) (_ bv7 42) ?x65809))))
 (let ((?x72087 (ite (= ((_ extract 37 37) (bvxor ?x14182 C2)) (_ bv1 1)) (_ bv4 42) (ite (= ((_ extract 36 36) (bvxor ?x14182 C2)) (_ bv1 1)) (_ bv5 42) ?x65454))))
 (let ((?x72538 (ite (= ((_ extract 39 39) (bvxor ?x14182 C2)) (_ bv1 1)) (_ bv2 42) (ite (= ((_ extract 38 38) (bvxor ?x14182 C2)) (_ bv1 1)) (_ bv3 42) ?x72087))))
 (let ((?x68305 (ite (= ((_ extract 41 41) (bvxor ?x14182 C2)) (_ bv1 1)) (_ bv0 42) (ite (= ((_ extract 40 40) (bvxor ?x14182 C2)) (_ bv1 1)) (_ bv1 42) ?x72538))))
 (let (($x73800 (=> $x64669 (= (bvand %B (bvsub (bvshl (_ bv1 42) (bvsub (_ bv42 42) ?x68305)) (_ bv1 42))) (_ bv0 42)))))
 (and $x73800 $x66952 $x71170 $x72899))))))))))))))))))))))))))))))))
(check-sat)
