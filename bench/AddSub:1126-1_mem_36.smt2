(set-info :status unknown)
(declare-fun mem0 () (_ BitVec 8))
(declare-fun |ana_MaskedValueIsZero(%Y, (-1 << (log2(C1) + 1)))| () (_ BitVec 1))
(declare-fun C1 () (_ BitVec 41))
(declare-fun C2 () (_ BitVec 41))
(declare-fun %Y () (_ BitVec 41))
(assert
 (let (($x7990 (= |ana_MaskedValueIsZero(%Y, (-1 << (log2(C1) + 1)))| (_ bv1 1))))
 (let ((?x5150 (ite (and (distinct ((_ extract 2 2) C1) (_ bv0 1)) true) (_ bv2 41) (ite (and (distinct ((_ extract 1 1) C1) (_ bv0 1)) true) (_ bv1 41) (_ bv0 41)))))
 (let ((?x10662 (ite (and (distinct ((_ extract 5 5) C1) (_ bv0 1)) true) (_ bv5 41) (ite (and (distinct ((_ extract 4 4) C1) (_ bv0 1)) true) (_ bv4 41) (_ bv3 41)))))
 (let ((?x5664 (ite (and (distinct ((_ extract 8 8) C1) (_ bv0 1)) true) (_ bv8 41) (ite (and (distinct ((_ extract 7 7) C1) (_ bv0 1)) true) (_ bv7 41) (_ bv6 41)))))
 (let ((?x4341 (ite (and (distinct ((_ extract 10 9) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) C1) (_ bv0 1)) true) (_ bv10 41) (_ bv9 41)) ?x5664)))
 (let ((?x3313 (ite (and (distinct ((_ extract 10 6) C1) (_ bv0 5)) true) ?x4341 (ite (and (distinct ((_ extract 5 3) C1) (_ bv0 3)) true) ?x10662 ?x5150))))
 (let ((?x9856 (ite (and (distinct ((_ extract 13 13) C1) (_ bv0 1)) true) (_ bv13 41) (ite (and (distinct ((_ extract 12 12) C1) (_ bv0 1)) true) (_ bv12 41) (_ bv11 41)))))
 (let ((?x10306 (ite (and (distinct ((_ extract 15 14) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 15 15) C1) (_ bv0 1)) true) (_ bv15 41) (_ bv14 41)) ?x9856)))
 (let ((?x775 (ite (and (distinct ((_ extract 18 18) C1) (_ bv0 1)) true) (_ bv18 41) (ite (and (distinct ((_ extract 17 17) C1) (_ bv0 1)) true) (_ bv17 41) (_ bv16 41)))))
 (let ((?x1968 (ite (and (distinct ((_ extract 20 19) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 20 20) C1) (_ bv0 1)) true) (_ bv20 41) (_ bv19 41)) ?x775)))
 (let ((?x8093 (ite (and (distinct ((_ extract 20 11) C1) (_ bv0 10)) true) (ite (and (distinct ((_ extract 20 16) C1) (_ bv0 5)) true) ?x1968 ?x10306) ?x3313)))
 (let ((?x5659 (ite (and (distinct ((_ extract 23 23) C1) (_ bv0 1)) true) (_ bv23 41) (ite (and (distinct ((_ extract 22 22) C1) (_ bv0 1)) true) (_ bv22 41) (_ bv21 41)))))
 (let ((?x753 (ite (and (distinct ((_ extract 25 24) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 25 25) C1) (_ bv0 1)) true) (_ bv25 41) (_ bv24 41)) ?x5659)))
 (let ((?x5056 (ite (and (distinct ((_ extract 28 28) C1) (_ bv0 1)) true) (_ bv28 41) (ite (and (distinct ((_ extract 27 27) C1) (_ bv0 1)) true) (_ bv27 41) (_ bv26 41)))))
 (let ((?x6324 (ite (and (distinct ((_ extract 30 29) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 30 30) C1) (_ bv0 1)) true) (_ bv30 41) (_ bv29 41)) ?x5056)))
 (let ((?x870 (ite (and (distinct ((_ extract 33 33) C1) (_ bv0 1)) true) (_ bv33 41) (ite (and (distinct ((_ extract 32 32) C1) (_ bv0 1)) true) (_ bv32 41) (_ bv31 41)))))
 (let ((?x10515 (ite (and (distinct ((_ extract 35 34) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 35 35) C1) (_ bv0 1)) true) (_ bv35 41) (_ bv34 41)) ?x870)))
 (let ((?x5154 (ite (and (distinct ((_ extract 38 38) C1) (_ bv0 1)) true) (_ bv38 41) (ite (and (distinct ((_ extract 37 37) C1) (_ bv0 1)) true) (_ bv37 41) (_ bv36 41)))))
 (let ((?x1845 (ite (and (distinct ((_ extract 40 39) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 40 40) C1) (_ bv0 1)) true) (_ bv40 41) (_ bv39 41)) ?x5154)))
 (let ((?x5220 (ite (and (distinct ((_ extract 40 31) C1) (_ bv0 10)) true) (ite (and (distinct ((_ extract 40 36) C1) (_ bv0 5)) true) ?x1845 ?x10515) (ite (and (distinct ((_ extract 30 26) C1) (_ bv0 5)) true) ?x6324 ?x753))))
 (let ((?x2196 (bvshl (_ bv2199023255551 41) (bvadd (ite (and (distinct ((_ extract 40 21) C1) (_ bv0 20)) true) ?x5220 ?x8093) (_ bv1 41)))))
 (and (=> $x7990 (= (bvand %Y ?x2196) (_ bv0 41))) (= C2 (bvneg C1)) (and (and (distinct C1 (_ bv0 41)) true) (= (bvand C1 (bvsub C1 (_ bv1 41))) (_ bv0 41))) $x7990 (and (distinct mem0 mem0) true))))))))))))))))))))))))
(check-sat)
