(set-info :status unknown)
(declare-fun C3 () (_ BitVec 11))
(declare-fun C2 () (_ BitVec 11))
(declare-fun C () (_ BitVec 54))
(declare-fun %Op () (_ BitVec 54))
(assert
 (let ((?x3385 (ite (and (distinct ((_ extract 2 2) (bvsub C2 C3)) (_ bv0 1)) true) (_ bv2 11) (ite (and (distinct ((_ extract 1 1) (bvsub C2 C3)) (_ bv0 1)) true) (_ bv1 11) (_ bv0 11)))))
 (let ((?x4873 (ite (and (distinct ((_ extract 5 5) (bvsub C2 C3)) (_ bv0 1)) true) (_ bv5 11) (ite (and (distinct ((_ extract 4 4) (bvsub C2 C3)) (_ bv0 1)) true) (_ bv4 11) (_ bv3 11)))))
 (let ((?x8321 (ite (and (distinct ((_ extract 8 8) (bvsub C2 C3)) (_ bv0 1)) true) (_ bv8 11) (ite (and (distinct ((_ extract 7 7) (bvsub C2 C3)) (_ bv0 1)) true) (_ bv7 11) (_ bv6 11)))))
 (let ((?x6797 (ite (and (distinct ((_ extract 10 9) (bvsub C2 C3)) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) (bvsub C2 C3)) (_ bv0 1)) true) (_ bv10 11) (_ bv9 11)) ?x8321)))
 (let ((?x3157 (ite (and (distinct ((_ extract 10 6) (bvsub C2 C3)) (_ bv0 5)) true) ?x6797 (ite (and (distinct ((_ extract 5 3) (bvsub C2 C3)) (_ bv0 3)) true) ?x4873 ?x3385))))
 (let ((?x1308 (ite (and (distinct ((_ extract 3 2) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 3 3) C) (_ bv0 1)) true) (_ bv3 11) (_ bv2 11)) (ite (and (distinct ((_ extract 1 1) C) (_ bv0 1)) true) (_ bv1 11) (_ bv0 11)))))
 (let ((?x2138 (ite (and (distinct ((_ extract 6 6) C) (_ bv0 1)) true) (_ bv6 11) (ite (and (distinct ((_ extract 5 5) C) (_ bv0 1)) true) (_ bv5 11) (_ bv4 11)))))
 (let ((?x1961 (ite (and (distinct ((_ extract 10 9) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) C) (_ bv0 1)) true) (_ bv10 11) (_ bv9 11)) (ite (and (distinct ((_ extract 8 8) C) (_ bv0 1)) true) (_ bv8 11) (_ bv7 11)))))
 (let ((?x2445 (ite (and (distinct ((_ extract 13 13) C) (_ bv0 1)) true) (_ bv13 11) (ite (and (distinct ((_ extract 12 12) C) (_ bv0 1)) true) (_ bv12 11) (_ bv11 11)))))
 (let ((?x3822 (ite (and (distinct ((_ extract 13 7) C) (_ bv0 7)) true) (ite (and (distinct ((_ extract 13 11) C) (_ bv0 3)) true) ?x2445 ?x1961) (ite (and (distinct ((_ extract 6 4) C) (_ bv0 3)) true) ?x2138 ?x1308))))
 (let ((?x3689 (ite (and (distinct ((_ extract 17 16) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 17 17) C) (_ bv0 1)) true) (_ bv17 11) (_ bv16 11)) (ite (and (distinct ((_ extract 15 15) C) (_ bv0 1)) true) (_ bv15 11) (_ bv14 11)))))
 (let ((?x8341 (ite (and (distinct ((_ extract 20 20) C) (_ bv0 1)) true) (_ bv20 11) (ite (and (distinct ((_ extract 19 19) C) (_ bv0 1)) true) (_ bv19 11) (_ bv18 11)))))
 (let ((?x1896 (ite (and (distinct ((_ extract 23 23) C) (_ bv0 1)) true) (_ bv23 11) (ite (and (distinct ((_ extract 22 22) C) (_ bv0 1)) true) (_ bv22 11) (_ bv21 11)))))
 (let ((?x4779 (ite (and (distinct ((_ extract 26 26) C) (_ bv0 1)) true) (_ bv26 11) (ite (and (distinct ((_ extract 25 25) C) (_ bv0 1)) true) (_ bv25 11) (_ bv24 11)))))
 (let ((?x3312 (ite (and (distinct ((_ extract 26 21) C) (_ bv0 6)) true) (ite (and (distinct ((_ extract 26 24) C) (_ bv0 3)) true) ?x4779 ?x1896) (ite (and (distinct ((_ extract 20 18) C) (_ bv0 3)) true) ?x8341 ?x3689))))
 (let ((?x6551 (ite (and (distinct ((_ extract 30 29) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 30 30) C) (_ bv0 1)) true) (_ bv30 11) (_ bv29 11)) (ite (and (distinct ((_ extract 28 28) C) (_ bv0 1)) true) (_ bv28 11) (_ bv27 11)))))
 (let ((?x7487 (ite (and (distinct ((_ extract 33 33) C) (_ bv0 1)) true) (_ bv33 11) (ite (and (distinct ((_ extract 32 32) C) (_ bv0 1)) true) (_ bv32 11) (_ bv31 11)))))
 (let ((?x4248 (ite (and (distinct ((_ extract 37 36) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 37 37) C) (_ bv0 1)) true) (_ bv37 11) (_ bv36 11)) (ite (and (distinct ((_ extract 35 35) C) (_ bv0 1)) true) (_ bv35 11) (_ bv34 11)))))
 (let ((?x6226 (ite (and (distinct ((_ extract 40 40) C) (_ bv0 1)) true) (_ bv40 11) (ite (and (distinct ((_ extract 39 39) C) (_ bv0 1)) true) (_ bv39 11) (_ bv38 11)))))
 (let ((?x6169 (ite (and (distinct ((_ extract 40 34) C) (_ bv0 7)) true) (ite (and (distinct ((_ extract 40 38) C) (_ bv0 3)) true) ?x6226 ?x4248) (ite (and (distinct ((_ extract 33 31) C) (_ bv0 3)) true) ?x7487 ?x6551))))
 (let ((?x4183 (ite (and (distinct ((_ extract 44 43) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 44 44) C) (_ bv0 1)) true) (_ bv44 11) (_ bv43 11)) (ite (and (distinct ((_ extract 42 42) C) (_ bv0 1)) true) (_ bv42 11) (_ bv41 11)))))
 (let ((?x2156 (ite (and (distinct ((_ extract 47 47) C) (_ bv0 1)) true) (_ bv47 11) (ite (and (distinct ((_ extract 46 46) C) (_ bv0 1)) true) (_ bv46 11) (_ bv45 11)))))
 (let ((?x3805 (ite (and (distinct ((_ extract 50 50) C) (_ bv0 1)) true) (_ bv50 11) (ite (and (distinct ((_ extract 49 49) C) (_ bv0 1)) true) (_ bv49 11) (_ bv48 11)))))
 (let ((?x6445 (ite (and (distinct ((_ extract 53 53) C) (_ bv0 1)) true) (_ bv53 11) (ite (and (distinct ((_ extract 52 52) C) (_ bv0 1)) true) (_ bv52 11) (_ bv51 11)))))
 (let ((?x4519 (ite (and (distinct ((_ extract 53 48) C) (_ bv0 6)) true) (ite (and (distinct ((_ extract 53 51) C) (_ bv0 3)) true) ?x6445 ?x3805) (ite (and (distinct ((_ extract 47 45) C) (_ bv0 3)) true) ?x2156 ?x4183))))
 (let ((?x7037 (ite (and (distinct ((_ extract 53 27) C) (_ bv0 27)) true) (ite (and (distinct ((_ extract 53 41) C) (_ bv0 13)) true) ?x4519 ?x6169) (ite (and (distinct ((_ extract 26 14) C) (_ bv0 13)) true) ?x3312 ?x3822))))
 (let ((?x6441 (bvsub ?x7037 ?x3157)))
 (let ((?x3966 (ite (bvsgt (_ bv0 11) ?x6441) (_ bv0 11) ?x6441)))
 (let ((?x8017 (bvsub ?x3157 ?x7037)))
 (let ((?x1513 (ite (bvsgt (_ bv0 11) ?x8017) (_ bv0 11) ?x8017)))
 (let ((?x1348 (ite (= (ite (and (distinct (bvand %Op C) (_ bv0 54)) true) (_ bv1 1) (_ bv0 1)) (_ bv1 1)) C2 C3)))
 (let (($x5899 (and (distinct ?x1348 (bvadd (bvlshr (bvshl ((_ extract 10 0) (bvand %Op C)) ?x1513) ?x3966) C3)) true)))
 (let ((?x7463 (ite (and (distinct ((_ extract 3 2) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 3 3) C) (_ bv0 1)) true) (_ bv3 32) (_ bv2 32)) (ite (and (distinct ((_ extract 1 1) C) (_ bv0 1)) true) (_ bv1 32) (_ bv0 32)))))
 (let ((?x4716 (ite (and (distinct ((_ extract 6 6) C) (_ bv0 1)) true) (_ bv6 32) (ite (and (distinct ((_ extract 5 5) C) (_ bv0 1)) true) (_ bv5 32) (_ bv4 32)))))
 (let ((?x2182 (ite (and (distinct ((_ extract 10 9) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) C) (_ bv0 1)) true) (_ bv10 32) (_ bv9 32)) (ite (and (distinct ((_ extract 8 8) C) (_ bv0 1)) true) (_ bv8 32) (_ bv7 32)))))
 (let ((?x7789 (ite (and (distinct ((_ extract 13 13) C) (_ bv0 1)) true) (_ bv13 32) (ite (and (distinct ((_ extract 12 12) C) (_ bv0 1)) true) (_ bv12 32) (_ bv11 32)))))
 (let ((?x4764 (ite (and (distinct ((_ extract 13 7) C) (_ bv0 7)) true) (ite (and (distinct ((_ extract 13 11) C) (_ bv0 3)) true) ?x7789 ?x2182) (ite (and (distinct ((_ extract 6 4) C) (_ bv0 3)) true) ?x4716 ?x7463))))
 (let ((?x6756 (ite (and (distinct ((_ extract 17 16) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 17 17) C) (_ bv0 1)) true) (_ bv17 32) (_ bv16 32)) (ite (and (distinct ((_ extract 15 15) C) (_ bv0 1)) true) (_ bv15 32) (_ bv14 32)))))
 (let ((?x6112 (ite (and (distinct ((_ extract 20 20) C) (_ bv0 1)) true) (_ bv20 32) (ite (and (distinct ((_ extract 19 19) C) (_ bv0 1)) true) (_ bv19 32) (_ bv18 32)))))
 (let ((?x4743 (ite (and (distinct ((_ extract 23 23) C) (_ bv0 1)) true) (_ bv23 32) (ite (and (distinct ((_ extract 22 22) C) (_ bv0 1)) true) (_ bv22 32) (_ bv21 32)))))
 (let ((?x4437 (ite (and (distinct ((_ extract 26 26) C) (_ bv0 1)) true) (_ bv26 32) (ite (and (distinct ((_ extract 25 25) C) (_ bv0 1)) true) (_ bv25 32) (_ bv24 32)))))
 (let ((?x7131 (ite (and (distinct ((_ extract 26 21) C) (_ bv0 6)) true) (ite (and (distinct ((_ extract 26 24) C) (_ bv0 3)) true) ?x4437 ?x4743) (ite (and (distinct ((_ extract 20 18) C) (_ bv0 3)) true) ?x6112 ?x6756))))
 (let ((?x4515 (ite (and (distinct ((_ extract 30 29) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 30 30) C) (_ bv0 1)) true) (_ bv30 32) (_ bv29 32)) (ite (and (distinct ((_ extract 28 28) C) (_ bv0 1)) true) (_ bv28 32) (_ bv27 32)))))
 (let ((?x3063 (ite (and (distinct ((_ extract 33 33) C) (_ bv0 1)) true) (_ bv33 32) (ite (and (distinct ((_ extract 32 32) C) (_ bv0 1)) true) (_ bv32 32) (_ bv31 32)))))
 (let ((?x2512 (ite (and (distinct ((_ extract 37 36) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 37 37) C) (_ bv0 1)) true) (_ bv37 32) (_ bv36 32)) (ite (and (distinct ((_ extract 35 35) C) (_ bv0 1)) true) (_ bv35 32) (_ bv34 32)))))
 (let ((?x1822 (ite (and (distinct ((_ extract 40 40) C) (_ bv0 1)) true) (_ bv40 32) (ite (and (distinct ((_ extract 39 39) C) (_ bv0 1)) true) (_ bv39 32) (_ bv38 32)))))
 (let ((?x3733 (ite (and (distinct ((_ extract 40 34) C) (_ bv0 7)) true) (ite (and (distinct ((_ extract 40 38) C) (_ bv0 3)) true) ?x1822 ?x2512) (ite (and (distinct ((_ extract 33 31) C) (_ bv0 3)) true) ?x3063 ?x4515))))
 (let ((?x4994 (ite (and (distinct ((_ extract 44 43) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 44 44) C) (_ bv0 1)) true) (_ bv44 32) (_ bv43 32)) (ite (and (distinct ((_ extract 42 42) C) (_ bv0 1)) true) (_ bv42 32) (_ bv41 32)))))
 (let ((?x5933 (ite (and (distinct ((_ extract 47 47) C) (_ bv0 1)) true) (_ bv47 32) (ite (and (distinct ((_ extract 46 46) C) (_ bv0 1)) true) (_ bv46 32) (_ bv45 32)))))
 (let ((?x1843 (ite (and (distinct ((_ extract 50 50) C) (_ bv0 1)) true) (_ bv50 32) (ite (and (distinct ((_ extract 49 49) C) (_ bv0 1)) true) (_ bv49 32) (_ bv48 32)))))
 (let ((?x2646 (ite (and (distinct ((_ extract 53 53) C) (_ bv0 1)) true) (_ bv53 32) (ite (and (distinct ((_ extract 52 52) C) (_ bv0 1)) true) (_ bv52 32) (_ bv51 32)))))
 (let ((?x1112 (ite (and (distinct ((_ extract 53 48) C) (_ bv0 6)) true) (ite (and (distinct ((_ extract 53 51) C) (_ bv0 3)) true) ?x2646 ?x1843) (ite (and (distinct ((_ extract 47 45) C) (_ bv0 3)) true) ?x5933 ?x4994))))
 (let ((?x3732 (ite (and (distinct ((_ extract 53 27) C) (_ bv0 27)) true) (ite (and (distinct ((_ extract 53 41) C) (_ bv0 13)) true) ?x1112 ?x3733) (ite (and (distinct ((_ extract 26 14) C) (_ bv0 13)) true) ?x7131 ?x4764))))
 (let (($x2545 (and (and (distinct (bvsub C2 C3) (_ bv0 11)) true) (= (bvand (bvsub C2 C3) (bvsub (bvsub C2 C3) (_ bv1 11))) (_ bv0 11)))))
 (and (and (and (distinct C (_ bv0 54)) true) (= (bvand C (bvsub C (_ bv1 54))) (_ bv0 54))) $x2545 (bvslt ?x3732 (_ bv11 32)) $x5899))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
