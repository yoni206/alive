(set-info :status unknown)
(declare-fun mem0 () (_ BitVec 8))
(declare-fun %p2 () (_ BitVec 64))
(declare-fun idx () (_ BitVec 64))
(declare-fun %p1 () (_ BitVec 64))
(declare-fun |ana_equivalentAddressValues(%p1, %p2)| () (_ BitVec 1))
(assert
 (let ((?x7072 (concat (concat (concat (concat (concat mem0 mem0) mem0) mem0) mem0) mem0)))
 (let (($x7360 (or true true)))
 (let (($x15642 (and (distinct %p2 (_ bv0 64)) true)))
 (let (($x15581 (and (distinct %p1 (_ bv0 64)) true)))
 (let (($x534 (and $x15581 $x7360 $x15581 $x7360 $x15581 $x7360 $x15642 $x7360 (= idx (bvadd %p2 (_ bv0 64))))))
 (let (($x3991 (and $x15581 $x7360 $x15581 $x7360 $x15581 $x7360 $x15642 $x7360 (= idx (bvadd %p2 (_ bv1 64))))))
 (let (($x8433 (and $x15581 $x7360 $x15581 $x7360 $x15581 $x7360 $x15642 $x7360 (= idx (bvadd %p2 (_ bv2 64))))))
 (let ((?x22768 (ite $x8433 ((_ extract 23 16) ?x7072) (ite $x3991 ((_ extract 15 8) ?x7072) (ite $x534 ((_ extract 7 0) ?x7072) mem0)))))
 (let (($x6316 (and $x15581 $x7360 $x15581 $x7360 $x15581 $x7360 $x15642 $x7360 (= idx (bvadd %p2 (_ bv3 64))))))
 (let (($x11187 (and $x15581 $x7360 $x15581 $x7360 $x15581 $x7360 $x15642 $x7360 (= idx (bvadd %p2 (_ bv4 64))))))
 (let (($x18818 (and $x15581 $x7360 $x15581 $x7360 $x15581 $x7360 $x15642 $x7360 (= idx (bvadd %p2 (_ bv5 64))))))
 (let ((?x14303 (ite $x18818 ((_ extract 47 40) ?x7072) (ite $x11187 ((_ extract 39 32) ?x7072) (ite $x6316 ((_ extract 31 24) ?x7072) ?x22768)))))
 (let (($x6215 (= |ana_equivalentAddressValues(%p1, %p2)| (_ bv1 1))))
 (and (=> $x6215 (= %p1 %p2)) $x6215 (and (distinct ?x14303 mem0) true))))))))))))))))
(check-sat)
