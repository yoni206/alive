(set-info :source |
 Generated by Alive 0.1
 More info in N. P. Lopes, D. Menendez, S. Nagarakatte, J. Regehr.
 Provably Correct Peephole Optimizations with Alive. In PLDI'15.
|)

(set-info :status unknown)
(declare-fun |ana_MaskedValueIsZero(%B, ((1 << (width(C2) - countLeadingZeros(((C2 - 1) ^ C2)))) - 1))| () (_ BitVec 1))
(declare-fun C2 () (_ BitVec 55))
(declare-fun C1 () (_ BitVec 55))
(declare-fun %B () (_ BitVec 55))
(assert
 (let (($x64669 (= |ana_MaskedValueIsZero(%B, ((1 << (width(C2) - countLeadingZeros(((C2 - 1) ^ C2)))) - 1))| (_ bv1 1))))
 (let ((?x23770 (bvsub C2 (_ bv1 55))))
 (let ((?x74278 (bvor ?x23770 C2)))
 (let (($x76367 (and (and (distinct ?x74278 (_ bv0 55)) true) (= (bvand (bvadd ?x74278 (_ bv1 55)) ?x74278) (_ bv0 55)) $x64669)))
 (let (($x76864 (or (= (bvand (bvadd C2 (_ bv1 55)) (bvsub (bvadd C2 (_ bv1 55)) (_ bv1 55))) (_ bv0 55)) $x76367)))
 (let ((?x54545 (bvand C1 C2)))
 (let (($x73839 (= ?x54545 C2)))
 (let ((?x78254 (ite (= ((_ extract 1 1) (bvxor ?x23770 C2)) (_ bv1 1)) (_ bv53 55) (ite (= ((_ extract 0 0) (bvxor ?x23770 C2)) (_ bv1 1)) (_ bv54 55) (_ bv55 55)))))
 (let ((?x70079 (ite (= ((_ extract 3 3) (bvxor ?x23770 C2)) (_ bv1 1)) (_ bv51 55) (ite (= ((_ extract 2 2) (bvxor ?x23770 C2)) (_ bv1 1)) (_ bv52 55) ?x78254))))
 (let ((?x64361 (ite (= ((_ extract 5 5) (bvxor ?x23770 C2)) (_ bv1 1)) (_ bv49 55) (ite (= ((_ extract 4 4) (bvxor ?x23770 C2)) (_ bv1 1)) (_ bv50 55) ?x70079))))
 (let ((?x75926 (ite (= ((_ extract 7 7) (bvxor ?x23770 C2)) (_ bv1 1)) (_ bv47 55) (ite (= ((_ extract 6 6) (bvxor ?x23770 C2)) (_ bv1 1)) (_ bv48 55) ?x64361))))
 (let ((?x72202 (ite (= ((_ extract 9 9) (bvxor ?x23770 C2)) (_ bv1 1)) (_ bv45 55) (ite (= ((_ extract 8 8) (bvxor ?x23770 C2)) (_ bv1 1)) (_ bv46 55) ?x75926))))
 (let ((?x74483 (ite (= ((_ extract 11 11) (bvxor ?x23770 C2)) (_ bv1 1)) (_ bv43 55) (ite (= ((_ extract 10 10) (bvxor ?x23770 C2)) (_ bv1 1)) (_ bv44 55) ?x72202))))
 (let ((?x71647 (ite (= ((_ extract 13 13) (bvxor ?x23770 C2)) (_ bv1 1)) (_ bv41 55) (ite (= ((_ extract 12 12) (bvxor ?x23770 C2)) (_ bv1 1)) (_ bv42 55) ?x74483))))
 (let ((?x69334 (ite (= ((_ extract 15 15) (bvxor ?x23770 C2)) (_ bv1 1)) (_ bv39 55) (ite (= ((_ extract 14 14) (bvxor ?x23770 C2)) (_ bv1 1)) (_ bv40 55) ?x71647))))
 (let ((?x73182 (ite (= ((_ extract 17 17) (bvxor ?x23770 C2)) (_ bv1 1)) (_ bv37 55) (ite (= ((_ extract 16 16) (bvxor ?x23770 C2)) (_ bv1 1)) (_ bv38 55) ?x69334))))
 (let ((?x77839 (ite (= ((_ extract 19 19) (bvxor ?x23770 C2)) (_ bv1 1)) (_ bv35 55) (ite (= ((_ extract 18 18) (bvxor ?x23770 C2)) (_ bv1 1)) (_ bv36 55) ?x73182))))
 (let ((?x78977 (ite (= ((_ extract 21 21) (bvxor ?x23770 C2)) (_ bv1 1)) (_ bv33 55) (ite (= ((_ extract 20 20) (bvxor ?x23770 C2)) (_ bv1 1)) (_ bv34 55) ?x77839))))
 (let ((?x76377 (ite (= ((_ extract 23 23) (bvxor ?x23770 C2)) (_ bv1 1)) (_ bv31 55) (ite (= ((_ extract 22 22) (bvxor ?x23770 C2)) (_ bv1 1)) (_ bv32 55) ?x78977))))
 (let ((?x76704 (ite (= ((_ extract 25 25) (bvxor ?x23770 C2)) (_ bv1 1)) (_ bv29 55) (ite (= ((_ extract 24 24) (bvxor ?x23770 C2)) (_ bv1 1)) (_ bv30 55) ?x76377))))
 (let ((?x77306 (ite (= ((_ extract 27 27) (bvxor ?x23770 C2)) (_ bv1 1)) (_ bv27 55) (ite (= ((_ extract 26 26) (bvxor ?x23770 C2)) (_ bv1 1)) (_ bv28 55) ?x76704))))
 (let ((?x78221 (ite (= ((_ extract 29 29) (bvxor ?x23770 C2)) (_ bv1 1)) (_ bv25 55) (ite (= ((_ extract 28 28) (bvxor ?x23770 C2)) (_ bv1 1)) (_ bv26 55) ?x77306))))
 (let ((?x79242 (ite (= ((_ extract 31 31) (bvxor ?x23770 C2)) (_ bv1 1)) (_ bv23 55) (ite (= ((_ extract 30 30) (bvxor ?x23770 C2)) (_ bv1 1)) (_ bv24 55) ?x78221))))
 (let ((?x78980 (ite (= ((_ extract 33 33) (bvxor ?x23770 C2)) (_ bv1 1)) (_ bv21 55) (ite (= ((_ extract 32 32) (bvxor ?x23770 C2)) (_ bv1 1)) (_ bv22 55) ?x79242))))
 (let ((?x72497 (ite (= ((_ extract 35 35) (bvxor ?x23770 C2)) (_ bv1 1)) (_ bv19 55) (ite (= ((_ extract 34 34) (bvxor ?x23770 C2)) (_ bv1 1)) (_ bv20 55) ?x78980))))
 (let ((?x76475 (ite (= ((_ extract 37 37) (bvxor ?x23770 C2)) (_ bv1 1)) (_ bv17 55) (ite (= ((_ extract 36 36) (bvxor ?x23770 C2)) (_ bv1 1)) (_ bv18 55) ?x72497))))
 (let ((?x74311 (ite (= ((_ extract 39 39) (bvxor ?x23770 C2)) (_ bv1 1)) (_ bv15 55) (ite (= ((_ extract 38 38) (bvxor ?x23770 C2)) (_ bv1 1)) (_ bv16 55) ?x76475))))
 (let ((?x79266 (ite (= ((_ extract 41 41) (bvxor ?x23770 C2)) (_ bv1 1)) (_ bv13 55) (ite (= ((_ extract 40 40) (bvxor ?x23770 C2)) (_ bv1 1)) (_ bv14 55) ?x74311))))
 (let ((?x68096 (ite (= ((_ extract 43 43) (bvxor ?x23770 C2)) (_ bv1 1)) (_ bv11 55) (ite (= ((_ extract 42 42) (bvxor ?x23770 C2)) (_ bv1 1)) (_ bv12 55) ?x79266))))
 (let ((?x73200 (ite (= ((_ extract 45 45) (bvxor ?x23770 C2)) (_ bv1 1)) (_ bv9 55) (ite (= ((_ extract 44 44) (bvxor ?x23770 C2)) (_ bv1 1)) (_ bv10 55) ?x68096))))
 (let ((?x77385 (ite (= ((_ extract 47 47) (bvxor ?x23770 C2)) (_ bv1 1)) (_ bv7 55) (ite (= ((_ extract 46 46) (bvxor ?x23770 C2)) (_ bv1 1)) (_ bv8 55) ?x73200))))
 (let ((?x76526 (ite (= ((_ extract 49 49) (bvxor ?x23770 C2)) (_ bv1 1)) (_ bv5 55) (ite (= ((_ extract 48 48) (bvxor ?x23770 C2)) (_ bv1 1)) (_ bv6 55) ?x77385))))
 (let ((?x71695 (ite (= ((_ extract 51 51) (bvxor ?x23770 C2)) (_ bv1 1)) (_ bv3 55) (ite (= ((_ extract 50 50) (bvxor ?x23770 C2)) (_ bv1 1)) (_ bv4 55) ?x76526))))
 (let ((?x68325 (ite (= ((_ extract 53 53) (bvxor ?x23770 C2)) (_ bv1 1)) (_ bv1 55) (ite (= ((_ extract 52 52) (bvxor ?x23770 C2)) (_ bv1 1)) (_ bv2 55) ?x71695))))
 (let ((?x73346 (bvshl (_ bv1 55) (bvsub (_ bv55 55) (ite (= ((_ extract 54 54) (bvxor ?x23770 C2)) (_ bv1 1)) (_ bv0 55) ?x68325)))))
 (let (($x77630 (=> $x64669 (= (bvand %B (bvsub ?x73346 (_ bv1 55))) (_ bv0 55)))))
 (and $x77630 $x73839 $x76864 false))))))))))))))))))))))))))))))))))))))
(check-sat)
