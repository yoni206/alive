(set-info :status unknown)
(declare-fun C1 () (_ BitVec 62))
(declare-fun C2 () (_ BitVec 11))
(assert
 (let ((?x3341 (ite (and (distinct ((_ extract 3 2) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 3 3) C1) (_ bv0 1)) true) (_ bv3 32) (_ bv2 32)) (ite (and (distinct ((_ extract 1 1) C1) (_ bv0 1)) true) (_ bv1 32) (_ bv0 32)))))
 (let ((?x5721 (ite (and (distinct ((_ extract 7 6) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 7 7) C1) (_ bv0 1)) true) (_ bv7 32) (_ bv6 32)) (ite (and (distinct ((_ extract 5 5) C1) (_ bv0 1)) true) (_ bv5 32) (_ bv4 32)))))
 (let ((?x4284 (ite (and (distinct ((_ extract 11 10) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 11 11) C1) (_ bv0 1)) true) (_ bv11 32) (_ bv10 32)) (ite (and (distinct ((_ extract 9 9) C1) (_ bv0 1)) true) (_ bv9 32) (_ bv8 32)))))
 (let ((?x2664 (ite (and (distinct ((_ extract 15 14) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 15 15) C1) (_ bv0 1)) true) (_ bv15 32) (_ bv14 32)) (ite (and (distinct ((_ extract 13 13) C1) (_ bv0 1)) true) (_ bv13 32) (_ bv12 32)))))
 (let ((?x4961 (ite (and (distinct ((_ extract 15 8) C1) (_ bv0 8)) true) (ite (and (distinct ((_ extract 15 12) C1) (_ bv0 4)) true) ?x2664 ?x4284) (ite (and (distinct ((_ extract 7 4) C1) (_ bv0 4)) true) ?x5721 ?x3341))))
 (let ((?x4172 (ite (and (distinct ((_ extract 19 18) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 19 19) C1) (_ bv0 1)) true) (_ bv19 32) (_ bv18 32)) (ite (and (distinct ((_ extract 17 17) C1) (_ bv0 1)) true) (_ bv17 32) (_ bv16 32)))))
 (let ((?x5850 (ite (and (distinct ((_ extract 23 22) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 23 23) C1) (_ bv0 1)) true) (_ bv23 32) (_ bv22 32)) (ite (and (distinct ((_ extract 21 21) C1) (_ bv0 1)) true) (_ bv21 32) (_ bv20 32)))))
 (let ((?x3063 (ite (and (distinct ((_ extract 27 26) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 27 27) C1) (_ bv0 1)) true) (_ bv27 32) (_ bv26 32)) (ite (and (distinct ((_ extract 25 25) C1) (_ bv0 1)) true) (_ bv25 32) (_ bv24 32)))))
 (let ((?x4707 (ite (and (distinct ((_ extract 30 30) C1) (_ bv0 1)) true) (_ bv30 32) (ite (and (distinct ((_ extract 29 29) C1) (_ bv0 1)) true) (_ bv29 32) (_ bv28 32)))))
 (let ((?x4160 (ite (and (distinct ((_ extract 30 24) C1) (_ bv0 7)) true) (ite (and (distinct ((_ extract 30 28) C1) (_ bv0 3)) true) ?x4707 ?x3063) (ite (and (distinct ((_ extract 23 20) C1) (_ bv0 4)) true) ?x5850 ?x4172))))
 (let ((?x6402 (ite (and (distinct ((_ extract 34 33) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 34 34) C1) (_ bv0 1)) true) (_ bv34 32) (_ bv33 32)) (ite (and (distinct ((_ extract 32 32) C1) (_ bv0 1)) true) (_ bv32 32) (_ bv31 32)))))
 (let ((?x4599 (ite (and (distinct ((_ extract 38 37) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 38 38) C1) (_ bv0 1)) true) (_ bv38 32) (_ bv37 32)) (ite (and (distinct ((_ extract 36 36) C1) (_ bv0 1)) true) (_ bv36 32) (_ bv35 32)))))
 (let ((?x4067 (ite (and (distinct ((_ extract 42 41) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 42 42) C1) (_ bv0 1)) true) (_ bv42 32) (_ bv41 32)) (ite (and (distinct ((_ extract 40 40) C1) (_ bv0 1)) true) (_ bv40 32) (_ bv39 32)))))
 (let ((?x3364 (ite (and (distinct ((_ extract 46 45) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 46 46) C1) (_ bv0 1)) true) (_ bv46 32) (_ bv45 32)) (ite (and (distinct ((_ extract 44 44) C1) (_ bv0 1)) true) (_ bv44 32) (_ bv43 32)))))
 (let ((?x5647 (ite (and (distinct ((_ extract 46 39) C1) (_ bv0 8)) true) (ite (and (distinct ((_ extract 46 43) C1) (_ bv0 4)) true) ?x3364 ?x4067) (ite (and (distinct ((_ extract 38 35) C1) (_ bv0 4)) true) ?x4599 ?x6402))))
 (let ((?x2836 (ite (and (distinct ((_ extract 50 49) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 50 50) C1) (_ bv0 1)) true) (_ bv50 32) (_ bv49 32)) (ite (and (distinct ((_ extract 48 48) C1) (_ bv0 1)) true) (_ bv48 32) (_ bv47 32)))))
 (let ((?x2027 (ite (and (distinct ((_ extract 54 53) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 54 54) C1) (_ bv0 1)) true) (_ bv54 32) (_ bv53 32)) (ite (and (distinct ((_ extract 52 52) C1) (_ bv0 1)) true) (_ bv52 32) (_ bv51 32)))))
 (let ((?x4894 (ite (and (distinct ((_ extract 58 57) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 58 58) C1) (_ bv0 1)) true) (_ bv58 32) (_ bv57 32)) (ite (and (distinct ((_ extract 56 56) C1) (_ bv0 1)) true) (_ bv56 32) (_ bv55 32)))))
 (let ((?x4774 (ite (and (distinct ((_ extract 61 61) C1) (_ bv0 1)) true) (_ bv61 32) (ite (and (distinct ((_ extract 60 60) C1) (_ bv0 1)) true) (_ bv60 32) (_ bv59 32)))))
 (let ((?x2672 (ite (and (distinct ((_ extract 61 55) C1) (_ bv0 7)) true) (ite (and (distinct ((_ extract 61 59) C1) (_ bv0 3)) true) ?x4774 ?x4894) (ite (and (distinct ((_ extract 54 51) C1) (_ bv0 4)) true) ?x2027 ?x2836))))
 (let ((?x1403 (ite (and (distinct ((_ extract 61 31) C1) (_ bv0 31)) true) (ite (and (distinct ((_ extract 61 47) C1) (_ bv0 15)) true) ?x2672 ?x5647) (ite (and (distinct ((_ extract 30 16) C1) (_ bv0 15)) true) ?x4160 ?x4961))))
 (let ((?x1744 (ite (and (distinct ((_ extract 2 2) C2) (_ bv0 1)) true) (_ bv2 32) (ite (and (distinct ((_ extract 1 1) C2) (_ bv0 1)) true) (_ bv1 32) (_ bv0 32)))))
 (let ((?x4670 (ite (and (distinct ((_ extract 5 5) C2) (_ bv0 1)) true) (_ bv5 32) (ite (and (distinct ((_ extract 4 4) C2) (_ bv0 1)) true) (_ bv4 32) (_ bv3 32)))))
 (let ((?x2894 (ite (and (distinct ((_ extract 8 8) C2) (_ bv0 1)) true) (_ bv8 32) (ite (and (distinct ((_ extract 7 7) C2) (_ bv0 1)) true) (_ bv7 32) (_ bv6 32)))))
 (let ((?x5152 (ite (and (distinct ((_ extract 10 9) C2) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) C2) (_ bv0 1)) true) (_ bv10 32) (_ bv9 32)) ?x2894)))
 (let ((?x2844 (ite (and (distinct ((_ extract 10 6) C2) (_ bv0 5)) true) ?x5152 (ite (and (distinct ((_ extract 5 3) C2) (_ bv0 3)) true) ?x4670 ?x1744))))
 (and (and (and (distinct C1 (_ bv0 62)) true) (= (bvand C1 (bvsub C1 (_ bv1 62))) (_ bv0 62))) (and (and (distinct C2 (_ bv0 11)) true) (= (bvand C2 (bvsub C2 (_ bv1 11))) (_ bv0 11))) (bvsge ?x2844 ?x1403) false))))))))))))))))))))))))))))
(check-sat)
