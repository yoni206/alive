(set-info :source |
 Generated by Alive 0.1
 More info in N. P. Lopes, D. Menendez, S. Nagarakatte, J. Regehr.
 Provably Correct Peephole Optimizations with Alive. In PLDI'15.
|)

(set-info :status unknown)
(declare-fun C2 () (_ BitVec 21))
(declare-fun %B () (_ BitVec 21))
(declare-fun %A () (_ BitVec 21))
(declare-fun C1 () (_ BitVec 21))
(declare-fun |ana_MaskedValueIsZero(%B, ((1 << (width(C2) - countLeadingZeros(((C2 - 1) ^ C2)))) - 1))| () (_ BitVec 1))
(assert
 (let (($x65444 (and (distinct (bvand (bvadd (bvand %A C1) %B) C2) (bvand (bvadd %A %B) C2)) true)))
 (let (($x64669 (= |ana_MaskedValueIsZero(%B, ((1 << (width(C2) - countLeadingZeros(((C2 - 1) ^ C2)))) - 1))| (_ bv1 1))))
 (let ((?x9837 (bvsub C2 (_ bv1 21))))
 (let ((?x60858 (bvor ?x9837 C2)))
 (let (($x64323 (and (and (distinct ?x60858 (_ bv0 21)) true) (= (bvand (bvadd ?x60858 (_ bv1 21)) ?x60858) (_ bv0 21)) $x64669)))
 (let (($x64018 (or (= (bvand (bvadd C2 (_ bv1 21)) (bvsub (bvadd C2 (_ bv1 21)) (_ bv1 21))) (_ bv0 21)) $x64323)))
 (let ((?x52054 (bvand C1 C2)))
 (let (($x63470 (= ?x52054 C2)))
 (let ((?x45146 (ite (= ((_ extract 1 1) (bvxor ?x9837 C2)) (_ bv1 1)) (_ bv19 21) (ite (= ((_ extract 0 0) (bvxor ?x9837 C2)) (_ bv1 1)) (_ bv20 21) (_ bv21 21)))))
 (let ((?x60053 (ite (= ((_ extract 3 3) (bvxor ?x9837 C2)) (_ bv1 1)) (_ bv17 21) (ite (= ((_ extract 2 2) (bvxor ?x9837 C2)) (_ bv1 1)) (_ bv18 21) ?x45146))))
 (let ((?x59848 (ite (= ((_ extract 5 5) (bvxor ?x9837 C2)) (_ bv1 1)) (_ bv15 21) (ite (= ((_ extract 4 4) (bvxor ?x9837 C2)) (_ bv1 1)) (_ bv16 21) ?x60053))))
 (let ((?x58694 (ite (= ((_ extract 7 7) (bvxor ?x9837 C2)) (_ bv1 1)) (_ bv13 21) (ite (= ((_ extract 6 6) (bvxor ?x9837 C2)) (_ bv1 1)) (_ bv14 21) ?x59848))))
 (let ((?x55373 (ite (= ((_ extract 9 9) (bvxor ?x9837 C2)) (_ bv1 1)) (_ bv11 21) (ite (= ((_ extract 8 8) (bvxor ?x9837 C2)) (_ bv1 1)) (_ bv12 21) ?x58694))))
 (let ((?x59509 (ite (= ((_ extract 11 11) (bvxor ?x9837 C2)) (_ bv1 1)) (_ bv9 21) (ite (= ((_ extract 10 10) (bvxor ?x9837 C2)) (_ bv1 1)) (_ bv10 21) ?x55373))))
 (let ((?x60354 (ite (= ((_ extract 13 13) (bvxor ?x9837 C2)) (_ bv1 1)) (_ bv7 21) (ite (= ((_ extract 12 12) (bvxor ?x9837 C2)) (_ bv1 1)) (_ bv8 21) ?x59509))))
 (let ((?x60314 (ite (= ((_ extract 15 15) (bvxor ?x9837 C2)) (_ bv1 1)) (_ bv5 21) (ite (= ((_ extract 14 14) (bvxor ?x9837 C2)) (_ bv1 1)) (_ bv6 21) ?x60354))))
 (let ((?x61252 (ite (= ((_ extract 17 17) (bvxor ?x9837 C2)) (_ bv1 1)) (_ bv3 21) (ite (= ((_ extract 16 16) (bvxor ?x9837 C2)) (_ bv1 1)) (_ bv4 21) ?x60314))))
 (let ((?x62236 (ite (= ((_ extract 19 19) (bvxor ?x9837 C2)) (_ bv1 1)) (_ bv1 21) (ite (= ((_ extract 18 18) (bvxor ?x9837 C2)) (_ bv1 1)) (_ bv2 21) ?x61252))))
 (let ((?x63471 (bvshl (_ bv1 21) (bvsub (_ bv21 21) (ite (= ((_ extract 20 20) (bvxor ?x9837 C2)) (_ bv1 1)) (_ bv0 21) ?x62236)))))
 (let (($x63843 (=> $x64669 (= (bvand %B (bvsub ?x63471 (_ bv1 21))) (_ bv0 21)))))
 (and $x63843 $x63470 $x64018 $x65444))))))))))))))))))))))
(check-sat)
