(set-info :status unknown)
(declare-fun C2 () (_ BitVec 11))
(declare-fun C1 () (_ BitVec 37))
(assert
 (let ((?x5946 (ite (and (distinct ((_ extract 2 2) C2) (_ bv0 1)) true) (_ bv2 37) (ite (and (distinct ((_ extract 1 1) C2) (_ bv0 1)) true) (_ bv1 37) (_ bv0 37)))))
 (let ((?x2418 (ite (and (distinct ((_ extract 5 5) C2) (_ bv0 1)) true) (_ bv5 37) (ite (and (distinct ((_ extract 4 4) C2) (_ bv0 1)) true) (_ bv4 37) (_ bv3 37)))))
 (let ((?x1407 (ite (and (distinct ((_ extract 8 8) C2) (_ bv0 1)) true) (_ bv8 37) (ite (and (distinct ((_ extract 7 7) C2) (_ bv0 1)) true) (_ bv7 37) (_ bv6 37)))))
 (let ((?x5646 (ite (and (distinct ((_ extract 10 9) C2) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) C2) (_ bv0 1)) true) (_ bv10 37) (_ bv9 37)) ?x1407)))
 (let ((?x6836 (ite (and (distinct ((_ extract 10 6) C2) (_ bv0 5)) true) ?x5646 (ite (and (distinct ((_ extract 5 3) C2) (_ bv0 3)) true) ?x2418 ?x5946))))
 (let ((?x5923 (ite (and (distinct ((_ extract 2 2) C1) (_ bv0 1)) true) (_ bv2 37) (ite (and (distinct ((_ extract 1 1) C1) (_ bv0 1)) true) (_ bv1 37) (_ bv0 37)))))
 (let ((?x1535 (ite (and (distinct ((_ extract 4 3) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 4 4) C1) (_ bv0 1)) true) (_ bv4 37) (_ bv3 37)) ?x5923)))
 (let ((?x2924 (ite (and (distinct ((_ extract 7 7) C1) (_ bv0 1)) true) (_ bv7 37) (ite (and (distinct ((_ extract 6 6) C1) (_ bv0 1)) true) (_ bv6 37) (_ bv5 37)))))
 (let ((?x2844 (ite (and (distinct ((_ extract 9 8) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 9 9) C1) (_ bv0 1)) true) (_ bv9 37) (_ bv8 37)) ?x2924)))
 (let ((?x2183 (ite (and (distinct ((_ extract 12 12) C1) (_ bv0 1)) true) (_ bv12 37) (ite (and (distinct ((_ extract 11 11) C1) (_ bv0 1)) true) (_ bv11 37) (_ bv10 37)))))
 (let ((?x4858 (ite (and (distinct ((_ extract 14 13) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 14 14) C1) (_ bv0 1)) true) (_ bv14 37) (_ bv13 37)) ?x2183)))
 (let ((?x1846 (ite (and (distinct ((_ extract 18 17) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 18 18) C1) (_ bv0 1)) true) (_ bv18 37) (_ bv17 37)) (ite (and (distinct ((_ extract 16 16) C1) (_ bv0 1)) true) (_ bv16 37) (_ bv15 37)))))
 (let ((?x1723 (ite (and (distinct ((_ extract 18 10) C1) (_ bv0 9)) true) (ite (and (distinct ((_ extract 18 15) C1) (_ bv0 4)) true) ?x1846 ?x4858) (ite (and (distinct ((_ extract 9 5) C1) (_ bv0 5)) true) ?x2844 ?x1535))))
 (let ((?x6554 (ite (and (distinct ((_ extract 21 21) C1) (_ bv0 1)) true) (_ bv21 37) (ite (and (distinct ((_ extract 20 20) C1) (_ bv0 1)) true) (_ bv20 37) (_ bv19 37)))))
 (let ((?x1460 (ite (and (distinct ((_ extract 23 22) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 23 23) C1) (_ bv0 1)) true) (_ bv23 37) (_ bv22 37)) ?x6554)))
 (let ((?x2069 (ite (and (distinct ((_ extract 27 26) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 27 27) C1) (_ bv0 1)) true) (_ bv27 37) (_ bv26 37)) (ite (and (distinct ((_ extract 25 25) C1) (_ bv0 1)) true) (_ bv25 37) (_ bv24 37)))))
 (let ((?x4694 (ite (and (distinct ((_ extract 30 30) C1) (_ bv0 1)) true) (_ bv30 37) (ite (and (distinct ((_ extract 29 29) C1) (_ bv0 1)) true) (_ bv29 37) (_ bv28 37)))))
 (let ((?x4570 (ite (and (distinct ((_ extract 32 31) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 32 32) C1) (_ bv0 1)) true) (_ bv32 37) (_ bv31 37)) ?x4694)))
 (let ((?x5275 (ite (and (distinct ((_ extract 36 35) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 36 36) C1) (_ bv0 1)) true) (_ bv36 37) (_ bv35 37)) (ite (and (distinct ((_ extract 34 34) C1) (_ bv0 1)) true) (_ bv34 37) (_ bv33 37)))))
 (let ((?x2865 (ite (and (distinct ((_ extract 36 28) C1) (_ bv0 9)) true) (ite (and (distinct ((_ extract 36 33) C1) (_ bv0 4)) true) ?x5275 ?x4570) (ite (and (distinct ((_ extract 27 24) C1) (_ bv0 4)) true) ?x2069 ?x1460))))
 (let ((?x2314 (bvsub (ite (and (distinct ((_ extract 36 19) C1) (_ bv0 18)) true) ?x2865 ?x1723) ?x6836)))
 (let ((?x6297 (ite (and (distinct ((_ extract 2 2) C1) (_ bv0 1)) true) (_ bv2 32) (ite (and (distinct ((_ extract 1 1) C1) (_ bv0 1)) true) (_ bv1 32) (_ bv0 32)))))
 (let ((?x6120 (ite (and (distinct ((_ extract 4 3) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 4 4) C1) (_ bv0 1)) true) (_ bv4 32) (_ bv3 32)) ?x6297)))
 (let ((?x5676 (ite (and (distinct ((_ extract 7 7) C1) (_ bv0 1)) true) (_ bv7 32) (ite (and (distinct ((_ extract 6 6) C1) (_ bv0 1)) true) (_ bv6 32) (_ bv5 32)))))
 (let ((?x5635 (ite (and (distinct ((_ extract 9 8) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 9 9) C1) (_ bv0 1)) true) (_ bv9 32) (_ bv8 32)) ?x5676)))
 (let ((?x4699 (ite (and (distinct ((_ extract 12 12) C1) (_ bv0 1)) true) (_ bv12 32) (ite (and (distinct ((_ extract 11 11) C1) (_ bv0 1)) true) (_ bv11 32) (_ bv10 32)))))
 (let ((?x2755 (ite (and (distinct ((_ extract 14 13) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 14 14) C1) (_ bv0 1)) true) (_ bv14 32) (_ bv13 32)) ?x4699)))
 (let ((?x3902 (ite (and (distinct ((_ extract 18 17) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 18 18) C1) (_ bv0 1)) true) (_ bv18 32) (_ bv17 32)) (ite (and (distinct ((_ extract 16 16) C1) (_ bv0 1)) true) (_ bv16 32) (_ bv15 32)))))
 (let ((?x6831 (ite (and (distinct ((_ extract 18 10) C1) (_ bv0 9)) true) (ite (and (distinct ((_ extract 18 15) C1) (_ bv0 4)) true) ?x3902 ?x2755) (ite (and (distinct ((_ extract 9 5) C1) (_ bv0 5)) true) ?x5635 ?x6120))))
 (let ((?x3087 (ite (and (distinct ((_ extract 21 21) C1) (_ bv0 1)) true) (_ bv21 32) (ite (and (distinct ((_ extract 20 20) C1) (_ bv0 1)) true) (_ bv20 32) (_ bv19 32)))))
 (let ((?x3054 (ite (and (distinct ((_ extract 23 22) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 23 23) C1) (_ bv0 1)) true) (_ bv23 32) (_ bv22 32)) ?x3087)))
 (let ((?x1584 (ite (and (distinct ((_ extract 27 26) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 27 27) C1) (_ bv0 1)) true) (_ bv27 32) (_ bv26 32)) (ite (and (distinct ((_ extract 25 25) C1) (_ bv0 1)) true) (_ bv25 32) (_ bv24 32)))))
 (let ((?x2309 (ite (and (distinct ((_ extract 30 30) C1) (_ bv0 1)) true) (_ bv30 32) (ite (and (distinct ((_ extract 29 29) C1) (_ bv0 1)) true) (_ bv29 32) (_ bv28 32)))))
 (let ((?x1515 (ite (and (distinct ((_ extract 32 31) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 32 32) C1) (_ bv0 1)) true) (_ bv32 32) (_ bv31 32)) ?x2309)))
 (let ((?x1953 (ite (and (distinct ((_ extract 36 35) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 36 36) C1) (_ bv0 1)) true) (_ bv36 32) (_ bv35 32)) (ite (and (distinct ((_ extract 34 34) C1) (_ bv0 1)) true) (_ bv34 32) (_ bv33 32)))))
 (let ((?x3499 (ite (and (distinct ((_ extract 36 28) C1) (_ bv0 9)) true) (ite (and (distinct ((_ extract 36 33) C1) (_ bv0 4)) true) ?x1953 ?x1515) (ite (and (distinct ((_ extract 27 24) C1) (_ bv0 4)) true) ?x1584 ?x3054))))
 (let ((?x2718 (ite (and (distinct ((_ extract 2 2) C2) (_ bv0 1)) true) (_ bv2 32) (ite (and (distinct ((_ extract 1 1) C2) (_ bv0 1)) true) (_ bv1 32) (_ bv0 32)))))
 (let ((?x3400 (ite (and (distinct ((_ extract 5 5) C2) (_ bv0 1)) true) (_ bv5 32) (ite (and (distinct ((_ extract 4 4) C2) (_ bv0 1)) true) (_ bv4 32) (_ bv3 32)))))
 (let ((?x3310 (ite (and (distinct ((_ extract 8 8) C2) (_ bv0 1)) true) (_ bv8 32) (ite (and (distinct ((_ extract 7 7) C2) (_ bv0 1)) true) (_ bv7 32) (_ bv6 32)))))
 (let ((?x3445 (ite (and (distinct ((_ extract 10 9) C2) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) C2) (_ bv0 1)) true) (_ bv10 32) (_ bv9 32)) ?x3310)))
 (let ((?x2881 (ite (and (distinct ((_ extract 10 6) C2) (_ bv0 5)) true) ?x3445 (ite (and (distinct ((_ extract 5 3) C2) (_ bv0 3)) true) ?x3400 ?x2718))))
 (and (and (and (distinct C1 (_ bv0 37)) true) (= (bvand C1 (bvsub C1 (_ bv1 37))) (_ bv0 37))) (and (and (distinct C2 (_ bv0 11)) true) (= (bvand C2 (bvsub C2 (_ bv1 11))) (_ bv0 11))) (bvslt ?x2881 (ite (and (distinct ((_ extract 36 19) C1) (_ bv0 18)) true) ?x3499 ?x6831)) (not (bvult ?x2314 (_ bv37 37))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
