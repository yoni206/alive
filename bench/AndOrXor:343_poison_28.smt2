(set-info :status unknown)
(declare-fun |ana_MaskedValueIsZero(%B, ((1 << (width(C2) - countLeadingZeros(((C2 - 1) ^ C2)))) - 1))| () (_ BitVec 1))
(declare-fun C2 () (_ BitVec 34))
(declare-fun C1 () (_ BitVec 34))
(declare-fun %B () (_ BitVec 34))
(assert
 (let (($x12640 (= |ana_MaskedValueIsZero(%B, ((1 << (width(C2) - countLeadingZeros(((C2 - 1) ^ C2)))) - 1))| (_ bv1 1))))
 (let ((?x13041 (bvor (bvsub C2 (_ bv1 34)) C2)))
 (let (($x5772 (and (and (distinct ?x13041 (_ bv0 34)) true) (= (bvand (bvadd ?x13041 (_ bv1 34)) ?x13041) (_ bv0 34)) $x12640)))
 (let (($x166 (or (= (bvand (bvadd C2 (_ bv1 34)) (bvsub (bvadd C2 (_ bv1 34)) (_ bv1 34))) (_ bv0 34)) $x5772)))
 (let ((?x1774 (ite (= ((_ extract 1 1) (bvxor (bvsub C2 (_ bv1 34)) C2)) (_ bv1 1)) (_ bv32 34) (ite (= ((_ extract 0 0) (bvxor (bvsub C2 (_ bv1 34)) C2)) (_ bv1 1)) (_ bv33 34) (_ bv34 34)))))
 (let ((?x16735 (ite (= ((_ extract 3 3) (bvxor (bvsub C2 (_ bv1 34)) C2)) (_ bv1 1)) (_ bv30 34) (ite (= ((_ extract 2 2) (bvxor (bvsub C2 (_ bv1 34)) C2)) (_ bv1 1)) (_ bv31 34) ?x1774))))
 (let ((?x6197 (ite (= ((_ extract 5 5) (bvxor (bvsub C2 (_ bv1 34)) C2)) (_ bv1 1)) (_ bv28 34) (ite (= ((_ extract 4 4) (bvxor (bvsub C2 (_ bv1 34)) C2)) (_ bv1 1)) (_ bv29 34) ?x16735))))
 (let ((?x168 (ite (= ((_ extract 7 7) (bvxor (bvsub C2 (_ bv1 34)) C2)) (_ bv1 1)) (_ bv26 34) (ite (= ((_ extract 6 6) (bvxor (bvsub C2 (_ bv1 34)) C2)) (_ bv1 1)) (_ bv27 34) ?x6197))))
 (let ((?x3720 (ite (= ((_ extract 9 9) (bvxor (bvsub C2 (_ bv1 34)) C2)) (_ bv1 1)) (_ bv24 34) (ite (= ((_ extract 8 8) (bvxor (bvsub C2 (_ bv1 34)) C2)) (_ bv1 1)) (_ bv25 34) ?x168))))
 (let ((?x1736 (ite (= ((_ extract 11 11) (bvxor (bvsub C2 (_ bv1 34)) C2)) (_ bv1 1)) (_ bv22 34) (ite (= ((_ extract 10 10) (bvxor (bvsub C2 (_ bv1 34)) C2)) (_ bv1 1)) (_ bv23 34) ?x3720))))
 (let ((?x10483 (ite (= ((_ extract 13 13) (bvxor (bvsub C2 (_ bv1 34)) C2)) (_ bv1 1)) (_ bv20 34) (ite (= ((_ extract 12 12) (bvxor (bvsub C2 (_ bv1 34)) C2)) (_ bv1 1)) (_ bv21 34) ?x1736))))
 (let ((?x13063 (ite (= ((_ extract 15 15) (bvxor (bvsub C2 (_ bv1 34)) C2)) (_ bv1 1)) (_ bv18 34) (ite (= ((_ extract 14 14) (bvxor (bvsub C2 (_ bv1 34)) C2)) (_ bv1 1)) (_ bv19 34) ?x10483))))
 (let ((?x15287 (ite (= ((_ extract 17 17) (bvxor (bvsub C2 (_ bv1 34)) C2)) (_ bv1 1)) (_ bv16 34) (ite (= ((_ extract 16 16) (bvxor (bvsub C2 (_ bv1 34)) C2)) (_ bv1 1)) (_ bv17 34) ?x13063))))
 (let ((?x14537 (ite (= ((_ extract 19 19) (bvxor (bvsub C2 (_ bv1 34)) C2)) (_ bv1 1)) (_ bv14 34) (ite (= ((_ extract 18 18) (bvxor (bvsub C2 (_ bv1 34)) C2)) (_ bv1 1)) (_ bv15 34) ?x15287))))
 (let ((?x2082 (ite (= ((_ extract 21 21) (bvxor (bvsub C2 (_ bv1 34)) C2)) (_ bv1 1)) (_ bv12 34) (ite (= ((_ extract 20 20) (bvxor (bvsub C2 (_ bv1 34)) C2)) (_ bv1 1)) (_ bv13 34) ?x14537))))
 (let ((?x11218 (ite (= ((_ extract 23 23) (bvxor (bvsub C2 (_ bv1 34)) C2)) (_ bv1 1)) (_ bv10 34) (ite (= ((_ extract 22 22) (bvxor (bvsub C2 (_ bv1 34)) C2)) (_ bv1 1)) (_ bv11 34) ?x2082))))
 (let ((?x8081 (ite (= ((_ extract 25 25) (bvxor (bvsub C2 (_ bv1 34)) C2)) (_ bv1 1)) (_ bv8 34) (ite (= ((_ extract 24 24) (bvxor (bvsub C2 (_ bv1 34)) C2)) (_ bv1 1)) (_ bv9 34) ?x11218))))
 (let ((?x1495 (ite (= ((_ extract 27 27) (bvxor (bvsub C2 (_ bv1 34)) C2)) (_ bv1 1)) (_ bv6 34) (ite (= ((_ extract 26 26) (bvxor (bvsub C2 (_ bv1 34)) C2)) (_ bv1 1)) (_ bv7 34) ?x8081))))
 (let ((?x507 (ite (= ((_ extract 29 29) (bvxor (bvsub C2 (_ bv1 34)) C2)) (_ bv1 1)) (_ bv4 34) (ite (= ((_ extract 28 28) (bvxor (bvsub C2 (_ bv1 34)) C2)) (_ bv1 1)) (_ bv5 34) ?x1495))))
 (let ((?x4129 (ite (= ((_ extract 31 31) (bvxor (bvsub C2 (_ bv1 34)) C2)) (_ bv1 1)) (_ bv2 34) (ite (= ((_ extract 30 30) (bvxor (bvsub C2 (_ bv1 34)) C2)) (_ bv1 1)) (_ bv3 34) ?x507))))
 (let ((?x10453 (ite (= ((_ extract 33 33) (bvxor (bvsub C2 (_ bv1 34)) C2)) (_ bv1 1)) (_ bv0 34) (ite (= ((_ extract 32 32) (bvxor (bvsub C2 (_ bv1 34)) C2)) (_ bv1 1)) (_ bv1 34) ?x4129))))
 (let (($x952 (=> $x12640 (= (bvand %B (bvsub (bvshl (_ bv1 34) (bvsub (_ bv34 34) ?x10453)) (_ bv1 34))) (_ bv0 34)))))
 (and $x952 (= (bvand C1 C2) C2) $x166 false))))))))))))))))))))))))
(check-sat)
