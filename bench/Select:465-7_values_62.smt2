(set-info :status unknown)
(declare-fun %Y () (_ BitVec 11))
(declare-fun C2 () (_ BitVec 11))
(declare-fun C1 () (_ BitVec 6))
(declare-fun %X () (_ BitVec 6))
(assert
 (let ((?x2660 (ite (and (distinct ((_ extract 2 2) C2) (_ bv0 1)) true) (_ bv2 6) (ite (and (distinct ((_ extract 1 1) C2) (_ bv0 1)) true) (_ bv1 6) (_ bv0 6)))))
 (let ((?x1250 (ite (and (distinct ((_ extract 5 5) C2) (_ bv0 1)) true) (_ bv5 6) (ite (and (distinct ((_ extract 4 4) C2) (_ bv0 1)) true) (_ bv4 6) (_ bv3 6)))))
 (let ((?x5527 (ite (and (distinct ((_ extract 8 8) C2) (_ bv0 1)) true) (_ bv8 6) (ite (and (distinct ((_ extract 7 7) C2) (_ bv0 1)) true) (_ bv7 6) (_ bv6 6)))))
 (let ((?x5018 (ite (and (distinct ((_ extract 10 9) C2) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) C2) (_ bv0 1)) true) (_ bv10 6) (_ bv9 6)) ?x5527)))
 (let ((?x2131 (ite (and (distinct ((_ extract 10 6) C2) (_ bv0 5)) true) ?x5018 (ite (and (distinct ((_ extract 5 3) C2) (_ bv0 3)) true) ?x1250 ?x2660))))
 (let ((?x2015 (ite (and (distinct ((_ extract 2 2) C1) (_ bv0 1)) true) (_ bv2 6) (ite (and (distinct ((_ extract 1 1) C1) (_ bv0 1)) true) (_ bv1 6) (_ bv0 6)))))
 (let ((?x5296 (ite (and (distinct ((_ extract 5 5) C1) (_ bv0 1)) true) (_ bv5 6) (ite (and (distinct ((_ extract 4 4) C1) (_ bv0 1)) true) (_ bv4 6) (_ bv3 6)))))
 (let ((?x5316 (bvsub (ite (and (distinct ((_ extract 5 3) C1) (_ bv0 3)) true) ?x5296 ?x2015) ?x2131)))
 (let ((?x6843 (bvand %X C1)))
 (let (($x1348 (and (distinct (ite (= (ite (= ?x6843 (_ bv0 6)) (_ bv1 1) (_ bv0 1)) (_ bv1 1)) (bvor %Y C2) %Y) (bvor (bvxor ((_ zero_extend 5) (bvlshr ?x6843 ?x5316)) C2) %Y)) true)))
 (let ((?x4092 (ite (and (distinct ((_ extract 2 2) C1) (_ bv0 1)) true) (_ bv2 32) (ite (and (distinct ((_ extract 1 1) C1) (_ bv0 1)) true) (_ bv1 32) (_ bv0 32)))))
 (let ((?x4373 (ite (and (distinct ((_ extract 5 5) C1) (_ bv0 1)) true) (_ bv5 32) (ite (and (distinct ((_ extract 4 4) C1) (_ bv0 1)) true) (_ bv4 32) (_ bv3 32)))))
 (let ((?x2364 (ite (and (distinct ((_ extract 2 2) C2) (_ bv0 1)) true) (_ bv2 32) (ite (and (distinct ((_ extract 1 1) C2) (_ bv0 1)) true) (_ bv1 32) (_ bv0 32)))))
 (let ((?x6118 (ite (and (distinct ((_ extract 5 5) C2) (_ bv0 1)) true) (_ bv5 32) (ite (and (distinct ((_ extract 4 4) C2) (_ bv0 1)) true) (_ bv4 32) (_ bv3 32)))))
 (let ((?x5531 (ite (and (distinct ((_ extract 8 8) C2) (_ bv0 1)) true) (_ bv8 32) (ite (and (distinct ((_ extract 7 7) C2) (_ bv0 1)) true) (_ bv7 32) (_ bv6 32)))))
 (let ((?x5027 (ite (and (distinct ((_ extract 10 9) C2) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) C2) (_ bv0 1)) true) (_ bv10 32) (_ bv9 32)) ?x5531)))
 (let ((?x3447 (ite (and (distinct ((_ extract 10 6) C2) (_ bv0 5)) true) ?x5027 (ite (and (distinct ((_ extract 5 3) C2) (_ bv0 3)) true) ?x6118 ?x2364))))
 (and (and (and (distinct C1 (_ bv0 6)) true) (= (bvand C1 (bvsub C1 (_ bv1 6))) (_ bv0 6))) (and (and (distinct C2 (_ bv0 11)) true) (= (bvand C2 (bvsub C2 (_ bv1 11))) (_ bv0 11))) (bvslt ?x3447 (ite (and (distinct ((_ extract 5 3) C1) (_ bv0 3)) true) ?x4373 ?x4092)) $x1348)))))))))))))))))))
(check-sat)
