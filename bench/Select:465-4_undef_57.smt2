(set-info :status unknown)
(declare-fun C2 () (_ BitVec 11))
(declare-fun C1 () (_ BitVec 62))
(assert
 (let ((?x9029 (ite (and (distinct ((_ extract 2 2) C2) (_ bv0 1)) true) (_ bv2 62) (ite (and (distinct ((_ extract 1 1) C2) (_ bv0 1)) true) (_ bv1 62) (_ bv0 62)))))
 (let ((?x20133 (ite (and (distinct ((_ extract 5 5) C2) (_ bv0 1)) true) (_ bv5 62) (ite (and (distinct ((_ extract 4 4) C2) (_ bv0 1)) true) (_ bv4 62) (_ bv3 62)))))
 (let ((?x23551 (ite (and (distinct ((_ extract 8 8) C2) (_ bv0 1)) true) (_ bv8 62) (ite (and (distinct ((_ extract 7 7) C2) (_ bv0 1)) true) (_ bv7 62) (_ bv6 62)))))
 (let ((?x16833 (ite (and (distinct ((_ extract 10 9) C2) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) C2) (_ bv0 1)) true) (_ bv10 62) (_ bv9 62)) ?x23551)))
 (let ((?x12213 (ite (and (distinct ((_ extract 10 6) C2) (_ bv0 5)) true) ?x16833 (ite (and (distinct ((_ extract 5 3) C2) (_ bv0 3)) true) ?x20133 ?x9029))))
 (let ((?x15554 (ite (and (distinct ((_ extract 3 2) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 3 3) C1) (_ bv0 1)) true) (_ bv3 62) (_ bv2 62)) (ite (and (distinct ((_ extract 1 1) C1) (_ bv0 1)) true) (_ bv1 62) (_ bv0 62)))))
 (let ((?x17698 (ite (and (distinct ((_ extract 7 6) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 7 7) C1) (_ bv0 1)) true) (_ bv7 62) (_ bv6 62)) (ite (and (distinct ((_ extract 5 5) C1) (_ bv0 1)) true) (_ bv5 62) (_ bv4 62)))))
 (let ((?x18149 (ite (and (distinct ((_ extract 11 10) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 11 11) C1) (_ bv0 1)) true) (_ bv11 62) (_ bv10 62)) (ite (and (distinct ((_ extract 9 9) C1) (_ bv0 1)) true) (_ bv9 62) (_ bv8 62)))))
 (let ((?x16211 (ite (and (distinct ((_ extract 15 14) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 15 15) C1) (_ bv0 1)) true) (_ bv15 62) (_ bv14 62)) (ite (and (distinct ((_ extract 13 13) C1) (_ bv0 1)) true) (_ bv13 62) (_ bv12 62)))))
 (let ((?x20363 (ite (and (distinct ((_ extract 15 8) C1) (_ bv0 8)) true) (ite (and (distinct ((_ extract 15 12) C1) (_ bv0 4)) true) ?x16211 ?x18149) (ite (and (distinct ((_ extract 7 4) C1) (_ bv0 4)) true) ?x17698 ?x15554))))
 (let ((?x9605 (ite (and (distinct ((_ extract 19 18) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 19 19) C1) (_ bv0 1)) true) (_ bv19 62) (_ bv18 62)) (ite (and (distinct ((_ extract 17 17) C1) (_ bv0 1)) true) (_ bv17 62) (_ bv16 62)))))
 (let ((?x8861 (ite (and (distinct ((_ extract 23 22) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 23 23) C1) (_ bv0 1)) true) (_ bv23 62) (_ bv22 62)) (ite (and (distinct ((_ extract 21 21) C1) (_ bv0 1)) true) (_ bv21 62) (_ bv20 62)))))
 (let ((?x16098 (ite (and (distinct ((_ extract 27 26) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 27 27) C1) (_ bv0 1)) true) (_ bv27 62) (_ bv26 62)) (ite (and (distinct ((_ extract 25 25) C1) (_ bv0 1)) true) (_ bv25 62) (_ bv24 62)))))
 (let ((?x11455 (ite (and (distinct ((_ extract 30 30) C1) (_ bv0 1)) true) (_ bv30 62) (ite (and (distinct ((_ extract 29 29) C1) (_ bv0 1)) true) (_ bv29 62) (_ bv28 62)))))
 (let ((?x10118 (ite (and (distinct ((_ extract 30 24) C1) (_ bv0 7)) true) (ite (and (distinct ((_ extract 30 28) C1) (_ bv0 3)) true) ?x11455 ?x16098) (ite (and (distinct ((_ extract 23 20) C1) (_ bv0 4)) true) ?x8861 ?x9605))))
 (let ((?x7964 (ite (and (distinct ((_ extract 34 33) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 34 34) C1) (_ bv0 1)) true) (_ bv34 62) (_ bv33 62)) (ite (and (distinct ((_ extract 32 32) C1) (_ bv0 1)) true) (_ bv32 62) (_ bv31 62)))))
 (let ((?x24818 (ite (and (distinct ((_ extract 38 37) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 38 38) C1) (_ bv0 1)) true) (_ bv38 62) (_ bv37 62)) (ite (and (distinct ((_ extract 36 36) C1) (_ bv0 1)) true) (_ bv36 62) (_ bv35 62)))))
 (let ((?x20114 (ite (and (distinct ((_ extract 42 41) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 42 42) C1) (_ bv0 1)) true) (_ bv42 62) (_ bv41 62)) (ite (and (distinct ((_ extract 40 40) C1) (_ bv0 1)) true) (_ bv40 62) (_ bv39 62)))))
 (let ((?x3232 (ite (and (distinct ((_ extract 46 45) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 46 46) C1) (_ bv0 1)) true) (_ bv46 62) (_ bv45 62)) (ite (and (distinct ((_ extract 44 44) C1) (_ bv0 1)) true) (_ bv44 62) (_ bv43 62)))))
 (let ((?x10218 (ite (and (distinct ((_ extract 46 39) C1) (_ bv0 8)) true) (ite (and (distinct ((_ extract 46 43) C1) (_ bv0 4)) true) ?x3232 ?x20114) (ite (and (distinct ((_ extract 38 35) C1) (_ bv0 4)) true) ?x24818 ?x7964))))
 (let ((?x12429 (ite (and (distinct ((_ extract 50 49) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 50 50) C1) (_ bv0 1)) true) (_ bv50 62) (_ bv49 62)) (ite (and (distinct ((_ extract 48 48) C1) (_ bv0 1)) true) (_ bv48 62) (_ bv47 62)))))
 (let ((?x13857 (ite (and (distinct ((_ extract 54 53) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 54 54) C1) (_ bv0 1)) true) (_ bv54 62) (_ bv53 62)) (ite (and (distinct ((_ extract 52 52) C1) (_ bv0 1)) true) (_ bv52 62) (_ bv51 62)))))
 (let ((?x4660 (ite (and (distinct ((_ extract 58 57) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 58 58) C1) (_ bv0 1)) true) (_ bv58 62) (_ bv57 62)) (ite (and (distinct ((_ extract 56 56) C1) (_ bv0 1)) true) (_ bv56 62) (_ bv55 62)))))
 (let ((?x14492 (ite (and (distinct ((_ extract 61 61) C1) (_ bv0 1)) true) (_ bv61 62) (ite (and (distinct ((_ extract 60 60) C1) (_ bv0 1)) true) (_ bv60 62) (_ bv59 62)))))
 (let ((?x10320 (ite (and (distinct ((_ extract 61 55) C1) (_ bv0 7)) true) (ite (and (distinct ((_ extract 61 59) C1) (_ bv0 3)) true) ?x14492 ?x4660) (ite (and (distinct ((_ extract 54 51) C1) (_ bv0 4)) true) ?x13857 ?x12429))))
 (let ((?x13349 (ite (and (distinct ((_ extract 61 31) C1) (_ bv0 31)) true) (ite (and (distinct ((_ extract 61 47) C1) (_ bv0 15)) true) ?x10320 ?x10218) (ite (and (distinct ((_ extract 30 16) C1) (_ bv0 15)) true) ?x10118 ?x20363))))
 (let ((?x4053 (bvsub ?x13349 ?x12213)))
 (let ((?x18147 (ite (and (distinct ((_ extract 3 2) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 3 3) C1) (_ bv0 1)) true) (_ bv3 32) (_ bv2 32)) (ite (and (distinct ((_ extract 1 1) C1) (_ bv0 1)) true) (_ bv1 32) (_ bv0 32)))))
 (let ((?x4999 (ite (and (distinct ((_ extract 7 6) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 7 7) C1) (_ bv0 1)) true) (_ bv7 32) (_ bv6 32)) (ite (and (distinct ((_ extract 5 5) C1) (_ bv0 1)) true) (_ bv5 32) (_ bv4 32)))))
 (let ((?x7991 (ite (and (distinct ((_ extract 11 10) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 11 11) C1) (_ bv0 1)) true) (_ bv11 32) (_ bv10 32)) (ite (and (distinct ((_ extract 9 9) C1) (_ bv0 1)) true) (_ bv9 32) (_ bv8 32)))))
 (let ((?x12226 (ite (and (distinct ((_ extract 15 14) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 15 15) C1) (_ bv0 1)) true) (_ bv15 32) (_ bv14 32)) (ite (and (distinct ((_ extract 13 13) C1) (_ bv0 1)) true) (_ bv13 32) (_ bv12 32)))))
 (let ((?x2007 (ite (and (distinct ((_ extract 15 8) C1) (_ bv0 8)) true) (ite (and (distinct ((_ extract 15 12) C1) (_ bv0 4)) true) ?x12226 ?x7991) (ite (and (distinct ((_ extract 7 4) C1) (_ bv0 4)) true) ?x4999 ?x18147))))
 (let ((?x22695 (ite (and (distinct ((_ extract 19 18) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 19 19) C1) (_ bv0 1)) true) (_ bv19 32) (_ bv18 32)) (ite (and (distinct ((_ extract 17 17) C1) (_ bv0 1)) true) (_ bv17 32) (_ bv16 32)))))
 (let ((?x14753 (ite (and (distinct ((_ extract 23 22) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 23 23) C1) (_ bv0 1)) true) (_ bv23 32) (_ bv22 32)) (ite (and (distinct ((_ extract 21 21) C1) (_ bv0 1)) true) (_ bv21 32) (_ bv20 32)))))
 (let ((?x21919 (ite (and (distinct ((_ extract 27 26) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 27 27) C1) (_ bv0 1)) true) (_ bv27 32) (_ bv26 32)) (ite (and (distinct ((_ extract 25 25) C1) (_ bv0 1)) true) (_ bv25 32) (_ bv24 32)))))
 (let ((?x11716 (ite (and (distinct ((_ extract 30 30) C1) (_ bv0 1)) true) (_ bv30 32) (ite (and (distinct ((_ extract 29 29) C1) (_ bv0 1)) true) (_ bv29 32) (_ bv28 32)))))
 (let ((?x8833 (ite (and (distinct ((_ extract 30 24) C1) (_ bv0 7)) true) (ite (and (distinct ((_ extract 30 28) C1) (_ bv0 3)) true) ?x11716 ?x21919) (ite (and (distinct ((_ extract 23 20) C1) (_ bv0 4)) true) ?x14753 ?x22695))))
 (let ((?x11735 (ite (and (distinct ((_ extract 34 33) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 34 34) C1) (_ bv0 1)) true) (_ bv34 32) (_ bv33 32)) (ite (and (distinct ((_ extract 32 32) C1) (_ bv0 1)) true) (_ bv32 32) (_ bv31 32)))))
 (let ((?x16508 (ite (and (distinct ((_ extract 38 37) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 38 38) C1) (_ bv0 1)) true) (_ bv38 32) (_ bv37 32)) (ite (and (distinct ((_ extract 36 36) C1) (_ bv0 1)) true) (_ bv36 32) (_ bv35 32)))))
 (let ((?x14232 (ite (and (distinct ((_ extract 42 41) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 42 42) C1) (_ bv0 1)) true) (_ bv42 32) (_ bv41 32)) (ite (and (distinct ((_ extract 40 40) C1) (_ bv0 1)) true) (_ bv40 32) (_ bv39 32)))))
 (let ((?x12965 (ite (and (distinct ((_ extract 46 45) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 46 46) C1) (_ bv0 1)) true) (_ bv46 32) (_ bv45 32)) (ite (and (distinct ((_ extract 44 44) C1) (_ bv0 1)) true) (_ bv44 32) (_ bv43 32)))))
 (let ((?x21017 (ite (and (distinct ((_ extract 46 39) C1) (_ bv0 8)) true) (ite (and (distinct ((_ extract 46 43) C1) (_ bv0 4)) true) ?x12965 ?x14232) (ite (and (distinct ((_ extract 38 35) C1) (_ bv0 4)) true) ?x16508 ?x11735))))
 (let ((?x8954 (ite (and (distinct ((_ extract 50 49) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 50 50) C1) (_ bv0 1)) true) (_ bv50 32) (_ bv49 32)) (ite (and (distinct ((_ extract 48 48) C1) (_ bv0 1)) true) (_ bv48 32) (_ bv47 32)))))
 (let ((?x6215 (ite (and (distinct ((_ extract 54 53) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 54 54) C1) (_ bv0 1)) true) (_ bv54 32) (_ bv53 32)) (ite (and (distinct ((_ extract 52 52) C1) (_ bv0 1)) true) (_ bv52 32) (_ bv51 32)))))
 (let ((?x23528 (ite (and (distinct ((_ extract 58 57) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 58 58) C1) (_ bv0 1)) true) (_ bv58 32) (_ bv57 32)) (ite (and (distinct ((_ extract 56 56) C1) (_ bv0 1)) true) (_ bv56 32) (_ bv55 32)))))
 (let ((?x14730 (ite (and (distinct ((_ extract 61 61) C1) (_ bv0 1)) true) (_ bv61 32) (ite (and (distinct ((_ extract 60 60) C1) (_ bv0 1)) true) (_ bv60 32) (_ bv59 32)))))
 (let ((?x8089 (ite (and (distinct ((_ extract 61 55) C1) (_ bv0 7)) true) (ite (and (distinct ((_ extract 61 59) C1) (_ bv0 3)) true) ?x14730 ?x23528) (ite (and (distinct ((_ extract 54 51) C1) (_ bv0 4)) true) ?x6215 ?x8954))))
 (let ((?x14946 (ite (and (distinct ((_ extract 61 31) C1) (_ bv0 31)) true) (ite (and (distinct ((_ extract 61 47) C1) (_ bv0 15)) true) ?x8089 ?x21017) (ite (and (distinct ((_ extract 30 16) C1) (_ bv0 15)) true) ?x8833 ?x2007))))
 (let ((?x10605 (ite (and (distinct ((_ extract 2 2) C2) (_ bv0 1)) true) (_ bv2 32) (ite (and (distinct ((_ extract 1 1) C2) (_ bv0 1)) true) (_ bv1 32) (_ bv0 32)))))
 (let ((?x8440 (ite (and (distinct ((_ extract 5 5) C2) (_ bv0 1)) true) (_ bv5 32) (ite (and (distinct ((_ extract 4 4) C2) (_ bv0 1)) true) (_ bv4 32) (_ bv3 32)))))
 (let ((?x469 (ite (and (distinct ((_ extract 8 8) C2) (_ bv0 1)) true) (_ bv8 32) (ite (and (distinct ((_ extract 7 7) C2) (_ bv0 1)) true) (_ bv7 32) (_ bv6 32)))))
 (let ((?x20966 (ite (and (distinct ((_ extract 10 9) C2) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) C2) (_ bv0 1)) true) (_ bv10 32) (_ bv9 32)) ?x469)))
 (let ((?x6158 (ite (and (distinct ((_ extract 10 6) C2) (_ bv0 5)) true) ?x20966 (ite (and (distinct ((_ extract 5 3) C2) (_ bv0 3)) true) ?x8440 ?x10605))))
 (and (and (and (distinct C1 (_ bv0 62)) true) (= (bvand C1 (bvsub C1 (_ bv1 62))) (_ bv0 62))) (and (and (distinct C2 (_ bv0 11)) true) (= (bvand C2 (bvsub C2 (_ bv1 11))) (_ bv0 11))) (bvslt ?x6158 ?x14946) (not (bvult ?x4053 (_ bv62 62))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
