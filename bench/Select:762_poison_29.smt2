(set-info :status unknown)
(declare-fun C () (_ BitVec 33))
(declare-fun C3 () (_ BitVec 11))
(declare-fun C2 () (_ BitVec 11))
(assert
 (let ((?x13655 (ite (and (distinct ((_ extract 2 2) C) (_ bv0 1)) true) (_ bv2 32) (ite (and (distinct ((_ extract 1 1) C) (_ bv0 1)) true) (_ bv1 32) (_ bv0 32)))))
 (let ((?x12655 (ite (and (distinct ((_ extract 4 3) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 4 4) C) (_ bv0 1)) true) (_ bv4 32) (_ bv3 32)) ?x13655)))
 (let ((?x11114 (ite (and (distinct ((_ extract 8 7) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 8 8) C) (_ bv0 1)) true) (_ bv8 32) (_ bv7 32)) (ite (and (distinct ((_ extract 6 6) C) (_ bv0 1)) true) (_ bv6 32) (_ bv5 32)))))
 (let ((?x5253 (ite (and (distinct ((_ extract 12 11) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 12 12) C) (_ bv0 1)) true) (_ bv12 32) (_ bv11 32)) (ite (and (distinct ((_ extract 10 10) C) (_ bv0 1)) true) (_ bv10 32) (_ bv9 32)))))
 (let ((?x10726 (ite (and (distinct ((_ extract 16 15) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 16 16) C) (_ bv0 1)) true) (_ bv16 32) (_ bv15 32)) (ite (and (distinct ((_ extract 14 14) C) (_ bv0 1)) true) (_ bv14 32) (_ bv13 32)))))
 (let ((?x14084 (ite (and (distinct ((_ extract 16 9) C) (_ bv0 8)) true) (ite (and (distinct ((_ extract 16 13) C) (_ bv0 4)) true) ?x10726 ?x5253) (ite (and (distinct ((_ extract 8 5) C) (_ bv0 4)) true) ?x11114 ?x12655))))
 (let ((?x21203 (ite (and (distinct ((_ extract 20 19) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 20 20) C) (_ bv0 1)) true) (_ bv20 32) (_ bv19 32)) (ite (and (distinct ((_ extract 18 18) C) (_ bv0 1)) true) (_ bv18 32) (_ bv17 32)))))
 (let ((?x18573 (ite (and (distinct ((_ extract 24 23) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 24 24) C) (_ bv0 1)) true) (_ bv24 32) (_ bv23 32)) (ite (and (distinct ((_ extract 22 22) C) (_ bv0 1)) true) (_ bv22 32) (_ bv21 32)))))
 (let ((?x9118 (ite (and (distinct ((_ extract 28 27) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 28 28) C) (_ bv0 1)) true) (_ bv28 32) (_ bv27 32)) (ite (and (distinct ((_ extract 26 26) C) (_ bv0 1)) true) (_ bv26 32) (_ bv25 32)))))
 (let ((?x19364 (ite (and (distinct ((_ extract 32 31) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 32 32) C) (_ bv0 1)) true) (_ bv32 32) (_ bv31 32)) (ite (and (distinct ((_ extract 30 30) C) (_ bv0 1)) true) (_ bv30 32) (_ bv29 32)))))
 (let ((?x294 (ite (and (distinct ((_ extract 32 25) C) (_ bv0 8)) true) (ite (and (distinct ((_ extract 32 29) C) (_ bv0 4)) true) ?x19364 ?x9118) (ite (and (distinct ((_ extract 24 21) C) (_ bv0 4)) true) ?x18573 ?x21203))))
 (let (($x14586 (and (and (distinct (bvsub C2 C3) (_ bv0 11)) true) (= (bvand (bvsub C2 C3) (bvsub (bvsub C2 C3) (_ bv1 11))) (_ bv0 11)))))
 (and (and (and (distinct C (_ bv0 33)) true) (= (bvand C (bvsub C (_ bv1 33))) (_ bv0 33))) $x14586 (bvslt (ite (and (distinct ((_ extract 32 17) C) (_ bv0 16)) true) ?x294 ?x14084) (_ bv11 32)) false))))))))))))))
(check-sat)
