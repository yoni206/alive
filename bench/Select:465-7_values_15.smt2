(set-info :status unknown)
(declare-fun %Y () (_ BitVec 11))
(declare-fun C2 () (_ BitVec 11))
(declare-fun C1 () (_ BitVec 20))
(declare-fun %X () (_ BitVec 20))
(assert
 (let ((?x6726 (ite (and (distinct ((_ extract 2 2) C2) (_ bv0 1)) true) (_ bv2 20) (ite (and (distinct ((_ extract 1 1) C2) (_ bv0 1)) true) (_ bv1 20) (_ bv0 20)))))
 (let ((?x12939 (ite (and (distinct ((_ extract 5 5) C2) (_ bv0 1)) true) (_ bv5 20) (ite (and (distinct ((_ extract 4 4) C2) (_ bv0 1)) true) (_ bv4 20) (_ bv3 20)))))
 (let ((?x11116 (ite (and (distinct ((_ extract 8 8) C2) (_ bv0 1)) true) (_ bv8 20) (ite (and (distinct ((_ extract 7 7) C2) (_ bv0 1)) true) (_ bv7 20) (_ bv6 20)))))
 (let ((?x24237 (ite (and (distinct ((_ extract 10 9) C2) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) C2) (_ bv0 1)) true) (_ bv10 20) (_ bv9 20)) ?x11116)))
 (let ((?x2973 (ite (and (distinct ((_ extract 10 6) C2) (_ bv0 5)) true) ?x24237 (ite (and (distinct ((_ extract 5 3) C2) (_ bv0 3)) true) ?x12939 ?x6726))))
 (let ((?x6842 (ite (and (distinct ((_ extract 2 2) C1) (_ bv0 1)) true) (_ bv2 20) (ite (and (distinct ((_ extract 1 1) C1) (_ bv0 1)) true) (_ bv1 20) (_ bv0 20)))))
 (let ((?x20220 (ite (and (distinct ((_ extract 4 3) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 4 4) C1) (_ bv0 1)) true) (_ bv4 20) (_ bv3 20)) ?x6842)))
 (let ((?x11764 (ite (and (distinct ((_ extract 7 7) C1) (_ bv0 1)) true) (_ bv7 20) (ite (and (distinct ((_ extract 6 6) C1) (_ bv0 1)) true) (_ bv6 20) (_ bv5 20)))))
 (let ((?x3574 (ite (and (distinct ((_ extract 9 8) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 9 9) C1) (_ bv0 1)) true) (_ bv9 20) (_ bv8 20)) ?x11764)))
 (let ((?x21036 (ite (and (distinct ((_ extract 12 12) C1) (_ bv0 1)) true) (_ bv12 20) (ite (and (distinct ((_ extract 11 11) C1) (_ bv0 1)) true) (_ bv11 20) (_ bv10 20)))))
 (let ((?x16933 (ite (and (distinct ((_ extract 14 13) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 14 14) C1) (_ bv0 1)) true) (_ bv14 20) (_ bv13 20)) ?x21036)))
 (let ((?x17794 (ite (and (distinct ((_ extract 17 17) C1) (_ bv0 1)) true) (_ bv17 20) (ite (and (distinct ((_ extract 16 16) C1) (_ bv0 1)) true) (_ bv16 20) (_ bv15 20)))))
 (let ((?x8655 (ite (and (distinct ((_ extract 19 18) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 19 19) C1) (_ bv0 1)) true) (_ bv19 20) (_ bv18 20)) ?x17794)))
 (let ((?x16142 (ite (and (distinct ((_ extract 19 10) C1) (_ bv0 10)) true) (ite (and (distinct ((_ extract 19 15) C1) (_ bv0 5)) true) ?x8655 ?x16933) (ite (and (distinct ((_ extract 9 5) C1) (_ bv0 5)) true) ?x3574 ?x20220))))
 (let ((?x2922 (bvsub ?x16142 ?x2973)))
 (let ((?x24172 (bvand %X C1)))
 (let (($x6286 (and (distinct (ite (= (ite (= ?x24172 (_ bv0 20)) (_ bv1 1) (_ bv0 1)) (_ bv1 1)) (bvor %Y C2) %Y) (bvor (bvxor ((_ extract 10 0) (bvlshr ?x24172 ?x2922)) C2) %Y)) true)))
 (let ((?x3600 (ite (and (distinct ((_ extract 2 2) C1) (_ bv0 1)) true) (_ bv2 32) (ite (and (distinct ((_ extract 1 1) C1) (_ bv0 1)) true) (_ bv1 32) (_ bv0 32)))))
 (let ((?x5043 (ite (and (distinct ((_ extract 4 3) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 4 4) C1) (_ bv0 1)) true) (_ bv4 32) (_ bv3 32)) ?x3600)))
 (let ((?x9770 (ite (and (distinct ((_ extract 7 7) C1) (_ bv0 1)) true) (_ bv7 32) (ite (and (distinct ((_ extract 6 6) C1) (_ bv0 1)) true) (_ bv6 32) (_ bv5 32)))))
 (let ((?x4153 (ite (and (distinct ((_ extract 9 8) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 9 9) C1) (_ bv0 1)) true) (_ bv9 32) (_ bv8 32)) ?x9770)))
 (let ((?x11434 (ite (and (distinct ((_ extract 12 12) C1) (_ bv0 1)) true) (_ bv12 32) (ite (and (distinct ((_ extract 11 11) C1) (_ bv0 1)) true) (_ bv11 32) (_ bv10 32)))))
 (let ((?x23536 (ite (and (distinct ((_ extract 14 13) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 14 14) C1) (_ bv0 1)) true) (_ bv14 32) (_ bv13 32)) ?x11434)))
 (let ((?x14617 (ite (and (distinct ((_ extract 17 17) C1) (_ bv0 1)) true) (_ bv17 32) (ite (and (distinct ((_ extract 16 16) C1) (_ bv0 1)) true) (_ bv16 32) (_ bv15 32)))))
 (let ((?x9750 (ite (and (distinct ((_ extract 19 18) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 19 19) C1) (_ bv0 1)) true) (_ bv19 32) (_ bv18 32)) ?x14617)))
 (let ((?x4243 (ite (and (distinct ((_ extract 19 10) C1) (_ bv0 10)) true) (ite (and (distinct ((_ extract 19 15) C1) (_ bv0 5)) true) ?x9750 ?x23536) (ite (and (distinct ((_ extract 9 5) C1) (_ bv0 5)) true) ?x4153 ?x5043))))
 (let ((?x21693 (ite (and (distinct ((_ extract 2 2) C2) (_ bv0 1)) true) (_ bv2 32) (ite (and (distinct ((_ extract 1 1) C2) (_ bv0 1)) true) (_ bv1 32) (_ bv0 32)))))
 (let ((?x15159 (ite (and (distinct ((_ extract 5 5) C2) (_ bv0 1)) true) (_ bv5 32) (ite (and (distinct ((_ extract 4 4) C2) (_ bv0 1)) true) (_ bv4 32) (_ bv3 32)))))
 (let ((?x17476 (ite (and (distinct ((_ extract 8 8) C2) (_ bv0 1)) true) (_ bv8 32) (ite (and (distinct ((_ extract 7 7) C2) (_ bv0 1)) true) (_ bv7 32) (_ bv6 32)))))
 (let ((?x5625 (ite (and (distinct ((_ extract 10 9) C2) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) C2) (_ bv0 1)) true) (_ bv10 32) (_ bv9 32)) ?x17476)))
 (let ((?x22671 (ite (and (distinct ((_ extract 10 6) C2) (_ bv0 5)) true) ?x5625 (ite (and (distinct ((_ extract 5 3) C2) (_ bv0 3)) true) ?x15159 ?x21693))))
 (and (and (and (distinct C1 (_ bv0 20)) true) (= (bvand C1 (bvsub C1 (_ bv1 20))) (_ bv0 20))) (and (and (distinct C2 (_ bv0 11)) true) (= (bvand C2 (bvsub C2 (_ bv1 11))) (_ bv0 11))) (bvslt ?x22671 ?x4243) $x6286)))))))))))))))))))))))))))))))))
(check-sat)
