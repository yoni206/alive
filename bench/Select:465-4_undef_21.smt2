(set-info :status unknown)
(declare-fun C2 () (_ BitVec 11))
(declare-fun C1 () (_ BitVec 26))
(assert
 (let ((?x13829 (ite (and (distinct ((_ extract 2 2) C2) (_ bv0 1)) true) (_ bv2 26) (ite (and (distinct ((_ extract 1 1) C2) (_ bv0 1)) true) (_ bv1 26) (_ bv0 26)))))
 (let ((?x9035 (ite (and (distinct ((_ extract 5 5) C2) (_ bv0 1)) true) (_ bv5 26) (ite (and (distinct ((_ extract 4 4) C2) (_ bv0 1)) true) (_ bv4 26) (_ bv3 26)))))
 (let ((?x17766 (ite (and (distinct ((_ extract 8 8) C2) (_ bv0 1)) true) (_ bv8 26) (ite (and (distinct ((_ extract 7 7) C2) (_ bv0 1)) true) (_ bv7 26) (_ bv6 26)))))
 (let ((?x16363 (ite (and (distinct ((_ extract 10 9) C2) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) C2) (_ bv0 1)) true) (_ bv10 26) (_ bv9 26)) ?x17766)))
 (let ((?x12122 (ite (and (distinct ((_ extract 10 6) C2) (_ bv0 5)) true) ?x16363 (ite (and (distinct ((_ extract 5 3) C2) (_ bv0 3)) true) ?x9035 ?x13829))))
 (let ((?x23606 (ite (and (distinct ((_ extract 3 2) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 3 3) C1) (_ bv0 1)) true) (_ bv3 26) (_ bv2 26)) (ite (and (distinct ((_ extract 1 1) C1) (_ bv0 1)) true) (_ bv1 26) (_ bv0 26)))))
 (let ((?x24589 (ite (and (distinct ((_ extract 6 6) C1) (_ bv0 1)) true) (_ bv6 26) (ite (and (distinct ((_ extract 5 5) C1) (_ bv0 1)) true) (_ bv5 26) (_ bv4 26)))))
 (let ((?x15510 (ite (and (distinct ((_ extract 9 9) C1) (_ bv0 1)) true) (_ bv9 26) (ite (and (distinct ((_ extract 8 8) C1) (_ bv0 1)) true) (_ bv8 26) (_ bv7 26)))))
 (let ((?x22495 (ite (and (distinct ((_ extract 12 12) C1) (_ bv0 1)) true) (_ bv12 26) (ite (and (distinct ((_ extract 11 11) C1) (_ bv0 1)) true) (_ bv11 26) (_ bv10 26)))))
 (let ((?x1928 (ite (and (distinct ((_ extract 12 7) C1) (_ bv0 6)) true) (ite (and (distinct ((_ extract 12 10) C1) (_ bv0 3)) true) ?x22495 ?x15510) (ite (and (distinct ((_ extract 6 4) C1) (_ bv0 3)) true) ?x24589 ?x23606))))
 (let ((?x5213 (ite (and (distinct ((_ extract 16 15) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 16 16) C1) (_ bv0 1)) true) (_ bv16 26) (_ bv15 26)) (ite (and (distinct ((_ extract 14 14) C1) (_ bv0 1)) true) (_ bv14 26) (_ bv13 26)))))
 (let ((?x1668 (ite (and (distinct ((_ extract 19 19) C1) (_ bv0 1)) true) (_ bv19 26) (ite (and (distinct ((_ extract 18 18) C1) (_ bv0 1)) true) (_ bv18 26) (_ bv17 26)))))
 (let ((?x3252 (ite (and (distinct ((_ extract 22 22) C1) (_ bv0 1)) true) (_ bv22 26) (ite (and (distinct ((_ extract 21 21) C1) (_ bv0 1)) true) (_ bv21 26) (_ bv20 26)))))
 (let ((?x6342 (ite (and (distinct ((_ extract 25 25) C1) (_ bv0 1)) true) (_ bv25 26) (ite (and (distinct ((_ extract 24 24) C1) (_ bv0 1)) true) (_ bv24 26) (_ bv23 26)))))
 (let ((?x16017 (ite (and (distinct ((_ extract 25 20) C1) (_ bv0 6)) true) (ite (and (distinct ((_ extract 25 23) C1) (_ bv0 3)) true) ?x6342 ?x3252) (ite (and (distinct ((_ extract 19 17) C1) (_ bv0 3)) true) ?x1668 ?x5213))))
 (let ((?x22369 (bvsub (ite (and (distinct ((_ extract 25 13) C1) (_ bv0 13)) true) ?x16017 ?x1928) ?x12122)))
 (let ((?x14232 (ite (and (distinct ((_ extract 3 2) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 3 3) C1) (_ bv0 1)) true) (_ bv3 32) (_ bv2 32)) (ite (and (distinct ((_ extract 1 1) C1) (_ bv0 1)) true) (_ bv1 32) (_ bv0 32)))))
 (let ((?x13440 (ite (and (distinct ((_ extract 6 6) C1) (_ bv0 1)) true) (_ bv6 32) (ite (and (distinct ((_ extract 5 5) C1) (_ bv0 1)) true) (_ bv5 32) (_ bv4 32)))))
 (let ((?x12065 (ite (and (distinct ((_ extract 9 9) C1) (_ bv0 1)) true) (_ bv9 32) (ite (and (distinct ((_ extract 8 8) C1) (_ bv0 1)) true) (_ bv8 32) (_ bv7 32)))))
 (let ((?x7323 (ite (and (distinct ((_ extract 12 12) C1) (_ bv0 1)) true) (_ bv12 32) (ite (and (distinct ((_ extract 11 11) C1) (_ bv0 1)) true) (_ bv11 32) (_ bv10 32)))))
 (let ((?x14806 (ite (and (distinct ((_ extract 12 7) C1) (_ bv0 6)) true) (ite (and (distinct ((_ extract 12 10) C1) (_ bv0 3)) true) ?x7323 ?x12065) (ite (and (distinct ((_ extract 6 4) C1) (_ bv0 3)) true) ?x13440 ?x14232))))
 (let ((?x963 (ite (and (distinct ((_ extract 16 15) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 16 16) C1) (_ bv0 1)) true) (_ bv16 32) (_ bv15 32)) (ite (and (distinct ((_ extract 14 14) C1) (_ bv0 1)) true) (_ bv14 32) (_ bv13 32)))))
 (let ((?x494 (ite (and (distinct ((_ extract 19 19) C1) (_ bv0 1)) true) (_ bv19 32) (ite (and (distinct ((_ extract 18 18) C1) (_ bv0 1)) true) (_ bv18 32) (_ bv17 32)))))
 (let ((?x10368 (ite (and (distinct ((_ extract 22 22) C1) (_ bv0 1)) true) (_ bv22 32) (ite (and (distinct ((_ extract 21 21) C1) (_ bv0 1)) true) (_ bv21 32) (_ bv20 32)))))
 (let ((?x21527 (ite (and (distinct ((_ extract 25 25) C1) (_ bv0 1)) true) (_ bv25 32) (ite (and (distinct ((_ extract 24 24) C1) (_ bv0 1)) true) (_ bv24 32) (_ bv23 32)))))
 (let ((?x5997 (ite (and (distinct ((_ extract 25 20) C1) (_ bv0 6)) true) (ite (and (distinct ((_ extract 25 23) C1) (_ bv0 3)) true) ?x21527 ?x10368) (ite (and (distinct ((_ extract 19 17) C1) (_ bv0 3)) true) ?x494 ?x963))))
 (let ((?x2364 (ite (and (distinct ((_ extract 2 2) C2) (_ bv0 1)) true) (_ bv2 32) (ite (and (distinct ((_ extract 1 1) C2) (_ bv0 1)) true) (_ bv1 32) (_ bv0 32)))))
 (let ((?x14500 (ite (and (distinct ((_ extract 5 5) C2) (_ bv0 1)) true) (_ bv5 32) (ite (and (distinct ((_ extract 4 4) C2) (_ bv0 1)) true) (_ bv4 32) (_ bv3 32)))))
 (let ((?x7952 (ite (and (distinct ((_ extract 8 8) C2) (_ bv0 1)) true) (_ bv8 32) (ite (and (distinct ((_ extract 7 7) C2) (_ bv0 1)) true) (_ bv7 32) (_ bv6 32)))))
 (let ((?x25038 (ite (and (distinct ((_ extract 10 9) C2) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) C2) (_ bv0 1)) true) (_ bv10 32) (_ bv9 32)) ?x7952)))
 (let ((?x3560 (ite (and (distinct ((_ extract 10 6) C2) (_ bv0 5)) true) ?x25038 (ite (and (distinct ((_ extract 5 3) C2) (_ bv0 3)) true) ?x14500 ?x2364))))
 (and (and (and (distinct C1 (_ bv0 26)) true) (= (bvand C1 (bvsub C1 (_ bv1 26))) (_ bv0 26))) (and (and (distinct C2 (_ bv0 11)) true) (= (bvand C2 (bvsub C2 (_ bv1 11))) (_ bv0 11))) (bvslt ?x3560 (ite (and (distinct ((_ extract 25 13) C1) (_ bv0 13)) true) ?x5997 ?x14806)) (not (bvult ?x22369 (_ bv26 26))))))))))))))))))))))))))))))))))))
(check-sat)
