(set-info :status unknown)
(declare-fun C2 () (_ BitVec 11))
(declare-fun C1 () (_ BitVec 29))
(assert
 (let ((?x1835 (ite (and (distinct ((_ extract 2 2) C2) (_ bv0 1)) true) (_ bv2 29) (ite (and (distinct ((_ extract 1 1) C2) (_ bv0 1)) true) (_ bv1 29) (_ bv0 29)))))
 (let ((?x4953 (ite (and (distinct ((_ extract 5 5) C2) (_ bv0 1)) true) (_ bv5 29) (ite (and (distinct ((_ extract 4 4) C2) (_ bv0 1)) true) (_ bv4 29) (_ bv3 29)))))
 (let ((?x2041 (ite (and (distinct ((_ extract 8 8) C2) (_ bv0 1)) true) (_ bv8 29) (ite (and (distinct ((_ extract 7 7) C2) (_ bv0 1)) true) (_ bv7 29) (_ bv6 29)))))
 (let ((?x2025 (ite (and (distinct ((_ extract 10 9) C2) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) C2) (_ bv0 1)) true) (_ bv10 29) (_ bv9 29)) ?x2041)))
 (let ((?x4254 (ite (and (distinct ((_ extract 10 6) C2) (_ bv0 5)) true) ?x2025 (ite (and (distinct ((_ extract 5 3) C2) (_ bv0 3)) true) ?x4953 ?x1835))))
 (let ((?x1522 (ite (and (distinct ((_ extract 3 2) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 3 3) C1) (_ bv0 1)) true) (_ bv3 29) (_ bv2 29)) (ite (and (distinct ((_ extract 1 1) C1) (_ bv0 1)) true) (_ bv1 29) (_ bv0 29)))))
 (let ((?x1740 (ite (and (distinct ((_ extract 7 6) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 7 7) C1) (_ bv0 1)) true) (_ bv7 29) (_ bv6 29)) (ite (and (distinct ((_ extract 5 5) C1) (_ bv0 1)) true) (_ bv5 29) (_ bv4 29)))))
 (let ((?x3972 (ite (and (distinct ((_ extract 11 10) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 11 11) C1) (_ bv0 1)) true) (_ bv11 29) (_ bv10 29)) (ite (and (distinct ((_ extract 9 9) C1) (_ bv0 1)) true) (_ bv9 29) (_ bv8 29)))))
 (let ((?x2227 (ite (and (distinct ((_ extract 14 14) C1) (_ bv0 1)) true) (_ bv14 29) (ite (and (distinct ((_ extract 13 13) C1) (_ bv0 1)) true) (_ bv13 29) (_ bv12 29)))))
 (let ((?x3280 (ite (and (distinct ((_ extract 14 8) C1) (_ bv0 7)) true) (ite (and (distinct ((_ extract 14 12) C1) (_ bv0 3)) true) ?x2227 ?x3972) (ite (and (distinct ((_ extract 7 4) C1) (_ bv0 4)) true) ?x1740 ?x1522))))
 (let ((?x1808 (ite (and (distinct ((_ extract 18 17) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 18 18) C1) (_ bv0 1)) true) (_ bv18 29) (_ bv17 29)) (ite (and (distinct ((_ extract 16 16) C1) (_ bv0 1)) true) (_ bv16 29) (_ bv15 29)))))
 (let ((?x2056 (ite (and (distinct ((_ extract 21 21) C1) (_ bv0 1)) true) (_ bv21 29) (ite (and (distinct ((_ extract 20 20) C1) (_ bv0 1)) true) (_ bv20 29) (_ bv19 29)))))
 (let ((?x2598 (ite (and (distinct ((_ extract 25 24) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 25 25) C1) (_ bv0 1)) true) (_ bv25 29) (_ bv24 29)) (ite (and (distinct ((_ extract 23 23) C1) (_ bv0 1)) true) (_ bv23 29) (_ bv22 29)))))
 (let ((?x1593 (ite (and (distinct ((_ extract 28 28) C1) (_ bv0 1)) true) (_ bv28 29) (ite (and (distinct ((_ extract 27 27) C1) (_ bv0 1)) true) (_ bv27 29) (_ bv26 29)))))
 (let ((?x3788 (ite (and (distinct ((_ extract 28 22) C1) (_ bv0 7)) true) (ite (and (distinct ((_ extract 28 26) C1) (_ bv0 3)) true) ?x1593 ?x2598) (ite (and (distinct ((_ extract 21 19) C1) (_ bv0 3)) true) ?x2056 ?x1808))))
 (let ((?x3874 (bvsub (ite (and (distinct ((_ extract 28 15) C1) (_ bv0 14)) true) ?x3788 ?x3280) ?x4254)))
 (let ((?x4322 (ite (and (distinct ((_ extract 3 2) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 3 3) C1) (_ bv0 1)) true) (_ bv3 32) (_ bv2 32)) (ite (and (distinct ((_ extract 1 1) C1) (_ bv0 1)) true) (_ bv1 32) (_ bv0 32)))))
 (let ((?x3255 (ite (and (distinct ((_ extract 7 6) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 7 7) C1) (_ bv0 1)) true) (_ bv7 32) (_ bv6 32)) (ite (and (distinct ((_ extract 5 5) C1) (_ bv0 1)) true) (_ bv5 32) (_ bv4 32)))))
 (let ((?x3482 (ite (and (distinct ((_ extract 11 10) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 11 11) C1) (_ bv0 1)) true) (_ bv11 32) (_ bv10 32)) (ite (and (distinct ((_ extract 9 9) C1) (_ bv0 1)) true) (_ bv9 32) (_ bv8 32)))))
 (let ((?x2690 (ite (and (distinct ((_ extract 14 14) C1) (_ bv0 1)) true) (_ bv14 32) (ite (and (distinct ((_ extract 13 13) C1) (_ bv0 1)) true) (_ bv13 32) (_ bv12 32)))))
 (let ((?x4177 (ite (and (distinct ((_ extract 14 8) C1) (_ bv0 7)) true) (ite (and (distinct ((_ extract 14 12) C1) (_ bv0 3)) true) ?x2690 ?x3482) (ite (and (distinct ((_ extract 7 4) C1) (_ bv0 4)) true) ?x3255 ?x4322))))
 (let ((?x2543 (ite (and (distinct ((_ extract 18 17) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 18 18) C1) (_ bv0 1)) true) (_ bv18 32) (_ bv17 32)) (ite (and (distinct ((_ extract 16 16) C1) (_ bv0 1)) true) (_ bv16 32) (_ bv15 32)))))
 (let ((?x1825 (ite (and (distinct ((_ extract 21 21) C1) (_ bv0 1)) true) (_ bv21 32) (ite (and (distinct ((_ extract 20 20) C1) (_ bv0 1)) true) (_ bv20 32) (_ bv19 32)))))
 (let ((?x4388 (ite (and (distinct ((_ extract 25 24) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 25 25) C1) (_ bv0 1)) true) (_ bv25 32) (_ bv24 32)) (ite (and (distinct ((_ extract 23 23) C1) (_ bv0 1)) true) (_ bv23 32) (_ bv22 32)))))
 (let ((?x1263 (ite (and (distinct ((_ extract 28 28) C1) (_ bv0 1)) true) (_ bv28 32) (ite (and (distinct ((_ extract 27 27) C1) (_ bv0 1)) true) (_ bv27 32) (_ bv26 32)))))
 (let ((?x1917 (ite (and (distinct ((_ extract 28 22) C1) (_ bv0 7)) true) (ite (and (distinct ((_ extract 28 26) C1) (_ bv0 3)) true) ?x1263 ?x4388) (ite (and (distinct ((_ extract 21 19) C1) (_ bv0 3)) true) ?x1825 ?x2543))))
 (let ((?x1984 (ite (and (distinct ((_ extract 2 2) C2) (_ bv0 1)) true) (_ bv2 32) (ite (and (distinct ((_ extract 1 1) C2) (_ bv0 1)) true) (_ bv1 32) (_ bv0 32)))))
 (let ((?x1809 (ite (and (distinct ((_ extract 5 5) C2) (_ bv0 1)) true) (_ bv5 32) (ite (and (distinct ((_ extract 4 4) C2) (_ bv0 1)) true) (_ bv4 32) (_ bv3 32)))))
 (let ((?x4942 (ite (and (distinct ((_ extract 8 8) C2) (_ bv0 1)) true) (_ bv8 32) (ite (and (distinct ((_ extract 7 7) C2) (_ bv0 1)) true) (_ bv7 32) (_ bv6 32)))))
 (let ((?x4591 (ite (and (distinct ((_ extract 10 9) C2) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) C2) (_ bv0 1)) true) (_ bv10 32) (_ bv9 32)) ?x4942)))
 (let ((?x2217 (ite (and (distinct ((_ extract 10 6) C2) (_ bv0 5)) true) ?x4591 (ite (and (distinct ((_ extract 5 3) C2) (_ bv0 3)) true) ?x1809 ?x1984))))
 (and (and (and (distinct C1 (_ bv0 29)) true) (= (bvand C1 (bvsub C1 (_ bv1 29))) (_ bv0 29))) (and (and (distinct C2 (_ bv0 11)) true) (= (bvand C2 (bvsub C2 (_ bv1 11))) (_ bv0 11))) (bvslt ?x2217 (ite (and (distinct ((_ extract 28 15) C1) (_ bv0 14)) true) ?x1917 ?x4177)) (not (bvult ?x3874 (_ bv29 29))))))))))))))))))))))))))))))))))))
(check-sat)
