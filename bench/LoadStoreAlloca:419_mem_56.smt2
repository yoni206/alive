(set-info :status unknown)
(declare-fun mem0 () (_ BitVec 8))
(declare-fun %x () (_ BitVec 57))
(declare-fun %p1 () (_ BitVec 64))
(declare-fun idx () (_ BitVec 64))
(declare-fun |ana_equivalentAddressValues(%p1, %p2)| () (_ BitVec 1))
(declare-fun %p2 () (_ BitVec 64))
(assert
 (let ((?x15865 (concat ((_ extract 7 1) mem0) ((_ extract 0 0) %x))))
 (let ((?x8765 (ite (and (and (distinct %p1 (_ bv0 64)) true) (or true true) (= idx %p1)) ?x15865 mem0)))
 (let ((?x7193 ((_ extract 8 1) %x)))
 (let (($x2633 (or true true)))
 (let (($x16547 (and (distinct %p1 (_ bv0 64)) true)))
 (let ((?x17907 (ite (and $x16547 $x2633 (= idx (bvadd (bvadd %p1 (_ bv1 64)) (_ bv0 64)))) ?x7193 ?x8765)))
 (let ((?x17826 ((_ extract 16 9) %x)))
 (let ((?x21161 (ite (and $x16547 $x2633 (= idx (bvadd (bvadd %p1 (_ bv1 64)) (_ bv1 64)))) ?x17826 ?x17907)))
 (let ((?x19806 ((_ extract 24 17) %x)))
 (let ((?x8483 (ite (and $x16547 $x2633 (= idx (bvadd (bvadd %p1 (_ bv1 64)) (_ bv2 64)))) ?x19806 ?x21161)))
 (let ((?x15971 ((_ extract 32 25) %x)))
 (let ((?x15927 (ite (and $x16547 $x2633 (= idx (bvadd (bvadd %p1 (_ bv1 64)) (_ bv3 64)))) ?x15971 ?x8483)))
 (let ((?x9814 ((_ extract 40 33) %x)))
 (let ((?x10245 (ite (and $x16547 $x2633 (= idx (bvadd (bvadd %p1 (_ bv1 64)) (_ bv4 64)))) ?x9814 ?x15927)))
 (let ((?x20396 ((_ extract 48 41) %x)))
 (let ((?x13447 (ite (and $x16547 $x2633 (= idx (bvadd (bvadd %p1 (_ bv1 64)) (_ bv5 64)))) ?x20396 ?x10245)))
 (let ((?x18741 ((_ extract 56 49) %x)))
 (let ((?x14609 (ite (and $x16547 $x2633 (= idx (bvadd (bvadd %p1 (_ bv1 64)) (_ bv6 64)))) ?x18741 ?x13447)))
 (let (($x19073 (= |ana_equivalentAddressValues(%p1, %p2)| (_ bv1 1))))
 (and (=> $x19073 (= %p1 %p2)) $x19073 (and (distinct ?x14609 ?x14609) true))))))))))))))))))))))
(check-sat)
