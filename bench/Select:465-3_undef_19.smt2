(set-info :status unknown)
(declare-fun C2 () (_ BitVec 11))
(declare-fun C1 () (_ BitVec 21))
(assert
 (let ((?x20136 (ite (and (distinct ((_ extract 2 2) C2) (_ bv0 1)) true) (_ bv2 21) (ite (and (distinct ((_ extract 1 1) C2) (_ bv0 1)) true) (_ bv1 21) (_ bv0 21)))))
 (let ((?x9784 (ite (and (distinct ((_ extract 5 5) C2) (_ bv0 1)) true) (_ bv5 21) (ite (and (distinct ((_ extract 4 4) C2) (_ bv0 1)) true) (_ bv4 21) (_ bv3 21)))))
 (let ((?x7410 (ite (and (distinct ((_ extract 8 8) C2) (_ bv0 1)) true) (_ bv8 21) (ite (and (distinct ((_ extract 7 7) C2) (_ bv0 1)) true) (_ bv7 21) (_ bv6 21)))))
 (let ((?x11486 (ite (and (distinct ((_ extract 10 9) C2) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) C2) (_ bv0 1)) true) (_ bv10 21) (_ bv9 21)) ?x7410)))
 (let ((?x13266 (ite (and (distinct ((_ extract 10 6) C2) (_ bv0 5)) true) ?x11486 (ite (and (distinct ((_ extract 5 3) C2) (_ bv0 3)) true) ?x9784 ?x20136))))
 (let ((?x1668 (ite (and (distinct ((_ extract 2 2) C1) (_ bv0 1)) true) (_ bv2 21) (ite (and (distinct ((_ extract 1 1) C1) (_ bv0 1)) true) (_ bv1 21) (_ bv0 21)))))
 (let ((?x6099 (ite (and (distinct ((_ extract 5 5) C1) (_ bv0 1)) true) (_ bv5 21) (ite (and (distinct ((_ extract 4 4) C1) (_ bv0 1)) true) (_ bv4 21) (_ bv3 21)))))
 (let ((?x22381 (ite (and (distinct ((_ extract 8 8) C1) (_ bv0 1)) true) (_ bv8 21) (ite (and (distinct ((_ extract 7 7) C1) (_ bv0 1)) true) (_ bv7 21) (_ bv6 21)))))
 (let ((?x19330 (ite (and (distinct ((_ extract 10 9) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) C1) (_ bv0 1)) true) (_ bv10 21) (_ bv9 21)) ?x22381)))
 (let ((?x12855 (ite (and (distinct ((_ extract 10 6) C1) (_ bv0 5)) true) ?x19330 (ite (and (distinct ((_ extract 5 3) C1) (_ bv0 3)) true) ?x6099 ?x1668))))
 (let ((?x8157 (ite (and (distinct ((_ extract 13 13) C1) (_ bv0 1)) true) (_ bv13 21) (ite (and (distinct ((_ extract 12 12) C1) (_ bv0 1)) true) (_ bv12 21) (_ bv11 21)))))
 (let ((?x11919 (ite (and (distinct ((_ extract 15 14) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 15 15) C1) (_ bv0 1)) true) (_ bv15 21) (_ bv14 21)) ?x8157)))
 (let ((?x9873 (ite (and (distinct ((_ extract 18 18) C1) (_ bv0 1)) true) (_ bv18 21) (ite (and (distinct ((_ extract 17 17) C1) (_ bv0 1)) true) (_ bv17 21) (_ bv16 21)))))
 (let ((?x3166 (ite (and (distinct ((_ extract 20 19) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 20 20) C1) (_ bv0 1)) true) (_ bv20 21) (_ bv19 21)) ?x9873)))
 (let ((?x5683 (ite (and (distinct ((_ extract 20 11) C1) (_ bv0 10)) true) (ite (and (distinct ((_ extract 20 16) C1) (_ bv0 5)) true) ?x3166 ?x11919) ?x12855)))
 (let ((?x19348 (bvsub ?x5683 ?x13266)))
 (let ((?x11808 (ite (and (distinct ((_ extract 2 2) C1) (_ bv0 1)) true) (_ bv2 32) (ite (and (distinct ((_ extract 1 1) C1) (_ bv0 1)) true) (_ bv1 32) (_ bv0 32)))))
 (let ((?x3539 (ite (and (distinct ((_ extract 5 5) C1) (_ bv0 1)) true) (_ bv5 32) (ite (and (distinct ((_ extract 4 4) C1) (_ bv0 1)) true) (_ bv4 32) (_ bv3 32)))))
 (let ((?x5391 (ite (and (distinct ((_ extract 8 8) C1) (_ bv0 1)) true) (_ bv8 32) (ite (and (distinct ((_ extract 7 7) C1) (_ bv0 1)) true) (_ bv7 32) (_ bv6 32)))))
 (let ((?x5114 (ite (and (distinct ((_ extract 10 9) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) C1) (_ bv0 1)) true) (_ bv10 32) (_ bv9 32)) ?x5391)))
 (let ((?x10232 (ite (and (distinct ((_ extract 10 6) C1) (_ bv0 5)) true) ?x5114 (ite (and (distinct ((_ extract 5 3) C1) (_ bv0 3)) true) ?x3539 ?x11808))))
 (let ((?x2405 (ite (and (distinct ((_ extract 13 13) C1) (_ bv0 1)) true) (_ bv13 32) (ite (and (distinct ((_ extract 12 12) C1) (_ bv0 1)) true) (_ bv12 32) (_ bv11 32)))))
 (let ((?x1651 (ite (and (distinct ((_ extract 15 14) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 15 15) C1) (_ bv0 1)) true) (_ bv15 32) (_ bv14 32)) ?x2405)))
 (let ((?x11190 (ite (and (distinct ((_ extract 18 18) C1) (_ bv0 1)) true) (_ bv18 32) (ite (and (distinct ((_ extract 17 17) C1) (_ bv0 1)) true) (_ bv17 32) (_ bv16 32)))))
 (let ((?x1700 (ite (and (distinct ((_ extract 20 19) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 20 20) C1) (_ bv0 1)) true) (_ bv20 32) (_ bv19 32)) ?x11190)))
 (let ((?x10199 (ite (and (distinct ((_ extract 20 11) C1) (_ bv0 10)) true) (ite (and (distinct ((_ extract 20 16) C1) (_ bv0 5)) true) ?x1700 ?x1651) ?x10232)))
 (let ((?x14805 (ite (and (distinct ((_ extract 2 2) C2) (_ bv0 1)) true) (_ bv2 32) (ite (and (distinct ((_ extract 1 1) C2) (_ bv0 1)) true) (_ bv1 32) (_ bv0 32)))))
 (let ((?x7582 (ite (and (distinct ((_ extract 5 5) C2) (_ bv0 1)) true) (_ bv5 32) (ite (and (distinct ((_ extract 4 4) C2) (_ bv0 1)) true) (_ bv4 32) (_ bv3 32)))))
 (let ((?x16544 (ite (and (distinct ((_ extract 8 8) C2) (_ bv0 1)) true) (_ bv8 32) (ite (and (distinct ((_ extract 7 7) C2) (_ bv0 1)) true) (_ bv7 32) (_ bv6 32)))))
 (let ((?x3748 (ite (and (distinct ((_ extract 10 9) C2) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) C2) (_ bv0 1)) true) (_ bv10 32) (_ bv9 32)) ?x16544)))
 (let ((?x11476 (ite (and (distinct ((_ extract 10 6) C2) (_ bv0 5)) true) ?x3748 (ite (and (distinct ((_ extract 5 3) C2) (_ bv0 3)) true) ?x7582 ?x14805))))
 (and (and (and (distinct C1 (_ bv0 21)) true) (= (bvand C1 (bvsub C1 (_ bv1 21))) (_ bv0 21))) (and (and (distinct C2 (_ bv0 11)) true) (= (bvand C2 (bvsub C2 (_ bv1 11))) (_ bv0 11))) (bvslt ?x11476 ?x10199) (not (bvult ?x19348 (_ bv21 21))))))))))))))))))))))))))))))))))))
(check-sat)
