(set-info :status unknown)
(declare-fun mem0 () (_ BitVec 8))
(declare-fun %x () (_ BitVec 61))
(declare-fun %p1 () (_ BitVec 64))
(declare-fun idx () (_ BitVec 64))
(declare-fun |ana_equivalentAddressValues(%p1, %p2)| () (_ BitVec 1))
(declare-fun %p2 () (_ BitVec 64))
(assert
 (let ((?x15865 (concat ((_ extract 7 5) mem0) ((_ extract 4 0) %x))))
 (let ((?x23786 (ite (and (and (distinct %p1 (_ bv0 64)) true) (or true true) (= idx %p1)) ?x15865 mem0)))
 (let ((?x16547 ((_ extract 12 5) %x)))
 (let (($x8479 (or true true)))
 (let (($x23577 (and (distinct %p1 (_ bv0 64)) true)))
 (let ((?x21161 (ite (and $x23577 $x8479 (= idx (bvadd (bvadd %p1 (_ bv1 64)) (_ bv0 64)))) ?x16547 ?x23786)))
 (let ((?x17907 ((_ extract 20 13) %x)))
 (let ((?x14137 (ite (and $x23577 $x8479 (= idx (bvadd (bvadd %p1 (_ bv1 64)) (_ bv1 64)))) ?x17907 ?x21161)))
 (let ((?x9814 ((_ extract 28 21) %x)))
 (let ((?x18536 (ite (and $x23577 $x8479 (= idx (bvadd (bvadd %p1 (_ bv1 64)) (_ bv2 64)))) ?x9814 ?x14137)))
 (let ((?x6201 ((_ extract 36 29) %x)))
 (let ((?x23974 (ite (and $x23577 $x8479 (= idx (bvadd (bvadd %p1 (_ bv1 64)) (_ bv3 64)))) ?x6201 ?x18536)))
 (let ((?x4211 ((_ extract 44 37) %x)))
 (let ((?x17248 (ite (and $x23577 $x8479 (= idx (bvadd (bvadd %p1 (_ bv1 64)) (_ bv4 64)))) ?x4211 ?x23974)))
 (let ((?x12629 ((_ extract 52 45) %x)))
 (let ((?x11298 (ite (and $x23577 $x8479 (= idx (bvadd (bvadd %p1 (_ bv1 64)) (_ bv5 64)))) ?x12629 ?x17248)))
 (let ((?x1700 ((_ extract 60 53) %x)))
 (let ((?x15467 (ite (and $x23577 $x8479 (= idx (bvadd (bvadd %p1 (_ bv1 64)) (_ bv6 64)))) ?x1700 ?x11298)))
 (let (($x2482 (= |ana_equivalentAddressValues(%p1, %p2)| (_ bv1 1))))
 (and (=> $x2482 (= %p1 %p2)) $x2482 (and (distinct ?x15467 ?x15467) true))))))))))))))))))))))
(check-sat)
