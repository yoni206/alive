(set-info :status unknown)
(declare-fun mem0 () (_ BitVec 8))
(declare-fun %x () (_ BitVec 20))
(declare-fun %p1 () (_ BitVec 64))
(declare-fun idx () (_ BitVec 64))
(declare-fun |ana_equivalentAddressValues(%p1, %p2)| () (_ BitVec 1))
(declare-fun %p2 () (_ BitVec 64))
(assert
 (let ((?x17022 (concat ((_ extract 7 4) mem0) ((_ extract 3 0) %x))))
 (let ((?x6055 (ite (and (and (distinct %p1 (_ bv0 64)) true) (or true true) (= idx %p1)) ?x17022 mem0)))
 (let ((?x8283 ((_ extract 11 4) %x)))
 (let (($x8080 (or true true)))
 (let (($x407 (and (distinct %p1 (_ bv0 64)) true)))
 (let ((?x13453 (ite (and $x407 $x8080 (= idx (bvadd (bvadd %p1 (_ bv1 64)) (_ bv0 64)))) ?x8283 ?x6055)))
 (let ((?x2571 ((_ extract 19 12) %x)))
 (let ((?x5435 (ite (and $x407 $x8080 (= idx (bvadd (bvadd %p1 (_ bv1 64)) (_ bv1 64)))) ?x2571 ?x13453)))
 (let (($x6231 (= |ana_equivalentAddressValues(%p1, %p2)| (_ bv1 1))))
 (and (=> $x6231 (= %p1 %p2)) $x6231 (and (distinct ?x5435 ?x5435) true))))))))))))
(check-sat)
