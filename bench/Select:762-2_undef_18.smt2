(set-info :status unknown)
(declare-fun C3 () (_ BitVec 11))
(declare-fun C2 () (_ BitVec 11))
(declare-fun C () (_ BitVec 22))
(assert
 (let ((?x3077 (ite (and (distinct ((_ extract 2 2) (bvsub C2 C3)) (_ bv0 1)) true) (_ bv2 11) (ite (and (distinct ((_ extract 1 1) (bvsub C2 C3)) (_ bv0 1)) true) (_ bv1 11) (_ bv0 11)))))
 (let ((?x2929 (ite (and (distinct ((_ extract 5 5) (bvsub C2 C3)) (_ bv0 1)) true) (_ bv5 11) (ite (and (distinct ((_ extract 4 4) (bvsub C2 C3)) (_ bv0 1)) true) (_ bv4 11) (_ bv3 11)))))
 (let ((?x3021 (ite (and (distinct ((_ extract 8 8) (bvsub C2 C3)) (_ bv0 1)) true) (_ bv8 11) (ite (and (distinct ((_ extract 7 7) (bvsub C2 C3)) (_ bv0 1)) true) (_ bv7 11) (_ bv6 11)))))
 (let ((?x1889 (ite (and (distinct ((_ extract 10 9) (bvsub C2 C3)) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) (bvsub C2 C3)) (_ bv0 1)) true) (_ bv10 11) (_ bv9 11)) ?x3021)))
 (let ((?x5528 (ite (and (distinct ((_ extract 10 6) (bvsub C2 C3)) (_ bv0 5)) true) ?x1889 (ite (and (distinct ((_ extract 5 3) (bvsub C2 C3)) (_ bv0 3)) true) ?x2929 ?x3077))))
 (let ((?x8530 (ite (and (distinct ((_ extract 2 2) C) (_ bv0 1)) true) (_ bv2 11) (ite (and (distinct ((_ extract 1 1) C) (_ bv0 1)) true) (_ bv1 11) (_ bv0 11)))))
 (let ((?x7864 (ite (and (distinct ((_ extract 5 5) C) (_ bv0 1)) true) (_ bv5 11) (ite (and (distinct ((_ extract 4 4) C) (_ bv0 1)) true) (_ bv4 11) (_ bv3 11)))))
 (let ((?x7300 (ite (and (distinct ((_ extract 8 8) C) (_ bv0 1)) true) (_ bv8 11) (ite (and (distinct ((_ extract 7 7) C) (_ bv0 1)) true) (_ bv7 11) (_ bv6 11)))))
 (let ((?x4280 (ite (and (distinct ((_ extract 10 9) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) C) (_ bv0 1)) true) (_ bv10 11) (_ bv9 11)) ?x7300)))
 (let ((?x5608 (ite (and (distinct ((_ extract 10 6) C) (_ bv0 5)) true) ?x4280 (ite (and (distinct ((_ extract 5 3) C) (_ bv0 3)) true) ?x7864 ?x8530))))
 (let ((?x2453 (ite (and (distinct ((_ extract 13 13) C) (_ bv0 1)) true) (_ bv13 11) (ite (and (distinct ((_ extract 12 12) C) (_ bv0 1)) true) (_ bv12 11) (_ bv11 11)))))
 (let ((?x1488 (ite (and (distinct ((_ extract 16 16) C) (_ bv0 1)) true) (_ bv16 11) (ite (and (distinct ((_ extract 15 15) C) (_ bv0 1)) true) (_ bv15 11) (_ bv14 11)))))
 (let ((?x1177 (ite (and (distinct ((_ extract 19 19) C) (_ bv0 1)) true) (_ bv19 11) (ite (and (distinct ((_ extract 18 18) C) (_ bv0 1)) true) (_ bv18 11) (_ bv17 11)))))
 (let ((?x7896 (ite (and (distinct ((_ extract 21 20) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 21 21) C) (_ bv0 1)) true) (_ bv21 11) (_ bv20 11)) ?x1177)))
 (let ((?x4448 (ite (and (distinct ((_ extract 21 17) C) (_ bv0 5)) true) ?x7896 (ite (and (distinct ((_ extract 16 14) C) (_ bv0 3)) true) ?x1488 ?x2453))))
 (let ((?x7028 (bvsub (ite (and (distinct ((_ extract 21 11) C) (_ bv0 11)) true) ?x4448 ?x5608) ?x5528)))
 (let ((?x8022 (ite (bvsgt (_ bv0 11) ?x7028) (_ bv0 11) ?x7028)))
 (let ((?x5920 (bvsub ?x5528 (ite (and (distinct ((_ extract 21 11) C) (_ bv0 11)) true) ?x4448 ?x5608))))
 (let ((?x6353 (ite (bvsgt (_ bv0 11) ?x5920) (_ bv0 11) ?x5920)))
 (let ((?x2200 (ite (and (distinct ((_ extract 2 2) C) (_ bv0 1)) true) (_ bv2 32) (ite (and (distinct ((_ extract 1 1) C) (_ bv0 1)) true) (_ bv1 32) (_ bv0 32)))))
 (let ((?x2019 (ite (and (distinct ((_ extract 5 5) C) (_ bv0 1)) true) (_ bv5 32) (ite (and (distinct ((_ extract 4 4) C) (_ bv0 1)) true) (_ bv4 32) (_ bv3 32)))))
 (let ((?x1146 (ite (and (distinct ((_ extract 8 8) C) (_ bv0 1)) true) (_ bv8 32) (ite (and (distinct ((_ extract 7 7) C) (_ bv0 1)) true) (_ bv7 32) (_ bv6 32)))))
 (let ((?x7031 (ite (and (distinct ((_ extract 10 9) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) C) (_ bv0 1)) true) (_ bv10 32) (_ bv9 32)) ?x1146)))
 (let ((?x3715 (ite (and (distinct ((_ extract 10 6) C) (_ bv0 5)) true) ?x7031 (ite (and (distinct ((_ extract 5 3) C) (_ bv0 3)) true) ?x2019 ?x2200))))
 (let ((?x4182 (ite (and (distinct ((_ extract 13 13) C) (_ bv0 1)) true) (_ bv13 32) (ite (and (distinct ((_ extract 12 12) C) (_ bv0 1)) true) (_ bv12 32) (_ bv11 32)))))
 (let ((?x3719 (ite (and (distinct ((_ extract 16 16) C) (_ bv0 1)) true) (_ bv16 32) (ite (and (distinct ((_ extract 15 15) C) (_ bv0 1)) true) (_ bv15 32) (_ bv14 32)))))
 (let ((?x6455 (ite (and (distinct ((_ extract 19 19) C) (_ bv0 1)) true) (_ bv19 32) (ite (and (distinct ((_ extract 18 18) C) (_ bv0 1)) true) (_ bv18 32) (_ bv17 32)))))
 (let ((?x1410 (ite (and (distinct ((_ extract 21 20) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 21 21) C) (_ bv0 1)) true) (_ bv21 32) (_ bv20 32)) ?x6455)))
 (let ((?x3450 (ite (and (distinct ((_ extract 21 17) C) (_ bv0 5)) true) ?x1410 (ite (and (distinct ((_ extract 16 14) C) (_ bv0 3)) true) ?x3719 ?x4182))))
 (let (($x6130 (and (and (distinct (bvsub C2 C3) (_ bv0 11)) true) (= (bvand (bvsub C2 C3) (bvsub (bvsub C2 C3) (_ bv1 11))) (_ bv0 11)))))
 (and (and (and (distinct C (_ bv0 22)) true) (= (bvand C (bvsub C (_ bv1 22))) (_ bv0 22))) $x6130 (bvslt (ite (and (distinct ((_ extract 21 11) C) (_ bv0 11)) true) ?x3450 ?x3715) (_ bv11 32)) (not (and (bvult ?x6353 (_ bv11 11)) (bvult ?x8022 (_ bv11 11))))))))))))))))))))))))))))))))))))
(check-sat)
