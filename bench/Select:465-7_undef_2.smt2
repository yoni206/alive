(set-info :status unknown)
(declare-fun C2 () (_ BitVec 11))
(declare-fun C1 () (_ BitVec 10))
(assert
 (let ((?x1550 (ite (and (distinct ((_ extract 2 2) C2) (_ bv0 1)) true) (_ bv2 10) (ite (and (distinct ((_ extract 1 1) C2) (_ bv0 1)) true) (_ bv1 10) (_ bv0 10)))))
 (let ((?x5968 (ite (and (distinct ((_ extract 5 5) C2) (_ bv0 1)) true) (_ bv5 10) (ite (and (distinct ((_ extract 4 4) C2) (_ bv0 1)) true) (_ bv4 10) (_ bv3 10)))))
 (let ((?x2787 (ite (and (distinct ((_ extract 8 8) C2) (_ bv0 1)) true) (_ bv8 10) (ite (and (distinct ((_ extract 7 7) C2) (_ bv0 1)) true) (_ bv7 10) (_ bv6 10)))))
 (let ((?x5299 (ite (and (distinct ((_ extract 10 9) C2) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) C2) (_ bv0 1)) true) (_ bv10 10) (_ bv9 10)) ?x2787)))
 (let ((?x6367 (ite (and (distinct ((_ extract 10 6) C2) (_ bv0 5)) true) ?x5299 (ite (and (distinct ((_ extract 5 3) C2) (_ bv0 3)) true) ?x5968 ?x1550))))
 (let ((?x4107 (ite (and (distinct ((_ extract 2 2) C1) (_ bv0 1)) true) (_ bv2 10) (ite (and (distinct ((_ extract 1 1) C1) (_ bv0 1)) true) (_ bv1 10) (_ bv0 10)))))
 (let ((?x6140 (ite (and (distinct ((_ extract 4 3) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 4 4) C1) (_ bv0 1)) true) (_ bv4 10) (_ bv3 10)) ?x4107)))
 (let ((?x2235 (ite (and (distinct ((_ extract 7 7) C1) (_ bv0 1)) true) (_ bv7 10) (ite (and (distinct ((_ extract 6 6) C1) (_ bv0 1)) true) (_ bv6 10) (_ bv5 10)))))
 (let ((?x6654 (ite (and (distinct ((_ extract 9 8) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 9 9) C1) (_ bv0 1)) true) (_ bv9 10) (_ bv8 10)) ?x2235)))
 (let ((?x2560 (bvsub (ite (and (distinct ((_ extract 9 5) C1) (_ bv0 5)) true) ?x6654 ?x6140) ?x6367)))
 (let ((?x4798 (ite (and (distinct ((_ extract 2 2) C1) (_ bv0 1)) true) (_ bv2 32) (ite (and (distinct ((_ extract 1 1) C1) (_ bv0 1)) true) (_ bv1 32) (_ bv0 32)))))
 (let ((?x1203 (ite (and (distinct ((_ extract 4 3) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 4 4) C1) (_ bv0 1)) true) (_ bv4 32) (_ bv3 32)) ?x4798)))
 (let ((?x2233 (ite (and (distinct ((_ extract 7 7) C1) (_ bv0 1)) true) (_ bv7 32) (ite (and (distinct ((_ extract 6 6) C1) (_ bv0 1)) true) (_ bv6 32) (_ bv5 32)))))
 (let ((?x2649 (ite (and (distinct ((_ extract 9 8) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 9 9) C1) (_ bv0 1)) true) (_ bv9 32) (_ bv8 32)) ?x2233)))
 (let ((?x3624 (ite (and (distinct ((_ extract 2 2) C2) (_ bv0 1)) true) (_ bv2 32) (ite (and (distinct ((_ extract 1 1) C2) (_ bv0 1)) true) (_ bv1 32) (_ bv0 32)))))
 (let ((?x5524 (ite (and (distinct ((_ extract 5 5) C2) (_ bv0 1)) true) (_ bv5 32) (ite (and (distinct ((_ extract 4 4) C2) (_ bv0 1)) true) (_ bv4 32) (_ bv3 32)))))
 (let ((?x5600 (ite (and (distinct ((_ extract 8 8) C2) (_ bv0 1)) true) (_ bv8 32) (ite (and (distinct ((_ extract 7 7) C2) (_ bv0 1)) true) (_ bv7 32) (_ bv6 32)))))
 (let ((?x5848 (ite (and (distinct ((_ extract 10 9) C2) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) C2) (_ bv0 1)) true) (_ bv10 32) (_ bv9 32)) ?x5600)))
 (let ((?x4972 (ite (and (distinct ((_ extract 10 6) C2) (_ bv0 5)) true) ?x5848 (ite (and (distinct ((_ extract 5 3) C2) (_ bv0 3)) true) ?x5524 ?x3624))))
 (and (and (and (distinct C1 (_ bv0 10)) true) (= (bvand C1 (bvsub C1 (_ bv1 10))) (_ bv0 10))) (and (and (distinct C2 (_ bv0 11)) true) (= (bvand C2 (bvsub C2 (_ bv1 11))) (_ bv0 11))) (bvslt ?x4972 (ite (and (distinct ((_ extract 9 5) C1) (_ bv0 5)) true) ?x2649 ?x1203)) (not (bvult ?x2560 (_ bv10 10))))))))))))))))))))))))
(check-sat)
