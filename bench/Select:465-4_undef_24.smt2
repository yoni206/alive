(set-info :status unknown)
(declare-fun C2 () (_ BitVec 11))
(declare-fun C1 () (_ BitVec 29))
(assert
 (let ((?x11808 (ite (and (distinct ((_ extract 2 2) C2) (_ bv0 1)) true) (_ bv2 29) (ite (and (distinct ((_ extract 1 1) C2) (_ bv0 1)) true) (_ bv1 29) (_ bv0 29)))))
 (let ((?x6818 (ite (and (distinct ((_ extract 5 5) C2) (_ bv0 1)) true) (_ bv5 29) (ite (and (distinct ((_ extract 4 4) C2) (_ bv0 1)) true) (_ bv4 29) (_ bv3 29)))))
 (let ((?x13713 (ite (and (distinct ((_ extract 8 8) C2) (_ bv0 1)) true) (_ bv8 29) (ite (and (distinct ((_ extract 7 7) C2) (_ bv0 1)) true) (_ bv7 29) (_ bv6 29)))))
 (let ((?x7948 (ite (and (distinct ((_ extract 10 9) C2) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) C2) (_ bv0 1)) true) (_ bv10 29) (_ bv9 29)) ?x13713)))
 (let ((?x1246 (ite (and (distinct ((_ extract 10 6) C2) (_ bv0 5)) true) ?x7948 (ite (and (distinct ((_ extract 5 3) C2) (_ bv0 3)) true) ?x6818 ?x11808))))
 (let ((?x5213 (ite (and (distinct ((_ extract 3 2) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 3 3) C1) (_ bv0 1)) true) (_ bv3 29) (_ bv2 29)) (ite (and (distinct ((_ extract 1 1) C1) (_ bv0 1)) true) (_ bv1 29) (_ bv0 29)))))
 (let ((?x3766 (ite (and (distinct ((_ extract 7 6) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 7 7) C1) (_ bv0 1)) true) (_ bv7 29) (_ bv6 29)) (ite (and (distinct ((_ extract 5 5) C1) (_ bv0 1)) true) (_ bv5 29) (_ bv4 29)))))
 (let ((?x4070 (ite (and (distinct ((_ extract 11 10) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 11 11) C1) (_ bv0 1)) true) (_ bv11 29) (_ bv10 29)) (ite (and (distinct ((_ extract 9 9) C1) (_ bv0 1)) true) (_ bv9 29) (_ bv8 29)))))
 (let ((?x14932 (ite (and (distinct ((_ extract 14 14) C1) (_ bv0 1)) true) (_ bv14 29) (ite (and (distinct ((_ extract 13 13) C1) (_ bv0 1)) true) (_ bv13 29) (_ bv12 29)))))
 (let ((?x8546 (ite (and (distinct ((_ extract 14 8) C1) (_ bv0 7)) true) (ite (and (distinct ((_ extract 14 12) C1) (_ bv0 3)) true) ?x14932 ?x4070) (ite (and (distinct ((_ extract 7 4) C1) (_ bv0 4)) true) ?x3766 ?x5213))))
 (let ((?x19802 (ite (and (distinct ((_ extract 18 17) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 18 18) C1) (_ bv0 1)) true) (_ bv18 29) (_ bv17 29)) (ite (and (distinct ((_ extract 16 16) C1) (_ bv0 1)) true) (_ bv16 29) (_ bv15 29)))))
 (let ((?x5947 (ite (and (distinct ((_ extract 21 21) C1) (_ bv0 1)) true) (_ bv21 29) (ite (and (distinct ((_ extract 20 20) C1) (_ bv0 1)) true) (_ bv20 29) (_ bv19 29)))))
 (let ((?x25100 (ite (and (distinct ((_ extract 25 24) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 25 25) C1) (_ bv0 1)) true) (_ bv25 29) (_ bv24 29)) (ite (and (distinct ((_ extract 23 23) C1) (_ bv0 1)) true) (_ bv23 29) (_ bv22 29)))))
 (let ((?x494 (ite (and (distinct ((_ extract 28 28) C1) (_ bv0 1)) true) (_ bv28 29) (ite (and (distinct ((_ extract 27 27) C1) (_ bv0 1)) true) (_ bv27 29) (_ bv26 29)))))
 (let ((?x11958 (ite (and (distinct ((_ extract 28 22) C1) (_ bv0 7)) true) (ite (and (distinct ((_ extract 28 26) C1) (_ bv0 3)) true) ?x494 ?x25100) (ite (and (distinct ((_ extract 21 19) C1) (_ bv0 3)) true) ?x5947 ?x19802))))
 (let ((?x2271 (bvsub (ite (and (distinct ((_ extract 28 15) C1) (_ bv0 14)) true) ?x11958 ?x8546) ?x1246)))
 (let ((?x14122 (ite (and (distinct ((_ extract 3 2) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 3 3) C1) (_ bv0 1)) true) (_ bv3 32) (_ bv2 32)) (ite (and (distinct ((_ extract 1 1) C1) (_ bv0 1)) true) (_ bv1 32) (_ bv0 32)))))
 (let ((?x5297 (ite (and (distinct ((_ extract 7 6) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 7 7) C1) (_ bv0 1)) true) (_ bv7 32) (_ bv6 32)) (ite (and (distinct ((_ extract 5 5) C1) (_ bv0 1)) true) (_ bv5 32) (_ bv4 32)))))
 (let ((?x12226 (ite (and (distinct ((_ extract 11 10) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 11 11) C1) (_ bv0 1)) true) (_ bv11 32) (_ bv10 32)) (ite (and (distinct ((_ extract 9 9) C1) (_ bv0 1)) true) (_ bv9 32) (_ bv8 32)))))
 (let ((?x11867 (ite (and (distinct ((_ extract 14 14) C1) (_ bv0 1)) true) (_ bv14 32) (ite (and (distinct ((_ extract 13 13) C1) (_ bv0 1)) true) (_ bv13 32) (_ bv12 32)))))
 (let ((?x7224 (ite (and (distinct ((_ extract 14 8) C1) (_ bv0 7)) true) (ite (and (distinct ((_ extract 14 12) C1) (_ bv0 3)) true) ?x11867 ?x12226) (ite (and (distinct ((_ extract 7 4) C1) (_ bv0 4)) true) ?x5297 ?x14122))))
 (let ((?x3439 (ite (and (distinct ((_ extract 18 17) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 18 18) C1) (_ bv0 1)) true) (_ bv18 32) (_ bv17 32)) (ite (and (distinct ((_ extract 16 16) C1) (_ bv0 1)) true) (_ bv16 32) (_ bv15 32)))))
 (let ((?x3488 (ite (and (distinct ((_ extract 21 21) C1) (_ bv0 1)) true) (_ bv21 32) (ite (and (distinct ((_ extract 20 20) C1) (_ bv0 1)) true) (_ bv20 32) (_ bv19 32)))))
 (let ((?x24468 (ite (and (distinct ((_ extract 25 24) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 25 25) C1) (_ bv0 1)) true) (_ bv25 32) (_ bv24 32)) (ite (and (distinct ((_ extract 23 23) C1) (_ bv0 1)) true) (_ bv23 32) (_ bv22 32)))))
 (let ((?x21527 (ite (and (distinct ((_ extract 28 28) C1) (_ bv0 1)) true) (_ bv28 32) (ite (and (distinct ((_ extract 27 27) C1) (_ bv0 1)) true) (_ bv27 32) (_ bv26 32)))))
 (let ((?x8537 (ite (and (distinct ((_ extract 28 22) C1) (_ bv0 7)) true) (ite (and (distinct ((_ extract 28 26) C1) (_ bv0 3)) true) ?x21527 ?x24468) (ite (and (distinct ((_ extract 21 19) C1) (_ bv0 3)) true) ?x3488 ?x3439))))
 (let ((?x8039 (ite (and (distinct ((_ extract 2 2) C2) (_ bv0 1)) true) (_ bv2 32) (ite (and (distinct ((_ extract 1 1) C2) (_ bv0 1)) true) (_ bv1 32) (_ bv0 32)))))
 (let ((?x14290 (ite (and (distinct ((_ extract 5 5) C2) (_ bv0 1)) true) (_ bv5 32) (ite (and (distinct ((_ extract 4 4) C2) (_ bv0 1)) true) (_ bv4 32) (_ bv3 32)))))
 (let ((?x23356 (ite (and (distinct ((_ extract 8 8) C2) (_ bv0 1)) true) (_ bv8 32) (ite (and (distinct ((_ extract 7 7) C2) (_ bv0 1)) true) (_ bv7 32) (_ bv6 32)))))
 (let ((?x12508 (ite (and (distinct ((_ extract 10 9) C2) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) C2) (_ bv0 1)) true) (_ bv10 32) (_ bv9 32)) ?x23356)))
 (let ((?x2724 (ite (and (distinct ((_ extract 10 6) C2) (_ bv0 5)) true) ?x12508 (ite (and (distinct ((_ extract 5 3) C2) (_ bv0 3)) true) ?x14290 ?x8039))))
 (and (and (and (distinct C1 (_ bv0 29)) true) (= (bvand C1 (bvsub C1 (_ bv1 29))) (_ bv0 29))) (and (and (distinct C2 (_ bv0 11)) true) (= (bvand C2 (bvsub C2 (_ bv1 11))) (_ bv0 11))) (bvslt ?x2724 (ite (and (distinct ((_ extract 28 15) C1) (_ bv0 14)) true) ?x8537 ?x7224)) (not (bvult ?x2271 (_ bv29 29))))))))))))))))))))))))))))))))))))
(check-sat)
