(set-info :status unknown)
(declare-fun mem0 () (_ BitVec 8))
(declare-fun |ana_MaskedValueIsZero(%B, ((1 << (width(C2) - countLeadingZeros(((C2 - 1) ^ C2)))) - 1))| () (_ BitVec 1))
(declare-fun C2 () (_ BitVec 4))
(declare-fun C1 () (_ BitVec 4))
(declare-fun %B () (_ BitVec 4))
(assert
 (let (($x1957 (= |ana_MaskedValueIsZero(%B, ((1 << (width(C2) - countLeadingZeros(((C2 - 1) ^ C2)))) - 1))| (_ bv1 1))))
 (let ((?x2925 (bvor (bvsub C2 (_ bv1 4)) C2)))
 (let (($x1167 (and (and (distinct ?x2925 (_ bv0 4)) true) (= (bvand (bvadd ?x2925 (_ bv1 4)) ?x2925) (_ bv0 4)) $x1957)))
 (let (($x4767 (or (= (bvand (bvadd C2 (_ bv1 4)) (bvsub (bvadd C2 (_ bv1 4)) (_ bv1 4))) (_ bv0 4)) $x1167)))
 (let ((?x4280 (ite (= ((_ extract 1 1) (bvxor (bvsub C2 (_ bv1 4)) C2)) (_ bv1 1)) (_ bv2 4) (ite (= ((_ extract 0 0) (bvxor (bvsub C2 (_ bv1 4)) C2)) (_ bv1 1)) (_ bv3 4) (_ bv4 4)))))
 (let ((?x340 (ite (= ((_ extract 3 3) (bvxor (bvsub C2 (_ bv1 4)) C2)) (_ bv1 1)) (_ bv0 4) (ite (= ((_ extract 2 2) (bvxor (bvsub C2 (_ bv1 4)) C2)) (_ bv1 1)) (_ bv1 4) ?x4280))))
 (let (($x14566 (=> $x1957 (= (bvand %B (bvsub (bvshl (_ bv1 4) (bvsub (_ bv4 4) ?x340)) (_ bv1 4))) (_ bv0 4)))))
 (and $x14566 (= (bvand C1 C2) C2) $x4767 (and (distinct mem0 mem0) true))))))))))
(check-sat)
