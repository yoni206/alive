(set-info :status unknown)
(declare-fun mem0 () (_ BitVec 8))
(declare-fun %x () (_ BitVec 17))
(declare-fun %p1 () (_ BitVec 64))
(declare-fun idx () (_ BitVec 64))
(declare-fun |ana_equivalentAddressValues(%p1, %p2)| () (_ BitVec 1))
(declare-fun %p2 () (_ BitVec 64))
(assert
 (let ((?x14815 (concat ((_ extract 7 1) mem0) ((_ extract 0 0) %x))))
 (let ((?x11318 (ite (and (and (distinct %p1 (_ bv0 64)) true) (or true true) (= idx %p1)) ?x14815 mem0)))
 (let ((?x12216 ((_ extract 8 1) %x)))
 (let (($x3677 (or true true)))
 (let (($x9014 (and (distinct %p1 (_ bv0 64)) true)))
 (let ((?x13248 (ite (and $x9014 $x3677 (= idx (bvadd (bvadd %p1 (_ bv1 64)) (_ bv0 64)))) ?x12216 ?x11318)))
 (let ((?x13453 ((_ extract 16 9) %x)))
 (let ((?x24565 (ite (and $x9014 $x3677 (= idx (bvadd (bvadd %p1 (_ bv1 64)) (_ bv1 64)))) ?x13453 ?x13248)))
 (let (($x17196 (= |ana_equivalentAddressValues(%p1, %p2)| (_ bv1 1))))
 (and (=> $x17196 (= %p1 %p2)) $x17196 (and (distinct ?x24565 ?x24565) true))))))))))))
(check-sat)
