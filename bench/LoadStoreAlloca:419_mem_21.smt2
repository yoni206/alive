(set-info :status unknown)
(declare-fun mem0 () (_ BitVec 8))
(declare-fun %x () (_ BitVec 22))
(declare-fun %p1 () (_ BitVec 64))
(declare-fun idx () (_ BitVec 64))
(declare-fun |ana_equivalentAddressValues(%p1, %p2)| () (_ BitVec 1))
(declare-fun %p2 () (_ BitVec 64))
(assert
 (let ((?x17196 (concat ((_ extract 7 6) mem0) ((_ extract 5 0) %x))))
 (let ((?x407 (ite (and (and (distinct %p1 (_ bv0 64)) true) (or true true) (= idx %p1)) ?x17196 mem0)))
 (let ((?x2571 ((_ extract 13 6) %x)))
 (let (($x431 (or true true)))
 (let (($x11745 (and (distinct %p1 (_ bv0 64)) true)))
 (let ((?x6201 (ite (and $x11745 $x431 (= idx (bvadd (bvadd %p1 (_ bv1 64)) (_ bv0 64)))) ?x2571 ?x407)))
 (let ((?x3562 ((_ extract 21 14) %x)))
 (let ((?x17966 (ite (and $x11745 $x431 (= idx (bvadd (bvadd %p1 (_ bv1 64)) (_ bv1 64)))) ?x3562 ?x6201)))
 (let (($x6835 (= |ana_equivalentAddressValues(%p1, %p2)| (_ bv1 1))))
 (and (=> $x6835 (= %p1 %p2)) $x6835 (and (distinct ?x17966 ?x17966) true))))))))))))
(check-sat)
