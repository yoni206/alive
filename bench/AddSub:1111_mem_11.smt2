(set-info :status unknown)
(declare-fun mem0 () (_ BitVec 8))
(declare-fun C2 () (_ BitVec 17))
(declare-fun C1 () (_ BitVec 17))
(assert
 (let ((?x5422 (ite (and (distinct ((_ extract 2 2) C2) (_ bv0 1)) true) (_ bv2 17) (ite (and (distinct ((_ extract 1 1) C2) (_ bv0 1)) true) (_ bv1 17) (_ bv0 17)))))
 (let ((?x566 (ite (and (distinct ((_ extract 4 3) C2) (_ bv0 2)) true) (ite (and (distinct ((_ extract 4 4) C2) (_ bv0 1)) true) (_ bv4 17) (_ bv3 17)) ?x5422)))
 (let ((?x2760 (ite (and (distinct ((_ extract 8 7) C2) (_ bv0 2)) true) (ite (and (distinct ((_ extract 8 8) C2) (_ bv0 1)) true) (_ bv8 17) (_ bv7 17)) (ite (and (distinct ((_ extract 6 6) C2) (_ bv0 1)) true) (_ bv6 17) (_ bv5 17)))))
 (let ((?x2209 (ite (and (distinct ((_ extract 12 11) C2) (_ bv0 2)) true) (ite (and (distinct ((_ extract 12 12) C2) (_ bv0 1)) true) (_ bv12 17) (_ bv11 17)) (ite (and (distinct ((_ extract 10 10) C2) (_ bv0 1)) true) (_ bv10 17) (_ bv9 17)))))
 (let ((?x4802 (ite (and (distinct ((_ extract 16 15) C2) (_ bv0 2)) true) (ite (and (distinct ((_ extract 16 16) C2) (_ bv0 1)) true) (_ bv16 17) (_ bv15 17)) (ite (and (distinct ((_ extract 14 14) C2) (_ bv0 1)) true) (_ bv14 17) (_ bv13 17)))))
 (let ((?x3870 (ite (and (distinct ((_ extract 16 9) C2) (_ bv0 8)) true) (ite (and (distinct ((_ extract 16 13) C2) (_ bv0 4)) true) ?x4802 ?x2209) (ite (and (distinct ((_ extract 8 5) C2) (_ bv0 4)) true) ?x2760 ?x566))))
 (let ((?x2618 (bvsub (_ bv17 17) (bvsub (bvsub (_ bv17 17) ?x3870) (_ bv1 17)))))
 (and (= C1 (bvneg C2)) (and (and (distinct C2 (_ bv0 17)) true) (= (bvand C2 (bvsub C2 (_ bv1 17))) (_ bv0 17))) (not (= (bvand C2 (bvshl (_ bv131071 17) ?x2618)) (_ bv0 17))) (and (distinct mem0 mem0) true))))))))))
(check-sat)
