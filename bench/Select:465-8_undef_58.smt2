(set-info :status unknown)
(declare-fun C2 () (_ BitVec 11))
(declare-fun C1 () (_ BitVec 59))
(assert
 (let ((?x1308 (ite (and (distinct ((_ extract 2 2) C2) (_ bv0 1)) true) (_ bv2 59) (ite (and (distinct ((_ extract 1 1) C2) (_ bv0 1)) true) (_ bv1 59) (_ bv0 59)))))
 (let ((?x6141 (ite (and (distinct ((_ extract 5 5) C2) (_ bv0 1)) true) (_ bv5 59) (ite (and (distinct ((_ extract 4 4) C2) (_ bv0 1)) true) (_ bv4 59) (_ bv3 59)))))
 (let ((?x5473 (ite (and (distinct ((_ extract 8 8) C2) (_ bv0 1)) true) (_ bv8 59) (ite (and (distinct ((_ extract 7 7) C2) (_ bv0 1)) true) (_ bv7 59) (_ bv6 59)))))
 (let ((?x4974 (ite (and (distinct ((_ extract 10 9) C2) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) C2) (_ bv0 1)) true) (_ bv10 59) (_ bv9 59)) ?x5473)))
 (let ((?x2026 (ite (and (distinct ((_ extract 10 6) C2) (_ bv0 5)) true) ?x4974 (ite (and (distinct ((_ extract 5 3) C2) (_ bv0 3)) true) ?x6141 ?x1308))))
 (let ((?x2607 (ite (and (distinct ((_ extract 3 2) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 3 3) C1) (_ bv0 1)) true) (_ bv3 59) (_ bv2 59)) (ite (and (distinct ((_ extract 1 1) C1) (_ bv0 1)) true) (_ bv1 59) (_ bv0 59)))))
 (let ((?x1216 (ite (and (distinct ((_ extract 7 6) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 7 7) C1) (_ bv0 1)) true) (_ bv7 59) (_ bv6 59)) (ite (and (distinct ((_ extract 5 5) C1) (_ bv0 1)) true) (_ bv5 59) (_ bv4 59)))))
 (let ((?x5367 (ite (and (distinct ((_ extract 11 10) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 11 11) C1) (_ bv0 1)) true) (_ bv11 59) (_ bv10 59)) (ite (and (distinct ((_ extract 9 9) C1) (_ bv0 1)) true) (_ bv9 59) (_ bv8 59)))))
 (let ((?x5824 (ite (and (distinct ((_ extract 14 14) C1) (_ bv0 1)) true) (_ bv14 59) (ite (and (distinct ((_ extract 13 13) C1) (_ bv0 1)) true) (_ bv13 59) (_ bv12 59)))))
 (let ((?x4323 (ite (and (distinct ((_ extract 14 8) C1) (_ bv0 7)) true) (ite (and (distinct ((_ extract 14 12) C1) (_ bv0 3)) true) ?x5824 ?x5367) (ite (and (distinct ((_ extract 7 4) C1) (_ bv0 4)) true) ?x1216 ?x2607))))
 (let ((?x6608 (ite (and (distinct ((_ extract 18 17) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 18 18) C1) (_ bv0 1)) true) (_ bv18 59) (_ bv17 59)) (ite (and (distinct ((_ extract 16 16) C1) (_ bv0 1)) true) (_ bv16 59) (_ bv15 59)))))
 (let ((?x5035 (ite (and (distinct ((_ extract 22 21) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 22 22) C1) (_ bv0 1)) true) (_ bv22 59) (_ bv21 59)) (ite (and (distinct ((_ extract 20 20) C1) (_ bv0 1)) true) (_ bv20 59) (_ bv19 59)))))
 (let ((?x2887 (ite (and (distinct ((_ extract 26 25) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 26 26) C1) (_ bv0 1)) true) (_ bv26 59) (_ bv25 59)) (ite (and (distinct ((_ extract 24 24) C1) (_ bv0 1)) true) (_ bv24 59) (_ bv23 59)))))
 (let ((?x4103 (ite (and (distinct ((_ extract 29 29) C1) (_ bv0 1)) true) (_ bv29 59) (ite (and (distinct ((_ extract 28 28) C1) (_ bv0 1)) true) (_ bv28 59) (_ bv27 59)))))
 (let ((?x5865 (ite (and (distinct ((_ extract 29 23) C1) (_ bv0 7)) true) (ite (and (distinct ((_ extract 29 27) C1) (_ bv0 3)) true) ?x4103 ?x2887) (ite (and (distinct ((_ extract 22 19) C1) (_ bv0 4)) true) ?x5035 ?x6608))))
 (let ((?x3867 (ite (and (distinct ((_ extract 33 32) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 33 33) C1) (_ bv0 1)) true) (_ bv33 59) (_ bv32 59)) (ite (and (distinct ((_ extract 31 31) C1) (_ bv0 1)) true) (_ bv31 59) (_ bv30 59)))))
 (let ((?x3107 (ite (and (distinct ((_ extract 37 36) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 37 37) C1) (_ bv0 1)) true) (_ bv37 59) (_ bv36 59)) (ite (and (distinct ((_ extract 35 35) C1) (_ bv0 1)) true) (_ bv35 59) (_ bv34 59)))))
 (let ((?x2223 (ite (and (distinct ((_ extract 41 40) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 41 41) C1) (_ bv0 1)) true) (_ bv41 59) (_ bv40 59)) (ite (and (distinct ((_ extract 39 39) C1) (_ bv0 1)) true) (_ bv39 59) (_ bv38 59)))))
 (let ((?x3200 (ite (and (distinct ((_ extract 44 44) C1) (_ bv0 1)) true) (_ bv44 59) (ite (and (distinct ((_ extract 43 43) C1) (_ bv0 1)) true) (_ bv43 59) (_ bv42 59)))))
 (let ((?x3914 (ite (and (distinct ((_ extract 44 38) C1) (_ bv0 7)) true) (ite (and (distinct ((_ extract 44 42) C1) (_ bv0 3)) true) ?x3200 ?x2223) (ite (and (distinct ((_ extract 37 34) C1) (_ bv0 4)) true) ?x3107 ?x3867))))
 (let ((?x4218 (ite (and (distinct ((_ extract 48 47) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 48 48) C1) (_ bv0 1)) true) (_ bv48 59) (_ bv47 59)) (ite (and (distinct ((_ extract 46 46) C1) (_ bv0 1)) true) (_ bv46 59) (_ bv45 59)))))
 (let ((?x3611 (ite (and (distinct ((_ extract 51 51) C1) (_ bv0 1)) true) (_ bv51 59) (ite (and (distinct ((_ extract 50 50) C1) (_ bv0 1)) true) (_ bv50 59) (_ bv49 59)))))
 (let ((?x4457 (ite (and (distinct ((_ extract 55 54) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 55 55) C1) (_ bv0 1)) true) (_ bv55 59) (_ bv54 59)) (ite (and (distinct ((_ extract 53 53) C1) (_ bv0 1)) true) (_ bv53 59) (_ bv52 59)))))
 (let ((?x5493 (ite (and (distinct ((_ extract 58 58) C1) (_ bv0 1)) true) (_ bv58 59) (ite (and (distinct ((_ extract 57 57) C1) (_ bv0 1)) true) (_ bv57 59) (_ bv56 59)))))
 (let ((?x5582 (ite (and (distinct ((_ extract 58 52) C1) (_ bv0 7)) true) (ite (and (distinct ((_ extract 58 56) C1) (_ bv0 3)) true) ?x5493 ?x4457) (ite (and (distinct ((_ extract 51 49) C1) (_ bv0 3)) true) ?x3611 ?x4218))))
 (let ((?x2392 (ite (and (distinct ((_ extract 58 30) C1) (_ bv0 29)) true) (ite (and (distinct ((_ extract 58 45) C1) (_ bv0 14)) true) ?x5582 ?x3914) (ite (and (distinct ((_ extract 29 15) C1) (_ bv0 15)) true) ?x5865 ?x4323))))
 (let ((?x6414 (bvsub ?x2392 ?x2026)))
 (let ((?x5059 (ite (and (distinct ((_ extract 3 2) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 3 3) C1) (_ bv0 1)) true) (_ bv3 32) (_ bv2 32)) (ite (and (distinct ((_ extract 1 1) C1) (_ bv0 1)) true) (_ bv1 32) (_ bv0 32)))))
 (let ((?x3188 (ite (and (distinct ((_ extract 7 6) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 7 7) C1) (_ bv0 1)) true) (_ bv7 32) (_ bv6 32)) (ite (and (distinct ((_ extract 5 5) C1) (_ bv0 1)) true) (_ bv5 32) (_ bv4 32)))))
 (let ((?x5143 (ite (and (distinct ((_ extract 11 10) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 11 11) C1) (_ bv0 1)) true) (_ bv11 32) (_ bv10 32)) (ite (and (distinct ((_ extract 9 9) C1) (_ bv0 1)) true) (_ bv9 32) (_ bv8 32)))))
 (let ((?x6167 (ite (and (distinct ((_ extract 14 14) C1) (_ bv0 1)) true) (_ bv14 32) (ite (and (distinct ((_ extract 13 13) C1) (_ bv0 1)) true) (_ bv13 32) (_ bv12 32)))))
 (let ((?x3077 (ite (and (distinct ((_ extract 14 8) C1) (_ bv0 7)) true) (ite (and (distinct ((_ extract 14 12) C1) (_ bv0 3)) true) ?x6167 ?x5143) (ite (and (distinct ((_ extract 7 4) C1) (_ bv0 4)) true) ?x3188 ?x5059))))
 (let ((?x4095 (ite (and (distinct ((_ extract 18 17) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 18 18) C1) (_ bv0 1)) true) (_ bv18 32) (_ bv17 32)) (ite (and (distinct ((_ extract 16 16) C1) (_ bv0 1)) true) (_ bv16 32) (_ bv15 32)))))
 (let ((?x6143 (ite (and (distinct ((_ extract 22 21) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 22 22) C1) (_ bv0 1)) true) (_ bv22 32) (_ bv21 32)) (ite (and (distinct ((_ extract 20 20) C1) (_ bv0 1)) true) (_ bv20 32) (_ bv19 32)))))
 (let ((?x4106 (ite (and (distinct ((_ extract 26 25) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 26 26) C1) (_ bv0 1)) true) (_ bv26 32) (_ bv25 32)) (ite (and (distinct ((_ extract 24 24) C1) (_ bv0 1)) true) (_ bv24 32) (_ bv23 32)))))
 (let ((?x4084 (ite (and (distinct ((_ extract 29 29) C1) (_ bv0 1)) true) (_ bv29 32) (ite (and (distinct ((_ extract 28 28) C1) (_ bv0 1)) true) (_ bv28 32) (_ bv27 32)))))
 (let ((?x1628 (ite (and (distinct ((_ extract 29 23) C1) (_ bv0 7)) true) (ite (and (distinct ((_ extract 29 27) C1) (_ bv0 3)) true) ?x4084 ?x4106) (ite (and (distinct ((_ extract 22 19) C1) (_ bv0 4)) true) ?x6143 ?x4095))))
 (let ((?x5618 (ite (and (distinct ((_ extract 33 32) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 33 33) C1) (_ bv0 1)) true) (_ bv33 32) (_ bv32 32)) (ite (and (distinct ((_ extract 31 31) C1) (_ bv0 1)) true) (_ bv31 32) (_ bv30 32)))))
 (let ((?x4276 (ite (and (distinct ((_ extract 37 36) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 37 37) C1) (_ bv0 1)) true) (_ bv37 32) (_ bv36 32)) (ite (and (distinct ((_ extract 35 35) C1) (_ bv0 1)) true) (_ bv35 32) (_ bv34 32)))))
 (let ((?x3783 (ite (and (distinct ((_ extract 41 40) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 41 41) C1) (_ bv0 1)) true) (_ bv41 32) (_ bv40 32)) (ite (and (distinct ((_ extract 39 39) C1) (_ bv0 1)) true) (_ bv39 32) (_ bv38 32)))))
 (let ((?x3310 (ite (and (distinct ((_ extract 44 44) C1) (_ bv0 1)) true) (_ bv44 32) (ite (and (distinct ((_ extract 43 43) C1) (_ bv0 1)) true) (_ bv43 32) (_ bv42 32)))))
 (let ((?x6675 (ite (and (distinct ((_ extract 44 38) C1) (_ bv0 7)) true) (ite (and (distinct ((_ extract 44 42) C1) (_ bv0 3)) true) ?x3310 ?x3783) (ite (and (distinct ((_ extract 37 34) C1) (_ bv0 4)) true) ?x4276 ?x5618))))
 (let ((?x3066 (ite (and (distinct ((_ extract 48 47) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 48 48) C1) (_ bv0 1)) true) (_ bv48 32) (_ bv47 32)) (ite (and (distinct ((_ extract 46 46) C1) (_ bv0 1)) true) (_ bv46 32) (_ bv45 32)))))
 (let ((?x1290 (ite (and (distinct ((_ extract 51 51) C1) (_ bv0 1)) true) (_ bv51 32) (ite (and (distinct ((_ extract 50 50) C1) (_ bv0 1)) true) (_ bv50 32) (_ bv49 32)))))
 (let ((?x2248 (ite (and (distinct ((_ extract 55 54) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 55 55) C1) (_ bv0 1)) true) (_ bv55 32) (_ bv54 32)) (ite (and (distinct ((_ extract 53 53) C1) (_ bv0 1)) true) (_ bv53 32) (_ bv52 32)))))
 (let ((?x1195 (ite (and (distinct ((_ extract 58 58) C1) (_ bv0 1)) true) (_ bv58 32) (ite (and (distinct ((_ extract 57 57) C1) (_ bv0 1)) true) (_ bv57 32) (_ bv56 32)))))
 (let ((?x2711 (ite (and (distinct ((_ extract 58 52) C1) (_ bv0 7)) true) (ite (and (distinct ((_ extract 58 56) C1) (_ bv0 3)) true) ?x1195 ?x2248) (ite (and (distinct ((_ extract 51 49) C1) (_ bv0 3)) true) ?x1290 ?x3066))))
 (let ((?x2340 (ite (and (distinct ((_ extract 58 30) C1) (_ bv0 29)) true) (ite (and (distinct ((_ extract 58 45) C1) (_ bv0 14)) true) ?x2711 ?x6675) (ite (and (distinct ((_ extract 29 15) C1) (_ bv0 15)) true) ?x1628 ?x3077))))
 (let ((?x4227 (ite (and (distinct ((_ extract 2 2) C2) (_ bv0 1)) true) (_ bv2 32) (ite (and (distinct ((_ extract 1 1) C2) (_ bv0 1)) true) (_ bv1 32) (_ bv0 32)))))
 (let ((?x4915 (ite (and (distinct ((_ extract 5 5) C2) (_ bv0 1)) true) (_ bv5 32) (ite (and (distinct ((_ extract 4 4) C2) (_ bv0 1)) true) (_ bv4 32) (_ bv3 32)))))
 (let ((?x5462 (ite (and (distinct ((_ extract 8 8) C2) (_ bv0 1)) true) (_ bv8 32) (ite (and (distinct ((_ extract 7 7) C2) (_ bv0 1)) true) (_ bv7 32) (_ bv6 32)))))
 (let ((?x2581 (ite (and (distinct ((_ extract 10 9) C2) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) C2) (_ bv0 1)) true) (_ bv10 32) (_ bv9 32)) ?x5462)))
 (let ((?x3937 (ite (and (distinct ((_ extract 10 6) C2) (_ bv0 5)) true) ?x2581 (ite (and (distinct ((_ extract 5 3) C2) (_ bv0 3)) true) ?x4915 ?x4227))))
 (and (and (and (distinct C1 (_ bv0 59)) true) (= (bvand C1 (bvsub C1 (_ bv1 59))) (_ bv0 59))) (and (and (distinct C2 (_ bv0 11)) true) (= (bvand C2 (bvsub C2 (_ bv1 11))) (_ bv0 11))) (bvslt ?x3937 ?x2340) (not (bvult ?x6414 (_ bv59 59))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
