(set-info :status unknown)
(declare-fun C3 () (_ BitVec 11))
(declare-fun C2 () (_ BitVec 11))
(declare-fun C () (_ BitVec 15))
(assert
 (let ((?x2392 (ite (and (distinct ((_ extract 2 2) (bvsub C2 C3)) (_ bv0 1)) true) (_ bv2 11) (ite (and (distinct ((_ extract 1 1) (bvsub C2 C3)) (_ bv0 1)) true) (_ bv1 11) (_ bv0 11)))))
 (let ((?x2390 (ite (and (distinct ((_ extract 5 5) (bvsub C2 C3)) (_ bv0 1)) true) (_ bv5 11) (ite (and (distinct ((_ extract 4 4) (bvsub C2 C3)) (_ bv0 1)) true) (_ bv4 11) (_ bv3 11)))))
 (let ((?x1907 (ite (and (distinct ((_ extract 8 8) (bvsub C2 C3)) (_ bv0 1)) true) (_ bv8 11) (ite (and (distinct ((_ extract 7 7) (bvsub C2 C3)) (_ bv0 1)) true) (_ bv7 11) (_ bv6 11)))))
 (let ((?x1150 (ite (and (distinct ((_ extract 10 9) (bvsub C2 C3)) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) (bvsub C2 C3)) (_ bv0 1)) true) (_ bv10 11) (_ bv9 11)) ?x1907)))
 (let ((?x3533 (ite (and (distinct ((_ extract 10 6) (bvsub C2 C3)) (_ bv0 5)) true) ?x1150 (ite (and (distinct ((_ extract 5 3) (bvsub C2 C3)) (_ bv0 3)) true) ?x2390 ?x2392))))
 (let ((?x1163 (ite (and (distinct ((_ extract 3 2) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 3 3) C) (_ bv0 1)) true) (_ bv3 11) (_ bv2 11)) (ite (and (distinct ((_ extract 1 1) C) (_ bv0 1)) true) (_ bv1 11) (_ bv0 11)))))
 (let ((?x4374 (ite (and (distinct ((_ extract 7 6) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 7 7) C) (_ bv0 1)) true) (_ bv7 11) (_ bv6 11)) (ite (and (distinct ((_ extract 5 5) C) (_ bv0 1)) true) (_ bv5 11) (_ bv4 11)))))
 (let ((?x2519 (ite (and (distinct ((_ extract 11 10) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 11 11) C) (_ bv0 1)) true) (_ bv11 11) (_ bv10 11)) (ite (and (distinct ((_ extract 9 9) C) (_ bv0 1)) true) (_ bv9 11) (_ bv8 11)))))
 (let ((?x5075 (ite (and (distinct ((_ extract 14 14) C) (_ bv0 1)) true) (_ bv14 11) (ite (and (distinct ((_ extract 13 13) C) (_ bv0 1)) true) (_ bv13 11) (_ bv12 11)))))
 (let ((?x1704 (ite (and (distinct ((_ extract 14 8) C) (_ bv0 7)) true) (ite (and (distinct ((_ extract 14 12) C) (_ bv0 3)) true) ?x5075 ?x2519) (ite (and (distinct ((_ extract 7 4) C) (_ bv0 4)) true) ?x4374 ?x1163))))
 (let ((?x3904 (bvsub ?x1704 ?x3533)))
 (let ((?x2924 (ite (bvsgt (_ bv0 11) ?x3904) (_ bv0 11) ?x3904)))
 (let ((?x2532 (bvsub ?x3533 ?x1704)))
 (let ((?x2457 (ite (bvsgt (_ bv0 11) ?x2532) (_ bv0 11) ?x2532)))
 (let ((?x1398 (ite (and (distinct ((_ extract 3 2) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 3 3) C) (_ bv0 1)) true) (_ bv3 32) (_ bv2 32)) (ite (and (distinct ((_ extract 1 1) C) (_ bv0 1)) true) (_ bv1 32) (_ bv0 32)))))
 (let ((?x4342 (ite (and (distinct ((_ extract 7 6) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 7 7) C) (_ bv0 1)) true) (_ bv7 32) (_ bv6 32)) (ite (and (distinct ((_ extract 5 5) C) (_ bv0 1)) true) (_ bv5 32) (_ bv4 32)))))
 (let ((?x3822 (ite (and (distinct ((_ extract 11 10) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 11 11) C) (_ bv0 1)) true) (_ bv11 32) (_ bv10 32)) (ite (and (distinct ((_ extract 9 9) C) (_ bv0 1)) true) (_ bv9 32) (_ bv8 32)))))
 (let ((?x2025 (ite (and (distinct ((_ extract 14 14) C) (_ bv0 1)) true) (_ bv14 32) (ite (and (distinct ((_ extract 13 13) C) (_ bv0 1)) true) (_ bv13 32) (_ bv12 32)))))
 (let ((?x7932 (ite (and (distinct ((_ extract 14 8) C) (_ bv0 7)) true) (ite (and (distinct ((_ extract 14 12) C) (_ bv0 3)) true) ?x2025 ?x3822) (ite (and (distinct ((_ extract 7 4) C) (_ bv0 4)) true) ?x4342 ?x1398))))
 (let (($x7034 (and (and (distinct (bvsub C2 C3) (_ bv0 11)) true) (= (bvand (bvsub C2 C3) (bvsub (bvsub C2 C3) (_ bv1 11))) (_ bv0 11)))))
 (and (and (and (distinct C (_ bv0 15)) true) (= (bvand C (bvsub C (_ bv1 15))) (_ bv0 15))) $x7034 (bvslt ?x7932 (_ bv11 32)) (not (and (bvult ?x2457 (_ bv11 11)) (bvult ?x2924 (_ bv11 11))))))))))))))))))))))))))
(check-sat)
