(set-info :status unknown)
(declare-fun mem0 () (_ BitVec 8))
(declare-fun %x () (_ BitVec 58))
(declare-fun %p1 () (_ BitVec 64))
(declare-fun idx () (_ BitVec 64))
(declare-fun |ana_equivalentAddressValues(%p1, %p2)| () (_ BitVec 1))
(declare-fun %p2 () (_ BitVec 64))
(assert
 (let ((?x21475 (concat ((_ extract 7 2) mem0) ((_ extract 1 0) %x))))
 (let ((?x2633 (ite (and (and (distinct %p1 (_ bv0 64)) true) (or true true) (= idx %p1)) ?x21475 mem0)))
 (let ((?x18741 ((_ extract 9 2) %x)))
 (let (($x16547 (or true true)))
 (let (($x1700 (and (distinct %p1 (_ bv0 64)) true)))
 (let ((?x12629 (ite (and $x1700 $x16547 (= idx (bvadd (bvadd %p1 (_ bv1 64)) (_ bv0 64)))) ?x18741 ?x2633)))
 (let ((?x20396 ((_ extract 17 10) %x)))
 (let ((?x21656 (ite (and $x1700 $x16547 (= idx (bvadd (bvadd %p1 (_ bv1 64)) (_ bv1 64)))) ?x20396 ?x12629)))
 (let ((?x12128 ((_ extract 25 18) %x)))
 (let ((?x17348 (ite (and $x1700 $x16547 (= idx (bvadd (bvadd %p1 (_ bv1 64)) (_ bv2 64)))) ?x12128 ?x21656)))
 (let ((?x23974 ((_ extract 33 26) %x)))
 (let ((?x19806 (ite (and $x1700 $x16547 (= idx (bvadd (bvadd %p1 (_ bv1 64)) (_ bv3 64)))) ?x23974 ?x17348)))
 (let ((?x6193 ((_ extract 41 34) %x)))
 (let ((?x4356 (ite (and $x1700 $x16547 (= idx (bvadd (bvadd %p1 (_ bv1 64)) (_ bv4 64)))) ?x6193 ?x19806)))
 (let ((?x14137 ((_ extract 49 42) %x)))
 (let ((?x14877 (ite (and $x1700 $x16547 (= idx (bvadd (bvadd %p1 (_ bv1 64)) (_ bv5 64)))) ?x14137 ?x4356)))
 (let ((?x8765 ((_ extract 57 50) %x)))
 (let ((?x8483 (ite (and $x1700 $x16547 (= idx (bvadd (bvadd %p1 (_ bv1 64)) (_ bv6 64)))) ?x8765 ?x14877)))
 (let (($x11023 (= |ana_equivalentAddressValues(%p1, %p2)| (_ bv1 1))))
 (and (=> $x11023 (= %p1 %p2)) $x11023 (and (distinct ?x8483 ?x8483) true))))))))))))))))))))))
(check-sat)
