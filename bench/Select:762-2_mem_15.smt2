(set-info :status unknown)
(declare-fun mem0 () (_ BitVec 8))
(declare-fun C () (_ BitVec 19))
(declare-fun C3 () (_ BitVec 11))
(declare-fun C2 () (_ BitVec 11))
(assert
 (let ((?x1215 (ite (and (distinct ((_ extract 2 2) C) (_ bv0 1)) true) (_ bv2 32) (ite (and (distinct ((_ extract 1 1) C) (_ bv0 1)) true) (_ bv1 32) (_ bv0 32)))))
 (let ((?x683 (ite (and (distinct ((_ extract 4 3) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 4 4) C) (_ bv0 1)) true) (_ bv4 32) (_ bv3 32)) ?x1215)))
 (let ((?x11340 (ite (and (distinct ((_ extract 7 7) C) (_ bv0 1)) true) (_ bv7 32) (ite (and (distinct ((_ extract 6 6) C) (_ bv0 1)) true) (_ bv6 32) (_ bv5 32)))))
 (let ((?x18411 (ite (and (distinct ((_ extract 9 8) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 9 9) C) (_ bv0 1)) true) (_ bv9 32) (_ bv8 32)) ?x11340)))
 (let ((?x7326 (ite (and (distinct ((_ extract 12 12) C) (_ bv0 1)) true) (_ bv12 32) (ite (and (distinct ((_ extract 11 11) C) (_ bv0 1)) true) (_ bv11 32) (_ bv10 32)))))
 (let ((?x7036 (ite (and (distinct ((_ extract 14 13) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 14 14) C) (_ bv0 1)) true) (_ bv14 32) (_ bv13 32)) ?x7326)))
 (let ((?x3213 (ite (and (distinct ((_ extract 18 17) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 18 18) C) (_ bv0 1)) true) (_ bv18 32) (_ bv17 32)) (ite (and (distinct ((_ extract 16 16) C) (_ bv0 1)) true) (_ bv16 32) (_ bv15 32)))))
 (let ((?x2757 (ite (and (distinct ((_ extract 18 10) C) (_ bv0 9)) true) (ite (and (distinct ((_ extract 18 15) C) (_ bv0 4)) true) ?x3213 ?x7036) (ite (and (distinct ((_ extract 9 5) C) (_ bv0 5)) true) ?x18411 ?x683))))
 (let (($x4640 (and (and (distinct (bvsub C2 C3) (_ bv0 11)) true) (= (bvand (bvsub C2 C3) (bvsub (bvsub C2 C3) (_ bv1 11))) (_ bv0 11)))))
 (and (and (and (distinct C (_ bv0 19)) true) (= (bvand C (bvsub C (_ bv1 19))) (_ bv0 19))) $x4640 (bvslt ?x2757 (_ bv11 32)) (and (distinct mem0 mem0) true))))))))))))
(check-sat)
