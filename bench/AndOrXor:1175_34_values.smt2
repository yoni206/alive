(set-info :source |
 Generated by Alive 0.1
 More info in N. P. Lopes, D. Menendez, S. Nagarakatte, J. Regehr.
 Provably Correct Peephole Optimizations with Alive. In PLDI'15.
|)

(set-info :status unknown)
(declare-fun C () (_ BitVec 35))
(declare-fun %B () (_ BitVec 35))
(declare-fun %A () (_ BitVec 35))
(declare-fun |ana_MaskedValueIsZero(%A, lshr(-1, countLeadingZeros(C)))| () (_ BitVec 1))
(assert
 (let (($x81545 (and (distinct (bvand (bvsub %A %B) C) (bvand (bvsub (_ bv0 35) %B) C)) true)))
 (let (($x83083 (= |ana_MaskedValueIsZero(%A, lshr(-1, countLeadingZeros(C)))| (_ bv1 1))))
 (let ((?x70390 (ite (= ((_ extract 1 1) C) (_ bv1 1)) (_ bv33 35) (ite (= ((_ extract 0 0) C) (_ bv1 1)) (_ bv34 35) (_ bv35 35)))))
 (let ((?x73832 (ite (= ((_ extract 3 3) C) (_ bv1 1)) (_ bv31 35) (ite (= ((_ extract 2 2) C) (_ bv1 1)) (_ bv32 35) ?x70390))))
 (let ((?x67346 (ite (= ((_ extract 5 5) C) (_ bv1 1)) (_ bv29 35) (ite (= ((_ extract 4 4) C) (_ bv1 1)) (_ bv30 35) ?x73832))))
 (let ((?x80757 (ite (= ((_ extract 7 7) C) (_ bv1 1)) (_ bv27 35) (ite (= ((_ extract 6 6) C) (_ bv1 1)) (_ bv28 35) ?x67346))))
 (let ((?x80746 (ite (= ((_ extract 9 9) C) (_ bv1 1)) (_ bv25 35) (ite (= ((_ extract 8 8) C) (_ bv1 1)) (_ bv26 35) ?x80757))))
 (let ((?x75804 (ite (= ((_ extract 11 11) C) (_ bv1 1)) (_ bv23 35) (ite (= ((_ extract 10 10) C) (_ bv1 1)) (_ bv24 35) ?x80746))))
 (let ((?x78336 (ite (= ((_ extract 13 13) C) (_ bv1 1)) (_ bv21 35) (ite (= ((_ extract 12 12) C) (_ bv1 1)) (_ bv22 35) ?x75804))))
 (let ((?x75023 (ite (= ((_ extract 15 15) C) (_ bv1 1)) (_ bv19 35) (ite (= ((_ extract 14 14) C) (_ bv1 1)) (_ bv20 35) ?x78336))))
 (let ((?x79843 (ite (= ((_ extract 17 17) C) (_ bv1 1)) (_ bv17 35) (ite (= ((_ extract 16 16) C) (_ bv1 1)) (_ bv18 35) ?x75023))))
 (let ((?x79486 (ite (= ((_ extract 19 19) C) (_ bv1 1)) (_ bv15 35) (ite (= ((_ extract 18 18) C) (_ bv1 1)) (_ bv16 35) ?x79843))))
 (let ((?x75191 (ite (= ((_ extract 21 21) C) (_ bv1 1)) (_ bv13 35) (ite (= ((_ extract 20 20) C) (_ bv1 1)) (_ bv14 35) ?x79486))))
 (let ((?x64489 (ite (= ((_ extract 23 23) C) (_ bv1 1)) (_ bv11 35) (ite (= ((_ extract 22 22) C) (_ bv1 1)) (_ bv12 35) ?x75191))))
 (let ((?x63472 (ite (= ((_ extract 25 25) C) (_ bv1 1)) (_ bv9 35) (ite (= ((_ extract 24 24) C) (_ bv1 1)) (_ bv10 35) ?x64489))))
 (let ((?x78625 (ite (= ((_ extract 27 27) C) (_ bv1 1)) (_ bv7 35) (ite (= ((_ extract 26 26) C) (_ bv1 1)) (_ bv8 35) ?x63472))))
 (let ((?x58959 (ite (= ((_ extract 29 29) C) (_ bv1 1)) (_ bv5 35) (ite (= ((_ extract 28 28) C) (_ bv1 1)) (_ bv6 35) ?x78625))))
 (let ((?x82646 (ite (= ((_ extract 31 31) C) (_ bv1 1)) (_ bv3 35) (ite (= ((_ extract 30 30) C) (_ bv1 1)) (_ bv4 35) ?x58959))))
 (let ((?x73877 (ite (= ((_ extract 33 33) C) (_ bv1 1)) (_ bv1 35) (ite (= ((_ extract 32 32) C) (_ bv1 1)) (_ bv2 35) ?x82646))))
 (let (($x76134 (= (bvand %A (bvlshr (_ bv34359738367 35) (ite (= ((_ extract 34 34) C) (_ bv1 1)) (_ bv0 35) ?x73877))) (_ bv0 35))))
 (let (($x77757 (=> $x83083 $x76134)))
 (and $x77757 $x83083 $x81545)))))))))))))))))))))))
(check-sat)
