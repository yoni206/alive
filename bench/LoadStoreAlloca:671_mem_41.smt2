(set-info :status unknown)
(declare-fun mem0 () (_ BitVec 8))
(declare-fun %y () (_ BitVec 43))
(declare-fun %p2 () (_ BitVec 64))
(declare-fun idx () (_ BitVec 64))
(declare-fun %x () (_ BitVec 43))
(declare-fun %p1 () (_ BitVec 64))
(declare-fun |ana_equivalentAddressValues(%p1, %p2)| () (_ BitVec 1))
(assert
 (let ((?x494 (ite (and (and (distinct %p2 (_ bv0 64)) true) (or true true) (= idx %p2)) (concat ((_ extract 7 3) mem0) ((_ extract 2 0) %y)) mem0)))
 (let (($x12869 (or true true)))
 (let (($x10971 (and (distinct %p2 (_ bv0 64)) true)))
 (let ((?x6106 (ite (and $x10971 $x12869 (= idx (bvadd (bvadd %p2 (_ bv1 64)) (_ bv0 64)))) ((_ extract 10 3) %y) ?x494)))
 (let ((?x4515 (ite (and $x10971 $x12869 (= idx (bvadd (bvadd %p2 (_ bv1 64)) (_ bv1 64)))) ((_ extract 18 11) %y) ?x6106)))
 (let ((?x11680 (ite (and $x10971 $x12869 (= idx (bvadd (bvadd %p2 (_ bv1 64)) (_ bv2 64)))) ((_ extract 26 19) %y) ?x4515)))
 (let ((?x3549 (ite (and $x10971 $x12869 (= idx (bvadd (bvadd %p2 (_ bv1 64)) (_ bv3 64)))) ((_ extract 34 27) %y) ?x11680)))
 (let ((?x19116 (ite (and $x10971 $x12869 (= idx (bvadd (bvadd %p2 (_ bv1 64)) (_ bv4 64)))) ((_ extract 42 35) %y) ?x3549)))
 (let ((?x21710 (ite (and (and (distinct %p1 (_ bv0 64)) true) $x12869 (= idx %p1)) (concat ((_ extract 7 3) mem0) ((_ extract 2 0) %x)) mem0)))
 (let (($x17212 (and (distinct %p1 (_ bv0 64)) true)))
 (let ((?x4757 (ite (and $x17212 $x12869 (= idx (bvadd (bvadd %p1 (_ bv1 64)) (_ bv0 64)))) ((_ extract 10 3) %x) ?x21710)))
 (let ((?x1014 (ite (and $x17212 $x12869 (= idx (bvadd (bvadd %p1 (_ bv1 64)) (_ bv1 64)))) ((_ extract 18 11) %x) ?x4757)))
 (let ((?x2401 (ite (and $x17212 $x12869 (= idx (bvadd (bvadd %p1 (_ bv1 64)) (_ bv2 64)))) ((_ extract 26 19) %x) ?x1014)))
 (let ((?x639 (ite (and $x17212 $x12869 (= idx (bvadd (bvadd %p1 (_ bv1 64)) (_ bv3 64)))) ((_ extract 34 27) %x) ?x2401)))
 (let ((?x18598 (ite (and $x17212 $x12869 (= idx (bvadd (bvadd %p1 (_ bv1 64)) (_ bv4 64)))) ((_ extract 42 35) %x) ?x639)))
 (let ((?x24307 (ite (and $x17212 $x12869 (= %p2 %p1)) (concat ((_ extract 7 3) mem0) ((_ extract 2 0) %x)) mem0)))
 (let ((?x6060 (ite (and $x17212 $x12869 (= %p2 (bvadd (bvadd %p1 (_ bv1 64)) (_ bv0 64)))) ((_ extract 10 3) %x) ?x24307)))
 (let ((?x10538 (ite (and $x17212 $x12869 (= %p2 (bvadd (bvadd %p1 (_ bv1 64)) (_ bv1 64)))) ((_ extract 18 11) %x) ?x6060)))
 (let ((?x17592 (ite (and $x17212 $x12869 (= %p2 (bvadd (bvadd %p1 (_ bv1 64)) (_ bv2 64)))) ((_ extract 26 19) %x) ?x10538)))
 (let ((?x3641 (ite (and $x17212 $x12869 (= %p2 (bvadd (bvadd %p1 (_ bv1 64)) (_ bv3 64)))) ((_ extract 34 27) %x) ?x17592)))
 (let ((?x23767 (ite (and $x17212 $x12869 (= %p2 (bvadd (bvadd %p1 (_ bv1 64)) (_ bv4 64)))) ((_ extract 42 35) %x) ?x3641)))
 (let ((?x4519 (ite (and $x17212 $x12869 $x10971 $x12869 (= idx %p2)) (concat ((_ extract 7 3) ?x23767) ((_ extract 2 0) %y)) ?x18598)))
 (let ((?x4692 (ite (and $x17212 $x12869 $x10971 $x12869 (= idx (bvadd (bvadd %p2 (_ bv1 64)) (_ bv0 64)))) ((_ extract 10 3) %y) ?x4519)))
 (let ((?x8696 (ite (and $x17212 $x12869 $x10971 $x12869 (= idx (bvadd (bvadd %p2 (_ bv1 64)) (_ bv1 64)))) ((_ extract 18 11) %y) ?x4692)))
 (let ((?x22750 (ite (and $x17212 $x12869 $x10971 $x12869 (= idx (bvadd (bvadd %p2 (_ bv1 64)) (_ bv2 64)))) ((_ extract 26 19) %y) ?x8696)))
 (let ((?x14607 (ite (and $x17212 $x12869 $x10971 $x12869 (= idx (bvadd (bvadd %p2 (_ bv1 64)) (_ bv3 64)))) ((_ extract 34 27) %y) ?x22750)))
 (let ((?x17538 (ite (and $x17212 $x12869 $x10971 $x12869 (= idx (bvadd (bvadd %p2 (_ bv1 64)) (_ bv4 64)))) ((_ extract 42 35) %y) ?x14607)))
 (let (($x8920 (= |ana_equivalentAddressValues(%p1, %p2)| (_ bv1 1))))
 (and (=> $x8920 (= %p1 %p2)) $x8920 (and (distinct ?x17538 ?x19116) true)))))))))))))))))))))))))))))))
(check-sat)
