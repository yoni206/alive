(set-info :status unknown)
(declare-fun %Y () (_ BitVec 11))
(declare-fun C2 () (_ BitVec 11))
(declare-fun C1 () (_ BitVec 60))
(declare-fun %X () (_ BitVec 60))
(assert
 (let ((?x2610 (ite (and (distinct ((_ extract 2 2) C2) (_ bv0 1)) true) (_ bv2 60) (ite (and (distinct ((_ extract 1 1) C2) (_ bv0 1)) true) (_ bv1 60) (_ bv0 60)))))
 (let ((?x2850 (ite (and (distinct ((_ extract 5 5) C2) (_ bv0 1)) true) (_ bv5 60) (ite (and (distinct ((_ extract 4 4) C2) (_ bv0 1)) true) (_ bv4 60) (_ bv3 60)))))
 (let ((?x3586 (ite (and (distinct ((_ extract 8 8) C2) (_ bv0 1)) true) (_ bv8 60) (ite (and (distinct ((_ extract 7 7) C2) (_ bv0 1)) true) (_ bv7 60) (_ bv6 60)))))
 (let ((?x5347 (ite (and (distinct ((_ extract 10 9) C2) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) C2) (_ bv0 1)) true) (_ bv10 60) (_ bv9 60)) ?x3586)))
 (let ((?x2933 (ite (and (distinct ((_ extract 10 6) C2) (_ bv0 5)) true) ?x5347 (ite (and (distinct ((_ extract 5 3) C2) (_ bv0 3)) true) ?x2850 ?x2610))))
 (let ((?x2718 (ite (and (distinct ((_ extract 3 2) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 3 3) C1) (_ bv0 1)) true) (_ bv3 60) (_ bv2 60)) (ite (and (distinct ((_ extract 1 1) C1) (_ bv0 1)) true) (_ bv1 60) (_ bv0 60)))))
 (let ((?x6242 (ite (and (distinct ((_ extract 7 6) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 7 7) C1) (_ bv0 1)) true) (_ bv7 60) (_ bv6 60)) (ite (and (distinct ((_ extract 5 5) C1) (_ bv0 1)) true) (_ bv5 60) (_ bv4 60)))))
 (let ((?x3339 (ite (and (distinct ((_ extract 11 10) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 11 11) C1) (_ bv0 1)) true) (_ bv11 60) (_ bv10 60)) (ite (and (distinct ((_ extract 9 9) C1) (_ bv0 1)) true) (_ bv9 60) (_ bv8 60)))))
 (let ((?x2334 (ite (and (distinct ((_ extract 14 14) C1) (_ bv0 1)) true) (_ bv14 60) (ite (and (distinct ((_ extract 13 13) C1) (_ bv0 1)) true) (_ bv13 60) (_ bv12 60)))))
 (let ((?x3833 (ite (and (distinct ((_ extract 14 8) C1) (_ bv0 7)) true) (ite (and (distinct ((_ extract 14 12) C1) (_ bv0 3)) true) ?x2334 ?x3339) (ite (and (distinct ((_ extract 7 4) C1) (_ bv0 4)) true) ?x6242 ?x2718))))
 (let ((?x4791 (ite (and (distinct ((_ extract 18 17) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 18 18) C1) (_ bv0 1)) true) (_ bv18 60) (_ bv17 60)) (ite (and (distinct ((_ extract 16 16) C1) (_ bv0 1)) true) (_ bv16 60) (_ bv15 60)))))
 (let ((?x2824 (ite (and (distinct ((_ extract 22 21) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 22 22) C1) (_ bv0 1)) true) (_ bv22 60) (_ bv21 60)) (ite (and (distinct ((_ extract 20 20) C1) (_ bv0 1)) true) (_ bv20 60) (_ bv19 60)))))
 (let ((?x5785 (ite (and (distinct ((_ extract 26 25) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 26 26) C1) (_ bv0 1)) true) (_ bv26 60) (_ bv25 60)) (ite (and (distinct ((_ extract 24 24) C1) (_ bv0 1)) true) (_ bv24 60) (_ bv23 60)))))
 (let ((?x2637 (ite (and (distinct ((_ extract 29 29) C1) (_ bv0 1)) true) (_ bv29 60) (ite (and (distinct ((_ extract 28 28) C1) (_ bv0 1)) true) (_ bv28 60) (_ bv27 60)))))
 (let ((?x6466 (ite (and (distinct ((_ extract 29 23) C1) (_ bv0 7)) true) (ite (and (distinct ((_ extract 29 27) C1) (_ bv0 3)) true) ?x2637 ?x5785) (ite (and (distinct ((_ extract 22 19) C1) (_ bv0 4)) true) ?x2824 ?x4791))))
 (let ((?x6645 (ite (and (distinct ((_ extract 33 32) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 33 33) C1) (_ bv0 1)) true) (_ bv33 60) (_ bv32 60)) (ite (and (distinct ((_ extract 31 31) C1) (_ bv0 1)) true) (_ bv31 60) (_ bv30 60)))))
 (let ((?x1671 (ite (and (distinct ((_ extract 37 36) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 37 37) C1) (_ bv0 1)) true) (_ bv37 60) (_ bv36 60)) (ite (and (distinct ((_ extract 35 35) C1) (_ bv0 1)) true) (_ bv35 60) (_ bv34 60)))))
 (let ((?x3444 (ite (and (distinct ((_ extract 41 40) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 41 41) C1) (_ bv0 1)) true) (_ bv41 60) (_ bv40 60)) (ite (and (distinct ((_ extract 39 39) C1) (_ bv0 1)) true) (_ bv39 60) (_ bv38 60)))))
 (let ((?x2961 (ite (and (distinct ((_ extract 44 44) C1) (_ bv0 1)) true) (_ bv44 60) (ite (and (distinct ((_ extract 43 43) C1) (_ bv0 1)) true) (_ bv43 60) (_ bv42 60)))))
 (let ((?x2906 (ite (and (distinct ((_ extract 44 38) C1) (_ bv0 7)) true) (ite (and (distinct ((_ extract 44 42) C1) (_ bv0 3)) true) ?x2961 ?x3444) (ite (and (distinct ((_ extract 37 34) C1) (_ bv0 4)) true) ?x1671 ?x6645))))
 (let ((?x1227 (ite (and (distinct ((_ extract 48 47) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 48 48) C1) (_ bv0 1)) true) (_ bv48 60) (_ bv47 60)) (ite (and (distinct ((_ extract 46 46) C1) (_ bv0 1)) true) (_ bv46 60) (_ bv45 60)))))
 (let ((?x2216 (ite (and (distinct ((_ extract 52 51) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 52 52) C1) (_ bv0 1)) true) (_ bv52 60) (_ bv51 60)) (ite (and (distinct ((_ extract 50 50) C1) (_ bv0 1)) true) (_ bv50 60) (_ bv49 60)))))
 (let ((?x3810 (ite (and (distinct ((_ extract 56 55) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 56 56) C1) (_ bv0 1)) true) (_ bv56 60) (_ bv55 60)) (ite (and (distinct ((_ extract 54 54) C1) (_ bv0 1)) true) (_ bv54 60) (_ bv53 60)))))
 (let ((?x3442 (ite (and (distinct ((_ extract 59 59) C1) (_ bv0 1)) true) (_ bv59 60) (ite (and (distinct ((_ extract 58 58) C1) (_ bv0 1)) true) (_ bv58 60) (_ bv57 60)))))
 (let ((?x4374 (ite (and (distinct ((_ extract 59 53) C1) (_ bv0 7)) true) (ite (and (distinct ((_ extract 59 57) C1) (_ bv0 3)) true) ?x3442 ?x3810) (ite (and (distinct ((_ extract 52 49) C1) (_ bv0 4)) true) ?x2216 ?x1227))))
 (let ((?x1672 (ite (and (distinct ((_ extract 59 30) C1) (_ bv0 30)) true) (ite (and (distinct ((_ extract 59 45) C1) (_ bv0 15)) true) ?x4374 ?x2906) (ite (and (distinct ((_ extract 29 15) C1) (_ bv0 15)) true) ?x6466 ?x3833))))
 (let ((?x4416 (bvsub ?x1672 ?x2933)))
 (let ((?x5183 (bvand %X C1)))
 (let ((?x1673 (bvor %Y C2)))
 (let (($x3447 (and (distinct (ite (= (ite (and (distinct ?x5183 (_ bv0 60)) true) (_ bv1 1) (_ bv0 1)) (_ bv1 1)) %Y ?x1673) (bvor (bvxor ((_ extract 10 0) (bvlshr ?x5183 ?x4416)) C2) %Y)) true)))
 (let ((?x1419 (ite (and (distinct ((_ extract 3 2) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 3 3) C1) (_ bv0 1)) true) (_ bv3 32) (_ bv2 32)) (ite (and (distinct ((_ extract 1 1) C1) (_ bv0 1)) true) (_ bv1 32) (_ bv0 32)))))
 (let ((?x5659 (ite (and (distinct ((_ extract 7 6) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 7 7) C1) (_ bv0 1)) true) (_ bv7 32) (_ bv6 32)) (ite (and (distinct ((_ extract 5 5) C1) (_ bv0 1)) true) (_ bv5 32) (_ bv4 32)))))
 (let ((?x5069 (ite (and (distinct ((_ extract 11 10) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 11 11) C1) (_ bv0 1)) true) (_ bv11 32) (_ bv10 32)) (ite (and (distinct ((_ extract 9 9) C1) (_ bv0 1)) true) (_ bv9 32) (_ bv8 32)))))
 (let ((?x6173 (ite (and (distinct ((_ extract 14 14) C1) (_ bv0 1)) true) (_ bv14 32) (ite (and (distinct ((_ extract 13 13) C1) (_ bv0 1)) true) (_ bv13 32) (_ bv12 32)))))
 (let ((?x3257 (ite (and (distinct ((_ extract 14 8) C1) (_ bv0 7)) true) (ite (and (distinct ((_ extract 14 12) C1) (_ bv0 3)) true) ?x6173 ?x5069) (ite (and (distinct ((_ extract 7 4) C1) (_ bv0 4)) true) ?x5659 ?x1419))))
 (let ((?x6629 (ite (and (distinct ((_ extract 18 17) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 18 18) C1) (_ bv0 1)) true) (_ bv18 32) (_ bv17 32)) (ite (and (distinct ((_ extract 16 16) C1) (_ bv0 1)) true) (_ bv16 32) (_ bv15 32)))))
 (let ((?x1391 (ite (and (distinct ((_ extract 22 21) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 22 22) C1) (_ bv0 1)) true) (_ bv22 32) (_ bv21 32)) (ite (and (distinct ((_ extract 20 20) C1) (_ bv0 1)) true) (_ bv20 32) (_ bv19 32)))))
 (let ((?x3355 (ite (and (distinct ((_ extract 26 25) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 26 26) C1) (_ bv0 1)) true) (_ bv26 32) (_ bv25 32)) (ite (and (distinct ((_ extract 24 24) C1) (_ bv0 1)) true) (_ bv24 32) (_ bv23 32)))))
 (let ((?x2756 (ite (and (distinct ((_ extract 29 29) C1) (_ bv0 1)) true) (_ bv29 32) (ite (and (distinct ((_ extract 28 28) C1) (_ bv0 1)) true) (_ bv28 32) (_ bv27 32)))))
 (let ((?x4760 (ite (and (distinct ((_ extract 29 23) C1) (_ bv0 7)) true) (ite (and (distinct ((_ extract 29 27) C1) (_ bv0 3)) true) ?x2756 ?x3355) (ite (and (distinct ((_ extract 22 19) C1) (_ bv0 4)) true) ?x1391 ?x6629))))
 (let ((?x4902 (ite (and (distinct ((_ extract 33 32) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 33 33) C1) (_ bv0 1)) true) (_ bv33 32) (_ bv32 32)) (ite (and (distinct ((_ extract 31 31) C1) (_ bv0 1)) true) (_ bv31 32) (_ bv30 32)))))
 (let ((?x4807 (ite (and (distinct ((_ extract 37 36) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 37 37) C1) (_ bv0 1)) true) (_ bv37 32) (_ bv36 32)) (ite (and (distinct ((_ extract 35 35) C1) (_ bv0 1)) true) (_ bv35 32) (_ bv34 32)))))
 (let ((?x4327 (ite (and (distinct ((_ extract 41 40) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 41 41) C1) (_ bv0 1)) true) (_ bv41 32) (_ bv40 32)) (ite (and (distinct ((_ extract 39 39) C1) (_ bv0 1)) true) (_ bv39 32) (_ bv38 32)))))
 (let ((?x3108 (ite (and (distinct ((_ extract 44 44) C1) (_ bv0 1)) true) (_ bv44 32) (ite (and (distinct ((_ extract 43 43) C1) (_ bv0 1)) true) (_ bv43 32) (_ bv42 32)))))
 (let ((?x5798 (ite (and (distinct ((_ extract 44 38) C1) (_ bv0 7)) true) (ite (and (distinct ((_ extract 44 42) C1) (_ bv0 3)) true) ?x3108 ?x4327) (ite (and (distinct ((_ extract 37 34) C1) (_ bv0 4)) true) ?x4807 ?x4902))))
 (let ((?x2992 (ite (and (distinct ((_ extract 48 47) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 48 48) C1) (_ bv0 1)) true) (_ bv48 32) (_ bv47 32)) (ite (and (distinct ((_ extract 46 46) C1) (_ bv0 1)) true) (_ bv46 32) (_ bv45 32)))))
 (let ((?x1685 (ite (and (distinct ((_ extract 52 51) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 52 52) C1) (_ bv0 1)) true) (_ bv52 32) (_ bv51 32)) (ite (and (distinct ((_ extract 50 50) C1) (_ bv0 1)) true) (_ bv50 32) (_ bv49 32)))))
 (let ((?x2527 (ite (and (distinct ((_ extract 56 55) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 56 56) C1) (_ bv0 1)) true) (_ bv56 32) (_ bv55 32)) (ite (and (distinct ((_ extract 54 54) C1) (_ bv0 1)) true) (_ bv54 32) (_ bv53 32)))))
 (let ((?x4513 (ite (and (distinct ((_ extract 59 59) C1) (_ bv0 1)) true) (_ bv59 32) (ite (and (distinct ((_ extract 58 58) C1) (_ bv0 1)) true) (_ bv58 32) (_ bv57 32)))))
 (let ((?x2792 (ite (and (distinct ((_ extract 59 53) C1) (_ bv0 7)) true) (ite (and (distinct ((_ extract 59 57) C1) (_ bv0 3)) true) ?x4513 ?x2527) (ite (and (distinct ((_ extract 52 49) C1) (_ bv0 4)) true) ?x1685 ?x2992))))
 (let ((?x5552 (ite (and (distinct ((_ extract 59 30) C1) (_ bv0 30)) true) (ite (and (distinct ((_ extract 59 45) C1) (_ bv0 15)) true) ?x2792 ?x5798) (ite (and (distinct ((_ extract 29 15) C1) (_ bv0 15)) true) ?x4760 ?x3257))))
 (let ((?x1814 (ite (and (distinct ((_ extract 2 2) C2) (_ bv0 1)) true) (_ bv2 32) (ite (and (distinct ((_ extract 1 1) C2) (_ bv0 1)) true) (_ bv1 32) (_ bv0 32)))))
 (let ((?x1791 (ite (and (distinct ((_ extract 5 5) C2) (_ bv0 1)) true) (_ bv5 32) (ite (and (distinct ((_ extract 4 4) C2) (_ bv0 1)) true) (_ bv4 32) (_ bv3 32)))))
 (let ((?x1800 (ite (and (distinct ((_ extract 8 8) C2) (_ bv0 1)) true) (_ bv8 32) (ite (and (distinct ((_ extract 7 7) C2) (_ bv0 1)) true) (_ bv7 32) (_ bv6 32)))))
 (let ((?x3026 (ite (and (distinct ((_ extract 10 9) C2) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) C2) (_ bv0 1)) true) (_ bv10 32) (_ bv9 32)) ?x1800)))
 (let ((?x2558 (ite (and (distinct ((_ extract 10 6) C2) (_ bv0 5)) true) ?x3026 (ite (and (distinct ((_ extract 5 3) C2) (_ bv0 3)) true) ?x1791 ?x1814))))
 (and (and (and (distinct C1 (_ bv0 60)) true) (= (bvand C1 (bvsub C1 (_ bv1 60))) (_ bv0 60))) (and (and (distinct C2 (_ bv0 11)) true) (= (bvand C2 (bvsub C2 (_ bv1 11))) (_ bv0 11))) (bvslt ?x2558 ?x5552) $x3447))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
