(set-info :status unknown)
(declare-fun mem0 () (_ BitVec 8))
(declare-fun %p2 () (_ BitVec 64))
(declare-fun idx () (_ BitVec 64))
(declare-fun %p1 () (_ BitVec 64))
(declare-fun |ana_equivalentAddressValues(%p1, %p2)| () (_ BitVec 1))
(assert
 (let ((?x16460 (concat ((_ extract 7 2) mem0) ((_ extract 1 0) (concat (concat mem0 mem0) ((_ extract 1 0) mem0))))))
 (let (($x10401 (or true true)))
 (let (($x18224 (and (distinct %p2 (_ bv0 64)) true)))
 (let (($x11922 (and (distinct %p1 (_ bv0 64)) true)))
 (let ((?x3582 (ite (and $x11922 $x10401 $x11922 $x10401 $x11922 $x10401 $x18224 $x10401 (= idx %p2)) ?x16460 mem0)))
 (let (($x16688 (and $x11922 $x10401 $x11922 $x10401 $x11922 $x10401 $x18224 $x10401 (= idx (bvadd (bvadd %p2 (_ bv1 64)) (_ bv0 64))))))
 (let ((?x14986 (ite $x16688 ((_ extract 9 2) (concat (concat mem0 mem0) ((_ extract 1 0) mem0))) ?x3582)))
 (let (($x16243 (and $x11922 $x10401 $x11922 $x10401 $x11922 $x10401 $x18224 $x10401 (= idx (bvadd (bvadd %p2 (_ bv1 64)) (_ bv1 64))))))
 (let ((?x15463 (ite $x16243 ((_ extract 17 10) (concat (concat mem0 mem0) ((_ extract 1 0) mem0))) ?x14986)))
 (let (($x13913 (= |ana_equivalentAddressValues(%p1, %p2)| (_ bv1 1))))
 (and (=> $x13913 (= %p1 %p2)) $x13913 (and (distinct ?x15463 mem0) true)))))))))))))
(check-sat)
