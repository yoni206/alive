(set-info :status unknown)
(declare-fun %Y () (_ BitVec 11))
(declare-fun C2 () (_ BitVec 11))
(declare-fun C1 () (_ BitVec 58))
(declare-fun %X () (_ BitVec 58))
(assert
 (let ((?x284 (ite (and (distinct ((_ extract 2 2) C2) (_ bv0 1)) true) (_ bv2 58) (ite (and (distinct ((_ extract 1 1) C2) (_ bv0 1)) true) (_ bv1 58) (_ bv0 58)))))
 (let ((?x21922 (ite (and (distinct ((_ extract 5 5) C2) (_ bv0 1)) true) (_ bv5 58) (ite (and (distinct ((_ extract 4 4) C2) (_ bv0 1)) true) (_ bv4 58) (_ bv3 58)))))
 (let ((?x6342 (ite (and (distinct ((_ extract 8 8) C2) (_ bv0 1)) true) (_ bv8 58) (ite (and (distinct ((_ extract 7 7) C2) (_ bv0 1)) true) (_ bv7 58) (_ bv6 58)))))
 (let ((?x3107 (ite (and (distinct ((_ extract 10 9) C2) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) C2) (_ bv0 1)) true) (_ bv10 58) (_ bv9 58)) ?x6342)))
 (let ((?x1753 (ite (and (distinct ((_ extract 10 6) C2) (_ bv0 5)) true) ?x3107 (ite (and (distinct ((_ extract 5 3) C2) (_ bv0 3)) true) ?x21922 ?x284))))
 (let ((?x14096 (ite (and (distinct ((_ extract 3 2) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 3 3) C1) (_ bv0 1)) true) (_ bv3 58) (_ bv2 58)) (ite (and (distinct ((_ extract 1 1) C1) (_ bv0 1)) true) (_ bv1 58) (_ bv0 58)))))
 (let ((?x20665 (ite (and (distinct ((_ extract 7 6) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 7 7) C1) (_ bv0 1)) true) (_ bv7 58) (_ bv6 58)) (ite (and (distinct ((_ extract 5 5) C1) (_ bv0 1)) true) (_ bv5 58) (_ bv4 58)))))
 (let ((?x19167 (ite (and (distinct ((_ extract 11 10) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 11 11) C1) (_ bv0 1)) true) (_ bv11 58) (_ bv10 58)) (ite (and (distinct ((_ extract 9 9) C1) (_ bv0 1)) true) (_ bv9 58) (_ bv8 58)))))
 (let ((?x16761 (ite (and (distinct ((_ extract 14 14) C1) (_ bv0 1)) true) (_ bv14 58) (ite (and (distinct ((_ extract 13 13) C1) (_ bv0 1)) true) (_ bv13 58) (_ bv12 58)))))
 (let ((?x4874 (ite (and (distinct ((_ extract 14 8) C1) (_ bv0 7)) true) (ite (and (distinct ((_ extract 14 12) C1) (_ bv0 3)) true) ?x16761 ?x19167) (ite (and (distinct ((_ extract 7 4) C1) (_ bv0 4)) true) ?x20665 ?x14096))))
 (let ((?x12515 (ite (and (distinct ((_ extract 18 17) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 18 18) C1) (_ bv0 1)) true) (_ bv18 58) (_ bv17 58)) (ite (and (distinct ((_ extract 16 16) C1) (_ bv0 1)) true) (_ bv16 58) (_ bv15 58)))))
 (let ((?x11021 (ite (and (distinct ((_ extract 21 21) C1) (_ bv0 1)) true) (_ bv21 58) (ite (and (distinct ((_ extract 20 20) C1) (_ bv0 1)) true) (_ bv20 58) (_ bv19 58)))))
 (let ((?x16123 (ite (and (distinct ((_ extract 25 24) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 25 25) C1) (_ bv0 1)) true) (_ bv25 58) (_ bv24 58)) (ite (and (distinct ((_ extract 23 23) C1) (_ bv0 1)) true) (_ bv23 58) (_ bv22 58)))))
 (let ((?x11257 (ite (and (distinct ((_ extract 28 28) C1) (_ bv0 1)) true) (_ bv28 58) (ite (and (distinct ((_ extract 27 27) C1) (_ bv0 1)) true) (_ bv27 58) (_ bv26 58)))))
 (let ((?x13271 (ite (and (distinct ((_ extract 28 22) C1) (_ bv0 7)) true) (ite (and (distinct ((_ extract 28 26) C1) (_ bv0 3)) true) ?x11257 ?x16123) (ite (and (distinct ((_ extract 21 19) C1) (_ bv0 3)) true) ?x11021 ?x12515))))
 (let ((?x5557 (ite (and (distinct ((_ extract 32 31) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 32 32) C1) (_ bv0 1)) true) (_ bv32 58) (_ bv31 58)) (ite (and (distinct ((_ extract 30 30) C1) (_ bv0 1)) true) (_ bv30 58) (_ bv29 58)))))
 (let ((?x11509 (ite (and (distinct ((_ extract 36 35) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 36 36) C1) (_ bv0 1)) true) (_ bv36 58) (_ bv35 58)) (ite (and (distinct ((_ extract 34 34) C1) (_ bv0 1)) true) (_ bv34 58) (_ bv33 58)))))
 (let ((?x3453 (ite (and (distinct ((_ extract 40 39) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 40 40) C1) (_ bv0 1)) true) (_ bv40 58) (_ bv39 58)) (ite (and (distinct ((_ extract 38 38) C1) (_ bv0 1)) true) (_ bv38 58) (_ bv37 58)))))
 (let ((?x23404 (ite (and (distinct ((_ extract 43 43) C1) (_ bv0 1)) true) (_ bv43 58) (ite (and (distinct ((_ extract 42 42) C1) (_ bv0 1)) true) (_ bv42 58) (_ bv41 58)))))
 (let ((?x20421 (ite (and (distinct ((_ extract 43 37) C1) (_ bv0 7)) true) (ite (and (distinct ((_ extract 43 41) C1) (_ bv0 3)) true) ?x23404 ?x3453) (ite (and (distinct ((_ extract 36 33) C1) (_ bv0 4)) true) ?x11509 ?x5557))))
 (let ((?x20512 (ite (and (distinct ((_ extract 47 46) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 47 47) C1) (_ bv0 1)) true) (_ bv47 58) (_ bv46 58)) (ite (and (distinct ((_ extract 45 45) C1) (_ bv0 1)) true) (_ bv45 58) (_ bv44 58)))))
 (let ((?x3050 (ite (and (distinct ((_ extract 50 50) C1) (_ bv0 1)) true) (_ bv50 58) (ite (and (distinct ((_ extract 49 49) C1) (_ bv0 1)) true) (_ bv49 58) (_ bv48 58)))))
 (let ((?x24265 (ite (and (distinct ((_ extract 54 53) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 54 54) C1) (_ bv0 1)) true) (_ bv54 58) (_ bv53 58)) (ite (and (distinct ((_ extract 52 52) C1) (_ bv0 1)) true) (_ bv52 58) (_ bv51 58)))))
 (let ((?x13989 (ite (and (distinct ((_ extract 57 57) C1) (_ bv0 1)) true) (_ bv57 58) (ite (and (distinct ((_ extract 56 56) C1) (_ bv0 1)) true) (_ bv56 58) (_ bv55 58)))))
 (let ((?x19767 (ite (and (distinct ((_ extract 57 51) C1) (_ bv0 7)) true) (ite (and (distinct ((_ extract 57 55) C1) (_ bv0 3)) true) ?x13989 ?x24265) (ite (and (distinct ((_ extract 50 48) C1) (_ bv0 3)) true) ?x3050 ?x20512))))
 (let ((?x737 (ite (and (distinct ((_ extract 57 29) C1) (_ bv0 29)) true) (ite (and (distinct ((_ extract 57 44) C1) (_ bv0 14)) true) ?x19767 ?x20421) (ite (and (distinct ((_ extract 28 15) C1) (_ bv0 14)) true) ?x13271 ?x4874))))
 (let ((?x3057 (bvsub ?x737 ?x1753)))
 (let ((?x24708 (bvand %X C1)))
 (let (($x4959 (and (distinct (ite (= (ite (= ?x24708 (_ bv0 58)) (_ bv1 1) (_ bv0 1)) (_ bv1 1)) %Y (bvor %Y C2)) (bvor ((_ extract 10 0) (bvlshr ?x24708 ?x3057)) %Y)) true)))
 (let ((?x4804 (ite (and (distinct ((_ extract 3 2) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 3 3) C1) (_ bv0 1)) true) (_ bv3 32) (_ bv2 32)) (ite (and (distinct ((_ extract 1 1) C1) (_ bv0 1)) true) (_ bv1 32) (_ bv0 32)))))
 (let ((?x12332 (ite (and (distinct ((_ extract 7 6) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 7 7) C1) (_ bv0 1)) true) (_ bv7 32) (_ bv6 32)) (ite (and (distinct ((_ extract 5 5) C1) (_ bv0 1)) true) (_ bv5 32) (_ bv4 32)))))
 (let ((?x10389 (ite (and (distinct ((_ extract 11 10) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 11 11) C1) (_ bv0 1)) true) (_ bv11 32) (_ bv10 32)) (ite (and (distinct ((_ extract 9 9) C1) (_ bv0 1)) true) (_ bv9 32) (_ bv8 32)))))
 (let ((?x978 (ite (and (distinct ((_ extract 14 14) C1) (_ bv0 1)) true) (_ bv14 32) (ite (and (distinct ((_ extract 13 13) C1) (_ bv0 1)) true) (_ bv13 32) (_ bv12 32)))))
 (let ((?x12658 (ite (and (distinct ((_ extract 14 8) C1) (_ bv0 7)) true) (ite (and (distinct ((_ extract 14 12) C1) (_ bv0 3)) true) ?x978 ?x10389) (ite (and (distinct ((_ extract 7 4) C1) (_ bv0 4)) true) ?x12332 ?x4804))))
 (let ((?x17007 (ite (and (distinct ((_ extract 18 17) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 18 18) C1) (_ bv0 1)) true) (_ bv18 32) (_ bv17 32)) (ite (and (distinct ((_ extract 16 16) C1) (_ bv0 1)) true) (_ bv16 32) (_ bv15 32)))))
 (let ((?x22032 (ite (and (distinct ((_ extract 21 21) C1) (_ bv0 1)) true) (_ bv21 32) (ite (and (distinct ((_ extract 20 20) C1) (_ bv0 1)) true) (_ bv20 32) (_ bv19 32)))))
 (let ((?x3638 (ite (and (distinct ((_ extract 25 24) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 25 25) C1) (_ bv0 1)) true) (_ bv25 32) (_ bv24 32)) (ite (and (distinct ((_ extract 23 23) C1) (_ bv0 1)) true) (_ bv23 32) (_ bv22 32)))))
 (let ((?x14991 (ite (and (distinct ((_ extract 28 28) C1) (_ bv0 1)) true) (_ bv28 32) (ite (and (distinct ((_ extract 27 27) C1) (_ bv0 1)) true) (_ bv27 32) (_ bv26 32)))))
 (let ((?x3184 (ite (and (distinct ((_ extract 28 22) C1) (_ bv0 7)) true) (ite (and (distinct ((_ extract 28 26) C1) (_ bv0 3)) true) ?x14991 ?x3638) (ite (and (distinct ((_ extract 21 19) C1) (_ bv0 3)) true) ?x22032 ?x17007))))
 (let ((?x24786 (ite (and (distinct ((_ extract 32 31) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 32 32) C1) (_ bv0 1)) true) (_ bv32 32) (_ bv31 32)) (ite (and (distinct ((_ extract 30 30) C1) (_ bv0 1)) true) (_ bv30 32) (_ bv29 32)))))
 (let ((?x13744 (ite (and (distinct ((_ extract 36 35) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 36 36) C1) (_ bv0 1)) true) (_ bv36 32) (_ bv35 32)) (ite (and (distinct ((_ extract 34 34) C1) (_ bv0 1)) true) (_ bv34 32) (_ bv33 32)))))
 (let ((?x12236 (ite (and (distinct ((_ extract 40 39) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 40 40) C1) (_ bv0 1)) true) (_ bv40 32) (_ bv39 32)) (ite (and (distinct ((_ extract 38 38) C1) (_ bv0 1)) true) (_ bv38 32) (_ bv37 32)))))
 (let ((?x10553 (ite (and (distinct ((_ extract 43 43) C1) (_ bv0 1)) true) (_ bv43 32) (ite (and (distinct ((_ extract 42 42) C1) (_ bv0 1)) true) (_ bv42 32) (_ bv41 32)))))
 (let ((?x23828 (ite (and (distinct ((_ extract 43 37) C1) (_ bv0 7)) true) (ite (and (distinct ((_ extract 43 41) C1) (_ bv0 3)) true) ?x10553 ?x12236) (ite (and (distinct ((_ extract 36 33) C1) (_ bv0 4)) true) ?x13744 ?x24786))))
 (let ((?x3932 (ite (and (distinct ((_ extract 47 46) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 47 47) C1) (_ bv0 1)) true) (_ bv47 32) (_ bv46 32)) (ite (and (distinct ((_ extract 45 45) C1) (_ bv0 1)) true) (_ bv45 32) (_ bv44 32)))))
 (let ((?x1257 (ite (and (distinct ((_ extract 50 50) C1) (_ bv0 1)) true) (_ bv50 32) (ite (and (distinct ((_ extract 49 49) C1) (_ bv0 1)) true) (_ bv49 32) (_ bv48 32)))))
 (let ((?x7121 (ite (and (distinct ((_ extract 54 53) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 54 54) C1) (_ bv0 1)) true) (_ bv54 32) (_ bv53 32)) (ite (and (distinct ((_ extract 52 52) C1) (_ bv0 1)) true) (_ bv52 32) (_ bv51 32)))))
 (let ((?x5984 (ite (and (distinct ((_ extract 57 57) C1) (_ bv0 1)) true) (_ bv57 32) (ite (and (distinct ((_ extract 56 56) C1) (_ bv0 1)) true) (_ bv56 32) (_ bv55 32)))))
 (let ((?x7821 (ite (and (distinct ((_ extract 57 51) C1) (_ bv0 7)) true) (ite (and (distinct ((_ extract 57 55) C1) (_ bv0 3)) true) ?x5984 ?x7121) (ite (and (distinct ((_ extract 50 48) C1) (_ bv0 3)) true) ?x1257 ?x3932))))
 (let ((?x23208 (ite (and (distinct ((_ extract 57 29) C1) (_ bv0 29)) true) (ite (and (distinct ((_ extract 57 44) C1) (_ bv0 14)) true) ?x7821 ?x23828) (ite (and (distinct ((_ extract 28 15) C1) (_ bv0 14)) true) ?x3184 ?x12658))))
 (let ((?x12490 (ite (and (distinct ((_ extract 2 2) C2) (_ bv0 1)) true) (_ bv2 32) (ite (and (distinct ((_ extract 1 1) C2) (_ bv0 1)) true) (_ bv1 32) (_ bv0 32)))))
 (let ((?x16065 (ite (and (distinct ((_ extract 5 5) C2) (_ bv0 1)) true) (_ bv5 32) (ite (and (distinct ((_ extract 4 4) C2) (_ bv0 1)) true) (_ bv4 32) (_ bv3 32)))))
 (let ((?x14999 (ite (and (distinct ((_ extract 8 8) C2) (_ bv0 1)) true) (_ bv8 32) (ite (and (distinct ((_ extract 7 7) C2) (_ bv0 1)) true) (_ bv7 32) (_ bv6 32)))))
 (let ((?x13570 (ite (and (distinct ((_ extract 10 9) C2) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) C2) (_ bv0 1)) true) (_ bv10 32) (_ bv9 32)) ?x14999)))
 (let ((?x24480 (ite (and (distinct ((_ extract 10 6) C2) (_ bv0 5)) true) ?x13570 (ite (and (distinct ((_ extract 5 3) C2) (_ bv0 3)) true) ?x16065 ?x12490))))
 (and (and (and (distinct C1 (_ bv0 58)) true) (= (bvand C1 (bvsub C1 (_ bv1 58))) (_ bv0 58))) (and (and (distinct C2 (_ bv0 11)) true) (= (bvand C2 (bvsub C2 (_ bv1 11))) (_ bv0 11))) (bvslt ?x24480 ?x23208) $x4959)))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
