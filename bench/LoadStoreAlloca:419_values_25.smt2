(set-info :status unknown)
(declare-fun %x () (_ BitVec 26))
(declare-fun mem0 () (_ BitVec 8))
(declare-fun %p1 () (_ BitVec 64))
(declare-fun %p2 () (_ BitVec 64))
(declare-fun |ana_equivalentAddressValues(%p1, %p2)| () (_ BitVec 1))
(assert
 (let ((?x9168 (concat ((_ extract 7 2) mem0) ((_ extract 1 0) %x))))
 (let ((?x10743 (ite (and (and (distinct %p1 (_ bv0 64)) true) (or true true) (= %p2 %p1)) ?x9168 mem0)))
 (let ((?x1110 ((_ extract 9 2) %x)))
 (let (($x11105 (or true true)))
 (let (($x1312 (and (distinct %p1 (_ bv0 64)) true)))
 (let ((?x11969 (ite (and $x1312 $x11105 (= %p2 (bvadd (bvadd %p1 (_ bv1 64)) (_ bv0 64)))) ?x1110 ?x10743)))
 (let ((?x11745 ((_ extract 17 10) %x)))
 (let ((?x23974 (ite (and $x1312 $x11105 (= %p2 (bvadd (bvadd %p1 (_ bv1 64)) (_ bv1 64)))) ?x11745 ?x11969)))
 (let ((?x6835 ((_ extract 25 18) %x)))
 (let ((?x17134 (ite (and $x1312 $x11105 (= %p2 (bvadd (bvadd %p1 (_ bv1 64)) (_ bv2 64)))) ?x6835 ?x23974)))
 (let ((?x12990 (ite (and $x1312 $x11105 (= (bvadd (bvadd %p2 (_ bv1 64)) (_ bv0 64)) %p1)) ?x9168 mem0)))
 (let (($x2421 (and $x1312 $x11105 (= (bvadd (bvadd %p2 (_ bv1 64)) (_ bv0 64)) (bvadd (bvadd %p1 (_ bv1 64)) (_ bv0 64))))))
 (let (($x21090 (and $x1312 $x11105 (= (bvadd (bvadd %p2 (_ bv1 64)) (_ bv0 64)) (bvadd (bvadd %p1 (_ bv1 64)) (_ bv1 64))))))
 (let (($x10721 (and $x1312 $x11105 (= (bvadd (bvadd %p2 (_ bv1 64)) (_ bv0 64)) (bvadd (bvadd %p1 (_ bv1 64)) (_ bv2 64))))))
 (let ((?x4782 (ite (and $x1312 $x11105 (= (bvadd (bvadd %p2 (_ bv1 64)) (_ bv1 64)) %p1)) ?x9168 mem0)))
 (let (($x14536 (and $x1312 $x11105 (= (bvadd (bvadd %p2 (_ bv1 64)) (_ bv1 64)) (bvadd (bvadd %p1 (_ bv1 64)) (_ bv0 64))))))
 (let (($x10183 (and $x1312 $x11105 (= (bvadd (bvadd %p2 (_ bv1 64)) (_ bv1 64)) (bvadd (bvadd %p1 (_ bv1 64)) (_ bv1 64))))))
 (let (($x11800 (and $x1312 $x11105 (= (bvadd (bvadd %p2 (_ bv1 64)) (_ bv1 64)) (bvadd (bvadd %p1 (_ bv1 64)) (_ bv2 64))))))
 (let ((?x18425 (ite (and $x1312 $x11105 (= (bvadd (bvadd %p2 (_ bv1 64)) (_ bv2 64)) %p1)) ?x9168 mem0)))
 (let (($x7310 (and $x1312 $x11105 (= (bvadd (bvadd %p2 (_ bv1 64)) (_ bv2 64)) (bvadd (bvadd %p1 (_ bv1 64)) (_ bv0 64))))))
 (let (($x16567 (and $x1312 $x11105 (= (bvadd (bvadd %p2 (_ bv1 64)) (_ bv2 64)) (bvadd (bvadd %p1 (_ bv1 64)) (_ bv1 64))))))
 (let (($x1746 (and $x1312 $x11105 (= (bvadd (bvadd %p2 (_ bv1 64)) (_ bv2 64)) (bvadd (bvadd %p1 (_ bv1 64)) (_ bv2 64))))))
 (let ((?x15344 (concat (ite $x1746 ?x6835 (ite $x16567 ?x11745 (ite $x7310 ?x1110 ?x18425))) (ite $x11800 ?x6835 (ite $x10183 ?x11745 (ite $x14536 ?x1110 ?x4782))))))
 (let ((?x1379 (concat (concat ?x15344 (ite $x10721 ?x6835 (ite $x21090 ?x11745 (ite $x2421 ?x1110 ?x12990)))) ((_ extract 1 0) ?x17134))))
 (let (($x10245 (= |ana_equivalentAddressValues(%p1, %p2)| (_ bv1 1))))
 (let (($x16514 (and (distinct %p2 (_ bv0 64)) true)))
 (and $x1312 $x11105 $x16514 $x11105 $x16514 $x11105 (=> $x10245 (= %p1 %p2)) $x10245 (and (distinct ?x1379 %x) true)))))))))))))))))))))))))))))
(check-sat)
