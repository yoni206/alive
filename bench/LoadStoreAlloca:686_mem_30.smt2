(set-info :status unknown)
(declare-fun mem0 () (_ BitVec 8))
(declare-fun %p2 () (_ BitVec 64))
(declare-fun idx () (_ BitVec 64))
(declare-fun %p1 () (_ BitVec 64))
(declare-fun |ana_equivalentAddressValues(%p1, %p2)| () (_ BitVec 1))
(assert
 (let ((?x13808 (concat (concat (concat (concat mem0 mem0) mem0) mem0) ((_ extract 1 0) mem0))))
 (let (($x15736 (or true true)))
 (let (($x18818 (and (distinct %p2 (_ bv0 64)) true)))
 (let (($x5187 (and (distinct %p1 (_ bv0 64)) true)))
 (let ((?x15398 (ite (and $x5187 $x15736 $x5187 $x15736 $x5187 $x15736 $x18818 $x15736 (= idx %p2)) (concat ((_ extract 7 2) mem0) ((_ extract 1 0) ?x13808)) mem0)))
 (let (($x17231 (and $x5187 $x15736 $x5187 $x15736 $x5187 $x15736 $x18818 $x15736 (= idx (bvadd (bvadd %p2 (_ bv1 64)) (_ bv0 64))))))
 (let (($x16294 (and $x5187 $x15736 $x5187 $x15736 $x5187 $x15736 $x18818 $x15736 (= idx (bvadd (bvadd %p2 (_ bv1 64)) (_ bv1 64))))))
 (let (($x20180 (and $x5187 $x15736 $x5187 $x15736 $x5187 $x15736 $x18818 $x15736 (= idx (bvadd (bvadd %p2 (_ bv1 64)) (_ bv2 64))))))
 (let ((?x6657 (ite $x20180 ((_ extract 25 18) ?x13808) (ite $x16294 ((_ extract 17 10) ?x13808) (ite $x17231 ((_ extract 9 2) ?x13808) ?x15398)))))
 (let (($x21383 (and $x5187 $x15736 $x5187 $x15736 $x5187 $x15736 $x18818 $x15736 (= idx (bvadd (bvadd %p2 (_ bv1 64)) (_ bv3 64))))))
 (let ((?x9886 (ite $x21383 ((_ extract 33 26) ?x13808) ?x6657)))
 (let (($x14577 (= |ana_equivalentAddressValues(%p1, %p2)| (_ bv1 1))))
 (and (=> $x14577 (= %p1 %p2)) $x14577 (and (distinct ?x9886 mem0) true)))))))))))))))
(check-sat)
