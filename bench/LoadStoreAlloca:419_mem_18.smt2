(set-info :status unknown)
(declare-fun mem0 () (_ BitVec 8))
(declare-fun %x () (_ BitVec 19))
(declare-fun %p1 () (_ BitVec 64))
(declare-fun idx () (_ BitVec 64))
(declare-fun |ana_equivalentAddressValues(%p1, %p2)| () (_ BitVec 1))
(declare-fun %p2 () (_ BitVec 64))
(assert
 (let ((?x13823 (concat ((_ extract 7 3) mem0) ((_ extract 2 0) %x))))
 (let ((?x9014 (ite (and (and (distinct %p1 (_ bv0 64)) true) (or true true) (= idx %p1)) ?x13823 mem0)))
 (let ((?x13453 ((_ extract 10 3) %x)))
 (let (($x6055 (or true true)))
 (let (($x8080 (and (distinct %p1 (_ bv0 64)) true)))
 (let ((?x1989 (ite (and $x8080 $x6055 (= idx (bvadd (bvadd %p1 (_ bv1 64)) (_ bv0 64)))) ?x13453 ?x9014)))
 (let ((?x6201 ((_ extract 18 11) %x)))
 (let ((?x18512 (ite (and $x8080 $x6055 (= idx (bvadd (bvadd %p1 (_ bv1 64)) (_ bv1 64)))) ?x6201 ?x1989)))
 (let (($x3169 (= |ana_equivalentAddressValues(%p1, %p2)| (_ bv1 1))))
 (and (=> $x3169 (= %p1 %p2)) $x3169 (and (distinct ?x18512 ?x18512) true))))))))))))
(check-sat)
