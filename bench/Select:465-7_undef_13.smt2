(set-info :status unknown)
(declare-fun C2 () (_ BitVec 11))
(declare-fun C1 () (_ BitVec 21))
(assert
 (let ((?x2261 (ite (and (distinct ((_ extract 2 2) C2) (_ bv0 1)) true) (_ bv2 21) (ite (and (distinct ((_ extract 1 1) C2) (_ bv0 1)) true) (_ bv1 21) (_ bv0 21)))))
 (let ((?x3517 (ite (and (distinct ((_ extract 5 5) C2) (_ bv0 1)) true) (_ bv5 21) (ite (and (distinct ((_ extract 4 4) C2) (_ bv0 1)) true) (_ bv4 21) (_ bv3 21)))))
 (let ((?x1268 (ite (and (distinct ((_ extract 8 8) C2) (_ bv0 1)) true) (_ bv8 21) (ite (and (distinct ((_ extract 7 7) C2) (_ bv0 1)) true) (_ bv7 21) (_ bv6 21)))))
 (let ((?x4831 (ite (and (distinct ((_ extract 10 9) C2) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) C2) (_ bv0 1)) true) (_ bv10 21) (_ bv9 21)) ?x1268)))
 (let ((?x2989 (ite (and (distinct ((_ extract 10 6) C2) (_ bv0 5)) true) ?x4831 (ite (and (distinct ((_ extract 5 3) C2) (_ bv0 3)) true) ?x3517 ?x2261))))
 (let ((?x2380 (ite (and (distinct ((_ extract 2 2) C1) (_ bv0 1)) true) (_ bv2 21) (ite (and (distinct ((_ extract 1 1) C1) (_ bv0 1)) true) (_ bv1 21) (_ bv0 21)))))
 (let ((?x5524 (ite (and (distinct ((_ extract 5 5) C1) (_ bv0 1)) true) (_ bv5 21) (ite (and (distinct ((_ extract 4 4) C1) (_ bv0 1)) true) (_ bv4 21) (_ bv3 21)))))
 (let ((?x5966 (ite (and (distinct ((_ extract 8 8) C1) (_ bv0 1)) true) (_ bv8 21) (ite (and (distinct ((_ extract 7 7) C1) (_ bv0 1)) true) (_ bv7 21) (_ bv6 21)))))
 (let ((?x5967 (ite (and (distinct ((_ extract 10 9) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) C1) (_ bv0 1)) true) (_ bv10 21) (_ bv9 21)) ?x5966)))
 (let ((?x2244 (ite (and (distinct ((_ extract 10 6) C1) (_ bv0 5)) true) ?x5967 (ite (and (distinct ((_ extract 5 3) C1) (_ bv0 3)) true) ?x5524 ?x2380))))
 (let ((?x1726 (ite (and (distinct ((_ extract 13 13) C1) (_ bv0 1)) true) (_ bv13 21) (ite (and (distinct ((_ extract 12 12) C1) (_ bv0 1)) true) (_ bv12 21) (_ bv11 21)))))
 (let ((?x5485 (ite (and (distinct ((_ extract 15 14) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 15 15) C1) (_ bv0 1)) true) (_ bv15 21) (_ bv14 21)) ?x1726)))
 (let ((?x5225 (ite (and (distinct ((_ extract 18 18) C1) (_ bv0 1)) true) (_ bv18 21) (ite (and (distinct ((_ extract 17 17) C1) (_ bv0 1)) true) (_ bv17 21) (_ bv16 21)))))
 (let ((?x1541 (ite (and (distinct ((_ extract 20 19) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 20 20) C1) (_ bv0 1)) true) (_ bv20 21) (_ bv19 21)) ?x5225)))
 (let ((?x2193 (ite (and (distinct ((_ extract 20 11) C1) (_ bv0 10)) true) (ite (and (distinct ((_ extract 20 16) C1) (_ bv0 5)) true) ?x1541 ?x5485) ?x2244)))
 (let ((?x5946 (bvsub ?x2193 ?x2989)))
 (let ((?x2126 (ite (and (distinct ((_ extract 2 2) C1) (_ bv0 1)) true) (_ bv2 32) (ite (and (distinct ((_ extract 1 1) C1) (_ bv0 1)) true) (_ bv1 32) (_ bv0 32)))))
 (let ((?x2510 (ite (and (distinct ((_ extract 5 5) C1) (_ bv0 1)) true) (_ bv5 32) (ite (and (distinct ((_ extract 4 4) C1) (_ bv0 1)) true) (_ bv4 32) (_ bv3 32)))))
 (let ((?x1654 (ite (and (distinct ((_ extract 8 8) C1) (_ bv0 1)) true) (_ bv8 32) (ite (and (distinct ((_ extract 7 7) C1) (_ bv0 1)) true) (_ bv7 32) (_ bv6 32)))))
 (let ((?x1573 (ite (and (distinct ((_ extract 10 9) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) C1) (_ bv0 1)) true) (_ bv10 32) (_ bv9 32)) ?x1654)))
 (let ((?x4848 (ite (and (distinct ((_ extract 10 6) C1) (_ bv0 5)) true) ?x1573 (ite (and (distinct ((_ extract 5 3) C1) (_ bv0 3)) true) ?x2510 ?x2126))))
 (let ((?x2078 (ite (and (distinct ((_ extract 13 13) C1) (_ bv0 1)) true) (_ bv13 32) (ite (and (distinct ((_ extract 12 12) C1) (_ bv0 1)) true) (_ bv12 32) (_ bv11 32)))))
 (let ((?x1428 (ite (and (distinct ((_ extract 15 14) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 15 15) C1) (_ bv0 1)) true) (_ bv15 32) (_ bv14 32)) ?x2078)))
 (let ((?x2245 (ite (and (distinct ((_ extract 18 18) C1) (_ bv0 1)) true) (_ bv18 32) (ite (and (distinct ((_ extract 17 17) C1) (_ bv0 1)) true) (_ bv17 32) (_ bv16 32)))))
 (let ((?x3283 (ite (and (distinct ((_ extract 20 19) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 20 20) C1) (_ bv0 1)) true) (_ bv20 32) (_ bv19 32)) ?x2245)))
 (let ((?x3037 (ite (and (distinct ((_ extract 20 11) C1) (_ bv0 10)) true) (ite (and (distinct ((_ extract 20 16) C1) (_ bv0 5)) true) ?x3283 ?x1428) ?x4848)))
 (let ((?x4733 (ite (and (distinct ((_ extract 2 2) C2) (_ bv0 1)) true) (_ bv2 32) (ite (and (distinct ((_ extract 1 1) C2) (_ bv0 1)) true) (_ bv1 32) (_ bv0 32)))))
 (let ((?x4171 (ite (and (distinct ((_ extract 5 5) C2) (_ bv0 1)) true) (_ bv5 32) (ite (and (distinct ((_ extract 4 4) C2) (_ bv0 1)) true) (_ bv4 32) (_ bv3 32)))))
 (let ((?x3570 (ite (and (distinct ((_ extract 8 8) C2) (_ bv0 1)) true) (_ bv8 32) (ite (and (distinct ((_ extract 7 7) C2) (_ bv0 1)) true) (_ bv7 32) (_ bv6 32)))))
 (let ((?x6595 (ite (and (distinct ((_ extract 10 9) C2) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) C2) (_ bv0 1)) true) (_ bv10 32) (_ bv9 32)) ?x3570)))
 (let ((?x4125 (ite (and (distinct ((_ extract 10 6) C2) (_ bv0 5)) true) ?x6595 (ite (and (distinct ((_ extract 5 3) C2) (_ bv0 3)) true) ?x4171 ?x4733))))
 (and (and (and (distinct C1 (_ bv0 21)) true) (= (bvand C1 (bvsub C1 (_ bv1 21))) (_ bv0 21))) (and (and (distinct C2 (_ bv0 11)) true) (= (bvand C2 (bvsub C2 (_ bv1 11))) (_ bv0 11))) (bvslt ?x4125 ?x3037) (not (bvult ?x5946 (_ bv21 21))))))))))))))))))))))))))))))))))))
(check-sat)
