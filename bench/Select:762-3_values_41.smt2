(set-info :status unknown)
(declare-fun C2 () (_ BitVec 11))
(declare-fun C3 () (_ BitVec 11))
(declare-fun C () (_ BitVec 45))
(declare-fun %Op () (_ BitVec 45))
(assert
 (let ((?x8353 (ite (and (distinct ((_ extract 2 2) (bvsub C3 C2)) (_ bv0 1)) true) (_ bv2 11) (ite (and (distinct ((_ extract 1 1) (bvsub C3 C2)) (_ bv0 1)) true) (_ bv1 11) (_ bv0 11)))))
 (let ((?x12230 (ite (and (distinct ((_ extract 5 5) (bvsub C3 C2)) (_ bv0 1)) true) (_ bv5 11) (ite (and (distinct ((_ extract 4 4) (bvsub C3 C2)) (_ bv0 1)) true) (_ bv4 11) (_ bv3 11)))))
 (let ((?x23276 (ite (and (distinct ((_ extract 8 8) (bvsub C3 C2)) (_ bv0 1)) true) (_ bv8 11) (ite (and (distinct ((_ extract 7 7) (bvsub C3 C2)) (_ bv0 1)) true) (_ bv7 11) (_ bv6 11)))))
 (let ((?x10803 (ite (and (distinct ((_ extract 10 9) (bvsub C3 C2)) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) (bvsub C3 C2)) (_ bv0 1)) true) (_ bv10 11) (_ bv9 11)) ?x23276)))
 (let ((?x1948 (ite (and (distinct ((_ extract 10 6) (bvsub C3 C2)) (_ bv0 5)) true) ?x10803 (ite (and (distinct ((_ extract 5 3) (bvsub C3 C2)) (_ bv0 3)) true) ?x12230 ?x8353))))
 (let ((?x10620 (ite (and (distinct ((_ extract 2 2) C) (_ bv0 1)) true) (_ bv2 11) (ite (and (distinct ((_ extract 1 1) C) (_ bv0 1)) true) (_ bv1 11) (_ bv0 11)))))
 (let ((?x2403 (ite (and (distinct ((_ extract 5 5) C) (_ bv0 1)) true) (_ bv5 11) (ite (and (distinct ((_ extract 4 4) C) (_ bv0 1)) true) (_ bv4 11) (_ bv3 11)))))
 (let ((?x4808 (ite (and (distinct ((_ extract 8 8) C) (_ bv0 1)) true) (_ bv8 11) (ite (and (distinct ((_ extract 7 7) C) (_ bv0 1)) true) (_ bv7 11) (_ bv6 11)))))
 (let ((?x16181 (ite (and (distinct ((_ extract 11 11) C) (_ bv0 1)) true) (_ bv11 11) (ite (and (distinct ((_ extract 10 10) C) (_ bv0 1)) true) (_ bv10 11) (_ bv9 11)))))
 (let ((?x7042 (ite (and (distinct ((_ extract 11 6) C) (_ bv0 6)) true) (ite (and (distinct ((_ extract 11 9) C) (_ bv0 3)) true) ?x16181 ?x4808) (ite (and (distinct ((_ extract 5 3) C) (_ bv0 3)) true) ?x2403 ?x10620))))
 (let ((?x2707 (ite (and (distinct ((_ extract 14 14) C) (_ bv0 1)) true) (_ bv14 11) (ite (and (distinct ((_ extract 13 13) C) (_ bv0 1)) true) (_ bv13 11) (_ bv12 11)))))
 (let ((?x6265 (ite (and (distinct ((_ extract 17 17) C) (_ bv0 1)) true) (_ bv17 11) (ite (and (distinct ((_ extract 16 16) C) (_ bv0 1)) true) (_ bv16 11) (_ bv15 11)))))
 (let ((?x4453 (ite (and (distinct ((_ extract 20 20) C) (_ bv0 1)) true) (_ bv20 11) (ite (and (distinct ((_ extract 19 19) C) (_ bv0 1)) true) (_ bv19 11) (_ bv18 11)))))
 (let ((?x10462 (ite (and (distinct ((_ extract 22 21) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 22 22) C) (_ bv0 1)) true) (_ bv22 11) (_ bv21 11)) ?x4453)))
 (let ((?x17147 (ite (and (distinct ((_ extract 22 18) C) (_ bv0 5)) true) ?x10462 (ite (and (distinct ((_ extract 17 15) C) (_ bv0 3)) true) ?x6265 ?x2707))))
 (let ((?x15986 (ite (and (distinct ((_ extract 25 25) C) (_ bv0 1)) true) (_ bv25 11) (ite (and (distinct ((_ extract 24 24) C) (_ bv0 1)) true) (_ bv24 11) (_ bv23 11)))))
 (let ((?x1092 (ite (and (distinct ((_ extract 28 28) C) (_ bv0 1)) true) (_ bv28 11) (ite (and (distinct ((_ extract 27 27) C) (_ bv0 1)) true) (_ bv27 11) (_ bv26 11)))))
 (let ((?x12605 (ite (and (distinct ((_ extract 31 31) C) (_ bv0 1)) true) (_ bv31 11) (ite (and (distinct ((_ extract 30 30) C) (_ bv0 1)) true) (_ bv30 11) (_ bv29 11)))))
 (let ((?x14268 (ite (and (distinct ((_ extract 33 32) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 33 33) C) (_ bv0 1)) true) (_ bv33 11) (_ bv32 11)) ?x12605)))
 (let ((?x8356 (ite (and (distinct ((_ extract 33 29) C) (_ bv0 5)) true) ?x14268 (ite (and (distinct ((_ extract 28 26) C) (_ bv0 3)) true) ?x1092 ?x15986))))
 (let ((?x7908 (ite (and (distinct ((_ extract 36 36) C) (_ bv0 1)) true) (_ bv36 11) (ite (and (distinct ((_ extract 35 35) C) (_ bv0 1)) true) (_ bv35 11) (_ bv34 11)))))
 (let ((?x17980 (ite (and (distinct ((_ extract 39 39) C) (_ bv0 1)) true) (_ bv39 11) (ite (and (distinct ((_ extract 38 38) C) (_ bv0 1)) true) (_ bv38 11) (_ bv37 11)))))
 (let ((?x3149 (ite (and (distinct ((_ extract 42 42) C) (_ bv0 1)) true) (_ bv42 11) (ite (and (distinct ((_ extract 41 41) C) (_ bv0 1)) true) (_ bv41 11) (_ bv40 11)))))
 (let ((?x11634 (ite (and (distinct ((_ extract 44 43) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 44 44) C) (_ bv0 1)) true) (_ bv44 11) (_ bv43 11)) ?x3149)))
 (let ((?x2282 (ite (and (distinct ((_ extract 44 40) C) (_ bv0 5)) true) ?x11634 (ite (and (distinct ((_ extract 39 37) C) (_ bv0 3)) true) ?x17980 ?x7908))))
 (let ((?x9399 (ite (and (distinct ((_ extract 44 23) C) (_ bv0 22)) true) (ite (and (distinct ((_ extract 44 34) C) (_ bv0 11)) true) ?x2282 ?x8356) (ite (and (distinct ((_ extract 22 12) C) (_ bv0 11)) true) ?x17147 ?x7042))))
 (let ((?x6431 (bvsub ?x9399 ?x1948)))
 (let ((?x18006 (ite (bvsgt (_ bv0 11) ?x6431) (_ bv0 11) ?x6431)))
 (let ((?x14890 (bvsub ?x1948 ?x9399)))
 (let ((?x7480 (ite (bvsgt (_ bv0 11) ?x14890) (_ bv0 11) ?x14890)))
 (let (($x6720 (and (distinct (ite (= (ite (= (bvand %Op C) (_ bv0 45)) (_ bv1 1) (_ bv0 1)) (_ bv1 1)) C2 C3) (bvadd (bvlshr (bvshl ((_ extract 10 0) (bvand %Op C)) ?x7480) ?x18006) C2)) true)))
 (let ((?x19595 (ite (and (distinct ((_ extract 2 2) C) (_ bv0 1)) true) (_ bv2 32) (ite (and (distinct ((_ extract 1 1) C) (_ bv0 1)) true) (_ bv1 32) (_ bv0 32)))))
 (let ((?x17959 (ite (and (distinct ((_ extract 5 5) C) (_ bv0 1)) true) (_ bv5 32) (ite (and (distinct ((_ extract 4 4) C) (_ bv0 1)) true) (_ bv4 32) (_ bv3 32)))))
 (let ((?x16593 (ite (and (distinct ((_ extract 8 8) C) (_ bv0 1)) true) (_ bv8 32) (ite (and (distinct ((_ extract 7 7) C) (_ bv0 1)) true) (_ bv7 32) (_ bv6 32)))))
 (let ((?x12396 (ite (and (distinct ((_ extract 11 11) C) (_ bv0 1)) true) (_ bv11 32) (ite (and (distinct ((_ extract 10 10) C) (_ bv0 1)) true) (_ bv10 32) (_ bv9 32)))))
 (let ((?x21813 (ite (and (distinct ((_ extract 11 6) C) (_ bv0 6)) true) (ite (and (distinct ((_ extract 11 9) C) (_ bv0 3)) true) ?x12396 ?x16593) (ite (and (distinct ((_ extract 5 3) C) (_ bv0 3)) true) ?x17959 ?x19595))))
 (let ((?x11121 (ite (and (distinct ((_ extract 14 14) C) (_ bv0 1)) true) (_ bv14 32) (ite (and (distinct ((_ extract 13 13) C) (_ bv0 1)) true) (_ bv13 32) (_ bv12 32)))))
 (let ((?x9320 (ite (and (distinct ((_ extract 17 17) C) (_ bv0 1)) true) (_ bv17 32) (ite (and (distinct ((_ extract 16 16) C) (_ bv0 1)) true) (_ bv16 32) (_ bv15 32)))))
 (let ((?x7764 (ite (and (distinct ((_ extract 20 20) C) (_ bv0 1)) true) (_ bv20 32) (ite (and (distinct ((_ extract 19 19) C) (_ bv0 1)) true) (_ bv19 32) (_ bv18 32)))))
 (let ((?x7629 (ite (and (distinct ((_ extract 22 21) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 22 22) C) (_ bv0 1)) true) (_ bv22 32) (_ bv21 32)) ?x7764)))
 (let ((?x11605 (ite (and (distinct ((_ extract 22 18) C) (_ bv0 5)) true) ?x7629 (ite (and (distinct ((_ extract 17 15) C) (_ bv0 3)) true) ?x9320 ?x11121))))
 (let ((?x5306 (ite (and (distinct ((_ extract 25 25) C) (_ bv0 1)) true) (_ bv25 32) (ite (and (distinct ((_ extract 24 24) C) (_ bv0 1)) true) (_ bv24 32) (_ bv23 32)))))
 (let ((?x1912 (ite (and (distinct ((_ extract 28 28) C) (_ bv0 1)) true) (_ bv28 32) (ite (and (distinct ((_ extract 27 27) C) (_ bv0 1)) true) (_ bv27 32) (_ bv26 32)))))
 (let ((?x2111 (ite (and (distinct ((_ extract 31 31) C) (_ bv0 1)) true) (_ bv31 32) (ite (and (distinct ((_ extract 30 30) C) (_ bv0 1)) true) (_ bv30 32) (_ bv29 32)))))
 (let ((?x18159 (ite (and (distinct ((_ extract 33 32) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 33 33) C) (_ bv0 1)) true) (_ bv33 32) (_ bv32 32)) ?x2111)))
 (let ((?x4368 (ite (and (distinct ((_ extract 33 29) C) (_ bv0 5)) true) ?x18159 (ite (and (distinct ((_ extract 28 26) C) (_ bv0 3)) true) ?x1912 ?x5306))))
 (let ((?x14705 (ite (and (distinct ((_ extract 36 36) C) (_ bv0 1)) true) (_ bv36 32) (ite (and (distinct ((_ extract 35 35) C) (_ bv0 1)) true) (_ bv35 32) (_ bv34 32)))))
 (let ((?x10248 (ite (and (distinct ((_ extract 39 39) C) (_ bv0 1)) true) (_ bv39 32) (ite (and (distinct ((_ extract 38 38) C) (_ bv0 1)) true) (_ bv38 32) (_ bv37 32)))))
 (let ((?x9502 (ite (and (distinct ((_ extract 42 42) C) (_ bv0 1)) true) (_ bv42 32) (ite (and (distinct ((_ extract 41 41) C) (_ bv0 1)) true) (_ bv41 32) (_ bv40 32)))))
 (let ((?x4503 (ite (and (distinct ((_ extract 44 43) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 44 44) C) (_ bv0 1)) true) (_ bv44 32) (_ bv43 32)) ?x9502)))
 (let ((?x14999 (ite (and (distinct ((_ extract 44 40) C) (_ bv0 5)) true) ?x4503 (ite (and (distinct ((_ extract 39 37) C) (_ bv0 3)) true) ?x10248 ?x14705))))
 (let ((?x20731 (ite (and (distinct ((_ extract 44 23) C) (_ bv0 22)) true) (ite (and (distinct ((_ extract 44 34) C) (_ bv0 11)) true) ?x14999 ?x4368) (ite (and (distinct ((_ extract 22 12) C) (_ bv0 11)) true) ?x11605 ?x21813))))
 (let (($x8366 (and (and (distinct (bvsub C3 C2) (_ bv0 11)) true) (= (bvand (bvsub C3 C2) (bvsub (bvsub C3 C2) (_ bv1 11))) (_ bv0 11)))))
 (and (and (and (distinct C (_ bv0 45)) true) (= (bvand C (bvsub C (_ bv1 45))) (_ bv0 45))) $x8366 (bvslt ?x20731 (_ bv11 32)) $x6720)))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
