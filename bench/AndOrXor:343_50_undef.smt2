(set-info :source |
 Generated by Alive 0.1
 More info in N. P. Lopes, D. Menendez, S. Nagarakatte, J. Regehr.
 Provably Correct Peephole Optimizations with Alive. In PLDI'15.
|)

(set-info :status unknown)
(declare-fun |ana_MaskedValueIsZero(%B, ((1 << (width(C2) - countLeadingZeros(((C2 - 1) ^ C2)))) - 1))| () (_ BitVec 1))
(declare-fun C2 () (_ BitVec 52))
(declare-fun C1 () (_ BitVec 52))
(declare-fun %B () (_ BitVec 52))
(assert
 (let (($x64669 (= |ana_MaskedValueIsZero(%B, ((1 << (width(C2) - countLeadingZeros(((C2 - 1) ^ C2)))) - 1))| (_ bv1 1))))
 (let ((?x22403 (bvsub C2 (_ bv1 52))))
 (let ((?x67917 (bvor ?x22403 C2)))
 (let (($x77594 (and (and (distinct ?x67917 (_ bv0 52)) true) (= (bvand (bvadd ?x67917 (_ bv1 52)) ?x67917) (_ bv0 52)) $x64669)))
 (let (($x68929 (or (= (bvand (bvadd C2 (_ bv1 52)) (bvsub (bvadd C2 (_ bv1 52)) (_ bv1 52))) (_ bv0 52)) $x77594)))
 (let ((?x45564 (bvand C1 C2)))
 (let (($x77611 (= ?x45564 C2)))
 (let ((?x74740 (ite (= ((_ extract 1 1) (bvxor ?x22403 C2)) (_ bv1 1)) (_ bv50 52) (ite (= ((_ extract 0 0) (bvxor ?x22403 C2)) (_ bv1 1)) (_ bv51 52) (_ bv52 52)))))
 (let ((?x69902 (ite (= ((_ extract 3 3) (bvxor ?x22403 C2)) (_ bv1 1)) (_ bv48 52) (ite (= ((_ extract 2 2) (bvxor ?x22403 C2)) (_ bv1 1)) (_ bv49 52) ?x74740))))
 (let ((?x77217 (ite (= ((_ extract 5 5) (bvxor ?x22403 C2)) (_ bv1 1)) (_ bv46 52) (ite (= ((_ extract 4 4) (bvxor ?x22403 C2)) (_ bv1 1)) (_ bv47 52) ?x69902))))
 (let ((?x72065 (ite (= ((_ extract 7 7) (bvxor ?x22403 C2)) (_ bv1 1)) (_ bv44 52) (ite (= ((_ extract 6 6) (bvxor ?x22403 C2)) (_ bv1 1)) (_ bv45 52) ?x77217))))
 (let ((?x67667 (ite (= ((_ extract 9 9) (bvxor ?x22403 C2)) (_ bv1 1)) (_ bv42 52) (ite (= ((_ extract 8 8) (bvxor ?x22403 C2)) (_ bv1 1)) (_ bv43 52) ?x72065))))
 (let ((?x77069 (ite (= ((_ extract 11 11) (bvxor ?x22403 C2)) (_ bv1 1)) (_ bv40 52) (ite (= ((_ extract 10 10) (bvxor ?x22403 C2)) (_ bv1 1)) (_ bv41 52) ?x67667))))
 (let ((?x73247 (ite (= ((_ extract 13 13) (bvxor ?x22403 C2)) (_ bv1 1)) (_ bv38 52) (ite (= ((_ extract 12 12) (bvxor ?x22403 C2)) (_ bv1 1)) (_ bv39 52) ?x77069))))
 (let ((?x71164 (ite (= ((_ extract 15 15) (bvxor ?x22403 C2)) (_ bv1 1)) (_ bv36 52) (ite (= ((_ extract 14 14) (bvxor ?x22403 C2)) (_ bv1 1)) (_ bv37 52) ?x73247))))
 (let ((?x75991 (ite (= ((_ extract 17 17) (bvxor ?x22403 C2)) (_ bv1 1)) (_ bv34 52) (ite (= ((_ extract 16 16) (bvxor ?x22403 C2)) (_ bv1 1)) (_ bv35 52) ?x71164))))
 (let ((?x75041 (ite (= ((_ extract 19 19) (bvxor ?x22403 C2)) (_ bv1 1)) (_ bv32 52) (ite (= ((_ extract 18 18) (bvxor ?x22403 C2)) (_ bv1 1)) (_ bv33 52) ?x75991))))
 (let ((?x76226 (ite (= ((_ extract 21 21) (bvxor ?x22403 C2)) (_ bv1 1)) (_ bv30 52) (ite (= ((_ extract 20 20) (bvxor ?x22403 C2)) (_ bv1 1)) (_ bv31 52) ?x75041))))
 (let ((?x72016 (ite (= ((_ extract 23 23) (bvxor ?x22403 C2)) (_ bv1 1)) (_ bv28 52) (ite (= ((_ extract 22 22) (bvxor ?x22403 C2)) (_ bv1 1)) (_ bv29 52) ?x76226))))
 (let ((?x77084 (ite (= ((_ extract 25 25) (bvxor ?x22403 C2)) (_ bv1 1)) (_ bv26 52) (ite (= ((_ extract 24 24) (bvxor ?x22403 C2)) (_ bv1 1)) (_ bv27 52) ?x72016))))
 (let ((?x77799 (ite (= ((_ extract 27 27) (bvxor ?x22403 C2)) (_ bv1 1)) (_ bv24 52) (ite (= ((_ extract 26 26) (bvxor ?x22403 C2)) (_ bv1 1)) (_ bv25 52) ?x77084))))
 (let ((?x77043 (ite (= ((_ extract 29 29) (bvxor ?x22403 C2)) (_ bv1 1)) (_ bv22 52) (ite (= ((_ extract 28 28) (bvxor ?x22403 C2)) (_ bv1 1)) (_ bv23 52) ?x77799))))
 (let ((?x73209 (ite (= ((_ extract 31 31) (bvxor ?x22403 C2)) (_ bv1 1)) (_ bv20 52) (ite (= ((_ extract 30 30) (bvxor ?x22403 C2)) (_ bv1 1)) (_ bv21 52) ?x77043))))
 (let ((?x78132 (ite (= ((_ extract 33 33) (bvxor ?x22403 C2)) (_ bv1 1)) (_ bv18 52) (ite (= ((_ extract 32 32) (bvxor ?x22403 C2)) (_ bv1 1)) (_ bv19 52) ?x73209))))
 (let ((?x73950 (ite (= ((_ extract 35 35) (bvxor ?x22403 C2)) (_ bv1 1)) (_ bv16 52) (ite (= ((_ extract 34 34) (bvxor ?x22403 C2)) (_ bv1 1)) (_ bv17 52) ?x78132))))
 (let ((?x75552 (ite (= ((_ extract 37 37) (bvxor ?x22403 C2)) (_ bv1 1)) (_ bv14 52) (ite (= ((_ extract 36 36) (bvxor ?x22403 C2)) (_ bv1 1)) (_ bv15 52) ?x73950))))
 (let ((?x76792 (ite (= ((_ extract 39 39) (bvxor ?x22403 C2)) (_ bv1 1)) (_ bv12 52) (ite (= ((_ extract 38 38) (bvxor ?x22403 C2)) (_ bv1 1)) (_ bv13 52) ?x75552))))
 (let ((?x75635 (ite (= ((_ extract 41 41) (bvxor ?x22403 C2)) (_ bv1 1)) (_ bv10 52) (ite (= ((_ extract 40 40) (bvxor ?x22403 C2)) (_ bv1 1)) (_ bv11 52) ?x76792))))
 (let ((?x76153 (ite (= ((_ extract 43 43) (bvxor ?x22403 C2)) (_ bv1 1)) (_ bv8 52) (ite (= ((_ extract 42 42) (bvxor ?x22403 C2)) (_ bv1 1)) (_ bv9 52) ?x75635))))
 (let ((?x77199 (ite (= ((_ extract 45 45) (bvxor ?x22403 C2)) (_ bv1 1)) (_ bv6 52) (ite (= ((_ extract 44 44) (bvxor ?x22403 C2)) (_ bv1 1)) (_ bv7 52) ?x76153))))
 (let ((?x75571 (ite (= ((_ extract 47 47) (bvxor ?x22403 C2)) (_ bv1 1)) (_ bv4 52) (ite (= ((_ extract 46 46) (bvxor ?x22403 C2)) (_ bv1 1)) (_ bv5 52) ?x77199))))
 (let ((?x73105 (ite (= ((_ extract 49 49) (bvxor ?x22403 C2)) (_ bv1 1)) (_ bv2 52) (ite (= ((_ extract 48 48) (bvxor ?x22403 C2)) (_ bv1 1)) (_ bv3 52) ?x75571))))
 (let ((?x65119 (ite (= ((_ extract 51 51) (bvxor ?x22403 C2)) (_ bv1 1)) (_ bv0 52) (ite (= ((_ extract 50 50) (bvxor ?x22403 C2)) (_ bv1 1)) (_ bv1 52) ?x73105))))
 (let (($x74123 (=> $x64669 (= (bvand %B (bvsub (bvshl (_ bv1 52) (bvsub (_ bv52 52) ?x65119)) (_ bv1 52))) (_ bv0 52)))))
 (and $x74123 $x77611 $x68929 false))))))))))))))))))))))))))))))))))))
(check-sat)
