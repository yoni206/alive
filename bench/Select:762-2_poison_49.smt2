(set-info :status unknown)
(declare-fun C () (_ BitVec 53))
(declare-fun C3 () (_ BitVec 11))
(declare-fun C2 () (_ BitVec 11))
(assert
 (let ((?x4891 (ite (and (distinct ((_ extract 3 2) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 3 3) C) (_ bv0 1)) true) (_ bv3 32) (_ bv2 32)) (ite (and (distinct ((_ extract 1 1) C) (_ bv0 1)) true) (_ bv1 32) (_ bv0 32)))))
 (let ((?x6016 (ite (and (distinct ((_ extract 6 6) C) (_ bv0 1)) true) (_ bv6 32) (ite (and (distinct ((_ extract 5 5) C) (_ bv0 1)) true) (_ bv5 32) (_ bv4 32)))))
 (let ((?x8356 (ite (and (distinct ((_ extract 10 9) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) C) (_ bv0 1)) true) (_ bv10 32) (_ bv9 32)) (ite (and (distinct ((_ extract 8 8) C) (_ bv0 1)) true) (_ bv8 32) (_ bv7 32)))))
 (let ((?x7561 (ite (and (distinct ((_ extract 13 13) C) (_ bv0 1)) true) (_ bv13 32) (ite (and (distinct ((_ extract 12 12) C) (_ bv0 1)) true) (_ bv12 32) (_ bv11 32)))))
 (let ((?x4458 (ite (and (distinct ((_ extract 13 7) C) (_ bv0 7)) true) (ite (and (distinct ((_ extract 13 11) C) (_ bv0 3)) true) ?x7561 ?x8356) (ite (and (distinct ((_ extract 6 4) C) (_ bv0 3)) true) ?x6016 ?x4891))))
 (let ((?x6567 (ite (and (distinct ((_ extract 17 16) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 17 17) C) (_ bv0 1)) true) (_ bv17 32) (_ bv16 32)) (ite (and (distinct ((_ extract 15 15) C) (_ bv0 1)) true) (_ bv15 32) (_ bv14 32)))))
 (let ((?x6261 (ite (and (distinct ((_ extract 20 20) C) (_ bv0 1)) true) (_ bv20 32) (ite (and (distinct ((_ extract 19 19) C) (_ bv0 1)) true) (_ bv19 32) (_ bv18 32)))))
 (let ((?x4563 (ite (and (distinct ((_ extract 23 23) C) (_ bv0 1)) true) (_ bv23 32) (ite (and (distinct ((_ extract 22 22) C) (_ bv0 1)) true) (_ bv22 32) (_ bv21 32)))))
 (let ((?x4248 (ite (and (distinct ((_ extract 26 26) C) (_ bv0 1)) true) (_ bv26 32) (ite (and (distinct ((_ extract 25 25) C) (_ bv0 1)) true) (_ bv25 32) (_ bv24 32)))))
 (let ((?x6905 (ite (and (distinct ((_ extract 26 21) C) (_ bv0 6)) true) (ite (and (distinct ((_ extract 26 24) C) (_ bv0 3)) true) ?x4248 ?x4563) (ite (and (distinct ((_ extract 20 18) C) (_ bv0 3)) true) ?x6261 ?x6567))))
 (let ((?x6564 (ite (and (distinct ((_ extract 30 29) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 30 30) C) (_ bv0 1)) true) (_ bv30 32) (_ bv29 32)) (ite (and (distinct ((_ extract 28 28) C) (_ bv0 1)) true) (_ bv28 32) (_ bv27 32)))))
 (let ((?x7425 (ite (and (distinct ((_ extract 33 33) C) (_ bv0 1)) true) (_ bv33 32) (ite (and (distinct ((_ extract 32 32) C) (_ bv0 1)) true) (_ bv32 32) (_ bv31 32)))))
 (let ((?x1639 (ite (and (distinct ((_ extract 36 36) C) (_ bv0 1)) true) (_ bv36 32) (ite (and (distinct ((_ extract 35 35) C) (_ bv0 1)) true) (_ bv35 32) (_ bv34 32)))))
 (let ((?x1488 (ite (and (distinct ((_ extract 39 39) C) (_ bv0 1)) true) (_ bv39 32) (ite (and (distinct ((_ extract 38 38) C) (_ bv0 1)) true) (_ bv38 32) (_ bv37 32)))))
 (let ((?x1201 (ite (and (distinct ((_ extract 39 34) C) (_ bv0 6)) true) (ite (and (distinct ((_ extract 39 37) C) (_ bv0 3)) true) ?x1488 ?x1639) (ite (and (distinct ((_ extract 33 31) C) (_ bv0 3)) true) ?x7425 ?x6564))))
 (let ((?x6052 (ite (and (distinct ((_ extract 43 42) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 43 43) C) (_ bv0 1)) true) (_ bv43 32) (_ bv42 32)) (ite (and (distinct ((_ extract 41 41) C) (_ bv0 1)) true) (_ bv41 32) (_ bv40 32)))))
 (let ((?x5650 (ite (and (distinct ((_ extract 46 46) C) (_ bv0 1)) true) (_ bv46 32) (ite (and (distinct ((_ extract 45 45) C) (_ bv0 1)) true) (_ bv45 32) (_ bv44 32)))))
 (let ((?x4873 (ite (and (distinct ((_ extract 49 49) C) (_ bv0 1)) true) (_ bv49 32) (ite (and (distinct ((_ extract 48 48) C) (_ bv0 1)) true) (_ bv48 32) (_ bv47 32)))))
 (let ((?x4691 (ite (and (distinct ((_ extract 52 52) C) (_ bv0 1)) true) (_ bv52 32) (ite (and (distinct ((_ extract 51 51) C) (_ bv0 1)) true) (_ bv51 32) (_ bv50 32)))))
 (let ((?x6394 (ite (and (distinct ((_ extract 52 47) C) (_ bv0 6)) true) (ite (and (distinct ((_ extract 52 50) C) (_ bv0 3)) true) ?x4691 ?x4873) (ite (and (distinct ((_ extract 46 44) C) (_ bv0 3)) true) ?x5650 ?x6052))))
 (let ((?x2445 (ite (and (distinct ((_ extract 52 27) C) (_ bv0 26)) true) (ite (and (distinct ((_ extract 52 40) C) (_ bv0 13)) true) ?x6394 ?x1201) (ite (and (distinct ((_ extract 26 14) C) (_ bv0 13)) true) ?x6905 ?x4458))))
 (let (($x4159 (and (and (distinct (bvsub C2 C3) (_ bv0 11)) true) (= (bvand (bvsub C2 C3) (bvsub (bvsub C2 C3) (_ bv1 11))) (_ bv0 11)))))
 (and (and (and (distinct C (_ bv0 53)) true) (= (bvand C (bvsub C (_ bv1 53))) (_ bv0 53))) $x4159 (bvslt ?x2445 (_ bv11 32)) false))))))))))))))))))))))))
(check-sat)
