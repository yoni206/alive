(set-info :status unknown)
(declare-fun %Y () (_ BitVec 11))
(declare-fun C2 () (_ BitVec 11))
(declare-fun C1 () (_ BitVec 19))
(declare-fun %X () (_ BitVec 19))
(assert
 (let ((?x6215 (ite (and (distinct ((_ extract 2 2) C2) (_ bv0 1)) true) (_ bv2 19) (ite (and (distinct ((_ extract 1 1) C2) (_ bv0 1)) true) (_ bv1 19) (_ bv0 19)))))
 (let ((?x7410 (ite (and (distinct ((_ extract 5 5) C2) (_ bv0 1)) true) (_ bv5 19) (ite (and (distinct ((_ extract 4 4) C2) (_ bv0 1)) true) (_ bv4 19) (_ bv3 19)))))
 (let ((?x3310 (ite (and (distinct ((_ extract 8 8) C2) (_ bv0 1)) true) (_ bv8 19) (ite (and (distinct ((_ extract 7 7) C2) (_ bv0 1)) true) (_ bv7 19) (_ bv6 19)))))
 (let ((?x22926 (ite (and (distinct ((_ extract 10 9) C2) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) C2) (_ bv0 1)) true) (_ bv10 19) (_ bv9 19)) ?x3310)))
 (let ((?x3525 (ite (and (distinct ((_ extract 10 6) C2) (_ bv0 5)) true) ?x22926 (ite (and (distinct ((_ extract 5 3) C2) (_ bv0 3)) true) ?x7410 ?x6215))))
 (let ((?x705 (ite (and (distinct ((_ extract 2 2) C1) (_ bv0 1)) true) (_ bv2 19) (ite (and (distinct ((_ extract 1 1) C1) (_ bv0 1)) true) (_ bv1 19) (_ bv0 19)))))
 (let ((?x9137 (ite (and (distinct ((_ extract 4 3) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 4 4) C1) (_ bv0 1)) true) (_ bv4 19) (_ bv3 19)) ?x705)))
 (let ((?x23961 (ite (and (distinct ((_ extract 7 7) C1) (_ bv0 1)) true) (_ bv7 19) (ite (and (distinct ((_ extract 6 6) C1) (_ bv0 1)) true) (_ bv6 19) (_ bv5 19)))))
 (let ((?x1753 (ite (and (distinct ((_ extract 9 8) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 9 9) C1) (_ bv0 1)) true) (_ bv9 19) (_ bv8 19)) ?x23961)))
 (let ((?x16061 (ite (and (distinct ((_ extract 12 12) C1) (_ bv0 1)) true) (_ bv12 19) (ite (and (distinct ((_ extract 11 11) C1) (_ bv0 1)) true) (_ bv11 19) (_ bv10 19)))))
 (let ((?x4325 (ite (and (distinct ((_ extract 14 13) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 14 14) C1) (_ bv0 1)) true) (_ bv14 19) (_ bv13 19)) ?x16061)))
 (let ((?x10584 (ite (and (distinct ((_ extract 18 17) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 18 18) C1) (_ bv0 1)) true) (_ bv18 19) (_ bv17 19)) (ite (and (distinct ((_ extract 16 16) C1) (_ bv0 1)) true) (_ bv16 19) (_ bv15 19)))))
 (let ((?x11895 (ite (and (distinct ((_ extract 18 10) C1) (_ bv0 9)) true) (ite (and (distinct ((_ extract 18 15) C1) (_ bv0 4)) true) ?x10584 ?x4325) (ite (and (distinct ((_ extract 9 5) C1) (_ bv0 5)) true) ?x1753 ?x9137))))
 (let ((?x1700 (bvsub ?x11895 ?x3525)))
 (let ((?x11114 (bvand %X C1)))
 (let (($x10221 (and (distinct (ite (= (ite (= ?x11114 (_ bv0 19)) (_ bv1 1) (_ bv0 1)) (_ bv1 1)) %Y (bvor %Y C2)) (bvor ((_ extract 10 0) (bvlshr ?x11114 ?x1700)) %Y)) true)))
 (let ((?x8117 (ite (and (distinct ((_ extract 2 2) C1) (_ bv0 1)) true) (_ bv2 32) (ite (and (distinct ((_ extract 1 1) C1) (_ bv0 1)) true) (_ bv1 32) (_ bv0 32)))))
 (let ((?x7252 (ite (and (distinct ((_ extract 4 3) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 4 4) C1) (_ bv0 1)) true) (_ bv4 32) (_ bv3 32)) ?x8117)))
 (let ((?x9014 (ite (and (distinct ((_ extract 7 7) C1) (_ bv0 1)) true) (_ bv7 32) (ite (and (distinct ((_ extract 6 6) C1) (_ bv0 1)) true) (_ bv6 32) (_ bv5 32)))))
 (let ((?x8440 (ite (and (distinct ((_ extract 9 8) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 9 9) C1) (_ bv0 1)) true) (_ bv9 32) (_ bv8 32)) ?x9014)))
 (let ((?x23069 (ite (and (distinct ((_ extract 12 12) C1) (_ bv0 1)) true) (_ bv12 32) (ite (and (distinct ((_ extract 11 11) C1) (_ bv0 1)) true) (_ bv11 32) (_ bv10 32)))))
 (let ((?x14387 (ite (and (distinct ((_ extract 14 13) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 14 14) C1) (_ bv0 1)) true) (_ bv14 32) (_ bv13 32)) ?x23069)))
 (let ((?x6350 (ite (and (distinct ((_ extract 18 17) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 18 18) C1) (_ bv0 1)) true) (_ bv18 32) (_ bv17 32)) (ite (and (distinct ((_ extract 16 16) C1) (_ bv0 1)) true) (_ bv16 32) (_ bv15 32)))))
 (let ((?x22768 (ite (and (distinct ((_ extract 18 10) C1) (_ bv0 9)) true) (ite (and (distinct ((_ extract 18 15) C1) (_ bv0 4)) true) ?x6350 ?x14387) (ite (and (distinct ((_ extract 9 5) C1) (_ bv0 5)) true) ?x8440 ?x7252))))
 (let ((?x19906 (ite (and (distinct ((_ extract 2 2) C2) (_ bv0 1)) true) (_ bv2 32) (ite (and (distinct ((_ extract 1 1) C2) (_ bv0 1)) true) (_ bv1 32) (_ bv0 32)))))
 (let ((?x5338 (ite (and (distinct ((_ extract 5 5) C2) (_ bv0 1)) true) (_ bv5 32) (ite (and (distinct ((_ extract 4 4) C2) (_ bv0 1)) true) (_ bv4 32) (_ bv3 32)))))
 (let ((?x24573 (ite (and (distinct ((_ extract 8 8) C2) (_ bv0 1)) true) (_ bv8 32) (ite (and (distinct ((_ extract 7 7) C2) (_ bv0 1)) true) (_ bv7 32) (_ bv6 32)))))
 (let ((?x15522 (ite (and (distinct ((_ extract 10 9) C2) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) C2) (_ bv0 1)) true) (_ bv10 32) (_ bv9 32)) ?x24573)))
 (let ((?x12619 (ite (and (distinct ((_ extract 10 6) C2) (_ bv0 5)) true) ?x15522 (ite (and (distinct ((_ extract 5 3) C2) (_ bv0 3)) true) ?x5338 ?x19906))))
 (and (and (and (distinct C1 (_ bv0 19)) true) (= (bvand C1 (bvsub C1 (_ bv1 19))) (_ bv0 19))) (and (and (distinct C2 (_ bv0 11)) true) (= (bvand C2 (bvsub C2 (_ bv1 11))) (_ bv0 11))) (bvslt ?x12619 ?x22768) $x10221)))))))))))))))))))))))))))))))
(check-sat)
