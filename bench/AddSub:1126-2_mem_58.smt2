(set-info :status unknown)
(declare-fun mem0 () (_ BitVec 8))
(declare-fun |ana_MaskedValueIsZero(%Y, (-1 << (log2(C2) + 1)))| () (_ BitVec 1))
(declare-fun C2 () (_ BitVec 63))
(declare-fun C1 () (_ BitVec 63))
(declare-fun %Y () (_ BitVec 63))
(assert
 (let (($x3027 (= |ana_MaskedValueIsZero(%Y, (-1 << (log2(C2) + 1)))| (_ bv1 1))))
 (let ((?x10683 (ite (and (distinct ((_ extract 3 2) C2) (_ bv0 2)) true) (ite (and (distinct ((_ extract 3 3) C2) (_ bv0 1)) true) (_ bv3 63) (_ bv2 63)) (ite (and (distinct ((_ extract 1 1) C2) (_ bv0 1)) true) (_ bv1 63) (_ bv0 63)))))
 (let ((?x11552 (ite (and (distinct ((_ extract 7 6) C2) (_ bv0 2)) true) (ite (and (distinct ((_ extract 7 7) C2) (_ bv0 1)) true) (_ bv7 63) (_ bv6 63)) (ite (and (distinct ((_ extract 5 5) C2) (_ bv0 1)) true) (_ bv5 63) (_ bv4 63)))))
 (let ((?x7976 (ite (and (distinct ((_ extract 11 10) C2) (_ bv0 2)) true) (ite (and (distinct ((_ extract 11 11) C2) (_ bv0 1)) true) (_ bv11 63) (_ bv10 63)) (ite (and (distinct ((_ extract 9 9) C2) (_ bv0 1)) true) (_ bv9 63) (_ bv8 63)))))
 (let ((?x2750 (ite (and (distinct ((_ extract 15 14) C2) (_ bv0 2)) true) (ite (and (distinct ((_ extract 15 15) C2) (_ bv0 1)) true) (_ bv15 63) (_ bv14 63)) (ite (and (distinct ((_ extract 13 13) C2) (_ bv0 1)) true) (_ bv13 63) (_ bv12 63)))))
 (let ((?x2911 (ite (and (distinct ((_ extract 15 8) C2) (_ bv0 8)) true) (ite (and (distinct ((_ extract 15 12) C2) (_ bv0 4)) true) ?x2750 ?x7976) (ite (and (distinct ((_ extract 7 4) C2) (_ bv0 4)) true) ?x11552 ?x10683))))
 (let ((?x8445 (ite (and (distinct ((_ extract 19 18) C2) (_ bv0 2)) true) (ite (and (distinct ((_ extract 19 19) C2) (_ bv0 1)) true) (_ bv19 63) (_ bv18 63)) (ite (and (distinct ((_ extract 17 17) C2) (_ bv0 1)) true) (_ bv17 63) (_ bv16 63)))))
 (let ((?x7820 (ite (and (distinct ((_ extract 23 22) C2) (_ bv0 2)) true) (ite (and (distinct ((_ extract 23 23) C2) (_ bv0 1)) true) (_ bv23 63) (_ bv22 63)) (ite (and (distinct ((_ extract 21 21) C2) (_ bv0 1)) true) (_ bv21 63) (_ bv20 63)))))
 (let ((?x8241 (ite (and (distinct ((_ extract 27 26) C2) (_ bv0 2)) true) (ite (and (distinct ((_ extract 27 27) C2) (_ bv0 1)) true) (_ bv27 63) (_ bv26 63)) (ite (and (distinct ((_ extract 25 25) C2) (_ bv0 1)) true) (_ bv25 63) (_ bv24 63)))))
 (let ((?x5160 (ite (and (distinct ((_ extract 31 30) C2) (_ bv0 2)) true) (ite (and (distinct ((_ extract 31 31) C2) (_ bv0 1)) true) (_ bv31 63) (_ bv30 63)) (ite (and (distinct ((_ extract 29 29) C2) (_ bv0 1)) true) (_ bv29 63) (_ bv28 63)))))
 (let ((?x8119 (ite (and (distinct ((_ extract 31 24) C2) (_ bv0 8)) true) (ite (and (distinct ((_ extract 31 28) C2) (_ bv0 4)) true) ?x5160 ?x8241) (ite (and (distinct ((_ extract 23 20) C2) (_ bv0 4)) true) ?x7820 ?x8445))))
 (let ((?x6909 (ite (and (distinct ((_ extract 35 34) C2) (_ bv0 2)) true) (ite (and (distinct ((_ extract 35 35) C2) (_ bv0 1)) true) (_ bv35 63) (_ bv34 63)) (ite (and (distinct ((_ extract 33 33) C2) (_ bv0 1)) true) (_ bv33 63) (_ bv32 63)))))
 (let ((?x10960 (ite (and (distinct ((_ extract 39 38) C2) (_ bv0 2)) true) (ite (and (distinct ((_ extract 39 39) C2) (_ bv0 1)) true) (_ bv39 63) (_ bv38 63)) (ite (and (distinct ((_ extract 37 37) C2) (_ bv0 1)) true) (_ bv37 63) (_ bv36 63)))))
 (let ((?x1081 (ite (and (distinct ((_ extract 43 42) C2) (_ bv0 2)) true) (ite (and (distinct ((_ extract 43 43) C2) (_ bv0 1)) true) (_ bv43 63) (_ bv42 63)) (ite (and (distinct ((_ extract 41 41) C2) (_ bv0 1)) true) (_ bv41 63) (_ bv40 63)))))
 (let ((?x10794 (ite (and (distinct ((_ extract 47 46) C2) (_ bv0 2)) true) (ite (and (distinct ((_ extract 47 47) C2) (_ bv0 1)) true) (_ bv47 63) (_ bv46 63)) (ite (and (distinct ((_ extract 45 45) C2) (_ bv0 1)) true) (_ bv45 63) (_ bv44 63)))))
 (let ((?x10624 (ite (and (distinct ((_ extract 47 40) C2) (_ bv0 8)) true) (ite (and (distinct ((_ extract 47 44) C2) (_ bv0 4)) true) ?x10794 ?x1081) (ite (and (distinct ((_ extract 39 36) C2) (_ bv0 4)) true) ?x10960 ?x6909))))
 (let ((?x1641 (ite (and (distinct ((_ extract 51 50) C2) (_ bv0 2)) true) (ite (and (distinct ((_ extract 51 51) C2) (_ bv0 1)) true) (_ bv51 63) (_ bv50 63)) (ite (and (distinct ((_ extract 49 49) C2) (_ bv0 1)) true) (_ bv49 63) (_ bv48 63)))))
 (let ((?x6685 (ite (and (distinct ((_ extract 55 54) C2) (_ bv0 2)) true) (ite (and (distinct ((_ extract 55 55) C2) (_ bv0 1)) true) (_ bv55 63) (_ bv54 63)) (ite (and (distinct ((_ extract 53 53) C2) (_ bv0 1)) true) (_ bv53 63) (_ bv52 63)))))
 (let ((?x9127 (ite (and (distinct ((_ extract 59 58) C2) (_ bv0 2)) true) (ite (and (distinct ((_ extract 59 59) C2) (_ bv0 1)) true) (_ bv59 63) (_ bv58 63)) (ite (and (distinct ((_ extract 57 57) C2) (_ bv0 1)) true) (_ bv57 63) (_ bv56 63)))))
 (let ((?x3696 (ite (and (distinct ((_ extract 62 62) C2) (_ bv0 1)) true) (_ bv62 63) (ite (and (distinct ((_ extract 61 61) C2) (_ bv0 1)) true) (_ bv61 63) (_ bv60 63)))))
 (let ((?x11213 (ite (and (distinct ((_ extract 62 56) C2) (_ bv0 7)) true) (ite (and (distinct ((_ extract 62 60) C2) (_ bv0 3)) true) ?x3696 ?x9127) (ite (and (distinct ((_ extract 55 52) C2) (_ bv0 4)) true) ?x6685 ?x1641))))
 (let ((?x5337 (ite (and (distinct ((_ extract 62 32) C2) (_ bv0 31)) true) (ite (and (distinct ((_ extract 62 48) C2) (_ bv0 15)) true) ?x11213 ?x10624) (ite (and (distinct ((_ extract 31 16) C2) (_ bv0 16)) true) ?x8119 ?x2911))))
 (and (=> $x3027 (= (bvand %Y (bvshl (_ bv9223372036854775807 63) (bvadd ?x5337 (_ bv1 63)))) (_ bv0 63))) (= C2 (bvneg C1)) (and (and (distinct C2 (_ bv0 63)) true) (= (bvand C2 (bvsub C2 (_ bv1 63))) (_ bv0 63))) $x3027 (and (distinct mem0 mem0) true)))))))))))))))))))))))))
(check-sat)
