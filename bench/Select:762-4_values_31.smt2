(set-info :status unknown)
(declare-fun C2 () (_ BitVec 11))
(declare-fun C3 () (_ BitVec 11))
(declare-fun C () (_ BitVec 36))
(declare-fun %Op () (_ BitVec 36))
(assert
 (let ((?x6302 (bvsub C3 C2)))
 (let ((?x6198 (ite (and (distinct ((_ extract 2 2) ?x6302) (_ bv0 1)) true) (_ bv2 11) (ite (and (distinct ((_ extract 1 1) ?x6302) (_ bv0 1)) true) (_ bv1 11) (_ bv0 11)))))
 (let ((?x6216 (ite (and (distinct ((_ extract 5 5) ?x6302) (_ bv0 1)) true) (_ bv5 11) (ite (and (distinct ((_ extract 4 4) ?x6302) (_ bv0 1)) true) (_ bv4 11) (_ bv3 11)))))
 (let ((?x4728 (ite (and (distinct ((_ extract 8 8) ?x6302) (_ bv0 1)) true) (_ bv8 11) (ite (and (distinct ((_ extract 7 7) ?x6302) (_ bv0 1)) true) (_ bv7 11) (_ bv6 11)))))
 (let ((?x6138 (ite (and (distinct ((_ extract 10 9) ?x6302) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) ?x6302) (_ bv0 1)) true) (_ bv10 11) (_ bv9 11)) ?x4728)))
 (let ((?x3712 (ite (and (distinct ((_ extract 10 6) ?x6302) (_ bv0 5)) true) ?x6138 (ite (and (distinct ((_ extract 5 3) ?x6302) (_ bv0 3)) true) ?x6216 ?x6198))))
 (let ((?x1272 (ite (and (distinct ((_ extract 2 2) C) (_ bv0 1)) true) (_ bv2 11) (ite (and (distinct ((_ extract 1 1) C) (_ bv0 1)) true) (_ bv1 11) (_ bv0 11)))))
 (let ((?x5186 (ite (and (distinct ((_ extract 4 3) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 4 4) C) (_ bv0 1)) true) (_ bv4 11) (_ bv3 11)) ?x1272)))
 (let ((?x5654 (ite (and (distinct ((_ extract 8 7) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 8 8) C) (_ bv0 1)) true) (_ bv8 11) (_ bv7 11)) (ite (and (distinct ((_ extract 6 6) C) (_ bv0 1)) true) (_ bv6 11) (_ bv5 11)))))
 (let ((?x2926 (ite (and (distinct ((_ extract 11 11) C) (_ bv0 1)) true) (_ bv11 11) (ite (and (distinct ((_ extract 10 10) C) (_ bv0 1)) true) (_ bv10 11) (_ bv9 11)))))
 (let ((?x6161 (ite (and (distinct ((_ extract 13 12) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 13 13) C) (_ bv0 1)) true) (_ bv13 11) (_ bv12 11)) ?x2926)))
 (let ((?x6308 (ite (and (distinct ((_ extract 17 16) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 17 17) C) (_ bv0 1)) true) (_ bv17 11) (_ bv16 11)) (ite (and (distinct ((_ extract 15 15) C) (_ bv0 1)) true) (_ bv15 11) (_ bv14 11)))))
 (let ((?x1129 (ite (and (distinct ((_ extract 17 9) C) (_ bv0 9)) true) (ite (and (distinct ((_ extract 17 14) C) (_ bv0 4)) true) ?x6308 ?x6161) (ite (and (distinct ((_ extract 8 5) C) (_ bv0 4)) true) ?x5654 ?x5186))))
 (let ((?x5916 (ite (and (distinct ((_ extract 20 20) C) (_ bv0 1)) true) (_ bv20 11) (ite (and (distinct ((_ extract 19 19) C) (_ bv0 1)) true) (_ bv19 11) (_ bv18 11)))))
 (let ((?x5197 (ite (and (distinct ((_ extract 22 21) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 22 22) C) (_ bv0 1)) true) (_ bv22 11) (_ bv21 11)) ?x5916)))
 (let ((?x1388 (ite (and (distinct ((_ extract 26 25) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 26 26) C) (_ bv0 1)) true) (_ bv26 11) (_ bv25 11)) (ite (and (distinct ((_ extract 24 24) C) (_ bv0 1)) true) (_ bv24 11) (_ bv23 11)))))
 (let ((?x3543 (ite (and (distinct ((_ extract 29 29) C) (_ bv0 1)) true) (_ bv29 11) (ite (and (distinct ((_ extract 28 28) C) (_ bv0 1)) true) (_ bv28 11) (_ bv27 11)))))
 (let ((?x4314 (ite (and (distinct ((_ extract 31 30) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 31 31) C) (_ bv0 1)) true) (_ bv31 11) (_ bv30 11)) ?x3543)))
 (let ((?x2085 (ite (and (distinct ((_ extract 35 34) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 35 35) C) (_ bv0 1)) true) (_ bv35 11) (_ bv34 11)) (ite (and (distinct ((_ extract 33 33) C) (_ bv0 1)) true) (_ bv33 11) (_ bv32 11)))))
 (let ((?x3031 (ite (and (distinct ((_ extract 35 27) C) (_ bv0 9)) true) (ite (and (distinct ((_ extract 35 32) C) (_ bv0 4)) true) ?x2085 ?x4314) (ite (and (distinct ((_ extract 26 23) C) (_ bv0 4)) true) ?x1388 ?x5197))))
 (let ((?x1397 (bvsub (ite (and (distinct ((_ extract 35 18) C) (_ bv0 18)) true) ?x3031 ?x1129) ?x3712)))
 (let ((?x3027 (ite (bvsgt (_ bv0 11) ?x1397) (_ bv0 11) ?x1397)))
 (let ((?x8099 (bvsub ?x3712 (ite (and (distinct ((_ extract 35 18) C) (_ bv0 18)) true) ?x3031 ?x1129))))
 (let ((?x3894 (ite (bvsgt (_ bv0 11) ?x8099) (_ bv0 11) ?x8099)))
 (let ((?x5273 (bvadd (bvxor (bvlshr (bvshl ((_ extract 10 0) (bvand %Op C)) ?x3894) ?x3027) ?x6302) C2)))
 (let ((?x2711 (ite (= (ite (and (distinct (bvand %Op C) (_ bv0 36)) true) (_ bv1 1) (_ bv0 1)) (_ bv1 1)) C2 C3)))
 (let ((?x3769 (ite (and (distinct ((_ extract 2 2) C) (_ bv0 1)) true) (_ bv2 32) (ite (and (distinct ((_ extract 1 1) C) (_ bv0 1)) true) (_ bv1 32) (_ bv0 32)))))
 (let ((?x4834 (ite (and (distinct ((_ extract 4 3) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 4 4) C) (_ bv0 1)) true) (_ bv4 32) (_ bv3 32)) ?x3769)))
 (let ((?x2993 (ite (and (distinct ((_ extract 8 7) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 8 8) C) (_ bv0 1)) true) (_ bv8 32) (_ bv7 32)) (ite (and (distinct ((_ extract 6 6) C) (_ bv0 1)) true) (_ bv6 32) (_ bv5 32)))))
 (let ((?x2022 (ite (and (distinct ((_ extract 11 11) C) (_ bv0 1)) true) (_ bv11 32) (ite (and (distinct ((_ extract 10 10) C) (_ bv0 1)) true) (_ bv10 32) (_ bv9 32)))))
 (let ((?x2616 (ite (and (distinct ((_ extract 13 12) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 13 13) C) (_ bv0 1)) true) (_ bv13 32) (_ bv12 32)) ?x2022)))
 (let ((?x1396 (ite (and (distinct ((_ extract 17 16) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 17 17) C) (_ bv0 1)) true) (_ bv17 32) (_ bv16 32)) (ite (and (distinct ((_ extract 15 15) C) (_ bv0 1)) true) (_ bv15 32) (_ bv14 32)))))
 (let ((?x4929 (ite (and (distinct ((_ extract 17 9) C) (_ bv0 9)) true) (ite (and (distinct ((_ extract 17 14) C) (_ bv0 4)) true) ?x1396 ?x2616) (ite (and (distinct ((_ extract 8 5) C) (_ bv0 4)) true) ?x2993 ?x4834))))
 (let ((?x6992 (ite (and (distinct ((_ extract 20 20) C) (_ bv0 1)) true) (_ bv20 32) (ite (and (distinct ((_ extract 19 19) C) (_ bv0 1)) true) (_ bv19 32) (_ bv18 32)))))
 (let ((?x7186 (ite (and (distinct ((_ extract 22 21) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 22 22) C) (_ bv0 1)) true) (_ bv22 32) (_ bv21 32)) ?x6992)))
 (let ((?x7900 (ite (and (distinct ((_ extract 26 25) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 26 26) C) (_ bv0 1)) true) (_ bv26 32) (_ bv25 32)) (ite (and (distinct ((_ extract 24 24) C) (_ bv0 1)) true) (_ bv24 32) (_ bv23 32)))))
 (let ((?x5880 (ite (and (distinct ((_ extract 29 29) C) (_ bv0 1)) true) (_ bv29 32) (ite (and (distinct ((_ extract 28 28) C) (_ bv0 1)) true) (_ bv28 32) (_ bv27 32)))))
 (let ((?x1190 (ite (and (distinct ((_ extract 31 30) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 31 31) C) (_ bv0 1)) true) (_ bv31 32) (_ bv30 32)) ?x5880)))
 (let ((?x2954 (ite (and (distinct ((_ extract 35 34) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 35 35) C) (_ bv0 1)) true) (_ bv35 32) (_ bv34 32)) (ite (and (distinct ((_ extract 33 33) C) (_ bv0 1)) true) (_ bv33 32) (_ bv32 32)))))
 (let ((?x7755 (ite (and (distinct ((_ extract 35 27) C) (_ bv0 9)) true) (ite (and (distinct ((_ extract 35 32) C) (_ bv0 4)) true) ?x2954 ?x1190) (ite (and (distinct ((_ extract 26 23) C) (_ bv0 4)) true) ?x7900 ?x7186))))
 (and (and (and (distinct C (_ bv0 36)) true) (= (bvand C (bvsub C (_ bv1 36))) (_ bv0 36))) (and (and (distinct ?x6302 (_ bv0 11)) true) (= (bvand ?x6302 (bvsub ?x6302 (_ bv1 11))) (_ bv0 11))) (bvslt (ite (and (distinct ((_ extract 35 18) C) (_ bv0 18)) true) ?x7755 ?x4929) (_ bv11 32)) (and (distinct ?x2711 ?x5273) true)))))))))))))))))))))))))))))))))))))))))))
(check-sat)
