(set-info :status unknown)
(declare-fun mem0 () (_ BitVec 8))
(declare-fun alloca%a_3025 () (_ BitVec 8))
(declare-fun %a () (_ BitVec 64))
(declare-fun idx () (_ BitVec 64))
(declare-fun %x () (_ BitVec 5))
(declare-fun %idx () (_ BitVec 30))
(declare-fun u_%a () (_ BitVec 8))
(declare-fun u_%ptr () (_ BitVec 8))
(assert
 (forall ((alloca%a_3024 (_ BitVec 8)) (alloca%a_3026 (_ BitVec 8)) )(let (($x12600 (= idx (bvadd %a (_ bv0 64)))))
 (let ((?x2513 (ite $x12600 ((_ extract 7 0) alloca%a_3025) mem0)))
 (let ((?x64 (ite (= (bvadd %a (bvmul (_ bv1 64) ((_ sign_extend 34) %idx))) (bvadd %a (_ bv0 64))) ((_ extract 7 0) alloca%a_3024) mem0)))
 (let (($x8594 (bvuge (_ bv0 64) (bvsub (bvadd %a (bvmul (_ bv1 64) ((_ sign_extend 34) %idx))) %a))))
 (let (($x20037 (and (distinct %a (_ bv0 64)) true)))
 (let (($x12908 (and $x20037 (and (distinct (bvadd %a (bvmul (_ bv1 64) ((_ sign_extend 34) %idx))) (_ bv0 64)) true) (and (bvuge (bvadd %a (bvmul (_ bv1 64) ((_ sign_extend 34) %idx))) %a) $x8594) (= idx (bvadd %a (bvmul (_ bv1 64) ((_ sign_extend 34) %idx)))))))
 (let ((?x34 (ite $x12908 (concat ((_ extract 7 5) ?x64) ((_ extract 4 0) %x)) (ite $x12600 ((_ extract 7 0) alloca%a_3024) mem0))))
 (and $x20037 $x20037 (= u_%ptr (_ bv1 8)) (= u_%a (_ bv1 8)) $x20037 $x20037 $x20037 (and (distinct (ite $x12600 ((_ extract 7 0) alloca%a_3026) ?x34) ?x2513) true))))))))))
 )
(check-sat)
