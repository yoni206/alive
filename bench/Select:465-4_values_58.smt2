(set-info :status unknown)
(declare-fun %Y () (_ BitVec 11))
(declare-fun C2 () (_ BitVec 11))
(declare-fun C1 () (_ BitVec 63))
(declare-fun %X () (_ BitVec 63))
(assert
 (let ((?x14946 (ite (and (distinct ((_ extract 2 2) C2) (_ bv0 1)) true) (_ bv2 63) (ite (and (distinct ((_ extract 1 1) C2) (_ bv0 1)) true) (_ bv1 63) (_ bv0 63)))))
 (let ((?x23199 (ite (and (distinct ((_ extract 5 5) C2) (_ bv0 1)) true) (_ bv5 63) (ite (and (distinct ((_ extract 4 4) C2) (_ bv0 1)) true) (_ bv4 63) (_ bv3 63)))))
 (let ((?x12091 (ite (and (distinct ((_ extract 8 8) C2) (_ bv0 1)) true) (_ bv8 63) (ite (and (distinct ((_ extract 7 7) C2) (_ bv0 1)) true) (_ bv7 63) (_ bv6 63)))))
 (let ((?x8936 (ite (and (distinct ((_ extract 10 9) C2) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) C2) (_ bv0 1)) true) (_ bv10 63) (_ bv9 63)) ?x12091)))
 (let ((?x8487 (ite (and (distinct ((_ extract 10 6) C2) (_ bv0 5)) true) ?x8936 (ite (and (distinct ((_ extract 5 3) C2) (_ bv0 3)) true) ?x23199 ?x14946))))
 (let ((?x20453 (ite (and (distinct ((_ extract 3 2) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 3 3) C1) (_ bv0 1)) true) (_ bv3 63) (_ bv2 63)) (ite (and (distinct ((_ extract 1 1) C1) (_ bv0 1)) true) (_ bv1 63) (_ bv0 63)))))
 (let ((?x17731 (ite (and (distinct ((_ extract 7 6) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 7 7) C1) (_ bv0 1)) true) (_ bv7 63) (_ bv6 63)) (ite (and (distinct ((_ extract 5 5) C1) (_ bv0 1)) true) (_ bv5 63) (_ bv4 63)))))
 (let ((?x23044 (ite (and (distinct ((_ extract 11 10) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 11 11) C1) (_ bv0 1)) true) (_ bv11 63) (_ bv10 63)) (ite (and (distinct ((_ extract 9 9) C1) (_ bv0 1)) true) (_ bv9 63) (_ bv8 63)))))
 (let ((?x16842 (ite (and (distinct ((_ extract 15 14) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 15 15) C1) (_ bv0 1)) true) (_ bv15 63) (_ bv14 63)) (ite (and (distinct ((_ extract 13 13) C1) (_ bv0 1)) true) (_ bv13 63) (_ bv12 63)))))
 (let ((?x9042 (ite (and (distinct ((_ extract 15 8) C1) (_ bv0 8)) true) (ite (and (distinct ((_ extract 15 12) C1) (_ bv0 4)) true) ?x16842 ?x23044) (ite (and (distinct ((_ extract 7 4) C1) (_ bv0 4)) true) ?x17731 ?x20453))))
 (let ((?x4505 (ite (and (distinct ((_ extract 19 18) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 19 19) C1) (_ bv0 1)) true) (_ bv19 63) (_ bv18 63)) (ite (and (distinct ((_ extract 17 17) C1) (_ bv0 1)) true) (_ bv17 63) (_ bv16 63)))))
 (let ((?x15488 (ite (and (distinct ((_ extract 23 22) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 23 23) C1) (_ bv0 1)) true) (_ bv23 63) (_ bv22 63)) (ite (and (distinct ((_ extract 21 21) C1) (_ bv0 1)) true) (_ bv21 63) (_ bv20 63)))))
 (let ((?x15678 (ite (and (distinct ((_ extract 27 26) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 27 27) C1) (_ bv0 1)) true) (_ bv27 63) (_ bv26 63)) (ite (and (distinct ((_ extract 25 25) C1) (_ bv0 1)) true) (_ bv25 63) (_ bv24 63)))))
 (let ((?x13265 (ite (and (distinct ((_ extract 31 30) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 31 31) C1) (_ bv0 1)) true) (_ bv31 63) (_ bv30 63)) (ite (and (distinct ((_ extract 29 29) C1) (_ bv0 1)) true) (_ bv29 63) (_ bv28 63)))))
 (let ((?x17422 (ite (and (distinct ((_ extract 31 24) C1) (_ bv0 8)) true) (ite (and (distinct ((_ extract 31 28) C1) (_ bv0 4)) true) ?x13265 ?x15678) (ite (and (distinct ((_ extract 23 20) C1) (_ bv0 4)) true) ?x15488 ?x4505))))
 (let ((?x10804 (ite (and (distinct ((_ extract 35 34) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 35 35) C1) (_ bv0 1)) true) (_ bv35 63) (_ bv34 63)) (ite (and (distinct ((_ extract 33 33) C1) (_ bv0 1)) true) (_ bv33 63) (_ bv32 63)))))
 (let ((?x6551 (ite (and (distinct ((_ extract 39 38) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 39 39) C1) (_ bv0 1)) true) (_ bv39 63) (_ bv38 63)) (ite (and (distinct ((_ extract 37 37) C1) (_ bv0 1)) true) (_ bv37 63) (_ bv36 63)))))
 (let ((?x20248 (ite (and (distinct ((_ extract 43 42) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 43 43) C1) (_ bv0 1)) true) (_ bv43 63) (_ bv42 63)) (ite (and (distinct ((_ extract 41 41) C1) (_ bv0 1)) true) (_ bv41 63) (_ bv40 63)))))
 (let ((?x3084 (ite (and (distinct ((_ extract 47 46) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 47 47) C1) (_ bv0 1)) true) (_ bv47 63) (_ bv46 63)) (ite (and (distinct ((_ extract 45 45) C1) (_ bv0 1)) true) (_ bv45 63) (_ bv44 63)))))
 (let ((?x12965 (ite (and (distinct ((_ extract 47 40) C1) (_ bv0 8)) true) (ite (and (distinct ((_ extract 47 44) C1) (_ bv0 4)) true) ?x3084 ?x20248) (ite (and (distinct ((_ extract 39 36) C1) (_ bv0 4)) true) ?x6551 ?x10804))))
 (let ((?x23223 (ite (and (distinct ((_ extract 51 50) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 51 51) C1) (_ bv0 1)) true) (_ bv51 63) (_ bv50 63)) (ite (and (distinct ((_ extract 49 49) C1) (_ bv0 1)) true) (_ bv49 63) (_ bv48 63)))))
 (let ((?x17959 (ite (and (distinct ((_ extract 55 54) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 55 55) C1) (_ bv0 1)) true) (_ bv55 63) (_ bv54 63)) (ite (and (distinct ((_ extract 53 53) C1) (_ bv0 1)) true) (_ bv53 63) (_ bv52 63)))))
 (let ((?x8440 (ite (and (distinct ((_ extract 59 58) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 59 59) C1) (_ bv0 1)) true) (_ bv59 63) (_ bv58 63)) (ite (and (distinct ((_ extract 57 57) C1) (_ bv0 1)) true) (_ bv57 63) (_ bv56 63)))))
 (let ((?x726 (ite (and (distinct ((_ extract 62 62) C1) (_ bv0 1)) true) (_ bv62 63) (ite (and (distinct ((_ extract 61 61) C1) (_ bv0 1)) true) (_ bv61 63) (_ bv60 63)))))
 (let ((?x2141 (ite (and (distinct ((_ extract 62 56) C1) (_ bv0 7)) true) (ite (and (distinct ((_ extract 62 60) C1) (_ bv0 3)) true) ?x726 ?x8440) (ite (and (distinct ((_ extract 55 52) C1) (_ bv0 4)) true) ?x17959 ?x23223))))
 (let ((?x12927 (ite (and (distinct ((_ extract 62 32) C1) (_ bv0 31)) true) (ite (and (distinct ((_ extract 62 48) C1) (_ bv0 15)) true) ?x2141 ?x12965) (ite (and (distinct ((_ extract 31 16) C1) (_ bv0 16)) true) ?x17422 ?x9042))))
 (let ((?x16980 (bvsub ?x12927 ?x8487)))
 (let ((?x13715 (bvand %X C1)))
 (let ((?x5201 (bvor %Y C2)))
 (let (($x18491 (and (distinct (ite (= (ite (and (distinct ?x13715 (_ bv0 63)) true) (_ bv1 1) (_ bv0 1)) (_ bv1 1)) %Y ?x5201) (bvor (bvxor ((_ extract 10 0) (bvlshr ?x13715 ?x16980)) C2) %Y)) true)))
 (let ((?x18181 (ite (and (distinct ((_ extract 3 2) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 3 3) C1) (_ bv0 1)) true) (_ bv3 32) (_ bv2 32)) (ite (and (distinct ((_ extract 1 1) C1) (_ bv0 1)) true) (_ bv1 32) (_ bv0 32)))))
 (let ((?x24809 (ite (and (distinct ((_ extract 7 6) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 7 7) C1) (_ bv0 1)) true) (_ bv7 32) (_ bv6 32)) (ite (and (distinct ((_ extract 5 5) C1) (_ bv0 1)) true) (_ bv5 32) (_ bv4 32)))))
 (let ((?x21352 (ite (and (distinct ((_ extract 11 10) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 11 11) C1) (_ bv0 1)) true) (_ bv11 32) (_ bv10 32)) (ite (and (distinct ((_ extract 9 9) C1) (_ bv0 1)) true) (_ bv9 32) (_ bv8 32)))))
 (let ((?x16227 (ite (and (distinct ((_ extract 15 14) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 15 15) C1) (_ bv0 1)) true) (_ bv15 32) (_ bv14 32)) (ite (and (distinct ((_ extract 13 13) C1) (_ bv0 1)) true) (_ bv13 32) (_ bv12 32)))))
 (let ((?x17994 (ite (and (distinct ((_ extract 15 8) C1) (_ bv0 8)) true) (ite (and (distinct ((_ extract 15 12) C1) (_ bv0 4)) true) ?x16227 ?x21352) (ite (and (distinct ((_ extract 7 4) C1) (_ bv0 4)) true) ?x24809 ?x18181))))
 (let ((?x8039 (ite (and (distinct ((_ extract 19 18) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 19 19) C1) (_ bv0 1)) true) (_ bv19 32) (_ bv18 32)) (ite (and (distinct ((_ extract 17 17) C1) (_ bv0 1)) true) (_ bv17 32) (_ bv16 32)))))
 (let ((?x8998 (ite (and (distinct ((_ extract 23 22) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 23 23) C1) (_ bv0 1)) true) (_ bv23 32) (_ bv22 32)) (ite (and (distinct ((_ extract 21 21) C1) (_ bv0 1)) true) (_ bv21 32) (_ bv20 32)))))
 (let ((?x1131 (ite (and (distinct ((_ extract 27 26) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 27 27) C1) (_ bv0 1)) true) (_ bv27 32) (_ bv26 32)) (ite (and (distinct ((_ extract 25 25) C1) (_ bv0 1)) true) (_ bv25 32) (_ bv24 32)))))
 (let ((?x1960 (ite (and (distinct ((_ extract 31 30) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 31 31) C1) (_ bv0 1)) true) (_ bv31 32) (_ bv30 32)) (ite (and (distinct ((_ extract 29 29) C1) (_ bv0 1)) true) (_ bv29 32) (_ bv28 32)))))
 (let ((?x16229 (ite (and (distinct ((_ extract 31 24) C1) (_ bv0 8)) true) (ite (and (distinct ((_ extract 31 28) C1) (_ bv0 4)) true) ?x1960 ?x1131) (ite (and (distinct ((_ extract 23 20) C1) (_ bv0 4)) true) ?x8998 ?x8039))))
 (let ((?x23273 (ite (and (distinct ((_ extract 35 34) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 35 35) C1) (_ bv0 1)) true) (_ bv35 32) (_ bv34 32)) (ite (and (distinct ((_ extract 33 33) C1) (_ bv0 1)) true) (_ bv33 32) (_ bv32 32)))))
 (let ((?x13807 (ite (and (distinct ((_ extract 39 38) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 39 39) C1) (_ bv0 1)) true) (_ bv39 32) (_ bv38 32)) (ite (and (distinct ((_ extract 37 37) C1) (_ bv0 1)) true) (_ bv37 32) (_ bv36 32)))))
 (let ((?x11179 (ite (and (distinct ((_ extract 43 42) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 43 43) C1) (_ bv0 1)) true) (_ bv43 32) (_ bv42 32)) (ite (and (distinct ((_ extract 41 41) C1) (_ bv0 1)) true) (_ bv41 32) (_ bv40 32)))))
 (let ((?x9522 (ite (and (distinct ((_ extract 47 46) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 47 47) C1) (_ bv0 1)) true) (_ bv47 32) (_ bv46 32)) (ite (and (distinct ((_ extract 45 45) C1) (_ bv0 1)) true) (_ bv45 32) (_ bv44 32)))))
 (let ((?x19453 (ite (and (distinct ((_ extract 47 40) C1) (_ bv0 8)) true) (ite (and (distinct ((_ extract 47 44) C1) (_ bv0 4)) true) ?x9522 ?x11179) (ite (and (distinct ((_ extract 39 36) C1) (_ bv0 4)) true) ?x13807 ?x23273))))
 (let ((?x6186 (ite (and (distinct ((_ extract 51 50) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 51 51) C1) (_ bv0 1)) true) (_ bv51 32) (_ bv50 32)) (ite (and (distinct ((_ extract 49 49) C1) (_ bv0 1)) true) (_ bv49 32) (_ bv48 32)))))
 (let ((?x1691 (ite (and (distinct ((_ extract 55 54) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 55 55) C1) (_ bv0 1)) true) (_ bv55 32) (_ bv54 32)) (ite (and (distinct ((_ extract 53 53) C1) (_ bv0 1)) true) (_ bv53 32) (_ bv52 32)))))
 (let ((?x3810 (ite (and (distinct ((_ extract 59 58) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 59 59) C1) (_ bv0 1)) true) (_ bv59 32) (_ bv58 32)) (ite (and (distinct ((_ extract 57 57) C1) (_ bv0 1)) true) (_ bv57 32) (_ bv56 32)))))
 (let ((?x15483 (ite (and (distinct ((_ extract 62 62) C1) (_ bv0 1)) true) (_ bv62 32) (ite (and (distinct ((_ extract 61 61) C1) (_ bv0 1)) true) (_ bv61 32) (_ bv60 32)))))
 (let ((?x7261 (ite (and (distinct ((_ extract 62 56) C1) (_ bv0 7)) true) (ite (and (distinct ((_ extract 62 60) C1) (_ bv0 3)) true) ?x15483 ?x3810) (ite (and (distinct ((_ extract 55 52) C1) (_ bv0 4)) true) ?x1691 ?x6186))))
 (let ((?x9488 (ite (and (distinct ((_ extract 62 32) C1) (_ bv0 31)) true) (ite (and (distinct ((_ extract 62 48) C1) (_ bv0 15)) true) ?x7261 ?x19453) (ite (and (distinct ((_ extract 31 16) C1) (_ bv0 16)) true) ?x16229 ?x17994))))
 (let ((?x12903 (ite (and (distinct ((_ extract 2 2) C2) (_ bv0 1)) true) (_ bv2 32) (ite (and (distinct ((_ extract 1 1) C2) (_ bv0 1)) true) (_ bv1 32) (_ bv0 32)))))
 (let ((?x10965 (ite (and (distinct ((_ extract 5 5) C2) (_ bv0 1)) true) (_ bv5 32) (ite (and (distinct ((_ extract 4 4) C2) (_ bv0 1)) true) (_ bv4 32) (_ bv3 32)))))
 (let ((?x2676 (ite (and (distinct ((_ extract 8 8) C2) (_ bv0 1)) true) (_ bv8 32) (ite (and (distinct ((_ extract 7 7) C2) (_ bv0 1)) true) (_ bv7 32) (_ bv6 32)))))
 (let ((?x16939 (ite (and (distinct ((_ extract 10 9) C2) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) C2) (_ bv0 1)) true) (_ bv10 32) (_ bv9 32)) ?x2676)))
 (let ((?x10859 (ite (and (distinct ((_ extract 10 6) C2) (_ bv0 5)) true) ?x16939 (ite (and (distinct ((_ extract 5 3) C2) (_ bv0 3)) true) ?x10965 ?x12903))))
 (and (and (and (distinct C1 (_ bv0 63)) true) (= (bvand C1 (bvsub C1 (_ bv1 63))) (_ bv0 63))) (and (and (distinct C2 (_ bv0 11)) true) (= (bvand C2 (bvsub C2 (_ bv1 11))) (_ bv0 11))) (bvslt ?x10859 ?x9488) $x18491))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
