(set-info :status unknown)
(declare-fun mem0 () (_ BitVec 8))
(declare-fun %x () (_ BitVec 62))
(declare-fun %p1 () (_ BitVec 64))
(declare-fun idx () (_ BitVec 64))
(declare-fun |ana_equivalentAddressValues(%p1, %p2)| () (_ BitVec 1))
(declare-fun %p2 () (_ BitVec 64))
(assert
 (let ((?x21475 (concat ((_ extract 7 6) mem0) ((_ extract 5 0) %x))))
 (let ((?x8479 (ite (and (and (distinct %p1 (_ bv0 64)) true) (or true true) (= idx %p1)) ?x21475 mem0)))
 (let ((?x1700 ((_ extract 13 6) %x)))
 (let (($x23577 (or true true)))
 (let (($x3883 (and (distinct %p1 (_ bv0 64)) true)))
 (let ((?x21656 (ite (and $x3883 $x23577 (= idx (bvadd (bvadd %p1 (_ bv1 64)) (_ bv0 64)))) ?x1700 ?x8479)))
 (let ((?x12629 ((_ extract 21 14) %x)))
 (let ((?x19961 (ite (and $x3883 $x23577 (= idx (bvadd (bvadd %p1 (_ bv1 64)) (_ bv1 64)))) ?x12629 ?x21656)))
 (let ((?x6193 ((_ extract 29 22) %x)))
 (let ((?x20203 (ite (and $x3883 $x23577 (= idx (bvadd (bvadd %p1 (_ bv1 64)) (_ bv2 64)))) ?x6193 ?x19961)))
 (let ((?x8352 ((_ extract 37 30) %x)))
 (let ((?x9814 (ite (and $x3883 $x23577 (= idx (bvadd (bvadd %p1 (_ bv1 64)) (_ bv3 64)))) ?x8352 ?x20203)))
 (let ((?x2976 ((_ extract 45 38) %x)))
 (let ((?x7193 (ite (and $x3883 $x23577 (= idx (bvadd (bvadd %p1 (_ bv1 64)) (_ bv4 64)))) ?x2976 ?x9814)))
 (let ((?x7441 ((_ extract 53 46) %x)))
 (let ((?x9333 (ite (and $x3883 $x23577 (= idx (bvadd (bvadd %p1 (_ bv1 64)) (_ bv5 64)))) ?x7441 ?x7193)))
 (let ((?x23786 ((_ extract 61 54) %x)))
 (let ((?x18536 (ite (and $x3883 $x23577 (= idx (bvadd (bvadd %p1 (_ bv1 64)) (_ bv6 64)))) ?x23786 ?x9333)))
 (let (($x10964 (= |ana_equivalentAddressValues(%p1, %p2)| (_ bv1 1))))
 (and (=> $x10964 (= %p1 %p2)) $x10964 (and (distinct ?x18536 ?x18536) true))))))))))))))))))))))
(check-sat)
