(set-info :status unknown)
(declare-fun %x () (_ BitVec 27))
(declare-fun mem0 () (_ BitVec 8))
(declare-fun %p1 () (_ BitVec 64))
(declare-fun %p2 () (_ BitVec 64))
(declare-fun |ana_equivalentAddressValues(%p1, %p2)| () (_ BitVec 1))
(assert
 (let ((?x2806 (concat ((_ extract 7 3) mem0) ((_ extract 2 0) %x))))
 (let ((?x23093 (ite (and (and (distinct %p1 (_ bv0 64)) true) (or true true) (= %p2 %p1)) ?x2806 mem0)))
 (let ((?x6835 ((_ extract 10 3) %x)))
 (let (($x1312 (or true true)))
 (let (($x318 (and (distinct %p1 (_ bv0 64)) true)))
 (let ((?x18512 (ite (and $x318 $x1312 (= %p2 (bvadd (bvadd %p1 (_ bv1 64)) (_ bv0 64)))) ?x6835 ?x23093)))
 (let ((?x22445 ((_ extract 18 11) %x)))
 (let ((?x21161 (ite (and $x318 $x1312 (= %p2 (bvadd (bvadd %p1 (_ bv1 64)) (_ bv1 64)))) ?x22445 ?x18512)))
 (let ((?x6124 ((_ extract 26 19) %x)))
 (let ((?x19349 (ite (and $x318 $x1312 (= %p2 (bvadd (bvadd %p1 (_ bv1 64)) (_ bv2 64)))) ?x6124 ?x21161)))
 (let ((?x14225 (ite (and $x318 $x1312 (= (bvadd (bvadd %p2 (_ bv1 64)) (_ bv0 64)) %p1)) ?x2806 mem0)))
 (let (($x13733 (and $x318 $x1312 (= (bvadd (bvadd %p2 (_ bv1 64)) (_ bv0 64)) (bvadd (bvadd %p1 (_ bv1 64)) (_ bv0 64))))))
 (let (($x5064 (and $x318 $x1312 (= (bvadd (bvadd %p2 (_ bv1 64)) (_ bv0 64)) (bvadd (bvadd %p1 (_ bv1 64)) (_ bv1 64))))))
 (let (($x10200 (and $x318 $x1312 (= (bvadd (bvadd %p2 (_ bv1 64)) (_ bv0 64)) (bvadd (bvadd %p1 (_ bv1 64)) (_ bv2 64))))))
 (let ((?x17966 (ite (and $x318 $x1312 (= (bvadd (bvadd %p2 (_ bv1 64)) (_ bv1 64)) %p1)) ?x2806 mem0)))
 (let (($x23605 (and $x318 $x1312 (= (bvadd (bvadd %p2 (_ bv1 64)) (_ bv1 64)) (bvadd (bvadd %p1 (_ bv1 64)) (_ bv0 64))))))
 (let (($x3193 (and $x318 $x1312 (= (bvadd (bvadd %p2 (_ bv1 64)) (_ bv1 64)) (bvadd (bvadd %p1 (_ bv1 64)) (_ bv1 64))))))
 (let (($x18605 (and $x318 $x1312 (= (bvadd (bvadd %p2 (_ bv1 64)) (_ bv1 64)) (bvadd (bvadd %p1 (_ bv1 64)) (_ bv2 64))))))
 (let ((?x139 (ite (and $x318 $x1312 (= (bvadd (bvadd %p2 (_ bv1 64)) (_ bv2 64)) %p1)) ?x2806 mem0)))
 (let (($x11873 (and $x318 $x1312 (= (bvadd (bvadd %p2 (_ bv1 64)) (_ bv2 64)) (bvadd (bvadd %p1 (_ bv1 64)) (_ bv0 64))))))
 (let (($x22608 (and $x318 $x1312 (= (bvadd (bvadd %p2 (_ bv1 64)) (_ bv2 64)) (bvadd (bvadd %p1 (_ bv1 64)) (_ bv1 64))))))
 (let (($x11164 (and $x318 $x1312 (= (bvadd (bvadd %p2 (_ bv1 64)) (_ bv2 64)) (bvadd (bvadd %p1 (_ bv1 64)) (_ bv2 64))))))
 (let ((?x8733 (concat (ite $x11164 ?x6124 (ite $x22608 ?x22445 (ite $x11873 ?x6835 ?x139))) (ite $x18605 ?x6124 (ite $x3193 ?x22445 (ite $x23605 ?x6835 ?x17966))))))
 (let ((?x4130 (concat (concat ?x8733 (ite $x10200 ?x6124 (ite $x5064 ?x22445 (ite $x13733 ?x6835 ?x14225)))) ((_ extract 2 0) ?x19349))))
 (let (($x18058 (= |ana_equivalentAddressValues(%p1, %p2)| (_ bv1 1))))
 (let (($x4119 (and (distinct %p2 (_ bv0 64)) true)))
 (and $x318 $x1312 $x4119 $x1312 $x4119 $x1312 (=> $x18058 (= %p1 %p2)) $x18058 (and (distinct ?x4130 %x) true)))))))))))))))))))))))))))))
(check-sat)
