(set-info :status unknown)
(declare-fun C2 () (_ BitVec 11))
(declare-fun C1 () (_ BitVec 44))
(assert
 (let ((?x19720 (ite (and (distinct ((_ extract 2 2) C2) (_ bv0 1)) true) (_ bv2 44) (ite (and (distinct ((_ extract 1 1) C2) (_ bv0 1)) true) (_ bv1 44) (_ bv0 44)))))
 (let ((?x18972 (ite (and (distinct ((_ extract 5 5) C2) (_ bv0 1)) true) (_ bv5 44) (ite (and (distinct ((_ extract 4 4) C2) (_ bv0 1)) true) (_ bv4 44) (_ bv3 44)))))
 (let ((?x13244 (ite (and (distinct ((_ extract 8 8) C2) (_ bv0 1)) true) (_ bv8 44) (ite (and (distinct ((_ extract 7 7) C2) (_ bv0 1)) true) (_ bv7 44) (_ bv6 44)))))
 (let ((?x19780 (ite (and (distinct ((_ extract 10 9) C2) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) C2) (_ bv0 1)) true) (_ bv10 44) (_ bv9 44)) ?x13244)))
 (let ((?x1063 (ite (and (distinct ((_ extract 10 6) C2) (_ bv0 5)) true) ?x19780 (ite (and (distinct ((_ extract 5 3) C2) (_ bv0 3)) true) ?x18972 ?x19720))))
 (let ((?x20811 (ite (and (distinct ((_ extract 2 2) C1) (_ bv0 1)) true) (_ bv2 44) (ite (and (distinct ((_ extract 1 1) C1) (_ bv0 1)) true) (_ bv1 44) (_ bv0 44)))))
 (let ((?x14137 (ite (and (distinct ((_ extract 5 5) C1) (_ bv0 1)) true) (_ bv5 44) (ite (and (distinct ((_ extract 4 4) C1) (_ bv0 1)) true) (_ bv4 44) (_ bv3 44)))))
 (let ((?x13841 (ite (and (distinct ((_ extract 8 8) C1) (_ bv0 1)) true) (_ bv8 44) (ite (and (distinct ((_ extract 7 7) C1) (_ bv0 1)) true) (_ bv7 44) (_ bv6 44)))))
 (let ((?x8444 (ite (and (distinct ((_ extract 10 9) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) C1) (_ bv0 1)) true) (_ bv10 44) (_ bv9 44)) ?x13841)))
 (let ((?x11523 (ite (and (distinct ((_ extract 10 6) C1) (_ bv0 5)) true) ?x8444 (ite (and (distinct ((_ extract 5 3) C1) (_ bv0 3)) true) ?x14137 ?x20811))))
 (let ((?x6522 (ite (and (distinct ((_ extract 13 13) C1) (_ bv0 1)) true) (_ bv13 44) (ite (and (distinct ((_ extract 12 12) C1) (_ bv0 1)) true) (_ bv12 44) (_ bv11 44)))))
 (let ((?x8639 (ite (and (distinct ((_ extract 16 16) C1) (_ bv0 1)) true) (_ bv16 44) (ite (and (distinct ((_ extract 15 15) C1) (_ bv0 1)) true) (_ bv15 44) (_ bv14 44)))))
 (let ((?x13797 (ite (and (distinct ((_ extract 19 19) C1) (_ bv0 1)) true) (_ bv19 44) (ite (and (distinct ((_ extract 18 18) C1) (_ bv0 1)) true) (_ bv18 44) (_ bv17 44)))))
 (let ((?x3208 (ite (and (distinct ((_ extract 21 20) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 21 21) C1) (_ bv0 1)) true) (_ bv21 44) (_ bv20 44)) ?x13797)))
 (let ((?x15159 (ite (and (distinct ((_ extract 21 17) C1) (_ bv0 5)) true) ?x3208 (ite (and (distinct ((_ extract 16 14) C1) (_ bv0 3)) true) ?x8639 ?x6522))))
 (let ((?x18698 (ite (and (distinct ((_ extract 24 24) C1) (_ bv0 1)) true) (_ bv24 44) (ite (and (distinct ((_ extract 23 23) C1) (_ bv0 1)) true) (_ bv23 44) (_ bv22 44)))))
 (let ((?x15123 (ite (and (distinct ((_ extract 27 27) C1) (_ bv0 1)) true) (_ bv27 44) (ite (and (distinct ((_ extract 26 26) C1) (_ bv0 1)) true) (_ bv26 44) (_ bv25 44)))))
 (let ((?x12183 (ite (and (distinct ((_ extract 30 30) C1) (_ bv0 1)) true) (_ bv30 44) (ite (and (distinct ((_ extract 29 29) C1) (_ bv0 1)) true) (_ bv29 44) (_ bv28 44)))))
 (let ((?x15153 (ite (and (distinct ((_ extract 32 31) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 32 32) C1) (_ bv0 1)) true) (_ bv32 44) (_ bv31 44)) ?x12183)))
 (let ((?x323 (ite (and (distinct ((_ extract 32 28) C1) (_ bv0 5)) true) ?x15153 (ite (and (distinct ((_ extract 27 25) C1) (_ bv0 3)) true) ?x15123 ?x18698))))
 (let ((?x15393 (ite (and (distinct ((_ extract 35 35) C1) (_ bv0 1)) true) (_ bv35 44) (ite (and (distinct ((_ extract 34 34) C1) (_ bv0 1)) true) (_ bv34 44) (_ bv33 44)))))
 (let ((?x23370 (ite (and (distinct ((_ extract 38 38) C1) (_ bv0 1)) true) (_ bv38 44) (ite (and (distinct ((_ extract 37 37) C1) (_ bv0 1)) true) (_ bv37 44) (_ bv36 44)))))
 (let ((?x15289 (ite (and (distinct ((_ extract 41 41) C1) (_ bv0 1)) true) (_ bv41 44) (ite (and (distinct ((_ extract 40 40) C1) (_ bv0 1)) true) (_ bv40 44) (_ bv39 44)))))
 (let ((?x13273 (ite (and (distinct ((_ extract 43 42) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 43 43) C1) (_ bv0 1)) true) (_ bv43 44) (_ bv42 44)) ?x15289)))
 (let ((?x14472 (ite (and (distinct ((_ extract 43 39) C1) (_ bv0 5)) true) ?x13273 (ite (and (distinct ((_ extract 38 36) C1) (_ bv0 3)) true) ?x23370 ?x15393))))
 (let ((?x4588 (ite (and (distinct ((_ extract 43 22) C1) (_ bv0 22)) true) (ite (and (distinct ((_ extract 43 33) C1) (_ bv0 11)) true) ?x14472 ?x323) (ite (and (distinct ((_ extract 21 11) C1) (_ bv0 11)) true) ?x15159 ?x11523))))
 (let ((?x16538 (bvsub ?x4588 ?x1063)))
 (let ((?x6677 (ite (and (distinct ((_ extract 2 2) C1) (_ bv0 1)) true) (_ bv2 32) (ite (and (distinct ((_ extract 1 1) C1) (_ bv0 1)) true) (_ bv1 32) (_ bv0 32)))))
 (let ((?x11951 (ite (and (distinct ((_ extract 5 5) C1) (_ bv0 1)) true) (_ bv5 32) (ite (and (distinct ((_ extract 4 4) C1) (_ bv0 1)) true) (_ bv4 32) (_ bv3 32)))))
 (let ((?x20492 (ite (and (distinct ((_ extract 8 8) C1) (_ bv0 1)) true) (_ bv8 32) (ite (and (distinct ((_ extract 7 7) C1) (_ bv0 1)) true) (_ bv7 32) (_ bv6 32)))))
 (let ((?x16150 (ite (and (distinct ((_ extract 10 9) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) C1) (_ bv0 1)) true) (_ bv10 32) (_ bv9 32)) ?x20492)))
 (let ((?x16142 (ite (and (distinct ((_ extract 10 6) C1) (_ bv0 5)) true) ?x16150 (ite (and (distinct ((_ extract 5 3) C1) (_ bv0 3)) true) ?x11951 ?x6677))))
 (let ((?x23985 (ite (and (distinct ((_ extract 13 13) C1) (_ bv0 1)) true) (_ bv13 32) (ite (and (distinct ((_ extract 12 12) C1) (_ bv0 1)) true) (_ bv12 32) (_ bv11 32)))))
 (let ((?x20847 (ite (and (distinct ((_ extract 16 16) C1) (_ bv0 1)) true) (_ bv16 32) (ite (and (distinct ((_ extract 15 15) C1) (_ bv0 1)) true) (_ bv15 32) (_ bv14 32)))))
 (let ((?x18948 (ite (and (distinct ((_ extract 19 19) C1) (_ bv0 1)) true) (_ bv19 32) (ite (and (distinct ((_ extract 18 18) C1) (_ bv0 1)) true) (_ bv18 32) (_ bv17 32)))))
 (let ((?x17293 (ite (and (distinct ((_ extract 21 20) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 21 21) C1) (_ bv0 1)) true) (_ bv21 32) (_ bv20 32)) ?x18948)))
 (let ((?x1877 (ite (and (distinct ((_ extract 21 17) C1) (_ bv0 5)) true) ?x17293 (ite (and (distinct ((_ extract 16 14) C1) (_ bv0 3)) true) ?x20847 ?x23985))))
 (let ((?x11038 (ite (and (distinct ((_ extract 24 24) C1) (_ bv0 1)) true) (_ bv24 32) (ite (and (distinct ((_ extract 23 23) C1) (_ bv0 1)) true) (_ bv23 32) (_ bv22 32)))))
 (let ((?x10233 (ite (and (distinct ((_ extract 27 27) C1) (_ bv0 1)) true) (_ bv27 32) (ite (and (distinct ((_ extract 26 26) C1) (_ bv0 1)) true) (_ bv26 32) (_ bv25 32)))))
 (let ((?x1931 (ite (and (distinct ((_ extract 30 30) C1) (_ bv0 1)) true) (_ bv30 32) (ite (and (distinct ((_ extract 29 29) C1) (_ bv0 1)) true) (_ bv29 32) (_ bv28 32)))))
 (let ((?x1870 (ite (and (distinct ((_ extract 32 31) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 32 32) C1) (_ bv0 1)) true) (_ bv32 32) (_ bv31 32)) ?x1931)))
 (let ((?x12629 (ite (and (distinct ((_ extract 32 28) C1) (_ bv0 5)) true) ?x1870 (ite (and (distinct ((_ extract 27 25) C1) (_ bv0 3)) true) ?x10233 ?x11038))))
 (let ((?x1657 (ite (and (distinct ((_ extract 35 35) C1) (_ bv0 1)) true) (_ bv35 32) (ite (and (distinct ((_ extract 34 34) C1) (_ bv0 1)) true) (_ bv34 32) (_ bv33 32)))))
 (let ((?x12133 (ite (and (distinct ((_ extract 38 38) C1) (_ bv0 1)) true) (_ bv38 32) (ite (and (distinct ((_ extract 37 37) C1) (_ bv0 1)) true) (_ bv37 32) (_ bv36 32)))))
 (let ((?x11531 (ite (and (distinct ((_ extract 41 41) C1) (_ bv0 1)) true) (_ bv41 32) (ite (and (distinct ((_ extract 40 40) C1) (_ bv0 1)) true) (_ bv40 32) (_ bv39 32)))))
 (let ((?x20487 (ite (and (distinct ((_ extract 43 42) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 43 43) C1) (_ bv0 1)) true) (_ bv43 32) (_ bv42 32)) ?x11531)))
 (let ((?x1076 (ite (and (distinct ((_ extract 43 39) C1) (_ bv0 5)) true) ?x20487 (ite (and (distinct ((_ extract 38 36) C1) (_ bv0 3)) true) ?x12133 ?x1657))))
 (let ((?x1025 (ite (and (distinct ((_ extract 43 22) C1) (_ bv0 22)) true) (ite (and (distinct ((_ extract 43 33) C1) (_ bv0 11)) true) ?x1076 ?x12629) (ite (and (distinct ((_ extract 21 11) C1) (_ bv0 11)) true) ?x1877 ?x16142))))
 (let ((?x3794 (ite (and (distinct ((_ extract 2 2) C2) (_ bv0 1)) true) (_ bv2 32) (ite (and (distinct ((_ extract 1 1) C2) (_ bv0 1)) true) (_ bv1 32) (_ bv0 32)))))
 (let ((?x14409 (ite (and (distinct ((_ extract 5 5) C2) (_ bv0 1)) true) (_ bv5 32) (ite (and (distinct ((_ extract 4 4) C2) (_ bv0 1)) true) (_ bv4 32) (_ bv3 32)))))
 (let ((?x13290 (ite (and (distinct ((_ extract 8 8) C2) (_ bv0 1)) true) (_ bv8 32) (ite (and (distinct ((_ extract 7 7) C2) (_ bv0 1)) true) (_ bv7 32) (_ bv6 32)))))
 (let ((?x22481 (ite (and (distinct ((_ extract 10 9) C2) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) C2) (_ bv0 1)) true) (_ bv10 32) (_ bv9 32)) ?x13290)))
 (let ((?x9911 (ite (and (distinct ((_ extract 10 6) C2) (_ bv0 5)) true) ?x22481 (ite (and (distinct ((_ extract 5 3) C2) (_ bv0 3)) true) ?x14409 ?x3794))))
 (and (and (and (distinct C1 (_ bv0 44)) true) (= (bvand C1 (bvsub C1 (_ bv1 44))) (_ bv0 44))) (and (and (distinct C2 (_ bv0 11)) true) (= (bvand C2 (bvsub C2 (_ bv1 11))) (_ bv0 11))) (bvslt ?x9911 ?x1025) (not (bvult ?x16538 (_ bv44 44))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
