(set-info :status unknown)
(declare-fun C2 () (_ BitVec 11))
(declare-fun C1 () (_ BitVec 44))
(assert
 (let ((?x3357 (ite (and (distinct ((_ extract 2 2) C2) (_ bv0 1)) true) (_ bv2 44) (ite (and (distinct ((_ extract 1 1) C2) (_ bv0 1)) true) (_ bv1 44) (_ bv0 44)))))
 (let ((?x4570 (ite (and (distinct ((_ extract 5 5) C2) (_ bv0 1)) true) (_ bv5 44) (ite (and (distinct ((_ extract 4 4) C2) (_ bv0 1)) true) (_ bv4 44) (_ bv3 44)))))
 (let ((?x1687 (ite (and (distinct ((_ extract 8 8) C2) (_ bv0 1)) true) (_ bv8 44) (ite (and (distinct ((_ extract 7 7) C2) (_ bv0 1)) true) (_ bv7 44) (_ bv6 44)))))
 (let ((?x5794 (ite (and (distinct ((_ extract 10 9) C2) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) C2) (_ bv0 1)) true) (_ bv10 44) (_ bv9 44)) ?x1687)))
 (let ((?x5069 (ite (and (distinct ((_ extract 10 6) C2) (_ bv0 5)) true) ?x5794 (ite (and (distinct ((_ extract 5 3) C2) (_ bv0 3)) true) ?x4570 ?x3357))))
 (let ((?x6833 (ite (and (distinct ((_ extract 2 2) C1) (_ bv0 1)) true) (_ bv2 44) (ite (and (distinct ((_ extract 1 1) C1) (_ bv0 1)) true) (_ bv1 44) (_ bv0 44)))))
 (let ((?x2418 (ite (and (distinct ((_ extract 5 5) C1) (_ bv0 1)) true) (_ bv5 44) (ite (and (distinct ((_ extract 4 4) C1) (_ bv0 1)) true) (_ bv4 44) (_ bv3 44)))))
 (let ((?x4014 (ite (and (distinct ((_ extract 8 8) C1) (_ bv0 1)) true) (_ bv8 44) (ite (and (distinct ((_ extract 7 7) C1) (_ bv0 1)) true) (_ bv7 44) (_ bv6 44)))))
 (let ((?x2978 (ite (and (distinct ((_ extract 10 9) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) C1) (_ bv0 1)) true) (_ bv10 44) (_ bv9 44)) ?x4014)))
 (let ((?x1286 (ite (and (distinct ((_ extract 10 6) C1) (_ bv0 5)) true) ?x2978 (ite (and (distinct ((_ extract 5 3) C1) (_ bv0 3)) true) ?x2418 ?x6833))))
 (let ((?x6120 (ite (and (distinct ((_ extract 13 13) C1) (_ bv0 1)) true) (_ bv13 44) (ite (and (distinct ((_ extract 12 12) C1) (_ bv0 1)) true) (_ bv12 44) (_ bv11 44)))))
 (let ((?x5522 (ite (and (distinct ((_ extract 16 16) C1) (_ bv0 1)) true) (_ bv16 44) (ite (and (distinct ((_ extract 15 15) C1) (_ bv0 1)) true) (_ bv15 44) (_ bv14 44)))))
 (let ((?x2189 (ite (and (distinct ((_ extract 19 19) C1) (_ bv0 1)) true) (_ bv19 44) (ite (and (distinct ((_ extract 18 18) C1) (_ bv0 1)) true) (_ bv18 44) (_ bv17 44)))))
 (let ((?x2635 (ite (and (distinct ((_ extract 21 20) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 21 21) C1) (_ bv0 1)) true) (_ bv21 44) (_ bv20 44)) ?x2189)))
 (let ((?x2325 (ite (and (distinct ((_ extract 21 17) C1) (_ bv0 5)) true) ?x2635 (ite (and (distinct ((_ extract 16 14) C1) (_ bv0 3)) true) ?x5522 ?x6120))))
 (let ((?x1175 (ite (and (distinct ((_ extract 24 24) C1) (_ bv0 1)) true) (_ bv24 44) (ite (and (distinct ((_ extract 23 23) C1) (_ bv0 1)) true) (_ bv23 44) (_ bv22 44)))))
 (let ((?x3240 (ite (and (distinct ((_ extract 27 27) C1) (_ bv0 1)) true) (_ bv27 44) (ite (and (distinct ((_ extract 26 26) C1) (_ bv0 1)) true) (_ bv26 44) (_ bv25 44)))))
 (let ((?x6455 (ite (and (distinct ((_ extract 30 30) C1) (_ bv0 1)) true) (_ bv30 44) (ite (and (distinct ((_ extract 29 29) C1) (_ bv0 1)) true) (_ bv29 44) (_ bv28 44)))))
 (let ((?x5692 (ite (and (distinct ((_ extract 32 31) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 32 32) C1) (_ bv0 1)) true) (_ bv32 44) (_ bv31 44)) ?x6455)))
 (let ((?x2392 (ite (and (distinct ((_ extract 32 28) C1) (_ bv0 5)) true) ?x5692 (ite (and (distinct ((_ extract 27 25) C1) (_ bv0 3)) true) ?x3240 ?x1175))))
 (let ((?x4874 (ite (and (distinct ((_ extract 35 35) C1) (_ bv0 1)) true) (_ bv35 44) (ite (and (distinct ((_ extract 34 34) C1) (_ bv0 1)) true) (_ bv34 44) (_ bv33 44)))))
 (let ((?x4573 (ite (and (distinct ((_ extract 38 38) C1) (_ bv0 1)) true) (_ bv38 44) (ite (and (distinct ((_ extract 37 37) C1) (_ bv0 1)) true) (_ bv37 44) (_ bv36 44)))))
 (let ((?x2684 (ite (and (distinct ((_ extract 41 41) C1) (_ bv0 1)) true) (_ bv41 44) (ite (and (distinct ((_ extract 40 40) C1) (_ bv0 1)) true) (_ bv40 44) (_ bv39 44)))))
 (let ((?x3771 (ite (and (distinct ((_ extract 43 42) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 43 43) C1) (_ bv0 1)) true) (_ bv43 44) (_ bv42 44)) ?x2684)))
 (let ((?x3172 (ite (and (distinct ((_ extract 43 39) C1) (_ bv0 5)) true) ?x3771 (ite (and (distinct ((_ extract 38 36) C1) (_ bv0 3)) true) ?x4573 ?x4874))))
 (let ((?x5795 (ite (and (distinct ((_ extract 43 22) C1) (_ bv0 22)) true) (ite (and (distinct ((_ extract 43 33) C1) (_ bv0 11)) true) ?x3172 ?x2392) (ite (and (distinct ((_ extract 21 11) C1) (_ bv0 11)) true) ?x2325 ?x1286))))
 (let ((?x5598 (bvsub ?x5795 ?x5069)))
 (let ((?x3122 (ite (and (distinct ((_ extract 2 2) C1) (_ bv0 1)) true) (_ bv2 32) (ite (and (distinct ((_ extract 1 1) C1) (_ bv0 1)) true) (_ bv1 32) (_ bv0 32)))))
 (let ((?x2069 (ite (and (distinct ((_ extract 5 5) C1) (_ bv0 1)) true) (_ bv5 32) (ite (and (distinct ((_ extract 4 4) C1) (_ bv0 1)) true) (_ bv4 32) (_ bv3 32)))))
 (let ((?x2131 (ite (and (distinct ((_ extract 8 8) C1) (_ bv0 1)) true) (_ bv8 32) (ite (and (distinct ((_ extract 7 7) C1) (_ bv0 1)) true) (_ bv7 32) (_ bv6 32)))))
 (let ((?x1574 (ite (and (distinct ((_ extract 10 9) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) C1) (_ bv0 1)) true) (_ bv10 32) (_ bv9 32)) ?x2131)))
 (let ((?x1332 (ite (and (distinct ((_ extract 10 6) C1) (_ bv0 5)) true) ?x1574 (ite (and (distinct ((_ extract 5 3) C1) (_ bv0 3)) true) ?x2069 ?x3122))))
 (let ((?x6806 (ite (and (distinct ((_ extract 13 13) C1) (_ bv0 1)) true) (_ bv13 32) (ite (and (distinct ((_ extract 12 12) C1) (_ bv0 1)) true) (_ bv12 32) (_ bv11 32)))))
 (let ((?x4732 (ite (and (distinct ((_ extract 16 16) C1) (_ bv0 1)) true) (_ bv16 32) (ite (and (distinct ((_ extract 15 15) C1) (_ bv0 1)) true) (_ bv15 32) (_ bv14 32)))))
 (let ((?x4216 (ite (and (distinct ((_ extract 19 19) C1) (_ bv0 1)) true) (_ bv19 32) (ite (and (distinct ((_ extract 18 18) C1) (_ bv0 1)) true) (_ bv18 32) (_ bv17 32)))))
 (let ((?x5687 (ite (and (distinct ((_ extract 21 20) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 21 21) C1) (_ bv0 1)) true) (_ bv21 32) (_ bv20 32)) ?x4216)))
 (let ((?x4988 (ite (and (distinct ((_ extract 21 17) C1) (_ bv0 5)) true) ?x5687 (ite (and (distinct ((_ extract 16 14) C1) (_ bv0 3)) true) ?x4732 ?x6806))))
 (let ((?x4093 (ite (and (distinct ((_ extract 24 24) C1) (_ bv0 1)) true) (_ bv24 32) (ite (and (distinct ((_ extract 23 23) C1) (_ bv0 1)) true) (_ bv23 32) (_ bv22 32)))))
 (let ((?x2933 (ite (and (distinct ((_ extract 27 27) C1) (_ bv0 1)) true) (_ bv27 32) (ite (and (distinct ((_ extract 26 26) C1) (_ bv0 1)) true) (_ bv26 32) (_ bv25 32)))))
 (let ((?x2725 (ite (and (distinct ((_ extract 30 30) C1) (_ bv0 1)) true) (_ bv30 32) (ite (and (distinct ((_ extract 29 29) C1) (_ bv0 1)) true) (_ bv29 32) (_ bv28 32)))))
 (let ((?x2701 (ite (and (distinct ((_ extract 32 31) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 32 32) C1) (_ bv0 1)) true) (_ bv32 32) (_ bv31 32)) ?x2725)))
 (let ((?x3902 (ite (and (distinct ((_ extract 32 28) C1) (_ bv0 5)) true) ?x2701 (ite (and (distinct ((_ extract 27 25) C1) (_ bv0 3)) true) ?x2933 ?x4093))))
 (let ((?x1728 (ite (and (distinct ((_ extract 35 35) C1) (_ bv0 1)) true) (_ bv35 32) (ite (and (distinct ((_ extract 34 34) C1) (_ bv0 1)) true) (_ bv34 32) (_ bv33 32)))))
 (let ((?x1347 (ite (and (distinct ((_ extract 38 38) C1) (_ bv0 1)) true) (_ bv38 32) (ite (and (distinct ((_ extract 37 37) C1) (_ bv0 1)) true) (_ bv37 32) (_ bv36 32)))))
 (let ((?x5373 (ite (and (distinct ((_ extract 41 41) C1) (_ bv0 1)) true) (_ bv41 32) (ite (and (distinct ((_ extract 40 40) C1) (_ bv0 1)) true) (_ bv40 32) (_ bv39 32)))))
 (let ((?x3102 (ite (and (distinct ((_ extract 43 42) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 43 43) C1) (_ bv0 1)) true) (_ bv43 32) (_ bv42 32)) ?x5373)))
 (let ((?x2944 (ite (and (distinct ((_ extract 43 39) C1) (_ bv0 5)) true) ?x3102 (ite (and (distinct ((_ extract 38 36) C1) (_ bv0 3)) true) ?x1347 ?x1728))))
 (let ((?x5063 (ite (and (distinct ((_ extract 43 22) C1) (_ bv0 22)) true) (ite (and (distinct ((_ extract 43 33) C1) (_ bv0 11)) true) ?x2944 ?x3902) (ite (and (distinct ((_ extract 21 11) C1) (_ bv0 11)) true) ?x4988 ?x1332))))
 (let ((?x3884 (ite (and (distinct ((_ extract 2 2) C2) (_ bv0 1)) true) (_ bv2 32) (ite (and (distinct ((_ extract 1 1) C2) (_ bv0 1)) true) (_ bv1 32) (_ bv0 32)))))
 (let ((?x5077 (ite (and (distinct ((_ extract 5 5) C2) (_ bv0 1)) true) (_ bv5 32) (ite (and (distinct ((_ extract 4 4) C2) (_ bv0 1)) true) (_ bv4 32) (_ bv3 32)))))
 (let ((?x4579 (ite (and (distinct ((_ extract 8 8) C2) (_ bv0 1)) true) (_ bv8 32) (ite (and (distinct ((_ extract 7 7) C2) (_ bv0 1)) true) (_ bv7 32) (_ bv6 32)))))
 (let ((?x3870 (ite (and (distinct ((_ extract 10 9) C2) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) C2) (_ bv0 1)) true) (_ bv10 32) (_ bv9 32)) ?x4579)))
 (let ((?x3233 (ite (and (distinct ((_ extract 10 6) C2) (_ bv0 5)) true) ?x3870 (ite (and (distinct ((_ extract 5 3) C2) (_ bv0 3)) true) ?x5077 ?x3884))))
 (and (and (and (distinct C1 (_ bv0 44)) true) (= (bvand C1 (bvsub C1 (_ bv1 44))) (_ bv0 44))) (and (and (distinct C2 (_ bv0 11)) true) (= (bvand C2 (bvsub C2 (_ bv1 11))) (_ bv0 11))) (bvslt ?x3233 ?x5063) (not (bvult ?x5598 (_ bv44 44))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
