(set-info :source |
 Generated by Alive 0.1
 More info in N. P. Lopes, D. Menendez, S. Nagarakatte, J. Regehr.
 Provably Correct Peephole Optimizations with Alive. In PLDI'15.
|)

(set-info :status unknown)
(declare-fun C2 () (_ BitVec 29))
(declare-fun %B () (_ BitVec 29))
(declare-fun %A () (_ BitVec 29))
(declare-fun C1 () (_ BitVec 29))
(declare-fun |ana_MaskedValueIsZero(%B, ((1 << (width(C2) - countLeadingZeros(((C2 - 1) ^ C2)))) - 1))| () (_ BitVec 1))
(assert
 (let (($x64978 (and (distinct (bvand (bvadd (bvand %A C1) %B) C2) (bvand (bvadd %A %B) C2)) true)))
 (let (($x64669 (= |ana_MaskedValueIsZero(%B, ((1 << (width(C2) - countLeadingZeros(((C2 - 1) ^ C2)))) - 1))| (_ bv1 1))))
 (let ((?x10204 (bvsub C2 (_ bv1 29))))
 (let ((?x68013 (bvor ?x10204 C2)))
 (let (($x67937 (and (and (distinct ?x68013 (_ bv0 29)) true) (= (bvand (bvadd ?x68013 (_ bv1 29)) ?x68013) (_ bv0 29)) $x64669)))
 (let (($x67248 (or (= (bvand (bvadd C2 (_ bv1 29)) (bvsub (bvadd C2 (_ bv1 29)) (_ bv1 29))) (_ bv0 29)) $x67937)))
 (let ((?x51968 (bvand C1 C2)))
 (let (($x67873 (= ?x51968 C2)))
 (let ((?x65755 (ite (= ((_ extract 1 1) (bvxor ?x10204 C2)) (_ bv1 1)) (_ bv27 29) (ite (= ((_ extract 0 0) (bvxor ?x10204 C2)) (_ bv1 1)) (_ bv28 29) (_ bv29 29)))))
 (let ((?x66053 (ite (= ((_ extract 3 3) (bvxor ?x10204 C2)) (_ bv1 1)) (_ bv25 29) (ite (= ((_ extract 2 2) (bvxor ?x10204 C2)) (_ bv1 1)) (_ bv26 29) ?x65755))))
 (let ((?x65975 (ite (= ((_ extract 5 5) (bvxor ?x10204 C2)) (_ bv1 1)) (_ bv23 29) (ite (= ((_ extract 4 4) (bvxor ?x10204 C2)) (_ bv1 1)) (_ bv24 29) ?x66053))))
 (let ((?x66615 (ite (= ((_ extract 7 7) (bvxor ?x10204 C2)) (_ bv1 1)) (_ bv21 29) (ite (= ((_ extract 6 6) (bvxor ?x10204 C2)) (_ bv1 1)) (_ bv22 29) ?x65975))))
 (let ((?x66525 (ite (= ((_ extract 9 9) (bvxor ?x10204 C2)) (_ bv1 1)) (_ bv19 29) (ite (= ((_ extract 8 8) (bvxor ?x10204 C2)) (_ bv1 1)) (_ bv20 29) ?x66615))))
 (let ((?x66499 (ite (= ((_ extract 11 11) (bvxor ?x10204 C2)) (_ bv1 1)) (_ bv17 29) (ite (= ((_ extract 10 10) (bvxor ?x10204 C2)) (_ bv1 1)) (_ bv18 29) ?x66525))))
 (let ((?x62903 (ite (= ((_ extract 13 13) (bvxor ?x10204 C2)) (_ bv1 1)) (_ bv15 29) (ite (= ((_ extract 12 12) (bvxor ?x10204 C2)) (_ bv1 1)) (_ bv16 29) ?x66499))))
 (let ((?x67602 (ite (= ((_ extract 15 15) (bvxor ?x10204 C2)) (_ bv1 1)) (_ bv13 29) (ite (= ((_ extract 14 14) (bvxor ?x10204 C2)) (_ bv1 1)) (_ bv14 29) ?x62903))))
 (let ((?x66826 (ite (= ((_ extract 17 17) (bvxor ?x10204 C2)) (_ bv1 1)) (_ bv11 29) (ite (= ((_ extract 16 16) (bvxor ?x10204 C2)) (_ bv1 1)) (_ bv12 29) ?x67602))))
 (let ((?x66697 (ite (= ((_ extract 19 19) (bvxor ?x10204 C2)) (_ bv1 1)) (_ bv9 29) (ite (= ((_ extract 18 18) (bvxor ?x10204 C2)) (_ bv1 1)) (_ bv10 29) ?x66826))))
 (let ((?x67197 (ite (= ((_ extract 21 21) (bvxor ?x10204 C2)) (_ bv1 1)) (_ bv7 29) (ite (= ((_ extract 20 20) (bvxor ?x10204 C2)) (_ bv1 1)) (_ bv8 29) ?x66697))))
 (let ((?x67528 (ite (= ((_ extract 23 23) (bvxor ?x10204 C2)) (_ bv1 1)) (_ bv5 29) (ite (= ((_ extract 22 22) (bvxor ?x10204 C2)) (_ bv1 1)) (_ bv6 29) ?x67197))))
 (let ((?x67306 (ite (= ((_ extract 25 25) (bvxor ?x10204 C2)) (_ bv1 1)) (_ bv3 29) (ite (= ((_ extract 24 24) (bvxor ?x10204 C2)) (_ bv1 1)) (_ bv4 29) ?x67528))))
 (let ((?x68179 (ite (= ((_ extract 27 27) (bvxor ?x10204 C2)) (_ bv1 1)) (_ bv1 29) (ite (= ((_ extract 26 26) (bvxor ?x10204 C2)) (_ bv1 1)) (_ bv2 29) ?x67306))))
 (let ((?x67803 (bvshl (_ bv1 29) (bvsub (_ bv29 29) (ite (= ((_ extract 28 28) (bvxor ?x10204 C2)) (_ bv1 1)) (_ bv0 29) ?x68179)))))
 (let (($x64400 (=> $x64669 (= (bvand %B (bvsub ?x67803 (_ bv1 29))) (_ bv0 29)))))
 (and $x64400 $x67873 $x67248 $x64978))))))))))))))))))))))))))
(check-sat)
