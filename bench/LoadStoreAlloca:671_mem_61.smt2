(set-info :status unknown)
(declare-fun mem0 () (_ BitVec 8))
(declare-fun %y () (_ BitVec 63))
(declare-fun %p2 () (_ BitVec 64))
(declare-fun idx () (_ BitVec 64))
(declare-fun %x () (_ BitVec 63))
(declare-fun %p1 () (_ BitVec 64))
(declare-fun |ana_equivalentAddressValues(%p1, %p2)| () (_ BitVec 1))
(assert
 (let ((?x7848 (ite (and (and (distinct %p2 (_ bv0 64)) true) (or true true) (= idx %p2)) (concat ((_ extract 7 7) mem0) ((_ extract 6 0) %y)) mem0)))
 (let (($x5000 (or true true)))
 (let (($x15278 (and (distinct %p2 (_ bv0 64)) true)))
 (let ((?x9594 (ite (and $x15278 $x5000 (= idx (bvadd (bvadd %p2 (_ bv1 64)) (_ bv0 64)))) ((_ extract 14 7) %y) ?x7848)))
 (let ((?x19915 (ite (and $x15278 $x5000 (= idx (bvadd (bvadd %p2 (_ bv1 64)) (_ bv1 64)))) ((_ extract 22 15) %y) ?x9594)))
 (let ((?x6727 (ite (and $x15278 $x5000 (= idx (bvadd (bvadd %p2 (_ bv1 64)) (_ bv2 64)))) ((_ extract 30 23) %y) ?x19915)))
 (let ((?x19961 (ite (and $x15278 $x5000 (= idx (bvadd (bvadd %p2 (_ bv1 64)) (_ bv3 64)))) ((_ extract 38 31) %y) ?x6727)))
 (let ((?x17107 (ite (and $x15278 $x5000 (= idx (bvadd (bvadd %p2 (_ bv1 64)) (_ bv4 64)))) ((_ extract 46 39) %y) ?x19961)))
 (let ((?x1225 (ite (and $x15278 $x5000 (= idx (bvadd (bvadd %p2 (_ bv1 64)) (_ bv5 64)))) ((_ extract 54 47) %y) ?x17107)))
 (let ((?x9726 (ite (and $x15278 $x5000 (= idx (bvadd (bvadd %p2 (_ bv1 64)) (_ bv6 64)))) ((_ extract 62 55) %y) ?x1225)))
 (let ((?x21869 (ite (and (and (distinct %p1 (_ bv0 64)) true) $x5000 (= idx %p1)) (concat ((_ extract 7 7) mem0) ((_ extract 6 0) %x)) mem0)))
 (let (($x17212 (and (distinct %p1 (_ bv0 64)) true)))
 (let ((?x16688 (ite (and $x17212 $x5000 (= idx (bvadd (bvadd %p1 (_ bv1 64)) (_ bv0 64)))) ((_ extract 14 7) %x) ?x21869)))
 (let ((?x389 (ite (and $x17212 $x5000 (= idx (bvadd (bvadd %p1 (_ bv1 64)) (_ bv1 64)))) ((_ extract 22 15) %x) ?x16688)))
 (let ((?x8668 (ite (and $x17212 $x5000 (= idx (bvadd (bvadd %p1 (_ bv1 64)) (_ bv2 64)))) ((_ extract 30 23) %x) ?x389)))
 (let ((?x10314 (ite (and $x17212 $x5000 (= idx (bvadd (bvadd %p1 (_ bv1 64)) (_ bv3 64)))) ((_ extract 38 31) %x) ?x8668)))
 (let ((?x3256 (ite (and $x17212 $x5000 (= idx (bvadd (bvadd %p1 (_ bv1 64)) (_ bv4 64)))) ((_ extract 46 39) %x) ?x10314)))
 (let ((?x19140 (ite (and $x17212 $x5000 (= idx (bvadd (bvadd %p1 (_ bv1 64)) (_ bv5 64)))) ((_ extract 54 47) %x) ?x3256)))
 (let ((?x17522 (ite (and $x17212 $x5000 (= idx (bvadd (bvadd %p1 (_ bv1 64)) (_ bv6 64)))) ((_ extract 62 55) %x) ?x19140)))
 (let ((?x8088 (ite (and $x17212 $x5000 (= %p2 %p1)) (concat ((_ extract 7 7) mem0) ((_ extract 6 0) %x)) mem0)))
 (let ((?x10432 (ite (and $x17212 $x5000 (= %p2 (bvadd (bvadd %p1 (_ bv1 64)) (_ bv0 64)))) ((_ extract 14 7) %x) ?x8088)))
 (let ((?x10015 (ite (and $x17212 $x5000 (= %p2 (bvadd (bvadd %p1 (_ bv1 64)) (_ bv1 64)))) ((_ extract 22 15) %x) ?x10432)))
 (let ((?x19833 (ite (and $x17212 $x5000 (= %p2 (bvadd (bvadd %p1 (_ bv1 64)) (_ bv2 64)))) ((_ extract 30 23) %x) ?x10015)))
 (let ((?x6308 (ite (and $x17212 $x5000 (= %p2 (bvadd (bvadd %p1 (_ bv1 64)) (_ bv3 64)))) ((_ extract 38 31) %x) ?x19833)))
 (let ((?x16460 (ite (and $x17212 $x5000 (= %p2 (bvadd (bvadd %p1 (_ bv1 64)) (_ bv4 64)))) ((_ extract 46 39) %x) ?x6308)))
 (let ((?x6897 (ite (and $x17212 $x5000 (= %p2 (bvadd (bvadd %p1 (_ bv1 64)) (_ bv5 64)))) ((_ extract 54 47) %x) ?x16460)))
 (let ((?x14129 (ite (and $x17212 $x5000 (= %p2 (bvadd (bvadd %p1 (_ bv1 64)) (_ bv6 64)))) ((_ extract 62 55) %x) ?x6897)))
 (let ((?x17990 (ite (and $x17212 $x5000 $x15278 $x5000 (= idx %p2)) (concat ((_ extract 7 7) ?x14129) ((_ extract 6 0) %y)) ?x17522)))
 (let ((?x14788 (ite (and $x17212 $x5000 $x15278 $x5000 (= idx (bvadd (bvadd %p2 (_ bv1 64)) (_ bv0 64)))) ((_ extract 14 7) %y) ?x17990)))
 (let ((?x14457 (ite (and $x17212 $x5000 $x15278 $x5000 (= idx (bvadd (bvadd %p2 (_ bv1 64)) (_ bv1 64)))) ((_ extract 22 15) %y) ?x14788)))
 (let ((?x6572 (ite (and $x17212 $x5000 $x15278 $x5000 (= idx (bvadd (bvadd %p2 (_ bv1 64)) (_ bv2 64)))) ((_ extract 30 23) %y) ?x14457)))
 (let ((?x3722 (ite (and $x17212 $x5000 $x15278 $x5000 (= idx (bvadd (bvadd %p2 (_ bv1 64)) (_ bv3 64)))) ((_ extract 38 31) %y) ?x6572)))
 (let ((?x3380 (ite (and $x17212 $x5000 $x15278 $x5000 (= idx (bvadd (bvadd %p2 (_ bv1 64)) (_ bv4 64)))) ((_ extract 46 39) %y) ?x3722)))
 (let ((?x15489 (ite (and $x17212 $x5000 $x15278 $x5000 (= idx (bvadd (bvadd %p2 (_ bv1 64)) (_ bv5 64)))) ((_ extract 54 47) %y) ?x3380)))
 (let ((?x11201 (ite (and $x17212 $x5000 $x15278 $x5000 (= idx (bvadd (bvadd %p2 (_ bv1 64)) (_ bv6 64)))) ((_ extract 62 55) %y) ?x15489)))
 (let (($x4007 (= |ana_equivalentAddressValues(%p1, %p2)| (_ bv1 1))))
 (and (=> $x4007 (= %p1 %p2)) $x4007 (and (distinct ?x11201 ?x9726) true)))))))))))))))))))))))))))))))))))))))
(check-sat)
