(set-info :status unknown)
(declare-fun mem0 () (_ BitVec 8))
(declare-fun alloca%a_3091 () (_ BitVec 8))
(declare-fun %a () (_ BitVec 64))
(declare-fun idx () (_ BitVec 64))
(declare-fun %x () (_ BitVec 5))
(declare-fun %idx () (_ BitVec 52))
(declare-fun u_%a () (_ BitVec 8))
(declare-fun u_%ptr () (_ BitVec 8))
(assert
 (forall ((alloca%a_3090 (_ BitVec 8)) (alloca%a_3092 (_ BitVec 8)) )(let (($x13738 (= idx (bvadd %a (_ bv0 64)))))
 (let ((?x79 (ite $x13738 ((_ extract 7 0) alloca%a_3091) mem0)))
 (let ((?x5440 (ite (= (bvadd %a (bvmul (_ bv1 64) ((_ sign_extend 12) %idx))) (bvadd %a (_ bv0 64))) ((_ extract 7 0) alloca%a_3090) mem0)))
 (let (($x17600 (bvuge (_ bv0 64) (bvsub (bvadd %a (bvmul (_ bv1 64) ((_ sign_extend 12) %idx))) %a))))
 (let (($x12587 (and (distinct %a (_ bv0 64)) true)))
 (let (($x22198 (and $x12587 (and (distinct (bvadd %a (bvmul (_ bv1 64) ((_ sign_extend 12) %idx))) (_ bv0 64)) true) (and (bvuge (bvadd %a (bvmul (_ bv1 64) ((_ sign_extend 12) %idx))) %a) $x17600) (= idx (bvadd %a (bvmul (_ bv1 64) ((_ sign_extend 12) %idx)))))))
 (let ((?x6681 (ite $x22198 (concat ((_ extract 7 5) ?x5440) ((_ extract 4 0) %x)) (ite $x13738 ((_ extract 7 0) alloca%a_3090) mem0))))
 (and $x12587 $x12587 (= u_%ptr (_ bv1 8)) (= u_%a (_ bv1 8)) $x12587 $x12587 $x12587 (and (distinct (ite $x13738 ((_ extract 7 0) alloca%a_3092) ?x6681) ?x79) true))))))))))
 )
(check-sat)
