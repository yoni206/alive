(set-info :status unknown)
(declare-fun C2 () (_ BitVec 11))
(declare-fun C1 () (_ BitVec 49))
(assert
 (let ((?x17499 (ite (and (distinct ((_ extract 2 2) C2) (_ bv0 1)) true) (_ bv2 49) (ite (and (distinct ((_ extract 1 1) C2) (_ bv0 1)) true) (_ bv1 49) (_ bv0 49)))))
 (let ((?x11802 (ite (and (distinct ((_ extract 5 5) C2) (_ bv0 1)) true) (_ bv5 49) (ite (and (distinct ((_ extract 4 4) C2) (_ bv0 1)) true) (_ bv4 49) (_ bv3 49)))))
 (let ((?x20098 (ite (and (distinct ((_ extract 8 8) C2) (_ bv0 1)) true) (_ bv8 49) (ite (and (distinct ((_ extract 7 7) C2) (_ bv0 1)) true) (_ bv7 49) (_ bv6 49)))))
 (let ((?x10629 (ite (and (distinct ((_ extract 10 9) C2) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) C2) (_ bv0 1)) true) (_ bv10 49) (_ bv9 49)) ?x20098)))
 (let ((?x15039 (ite (and (distinct ((_ extract 10 6) C2) (_ bv0 5)) true) ?x10629 (ite (and (distinct ((_ extract 5 3) C2) (_ bv0 3)) true) ?x11802 ?x17499))))
 (let ((?x7353 (ite (and (distinct ((_ extract 3 2) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 3 3) C1) (_ bv0 1)) true) (_ bv3 49) (_ bv2 49)) (ite (and (distinct ((_ extract 1 1) C1) (_ bv0 1)) true) (_ bv1 49) (_ bv0 49)))))
 (let ((?x18553 (ite (and (distinct ((_ extract 6 6) C1) (_ bv0 1)) true) (_ bv6 49) (ite (and (distinct ((_ extract 5 5) C1) (_ bv0 1)) true) (_ bv5 49) (_ bv4 49)))))
 (let ((?x23054 (ite (and (distinct ((_ extract 9 9) C1) (_ bv0 1)) true) (_ bv9 49) (ite (and (distinct ((_ extract 8 8) C1) (_ bv0 1)) true) (_ bv8 49) (_ bv7 49)))))
 (let ((?x18594 (ite (and (distinct ((_ extract 12 12) C1) (_ bv0 1)) true) (_ bv12 49) (ite (and (distinct ((_ extract 11 11) C1) (_ bv0 1)) true) (_ bv11 49) (_ bv10 49)))))
 (let ((?x10907 (ite (and (distinct ((_ extract 12 7) C1) (_ bv0 6)) true) (ite (and (distinct ((_ extract 12 10) C1) (_ bv0 3)) true) ?x18594 ?x23054) (ite (and (distinct ((_ extract 6 4) C1) (_ bv0 3)) true) ?x18553 ?x7353))))
 (let ((?x17526 (ite (and (distinct ((_ extract 15 15) C1) (_ bv0 1)) true) (_ bv15 49) (ite (and (distinct ((_ extract 14 14) C1) (_ bv0 1)) true) (_ bv14 49) (_ bv13 49)))))
 (let ((?x3157 (ite (and (distinct ((_ extract 18 18) C1) (_ bv0 1)) true) (_ bv18 49) (ite (and (distinct ((_ extract 17 17) C1) (_ bv0 1)) true) (_ bv17 49) (_ bv16 49)))))
 (let ((?x9477 (ite (and (distinct ((_ extract 21 21) C1) (_ bv0 1)) true) (_ bv21 49) (ite (and (distinct ((_ extract 20 20) C1) (_ bv0 1)) true) (_ bv20 49) (_ bv19 49)))))
 (let ((?x2025 (ite (and (distinct ((_ extract 24 24) C1) (_ bv0 1)) true) (_ bv24 49) (ite (and (distinct ((_ extract 23 23) C1) (_ bv0 1)) true) (_ bv23 49) (_ bv22 49)))))
 (let ((?x3316 (ite (and (distinct ((_ extract 24 19) C1) (_ bv0 6)) true) (ite (and (distinct ((_ extract 24 22) C1) (_ bv0 3)) true) ?x2025 ?x9477) (ite (and (distinct ((_ extract 18 16) C1) (_ bv0 3)) true) ?x3157 ?x17526))))
 (let ((?x5725 (ite (and (distinct ((_ extract 27 27) C1) (_ bv0 1)) true) (_ bv27 49) (ite (and (distinct ((_ extract 26 26) C1) (_ bv0 1)) true) (_ bv26 49) (_ bv25 49)))))
 (let ((?x2293 (ite (and (distinct ((_ extract 30 30) C1) (_ bv0 1)) true) (_ bv30 49) (ite (and (distinct ((_ extract 29 29) C1) (_ bv0 1)) true) (_ bv29 49) (_ bv28 49)))))
 (let ((?x9639 (ite (and (distinct ((_ extract 33 33) C1) (_ bv0 1)) true) (_ bv33 49) (ite (and (distinct ((_ extract 32 32) C1) (_ bv0 1)) true) (_ bv32 49) (_ bv31 49)))))
 (let ((?x14689 (ite (and (distinct ((_ extract 36 36) C1) (_ bv0 1)) true) (_ bv36 49) (ite (and (distinct ((_ extract 35 35) C1) (_ bv0 1)) true) (_ bv35 49) (_ bv34 49)))))
 (let ((?x7516 (ite (and (distinct ((_ extract 36 31) C1) (_ bv0 6)) true) (ite (and (distinct ((_ extract 36 34) C1) (_ bv0 3)) true) ?x14689 ?x9639) (ite (and (distinct ((_ extract 30 28) C1) (_ bv0 3)) true) ?x2293 ?x5725))))
 (let ((?x9767 (ite (and (distinct ((_ extract 39 39) C1) (_ bv0 1)) true) (_ bv39 49) (ite (and (distinct ((_ extract 38 38) C1) (_ bv0 1)) true) (_ bv38 49) (_ bv37 49)))))
 (let ((?x5430 (ite (and (distinct ((_ extract 42 42) C1) (_ bv0 1)) true) (_ bv42 49) (ite (and (distinct ((_ extract 41 41) C1) (_ bv0 1)) true) (_ bv41 49) (_ bv40 49)))))
 (let ((?x15190 (ite (and (distinct ((_ extract 45 45) C1) (_ bv0 1)) true) (_ bv45 49) (ite (and (distinct ((_ extract 44 44) C1) (_ bv0 1)) true) (_ bv44 49) (_ bv43 49)))))
 (let ((?x9230 (ite (and (distinct ((_ extract 48 48) C1) (_ bv0 1)) true) (_ bv48 49) (ite (and (distinct ((_ extract 47 47) C1) (_ bv0 1)) true) (_ bv47 49) (_ bv46 49)))))
 (let ((?x16544 (ite (and (distinct ((_ extract 48 43) C1) (_ bv0 6)) true) (ite (and (distinct ((_ extract 48 46) C1) (_ bv0 3)) true) ?x9230 ?x15190) (ite (and (distinct ((_ extract 42 40) C1) (_ bv0 3)) true) ?x5430 ?x9767))))
 (let ((?x6468 (ite (and (distinct ((_ extract 48 25) C1) (_ bv0 24)) true) (ite (and (distinct ((_ extract 48 37) C1) (_ bv0 12)) true) ?x16544 ?x7516) (ite (and (distinct ((_ extract 24 13) C1) (_ bv0 12)) true) ?x3316 ?x10907))))
 (let ((?x3962 (bvsub ?x6468 ?x15039)))
 (let ((?x24688 (ite (and (distinct ((_ extract 3 2) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 3 3) C1) (_ bv0 1)) true) (_ bv3 32) (_ bv2 32)) (ite (and (distinct ((_ extract 1 1) C1) (_ bv0 1)) true) (_ bv1 32) (_ bv0 32)))))
 (let ((?x5927 (ite (and (distinct ((_ extract 6 6) C1) (_ bv0 1)) true) (_ bv6 32) (ite (and (distinct ((_ extract 5 5) C1) (_ bv0 1)) true) (_ bv5 32) (_ bv4 32)))))
 (let ((?x13723 (ite (and (distinct ((_ extract 9 9) C1) (_ bv0 1)) true) (_ bv9 32) (ite (and (distinct ((_ extract 8 8) C1) (_ bv0 1)) true) (_ bv8 32) (_ bv7 32)))))
 (let ((?x10749 (ite (and (distinct ((_ extract 12 12) C1) (_ bv0 1)) true) (_ bv12 32) (ite (and (distinct ((_ extract 11 11) C1) (_ bv0 1)) true) (_ bv11 32) (_ bv10 32)))))
 (let ((?x13902 (ite (and (distinct ((_ extract 12 7) C1) (_ bv0 6)) true) (ite (and (distinct ((_ extract 12 10) C1) (_ bv0 3)) true) ?x10749 ?x13723) (ite (and (distinct ((_ extract 6 4) C1) (_ bv0 3)) true) ?x5927 ?x24688))))
 (let ((?x4138 (ite (and (distinct ((_ extract 15 15) C1) (_ bv0 1)) true) (_ bv15 32) (ite (and (distinct ((_ extract 14 14) C1) (_ bv0 1)) true) (_ bv14 32) (_ bv13 32)))))
 (let ((?x1906 (ite (and (distinct ((_ extract 18 18) C1) (_ bv0 1)) true) (_ bv18 32) (ite (and (distinct ((_ extract 17 17) C1) (_ bv0 1)) true) (_ bv17 32) (_ bv16 32)))))
 (let ((?x23528 (ite (and (distinct ((_ extract 21 21) C1) (_ bv0 1)) true) (_ bv21 32) (ite (and (distinct ((_ extract 20 20) C1) (_ bv0 1)) true) (_ bv20 32) (_ bv19 32)))))
 (let ((?x17292 (ite (and (distinct ((_ extract 24 24) C1) (_ bv0 1)) true) (_ bv24 32) (ite (and (distinct ((_ extract 23 23) C1) (_ bv0 1)) true) (_ bv23 32) (_ bv22 32)))))
 (let ((?x10965 (ite (and (distinct ((_ extract 24 19) C1) (_ bv0 6)) true) (ite (and (distinct ((_ extract 24 22) C1) (_ bv0 3)) true) ?x17292 ?x23528) (ite (and (distinct ((_ extract 18 16) C1) (_ bv0 3)) true) ?x1906 ?x4138))))
 (let ((?x14050 (ite (and (distinct ((_ extract 27 27) C1) (_ bv0 1)) true) (_ bv27 32) (ite (and (distinct ((_ extract 26 26) C1) (_ bv0 1)) true) (_ bv26 32) (_ bv25 32)))))
 (let ((?x9178 (ite (and (distinct ((_ extract 30 30) C1) (_ bv0 1)) true) (_ bv30 32) (ite (and (distinct ((_ extract 29 29) C1) (_ bv0 1)) true) (_ bv29 32) (_ bv28 32)))))
 (let ((?x7994 (ite (and (distinct ((_ extract 33 33) C1) (_ bv0 1)) true) (_ bv33 32) (ite (and (distinct ((_ extract 32 32) C1) (_ bv0 1)) true) (_ bv32 32) (_ bv31 32)))))
 (let ((?x6643 (ite (and (distinct ((_ extract 36 36) C1) (_ bv0 1)) true) (_ bv36 32) (ite (and (distinct ((_ extract 35 35) C1) (_ bv0 1)) true) (_ bv35 32) (_ bv34 32)))))
 (let ((?x10994 (ite (and (distinct ((_ extract 36 31) C1) (_ bv0 6)) true) (ite (and (distinct ((_ extract 36 34) C1) (_ bv0 3)) true) ?x6643 ?x7994) (ite (and (distinct ((_ extract 30 28) C1) (_ bv0 3)) true) ?x9178 ?x14050))))
 (let ((?x3895 (ite (and (distinct ((_ extract 39 39) C1) (_ bv0 1)) true) (_ bv39 32) (ite (and (distinct ((_ extract 38 38) C1) (_ bv0 1)) true) (_ bv38 32) (_ bv37 32)))))
 (let ((?x2891 (ite (and (distinct ((_ extract 42 42) C1) (_ bv0 1)) true) (_ bv42 32) (ite (and (distinct ((_ extract 41 41) C1) (_ bv0 1)) true) (_ bv41 32) (_ bv40 32)))))
 (let ((?x17182 (ite (and (distinct ((_ extract 45 45) C1) (_ bv0 1)) true) (_ bv45 32) (ite (and (distinct ((_ extract 44 44) C1) (_ bv0 1)) true) (_ bv44 32) (_ bv43 32)))))
 (let ((?x14725 (ite (and (distinct ((_ extract 48 48) C1) (_ bv0 1)) true) (_ bv48 32) (ite (and (distinct ((_ extract 47 47) C1) (_ bv0 1)) true) (_ bv47 32) (_ bv46 32)))))
 (let ((?x6081 (ite (and (distinct ((_ extract 48 43) C1) (_ bv0 6)) true) (ite (and (distinct ((_ extract 48 46) C1) (_ bv0 3)) true) ?x14725 ?x17182) (ite (and (distinct ((_ extract 42 40) C1) (_ bv0 3)) true) ?x2891 ?x3895))))
 (let ((?x216 (ite (and (distinct ((_ extract 48 25) C1) (_ bv0 24)) true) (ite (and (distinct ((_ extract 48 37) C1) (_ bv0 12)) true) ?x6081 ?x10994) (ite (and (distinct ((_ extract 24 13) C1) (_ bv0 12)) true) ?x10965 ?x13902))))
 (let ((?x20235 (ite (and (distinct ((_ extract 2 2) C2) (_ bv0 1)) true) (_ bv2 32) (ite (and (distinct ((_ extract 1 1) C2) (_ bv0 1)) true) (_ bv1 32) (_ bv0 32)))))
 (let ((?x6999 (ite (and (distinct ((_ extract 5 5) C2) (_ bv0 1)) true) (_ bv5 32) (ite (and (distinct ((_ extract 4 4) C2) (_ bv0 1)) true) (_ bv4 32) (_ bv3 32)))))
 (let ((?x10131 (ite (and (distinct ((_ extract 8 8) C2) (_ bv0 1)) true) (_ bv8 32) (ite (and (distinct ((_ extract 7 7) C2) (_ bv0 1)) true) (_ bv7 32) (_ bv6 32)))))
 (let ((?x1654 (ite (and (distinct ((_ extract 10 9) C2) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) C2) (_ bv0 1)) true) (_ bv10 32) (_ bv9 32)) ?x10131)))
 (let ((?x680 (ite (and (distinct ((_ extract 10 6) C2) (_ bv0 5)) true) ?x1654 (ite (and (distinct ((_ extract 5 3) C2) (_ bv0 3)) true) ?x6999 ?x20235))))
 (and (and (and (distinct C1 (_ bv0 49)) true) (= (bvand C1 (bvsub C1 (_ bv1 49))) (_ bv0 49))) (and (and (distinct C2 (_ bv0 11)) true) (= (bvand C2 (bvsub C2 (_ bv1 11))) (_ bv0 11))) (bvslt ?x680 ?x216) (not (bvult ?x3962 (_ bv49 49))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
