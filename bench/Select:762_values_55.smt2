(set-info :status unknown)
(declare-fun C3 () (_ BitVec 11))
(declare-fun C2 () (_ BitVec 11))
(declare-fun C () (_ BitVec 59))
(declare-fun %Op () (_ BitVec 59))
(assert
 (let ((?x5994 (bvsub C2 C3)))
 (let ((?x1370 (ite (and (distinct ((_ extract 2 2) ?x5994) (_ bv0 1)) true) (_ bv2 11) (ite (and (distinct ((_ extract 1 1) ?x5994) (_ bv0 1)) true) (_ bv1 11) (_ bv0 11)))))
 (let ((?x4232 (ite (and (distinct ((_ extract 5 5) ?x5994) (_ bv0 1)) true) (_ bv5 11) (ite (and (distinct ((_ extract 4 4) ?x5994) (_ bv0 1)) true) (_ bv4 11) (_ bv3 11)))))
 (let ((?x8472 (ite (and (distinct ((_ extract 8 8) ?x5994) (_ bv0 1)) true) (_ bv8 11) (ite (and (distinct ((_ extract 7 7) ?x5994) (_ bv0 1)) true) (_ bv7 11) (_ bv6 11)))))
 (let ((?x5692 (ite (and (distinct ((_ extract 10 9) ?x5994) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) ?x5994) (_ bv0 1)) true) (_ bv10 11) (_ bv9 11)) ?x8472)))
 (let ((?x2371 (ite (and (distinct ((_ extract 10 6) ?x5994) (_ bv0 5)) true) ?x5692 (ite (and (distinct ((_ extract 5 3) ?x5994) (_ bv0 3)) true) ?x4232 ?x1370))))
 (let ((?x6385 (ite (and (distinct ((_ extract 3 2) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 3 3) C) (_ bv0 1)) true) (_ bv3 11) (_ bv2 11)) (ite (and (distinct ((_ extract 1 1) C) (_ bv0 1)) true) (_ bv1 11) (_ bv0 11)))))
 (let ((?x2191 (ite (and (distinct ((_ extract 7 6) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 7 7) C) (_ bv0 1)) true) (_ bv7 11) (_ bv6 11)) (ite (and (distinct ((_ extract 5 5) C) (_ bv0 1)) true) (_ bv5 11) (_ bv4 11)))))
 (let ((?x5070 (ite (and (distinct ((_ extract 11 10) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 11 11) C) (_ bv0 1)) true) (_ bv11 11) (_ bv10 11)) (ite (and (distinct ((_ extract 9 9) C) (_ bv0 1)) true) (_ bv9 11) (_ bv8 11)))))
 (let ((?x7593 (ite (and (distinct ((_ extract 14 14) C) (_ bv0 1)) true) (_ bv14 11) (ite (and (distinct ((_ extract 13 13) C) (_ bv0 1)) true) (_ bv13 11) (_ bv12 11)))))
 (let ((?x6795 (ite (and (distinct ((_ extract 14 8) C) (_ bv0 7)) true) (ite (and (distinct ((_ extract 14 12) C) (_ bv0 3)) true) ?x7593 ?x5070) (ite (and (distinct ((_ extract 7 4) C) (_ bv0 4)) true) ?x2191 ?x6385))))
 (let ((?x3798 (ite (and (distinct ((_ extract 18 17) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 18 18) C) (_ bv0 1)) true) (_ bv18 11) (_ bv17 11)) (ite (and (distinct ((_ extract 16 16) C) (_ bv0 1)) true) (_ bv16 11) (_ bv15 11)))))
 (let ((?x7730 (ite (and (distinct ((_ extract 22 21) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 22 22) C) (_ bv0 1)) true) (_ bv22 11) (_ bv21 11)) (ite (and (distinct ((_ extract 20 20) C) (_ bv0 1)) true) (_ bv20 11) (_ bv19 11)))))
 (let ((?x6679 (ite (and (distinct ((_ extract 26 25) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 26 26) C) (_ bv0 1)) true) (_ bv26 11) (_ bv25 11)) (ite (and (distinct ((_ extract 24 24) C) (_ bv0 1)) true) (_ bv24 11) (_ bv23 11)))))
 (let ((?x6526 (ite (and (distinct ((_ extract 29 29) C) (_ bv0 1)) true) (_ bv29 11) (ite (and (distinct ((_ extract 28 28) C) (_ bv0 1)) true) (_ bv28 11) (_ bv27 11)))))
 (let ((?x7117 (ite (and (distinct ((_ extract 29 23) C) (_ bv0 7)) true) (ite (and (distinct ((_ extract 29 27) C) (_ bv0 3)) true) ?x6526 ?x6679) (ite (and (distinct ((_ extract 22 19) C) (_ bv0 4)) true) ?x7730 ?x3798))))
 (let ((?x4902 (ite (and (distinct ((_ extract 33 32) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 33 33) C) (_ bv0 1)) true) (_ bv33 11) (_ bv32 11)) (ite (and (distinct ((_ extract 31 31) C) (_ bv0 1)) true) (_ bv31 11) (_ bv30 11)))))
 (let ((?x4050 (ite (and (distinct ((_ extract 37 36) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 37 37) C) (_ bv0 1)) true) (_ bv37 11) (_ bv36 11)) (ite (and (distinct ((_ extract 35 35) C) (_ bv0 1)) true) (_ bv35 11) (_ bv34 11)))))
 (let ((?x6198 (ite (and (distinct ((_ extract 41 40) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 41 41) C) (_ bv0 1)) true) (_ bv41 11) (_ bv40 11)) (ite (and (distinct ((_ extract 39 39) C) (_ bv0 1)) true) (_ bv39 11) (_ bv38 11)))))
 (let ((?x2881 (ite (and (distinct ((_ extract 44 44) C) (_ bv0 1)) true) (_ bv44 11) (ite (and (distinct ((_ extract 43 43) C) (_ bv0 1)) true) (_ bv43 11) (_ bv42 11)))))
 (let ((?x7981 (ite (and (distinct ((_ extract 44 38) C) (_ bv0 7)) true) (ite (and (distinct ((_ extract 44 42) C) (_ bv0 3)) true) ?x2881 ?x6198) (ite (and (distinct ((_ extract 37 34) C) (_ bv0 4)) true) ?x4050 ?x4902))))
 (let ((?x1957 (ite (and (distinct ((_ extract 48 47) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 48 48) C) (_ bv0 1)) true) (_ bv48 11) (_ bv47 11)) (ite (and (distinct ((_ extract 46 46) C) (_ bv0 1)) true) (_ bv46 11) (_ bv45 11)))))
 (let ((?x7272 (ite (and (distinct ((_ extract 51 51) C) (_ bv0 1)) true) (_ bv51 11) (ite (and (distinct ((_ extract 50 50) C) (_ bv0 1)) true) (_ bv50 11) (_ bv49 11)))))
 (let ((?x8027 (ite (and (distinct ((_ extract 55 54) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 55 55) C) (_ bv0 1)) true) (_ bv55 11) (_ bv54 11)) (ite (and (distinct ((_ extract 53 53) C) (_ bv0 1)) true) (_ bv53 11) (_ bv52 11)))))
 (let ((?x3938 (ite (and (distinct ((_ extract 58 58) C) (_ bv0 1)) true) (_ bv58 11) (ite (and (distinct ((_ extract 57 57) C) (_ bv0 1)) true) (_ bv57 11) (_ bv56 11)))))
 (let ((?x1863 (ite (and (distinct ((_ extract 58 52) C) (_ bv0 7)) true) (ite (and (distinct ((_ extract 58 56) C) (_ bv0 3)) true) ?x3938 ?x8027) (ite (and (distinct ((_ extract 51 49) C) (_ bv0 3)) true) ?x7272 ?x1957))))
 (let ((?x3289 (ite (and (distinct ((_ extract 58 30) C) (_ bv0 29)) true) (ite (and (distinct ((_ extract 58 45) C) (_ bv0 14)) true) ?x1863 ?x7981) (ite (and (distinct ((_ extract 29 15) C) (_ bv0 15)) true) ?x7117 ?x6795))))
 (let ((?x4686 (bvsub ?x3289 ?x2371)))
 (let ((?x2160 (ite (bvsgt (_ bv0 11) ?x4686) (_ bv0 11) ?x4686)))
 (let ((?x5107 (bvsub ?x2371 ?x3289)))
 (let ((?x3823 (ite (bvsgt (_ bv0 11) ?x5107) (_ bv0 11) ?x5107)))
 (let ((?x6725 (bvadd (bvxor (bvlshr (bvshl ((_ extract 10 0) (bvand %Op C)) ?x3823) ?x2160) ?x5994) C3)))
 (let (($x1718 (and (distinct (ite (= (ite (= (bvand %Op C) (_ bv0 59)) (_ bv1 1) (_ bv0 1)) (_ bv1 1)) C2 C3) ?x6725) true)))
 (let ((?x6087 (ite (and (distinct ((_ extract 3 2) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 3 3) C) (_ bv0 1)) true) (_ bv3 32) (_ bv2 32)) (ite (and (distinct ((_ extract 1 1) C) (_ bv0 1)) true) (_ bv1 32) (_ bv0 32)))))
 (let ((?x3594 (ite (and (distinct ((_ extract 7 6) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 7 7) C) (_ bv0 1)) true) (_ bv7 32) (_ bv6 32)) (ite (and (distinct ((_ extract 5 5) C) (_ bv0 1)) true) (_ bv5 32) (_ bv4 32)))))
 (let ((?x1189 (ite (and (distinct ((_ extract 11 10) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 11 11) C) (_ bv0 1)) true) (_ bv11 32) (_ bv10 32)) (ite (and (distinct ((_ extract 9 9) C) (_ bv0 1)) true) (_ bv9 32) (_ bv8 32)))))
 (let ((?x7568 (ite (and (distinct ((_ extract 14 14) C) (_ bv0 1)) true) (_ bv14 32) (ite (and (distinct ((_ extract 13 13) C) (_ bv0 1)) true) (_ bv13 32) (_ bv12 32)))))
 (let ((?x2919 (ite (and (distinct ((_ extract 14 8) C) (_ bv0 7)) true) (ite (and (distinct ((_ extract 14 12) C) (_ bv0 3)) true) ?x7568 ?x1189) (ite (and (distinct ((_ extract 7 4) C) (_ bv0 4)) true) ?x3594 ?x6087))))
 (let ((?x6150 (ite (and (distinct ((_ extract 18 17) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 18 18) C) (_ bv0 1)) true) (_ bv18 32) (_ bv17 32)) (ite (and (distinct ((_ extract 16 16) C) (_ bv0 1)) true) (_ bv16 32) (_ bv15 32)))))
 (let ((?x5855 (ite (and (distinct ((_ extract 22 21) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 22 22) C) (_ bv0 1)) true) (_ bv22 32) (_ bv21 32)) (ite (and (distinct ((_ extract 20 20) C) (_ bv0 1)) true) (_ bv20 32) (_ bv19 32)))))
 (let ((?x4562 (ite (and (distinct ((_ extract 26 25) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 26 26) C) (_ bv0 1)) true) (_ bv26 32) (_ bv25 32)) (ite (and (distinct ((_ extract 24 24) C) (_ bv0 1)) true) (_ bv24 32) (_ bv23 32)))))
 (let ((?x3866 (ite (and (distinct ((_ extract 29 29) C) (_ bv0 1)) true) (_ bv29 32) (ite (and (distinct ((_ extract 28 28) C) (_ bv0 1)) true) (_ bv28 32) (_ bv27 32)))))
 (let ((?x6710 (ite (and (distinct ((_ extract 29 23) C) (_ bv0 7)) true) (ite (and (distinct ((_ extract 29 27) C) (_ bv0 3)) true) ?x3866 ?x4562) (ite (and (distinct ((_ extract 22 19) C) (_ bv0 4)) true) ?x5855 ?x6150))))
 (let ((?x2977 (ite (and (distinct ((_ extract 33 32) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 33 33) C) (_ bv0 1)) true) (_ bv33 32) (_ bv32 32)) (ite (and (distinct ((_ extract 31 31) C) (_ bv0 1)) true) (_ bv31 32) (_ bv30 32)))))
 (let ((?x2656 (ite (and (distinct ((_ extract 37 36) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 37 37) C) (_ bv0 1)) true) (_ bv37 32) (_ bv36 32)) (ite (and (distinct ((_ extract 35 35) C) (_ bv0 1)) true) (_ bv35 32) (_ bv34 32)))))
 (let ((?x2209 (ite (and (distinct ((_ extract 41 40) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 41 41) C) (_ bv0 1)) true) (_ bv41 32) (_ bv40 32)) (ite (and (distinct ((_ extract 39 39) C) (_ bv0 1)) true) (_ bv39 32) (_ bv38 32)))))
 (let ((?x7844 (ite (and (distinct ((_ extract 44 44) C) (_ bv0 1)) true) (_ bv44 32) (ite (and (distinct ((_ extract 43 43) C) (_ bv0 1)) true) (_ bv43 32) (_ bv42 32)))))
 (let ((?x3489 (ite (and (distinct ((_ extract 44 38) C) (_ bv0 7)) true) (ite (and (distinct ((_ extract 44 42) C) (_ bv0 3)) true) ?x7844 ?x2209) (ite (and (distinct ((_ extract 37 34) C) (_ bv0 4)) true) ?x2656 ?x2977))))
 (let ((?x4468 (ite (and (distinct ((_ extract 48 47) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 48 48) C) (_ bv0 1)) true) (_ bv48 32) (_ bv47 32)) (ite (and (distinct ((_ extract 46 46) C) (_ bv0 1)) true) (_ bv46 32) (_ bv45 32)))))
 (let ((?x6692 (ite (and (distinct ((_ extract 51 51) C) (_ bv0 1)) true) (_ bv51 32) (ite (and (distinct ((_ extract 50 50) C) (_ bv0 1)) true) (_ bv50 32) (_ bv49 32)))))
 (let ((?x4474 (ite (and (distinct ((_ extract 55 54) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 55 55) C) (_ bv0 1)) true) (_ bv55 32) (_ bv54 32)) (ite (and (distinct ((_ extract 53 53) C) (_ bv0 1)) true) (_ bv53 32) (_ bv52 32)))))
 (let ((?x5713 (ite (and (distinct ((_ extract 58 58) C) (_ bv0 1)) true) (_ bv58 32) (ite (and (distinct ((_ extract 57 57) C) (_ bv0 1)) true) (_ bv57 32) (_ bv56 32)))))
 (let ((?x5292 (ite (and (distinct ((_ extract 58 52) C) (_ bv0 7)) true) (ite (and (distinct ((_ extract 58 56) C) (_ bv0 3)) true) ?x5713 ?x4474) (ite (and (distinct ((_ extract 51 49) C) (_ bv0 3)) true) ?x6692 ?x4468))))
 (let ((?x8098 (ite (and (distinct ((_ extract 58 30) C) (_ bv0 29)) true) (ite (and (distinct ((_ extract 58 45) C) (_ bv0 14)) true) ?x5292 ?x3489) (ite (and (distinct ((_ extract 29 15) C) (_ bv0 15)) true) ?x6710 ?x2919))))
 (and (and (and (distinct C (_ bv0 59)) true) (= (bvand C (bvsub C (_ bv1 59))) (_ bv0 59))) (and (and (distinct ?x5994 (_ bv0 11)) true) (= (bvand ?x5994 (bvsub ?x5994 (_ bv1 11))) (_ bv0 11))) (bvslt ?x8098 (_ bv11 32)) $x1718))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
