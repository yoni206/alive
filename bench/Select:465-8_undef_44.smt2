(set-info :status unknown)
(declare-fun C2 () (_ BitVec 11))
(declare-fun C1 () (_ BitVec 46))
(assert
 (let ((?x18337 (ite (and (distinct ((_ extract 2 2) C2) (_ bv0 1)) true) (_ bv2 46) (ite (and (distinct ((_ extract 1 1) C2) (_ bv0 1)) true) (_ bv1 46) (_ bv0 46)))))
 (let ((?x22634 (ite (and (distinct ((_ extract 5 5) C2) (_ bv0 1)) true) (_ bv5 46) (ite (and (distinct ((_ extract 4 4) C2) (_ bv0 1)) true) (_ bv4 46) (_ bv3 46)))))
 (let ((?x10965 (ite (and (distinct ((_ extract 8 8) C2) (_ bv0 1)) true) (_ bv8 46) (ite (and (distinct ((_ extract 7 7) C2) (_ bv0 1)) true) (_ bv7 46) (_ bv6 46)))))
 (let ((?x6721 (ite (and (distinct ((_ extract 10 9) C2) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) C2) (_ bv0 1)) true) (_ bv10 46) (_ bv9 46)) ?x10965)))
 (let ((?x17702 (ite (and (distinct ((_ extract 10 6) C2) (_ bv0 5)) true) ?x6721 (ite (and (distinct ((_ extract 5 3) C2) (_ bv0 3)) true) ?x22634 ?x18337))))
 (let ((?x6045 (ite (and (distinct ((_ extract 2 2) C1) (_ bv0 1)) true) (_ bv2 46) (ite (and (distinct ((_ extract 1 1) C1) (_ bv0 1)) true) (_ bv1 46) (_ bv0 46)))))
 (let ((?x11675 (ite (and (distinct ((_ extract 5 5) C1) (_ bv0 1)) true) (_ bv5 46) (ite (and (distinct ((_ extract 4 4) C1) (_ bv0 1)) true) (_ bv4 46) (_ bv3 46)))))
 (let ((?x7263 (ite (and (distinct ((_ extract 8 8) C1) (_ bv0 1)) true) (_ bv8 46) (ite (and (distinct ((_ extract 7 7) C1) (_ bv0 1)) true) (_ bv7 46) (_ bv6 46)))))
 (let ((?x16675 (ite (and (distinct ((_ extract 11 11) C1) (_ bv0 1)) true) (_ bv11 46) (ite (and (distinct ((_ extract 10 10) C1) (_ bv0 1)) true) (_ bv10 46) (_ bv9 46)))))
 (let ((?x18594 (ite (and (distinct ((_ extract 11 6) C1) (_ bv0 6)) true) (ite (and (distinct ((_ extract 11 9) C1) (_ bv0 3)) true) ?x16675 ?x7263) (ite (and (distinct ((_ extract 5 3) C1) (_ bv0 3)) true) ?x11675 ?x6045))))
 (let ((?x20939 (ite (and (distinct ((_ extract 14 14) C1) (_ bv0 1)) true) (_ bv14 46) (ite (and (distinct ((_ extract 13 13) C1) (_ bv0 1)) true) (_ bv13 46) (_ bv12 46)))))
 (let ((?x12267 (ite (and (distinct ((_ extract 17 17) C1) (_ bv0 1)) true) (_ bv17 46) (ite (and (distinct ((_ extract 16 16) C1) (_ bv0 1)) true) (_ bv16 46) (_ bv15 46)))))
 (let ((?x13418 (ite (and (distinct ((_ extract 20 20) C1) (_ bv0 1)) true) (_ bv20 46) (ite (and (distinct ((_ extract 19 19) C1) (_ bv0 1)) true) (_ bv19 46) (_ bv18 46)))))
 (let ((?x13764 (ite (and (distinct ((_ extract 22 21) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 22 22) C1) (_ bv0 1)) true) (_ bv22 46) (_ bv21 46)) ?x13418)))
 (let ((?x9044 (ite (and (distinct ((_ extract 22 18) C1) (_ bv0 5)) true) ?x13764 (ite (and (distinct ((_ extract 17 15) C1) (_ bv0 3)) true) ?x12267 ?x20939))))
 (let ((?x2293 (ite (and (distinct ((_ extract 25 25) C1) (_ bv0 1)) true) (_ bv25 46) (ite (and (distinct ((_ extract 24 24) C1) (_ bv0 1)) true) (_ bv24 46) (_ bv23 46)))))
 (let ((?x9639 (ite (and (distinct ((_ extract 28 28) C1) (_ bv0 1)) true) (_ bv28 46) (ite (and (distinct ((_ extract 27 27) C1) (_ bv0 1)) true) (_ bv27 46) (_ bv26 46)))))
 (let ((?x9565 (ite (and (distinct ((_ extract 31 31) C1) (_ bv0 1)) true) (_ bv31 46) (ite (and (distinct ((_ extract 30 30) C1) (_ bv0 1)) true) (_ bv30 46) (_ bv29 46)))))
 (let ((?x2837 (ite (and (distinct ((_ extract 34 34) C1) (_ bv0 1)) true) (_ bv34 46) (ite (and (distinct ((_ extract 33 33) C1) (_ bv0 1)) true) (_ bv33 46) (_ bv32 46)))))
 (let ((?x2304 (ite (and (distinct ((_ extract 34 29) C1) (_ bv0 6)) true) (ite (and (distinct ((_ extract 34 32) C1) (_ bv0 3)) true) ?x2837 ?x9565) (ite (and (distinct ((_ extract 28 26) C1) (_ bv0 3)) true) ?x9639 ?x2293))))
 (let ((?x1413 (ite (and (distinct ((_ extract 37 37) C1) (_ bv0 1)) true) (_ bv37 46) (ite (and (distinct ((_ extract 36 36) C1) (_ bv0 1)) true) (_ bv36 46) (_ bv35 46)))))
 (let ((?x8488 (ite (and (distinct ((_ extract 40 40) C1) (_ bv0 1)) true) (_ bv40 46) (ite (and (distinct ((_ extract 39 39) C1) (_ bv0 1)) true) (_ bv39 46) (_ bv38 46)))))
 (let ((?x4250 (ite (and (distinct ((_ extract 43 43) C1) (_ bv0 1)) true) (_ bv43 46) (ite (and (distinct ((_ extract 42 42) C1) (_ bv0 1)) true) (_ bv42 46) (_ bv41 46)))))
 (let ((?x2153 (ite (and (distinct ((_ extract 45 44) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 45 45) C1) (_ bv0 1)) true) (_ bv45 46) (_ bv44 46)) ?x4250)))
 (let ((?x11014 (ite (and (distinct ((_ extract 45 41) C1) (_ bv0 5)) true) ?x2153 (ite (and (distinct ((_ extract 40 38) C1) (_ bv0 3)) true) ?x8488 ?x1413))))
 (let ((?x8639 (ite (and (distinct ((_ extract 45 23) C1) (_ bv0 23)) true) (ite (and (distinct ((_ extract 45 35) C1) (_ bv0 11)) true) ?x11014 ?x2304) (ite (and (distinct ((_ extract 22 12) C1) (_ bv0 11)) true) ?x9044 ?x18594))))
 (let ((?x20367 (bvsub ?x8639 ?x17702)))
 (let ((?x18006 (ite (and (distinct ((_ extract 2 2) C1) (_ bv0 1)) true) (_ bv2 32) (ite (and (distinct ((_ extract 1 1) C1) (_ bv0 1)) true) (_ bv1 32) (_ bv0 32)))))
 (let ((?x1864 (ite (and (distinct ((_ extract 5 5) C1) (_ bv0 1)) true) (_ bv5 32) (ite (and (distinct ((_ extract 4 4) C1) (_ bv0 1)) true) (_ bv4 32) (_ bv3 32)))))
 (let ((?x4344 (ite (and (distinct ((_ extract 8 8) C1) (_ bv0 1)) true) (_ bv8 32) (ite (and (distinct ((_ extract 7 7) C1) (_ bv0 1)) true) (_ bv7 32) (_ bv6 32)))))
 (let ((?x9568 (ite (and (distinct ((_ extract 11 11) C1) (_ bv0 1)) true) (_ bv11 32) (ite (and (distinct ((_ extract 10 10) C1) (_ bv0 1)) true) (_ bv10 32) (_ bv9 32)))))
 (let ((?x19512 (ite (and (distinct ((_ extract 11 6) C1) (_ bv0 6)) true) (ite (and (distinct ((_ extract 11 9) C1) (_ bv0 3)) true) ?x9568 ?x4344) (ite (and (distinct ((_ extract 5 3) C1) (_ bv0 3)) true) ?x1864 ?x18006))))
 (let ((?x17717 (ite (and (distinct ((_ extract 14 14) C1) (_ bv0 1)) true) (_ bv14 32) (ite (and (distinct ((_ extract 13 13) C1) (_ bv0 1)) true) (_ bv13 32) (_ bv12 32)))))
 (let ((?x17588 (ite (and (distinct ((_ extract 17 17) C1) (_ bv0 1)) true) (_ bv17 32) (ite (and (distinct ((_ extract 16 16) C1) (_ bv0 1)) true) (_ bv16 32) (_ bv15 32)))))
 (let ((?x15927 (ite (and (distinct ((_ extract 20 20) C1) (_ bv0 1)) true) (_ bv20 32) (ite (and (distinct ((_ extract 19 19) C1) (_ bv0 1)) true) (_ bv19 32) (_ bv18 32)))))
 (let ((?x20794 (ite (and (distinct ((_ extract 22 21) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 22 22) C1) (_ bv0 1)) true) (_ bv22 32) (_ bv21 32)) ?x15927)))
 (let ((?x12185 (ite (and (distinct ((_ extract 22 18) C1) (_ bv0 5)) true) ?x20794 (ite (and (distinct ((_ extract 17 15) C1) (_ bv0 3)) true) ?x17588 ?x17717))))
 (let ((?x18403 (ite (and (distinct ((_ extract 25 25) C1) (_ bv0 1)) true) (_ bv25 32) (ite (and (distinct ((_ extract 24 24) C1) (_ bv0 1)) true) (_ bv24 32) (_ bv23 32)))))
 (let ((?x16532 (ite (and (distinct ((_ extract 28 28) C1) (_ bv0 1)) true) (_ bv28 32) (ite (and (distinct ((_ extract 27 27) C1) (_ bv0 1)) true) (_ bv27 32) (_ bv26 32)))))
 (let ((?x9447 (ite (and (distinct ((_ extract 31 31) C1) (_ bv0 1)) true) (_ bv31 32) (ite (and (distinct ((_ extract 30 30) C1) (_ bv0 1)) true) (_ bv30 32) (_ bv29 32)))))
 (let ((?x6604 (ite (and (distinct ((_ extract 34 34) C1) (_ bv0 1)) true) (_ bv34 32) (ite (and (distinct ((_ extract 33 33) C1) (_ bv0 1)) true) (_ bv33 32) (_ bv32 32)))))
 (let ((?x3963 (ite (and (distinct ((_ extract 34 29) C1) (_ bv0 6)) true) (ite (and (distinct ((_ extract 34 32) C1) (_ bv0 3)) true) ?x6604 ?x9447) (ite (and (distinct ((_ extract 28 26) C1) (_ bv0 3)) true) ?x16532 ?x18403))))
 (let ((?x3762 (ite (and (distinct ((_ extract 37 37) C1) (_ bv0 1)) true) (_ bv37 32) (ite (and (distinct ((_ extract 36 36) C1) (_ bv0 1)) true) (_ bv36 32) (_ bv35 32)))))
 (let ((?x850 (ite (and (distinct ((_ extract 40 40) C1) (_ bv0 1)) true) (_ bv40 32) (ite (and (distinct ((_ extract 39 39) C1) (_ bv0 1)) true) (_ bv39 32) (_ bv38 32)))))
 (let ((?x24285 (ite (and (distinct ((_ extract 43 43) C1) (_ bv0 1)) true) (_ bv43 32) (ite (and (distinct ((_ extract 42 42) C1) (_ bv0 1)) true) (_ bv42 32) (_ bv41 32)))))
 (let ((?x327 (ite (and (distinct ((_ extract 45 44) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 45 45) C1) (_ bv0 1)) true) (_ bv45 32) (_ bv44 32)) ?x24285)))
 (let ((?x1899 (ite (and (distinct ((_ extract 45 41) C1) (_ bv0 5)) true) ?x327 (ite (and (distinct ((_ extract 40 38) C1) (_ bv0 3)) true) ?x850 ?x3762))))
 (let ((?x9178 (ite (and (distinct ((_ extract 45 23) C1) (_ bv0 23)) true) (ite (and (distinct ((_ extract 45 35) C1) (_ bv0 11)) true) ?x1899 ?x3963) (ite (and (distinct ((_ extract 22 12) C1) (_ bv0 11)) true) ?x12185 ?x19512))))
 (let ((?x12331 (ite (and (distinct ((_ extract 2 2) C2) (_ bv0 1)) true) (_ bv2 32) (ite (and (distinct ((_ extract 1 1) C2) (_ bv0 1)) true) (_ bv1 32) (_ bv0 32)))))
 (let ((?x9477 (ite (and (distinct ((_ extract 5 5) C2) (_ bv0 1)) true) (_ bv5 32) (ite (and (distinct ((_ extract 4 4) C2) (_ bv0 1)) true) (_ bv4 32) (_ bv3 32)))))
 (let ((?x5266 (ite (and (distinct ((_ extract 8 8) C2) (_ bv0 1)) true) (_ bv8 32) (ite (and (distinct ((_ extract 7 7) C2) (_ bv0 1)) true) (_ bv7 32) (_ bv6 32)))))
 (let ((?x17912 (ite (and (distinct ((_ extract 10 9) C2) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) C2) (_ bv0 1)) true) (_ bv10 32) (_ bv9 32)) ?x5266)))
 (let ((?x8381 (ite (and (distinct ((_ extract 10 6) C2) (_ bv0 5)) true) ?x17912 (ite (and (distinct ((_ extract 5 3) C2) (_ bv0 3)) true) ?x9477 ?x12331))))
 (and (and (and (distinct C1 (_ bv0 46)) true) (= (bvand C1 (bvsub C1 (_ bv1 46))) (_ bv0 46))) (and (and (distinct C2 (_ bv0 11)) true) (= (bvand C2 (bvsub C2 (_ bv1 11))) (_ bv0 11))) (bvslt ?x8381 ?x9178) (not (bvult ?x20367 (_ bv46 46))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
