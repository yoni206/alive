(set-info :status unknown)
(declare-fun mem0 () (_ BitVec 8))
(declare-fun %y () (_ BitVec 45))
(declare-fun %p2 () (_ BitVec 64))
(declare-fun idx () (_ BitVec 64))
(declare-fun %x () (_ BitVec 45))
(declare-fun %p1 () (_ BitVec 64))
(declare-fun |ana_equivalentAddressValues(%p1, %p2)| () (_ BitVec 1))
(assert
 (let ((?x17538 (ite (and (and (distinct %p2 (_ bv0 64)) true) (or true true) (= idx %p2)) (concat ((_ extract 7 5) mem0) ((_ extract 4 0) %y)) mem0)))
 (let (($x2094 (or true true)))
 (let (($x3698 (and (distinct %p2 (_ bv0 64)) true)))
 (let ((?x5878 (ite (and $x3698 $x2094 (= idx (bvadd (bvadd %p2 (_ bv1 64)) (_ bv0 64)))) ((_ extract 12 5) %y) ?x17538)))
 (let ((?x9931 (ite (and $x3698 $x2094 (= idx (bvadd (bvadd %p2 (_ bv1 64)) (_ bv1 64)))) ((_ extract 20 13) %y) ?x5878)))
 (let ((?x494 (ite (and $x3698 $x2094 (= idx (bvadd (bvadd %p2 (_ bv1 64)) (_ bv2 64)))) ((_ extract 28 21) %y) ?x9931)))
 (let ((?x4073 (ite (and $x3698 $x2094 (= idx (bvadd (bvadd %p2 (_ bv1 64)) (_ bv3 64)))) ((_ extract 36 29) %y) ?x494)))
 (let ((?x3207 (ite (and $x3698 $x2094 (= idx (bvadd (bvadd %p2 (_ bv1 64)) (_ bv4 64)))) ((_ extract 44 37) %y) ?x4073)))
 (let ((?x10971 (ite (and (and (distinct %p1 (_ bv0 64)) true) $x2094 (= idx %p1)) (concat ((_ extract 7 5) mem0) ((_ extract 4 0) %x)) mem0)))
 (let (($x17212 (and (distinct %p1 (_ bv0 64)) true)))
 (let ((?x21710 (ite (and $x17212 $x2094 (= idx (bvadd (bvadd %p1 (_ bv1 64)) (_ bv0 64)))) ((_ extract 12 5) %x) ?x10971)))
 (let ((?x7501 (ite (and $x17212 $x2094 (= idx (bvadd (bvadd %p1 (_ bv1 64)) (_ bv1 64)))) ((_ extract 20 13) %x) ?x21710)))
 (let ((?x14996 (ite (and $x17212 $x2094 (= idx (bvadd (bvadd %p1 (_ bv1 64)) (_ bv2 64)))) ((_ extract 28 21) %x) ?x7501)))
 (let ((?x6060 (ite (and $x17212 $x2094 (= idx (bvadd (bvadd %p1 (_ bv1 64)) (_ bv3 64)))) ((_ extract 36 29) %x) ?x14996)))
 (let ((?x61 (ite (and $x17212 $x2094 (= idx (bvadd (bvadd %p1 (_ bv1 64)) (_ bv4 64)))) ((_ extract 44 37) %x) ?x6060)))
 (let ((?x23996 (ite (and $x17212 $x2094 (= %p2 %p1)) (concat ((_ extract 7 5) mem0) ((_ extract 4 0) %x)) mem0)))
 (let ((?x12499 (ite (and $x17212 $x2094 (= %p2 (bvadd (bvadd %p1 (_ bv1 64)) (_ bv0 64)))) ((_ extract 12 5) %x) ?x23996)))
 (let ((?x1398 (ite (and $x17212 $x2094 (= %p2 (bvadd (bvadd %p1 (_ bv1 64)) (_ bv1 64)))) ((_ extract 20 13) %x) ?x12499)))
 (let ((?x2881 (ite (and $x17212 $x2094 (= %p2 (bvadd (bvadd %p1 (_ bv1 64)) (_ bv2 64)))) ((_ extract 28 21) %x) ?x1398)))
 (let ((?x5140 (ite (and $x17212 $x2094 (= %p2 (bvadd (bvadd %p1 (_ bv1 64)) (_ bv3 64)))) ((_ extract 36 29) %x) ?x2881)))
 (let ((?x8220 (ite (and $x17212 $x2094 (= %p2 (bvadd (bvadd %p1 (_ bv1 64)) (_ bv4 64)))) ((_ extract 44 37) %x) ?x5140)))
 (let ((?x8802 (ite (and $x17212 $x2094 $x3698 $x2094 (= idx %p2)) (concat ((_ extract 7 5) ?x8220) ((_ extract 4 0) %y)) ?x61)))
 (let ((?x24067 (ite (and $x17212 $x2094 $x3698 $x2094 (= idx (bvadd (bvadd %p2 (_ bv1 64)) (_ bv0 64)))) ((_ extract 12 5) %y) ?x8802)))
 (let ((?x8887 (ite (and $x17212 $x2094 $x3698 $x2094 (= idx (bvadd (bvadd %p2 (_ bv1 64)) (_ bv1 64)))) ((_ extract 20 13) %y) ?x24067)))
 (let ((?x17522 (ite (and $x17212 $x2094 $x3698 $x2094 (= idx (bvadd (bvadd %p2 (_ bv1 64)) (_ bv2 64)))) ((_ extract 28 21) %y) ?x8887)))
 (let ((?x12529 (ite (and $x17212 $x2094 $x3698 $x2094 (= idx (bvadd (bvadd %p2 (_ bv1 64)) (_ bv3 64)))) ((_ extract 36 29) %y) ?x17522)))
 (let ((?x11862 (ite (and $x17212 $x2094 $x3698 $x2094 (= idx (bvadd (bvadd %p2 (_ bv1 64)) (_ bv4 64)))) ((_ extract 44 37) %y) ?x12529)))
 (let (($x3380 (= |ana_equivalentAddressValues(%p1, %p2)| (_ bv1 1))))
 (and (=> $x3380 (= %p1 %p2)) $x3380 (and (distinct ?x11862 ?x3207) true)))))))))))))))))))))))))))))))
(check-sat)
