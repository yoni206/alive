(set-info :status unknown)
(declare-fun C2 () (_ BitVec 11))
(declare-fun C1 () (_ BitVec 17))
(assert
 (let ((?x1309 (ite (and (distinct ((_ extract 2 2) C2) (_ bv0 1)) true) (_ bv2 17) (ite (and (distinct ((_ extract 1 1) C2) (_ bv0 1)) true) (_ bv1 17) (_ bv0 17)))))
 (let ((?x6177 (ite (and (distinct ((_ extract 5 5) C2) (_ bv0 1)) true) (_ bv5 17) (ite (and (distinct ((_ extract 4 4) C2) (_ bv0 1)) true) (_ bv4 17) (_ bv3 17)))))
 (let ((?x2149 (ite (and (distinct ((_ extract 8 8) C2) (_ bv0 1)) true) (_ bv8 17) (ite (and (distinct ((_ extract 7 7) C2) (_ bv0 1)) true) (_ bv7 17) (_ bv6 17)))))
 (let ((?x2023 (ite (and (distinct ((_ extract 10 9) C2) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) C2) (_ bv0 1)) true) (_ bv10 17) (_ bv9 17)) ?x2149)))
 (let ((?x1655 (ite (and (distinct ((_ extract 10 6) C2) (_ bv0 5)) true) ?x2023 (ite (and (distinct ((_ extract 5 3) C2) (_ bv0 3)) true) ?x6177 ?x1309))))
 (let ((?x4509 (ite (and (distinct ((_ extract 2 2) C1) (_ bv0 1)) true) (_ bv2 17) (ite (and (distinct ((_ extract 1 1) C1) (_ bv0 1)) true) (_ bv1 17) (_ bv0 17)))))
 (let ((?x4018 (ite (and (distinct ((_ extract 4 3) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 4 4) C1) (_ bv0 1)) true) (_ bv4 17) (_ bv3 17)) ?x4509)))
 (let ((?x3290 (ite (and (distinct ((_ extract 8 7) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 8 8) C1) (_ bv0 1)) true) (_ bv8 17) (_ bv7 17)) (ite (and (distinct ((_ extract 6 6) C1) (_ bv0 1)) true) (_ bv6 17) (_ bv5 17)))))
 (let ((?x2082 (ite (and (distinct ((_ extract 12 11) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 12 12) C1) (_ bv0 1)) true) (_ bv12 17) (_ bv11 17)) (ite (and (distinct ((_ extract 10 10) C1) (_ bv0 1)) true) (_ bv10 17) (_ bv9 17)))))
 (let ((?x4293 (ite (and (distinct ((_ extract 16 15) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 16 16) C1) (_ bv0 1)) true) (_ bv16 17) (_ bv15 17)) (ite (and (distinct ((_ extract 14 14) C1) (_ bv0 1)) true) (_ bv14 17) (_ bv13 17)))))
 (let ((?x1799 (ite (and (distinct ((_ extract 16 9) C1) (_ bv0 8)) true) (ite (and (distinct ((_ extract 16 13) C1) (_ bv0 4)) true) ?x4293 ?x2082) (ite (and (distinct ((_ extract 8 5) C1) (_ bv0 4)) true) ?x3290 ?x4018))))
 (let ((?x6194 (bvsub ?x1799 ?x1655)))
 (let ((?x1200 (ite (and (distinct ((_ extract 2 2) C1) (_ bv0 1)) true) (_ bv2 32) (ite (and (distinct ((_ extract 1 1) C1) (_ bv0 1)) true) (_ bv1 32) (_ bv0 32)))))
 (let ((?x2785 (ite (and (distinct ((_ extract 4 3) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 4 4) C1) (_ bv0 1)) true) (_ bv4 32) (_ bv3 32)) ?x1200)))
 (let ((?x5270 (ite (and (distinct ((_ extract 8 7) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 8 8) C1) (_ bv0 1)) true) (_ bv8 32) (_ bv7 32)) (ite (and (distinct ((_ extract 6 6) C1) (_ bv0 1)) true) (_ bv6 32) (_ bv5 32)))))
 (let ((?x1610 (ite (and (distinct ((_ extract 12 11) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 12 12) C1) (_ bv0 1)) true) (_ bv12 32) (_ bv11 32)) (ite (and (distinct ((_ extract 10 10) C1) (_ bv0 1)) true) (_ bv10 32) (_ bv9 32)))))
 (let ((?x3040 (ite (and (distinct ((_ extract 16 15) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 16 16) C1) (_ bv0 1)) true) (_ bv16 32) (_ bv15 32)) (ite (and (distinct ((_ extract 14 14) C1) (_ bv0 1)) true) (_ bv14 32) (_ bv13 32)))))
 (let ((?x1756 (ite (and (distinct ((_ extract 16 9) C1) (_ bv0 8)) true) (ite (and (distinct ((_ extract 16 13) C1) (_ bv0 4)) true) ?x3040 ?x1610) (ite (and (distinct ((_ extract 8 5) C1) (_ bv0 4)) true) ?x5270 ?x2785))))
 (let ((?x5227 (ite (and (distinct ((_ extract 2 2) C2) (_ bv0 1)) true) (_ bv2 32) (ite (and (distinct ((_ extract 1 1) C2) (_ bv0 1)) true) (_ bv1 32) (_ bv0 32)))))
 (let ((?x2860 (ite (and (distinct ((_ extract 5 5) C2) (_ bv0 1)) true) (_ bv5 32) (ite (and (distinct ((_ extract 4 4) C2) (_ bv0 1)) true) (_ bv4 32) (_ bv3 32)))))
 (let ((?x1673 (ite (and (distinct ((_ extract 8 8) C2) (_ bv0 1)) true) (_ bv8 32) (ite (and (distinct ((_ extract 7 7) C2) (_ bv0 1)) true) (_ bv7 32) (_ bv6 32)))))
 (let ((?x5653 (ite (and (distinct ((_ extract 10 9) C2) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) C2) (_ bv0 1)) true) (_ bv10 32) (_ bv9 32)) ?x1673)))
 (let ((?x2061 (ite (and (distinct ((_ extract 10 6) C2) (_ bv0 5)) true) ?x5653 (ite (and (distinct ((_ extract 5 3) C2) (_ bv0 3)) true) ?x2860 ?x5227))))
 (and (and (and (distinct C1 (_ bv0 17)) true) (= (bvand C1 (bvsub C1 (_ bv1 17))) (_ bv0 17))) (and (and (distinct C2 (_ bv0 11)) true) (= (bvand C2 (bvsub C2 (_ bv1 11))) (_ bv0 11))) (bvslt ?x2061 ?x1756) (not (bvult ?x6194 (_ bv17 17))))))))))))))))))))))))))))
(check-sat)
