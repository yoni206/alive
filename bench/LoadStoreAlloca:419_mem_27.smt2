(set-info :status unknown)
(declare-fun mem0 () (_ BitVec 8))
(declare-fun %x () (_ BitVec 28))
(declare-fun %p1 () (_ BitVec 64))
(declare-fun idx () (_ BitVec 64))
(declare-fun |ana_equivalentAddressValues(%p1, %p2)| () (_ BitVec 1))
(declare-fun %p2 () (_ BitVec 64))
(assert
 (let ((?x7281 (concat ((_ extract 7 4) mem0) ((_ extract 3 0) %x))))
 (let ((?x1312 (ite (and (and (distinct %p1 (_ bv0 64)) true) (or true true) (= idx %p1)) ?x7281 mem0)))
 (let ((?x6124 ((_ extract 11 4) %x)))
 (let (($x318 (or true true)))
 (let (($x10679 (and (distinct %p1 (_ bv0 64)) true)))
 (let ((?x18006 (ite (and $x10679 $x318 (= idx (bvadd (bvadd %p1 (_ bv1 64)) (_ bv0 64)))) ?x6124 ?x1312)))
 (let ((?x4952 ((_ extract 19 12) %x)))
 (let ((?x6835 (ite (and $x10679 $x318 (= idx (bvadd (bvadd %p1 (_ bv1 64)) (_ bv1 64)))) ?x4952 ?x18006)))
 (let ((?x17832 ((_ extract 27 20) %x)))
 (let ((?x2806 (ite (and $x10679 $x318 (= idx (bvadd (bvadd %p1 (_ bv1 64)) (_ bv2 64)))) ?x17832 ?x6835)))
 (let (($x5739 (= |ana_equivalentAddressValues(%p1, %p2)| (_ bv1 1))))
 (and (=> $x5739 (= %p1 %p2)) $x5739 (and (distinct ?x2806 ?x2806) true))))))))))))))
(check-sat)
