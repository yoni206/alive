(set-info :status unknown)
(declare-fun mem0 () (_ BitVec 8))
(declare-fun %x () (_ BitVec 23))
(declare-fun %p1 () (_ BitVec 64))
(declare-fun idx () (_ BitVec 64))
(declare-fun |ana_equivalentAddressValues(%p1, %p2)| () (_ BitVec 1))
(declare-fun %p2 () (_ BitVec 64))
(assert
 (let ((?x3641 (concat ((_ extract 7 7) mem0) ((_ extract 6 0) %x))))
 (let ((?x431 (ite (and (and (distinct %p1 (_ bv0 64)) true) (or true true) (= idx %p1)) ?x3641 mem0)))
 (let ((?x10633 ((_ extract 14 7) %x)))
 (let (($x11745 (or true true)))
 (let (($x16514 (and (distinct %p1 (_ bv0 64)) true)))
 (let ((?x2571 (ite (and $x16514 $x11745 (= idx (bvadd (bvadd %p1 (_ bv1 64)) (_ bv0 64)))) ?x10633 ?x431)))
 (let ((?x3186 ((_ extract 22 15) %x)))
 (let ((?x12353 (ite (and $x16514 $x11745 (= idx (bvadd (bvadd %p1 (_ bv1 64)) (_ bv1 64)))) ?x3186 ?x2571)))
 (let (($x6124 (= |ana_equivalentAddressValues(%p1, %p2)| (_ bv1 1))))
 (and (=> $x6124 (= %p1 %p2)) $x6124 (and (distinct ?x12353 ?x12353) true))))))))))))
(check-sat)
