(set-info :source |
 Generated by Alive 0.1
 More info in N. P. Lopes, D. Menendez, S. Nagarakatte, J. Regehr.
 Provably Correct Peephole Optimizations with Alive. In PLDI'15.
|)

(set-info :status unknown)
(declare-fun mem0 () (_ BitVec 8))
(declare-fun |ana_MaskedValueIsZero(%B, ((1 << (width(C2) - countLeadingZeros(((C2 - 1) ^ C2)))) - 1))| () (_ BitVec 1))
(declare-fun C2 () (_ BitVec 16))
(declare-fun C1 () (_ BitVec 16))
(declare-fun %B () (_ BitVec 16))
(assert
 (let (($x817 (and (distinct mem0 mem0) true)))
 (let (($x64669 (= |ana_MaskedValueIsZero(%B, ((1 << (width(C2) - countLeadingZeros(((C2 - 1) ^ C2)))) - 1))| (_ bv1 1))))
 (let ((?x6096 (bvsub C2 (_ bv1 16))))
 (let ((?x60788 (bvor ?x6096 C2)))
 (let (($x60503 (and (and (distinct ?x60788 (_ bv0 16)) true) (= (bvand (bvadd ?x60788 (_ bv1 16)) ?x60788) (_ bv0 16)) $x64669)))
 (let (($x63101 (or (= (bvand (bvadd C2 (_ bv1 16)) (bvsub (bvadd C2 (_ bv1 16)) (_ bv1 16))) (_ bv0 16)) $x60503)))
 (let ((?x47148 (bvand C1 C2)))
 (let (($x57168 (= ?x47148 C2)))
 (let ((?x64927 (ite (= ((_ extract 1 1) (bvxor ?x6096 C2)) (_ bv1 1)) (_ bv14 16) (ite (= ((_ extract 0 0) (bvxor ?x6096 C2)) (_ bv1 1)) (_ bv15 16) (_ bv16 16)))))
 (let ((?x62442 (ite (= ((_ extract 3 3) (bvxor ?x6096 C2)) (_ bv1 1)) (_ bv12 16) (ite (= ((_ extract 2 2) (bvxor ?x6096 C2)) (_ bv1 1)) (_ bv13 16) ?x64927))))
 (let ((?x64787 (ite (= ((_ extract 5 5) (bvxor ?x6096 C2)) (_ bv1 1)) (_ bv10 16) (ite (= ((_ extract 4 4) (bvxor ?x6096 C2)) (_ bv1 1)) (_ bv11 16) ?x62442))))
 (let ((?x61905 (ite (= ((_ extract 7 7) (bvxor ?x6096 C2)) (_ bv1 1)) (_ bv8 16) (ite (= ((_ extract 6 6) (bvxor ?x6096 C2)) (_ bv1 1)) (_ bv9 16) ?x64787))))
 (let ((?x50543 (ite (= ((_ extract 9 9) (bvxor ?x6096 C2)) (_ bv1 1)) (_ bv6 16) (ite (= ((_ extract 8 8) (bvxor ?x6096 C2)) (_ bv1 1)) (_ bv7 16) ?x61905))))
 (let ((?x45558 (ite (= ((_ extract 11 11) (bvxor ?x6096 C2)) (_ bv1 1)) (_ bv4 16) (ite (= ((_ extract 10 10) (bvxor ?x6096 C2)) (_ bv1 1)) (_ bv5 16) ?x50543))))
 (let ((?x57036 (ite (= ((_ extract 13 13) (bvxor ?x6096 C2)) (_ bv1 1)) (_ bv2 16) (ite (= ((_ extract 12 12) (bvxor ?x6096 C2)) (_ bv1 1)) (_ bv3 16) ?x45558))))
 (let ((?x56293 (ite (= ((_ extract 15 15) (bvxor ?x6096 C2)) (_ bv1 1)) (_ bv0 16) (ite (= ((_ extract 14 14) (bvxor ?x6096 C2)) (_ bv1 1)) (_ bv1 16) ?x57036))))
 (let (($x63130 (=> $x64669 (= (bvand %B (bvsub (bvshl (_ bv1 16) (bvsub (_ bv16 16) ?x56293)) (_ bv1 16))) (_ bv0 16)))))
 (and $x63130 $x57168 $x63101 $x817)))))))))))))))))))
(check-sat)
