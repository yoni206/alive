(set-info :status unknown)
(declare-fun mem0 () (_ BitVec 8))
(declare-fun %p2 () (_ BitVec 64))
(declare-fun idx () (_ BitVec 64))
(declare-fun %p1 () (_ BitVec 64))
(declare-fun |ana_equivalentAddressValues(%p1, %p2)| () (_ BitVec 1))
(assert
 (let ((?x15454 (concat (concat (concat (concat mem0 mem0) mem0) mem0) mem0)))
 (let (($x19564 (or true true)))
 (let (($x1088 (and (distinct %p2 (_ bv0 64)) true)))
 (let (($x11121 (and (distinct %p1 (_ bv0 64)) true)))
 (let (($x16121 (and $x11121 $x19564 $x11121 $x19564 $x11121 $x19564 $x1088 $x19564 (= idx (bvadd %p2 (_ bv0 64))))))
 (let (($x6316 (and $x11121 $x19564 $x11121 $x19564 $x11121 $x19564 $x1088 $x19564 (= idx (bvadd %p2 (_ bv1 64))))))
 (let (($x7360 (and $x11121 $x19564 $x11121 $x19564 $x11121 $x19564 $x1088 $x19564 (= idx (bvadd %p2 (_ bv2 64))))))
 (let ((?x6657 (ite $x7360 ((_ extract 23 16) ?x15454) (ite $x6316 ((_ extract 15 8) ?x15454) (ite $x16121 ((_ extract 7 0) ?x15454) mem0)))))
 (let (($x12921 (and $x11121 $x19564 $x11121 $x19564 $x11121 $x19564 $x1088 $x19564 (= idx (bvadd %p2 (_ bv3 64))))))
 (let (($x17032 (and $x11121 $x19564 $x11121 $x19564 $x11121 $x19564 $x1088 $x19564 (= idx (bvadd %p2 (_ bv4 64))))))
 (let ((?x5187 (ite $x17032 ((_ extract 39 32) ?x15454) (ite $x12921 ((_ extract 31 24) ?x15454) ?x6657))))
 (let (($x15398 (= |ana_equivalentAddressValues(%p1, %p2)| (_ bv1 1))))
 (and (=> $x15398 (= %p1 %p2)) $x15398 (and (distinct ?x5187 mem0) true)))))))))))))))
(check-sat)
