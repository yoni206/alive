(set-info :status unknown)
(declare-fun mem0 () (_ BitVec 8))
(declare-fun %p2 () (_ BitVec 64))
(declare-fun idx () (_ BitVec 64))
(declare-fun %p1 () (_ BitVec 64))
(declare-fun |ana_equivalentAddressValues(%p1, %p2)| () (_ BitVec 1))
(assert
 (let ((?x23024 (concat (concat (concat (concat (concat mem0 mem0) mem0) mem0) mem0) mem0)))
 (let ((?x14440 (concat ?x23024 ((_ extract 4 0) mem0))))
 (let (($x21907 (or true true)))
 (let (($x15642 (and (distinct %p2 (_ bv0 64)) true)))
 (let (($x4630 (and (distinct %p1 (_ bv0 64)) true)))
 (let ((?x1088 (ite (and $x4630 $x21907 $x4630 $x21907 $x4630 $x21907 $x15642 $x21907 (= idx %p2)) (concat ((_ extract 7 5) mem0) ((_ extract 4 0) ?x14440)) mem0)))
 (let (($x2278 (and $x4630 $x21907 $x4630 $x21907 $x4630 $x21907 $x15642 $x21907 (= idx (bvadd (bvadd %p2 (_ bv1 64)) (_ bv0 64))))))
 (let (($x17826 (and $x4630 $x21907 $x4630 $x21907 $x4630 $x21907 $x15642 $x21907 (= idx (bvadd (bvadd %p2 (_ bv1 64)) (_ bv1 64))))))
 (let (($x20180 (and $x4630 $x21907 $x4630 $x21907 $x4630 $x21907 $x15642 $x21907 (= idx (bvadd (bvadd %p2 (_ bv1 64)) (_ bv2 64))))))
 (let ((?x6316 (ite $x20180 ((_ extract 28 21) ?x14440) (ite $x17826 ((_ extract 20 13) ?x14440) (ite $x2278 ((_ extract 12 5) ?x14440) ?x1088)))))
 (let (($x16243 (and $x4630 $x21907 $x4630 $x21907 $x4630 $x21907 $x15642 $x21907 (= idx (bvadd (bvadd %p2 (_ bv1 64)) (_ bv3 64))))))
 (let (($x6215 (and $x4630 $x21907 $x4630 $x21907 $x4630 $x21907 $x15642 $x21907 (= idx (bvadd (bvadd %p2 (_ bv1 64)) (_ bv4 64))))))
 (let (($x3284 (and $x4630 $x21907 $x4630 $x21907 $x4630 $x21907 $x15642 $x21907 (= idx (bvadd (bvadd %p2 (_ bv1 64)) (_ bv5 64))))))
 (let ((?x8366 (ite $x3284 ((_ extract 52 45) ?x14440) (ite $x6215 ((_ extract 44 37) ?x14440) (ite $x16243 ((_ extract 36 29) ?x14440) ?x6316)))))
 (let (($x5829 (= |ana_equivalentAddressValues(%p1, %p2)| (_ bv1 1))))
 (and (=> $x5829 (= %p1 %p2)) $x5829 (and (distinct ?x8366 mem0) true))))))))))))))))))
(check-sat)
