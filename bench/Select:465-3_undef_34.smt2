(set-info :status unknown)
(declare-fun C2 () (_ BitVec 11))
(declare-fun C1 () (_ BitVec 36))
(assert
 (let ((?x22381 (ite (and (distinct ((_ extract 2 2) C2) (_ bv0 1)) true) (_ bv2 36) (ite (and (distinct ((_ extract 1 1) C2) (_ bv0 1)) true) (_ bv1 36) (_ bv0 36)))))
 (let ((?x11880 (ite (and (distinct ((_ extract 5 5) C2) (_ bv0 1)) true) (_ bv5 36) (ite (and (distinct ((_ extract 4 4) C2) (_ bv0 1)) true) (_ bv4 36) (_ bv3 36)))))
 (let ((?x14692 (ite (and (distinct ((_ extract 8 8) C2) (_ bv0 1)) true) (_ bv8 36) (ite (and (distinct ((_ extract 7 7) C2) (_ bv0 1)) true) (_ bv7 36) (_ bv6 36)))))
 (let ((?x9910 (ite (and (distinct ((_ extract 10 9) C2) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) C2) (_ bv0 1)) true) (_ bv10 36) (_ bv9 36)) ?x14692)))
 (let ((?x21164 (ite (and (distinct ((_ extract 10 6) C2) (_ bv0 5)) true) ?x9910 (ite (and (distinct ((_ extract 5 3) C2) (_ bv0 3)) true) ?x11880 ?x22381))))
 (let ((?x13151 (ite (and (distinct ((_ extract 2 2) C1) (_ bv0 1)) true) (_ bv2 36) (ite (and (distinct ((_ extract 1 1) C1) (_ bv0 1)) true) (_ bv1 36) (_ bv0 36)))))
 (let ((?x16061 (ite (and (distinct ((_ extract 4 3) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 4 4) C1) (_ bv0 1)) true) (_ bv4 36) (_ bv3 36)) ?x13151)))
 (let ((?x13630 (ite (and (distinct ((_ extract 8 7) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 8 8) C1) (_ bv0 1)) true) (_ bv8 36) (_ bv7 36)) (ite (and (distinct ((_ extract 6 6) C1) (_ bv0 1)) true) (_ bv6 36) (_ bv5 36)))))
 (let ((?x2631 (ite (and (distinct ((_ extract 11 11) C1) (_ bv0 1)) true) (_ bv11 36) (ite (and (distinct ((_ extract 10 10) C1) (_ bv0 1)) true) (_ bv10 36) (_ bv9 36)))))
 (let ((?x2141 (ite (and (distinct ((_ extract 13 12) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 13 13) C1) (_ bv0 1)) true) (_ bv13 36) (_ bv12 36)) ?x2631)))
 (let ((?x24897 (ite (and (distinct ((_ extract 17 16) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 17 17) C1) (_ bv0 1)) true) (_ bv17 36) (_ bv16 36)) (ite (and (distinct ((_ extract 15 15) C1) (_ bv0 1)) true) (_ bv15 36) (_ bv14 36)))))
 (let ((?x7502 (ite (and (distinct ((_ extract 17 9) C1) (_ bv0 9)) true) (ite (and (distinct ((_ extract 17 14) C1) (_ bv0 4)) true) ?x24897 ?x2141) (ite (and (distinct ((_ extract 8 5) C1) (_ bv0 4)) true) ?x13630 ?x16061))))
 (let ((?x8320 (ite (and (distinct ((_ extract 20 20) C1) (_ bv0 1)) true) (_ bv20 36) (ite (and (distinct ((_ extract 19 19) C1) (_ bv0 1)) true) (_ bv19 36) (_ bv18 36)))))
 (let ((?x8204 (ite (and (distinct ((_ extract 22 21) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 22 22) C1) (_ bv0 1)) true) (_ bv22 36) (_ bv21 36)) ?x8320)))
 (let ((?x11158 (ite (and (distinct ((_ extract 26 25) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 26 26) C1) (_ bv0 1)) true) (_ bv26 36) (_ bv25 36)) (ite (and (distinct ((_ extract 24 24) C1) (_ bv0 1)) true) (_ bv24 36) (_ bv23 36)))))
 (let ((?x19348 (ite (and (distinct ((_ extract 29 29) C1) (_ bv0 1)) true) (_ bv29 36) (ite (and (distinct ((_ extract 28 28) C1) (_ bv0 1)) true) (_ bv28 36) (_ bv27 36)))))
 (let ((?x2405 (ite (and (distinct ((_ extract 31 30) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 31 31) C1) (_ bv0 1)) true) (_ bv31 36) (_ bv30 36)) ?x19348)))
 (let ((?x18006 (ite (and (distinct ((_ extract 35 34) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 35 35) C1) (_ bv0 1)) true) (_ bv35 36) (_ bv34 36)) (ite (and (distinct ((_ extract 33 33) C1) (_ bv0 1)) true) (_ bv33 36) (_ bv32 36)))))
 (let ((?x2669 (ite (and (distinct ((_ extract 35 27) C1) (_ bv0 9)) true) (ite (and (distinct ((_ extract 35 32) C1) (_ bv0 4)) true) ?x18006 ?x2405) (ite (and (distinct ((_ extract 26 23) C1) (_ bv0 4)) true) ?x11158 ?x8204))))
 (let ((?x21127 (bvsub (ite (and (distinct ((_ extract 35 18) C1) (_ bv0 18)) true) ?x2669 ?x7502) ?x21164)))
 (let ((?x16544 (ite (and (distinct ((_ extract 2 2) C1) (_ bv0 1)) true) (_ bv2 32) (ite (and (distinct ((_ extract 1 1) C1) (_ bv0 1)) true) (_ bv1 32) (_ bv0 32)))))
 (let ((?x24180 (ite (and (distinct ((_ extract 4 3) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 4 4) C1) (_ bv0 1)) true) (_ bv4 32) (_ bv3 32)) ?x16544)))
 (let ((?x16980 (ite (and (distinct ((_ extract 8 7) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 8 8) C1) (_ bv0 1)) true) (_ bv8 32) (_ bv7 32)) (ite (and (distinct ((_ extract 6 6) C1) (_ bv0 1)) true) (_ bv6 32) (_ bv5 32)))))
 (let ((?x14300 (ite (and (distinct ((_ extract 11 11) C1) (_ bv0 1)) true) (_ bv11 32) (ite (and (distinct ((_ extract 10 10) C1) (_ bv0 1)) true) (_ bv10 32) (_ bv9 32)))))
 (let ((?x13641 (ite (and (distinct ((_ extract 13 12) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 13 13) C1) (_ bv0 1)) true) (_ bv13 32) (_ bv12 32)) ?x14300)))
 (let ((?x11843 (ite (and (distinct ((_ extract 17 16) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 17 17) C1) (_ bv0 1)) true) (_ bv17 32) (_ bv16 32)) (ite (and (distinct ((_ extract 15 15) C1) (_ bv0 1)) true) (_ bv15 32) (_ bv14 32)))))
 (let ((?x21889 (ite (and (distinct ((_ extract 17 9) C1) (_ bv0 9)) true) (ite (and (distinct ((_ extract 17 14) C1) (_ bv0 4)) true) ?x11843 ?x13641) (ite (and (distinct ((_ extract 8 5) C1) (_ bv0 4)) true) ?x16980 ?x24180))))
 (let ((?x6724 (ite (and (distinct ((_ extract 20 20) C1) (_ bv0 1)) true) (_ bv20 32) (ite (and (distinct ((_ extract 19 19) C1) (_ bv0 1)) true) (_ bv19 32) (_ bv18 32)))))
 (let ((?x13781 (ite (and (distinct ((_ extract 22 21) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 22 22) C1) (_ bv0 1)) true) (_ bv22 32) (_ bv21 32)) ?x6724)))
 (let ((?x3539 (ite (and (distinct ((_ extract 26 25) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 26 26) C1) (_ bv0 1)) true) (_ bv26 32) (_ bv25 32)) (ite (and (distinct ((_ extract 24 24) C1) (_ bv0 1)) true) (_ bv24 32) (_ bv23 32)))))
 (let ((?x5683 (ite (and (distinct ((_ extract 29 29) C1) (_ bv0 1)) true) (_ bv29 32) (ite (and (distinct ((_ extract 28 28) C1) (_ bv0 1)) true) (_ bv28 32) (_ bv27 32)))))
 (let ((?x11722 (ite (and (distinct ((_ extract 31 30) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 31 31) C1) (_ bv0 1)) true) (_ bv31 32) (_ bv30 32)) ?x5683)))
 (let ((?x6360 (ite (and (distinct ((_ extract 35 34) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 35 35) C1) (_ bv0 1)) true) (_ bv35 32) (_ bv34 32)) (ite (and (distinct ((_ extract 33 33) C1) (_ bv0 1)) true) (_ bv33 32) (_ bv32 32)))))
 (let ((?x4808 (ite (and (distinct ((_ extract 35 27) C1) (_ bv0 9)) true) (ite (and (distinct ((_ extract 35 32) C1) (_ bv0 4)) true) ?x6360 ?x11722) (ite (and (distinct ((_ extract 26 23) C1) (_ bv0 4)) true) ?x3539 ?x13781))))
 (let ((?x11423 (ite (and (distinct ((_ extract 2 2) C2) (_ bv0 1)) true) (_ bv2 32) (ite (and (distinct ((_ extract 1 1) C2) (_ bv0 1)) true) (_ bv1 32) (_ bv0 32)))))
 (let ((?x16095 (ite (and (distinct ((_ extract 5 5) C2) (_ bv0 1)) true) (_ bv5 32) (ite (and (distinct ((_ extract 4 4) C2) (_ bv0 1)) true) (_ bv4 32) (_ bv3 32)))))
 (let ((?x12247 (ite (and (distinct ((_ extract 8 8) C2) (_ bv0 1)) true) (_ bv8 32) (ite (and (distinct ((_ extract 7 7) C2) (_ bv0 1)) true) (_ bv7 32) (_ bv6 32)))))
 (let ((?x18699 (ite (and (distinct ((_ extract 10 9) C2) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) C2) (_ bv0 1)) true) (_ bv10 32) (_ bv9 32)) ?x12247)))
 (let ((?x9110 (ite (and (distinct ((_ extract 10 6) C2) (_ bv0 5)) true) ?x18699 (ite (and (distinct ((_ extract 5 3) C2) (_ bv0 3)) true) ?x16095 ?x11423))))
 (and (and (and (distinct C1 (_ bv0 36)) true) (= (bvand C1 (bvsub C1 (_ bv1 36))) (_ bv0 36))) (and (and (distinct C2 (_ bv0 11)) true) (= (bvand C2 (bvsub C2 (_ bv1 11))) (_ bv0 11))) (bvslt ?x9110 (ite (and (distinct ((_ extract 35 18) C1) (_ bv0 18)) true) ?x4808 ?x21889)) (not (bvult ?x21127 (_ bv36 36))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
