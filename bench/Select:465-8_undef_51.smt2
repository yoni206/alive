(set-info :status unknown)
(declare-fun C2 () (_ BitVec 11))
(declare-fun C1 () (_ BitVec 53))
(assert
 (let ((?x2488 (ite (and (distinct ((_ extract 2 2) C2) (_ bv0 1)) true) (_ bv2 53) (ite (and (distinct ((_ extract 1 1) C2) (_ bv0 1)) true) (_ bv1 53) (_ bv0 53)))))
 (let ((?x23142 (ite (and (distinct ((_ extract 5 5) C2) (_ bv0 1)) true) (_ bv5 53) (ite (and (distinct ((_ extract 4 4) C2) (_ bv0 1)) true) (_ bv4 53) (_ bv3 53)))))
 (let ((?x13531 (ite (and (distinct ((_ extract 8 8) C2) (_ bv0 1)) true) (_ bv8 53) (ite (and (distinct ((_ extract 7 7) C2) (_ bv0 1)) true) (_ bv7 53) (_ bv6 53)))))
 (let ((?x12982 (ite (and (distinct ((_ extract 10 9) C2) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) C2) (_ bv0 1)) true) (_ bv10 53) (_ bv9 53)) ?x13531)))
 (let ((?x11827 (ite (and (distinct ((_ extract 10 6) C2) (_ bv0 5)) true) ?x12982 (ite (and (distinct ((_ extract 5 3) C2) (_ bv0 3)) true) ?x23142 ?x2488))))
 (let ((?x13289 (ite (and (distinct ((_ extract 3 2) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 3 3) C1) (_ bv0 1)) true) (_ bv3 53) (_ bv2 53)) (ite (and (distinct ((_ extract 1 1) C1) (_ bv0 1)) true) (_ bv1 53) (_ bv0 53)))))
 (let ((?x17526 (ite (and (distinct ((_ extract 6 6) C1) (_ bv0 1)) true) (_ bv6 53) (ite (and (distinct ((_ extract 5 5) C1) (_ bv0 1)) true) (_ bv5 53) (_ bv4 53)))))
 (let ((?x669 (ite (and (distinct ((_ extract 10 9) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) C1) (_ bv0 1)) true) (_ bv10 53) (_ bv9 53)) (ite (and (distinct ((_ extract 8 8) C1) (_ bv0 1)) true) (_ bv8 53) (_ bv7 53)))))
 (let ((?x21998 (ite (and (distinct ((_ extract 13 13) C1) (_ bv0 1)) true) (_ bv13 53) (ite (and (distinct ((_ extract 12 12) C1) (_ bv0 1)) true) (_ bv12 53) (_ bv11 53)))))
 (let ((?x6355 (ite (and (distinct ((_ extract 13 7) C1) (_ bv0 7)) true) (ite (and (distinct ((_ extract 13 11) C1) (_ bv0 3)) true) ?x21998 ?x669) (ite (and (distinct ((_ extract 6 4) C1) (_ bv0 3)) true) ?x17526 ?x13289))))
 (let ((?x1654 (ite (and (distinct ((_ extract 17 16) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 17 17) C1) (_ bv0 1)) true) (_ bv17 53) (_ bv16 53)) (ite (and (distinct ((_ extract 15 15) C1) (_ bv0 1)) true) (_ bv15 53) (_ bv14 53)))))
 (let ((?x12267 (ite (and (distinct ((_ extract 20 20) C1) (_ bv0 1)) true) (_ bv20 53) (ite (and (distinct ((_ extract 19 19) C1) (_ bv0 1)) true) (_ bv19 53) (_ bv18 53)))))
 (let ((?x16644 (ite (and (distinct ((_ extract 23 23) C1) (_ bv0 1)) true) (_ bv23 53) (ite (and (distinct ((_ extract 22 22) C1) (_ bv0 1)) true) (_ bv22 53) (_ bv21 53)))))
 (let ((?x8434 (ite (and (distinct ((_ extract 26 26) C1) (_ bv0 1)) true) (_ bv26 53) (ite (and (distinct ((_ extract 25 25) C1) (_ bv0 1)) true) (_ bv25 53) (_ bv24 53)))))
 (let ((?x20794 (ite (and (distinct ((_ extract 26 21) C1) (_ bv0 6)) true) (ite (and (distinct ((_ extract 26 24) C1) (_ bv0 3)) true) ?x8434 ?x16644) (ite (and (distinct ((_ extract 20 18) C1) (_ bv0 3)) true) ?x12267 ?x1654))))
 (let ((?x15902 (ite (and (distinct ((_ extract 30 29) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 30 30) C1) (_ bv0 1)) true) (_ bv30 53) (_ bv29 53)) (ite (and (distinct ((_ extract 28 28) C1) (_ bv0 1)) true) (_ bv28 53) (_ bv27 53)))))
 (let ((?x273 (ite (and (distinct ((_ extract 33 33) C1) (_ bv0 1)) true) (_ bv33 53) (ite (and (distinct ((_ extract 32 32) C1) (_ bv0 1)) true) (_ bv32 53) (_ bv31 53)))))
 (let ((?x5411 (ite (and (distinct ((_ extract 36 36) C1) (_ bv0 1)) true) (_ bv36 53) (ite (and (distinct ((_ extract 35 35) C1) (_ bv0 1)) true) (_ bv35 53) (_ bv34 53)))))
 (let ((?x11484 (ite (and (distinct ((_ extract 39 39) C1) (_ bv0 1)) true) (_ bv39 53) (ite (and (distinct ((_ extract 38 38) C1) (_ bv0 1)) true) (_ bv38 53) (_ bv37 53)))))
 (let ((?x16523 (ite (and (distinct ((_ extract 39 34) C1) (_ bv0 6)) true) (ite (and (distinct ((_ extract 39 37) C1) (_ bv0 3)) true) ?x11484 ?x5411) (ite (and (distinct ((_ extract 33 31) C1) (_ bv0 3)) true) ?x273 ?x15902))))
 (let ((?x16823 (ite (and (distinct ((_ extract 43 42) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 43 43) C1) (_ bv0 1)) true) (_ bv43 53) (_ bv42 53)) (ite (and (distinct ((_ extract 41 41) C1) (_ bv0 1)) true) (_ bv41 53) (_ bv40 53)))))
 (let ((?x5481 (ite (and (distinct ((_ extract 46 46) C1) (_ bv0 1)) true) (_ bv46 53) (ite (and (distinct ((_ extract 45 45) C1) (_ bv0 1)) true) (_ bv45 53) (_ bv44 53)))))
 (let ((?x11059 (ite (and (distinct ((_ extract 49 49) C1) (_ bv0 1)) true) (_ bv49 53) (ite (and (distinct ((_ extract 48 48) C1) (_ bv0 1)) true) (_ bv48 53) (_ bv47 53)))))
 (let ((?x1084 (ite (and (distinct ((_ extract 52 52) C1) (_ bv0 1)) true) (_ bv52 53) (ite (and (distinct ((_ extract 51 51) C1) (_ bv0 1)) true) (_ bv51 53) (_ bv50 53)))))
 (let ((?x18153 (ite (and (distinct ((_ extract 52 47) C1) (_ bv0 6)) true) (ite (and (distinct ((_ extract 52 50) C1) (_ bv0 3)) true) ?x1084 ?x11059) (ite (and (distinct ((_ extract 46 44) C1) (_ bv0 3)) true) ?x5481 ?x16823))))
 (let ((?x18672 (ite (and (distinct ((_ extract 52 27) C1) (_ bv0 26)) true) (ite (and (distinct ((_ extract 52 40) C1) (_ bv0 13)) true) ?x18153 ?x16523) (ite (and (distinct ((_ extract 26 14) C1) (_ bv0 13)) true) ?x20794 ?x6355))))
 (let ((?x3216 (bvsub ?x18672 ?x11827)))
 (let ((?x3328 (ite (and (distinct ((_ extract 3 2) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 3 3) C1) (_ bv0 1)) true) (_ bv3 32) (_ bv2 32)) (ite (and (distinct ((_ extract 1 1) C1) (_ bv0 1)) true) (_ bv1 32) (_ bv0 32)))))
 (let ((?x18819 (ite (and (distinct ((_ extract 6 6) C1) (_ bv0 1)) true) (_ bv6 32) (ite (and (distinct ((_ extract 5 5) C1) (_ bv0 1)) true) (_ bv5 32) (_ bv4 32)))))
 (let ((?x15039 (ite (and (distinct ((_ extract 10 9) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) C1) (_ bv0 1)) true) (_ bv10 32) (_ bv9 32)) (ite (and (distinct ((_ extract 8 8) C1) (_ bv0 1)) true) (_ bv8 32) (_ bv7 32)))))
 (let ((?x4797 (ite (and (distinct ((_ extract 13 13) C1) (_ bv0 1)) true) (_ bv13 32) (ite (and (distinct ((_ extract 12 12) C1) (_ bv0 1)) true) (_ bv12 32) (_ bv11 32)))))
 (let ((?x7991 (ite (and (distinct ((_ extract 13 7) C1) (_ bv0 7)) true) (ite (and (distinct ((_ extract 13 11) C1) (_ bv0 3)) true) ?x4797 ?x15039) (ite (and (distinct ((_ extract 6 4) C1) (_ bv0 3)) true) ?x18819 ?x3328))))
 (let ((?x10544 (ite (and (distinct ((_ extract 17 16) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 17 17) C1) (_ bv0 1)) true) (_ bv17 32) (_ bv16 32)) (ite (and (distinct ((_ extract 15 15) C1) (_ bv0 1)) true) (_ bv15 32) (_ bv14 32)))))
 (let ((?x2293 (ite (and (distinct ((_ extract 20 20) C1) (_ bv0 1)) true) (_ bv20 32) (ite (and (distinct ((_ extract 19 19) C1) (_ bv0 1)) true) (_ bv19 32) (_ bv18 32)))))
 (let ((?x6873 (ite (and (distinct ((_ extract 23 23) C1) (_ bv0 1)) true) (_ bv23 32) (ite (and (distinct ((_ extract 22 22) C1) (_ bv0 1)) true) (_ bv22 32) (_ bv21 32)))))
 (let ((?x23300 (ite (and (distinct ((_ extract 26 26) C1) (_ bv0 1)) true) (_ bv26 32) (ite (and (distinct ((_ extract 25 25) C1) (_ bv0 1)) true) (_ bv25 32) (_ bv24 32)))))
 (let ((?x216 (ite (and (distinct ((_ extract 26 21) C1) (_ bv0 6)) true) (ite (and (distinct ((_ extract 26 24) C1) (_ bv0 3)) true) ?x23300 ?x6873) (ite (and (distinct ((_ extract 20 18) C1) (_ bv0 3)) true) ?x2293 ?x10544))))
 (let ((?x20719 (ite (and (distinct ((_ extract 30 29) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 30 30) C1) (_ bv0 1)) true) (_ bv30 32) (_ bv29 32)) (ite (and (distinct ((_ extract 28 28) C1) (_ bv0 1)) true) (_ bv28 32) (_ bv27 32)))))
 (let ((?x24265 (ite (and (distinct ((_ extract 33 33) C1) (_ bv0 1)) true) (_ bv33 32) (ite (and (distinct ((_ extract 32 32) C1) (_ bv0 1)) true) (_ bv32 32) (_ bv31 32)))))
 (let ((?x16251 (ite (and (distinct ((_ extract 36 36) C1) (_ bv0 1)) true) (_ bv36 32) (ite (and (distinct ((_ extract 35 35) C1) (_ bv0 1)) true) (_ bv35 32) (_ bv34 32)))))
 (let ((?x10876 (ite (and (distinct ((_ extract 39 39) C1) (_ bv0 1)) true) (_ bv39 32) (ite (and (distinct ((_ extract 38 38) C1) (_ bv0 1)) true) (_ bv38 32) (_ bv37 32)))))
 (let ((?x20831 (ite (and (distinct ((_ extract 39 34) C1) (_ bv0 6)) true) (ite (and (distinct ((_ extract 39 37) C1) (_ bv0 3)) true) ?x10876 ?x16251) (ite (and (distinct ((_ extract 33 31) C1) (_ bv0 3)) true) ?x24265 ?x20719))))
 (let ((?x4982 (ite (and (distinct ((_ extract 43 42) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 43 43) C1) (_ bv0 1)) true) (_ bv43 32) (_ bv42 32)) (ite (and (distinct ((_ extract 41 41) C1) (_ bv0 1)) true) (_ bv41 32) (_ bv40 32)))))
 (let ((?x7114 (ite (and (distinct ((_ extract 46 46) C1) (_ bv0 1)) true) (_ bv46 32) (ite (and (distinct ((_ extract 45 45) C1) (_ bv0 1)) true) (_ bv45 32) (_ bv44 32)))))
 (let ((?x16857 (ite (and (distinct ((_ extract 49 49) C1) (_ bv0 1)) true) (_ bv49 32) (ite (and (distinct ((_ extract 48 48) C1) (_ bv0 1)) true) (_ bv48 32) (_ bv47 32)))))
 (let ((?x578 (ite (and (distinct ((_ extract 52 52) C1) (_ bv0 1)) true) (_ bv52 32) (ite (and (distinct ((_ extract 51 51) C1) (_ bv0 1)) true) (_ bv51 32) (_ bv50 32)))))
 (let ((?x8232 (ite (and (distinct ((_ extract 52 47) C1) (_ bv0 6)) true) (ite (and (distinct ((_ extract 52 50) C1) (_ bv0 3)) true) ?x578 ?x16857) (ite (and (distinct ((_ extract 46 44) C1) (_ bv0 3)) true) ?x7114 ?x4982))))
 (let ((?x4138 (ite (and (distinct ((_ extract 52 27) C1) (_ bv0 26)) true) (ite (and (distinct ((_ extract 52 40) C1) (_ bv0 13)) true) ?x8232 ?x20831) (ite (and (distinct ((_ extract 26 14) C1) (_ bv0 13)) true) ?x216 ?x7991))))
 (let ((?x9904 (ite (and (distinct ((_ extract 2 2) C2) (_ bv0 1)) true) (_ bv2 32) (ite (and (distinct ((_ extract 1 1) C2) (_ bv0 1)) true) (_ bv1 32) (_ bv0 32)))))
 (let ((?x6053 (ite (and (distinct ((_ extract 5 5) C2) (_ bv0 1)) true) (_ bv5 32) (ite (and (distinct ((_ extract 4 4) C2) (_ bv0 1)) true) (_ bv4 32) (_ bv3 32)))))
 (let ((?x23208 (ite (and (distinct ((_ extract 8 8) C2) (_ bv0 1)) true) (_ bv8 32) (ite (and (distinct ((_ extract 7 7) C2) (_ bv0 1)) true) (_ bv7 32) (_ bv6 32)))))
 (let ((?x6852 (ite (and (distinct ((_ extract 10 9) C2) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) C2) (_ bv0 1)) true) (_ bv10 32) (_ bv9 32)) ?x23208)))
 (let ((?x3881 (ite (and (distinct ((_ extract 10 6) C2) (_ bv0 5)) true) ?x6852 (ite (and (distinct ((_ extract 5 3) C2) (_ bv0 3)) true) ?x6053 ?x9904))))
 (and (and (and (distinct C1 (_ bv0 53)) true) (= (bvand C1 (bvsub C1 (_ bv1 53))) (_ bv0 53))) (and (and (distinct C2 (_ bv0 11)) true) (= (bvand C2 (bvsub C2 (_ bv1 11))) (_ bv0 11))) (bvslt ?x3881 ?x4138) (not (bvult ?x3216 (_ bv53 53))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
