(set-info :status unknown)
(declare-fun C2 () (_ BitVec 11))
(declare-fun C3 () (_ BitVec 11))
(declare-fun C () (_ BitVec 62))
(assert
 (let ((?x7291 (ite (and (distinct ((_ extract 2 2) (bvsub C3 C2)) (_ bv0 1)) true) (_ bv2 11) (ite (and (distinct ((_ extract 1 1) (bvsub C3 C2)) (_ bv0 1)) true) (_ bv1 11) (_ bv0 11)))))
 (let ((?x2422 (ite (and (distinct ((_ extract 5 5) (bvsub C3 C2)) (_ bv0 1)) true) (_ bv5 11) (ite (and (distinct ((_ extract 4 4) (bvsub C3 C2)) (_ bv0 1)) true) (_ bv4 11) (_ bv3 11)))))
 (let ((?x6402 (ite (and (distinct ((_ extract 8 8) (bvsub C3 C2)) (_ bv0 1)) true) (_ bv8 11) (ite (and (distinct ((_ extract 7 7) (bvsub C3 C2)) (_ bv0 1)) true) (_ bv7 11) (_ bv6 11)))))
 (let ((?x2503 (ite (and (distinct ((_ extract 10 9) (bvsub C3 C2)) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) (bvsub C3 C2)) (_ bv0 1)) true) (_ bv10 11) (_ bv9 11)) ?x6402)))
 (let ((?x6112 (ite (and (distinct ((_ extract 10 6) (bvsub C3 C2)) (_ bv0 5)) true) ?x2503 (ite (and (distinct ((_ extract 5 3) (bvsub C3 C2)) (_ bv0 3)) true) ?x2422 ?x7291))))
 (let ((?x3315 (ite (and (distinct ((_ extract 3 2) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 3 3) C) (_ bv0 1)) true) (_ bv3 11) (_ bv2 11)) (ite (and (distinct ((_ extract 1 1) C) (_ bv0 1)) true) (_ bv1 11) (_ bv0 11)))))
 (let ((?x1232 (ite (and (distinct ((_ extract 7 6) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 7 7) C) (_ bv0 1)) true) (_ bv7 11) (_ bv6 11)) (ite (and (distinct ((_ extract 5 5) C) (_ bv0 1)) true) (_ bv5 11) (_ bv4 11)))))
 (let ((?x4558 (ite (and (distinct ((_ extract 11 10) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 11 11) C) (_ bv0 1)) true) (_ bv11 11) (_ bv10 11)) (ite (and (distinct ((_ extract 9 9) C) (_ bv0 1)) true) (_ bv9 11) (_ bv8 11)))))
 (let ((?x8372 (ite (and (distinct ((_ extract 15 14) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 15 15) C) (_ bv0 1)) true) (_ bv15 11) (_ bv14 11)) (ite (and (distinct ((_ extract 13 13) C) (_ bv0 1)) true) (_ bv13 11) (_ bv12 11)))))
 (let ((?x2975 (ite (and (distinct ((_ extract 15 8) C) (_ bv0 8)) true) (ite (and (distinct ((_ extract 15 12) C) (_ bv0 4)) true) ?x8372 ?x4558) (ite (and (distinct ((_ extract 7 4) C) (_ bv0 4)) true) ?x1232 ?x3315))))
 (let ((?x5880 (ite (and (distinct ((_ extract 19 18) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 19 19) C) (_ bv0 1)) true) (_ bv19 11) (_ bv18 11)) (ite (and (distinct ((_ extract 17 17) C) (_ bv0 1)) true) (_ bv17 11) (_ bv16 11)))))
 (let ((?x7833 (ite (and (distinct ((_ extract 23 22) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 23 23) C) (_ bv0 1)) true) (_ bv23 11) (_ bv22 11)) (ite (and (distinct ((_ extract 21 21) C) (_ bv0 1)) true) (_ bv21 11) (_ bv20 11)))))
 (let ((?x6832 (ite (and (distinct ((_ extract 27 26) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 27 27) C) (_ bv0 1)) true) (_ bv27 11) (_ bv26 11)) (ite (and (distinct ((_ extract 25 25) C) (_ bv0 1)) true) (_ bv25 11) (_ bv24 11)))))
 (let ((?x6702 (ite (and (distinct ((_ extract 30 30) C) (_ bv0 1)) true) (_ bv30 11) (ite (and (distinct ((_ extract 29 29) C) (_ bv0 1)) true) (_ bv29 11) (_ bv28 11)))))
 (let ((?x6387 (ite (and (distinct ((_ extract 30 24) C) (_ bv0 7)) true) (ite (and (distinct ((_ extract 30 28) C) (_ bv0 3)) true) ?x6702 ?x6832) (ite (and (distinct ((_ extract 23 20) C) (_ bv0 4)) true) ?x7833 ?x5880))))
 (let ((?x7667 (ite (and (distinct ((_ extract 34 33) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 34 34) C) (_ bv0 1)) true) (_ bv34 11) (_ bv33 11)) (ite (and (distinct ((_ extract 32 32) C) (_ bv0 1)) true) (_ bv32 11) (_ bv31 11)))))
 (let ((?x4600 (ite (and (distinct ((_ extract 38 37) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 38 38) C) (_ bv0 1)) true) (_ bv38 11) (_ bv37 11)) (ite (and (distinct ((_ extract 36 36) C) (_ bv0 1)) true) (_ bv36 11) (_ bv35 11)))))
 (let ((?x5117 (ite (and (distinct ((_ extract 42 41) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 42 42) C) (_ bv0 1)) true) (_ bv42 11) (_ bv41 11)) (ite (and (distinct ((_ extract 40 40) C) (_ bv0 1)) true) (_ bv40 11) (_ bv39 11)))))
 (let ((?x2809 (ite (and (distinct ((_ extract 46 45) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 46 46) C) (_ bv0 1)) true) (_ bv46 11) (_ bv45 11)) (ite (and (distinct ((_ extract 44 44) C) (_ bv0 1)) true) (_ bv44 11) (_ bv43 11)))))
 (let ((?x5194 (ite (and (distinct ((_ extract 46 39) C) (_ bv0 8)) true) (ite (and (distinct ((_ extract 46 43) C) (_ bv0 4)) true) ?x2809 ?x5117) (ite (and (distinct ((_ extract 38 35) C) (_ bv0 4)) true) ?x4600 ?x7667))))
 (let ((?x1928 (ite (and (distinct ((_ extract 50 49) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 50 50) C) (_ bv0 1)) true) (_ bv50 11) (_ bv49 11)) (ite (and (distinct ((_ extract 48 48) C) (_ bv0 1)) true) (_ bv48 11) (_ bv47 11)))))
 (let ((?x3730 (ite (and (distinct ((_ extract 54 53) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 54 54) C) (_ bv0 1)) true) (_ bv54 11) (_ bv53 11)) (ite (and (distinct ((_ extract 52 52) C) (_ bv0 1)) true) (_ bv52 11) (_ bv51 11)))))
 (let ((?x3890 (ite (and (distinct ((_ extract 58 57) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 58 58) C) (_ bv0 1)) true) (_ bv58 11) (_ bv57 11)) (ite (and (distinct ((_ extract 56 56) C) (_ bv0 1)) true) (_ bv56 11) (_ bv55 11)))))
 (let ((?x3308 (ite (and (distinct ((_ extract 61 61) C) (_ bv0 1)) true) (_ bv61 11) (ite (and (distinct ((_ extract 60 60) C) (_ bv0 1)) true) (_ bv60 11) (_ bv59 11)))))
 (let ((?x6569 (ite (and (distinct ((_ extract 61 55) C) (_ bv0 7)) true) (ite (and (distinct ((_ extract 61 59) C) (_ bv0 3)) true) ?x3308 ?x3890) (ite (and (distinct ((_ extract 54 51) C) (_ bv0 4)) true) ?x3730 ?x1928))))
 (let ((?x2714 (ite (and (distinct ((_ extract 61 31) C) (_ bv0 31)) true) (ite (and (distinct ((_ extract 61 47) C) (_ bv0 15)) true) ?x6569 ?x5194) (ite (and (distinct ((_ extract 30 16) C) (_ bv0 15)) true) ?x6387 ?x2975))))
 (let ((?x7851 (bvsub ?x2714 ?x6112)))
 (let ((?x6370 (ite (bvsgt (_ bv0 11) ?x7851) (_ bv0 11) ?x7851)))
 (let ((?x2876 (bvsub ?x6112 ?x2714)))
 (let ((?x1126 (ite (bvsgt (_ bv0 11) ?x2876) (_ bv0 11) ?x2876)))
 (let ((?x6746 (ite (and (distinct ((_ extract 3 2) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 3 3) C) (_ bv0 1)) true) (_ bv3 32) (_ bv2 32)) (ite (and (distinct ((_ extract 1 1) C) (_ bv0 1)) true) (_ bv1 32) (_ bv0 32)))))
 (let ((?x1460 (ite (and (distinct ((_ extract 7 6) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 7 7) C) (_ bv0 1)) true) (_ bv7 32) (_ bv6 32)) (ite (and (distinct ((_ extract 5 5) C) (_ bv0 1)) true) (_ bv5 32) (_ bv4 32)))))
 (let ((?x7567 (ite (and (distinct ((_ extract 11 10) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 11 11) C) (_ bv0 1)) true) (_ bv11 32) (_ bv10 32)) (ite (and (distinct ((_ extract 9 9) C) (_ bv0 1)) true) (_ bv9 32) (_ bv8 32)))))
 (let ((?x8108 (ite (and (distinct ((_ extract 15 14) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 15 15) C) (_ bv0 1)) true) (_ bv15 32) (_ bv14 32)) (ite (and (distinct ((_ extract 13 13) C) (_ bv0 1)) true) (_ bv13 32) (_ bv12 32)))))
 (let ((?x5430 (ite (and (distinct ((_ extract 15 8) C) (_ bv0 8)) true) (ite (and (distinct ((_ extract 15 12) C) (_ bv0 4)) true) ?x8108 ?x7567) (ite (and (distinct ((_ extract 7 4) C) (_ bv0 4)) true) ?x1460 ?x6746))))
 (let ((?x6683 (ite (and (distinct ((_ extract 19 18) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 19 19) C) (_ bv0 1)) true) (_ bv19 32) (_ bv18 32)) (ite (and (distinct ((_ extract 17 17) C) (_ bv0 1)) true) (_ bv17 32) (_ bv16 32)))))
 (let ((?x5970 (ite (and (distinct ((_ extract 23 22) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 23 23) C) (_ bv0 1)) true) (_ bv23 32) (_ bv22 32)) (ite (and (distinct ((_ extract 21 21) C) (_ bv0 1)) true) (_ bv21 32) (_ bv20 32)))))
 (let ((?x4671 (ite (and (distinct ((_ extract 27 26) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 27 27) C) (_ bv0 1)) true) (_ bv27 32) (_ bv26 32)) (ite (and (distinct ((_ extract 25 25) C) (_ bv0 1)) true) (_ bv25 32) (_ bv24 32)))))
 (let ((?x3972 (ite (and (distinct ((_ extract 30 30) C) (_ bv0 1)) true) (_ bv30 32) (ite (and (distinct ((_ extract 29 29) C) (_ bv0 1)) true) (_ bv29 32) (_ bv28 32)))))
 (let ((?x7364 (ite (and (distinct ((_ extract 30 24) C) (_ bv0 7)) true) (ite (and (distinct ((_ extract 30 28) C) (_ bv0 3)) true) ?x3972 ?x4671) (ite (and (distinct ((_ extract 23 20) C) (_ bv0 4)) true) ?x5970 ?x6683))))
 (let ((?x3488 (ite (and (distinct ((_ extract 34 33) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 34 34) C) (_ bv0 1)) true) (_ bv34 32) (_ bv33 32)) (ite (and (distinct ((_ extract 32 32) C) (_ bv0 1)) true) (_ bv32 32) (_ bv31 32)))))
 (let ((?x2962 (ite (and (distinct ((_ extract 38 37) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 38 38) C) (_ bv0 1)) true) (_ bv38 32) (_ bv37 32)) (ite (and (distinct ((_ extract 36 36) C) (_ bv0 1)) true) (_ bv36 32) (_ bv35 32)))))
 (let ((?x1920 (ite (and (distinct ((_ extract 42 41) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 42 42) C) (_ bv0 1)) true) (_ bv42 32) (_ bv41 32)) (ite (and (distinct ((_ extract 40 40) C) (_ bv0 1)) true) (_ bv40 32) (_ bv39 32)))))
 (let ((?x6905 (ite (and (distinct ((_ extract 46 45) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 46 46) C) (_ bv0 1)) true) (_ bv46 32) (_ bv45 32)) (ite (and (distinct ((_ extract 44 44) C) (_ bv0 1)) true) (_ bv44 32) (_ bv43 32)))))
 (let ((?x3707 (ite (and (distinct ((_ extract 46 39) C) (_ bv0 8)) true) (ite (and (distinct ((_ extract 46 43) C) (_ bv0 4)) true) ?x6905 ?x1920) (ite (and (distinct ((_ extract 38 35) C) (_ bv0 4)) true) ?x2962 ?x3488))))
 (let ((?x7874 (ite (and (distinct ((_ extract 50 49) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 50 50) C) (_ bv0 1)) true) (_ bv50 32) (_ bv49 32)) (ite (and (distinct ((_ extract 48 48) C) (_ bv0 1)) true) (_ bv48 32) (_ bv47 32)))))
 (let ((?x8361 (ite (and (distinct ((_ extract 54 53) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 54 54) C) (_ bv0 1)) true) (_ bv54 32) (_ bv53 32)) (ite (and (distinct ((_ extract 52 52) C) (_ bv0 1)) true) (_ bv52 32) (_ bv51 32)))))
 (let ((?x3434 (ite (and (distinct ((_ extract 58 57) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 58 58) C) (_ bv0 1)) true) (_ bv58 32) (_ bv57 32)) (ite (and (distinct ((_ extract 56 56) C) (_ bv0 1)) true) (_ bv56 32) (_ bv55 32)))))
 (let ((?x2002 (ite (and (distinct ((_ extract 61 61) C) (_ bv0 1)) true) (_ bv61 32) (ite (and (distinct ((_ extract 60 60) C) (_ bv0 1)) true) (_ bv60 32) (_ bv59 32)))))
 (let ((?x4496 (ite (and (distinct ((_ extract 61 55) C) (_ bv0 7)) true) (ite (and (distinct ((_ extract 61 59) C) (_ bv0 3)) true) ?x2002 ?x3434) (ite (and (distinct ((_ extract 54 51) C) (_ bv0 4)) true) ?x8361 ?x7874))))
 (let ((?x1256 (ite (and (distinct ((_ extract 61 31) C) (_ bv0 31)) true) (ite (and (distinct ((_ extract 61 47) C) (_ bv0 15)) true) ?x4496 ?x3707) (ite (and (distinct ((_ extract 30 16) C) (_ bv0 15)) true) ?x7364 ?x5430))))
 (let (($x7539 (and (and (distinct (bvsub C3 C2) (_ bv0 11)) true) (= (bvand (bvsub C3 C2) (bvsub (bvsub C3 C2) (_ bv1 11))) (_ bv0 11)))))
 (and (and (and (distinct C (_ bv0 62)) true) (= (bvand C (bvsub C (_ bv1 62))) (_ bv0 62))) $x7539 (bvslt ?x1256 (_ bv11 32)) (not (and (bvult ?x1126 (_ bv11 11)) (bvult ?x6370 (_ bv11 11))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
