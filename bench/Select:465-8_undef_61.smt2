(set-info :status unknown)
(declare-fun C2 () (_ BitVec 11))
(declare-fun C1 () (_ BitVec 63))
(assert
 (let ((?x13378 (ite (and (distinct ((_ extract 2 2) C2) (_ bv0 1)) true) (_ bv2 63) (ite (and (distinct ((_ extract 1 1) C2) (_ bv0 1)) true) (_ bv1 63) (_ bv0 63)))))
 (let ((?x16370 (ite (and (distinct ((_ extract 5 5) C2) (_ bv0 1)) true) (_ bv5 63) (ite (and (distinct ((_ extract 4 4) C2) (_ bv0 1)) true) (_ bv4 63) (_ bv3 63)))))
 (let ((?x9178 (ite (and (distinct ((_ extract 8 8) C2) (_ bv0 1)) true) (_ bv8 63) (ite (and (distinct ((_ extract 7 7) C2) (_ bv0 1)) true) (_ bv7 63) (_ bv6 63)))))
 (let ((?x12787 (ite (and (distinct ((_ extract 10 9) C2) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) C2) (_ bv0 1)) true) (_ bv10 63) (_ bv9 63)) ?x9178)))
 (let ((?x12183 (ite (and (distinct ((_ extract 10 6) C2) (_ bv0 5)) true) ?x12787 (ite (and (distinct ((_ extract 5 3) C2) (_ bv0 3)) true) ?x16370 ?x13378))))
 (let ((?x11484 (ite (and (distinct ((_ extract 3 2) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 3 3) C1) (_ bv0 1)) true) (_ bv3 63) (_ bv2 63)) (ite (and (distinct ((_ extract 1 1) C1) (_ bv0 1)) true) (_ bv1 63) (_ bv0 63)))))
 (let ((?x14196 (ite (and (distinct ((_ extract 7 6) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 7 7) C1) (_ bv0 1)) true) (_ bv7 63) (_ bv6 63)) (ite (and (distinct ((_ extract 5 5) C1) (_ bv0 1)) true) (_ bv5 63) (_ bv4 63)))))
 (let ((?x20098 (ite (and (distinct ((_ extract 11 10) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 11 11) C1) (_ bv0 1)) true) (_ bv11 63) (_ bv10 63)) (ite (and (distinct ((_ extract 9 9) C1) (_ bv0 1)) true) (_ bv9 63) (_ bv8 63)))))
 (let ((?x2705 (ite (and (distinct ((_ extract 15 14) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 15 15) C1) (_ bv0 1)) true) (_ bv15 63) (_ bv14 63)) (ite (and (distinct ((_ extract 13 13) C1) (_ bv0 1)) true) (_ bv13 63) (_ bv12 63)))))
 (let ((?x4707 (ite (and (distinct ((_ extract 15 8) C1) (_ bv0 8)) true) (ite (and (distinct ((_ extract 15 12) C1) (_ bv0 4)) true) ?x2705 ?x20098) (ite (and (distinct ((_ extract 7 4) C1) (_ bv0 4)) true) ?x14196 ?x11484))))
 (let ((?x11558 (ite (and (distinct ((_ extract 19 18) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 19 19) C1) (_ bv0 1)) true) (_ bv19 63) (_ bv18 63)) (ite (and (distinct ((_ extract 17 17) C1) (_ bv0 1)) true) (_ bv17 63) (_ bv16 63)))))
 (let ((?x15126 (ite (and (distinct ((_ extract 23 22) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 23 23) C1) (_ bv0 1)) true) (_ bv23 63) (_ bv22 63)) (ite (and (distinct ((_ extract 21 21) C1) (_ bv0 1)) true) (_ bv21 63) (_ bv20 63)))))
 (let ((?x18812 (ite (and (distinct ((_ extract 27 26) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 27 27) C1) (_ bv0 1)) true) (_ bv27 63) (_ bv26 63)) (ite (and (distinct ((_ extract 25 25) C1) (_ bv0 1)) true) (_ bv25 63) (_ bv24 63)))))
 (let ((?x17046 (ite (and (distinct ((_ extract 31 30) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 31 31) C1) (_ bv0 1)) true) (_ bv31 63) (_ bv30 63)) (ite (and (distinct ((_ extract 29 29) C1) (_ bv0 1)) true) (_ bv29 63) (_ bv28 63)))))
 (let ((?x8359 (ite (and (distinct ((_ extract 31 24) C1) (_ bv0 8)) true) (ite (and (distinct ((_ extract 31 28) C1) (_ bv0 4)) true) ?x17046 ?x18812) (ite (and (distinct ((_ extract 23 20) C1) (_ bv0 4)) true) ?x15126 ?x11558))))
 (let ((?x9660 (ite (and (distinct ((_ extract 35 34) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 35 35) C1) (_ bv0 1)) true) (_ bv35 63) (_ bv34 63)) (ite (and (distinct ((_ extract 33 33) C1) (_ bv0 1)) true) (_ bv33 63) (_ bv32 63)))))
 (let ((?x5441 (ite (and (distinct ((_ extract 39 38) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 39 39) C1) (_ bv0 1)) true) (_ bv39 63) (_ bv38 63)) (ite (and (distinct ((_ extract 37 37) C1) (_ bv0 1)) true) (_ bv37 63) (_ bv36 63)))))
 (let ((?x23079 (ite (and (distinct ((_ extract 43 42) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 43 43) C1) (_ bv0 1)) true) (_ bv43 63) (_ bv42 63)) (ite (and (distinct ((_ extract 41 41) C1) (_ bv0 1)) true) (_ bv41 63) (_ bv40 63)))))
 (let ((?x25215 (ite (and (distinct ((_ extract 47 46) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 47 47) C1) (_ bv0 1)) true) (_ bv47 63) (_ bv46 63)) (ite (and (distinct ((_ extract 45 45) C1) (_ bv0 1)) true) (_ bv45 63) (_ bv44 63)))))
 (let ((?x13992 (ite (and (distinct ((_ extract 47 40) C1) (_ bv0 8)) true) (ite (and (distinct ((_ extract 47 44) C1) (_ bv0 4)) true) ?x25215 ?x23079) (ite (and (distinct ((_ extract 39 36) C1) (_ bv0 4)) true) ?x5441 ?x9660))))
 (let ((?x2894 (ite (and (distinct ((_ extract 51 50) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 51 51) C1) (_ bv0 1)) true) (_ bv51 63) (_ bv50 63)) (ite (and (distinct ((_ extract 49 49) C1) (_ bv0 1)) true) (_ bv49 63) (_ bv48 63)))))
 (let ((?x18428 (ite (and (distinct ((_ extract 55 54) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 55 55) C1) (_ bv0 1)) true) (_ bv55 63) (_ bv54 63)) (ite (and (distinct ((_ extract 53 53) C1) (_ bv0 1)) true) (_ bv53 63) (_ bv52 63)))))
 (let ((?x8818 (ite (and (distinct ((_ extract 59 58) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 59 59) C1) (_ bv0 1)) true) (_ bv59 63) (_ bv58 63)) (ite (and (distinct ((_ extract 57 57) C1) (_ bv0 1)) true) (_ bv57 63) (_ bv56 63)))))
 (let ((?x14820 (ite (and (distinct ((_ extract 62 62) C1) (_ bv0 1)) true) (_ bv62 63) (ite (and (distinct ((_ extract 61 61) C1) (_ bv0 1)) true) (_ bv61 63) (_ bv60 63)))))
 (let ((?x10832 (ite (and (distinct ((_ extract 62 56) C1) (_ bv0 7)) true) (ite (and (distinct ((_ extract 62 60) C1) (_ bv0 3)) true) ?x14820 ?x8818) (ite (and (distinct ((_ extract 55 52) C1) (_ bv0 4)) true) ?x18428 ?x2894))))
 (let ((?x17900 (ite (and (distinct ((_ extract 62 32) C1) (_ bv0 31)) true) (ite (and (distinct ((_ extract 62 48) C1) (_ bv0 15)) true) ?x10832 ?x13992) (ite (and (distinct ((_ extract 31 16) C1) (_ bv0 16)) true) ?x8359 ?x4707))))
 (let ((?x13902 (bvsub ?x17900 ?x12183)))
 (let ((?x10815 (ite (and (distinct ((_ extract 3 2) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 3 3) C1) (_ bv0 1)) true) (_ bv3 32) (_ bv2 32)) (ite (and (distinct ((_ extract 1 1) C1) (_ bv0 1)) true) (_ bv1 32) (_ bv0 32)))))
 (let ((?x4163 (ite (and (distinct ((_ extract 7 6) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 7 7) C1) (_ bv0 1)) true) (_ bv7 32) (_ bv6 32)) (ite (and (distinct ((_ extract 5 5) C1) (_ bv0 1)) true) (_ bv5 32) (_ bv4 32)))))
 (let ((?x24688 (ite (and (distinct ((_ extract 11 10) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 11 11) C1) (_ bv0 1)) true) (_ bv11 32) (_ bv10 32)) (ite (and (distinct ((_ extract 9 9) C1) (_ bv0 1)) true) (_ bv9 32) (_ bv8 32)))))
 (let ((?x13397 (ite (and (distinct ((_ extract 15 14) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 15 15) C1) (_ bv0 1)) true) (_ bv15 32) (_ bv14 32)) (ite (and (distinct ((_ extract 13 13) C1) (_ bv0 1)) true) (_ bv13 32) (_ bv12 32)))))
 (let ((?x17925 (ite (and (distinct ((_ extract 15 8) C1) (_ bv0 8)) true) (ite (and (distinct ((_ extract 15 12) C1) (_ bv0 4)) true) ?x13397 ?x24688) (ite (and (distinct ((_ extract 7 4) C1) (_ bv0 4)) true) ?x4163 ?x10815))))
 (let ((?x2304 (ite (and (distinct ((_ extract 19 18) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 19 19) C1) (_ bv0 1)) true) (_ bv19 32) (_ bv18 32)) (ite (and (distinct ((_ extract 17 17) C1) (_ bv0 1)) true) (_ bv17 32) (_ bv16 32)))))
 (let ((?x273 (ite (and (distinct ((_ extract 23 22) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 23 23) C1) (_ bv0 1)) true) (_ bv23 32) (_ bv22 32)) (ite (and (distinct ((_ extract 21 21) C1) (_ bv0 1)) true) (_ bv21 32) (_ bv20 32)))))
 (let ((?x23639 (ite (and (distinct ((_ extract 27 26) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 27 27) C1) (_ bv0 1)) true) (_ bv27 32) (_ bv26 32)) (ite (and (distinct ((_ extract 25 25) C1) (_ bv0 1)) true) (_ bv25 32) (_ bv24 32)))))
 (let ((?x8646 (ite (and (distinct ((_ extract 31 30) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 31 31) C1) (_ bv0 1)) true) (_ bv31 32) (_ bv30 32)) (ite (and (distinct ((_ extract 29 29) C1) (_ bv0 1)) true) (_ bv29 32) (_ bv28 32)))))
 (let ((?x14742 (ite (and (distinct ((_ extract 31 24) C1) (_ bv0 8)) true) (ite (and (distinct ((_ extract 31 28) C1) (_ bv0 4)) true) ?x8646 ?x23639) (ite (and (distinct ((_ extract 23 20) C1) (_ bv0 4)) true) ?x273 ?x2304))))
 (let ((?x19780 (ite (and (distinct ((_ extract 35 34) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 35 35) C1) (_ bv0 1)) true) (_ bv35 32) (_ bv34 32)) (ite (and (distinct ((_ extract 33 33) C1) (_ bv0 1)) true) (_ bv33 32) (_ bv32 32)))))
 (let ((?x16980 (ite (and (distinct ((_ extract 39 38) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 39 39) C1) (_ bv0 1)) true) (_ bv39 32) (_ bv38 32)) (ite (and (distinct ((_ extract 37 37) C1) (_ bv0 1)) true) (_ bv37 32) (_ bv36 32)))))
 (let ((?x20655 (ite (and (distinct ((_ extract 43 42) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 43 43) C1) (_ bv0 1)) true) (_ bv43 32) (_ bv42 32)) (ite (and (distinct ((_ extract 41 41) C1) (_ bv0 1)) true) (_ bv41 32) (_ bv40 32)))))
 (let ((?x19522 (ite (and (distinct ((_ extract 47 46) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 47 47) C1) (_ bv0 1)) true) (_ bv47 32) (_ bv46 32)) (ite (and (distinct ((_ extract 45 45) C1) (_ bv0 1)) true) (_ bv45 32) (_ bv44 32)))))
 (let ((?x19622 (ite (and (distinct ((_ extract 47 40) C1) (_ bv0 8)) true) (ite (and (distinct ((_ extract 47 44) C1) (_ bv0 4)) true) ?x19522 ?x20655) (ite (and (distinct ((_ extract 39 36) C1) (_ bv0 4)) true) ?x16980 ?x19780))))
 (let ((?x6303 (ite (and (distinct ((_ extract 51 50) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 51 51) C1) (_ bv0 1)) true) (_ bv51 32) (_ bv50 32)) (ite (and (distinct ((_ extract 49 49) C1) (_ bv0 1)) true) (_ bv49 32) (_ bv48 32)))))
 (let ((?x2899 (ite (and (distinct ((_ extract 55 54) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 55 55) C1) (_ bv0 1)) true) (_ bv55 32) (_ bv54 32)) (ite (and (distinct ((_ extract 53 53) C1) (_ bv0 1)) true) (_ bv53 32) (_ bv52 32)))))
 (let ((?x15026 (ite (and (distinct ((_ extract 59 58) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 59 59) C1) (_ bv0 1)) true) (_ bv59 32) (_ bv58 32)) (ite (and (distinct ((_ extract 57 57) C1) (_ bv0 1)) true) (_ bv57 32) (_ bv56 32)))))
 (let ((?x7353 (ite (and (distinct ((_ extract 62 62) C1) (_ bv0 1)) true) (_ bv62 32) (ite (and (distinct ((_ extract 61 61) C1) (_ bv0 1)) true) (_ bv61 32) (_ bv60 32)))))
 (let ((?x3402 (ite (and (distinct ((_ extract 62 56) C1) (_ bv0 7)) true) (ite (and (distinct ((_ extract 62 60) C1) (_ bv0 3)) true) ?x7353 ?x15026) (ite (and (distinct ((_ extract 55 52) C1) (_ bv0 4)) true) ?x2899 ?x6303))))
 (let ((?x20831 (ite (and (distinct ((_ extract 62 32) C1) (_ bv0 31)) true) (ite (and (distinct ((_ extract 62 48) C1) (_ bv0 15)) true) ?x3402 ?x19622) (ite (and (distinct ((_ extract 31 16) C1) (_ bv0 16)) true) ?x14742 ?x17925))))
 (let ((?x6845 (ite (and (distinct ((_ extract 2 2) C2) (_ bv0 1)) true) (_ bv2 32) (ite (and (distinct ((_ extract 1 1) C2) (_ bv0 1)) true) (_ bv1 32) (_ bv0 32)))))
 (let ((?x13507 (ite (and (distinct ((_ extract 5 5) C2) (_ bv0 1)) true) (_ bv5 32) (ite (and (distinct ((_ extract 4 4) C2) (_ bv0 1)) true) (_ bv4 32) (_ bv3 32)))))
 (let ((?x2024 (ite (and (distinct ((_ extract 8 8) C2) (_ bv0 1)) true) (_ bv8 32) (ite (and (distinct ((_ extract 7 7) C2) (_ bv0 1)) true) (_ bv7 32) (_ bv6 32)))))
 (let ((?x165 (ite (and (distinct ((_ extract 10 9) C2) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) C2) (_ bv0 1)) true) (_ bv10 32) (_ bv9 32)) ?x2024)))
 (let ((?x3551 (ite (and (distinct ((_ extract 10 6) C2) (_ bv0 5)) true) ?x165 (ite (and (distinct ((_ extract 5 3) C2) (_ bv0 3)) true) ?x13507 ?x6845))))
 (and (and (and (distinct C1 (_ bv0 63)) true) (= (bvand C1 (bvsub C1 (_ bv1 63))) (_ bv0 63))) (and (and (distinct C2 (_ bv0 11)) true) (= (bvand C2 (bvsub C2 (_ bv1 11))) (_ bv0 11))) (bvslt ?x3551 ?x20831) (not (bvult ?x13902 (_ bv63 63))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
