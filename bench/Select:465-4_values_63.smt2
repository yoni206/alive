(set-info :status unknown)
(declare-fun %Y () (_ BitVec 11))
(declare-fun C2 () (_ BitVec 11))
(declare-fun C1 () (_ BitVec 7))
(declare-fun %X () (_ BitVec 7))
(assert
 (let ((?x3652 (ite (and (distinct ((_ extract 2 2) C2) (_ bv0 1)) true) (_ bv2 7) (ite (and (distinct ((_ extract 1 1) C2) (_ bv0 1)) true) (_ bv1 7) (_ bv0 7)))))
 (let ((?x3302 (ite (and (distinct ((_ extract 5 5) C2) (_ bv0 1)) true) (_ bv5 7) (ite (and (distinct ((_ extract 4 4) C2) (_ bv0 1)) true) (_ bv4 7) (_ bv3 7)))))
 (let ((?x2586 (ite (and (distinct ((_ extract 8 8) C2) (_ bv0 1)) true) (_ bv8 7) (ite (and (distinct ((_ extract 7 7) C2) (_ bv0 1)) true) (_ bv7 7) (_ bv6 7)))))
 (let ((?x3126 (ite (and (distinct ((_ extract 10 9) C2) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) C2) (_ bv0 1)) true) (_ bv10 7) (_ bv9 7)) ?x2586)))
 (let ((?x1275 (ite (and (distinct ((_ extract 10 6) C2) (_ bv0 5)) true) ?x3126 (ite (and (distinct ((_ extract 5 3) C2) (_ bv0 3)) true) ?x3302 ?x3652))))
 (let ((?x5744 (ite (and (distinct ((_ extract 3 2) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 3 3) C1) (_ bv0 1)) true) (_ bv3 7) (_ bv2 7)) (ite (and (distinct ((_ extract 1 1) C1) (_ bv0 1)) true) (_ bv1 7) (_ bv0 7)))))
 (let ((?x6379 (ite (and (distinct ((_ extract 6 6) C1) (_ bv0 1)) true) (_ bv6 7) (ite (and (distinct ((_ extract 5 5) C1) (_ bv0 1)) true) (_ bv5 7) (_ bv4 7)))))
 (let ((?x5833 (bvsub (ite (and (distinct ((_ extract 6 4) C1) (_ bv0 3)) true) ?x6379 ?x5744) ?x1275)))
 (let ((?x6483 (bvand %X C1)))
 (let ((?x6476 (bvor %Y C2)))
 (let (($x4634 (and (distinct (ite (= (ite (and (distinct ?x6483 (_ bv0 7)) true) (_ bv1 1) (_ bv0 1)) (_ bv1 1)) %Y ?x6476) (bvor (bvxor ((_ zero_extend 4) (bvlshr ?x6483 ?x5833)) C2) %Y)) true)))
 (let ((?x5831 (ite (and (distinct ((_ extract 3 2) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 3 3) C1) (_ bv0 1)) true) (_ bv3 32) (_ bv2 32)) (ite (and (distinct ((_ extract 1 1) C1) (_ bv0 1)) true) (_ bv1 32) (_ bv0 32)))))
 (let ((?x2262 (ite (and (distinct ((_ extract 6 6) C1) (_ bv0 1)) true) (_ bv6 32) (ite (and (distinct ((_ extract 5 5) C1) (_ bv0 1)) true) (_ bv5 32) (_ bv4 32)))))
 (let ((?x3618 (ite (and (distinct ((_ extract 2 2) C2) (_ bv0 1)) true) (_ bv2 32) (ite (and (distinct ((_ extract 1 1) C2) (_ bv0 1)) true) (_ bv1 32) (_ bv0 32)))))
 (let ((?x1311 (ite (and (distinct ((_ extract 5 5) C2) (_ bv0 1)) true) (_ bv5 32) (ite (and (distinct ((_ extract 4 4) C2) (_ bv0 1)) true) (_ bv4 32) (_ bv3 32)))))
 (let ((?x5909 (ite (and (distinct ((_ extract 8 8) C2) (_ bv0 1)) true) (_ bv8 32) (ite (and (distinct ((_ extract 7 7) C2) (_ bv0 1)) true) (_ bv7 32) (_ bv6 32)))))
 (let ((?x4780 (ite (and (distinct ((_ extract 10 9) C2) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) C2) (_ bv0 1)) true) (_ bv10 32) (_ bv9 32)) ?x5909)))
 (let ((?x6255 (ite (and (distinct ((_ extract 10 6) C2) (_ bv0 5)) true) ?x4780 (ite (and (distinct ((_ extract 5 3) C2) (_ bv0 3)) true) ?x1311 ?x3618))))
 (and (and (and (distinct C1 (_ bv0 7)) true) (= (bvand C1 (bvsub C1 (_ bv1 7))) (_ bv0 7))) (and (and (distinct C2 (_ bv0 11)) true) (= (bvand C2 (bvsub C2 (_ bv1 11))) (_ bv0 11))) (bvslt ?x6255 (ite (and (distinct ((_ extract 6 4) C1) (_ bv0 3)) true) ?x2262 ?x5831)) $x4634))))))))))))))))))))
(check-sat)
