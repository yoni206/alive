(set-info :status unknown)
(declare-fun mem0 () (_ BitVec 8))
(declare-fun %p2 () (_ BitVec 64))
(declare-fun idx () (_ BitVec 64))
(declare-fun %p1 () (_ BitVec 64))
(declare-fun |ana_equivalentAddressValues(%p1, %p2)| () (_ BitVec 1))
(assert
 (let ((?x15736 (concat (concat (concat (concat mem0 mem0) mem0) mem0) ((_ extract 2 0) mem0))))
 (let (($x17826 (or true true)))
 (let (($x18818 (and (distinct %p2 (_ bv0 64)) true)))
 (let (($x14172 (and (distinct %p1 (_ bv0 64)) true)))
 (let ((?x8975 (ite (and $x14172 $x17826 $x14172 $x17826 $x14172 $x17826 $x18818 $x17826 (= idx %p2)) (concat ((_ extract 7 3) mem0) ((_ extract 2 0) ?x15736)) mem0)))
 (let (($x7072 (and $x14172 $x17826 $x14172 $x17826 $x14172 $x17826 $x18818 $x17826 (= idx (bvadd (bvadd %p2 (_ bv1 64)) (_ bv0 64))))))
 (let (($x1702 (and $x14172 $x17826 $x14172 $x17826 $x14172 $x17826 $x18818 $x17826 (= idx (bvadd (bvadd %p2 (_ bv1 64)) (_ bv1 64))))))
 (let (($x17231 (and $x14172 $x17826 $x14172 $x17826 $x14172 $x17826 $x18818 $x17826 (= idx (bvadd (bvadd %p2 (_ bv1 64)) (_ bv2 64))))))
 (let ((?x12921 (ite $x17231 ((_ extract 26 19) ?x15736) (ite $x1702 ((_ extract 18 11) ?x15736) (ite $x7072 ((_ extract 10 3) ?x15736) ?x8975)))))
 (let (($x10055 (and $x14172 $x17826 $x14172 $x17826 $x14172 $x17826 $x18818 $x17826 (= idx (bvadd (bvadd %p2 (_ bv1 64)) (_ bv3 64))))))
 (let ((?x15398 (ite $x10055 ((_ extract 34 27) ?x15736) ?x12921)))
 (let (($x6316 (= |ana_equivalentAddressValues(%p1, %p2)| (_ bv1 1))))
 (and (=> $x6316 (= %p1 %p2)) $x6316 (and (distinct ?x15398 mem0) true)))))))))))))))
(check-sat)
