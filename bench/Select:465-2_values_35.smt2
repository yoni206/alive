(set-info :status unknown)
(declare-fun %Y () (_ BitVec 11))
(declare-fun C2 () (_ BitVec 11))
(declare-fun C1 () (_ BitVec 43))
(declare-fun %X () (_ BitVec 43))
(assert
 (let ((?x16961 (ite (and (distinct ((_ extract 2 2) C1) (_ bv0 1)) true) (_ bv2 11) (ite (and (distinct ((_ extract 1 1) C1) (_ bv0 1)) true) (_ bv1 11) (_ bv0 11)))))
 (let ((?x22911 (ite (and (distinct ((_ extract 5 5) C1) (_ bv0 1)) true) (_ bv5 11) (ite (and (distinct ((_ extract 4 4) C1) (_ bv0 1)) true) (_ bv4 11) (_ bv3 11)))))
 (let ((?x20693 (ite (and (distinct ((_ extract 8 8) C1) (_ bv0 1)) true) (_ bv8 11) (ite (and (distinct ((_ extract 7 7) C1) (_ bv0 1)) true) (_ bv7 11) (_ bv6 11)))))
 (let ((?x14359 (ite (and (distinct ((_ extract 10 9) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) C1) (_ bv0 1)) true) (_ bv10 11) (_ bv9 11)) ?x20693)))
 (let ((?x9478 (ite (and (distinct ((_ extract 10 6) C1) (_ bv0 5)) true) ?x14359 (ite (and (distinct ((_ extract 5 3) C1) (_ bv0 3)) true) ?x22911 ?x16961))))
 (let ((?x24468 (ite (and (distinct ((_ extract 13 13) C1) (_ bv0 1)) true) (_ bv13 11) (ite (and (distinct ((_ extract 12 12) C1) (_ bv0 1)) true) (_ bv12 11) (_ bv11 11)))))
 (let ((?x16121 (ite (and (distinct ((_ extract 16 16) C1) (_ bv0 1)) true) (_ bv16 11) (ite (and (distinct ((_ extract 15 15) C1) (_ bv0 1)) true) (_ bv15 11) (_ bv14 11)))))
 (let ((?x14828 (ite (and (distinct ((_ extract 19 19) C1) (_ bv0 1)) true) (_ bv19 11) (ite (and (distinct ((_ extract 18 18) C1) (_ bv0 1)) true) (_ bv18 11) (_ bv17 11)))))
 (let ((?x14806 (ite (and (distinct ((_ extract 21 20) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 21 21) C1) (_ bv0 1)) true) (_ bv21 11) (_ bv20 11)) ?x14828)))
 (let ((?x18476 (ite (and (distinct ((_ extract 21 17) C1) (_ bv0 5)) true) ?x14806 (ite (and (distinct ((_ extract 16 14) C1) (_ bv0 3)) true) ?x16121 ?x24468))))
 (let ((?x10348 (ite (and (distinct ((_ extract 24 24) C1) (_ bv0 1)) true) (_ bv24 11) (ite (and (distinct ((_ extract 23 23) C1) (_ bv0 1)) true) (_ bv23 11) (_ bv22 11)))))
 (let ((?x8775 (ite (and (distinct ((_ extract 27 27) C1) (_ bv0 1)) true) (_ bv27 11) (ite (and (distinct ((_ extract 26 26) C1) (_ bv0 1)) true) (_ bv26 11) (_ bv25 11)))))
 (let ((?x3074 (ite (and (distinct ((_ extract 30 30) C1) (_ bv0 1)) true) (_ bv30 11) (ite (and (distinct ((_ extract 29 29) C1) (_ bv0 1)) true) (_ bv29 11) (_ bv28 11)))))
 (let ((?x2724 (ite (and (distinct ((_ extract 32 31) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 32 32) C1) (_ bv0 1)) true) (_ bv32 11) (_ bv31 11)) ?x3074)))
 (let ((?x12885 (ite (and (distinct ((_ extract 32 28) C1) (_ bv0 5)) true) ?x2724 (ite (and (distinct ((_ extract 27 25) C1) (_ bv0 3)) true) ?x8775 ?x10348))))
 (let ((?x19116 (ite (and (distinct ((_ extract 35 35) C1) (_ bv0 1)) true) (_ bv35 11) (ite (and (distinct ((_ extract 34 34) C1) (_ bv0 1)) true) (_ bv34 11) (_ bv33 11)))))
 (let ((?x17231 (ite (and (distinct ((_ extract 37 36) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 37 37) C1) (_ bv0 1)) true) (_ bv37 11) (_ bv36 11)) ?x19116)))
 (let ((?x11515 (ite (and (distinct ((_ extract 40 40) C1) (_ bv0 1)) true) (_ bv40 11) (ite (and (distinct ((_ extract 39 39) C1) (_ bv0 1)) true) (_ bv39 11) (_ bv38 11)))))
 (let ((?x6943 (ite (and (distinct ((_ extract 42 41) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 42 42) C1) (_ bv0 1)) true) (_ bv42 11) (_ bv41 11)) ?x11515)))
 (let ((?x11798 (ite (and (distinct ((_ extract 42 33) C1) (_ bv0 10)) true) (ite (and (distinct ((_ extract 42 38) C1) (_ bv0 5)) true) ?x6943 ?x17231) ?x12885)))
 (let ((?x7508 (ite (and (distinct ((_ extract 42 22) C1) (_ bv0 21)) true) ?x11798 (ite (and (distinct ((_ extract 21 11) C1) (_ bv0 11)) true) ?x18476 ?x9478))))
 (let ((?x23142 (ite (and (distinct ((_ extract 2 2) C2) (_ bv0 1)) true) (_ bv2 11) (ite (and (distinct ((_ extract 1 1) C2) (_ bv0 1)) true) (_ bv1 11) (_ bv0 11)))))
 (let ((?x8479 (ite (and (distinct ((_ extract 5 5) C2) (_ bv0 1)) true) (_ bv5 11) (ite (and (distinct ((_ extract 4 4) C2) (_ bv0 1)) true) (_ bv4 11) (_ bv3 11)))))
 (let ((?x1122 (ite (and (distinct ((_ extract 8 8) C2) (_ bv0 1)) true) (_ bv8 11) (ite (and (distinct ((_ extract 7 7) C2) (_ bv0 1)) true) (_ bv7 11) (_ bv6 11)))))
 (let ((?x4266 (ite (and (distinct ((_ extract 10 9) C2) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) C2) (_ bv0 1)) true) (_ bv10 11) (_ bv9 11)) ?x1122)))
 (let ((?x732 (ite (and (distinct ((_ extract 10 6) C2) (_ bv0 5)) true) ?x4266 (ite (and (distinct ((_ extract 5 3) C2) (_ bv0 3)) true) ?x8479 ?x23142))))
 (let ((?x14676 (bvsub ?x732 ?x7508)))
 (let ((?x15835 (bvor %Y C2)))
 (let ((?x24664 (ite (= (ite (and (distinct (bvand %X C1) (_ bv0 43)) true) (_ bv1 1) (_ bv0 1)) (_ bv1 1)) %Y ?x15835)))
 (let (($x14656 (and (distinct ?x24664 (bvor (bvxor (bvshl ((_ extract 10 0) (bvand %X C1)) ?x14676) C2) %Y)) true)))
 (let ((?x11260 (ite (and (distinct ((_ extract 2 2) C1) (_ bv0 1)) true) (_ bv2 32) (ite (and (distinct ((_ extract 1 1) C1) (_ bv0 1)) true) (_ bv1 32) (_ bv0 32)))))
 (let ((?x22495 (ite (and (distinct ((_ extract 5 5) C1) (_ bv0 1)) true) (_ bv5 32) (ite (and (distinct ((_ extract 4 4) C1) (_ bv0 1)) true) (_ bv4 32) (_ bv3 32)))))
 (let ((?x4173 (ite (and (distinct ((_ extract 8 8) C1) (_ bv0 1)) true) (_ bv8 32) (ite (and (distinct ((_ extract 7 7) C1) (_ bv0 1)) true) (_ bv7 32) (_ bv6 32)))))
 (let ((?x14138 (ite (and (distinct ((_ extract 10 9) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) C1) (_ bv0 1)) true) (_ bv10 32) (_ bv9 32)) ?x4173)))
 (let ((?x9619 (ite (and (distinct ((_ extract 10 6) C1) (_ bv0 5)) true) ?x14138 (ite (and (distinct ((_ extract 5 3) C1) (_ bv0 3)) true) ?x22495 ?x11260))))
 (let ((?x24194 (ite (and (distinct ((_ extract 13 13) C1) (_ bv0 1)) true) (_ bv13 32) (ite (and (distinct ((_ extract 12 12) C1) (_ bv0 1)) true) (_ bv12 32) (_ bv11 32)))))
 (let ((?x14795 (ite (and (distinct ((_ extract 16 16) C1) (_ bv0 1)) true) (_ bv16 32) (ite (and (distinct ((_ extract 15 15) C1) (_ bv0 1)) true) (_ bv15 32) (_ bv14 32)))))
 (let ((?x3371 (ite (and (distinct ((_ extract 19 19) C1) (_ bv0 1)) true) (_ bv19 32) (ite (and (distinct ((_ extract 18 18) C1) (_ bv0 1)) true) (_ bv18 32) (_ bv17 32)))))
 (let ((?x18140 (ite (and (distinct ((_ extract 21 20) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 21 21) C1) (_ bv0 1)) true) (_ bv21 32) (_ bv20 32)) ?x3371)))
 (let ((?x22234 (ite (and (distinct ((_ extract 21 17) C1) (_ bv0 5)) true) ?x18140 (ite (and (distinct ((_ extract 16 14) C1) (_ bv0 3)) true) ?x14795 ?x24194))))
 (let ((?x9950 (ite (and (distinct ((_ extract 24 24) C1) (_ bv0 1)) true) (_ bv24 32) (ite (and (distinct ((_ extract 23 23) C1) (_ bv0 1)) true) (_ bv23 32) (_ bv22 32)))))
 (let ((?x5399 (ite (and (distinct ((_ extract 27 27) C1) (_ bv0 1)) true) (_ bv27 32) (ite (and (distinct ((_ extract 26 26) C1) (_ bv0 1)) true) (_ bv26 32) (_ bv25 32)))))
 (let ((?x2949 (ite (and (distinct ((_ extract 30 30) C1) (_ bv0 1)) true) (_ bv30 32) (ite (and (distinct ((_ extract 29 29) C1) (_ bv0 1)) true) (_ bv29 32) (_ bv28 32)))))
 (let ((?x24063 (ite (and (distinct ((_ extract 32 31) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 32 32) C1) (_ bv0 1)) true) (_ bv32 32) (_ bv31 32)) ?x2949)))
 (let ((?x9575 (ite (and (distinct ((_ extract 32 28) C1) (_ bv0 5)) true) ?x24063 (ite (and (distinct ((_ extract 27 25) C1) (_ bv0 3)) true) ?x5399 ?x9950))))
 (let ((?x16578 (ite (and (distinct ((_ extract 35 35) C1) (_ bv0 1)) true) (_ bv35 32) (ite (and (distinct ((_ extract 34 34) C1) (_ bv0 1)) true) (_ bv34 32) (_ bv33 32)))))
 (let ((?x5297 (ite (and (distinct ((_ extract 37 36) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 37 37) C1) (_ bv0 1)) true) (_ bv37 32) (_ bv36 32)) ?x16578)))
 (let ((?x12458 (ite (and (distinct ((_ extract 40 40) C1) (_ bv0 1)) true) (_ bv40 32) (ite (and (distinct ((_ extract 39 39) C1) (_ bv0 1)) true) (_ bv39 32) (_ bv38 32)))))
 (let ((?x6276 (ite (and (distinct ((_ extract 42 41) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 42 42) C1) (_ bv0 1)) true) (_ bv42 32) (_ bv41 32)) ?x12458)))
 (let ((?x6860 (ite (and (distinct ((_ extract 42 33) C1) (_ bv0 10)) true) (ite (and (distinct ((_ extract 42 38) C1) (_ bv0 5)) true) ?x6276 ?x5297) ?x9575)))
 (let ((?x12537 (ite (and (distinct ((_ extract 42 22) C1) (_ bv0 21)) true) ?x6860 (ite (and (distinct ((_ extract 21 11) C1) (_ bv0 11)) true) ?x22234 ?x9619))))
 (let ((?x12415 (ite (and (distinct ((_ extract 2 2) C2) (_ bv0 1)) true) (_ bv2 32) (ite (and (distinct ((_ extract 1 1) C2) (_ bv0 1)) true) (_ bv1 32) (_ bv0 32)))))
 (let ((?x5625 (ite (and (distinct ((_ extract 5 5) C2) (_ bv0 1)) true) (_ bv5 32) (ite (and (distinct ((_ extract 4 4) C2) (_ bv0 1)) true) (_ bv4 32) (_ bv3 32)))))
 (let ((?x19340 (ite (and (distinct ((_ extract 8 8) C2) (_ bv0 1)) true) (_ bv8 32) (ite (and (distinct ((_ extract 7 7) C2) (_ bv0 1)) true) (_ bv7 32) (_ bv6 32)))))
 (let ((?x13151 (ite (and (distinct ((_ extract 10 9) C2) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) C2) (_ bv0 1)) true) (_ bv10 32) (_ bv9 32)) ?x19340)))
 (let ((?x1886 (ite (and (distinct ((_ extract 10 6) C2) (_ bv0 5)) true) ?x13151 (ite (and (distinct ((_ extract 5 3) C2) (_ bv0 3)) true) ?x5625 ?x12415))))
 (and (and (and (distinct C1 (_ bv0 43)) true) (= (bvand C1 (bvsub C1 (_ bv1 43))) (_ bv0 43))) (and (and (distinct C2 (_ bv0 11)) true) (= (bvand C2 (bvsub C2 (_ bv1 11))) (_ bv0 11))) (bvsge ?x1886 ?x12537) $x14656))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
