(set-info :status unknown)
(declare-fun %Y () (_ BitVec 11))
(declare-fun C2 () (_ BitVec 11))
(declare-fun C1 () (_ BitVec 19))
(declare-fun %X () (_ BitVec 19))
(assert
 (let ((?x2673 (ite (and (distinct ((_ extract 2 2) C2) (_ bv0 1)) true) (_ bv2 19) (ite (and (distinct ((_ extract 1 1) C2) (_ bv0 1)) true) (_ bv1 19) (_ bv0 19)))))
 (let ((?x2812 (ite (and (distinct ((_ extract 5 5) C2) (_ bv0 1)) true) (_ bv5 19) (ite (and (distinct ((_ extract 4 4) C2) (_ bv0 1)) true) (_ bv4 19) (_ bv3 19)))))
 (let ((?x5770 (ite (and (distinct ((_ extract 8 8) C2) (_ bv0 1)) true) (_ bv8 19) (ite (and (distinct ((_ extract 7 7) C2) (_ bv0 1)) true) (_ bv7 19) (_ bv6 19)))))
 (let ((?x6414 (ite (and (distinct ((_ extract 10 9) C2) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) C2) (_ bv0 1)) true) (_ bv10 19) (_ bv9 19)) ?x5770)))
 (let ((?x2343 (ite (and (distinct ((_ extract 10 6) C2) (_ bv0 5)) true) ?x6414 (ite (and (distinct ((_ extract 5 3) C2) (_ bv0 3)) true) ?x2812 ?x2673))))
 (let ((?x6385 (ite (and (distinct ((_ extract 2 2) C1) (_ bv0 1)) true) (_ bv2 19) (ite (and (distinct ((_ extract 1 1) C1) (_ bv0 1)) true) (_ bv1 19) (_ bv0 19)))))
 (let ((?x6683 (ite (and (distinct ((_ extract 4 3) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 4 4) C1) (_ bv0 1)) true) (_ bv4 19) (_ bv3 19)) ?x6385)))
 (let ((?x3329 (ite (and (distinct ((_ extract 7 7) C1) (_ bv0 1)) true) (_ bv7 19) (ite (and (distinct ((_ extract 6 6) C1) (_ bv0 1)) true) (_ bv6 19) (_ bv5 19)))))
 (let ((?x6149 (ite (and (distinct ((_ extract 9 8) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 9 9) C1) (_ bv0 1)) true) (_ bv9 19) (_ bv8 19)) ?x3329)))
 (let ((?x1593 (ite (and (distinct ((_ extract 12 12) C1) (_ bv0 1)) true) (_ bv12 19) (ite (and (distinct ((_ extract 11 11) C1) (_ bv0 1)) true) (_ bv11 19) (_ bv10 19)))))
 (let ((?x3516 (ite (and (distinct ((_ extract 14 13) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 14 14) C1) (_ bv0 1)) true) (_ bv14 19) (_ bv13 19)) ?x1593)))
 (let ((?x3248 (ite (and (distinct ((_ extract 18 17) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 18 18) C1) (_ bv0 1)) true) (_ bv18 19) (_ bv17 19)) (ite (and (distinct ((_ extract 16 16) C1) (_ bv0 1)) true) (_ bv16 19) (_ bv15 19)))))
 (let ((?x3246 (ite (and (distinct ((_ extract 18 10) C1) (_ bv0 9)) true) (ite (and (distinct ((_ extract 18 15) C1) (_ bv0 4)) true) ?x3248 ?x3516) (ite (and (distinct ((_ extract 9 5) C1) (_ bv0 5)) true) ?x6149 ?x6683))))
 (let ((?x5877 (bvsub ?x3246 ?x2343)))
 (let ((?x1548 (bvand %X C1)))
 (let ((?x4276 (bvor %Y C2)))
 (let (($x3020 (and (distinct (ite (= (ite (and (distinct ?x1548 (_ bv0 19)) true) (_ bv1 1) (_ bv0 1)) (_ bv1 1)) ?x4276 %Y) (bvor ((_ extract 10 0) (bvlshr ?x1548 ?x5877)) %Y)) true)))
 (let ((?x2394 (ite (and (distinct ((_ extract 2 2) C1) (_ bv0 1)) true) (_ bv2 32) (ite (and (distinct ((_ extract 1 1) C1) (_ bv0 1)) true) (_ bv1 32) (_ bv0 32)))))
 (let ((?x2390 (ite (and (distinct ((_ extract 4 3) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 4 4) C1) (_ bv0 1)) true) (_ bv4 32) (_ bv3 32)) ?x2394)))
 (let ((?x1480 (ite (and (distinct ((_ extract 7 7) C1) (_ bv0 1)) true) (_ bv7 32) (ite (and (distinct ((_ extract 6 6) C1) (_ bv0 1)) true) (_ bv6 32) (_ bv5 32)))))
 (let ((?x2252 (ite (and (distinct ((_ extract 9 8) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 9 9) C1) (_ bv0 1)) true) (_ bv9 32) (_ bv8 32)) ?x1480)))
 (let ((?x5799 (ite (and (distinct ((_ extract 12 12) C1) (_ bv0 1)) true) (_ bv12 32) (ite (and (distinct ((_ extract 11 11) C1) (_ bv0 1)) true) (_ bv11 32) (_ bv10 32)))))
 (let ((?x6409 (ite (and (distinct ((_ extract 14 13) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 14 14) C1) (_ bv0 1)) true) (_ bv14 32) (_ bv13 32)) ?x5799)))
 (let ((?x4346 (ite (and (distinct ((_ extract 18 17) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 18 18) C1) (_ bv0 1)) true) (_ bv18 32) (_ bv17 32)) (ite (and (distinct ((_ extract 16 16) C1) (_ bv0 1)) true) (_ bv16 32) (_ bv15 32)))))
 (let ((?x3301 (ite (and (distinct ((_ extract 18 10) C1) (_ bv0 9)) true) (ite (and (distinct ((_ extract 18 15) C1) (_ bv0 4)) true) ?x4346 ?x6409) (ite (and (distinct ((_ extract 9 5) C1) (_ bv0 5)) true) ?x2252 ?x2390))))
 (let ((?x1654 (ite (and (distinct ((_ extract 2 2) C2) (_ bv0 1)) true) (_ bv2 32) (ite (and (distinct ((_ extract 1 1) C2) (_ bv0 1)) true) (_ bv1 32) (_ bv0 32)))))
 (let ((?x5147 (ite (and (distinct ((_ extract 5 5) C2) (_ bv0 1)) true) (_ bv5 32) (ite (and (distinct ((_ extract 4 4) C2) (_ bv0 1)) true) (_ bv4 32) (_ bv3 32)))))
 (let ((?x5793 (ite (and (distinct ((_ extract 8 8) C2) (_ bv0 1)) true) (_ bv8 32) (ite (and (distinct ((_ extract 7 7) C2) (_ bv0 1)) true) (_ bv7 32) (_ bv6 32)))))
 (let ((?x2513 (ite (and (distinct ((_ extract 10 9) C2) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) C2) (_ bv0 1)) true) (_ bv10 32) (_ bv9 32)) ?x5793)))
 (let ((?x6140 (ite (and (distinct ((_ extract 10 6) C2) (_ bv0 5)) true) ?x2513 (ite (and (distinct ((_ extract 5 3) C2) (_ bv0 3)) true) ?x5147 ?x1654))))
 (and (and (and (distinct C1 (_ bv0 19)) true) (= (bvand C1 (bvsub C1 (_ bv1 19))) (_ bv0 19))) (and (and (distinct C2 (_ bv0 11)) true) (= (bvand C2 (bvsub C2 (_ bv1 11))) (_ bv0 11))) (bvslt ?x6140 ?x3301) $x3020))))))))))))))))))))))))))))))))
(check-sat)
