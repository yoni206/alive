(set-info :status unknown)
(declare-fun %K2 () (_ BitVec 1))
(declare-fun %K1 () (_ BitVec 1))
(declare-fun %A () (_ BitVec 1))
(declare-fun |ana_isPowerOf2(%K2)| () (_ BitVec 1))
(declare-fun |ana_isPowerOf2(%K1)| () (_ BitVec 1))
(assert
 (let ((?x3357 (ite (and (distinct (bvand %A (bvor %K1 %K2)) (bvor %K1 %K2)) true) (_ bv1 1) (_ bv0 1))))
 (let ((?x14706 (ite (= (bvand %A %K2) (_ bv0 1)) (_ bv1 1) (_ bv0 1))))
 (let ((?x18040 (ite (= (bvand %A %K1) (_ bv0 1)) (_ bv1 1) (_ bv0 1))))
 (let (($x10636 (= |ana_isPowerOf2(%K2)| (_ bv1 1))))
 (let (($x5734 (= |ana_isPowerOf2(%K1)| (_ bv1 1))))
 (let (($x19949 (=> $x10636 (and (and (distinct %K2 (_ bv0 1)) true) (= (bvand %K2 (bvsub %K2 (_ bv1 1))) (_ bv0 1))))))
 (let (($x10525 (=> $x5734 (and (and (distinct %K1 (_ bv0 1)) true) (= (bvand %K1 (bvsub %K1 (_ bv1 1))) (_ bv0 1))))))
 (and $x10525 $x19949 $x5734 $x10636 (and (distinct (bvor ?x18040 ?x14706) ?x3357) true))))))))))
(check-sat)
