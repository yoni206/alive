(set-info :status unknown)
(declare-fun C3 () (_ BitVec 11))
(declare-fun C2 () (_ BitVec 11))
(declare-fun C () (_ BitVec 33))
(declare-fun %Op () (_ BitVec 33))
(assert
 (let ((?x1890 (bvsub C2 C3)))
 (let ((?x1460 (ite (and (distinct ((_ extract 2 2) ?x1890) (_ bv0 1)) true) (_ bv2 11) (ite (and (distinct ((_ extract 1 1) ?x1890) (_ bv0 1)) true) (_ bv1 11) (_ bv0 11)))))
 (let ((?x2990 (ite (and (distinct ((_ extract 5 5) ?x1890) (_ bv0 1)) true) (_ bv5 11) (ite (and (distinct ((_ extract 4 4) ?x1890) (_ bv0 1)) true) (_ bv4 11) (_ bv3 11)))))
 (let ((?x7880 (ite (and (distinct ((_ extract 8 8) ?x1890) (_ bv0 1)) true) (_ bv8 11) (ite (and (distinct ((_ extract 7 7) ?x1890) (_ bv0 1)) true) (_ bv7 11) (_ bv6 11)))))
 (let ((?x5654 (ite (and (distinct ((_ extract 10 9) ?x1890) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) ?x1890) (_ bv0 1)) true) (_ bv10 11) (_ bv9 11)) ?x7880)))
 (let ((?x2815 (ite (and (distinct ((_ extract 10 6) ?x1890) (_ bv0 5)) true) ?x5654 (ite (and (distinct ((_ extract 5 3) ?x1890) (_ bv0 3)) true) ?x2990 ?x1460))))
 (let ((?x2066 (ite (and (distinct ((_ extract 2 2) C) (_ bv0 1)) true) (_ bv2 11) (ite (and (distinct ((_ extract 1 1) C) (_ bv0 1)) true) (_ bv1 11) (_ bv0 11)))))
 (let ((?x8031 (ite (and (distinct ((_ extract 4 3) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 4 4) C) (_ bv0 1)) true) (_ bv4 11) (_ bv3 11)) ?x2066)))
 (let ((?x1129 (ite (and (distinct ((_ extract 8 7) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 8 8) C) (_ bv0 1)) true) (_ bv8 11) (_ bv7 11)) (ite (and (distinct ((_ extract 6 6) C) (_ bv0 1)) true) (_ bv6 11) (_ bv5 11)))))
 (let ((?x6551 (ite (and (distinct ((_ extract 12 11) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 12 12) C) (_ bv0 1)) true) (_ bv12 11) (_ bv11 11)) (ite (and (distinct ((_ extract 10 10) C) (_ bv0 1)) true) (_ bv10 11) (_ bv9 11)))))
 (let ((?x3097 (ite (and (distinct ((_ extract 16 15) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 16 16) C) (_ bv0 1)) true) (_ bv16 11) (_ bv15 11)) (ite (and (distinct ((_ extract 14 14) C) (_ bv0 1)) true) (_ bv14 11) (_ bv13 11)))))
 (let ((?x5937 (ite (and (distinct ((_ extract 16 9) C) (_ bv0 8)) true) (ite (and (distinct ((_ extract 16 13) C) (_ bv0 4)) true) ?x3097 ?x6551) (ite (and (distinct ((_ extract 8 5) C) (_ bv0 4)) true) ?x1129 ?x8031))))
 (let ((?x5252 (ite (and (distinct ((_ extract 20 19) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 20 20) C) (_ bv0 1)) true) (_ bv20 11) (_ bv19 11)) (ite (and (distinct ((_ extract 18 18) C) (_ bv0 1)) true) (_ bv18 11) (_ bv17 11)))))
 (let ((?x7636 (ite (and (distinct ((_ extract 24 23) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 24 24) C) (_ bv0 1)) true) (_ bv24 11) (_ bv23 11)) (ite (and (distinct ((_ extract 22 22) C) (_ bv0 1)) true) (_ bv22 11) (_ bv21 11)))))
 (let ((?x2454 (ite (and (distinct ((_ extract 28 27) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 28 28) C) (_ bv0 1)) true) (_ bv28 11) (_ bv27 11)) (ite (and (distinct ((_ extract 26 26) C) (_ bv0 1)) true) (_ bv26 11) (_ bv25 11)))))
 (let ((?x3839 (ite (and (distinct ((_ extract 32 31) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 32 32) C) (_ bv0 1)) true) (_ bv32 11) (_ bv31 11)) (ite (and (distinct ((_ extract 30 30) C) (_ bv0 1)) true) (_ bv30 11) (_ bv29 11)))))
 (let ((?x2433 (ite (and (distinct ((_ extract 32 25) C) (_ bv0 8)) true) (ite (and (distinct ((_ extract 32 29) C) (_ bv0 4)) true) ?x3839 ?x2454) (ite (and (distinct ((_ extract 24 21) C) (_ bv0 4)) true) ?x7636 ?x5252))))
 (let ((?x7467 (bvsub (ite (and (distinct ((_ extract 32 17) C) (_ bv0 16)) true) ?x2433 ?x5937) ?x2815)))
 (let ((?x6098 (ite (bvsgt (_ bv0 11) ?x7467) (_ bv0 11) ?x7467)))
 (let ((?x1603 (bvsub ?x2815 (ite (and (distinct ((_ extract 32 17) C) (_ bv0 16)) true) ?x2433 ?x5937))))
 (let ((?x3109 (ite (bvsgt (_ bv0 11) ?x1603) (_ bv0 11) ?x1603)))
 (let ((?x3992 (bvadd (bvxor (bvlshr (bvshl ((_ extract 10 0) (bvand %Op C)) ?x3109) ?x6098) ?x1890) C3)))
 (let (($x5638 (and (distinct (ite (= (ite (= (bvand %Op C) (_ bv0 33)) (_ bv1 1) (_ bv0 1)) (_ bv1 1)) C2 C3) ?x3992) true)))
 (let ((?x3774 (ite (and (distinct ((_ extract 2 2) C) (_ bv0 1)) true) (_ bv2 32) (ite (and (distinct ((_ extract 1 1) C) (_ bv0 1)) true) (_ bv1 32) (_ bv0 32)))))
 (let ((?x4691 (ite (and (distinct ((_ extract 4 3) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 4 4) C) (_ bv0 1)) true) (_ bv4 32) (_ bv3 32)) ?x3774)))
 (let ((?x3471 (ite (and (distinct ((_ extract 8 7) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 8 8) C) (_ bv0 1)) true) (_ bv8 32) (_ bv7 32)) (ite (and (distinct ((_ extract 6 6) C) (_ bv0 1)) true) (_ bv6 32) (_ bv5 32)))))
 (let ((?x2343 (ite (and (distinct ((_ extract 12 11) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 12 12) C) (_ bv0 1)) true) (_ bv12 32) (_ bv11 32)) (ite (and (distinct ((_ extract 10 10) C) (_ bv0 1)) true) (_ bv10 32) (_ bv9 32)))))
 (let ((?x1776 (ite (and (distinct ((_ extract 16 15) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 16 16) C) (_ bv0 1)) true) (_ bv16 32) (_ bv15 32)) (ite (and (distinct ((_ extract 14 14) C) (_ bv0 1)) true) (_ bv14 32) (_ bv13 32)))))
 (let ((?x4568 (ite (and (distinct ((_ extract 16 9) C) (_ bv0 8)) true) (ite (and (distinct ((_ extract 16 13) C) (_ bv0 4)) true) ?x1776 ?x2343) (ite (and (distinct ((_ extract 8 5) C) (_ bv0 4)) true) ?x3471 ?x4691))))
 (let ((?x7008 (ite (and (distinct ((_ extract 20 19) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 20 20) C) (_ bv0 1)) true) (_ bv20 32) (_ bv19 32)) (ite (and (distinct ((_ extract 18 18) C) (_ bv0 1)) true) (_ bv18 32) (_ bv17 32)))))
 (let ((?x6753 (ite (and (distinct ((_ extract 24 23) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 24 24) C) (_ bv0 1)) true) (_ bv24 32) (_ bv23 32)) (ite (and (distinct ((_ extract 22 22) C) (_ bv0 1)) true) (_ bv22 32) (_ bv21 32)))))
 (let ((?x2160 (ite (and (distinct ((_ extract 28 27) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 28 28) C) (_ bv0 1)) true) (_ bv28 32) (_ bv27 32)) (ite (and (distinct ((_ extract 26 26) C) (_ bv0 1)) true) (_ bv26 32) (_ bv25 32)))))
 (let ((?x8052 (ite (and (distinct ((_ extract 32 31) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 32 32) C) (_ bv0 1)) true) (_ bv32 32) (_ bv31 32)) (ite (and (distinct ((_ extract 30 30) C) (_ bv0 1)) true) (_ bv30 32) (_ bv29 32)))))
 (let ((?x1255 (ite (and (distinct ((_ extract 32 25) C) (_ bv0 8)) true) (ite (and (distinct ((_ extract 32 29) C) (_ bv0 4)) true) ?x8052 ?x2160) (ite (and (distinct ((_ extract 24 21) C) (_ bv0 4)) true) ?x6753 ?x7008))))
 (and (and (and (distinct C (_ bv0 33)) true) (= (bvand C (bvsub C (_ bv1 33))) (_ bv0 33))) (and (and (distinct ?x1890 (_ bv0 11)) true) (= (bvand ?x1890 (bvsub ?x1890 (_ bv1 11))) (_ bv0 11))) (bvslt (ite (and (distinct ((_ extract 32 17) C) (_ bv0 16)) true) ?x1255 ?x4568) (_ bv11 32)) $x5638))))))))))))))))))))))))))))))))))))
(check-sat)
