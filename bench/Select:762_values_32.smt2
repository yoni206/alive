(set-info :status unknown)
(declare-fun C3 () (_ BitVec 11))
(declare-fun C2 () (_ BitVec 11))
(declare-fun C () (_ BitVec 36))
(declare-fun %Op () (_ BitVec 36))
(assert
 (let ((?x4501 (bvsub C2 C3)))
 (let ((?x2864 (ite (and (distinct ((_ extract 2 2) ?x4501) (_ bv0 1)) true) (_ bv2 11) (ite (and (distinct ((_ extract 1 1) ?x4501) (_ bv0 1)) true) (_ bv1 11) (_ bv0 11)))))
 (let ((?x6383 (ite (and (distinct ((_ extract 5 5) ?x4501) (_ bv0 1)) true) (_ bv5 11) (ite (and (distinct ((_ extract 4 4) ?x4501) (_ bv0 1)) true) (_ bv4 11) (_ bv3 11)))))
 (let ((?x4228 (ite (and (distinct ((_ extract 8 8) ?x4501) (_ bv0 1)) true) (_ bv8 11) (ite (and (distinct ((_ extract 7 7) ?x4501) (_ bv0 1)) true) (_ bv7 11) (_ bv6 11)))))
 (let ((?x2208 (ite (and (distinct ((_ extract 10 9) ?x4501) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) ?x4501) (_ bv0 1)) true) (_ bv10 11) (_ bv9 11)) ?x4228)))
 (let ((?x4063 (ite (and (distinct ((_ extract 10 6) ?x4501) (_ bv0 5)) true) ?x2208 (ite (and (distinct ((_ extract 5 3) ?x4501) (_ bv0 3)) true) ?x6383 ?x2864))))
 (let ((?x4363 (ite (and (distinct ((_ extract 2 2) C) (_ bv0 1)) true) (_ bv2 11) (ite (and (distinct ((_ extract 1 1) C) (_ bv0 1)) true) (_ bv1 11) (_ bv0 11)))))
 (let ((?x7499 (ite (and (distinct ((_ extract 4 3) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 4 4) C) (_ bv0 1)) true) (_ bv4 11) (_ bv3 11)) ?x4363)))
 (let ((?x6373 (ite (and (distinct ((_ extract 8 7) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 8 8) C) (_ bv0 1)) true) (_ bv8 11) (_ bv7 11)) (ite (and (distinct ((_ extract 6 6) C) (_ bv0 1)) true) (_ bv6 11) (_ bv5 11)))))
 (let ((?x5651 (ite (and (distinct ((_ extract 11 11) C) (_ bv0 1)) true) (_ bv11 11) (ite (and (distinct ((_ extract 10 10) C) (_ bv0 1)) true) (_ bv10 11) (_ bv9 11)))))
 (let ((?x5637 (ite (and (distinct ((_ extract 13 12) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 13 13) C) (_ bv0 1)) true) (_ bv13 11) (_ bv12 11)) ?x5651)))
 (let ((?x1188 (ite (and (distinct ((_ extract 17 16) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 17 17) C) (_ bv0 1)) true) (_ bv17 11) (_ bv16 11)) (ite (and (distinct ((_ extract 15 15) C) (_ bv0 1)) true) (_ bv15 11) (_ bv14 11)))))
 (let ((?x6150 (ite (and (distinct ((_ extract 17 9) C) (_ bv0 9)) true) (ite (and (distinct ((_ extract 17 14) C) (_ bv0 4)) true) ?x1188 ?x5637) (ite (and (distinct ((_ extract 8 5) C) (_ bv0 4)) true) ?x6373 ?x7499))))
 (let ((?x4027 (ite (and (distinct ((_ extract 20 20) C) (_ bv0 1)) true) (_ bv20 11) (ite (and (distinct ((_ extract 19 19) C) (_ bv0 1)) true) (_ bv19 11) (_ bv18 11)))))
 (let ((?x6402 (ite (and (distinct ((_ extract 22 21) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 22 22) C) (_ bv0 1)) true) (_ bv22 11) (_ bv21 11)) ?x4027)))
 (let ((?x1642 (ite (and (distinct ((_ extract 26 25) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 26 26) C) (_ bv0 1)) true) (_ bv26 11) (_ bv25 11)) (ite (and (distinct ((_ extract 24 24) C) (_ bv0 1)) true) (_ bv24 11) (_ bv23 11)))))
 (let ((?x3359 (ite (and (distinct ((_ extract 29 29) C) (_ bv0 1)) true) (_ bv29 11) (ite (and (distinct ((_ extract 28 28) C) (_ bv0 1)) true) (_ bv28 11) (_ bv27 11)))))
 (let ((?x3345 (ite (and (distinct ((_ extract 31 30) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 31 31) C) (_ bv0 1)) true) (_ bv31 11) (_ bv30 11)) ?x3359)))
 (let ((?x4623 (ite (and (distinct ((_ extract 35 34) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 35 35) C) (_ bv0 1)) true) (_ bv35 11) (_ bv34 11)) (ite (and (distinct ((_ extract 33 33) C) (_ bv0 1)) true) (_ bv33 11) (_ bv32 11)))))
 (let ((?x2945 (ite (and (distinct ((_ extract 35 27) C) (_ bv0 9)) true) (ite (and (distinct ((_ extract 35 32) C) (_ bv0 4)) true) ?x4623 ?x3345) (ite (and (distinct ((_ extract 26 23) C) (_ bv0 4)) true) ?x1642 ?x6402))))
 (let ((?x6098 (bvsub (ite (and (distinct ((_ extract 35 18) C) (_ bv0 18)) true) ?x2945 ?x6150) ?x4063)))
 (let ((?x4243 (ite (bvsgt (_ bv0 11) ?x6098) (_ bv0 11) ?x6098)))
 (let ((?x8339 (bvsub ?x4063 (ite (and (distinct ((_ extract 35 18) C) (_ bv0 18)) true) ?x2945 ?x6150))))
 (let ((?x8387 (ite (bvsgt (_ bv0 11) ?x8339) (_ bv0 11) ?x8339)))
 (let ((?x4141 (bvadd (bvxor (bvlshr (bvshl ((_ extract 10 0) (bvand %Op C)) ?x8387) ?x4243) ?x4501) C3)))
 (let (($x5564 (and (distinct (ite (= (ite (= (bvand %Op C) (_ bv0 36)) (_ bv1 1) (_ bv0 1)) (_ bv1 1)) C2 C3) ?x4141) true)))
 (let ((?x4157 (ite (and (distinct ((_ extract 2 2) C) (_ bv0 1)) true) (_ bv2 32) (ite (and (distinct ((_ extract 1 1) C) (_ bv0 1)) true) (_ bv1 32) (_ bv0 32)))))
 (let ((?x4526 (ite (and (distinct ((_ extract 4 3) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 4 4) C) (_ bv0 1)) true) (_ bv4 32) (_ bv3 32)) ?x4157)))
 (let ((?x4033 (ite (and (distinct ((_ extract 8 7) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 8 8) C) (_ bv0 1)) true) (_ bv8 32) (_ bv7 32)) (ite (and (distinct ((_ extract 6 6) C) (_ bv0 1)) true) (_ bv6 32) (_ bv5 32)))))
 (let ((?x2681 (ite (and (distinct ((_ extract 11 11) C) (_ bv0 1)) true) (_ bv11 32) (ite (and (distinct ((_ extract 10 10) C) (_ bv0 1)) true) (_ bv10 32) (_ bv9 32)))))
 (let ((?x2656 (ite (and (distinct ((_ extract 13 12) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 13 13) C) (_ bv0 1)) true) (_ bv13 32) (_ bv12 32)) ?x2681)))
 (let ((?x1745 (ite (and (distinct ((_ extract 17 16) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 17 17) C) (_ bv0 1)) true) (_ bv17 32) (_ bv16 32)) (ite (and (distinct ((_ extract 15 15) C) (_ bv0 1)) true) (_ bv15 32) (_ bv14 32)))))
 (let ((?x5024 (ite (and (distinct ((_ extract 17 9) C) (_ bv0 9)) true) (ite (and (distinct ((_ extract 17 14) C) (_ bv0 4)) true) ?x1745 ?x2656) (ite (and (distinct ((_ extract 8 5) C) (_ bv0 4)) true) ?x4033 ?x4526))))
 (let ((?x4666 (ite (and (distinct ((_ extract 20 20) C) (_ bv0 1)) true) (_ bv20 32) (ite (and (distinct ((_ extract 19 19) C) (_ bv0 1)) true) (_ bv19 32) (_ bv18 32)))))
 (let ((?x1255 (ite (and (distinct ((_ extract 22 21) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 22 22) C) (_ bv0 1)) true) (_ bv22 32) (_ bv21 32)) ?x4666)))
 (let ((?x4870 (ite (and (distinct ((_ extract 26 25) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 26 26) C) (_ bv0 1)) true) (_ bv26 32) (_ bv25 32)) (ite (and (distinct ((_ extract 24 24) C) (_ bv0 1)) true) (_ bv24 32) (_ bv23 32)))))
 (let ((?x2118 (ite (and (distinct ((_ extract 29 29) C) (_ bv0 1)) true) (_ bv29 32) (ite (and (distinct ((_ extract 28 28) C) (_ bv0 1)) true) (_ bv28 32) (_ bv27 32)))))
 (let ((?x3425 (ite (and (distinct ((_ extract 31 30) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 31 31) C) (_ bv0 1)) true) (_ bv31 32) (_ bv30 32)) ?x2118)))
 (let ((?x3314 (ite (and (distinct ((_ extract 35 34) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 35 35) C) (_ bv0 1)) true) (_ bv35 32) (_ bv34 32)) (ite (and (distinct ((_ extract 33 33) C) (_ bv0 1)) true) (_ bv33 32) (_ bv32 32)))))
 (let ((?x6495 (ite (and (distinct ((_ extract 35 27) C) (_ bv0 9)) true) (ite (and (distinct ((_ extract 35 32) C) (_ bv0 4)) true) ?x3314 ?x3425) (ite (and (distinct ((_ extract 26 23) C) (_ bv0 4)) true) ?x4870 ?x1255))))
 (and (and (and (distinct C (_ bv0 36)) true) (= (bvand C (bvsub C (_ bv1 36))) (_ bv0 36))) (and (and (distinct ?x4501 (_ bv0 11)) true) (= (bvand ?x4501 (bvsub ?x4501 (_ bv1 11))) (_ bv0 11))) (bvslt (ite (and (distinct ((_ extract 35 18) C) (_ bv0 18)) true) ?x6495 ?x5024) (_ bv11 32)) $x5564))))))))))))))))))))))))))))))))))))))))))
(check-sat)
