(set-info :source |
 Generated by Alive 0.1
 More info in N. P. Lopes, D. Menendez, S. Nagarakatte, J. Regehr.
 Provably Correct Peephole Optimizations with Alive. In PLDI'15.
|)

(set-info :status unknown)
(declare-fun mem0 () (_ BitVec 8))
(declare-fun |ana_MaskedValueIsZero(%B, ((1 << (width(C2) - countLeadingZeros(((C2 - 1) ^ C2)))) - 1))| () (_ BitVec 1))
(declare-fun C2 () (_ BitVec 27))
(declare-fun C1 () (_ BitVec 27))
(declare-fun %B () (_ BitVec 27))
(assert
 (let (($x817 (and (distinct mem0 mem0) true)))
 (let (($x64669 (= |ana_MaskedValueIsZero(%B, ((1 << (width(C2) - countLeadingZeros(((C2 - 1) ^ C2)))) - 1))| (_ bv1 1))))
 (let ((?x11485 (bvsub C2 (_ bv1 27))))
 (let ((?x66961 (bvor ?x11485 C2)))
 (let (($x64260 (and (and (distinct ?x66961 (_ bv0 27)) true) (= (bvand (bvadd ?x66961 (_ bv1 27)) ?x66961) (_ bv0 27)) $x64669)))
 (let (($x66543 (or (= (bvand (bvadd C2 (_ bv1 27)) (bvsub (bvadd C2 (_ bv1 27)) (_ bv1 27))) (_ bv0 27)) $x64260)))
 (let ((?x53713 (bvand C1 C2)))
 (let (($x67145 (= ?x53713 C2)))
 (let ((?x65371 (ite (= ((_ extract 1 1) (bvxor ?x11485 C2)) (_ bv1 1)) (_ bv25 27) (ite (= ((_ extract 0 0) (bvxor ?x11485 C2)) (_ bv1 1)) (_ bv26 27) (_ bv27 27)))))
 (let ((?x65125 (ite (= ((_ extract 3 3) (bvxor ?x11485 C2)) (_ bv1 1)) (_ bv23 27) (ite (= ((_ extract 2 2) (bvxor ?x11485 C2)) (_ bv1 1)) (_ bv24 27) ?x65371))))
 (let ((?x65777 (ite (= ((_ extract 5 5) (bvxor ?x11485 C2)) (_ bv1 1)) (_ bv21 27) (ite (= ((_ extract 4 4) (bvxor ?x11485 C2)) (_ bv1 1)) (_ bv22 27) ?x65125))))
 (let ((?x66140 (ite (= ((_ extract 7 7) (bvxor ?x11485 C2)) (_ bv1 1)) (_ bv19 27) (ite (= ((_ extract 6 6) (bvxor ?x11485 C2)) (_ bv1 1)) (_ bv20 27) ?x65777))))
 (let ((?x66033 (ite (= ((_ extract 9 9) (bvxor ?x11485 C2)) (_ bv1 1)) (_ bv17 27) (ite (= ((_ extract 8 8) (bvxor ?x11485 C2)) (_ bv1 1)) (_ bv18 27) ?x66140))))
 (let ((?x66381 (ite (= ((_ extract 11 11) (bvxor ?x11485 C2)) (_ bv1 1)) (_ bv15 27) (ite (= ((_ extract 10 10) (bvxor ?x11485 C2)) (_ bv1 1)) (_ bv16 27) ?x66033))))
 (let ((?x66376 (ite (= ((_ extract 13 13) (bvxor ?x11485 C2)) (_ bv1 1)) (_ bv13 27) (ite (= ((_ extract 12 12) (bvxor ?x11485 C2)) (_ bv1 1)) (_ bv14 27) ?x66381))))
 (let ((?x66286 (ite (= ((_ extract 15 15) (bvxor ?x11485 C2)) (_ bv1 1)) (_ bv11 27) (ite (= ((_ extract 14 14) (bvxor ?x11485 C2)) (_ bv1 1)) (_ bv12 27) ?x66376))))
 (let ((?x63878 (ite (= ((_ extract 17 17) (bvxor ?x11485 C2)) (_ bv1 1)) (_ bv9 27) (ite (= ((_ extract 16 16) (bvxor ?x11485 C2)) (_ bv1 1)) (_ bv10 27) ?x66286))))
 (let ((?x67457 (ite (= ((_ extract 19 19) (bvxor ?x11485 C2)) (_ bv1 1)) (_ bv7 27) (ite (= ((_ extract 18 18) (bvxor ?x11485 C2)) (_ bv1 1)) (_ bv8 27) ?x63878))))
 (let ((?x66676 (ite (= ((_ extract 21 21) (bvxor ?x11485 C2)) (_ bv1 1)) (_ bv5 27) (ite (= ((_ extract 20 20) (bvxor ?x11485 C2)) (_ bv1 1)) (_ bv6 27) ?x67457))))
 (let ((?x66400 (ite (= ((_ extract 23 23) (bvxor ?x11485 C2)) (_ bv1 1)) (_ bv3 27) (ite (= ((_ extract 22 22) (bvxor ?x11485 C2)) (_ bv1 1)) (_ bv4 27) ?x66676))))
 (let ((?x66950 (ite (= ((_ extract 25 25) (bvxor ?x11485 C2)) (_ bv1 1)) (_ bv1 27) (ite (= ((_ extract 24 24) (bvxor ?x11485 C2)) (_ bv1 1)) (_ bv2 27) ?x66400))))
 (let ((?x67114 (bvshl (_ bv1 27) (bvsub (_ bv27 27) (ite (= ((_ extract 26 26) (bvxor ?x11485 C2)) (_ bv1 1)) (_ bv0 27) ?x66950)))))
 (let (($x62132 (=> $x64669 (= (bvand %B (bvsub ?x67114 (_ bv1 27))) (_ bv0 27)))))
 (and $x62132 $x67145 $x66543 $x817)))))))))))))))))))))))))
(check-sat)
