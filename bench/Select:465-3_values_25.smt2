(set-info :status unknown)
(declare-fun %Y () (_ BitVec 11))
(declare-fun C2 () (_ BitVec 11))
(declare-fun C1 () (_ BitVec 26))
(declare-fun %X () (_ BitVec 26))
(assert
 (let ((?x4154 (ite (and (distinct ((_ extract 2 2) C2) (_ bv0 1)) true) (_ bv2 26) (ite (and (distinct ((_ extract 1 1) C2) (_ bv0 1)) true) (_ bv1 26) (_ bv0 26)))))
 (let ((?x3462 (ite (and (distinct ((_ extract 5 5) C2) (_ bv0 1)) true) (_ bv5 26) (ite (and (distinct ((_ extract 4 4) C2) (_ bv0 1)) true) (_ bv4 26) (_ bv3 26)))))
 (let ((?x2518 (ite (and (distinct ((_ extract 8 8) C2) (_ bv0 1)) true) (_ bv8 26) (ite (and (distinct ((_ extract 7 7) C2) (_ bv0 1)) true) (_ bv7 26) (_ bv6 26)))))
 (let ((?x1603 (ite (and (distinct ((_ extract 10 9) C2) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) C2) (_ bv0 1)) true) (_ bv10 26) (_ bv9 26)) ?x2518)))
 (let ((?x3953 (ite (and (distinct ((_ extract 10 6) C2) (_ bv0 5)) true) ?x1603 (ite (and (distinct ((_ extract 5 3) C2) (_ bv0 3)) true) ?x3462 ?x4154))))
 (let ((?x5545 (ite (and (distinct ((_ extract 3 2) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 3 3) C1) (_ bv0 1)) true) (_ bv3 26) (_ bv2 26)) (ite (and (distinct ((_ extract 1 1) C1) (_ bv0 1)) true) (_ bv1 26) (_ bv0 26)))))
 (let ((?x2443 (ite (and (distinct ((_ extract 6 6) C1) (_ bv0 1)) true) (_ bv6 26) (ite (and (distinct ((_ extract 5 5) C1) (_ bv0 1)) true) (_ bv5 26) (_ bv4 26)))))
 (let ((?x1487 (ite (and (distinct ((_ extract 9 9) C1) (_ bv0 1)) true) (_ bv9 26) (ite (and (distinct ((_ extract 8 8) C1) (_ bv0 1)) true) (_ bv8 26) (_ bv7 26)))))
 (let ((?x3412 (ite (and (distinct ((_ extract 12 12) C1) (_ bv0 1)) true) (_ bv12 26) (ite (and (distinct ((_ extract 11 11) C1) (_ bv0 1)) true) (_ bv11 26) (_ bv10 26)))))
 (let ((?x4557 (ite (and (distinct ((_ extract 12 7) C1) (_ bv0 6)) true) (ite (and (distinct ((_ extract 12 10) C1) (_ bv0 3)) true) ?x3412 ?x1487) (ite (and (distinct ((_ extract 6 4) C1) (_ bv0 3)) true) ?x2443 ?x5545))))
 (let ((?x2499 (ite (and (distinct ((_ extract 16 15) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 16 16) C1) (_ bv0 1)) true) (_ bv16 26) (_ bv15 26)) (ite (and (distinct ((_ extract 14 14) C1) (_ bv0 1)) true) (_ bv14 26) (_ bv13 26)))))
 (let ((?x3569 (ite (and (distinct ((_ extract 19 19) C1) (_ bv0 1)) true) (_ bv19 26) (ite (and (distinct ((_ extract 18 18) C1) (_ bv0 1)) true) (_ bv18 26) (_ bv17 26)))))
 (let ((?x1727 (ite (and (distinct ((_ extract 22 22) C1) (_ bv0 1)) true) (_ bv22 26) (ite (and (distinct ((_ extract 21 21) C1) (_ bv0 1)) true) (_ bv21 26) (_ bv20 26)))))
 (let ((?x2576 (ite (and (distinct ((_ extract 25 25) C1) (_ bv0 1)) true) (_ bv25 26) (ite (and (distinct ((_ extract 24 24) C1) (_ bv0 1)) true) (_ bv24 26) (_ bv23 26)))))
 (let ((?x2470 (ite (and (distinct ((_ extract 25 20) C1) (_ bv0 6)) true) (ite (and (distinct ((_ extract 25 23) C1) (_ bv0 3)) true) ?x2576 ?x1727) (ite (and (distinct ((_ extract 19 17) C1) (_ bv0 3)) true) ?x3569 ?x2499))))
 (let ((?x4476 (bvsub (ite (and (distinct ((_ extract 25 13) C1) (_ bv0 13)) true) ?x2470 ?x4557) ?x3953)))
 (let ((?x4137 (bvand %X C1)))
 (let (($x4057 (and (distinct (ite (= (ite (= ?x4137 (_ bv0 26)) (_ bv1 1) (_ bv0 1)) (_ bv1 1)) %Y (bvor %Y C2)) (bvor ((_ extract 10 0) (bvlshr ?x4137 ?x4476)) %Y)) true)))
 (let ((?x4373 (ite (and (distinct ((_ extract 3 2) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 3 3) C1) (_ bv0 1)) true) (_ bv3 32) (_ bv2 32)) (ite (and (distinct ((_ extract 1 1) C1) (_ bv0 1)) true) (_ bv1 32) (_ bv0 32)))))
 (let ((?x3391 (ite (and (distinct ((_ extract 6 6) C1) (_ bv0 1)) true) (_ bv6 32) (ite (and (distinct ((_ extract 5 5) C1) (_ bv0 1)) true) (_ bv5 32) (_ bv4 32)))))
 (let ((?x3944 (ite (and (distinct ((_ extract 9 9) C1) (_ bv0 1)) true) (_ bv9 32) (ite (and (distinct ((_ extract 8 8) C1) (_ bv0 1)) true) (_ bv8 32) (_ bv7 32)))))
 (let ((?x2416 (ite (and (distinct ((_ extract 12 12) C1) (_ bv0 1)) true) (_ bv12 32) (ite (and (distinct ((_ extract 11 11) C1) (_ bv0 1)) true) (_ bv11 32) (_ bv10 32)))))
 (let ((?x4322 (ite (and (distinct ((_ extract 12 7) C1) (_ bv0 6)) true) (ite (and (distinct ((_ extract 12 10) C1) (_ bv0 3)) true) ?x2416 ?x3944) (ite (and (distinct ((_ extract 6 4) C1) (_ bv0 3)) true) ?x3391 ?x4373))))
 (let ((?x2607 (ite (and (distinct ((_ extract 16 15) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 16 16) C1) (_ bv0 1)) true) (_ bv16 32) (_ bv15 32)) (ite (and (distinct ((_ extract 14 14) C1) (_ bv0 1)) true) (_ bv14 32) (_ bv13 32)))))
 (let ((?x1593 (ite (and (distinct ((_ extract 19 19) C1) (_ bv0 1)) true) (_ bv19 32) (ite (and (distinct ((_ extract 18 18) C1) (_ bv0 1)) true) (_ bv18 32) (_ bv17 32)))))
 (let ((?x1220 (ite (and (distinct ((_ extract 22 22) C1) (_ bv0 1)) true) (_ bv22 32) (ite (and (distinct ((_ extract 21 21) C1) (_ bv0 1)) true) (_ bv21 32) (_ bv20 32)))))
 (let ((?x3280 (ite (and (distinct ((_ extract 25 25) C1) (_ bv0 1)) true) (_ bv25 32) (ite (and (distinct ((_ extract 24 24) C1) (_ bv0 1)) true) (_ bv24 32) (_ bv23 32)))))
 (let ((?x2517 (ite (and (distinct ((_ extract 25 20) C1) (_ bv0 6)) true) (ite (and (distinct ((_ extract 25 23) C1) (_ bv0 3)) true) ?x3280 ?x1220) (ite (and (distinct ((_ extract 19 17) C1) (_ bv0 3)) true) ?x1593 ?x2607))))
 (let ((?x4881 (ite (and (distinct ((_ extract 2 2) C2) (_ bv0 1)) true) (_ bv2 32) (ite (and (distinct ((_ extract 1 1) C2) (_ bv0 1)) true) (_ bv1 32) (_ bv0 32)))))
 (let ((?x2761 (ite (and (distinct ((_ extract 5 5) C2) (_ bv0 1)) true) (_ bv5 32) (ite (and (distinct ((_ extract 4 4) C2) (_ bv0 1)) true) (_ bv4 32) (_ bv3 32)))))
 (let ((?x1154 (ite (and (distinct ((_ extract 8 8) C2) (_ bv0 1)) true) (_ bv8 32) (ite (and (distinct ((_ extract 7 7) C2) (_ bv0 1)) true) (_ bv7 32) (_ bv6 32)))))
 (let ((?x2534 (ite (and (distinct ((_ extract 10 9) C2) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) C2) (_ bv0 1)) true) (_ bv10 32) (_ bv9 32)) ?x1154)))
 (let ((?x2798 (ite (and (distinct ((_ extract 10 6) C2) (_ bv0 5)) true) ?x2534 (ite (and (distinct ((_ extract 5 3) C2) (_ bv0 3)) true) ?x2761 ?x4881))))
 (and (and (and (distinct C1 (_ bv0 26)) true) (= (bvand C1 (bvsub C1 (_ bv1 26))) (_ bv0 26))) (and (and (distinct C2 (_ bv0 11)) true) (= (bvand C2 (bvsub C2 (_ bv1 11))) (_ bv0 11))) (bvslt ?x2798 (ite (and (distinct ((_ extract 25 13) C1) (_ bv0 13)) true) ?x2517 ?x4322)) $x4057)))))))))))))))))))))))))))))))))))
(check-sat)
