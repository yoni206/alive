(set-info :source |
 Generated by Alive 0.1
 More info in N. P. Lopes, D. Menendez, S. Nagarakatte, J. Regehr.
 Provably Correct Peephole Optimizations with Alive. In PLDI'15.
|)

(set-info :status unknown)
(declare-fun %Op0 () (_ BitVec 33))
(declare-fun C () (_ BitVec 33))
(assert
 (let ((?x111279 (ite (and (distinct ((_ extract 2 2) C) (_ bv0 1)) true) (_ bv2 33) (ite (and (distinct ((_ extract 1 1) C) (_ bv0 1)) true) (_ bv1 33) (_ bv0 33)))))
 (let ((?x141703 (ite (and (distinct ((_ extract 4 3) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 4 4) C) (_ bv0 1)) true) (_ bv4 33) (_ bv3 33)) ?x111279)))
 (let ((?x138685 (ite (and (distinct ((_ extract 8 7) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 8 8) C) (_ bv0 1)) true) (_ bv8 33) (_ bv7 33)) (ite (and (distinct ((_ extract 6 6) C) (_ bv0 1)) true) (_ bv6 33) (_ bv5 33)))))
 (let ((?x104475 (ite (and (distinct ((_ extract 12 11) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 12 12) C) (_ bv0 1)) true) (_ bv12 33) (_ bv11 33)) (ite (and (distinct ((_ extract 10 10) C) (_ bv0 1)) true) (_ bv10 33) (_ bv9 33)))))
 (let ((?x140606 (ite (and (distinct ((_ extract 16 15) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 16 16) C) (_ bv0 1)) true) (_ bv16 33) (_ bv15 33)) (ite (and (distinct ((_ extract 14 14) C) (_ bv0 1)) true) (_ bv14 33) (_ bv13 33)))))
 (let ((?x150182 (ite (and (distinct ((_ extract 16 9) C) (_ bv0 8)) true) (ite (and (distinct ((_ extract 16 13) C) (_ bv0 4)) true) ?x140606 ?x104475) (ite (and (distinct ((_ extract 8 5) C) (_ bv0 4)) true) ?x138685 ?x141703))))
 (let ((?x145655 (ite (and (distinct ((_ extract 20 19) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 20 20) C) (_ bv0 1)) true) (_ bv20 33) (_ bv19 33)) (ite (and (distinct ((_ extract 18 18) C) (_ bv0 1)) true) (_ bv18 33) (_ bv17 33)))))
 (let ((?x147121 (ite (and (distinct ((_ extract 24 23) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 24 24) C) (_ bv0 1)) true) (_ bv24 33) (_ bv23 33)) (ite (and (distinct ((_ extract 22 22) C) (_ bv0 1)) true) (_ bv22 33) (_ bv21 33)))))
 (let ((?x112105 (ite (and (distinct ((_ extract 28 27) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 28 28) C) (_ bv0 1)) true) (_ bv28 33) (_ bv27 33)) (ite (and (distinct ((_ extract 26 26) C) (_ bv0 1)) true) (_ bv26 33) (_ bv25 33)))))
 (let ((?x137739 (ite (and (distinct ((_ extract 32 31) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 32 32) C) (_ bv0 1)) true) (_ bv32 33) (_ bv31 33)) (ite (and (distinct ((_ extract 30 30) C) (_ bv0 1)) true) (_ bv30 33) (_ bv29 33)))))
 (let ((?x143442 (ite (and (distinct ((_ extract 32 25) C) (_ bv0 8)) true) (ite (and (distinct ((_ extract 32 29) C) (_ bv0 4)) true) ?x137739 ?x112105) (ite (and (distinct ((_ extract 24 21) C) (_ bv0 4)) true) ?x147121 ?x145655))))
 (let ((?x156666 (ite (and (distinct ((_ extract 32 17) C) (_ bv0 16)) true) ?x143442 ?x150182)))
 (let (($x118643 (and (distinct C (_ bv0 33)) true)))
 (let (($x136115 (and $x118643 (= (bvand C (bvsub C (_ bv1 33))) (_ bv0 33)))))
 (let (($x114898 (bvsge C (_ bv0 33))))
 (let (($x132074 (= (bvmul (bvsdiv %Op0 C) C) %Op0)))
 (let (($x147109 (or (and (distinct %Op0 (_ bv4294967296 33)) true) (and (distinct C (_ bv8589934591 33)) true))))
 (and $x118643 $x147109 $x132074 $x114898 $x136115 (not (= (bvshl (bvashr %Op0 ?x156666) ?x156666) %Op0)))))))))))))))))))))
(check-sat)
