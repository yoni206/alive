(set-info :status unknown)
(declare-fun mem0 () (_ BitVec 8))
(declare-fun %y () (_ BitVec 48))
(declare-fun %p2 () (_ BitVec 64))
(declare-fun idx () (_ BitVec 64))
(declare-fun %x () (_ BitVec 48))
(declare-fun %p1 () (_ BitVec 64))
(declare-fun |ana_equivalentAddressValues(%p1, %p2)| () (_ BitVec 1))
(assert
 (let (($x14160 (or true true)))
 (let (($x5500 (and (distinct %p2 (_ bv0 64)) true)))
 (let ((?x5638 (ite (and $x5500 $x14160 (= idx (bvadd %p2 (_ bv0 64)))) ((_ extract 7 0) %y) mem0)))
 (let ((?x10663 (ite (and $x5500 $x14160 (= idx (bvadd %p2 (_ bv1 64)))) ((_ extract 15 8) %y) ?x5638)))
 (let ((?x6196 (ite (and $x5500 $x14160 (= idx (bvadd %p2 (_ bv2 64)))) ((_ extract 23 16) %y) ?x10663)))
 (let ((?x8220 (ite (and $x5500 $x14160 (= idx (bvadd %p2 (_ bv3 64)))) ((_ extract 31 24) %y) ?x6196)))
 (let ((?x29 (ite (and $x5500 $x14160 (= idx (bvadd %p2 (_ bv4 64)))) ((_ extract 39 32) %y) ?x8220)))
 (let ((?x61 (ite (and $x5500 $x14160 (= idx (bvadd %p2 (_ bv5 64)))) ((_ extract 47 40) %y) ?x29)))
 (let ((?x1398 (ite (and (and (distinct %p1 (_ bv0 64)) true) $x14160 (= idx (bvadd %p1 (_ bv0 64)))) ((_ extract 7 0) %x) mem0)))
 (let ((?x5140 (ite (and (and (distinct %p1 (_ bv0 64)) true) $x14160 (= idx (bvadd %p1 (_ bv1 64)))) ((_ extract 15 8) %x) ?x1398)))
 (let ((?x17981 (ite (and (and (distinct %p1 (_ bv0 64)) true) $x14160 (= idx (bvadd %p1 (_ bv2 64)))) ((_ extract 23 16) %x) ?x5140)))
 (let ((?x6453 (ite (and (and (distinct %p1 (_ bv0 64)) true) $x14160 (= idx (bvadd %p1 (_ bv3 64)))) ((_ extract 31 24) %x) ?x17981)))
 (let ((?x4757 (ite (and (and (distinct %p1 (_ bv0 64)) true) $x14160 (= idx (bvadd %p1 (_ bv4 64)))) ((_ extract 39 32) %x) ?x6453)))
 (let ((?x494 (ite (and (and (distinct %p1 (_ bv0 64)) true) $x14160 (= idx (bvadd %p1 (_ bv5 64)))) ((_ extract 47 40) %x) ?x4757)))
 (let (($x17212 (and (distinct %p1 (_ bv0 64)) true)))
 (let ((?x21710 (ite (and $x17212 $x14160 $x5500 $x14160 (= idx (bvadd %p2 (_ bv0 64)))) ((_ extract 7 0) %y) ?x494)))
 (let ((?x12673 (ite (and $x17212 $x14160 $x5500 $x14160 (= idx (bvadd %p2 (_ bv1 64)))) ((_ extract 15 8) %y) ?x21710)))
 (let ((?x19961 (ite (and $x17212 $x14160 $x5500 $x14160 (= idx (bvadd %p2 (_ bv2 64)))) ((_ extract 23 16) %y) ?x12673)))
 (let ((?x6106 (ite (and $x17212 $x14160 $x5500 $x14160 (= idx (bvadd %p2 (_ bv3 64)))) ((_ extract 31 24) %y) ?x19961)))
 (let ((?x12219 (ite (and $x17212 $x14160 $x5500 $x14160 (= idx (bvadd %p2 (_ bv4 64)))) ((_ extract 39 32) %y) ?x6106)))
 (let ((?x7967 (ite (and $x17212 $x14160 $x5500 $x14160 (= idx (bvadd %p2 (_ bv5 64)))) ((_ extract 47 40) %y) ?x12219)))
 (let (($x10971 (= |ana_equivalentAddressValues(%p1, %p2)| (_ bv1 1))))
 (and (=> $x10971 (= %p1 %p2)) $x10971 (and (distinct ?x7967 ?x61) true)))))))))))))))))))))))))
(check-sat)
