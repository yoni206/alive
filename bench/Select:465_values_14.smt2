(set-info :status unknown)
(declare-fun %Y () (_ BitVec 11))
(declare-fun C1 () (_ BitVec 22))
(declare-fun C2 () (_ BitVec 11))
(declare-fun %X () (_ BitVec 22))
(assert
 (let ((?x2319 (ite (and (distinct ((_ extract 2 2) C1) (_ bv0 1)) true) (_ bv2 11) (ite (and (distinct ((_ extract 1 1) C1) (_ bv0 1)) true) (_ bv1 11) (_ bv0 11)))))
 (let ((?x2722 (ite (and (distinct ((_ extract 5 5) C1) (_ bv0 1)) true) (_ bv5 11) (ite (and (distinct ((_ extract 4 4) C1) (_ bv0 1)) true) (_ bv4 11) (_ bv3 11)))))
 (let ((?x1763 (ite (and (distinct ((_ extract 8 8) C1) (_ bv0 1)) true) (_ bv8 11) (ite (and (distinct ((_ extract 7 7) C1) (_ bv0 1)) true) (_ bv7 11) (_ bv6 11)))))
 (let ((?x3220 (ite (and (distinct ((_ extract 10 9) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) C1) (_ bv0 1)) true) (_ bv10 11) (_ bv9 11)) ?x1763)))
 (let ((?x2735 (ite (and (distinct ((_ extract 10 6) C1) (_ bv0 5)) true) ?x3220 (ite (and (distinct ((_ extract 5 3) C1) (_ bv0 3)) true) ?x2722 ?x2319))))
 (let ((?x3897 (ite (and (distinct ((_ extract 13 13) C1) (_ bv0 1)) true) (_ bv13 11) (ite (and (distinct ((_ extract 12 12) C1) (_ bv0 1)) true) (_ bv12 11) (_ bv11 11)))))
 (let ((?x2271 (ite (and (distinct ((_ extract 16 16) C1) (_ bv0 1)) true) (_ bv16 11) (ite (and (distinct ((_ extract 15 15) C1) (_ bv0 1)) true) (_ bv15 11) (_ bv14 11)))))
 (let ((?x4827 (ite (and (distinct ((_ extract 19 19) C1) (_ bv0 1)) true) (_ bv19 11) (ite (and (distinct ((_ extract 18 18) C1) (_ bv0 1)) true) (_ bv18 11) (_ bv17 11)))))
 (let ((?x1324 (ite (and (distinct ((_ extract 21 20) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 21 21) C1) (_ bv0 1)) true) (_ bv21 11) (_ bv20 11)) ?x4827)))
 (let ((?x2277 (ite (and (distinct ((_ extract 21 17) C1) (_ bv0 5)) true) ?x1324 (ite (and (distinct ((_ extract 16 14) C1) (_ bv0 3)) true) ?x2271 ?x3897))))
 (let ((?x4621 (ite (and (distinct ((_ extract 2 2) C2) (_ bv0 1)) true) (_ bv2 11) (ite (and (distinct ((_ extract 1 1) C2) (_ bv0 1)) true) (_ bv1 11) (_ bv0 11)))))
 (let ((?x3552 (ite (and (distinct ((_ extract 5 5) C2) (_ bv0 1)) true) (_ bv5 11) (ite (and (distinct ((_ extract 4 4) C2) (_ bv0 1)) true) (_ bv4 11) (_ bv3 11)))))
 (let ((?x4073 (ite (and (distinct ((_ extract 8 8) C2) (_ bv0 1)) true) (_ bv8 11) (ite (and (distinct ((_ extract 7 7) C2) (_ bv0 1)) true) (_ bv7 11) (_ bv6 11)))))
 (let ((?x3093 (ite (and (distinct ((_ extract 10 9) C2) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) C2) (_ bv0 1)) true) (_ bv10 11) (_ bv9 11)) ?x4073)))
 (let ((?x5612 (ite (and (distinct ((_ extract 10 6) C2) (_ bv0 5)) true) ?x3093 (ite (and (distinct ((_ extract 5 3) C2) (_ bv0 3)) true) ?x3552 ?x4621))))
 (let ((?x1582 (bvsub ?x5612 (ite (and (distinct ((_ extract 21 11) C1) (_ bv0 11)) true) ?x2277 ?x2735))))
 (let ((?x4396 (bvor %Y C2)))
 (let (($x2577 (and (distinct (ite (= (ite (= (bvand %X C1) (_ bv0 22)) (_ bv1 1) (_ bv0 1)) (_ bv1 1)) %Y ?x4396) (bvor (bvshl ((_ extract 10 0) (bvand %X C1)) ?x1582) %Y)) true)))
 (let ((?x1713 (ite (and (distinct ((_ extract 2 2) C1) (_ bv0 1)) true) (_ bv2 32) (ite (and (distinct ((_ extract 1 1) C1) (_ bv0 1)) true) (_ bv1 32) (_ bv0 32)))))
 (let ((?x1580 (ite (and (distinct ((_ extract 5 5) C1) (_ bv0 1)) true) (_ bv5 32) (ite (and (distinct ((_ extract 4 4) C1) (_ bv0 1)) true) (_ bv4 32) (_ bv3 32)))))
 (let ((?x1937 (ite (and (distinct ((_ extract 8 8) C1) (_ bv0 1)) true) (_ bv8 32) (ite (and (distinct ((_ extract 7 7) C1) (_ bv0 1)) true) (_ bv7 32) (_ bv6 32)))))
 (let ((?x1631 (ite (and (distinct ((_ extract 10 9) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) C1) (_ bv0 1)) true) (_ bv10 32) (_ bv9 32)) ?x1937)))
 (let ((?x2169 (ite (and (distinct ((_ extract 10 6) C1) (_ bv0 5)) true) ?x1631 (ite (and (distinct ((_ extract 5 3) C1) (_ bv0 3)) true) ?x1580 ?x1713))))
 (let ((?x2049 (ite (and (distinct ((_ extract 13 13) C1) (_ bv0 1)) true) (_ bv13 32) (ite (and (distinct ((_ extract 12 12) C1) (_ bv0 1)) true) (_ bv12 32) (_ bv11 32)))))
 (let ((?x4411 (ite (and (distinct ((_ extract 16 16) C1) (_ bv0 1)) true) (_ bv16 32) (ite (and (distinct ((_ extract 15 15) C1) (_ bv0 1)) true) (_ bv15 32) (_ bv14 32)))))
 (let ((?x3556 (ite (and (distinct ((_ extract 19 19) C1) (_ bv0 1)) true) (_ bv19 32) (ite (and (distinct ((_ extract 18 18) C1) (_ bv0 1)) true) (_ bv18 32) (_ bv17 32)))))
 (let ((?x2959 (ite (and (distinct ((_ extract 21 20) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 21 21) C1) (_ bv0 1)) true) (_ bv21 32) (_ bv20 32)) ?x3556)))
 (let ((?x2448 (ite (and (distinct ((_ extract 21 17) C1) (_ bv0 5)) true) ?x2959 (ite (and (distinct ((_ extract 16 14) C1) (_ bv0 3)) true) ?x4411 ?x2049))))
 (let ((?x4504 (ite (and (distinct ((_ extract 2 2) C2) (_ bv0 1)) true) (_ bv2 32) (ite (and (distinct ((_ extract 1 1) C2) (_ bv0 1)) true) (_ bv1 32) (_ bv0 32)))))
 (let ((?x3486 (ite (and (distinct ((_ extract 5 5) C2) (_ bv0 1)) true) (_ bv5 32) (ite (and (distinct ((_ extract 4 4) C2) (_ bv0 1)) true) (_ bv4 32) (_ bv3 32)))))
 (let ((?x2004 (ite (and (distinct ((_ extract 8 8) C2) (_ bv0 1)) true) (_ bv8 32) (ite (and (distinct ((_ extract 7 7) C2) (_ bv0 1)) true) (_ bv7 32) (_ bv6 32)))))
 (let ((?x5401 (ite (and (distinct ((_ extract 10 9) C2) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) C2) (_ bv0 1)) true) (_ bv10 32) (_ bv9 32)) ?x2004)))
 (let ((?x5071 (ite (and (distinct ((_ extract 10 6) C2) (_ bv0 5)) true) ?x5401 (ite (and (distinct ((_ extract 5 3) C2) (_ bv0 3)) true) ?x3486 ?x4504))))
 (and (and (and (distinct C1 (_ bv0 22)) true) (= (bvand C1 (bvsub C1 (_ bv1 22))) (_ bv0 22))) (and (and (distinct C2 (_ bv0 11)) true) (= (bvand C2 (bvsub C2 (_ bv1 11))) (_ bv0 11))) (bvsge ?x5071 (ite (and (distinct ((_ extract 21 11) C1) (_ bv0 11)) true) ?x2448 ?x2169)) $x2577)))))))))))))))))))))))))))))))))))
(check-sat)
