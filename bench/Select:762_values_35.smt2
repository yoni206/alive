(set-info :status unknown)
(declare-fun C3 () (_ BitVec 11))
(declare-fun C2 () (_ BitVec 11))
(declare-fun C () (_ BitVec 39))
(declare-fun %Op () (_ BitVec 39))
(assert
 (let ((?x8296 (bvsub C2 C3)))
 (let ((?x6152 (ite (and (distinct ((_ extract 2 2) ?x8296) (_ bv0 1)) true) (_ bv2 11) (ite (and (distinct ((_ extract 1 1) ?x8296) (_ bv0 1)) true) (_ bv1 11) (_ bv0 11)))))
 (let ((?x320 (ite (and (distinct ((_ extract 5 5) ?x8296) (_ bv0 1)) true) (_ bv5 11) (ite (and (distinct ((_ extract 4 4) ?x8296) (_ bv0 1)) true) (_ bv4 11) (_ bv3 11)))))
 (let ((?x16686 (ite (and (distinct ((_ extract 8 8) ?x8296) (_ bv0 1)) true) (_ bv8 11) (ite (and (distinct ((_ extract 7 7) ?x8296) (_ bv0 1)) true) (_ bv7 11) (_ bv6 11)))))
 (let ((?x13529 (ite (and (distinct ((_ extract 10 9) ?x8296) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) ?x8296) (_ bv0 1)) true) (_ bv10 11) (_ bv9 11)) ?x16686)))
 (let ((?x11767 (ite (and (distinct ((_ extract 10 6) ?x8296) (_ bv0 5)) true) ?x13529 (ite (and (distinct ((_ extract 5 3) ?x8296) (_ bv0 3)) true) ?x320 ?x6152))))
 (let ((?x13698 (ite (and (distinct ((_ extract 2 2) C) (_ bv0 1)) true) (_ bv2 11) (ite (and (distinct ((_ extract 1 1) C) (_ bv0 1)) true) (_ bv1 11) (_ bv0 11)))))
 (let ((?x21949 (ite (and (distinct ((_ extract 4 3) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 4 4) C) (_ bv0 1)) true) (_ bv4 11) (_ bv3 11)) ?x13698)))
 (let ((?x15612 (ite (and (distinct ((_ extract 7 7) C) (_ bv0 1)) true) (_ bv7 11) (ite (and (distinct ((_ extract 6 6) C) (_ bv0 1)) true) (_ bv6 11) (_ bv5 11)))))
 (let ((?x23738 (ite (and (distinct ((_ extract 9 8) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 9 9) C) (_ bv0 1)) true) (_ bv9 11) (_ bv8 11)) ?x15612)))
 (let ((?x16671 (ite (and (distinct ((_ extract 12 12) C) (_ bv0 1)) true) (_ bv12 11) (ite (and (distinct ((_ extract 11 11) C) (_ bv0 1)) true) (_ bv11 11) (_ bv10 11)))))
 (let ((?x18890 (ite (and (distinct ((_ extract 14 13) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 14 14) C) (_ bv0 1)) true) (_ bv14 11) (_ bv13 11)) ?x16671)))
 (let ((?x10155 (ite (and (distinct ((_ extract 17 17) C) (_ bv0 1)) true) (_ bv17 11) (ite (and (distinct ((_ extract 16 16) C) (_ bv0 1)) true) (_ bv16 11) (_ bv15 11)))))
 (let ((?x10059 (ite (and (distinct ((_ extract 19 18) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 19 19) C) (_ bv0 1)) true) (_ bv19 11) (_ bv18 11)) ?x10155)))
 (let ((?x2517 (ite (and (distinct ((_ extract 19 10) C) (_ bv0 10)) true) (ite (and (distinct ((_ extract 19 15) C) (_ bv0 5)) true) ?x10059 ?x18890) (ite (and (distinct ((_ extract 9 5) C) (_ bv0 5)) true) ?x23738 ?x21949))))
 (let ((?x5911 (ite (and (distinct ((_ extract 22 22) C) (_ bv0 1)) true) (_ bv22 11) (ite (and (distinct ((_ extract 21 21) C) (_ bv0 1)) true) (_ bv21 11) (_ bv20 11)))))
 (let ((?x13008 (ite (and (distinct ((_ extract 24 23) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 24 24) C) (_ bv0 1)) true) (_ bv24 11) (_ bv23 11)) ?x5911)))
 (let ((?x10369 (ite (and (distinct ((_ extract 27 27) C) (_ bv0 1)) true) (_ bv27 11) (ite (and (distinct ((_ extract 26 26) C) (_ bv0 1)) true) (_ bv26 11) (_ bv25 11)))))
 (let ((?x9439 (ite (and (distinct ((_ extract 29 28) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 29 29) C) (_ bv0 1)) true) (_ bv29 11) (_ bv28 11)) ?x10369)))
 (let ((?x42 (ite (and (distinct ((_ extract 32 32) C) (_ bv0 1)) true) (_ bv32 11) (ite (and (distinct ((_ extract 31 31) C) (_ bv0 1)) true) (_ bv31 11) (_ bv30 11)))))
 (let ((?x18046 (ite (and (distinct ((_ extract 34 33) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 34 34) C) (_ bv0 1)) true) (_ bv34 11) (_ bv33 11)) ?x42)))
 (let ((?x2929 (ite (and (distinct ((_ extract 38 37) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 38 38) C) (_ bv0 1)) true) (_ bv38 11) (_ bv37 11)) (ite (and (distinct ((_ extract 36 36) C) (_ bv0 1)) true) (_ bv36 11) (_ bv35 11)))))
 (let ((?x14234 (ite (and (distinct ((_ extract 38 30) C) (_ bv0 9)) true) (ite (and (distinct ((_ extract 38 35) C) (_ bv0 4)) true) ?x2929 ?x18046) (ite (and (distinct ((_ extract 29 25) C) (_ bv0 5)) true) ?x9439 ?x13008))))
 (let ((?x5327 (bvsub (ite (and (distinct ((_ extract 38 20) C) (_ bv0 19)) true) ?x14234 ?x2517) ?x11767)))
 (let ((?x11311 (ite (bvsgt (_ bv0 11) ?x5327) (_ bv0 11) ?x5327)))
 (let ((?x17845 (bvsub ?x11767 (ite (and (distinct ((_ extract 38 20) C) (_ bv0 19)) true) ?x14234 ?x2517))))
 (let ((?x7835 (ite (bvsgt (_ bv0 11) ?x17845) (_ bv0 11) ?x17845)))
 (let ((?x13872 (bvadd (bvxor (bvlshr (bvshl ((_ extract 10 0) (bvand %Op C)) ?x7835) ?x11311) ?x8296) C3)))
 (let (($x18960 (and (distinct (ite (= (ite (= (bvand %Op C) (_ bv0 39)) (_ bv1 1) (_ bv0 1)) (_ bv1 1)) C2 C3) ?x13872) true)))
 (let ((?x15907 (ite (and (distinct ((_ extract 2 2) C) (_ bv0 1)) true) (_ bv2 32) (ite (and (distinct ((_ extract 1 1) C) (_ bv0 1)) true) (_ bv1 32) (_ bv0 32)))))
 (let ((?x17905 (ite (and (distinct ((_ extract 4 3) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 4 4) C) (_ bv0 1)) true) (_ bv4 32) (_ bv3 32)) ?x15907)))
 (let ((?x12655 (ite (and (distinct ((_ extract 7 7) C) (_ bv0 1)) true) (_ bv7 32) (ite (and (distinct ((_ extract 6 6) C) (_ bv0 1)) true) (_ bv6 32) (_ bv5 32)))))
 (let ((?x14781 (ite (and (distinct ((_ extract 9 8) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 9 9) C) (_ bv0 1)) true) (_ bv9 32) (_ bv8 32)) ?x12655)))
 (let ((?x10876 (ite (and (distinct ((_ extract 12 12) C) (_ bv0 1)) true) (_ bv12 32) (ite (and (distinct ((_ extract 11 11) C) (_ bv0 1)) true) (_ bv11 32) (_ bv10 32)))))
 (let ((?x10390 (ite (and (distinct ((_ extract 14 13) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 14 14) C) (_ bv0 1)) true) (_ bv14 32) (_ bv13 32)) ?x10876)))
 (let ((?x7131 (ite (and (distinct ((_ extract 17 17) C) (_ bv0 1)) true) (_ bv17 32) (ite (and (distinct ((_ extract 16 16) C) (_ bv0 1)) true) (_ bv16 32) (_ bv15 32)))))
 (let ((?x6798 (ite (and (distinct ((_ extract 19 18) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 19 19) C) (_ bv0 1)) true) (_ bv19 32) (_ bv18 32)) ?x7131)))
 (let ((?x17234 (ite (and (distinct ((_ extract 19 10) C) (_ bv0 10)) true) (ite (and (distinct ((_ extract 19 15) C) (_ bv0 5)) true) ?x6798 ?x10390) (ite (and (distinct ((_ extract 9 5) C) (_ bv0 5)) true) ?x14781 ?x17905))))
 (let ((?x17244 (ite (and (distinct ((_ extract 22 22) C) (_ bv0 1)) true) (_ bv22 32) (ite (and (distinct ((_ extract 21 21) C) (_ bv0 1)) true) (_ bv21 32) (_ bv20 32)))))
 (let ((?x18702 (ite (and (distinct ((_ extract 24 23) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 24 24) C) (_ bv0 1)) true) (_ bv24 32) (_ bv23 32)) ?x17244)))
 (let ((?x3485 (ite (and (distinct ((_ extract 27 27) C) (_ bv0 1)) true) (_ bv27 32) (ite (and (distinct ((_ extract 26 26) C) (_ bv0 1)) true) (_ bv26 32) (_ bv25 32)))))
 (let ((?x3763 (ite (and (distinct ((_ extract 29 28) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 29 29) C) (_ bv0 1)) true) (_ bv29 32) (_ bv28 32)) ?x3485)))
 (let ((?x19364 (ite (and (distinct ((_ extract 32 32) C) (_ bv0 1)) true) (_ bv32 32) (ite (and (distinct ((_ extract 31 31) C) (_ bv0 1)) true) (_ bv31 32) (_ bv30 32)))))
 (let ((?x322 (ite (and (distinct ((_ extract 34 33) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 34 34) C) (_ bv0 1)) true) (_ bv34 32) (_ bv33 32)) ?x19364)))
 (let ((?x197 (ite (and (distinct ((_ extract 38 37) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 38 38) C) (_ bv0 1)) true) (_ bv38 32) (_ bv37 32)) (ite (and (distinct ((_ extract 36 36) C) (_ bv0 1)) true) (_ bv36 32) (_ bv35 32)))))
 (let ((?x4163 (ite (and (distinct ((_ extract 38 30) C) (_ bv0 9)) true) (ite (and (distinct ((_ extract 38 35) C) (_ bv0 4)) true) ?x197 ?x322) (ite (and (distinct ((_ extract 29 25) C) (_ bv0 5)) true) ?x3763 ?x18702))))
 (and (and (and (distinct C (_ bv0 39)) true) (= (bvand C (bvsub C (_ bv1 39))) (_ bv0 39))) (and (and (distinct ?x8296 (_ bv0 11)) true) (= (bvand ?x8296 (bvsub ?x8296 (_ bv1 11))) (_ bv0 11))) (bvslt (ite (and (distinct ((_ extract 38 20) C) (_ bv0 19)) true) ?x4163 ?x17234) (_ bv11 32)) $x18960))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
