(set-info :status unknown)
(declare-fun mem0 () (_ BitVec 8))
(declare-fun %p2 () (_ BitVec 64))
(declare-fun idx () (_ BitVec 64))
(declare-fun %p1 () (_ BitVec 64))
(declare-fun |ana_equivalentAddressValues(%p1, %p2)| () (_ BitVec 1))
(assert
 (let ((?x20064 (concat (concat (concat (concat (concat mem0 mem0) mem0) mem0) mem0) ((_ extract 1 0) mem0))))
 (let (($x14259 (or true true)))
 (let (($x1088 (and (distinct %p2 (_ bv0 64)) true)))
 (let (($x3991 (and (distinct %p1 (_ bv0 64)) true)))
 (let ((?x18818 (ite (and $x3991 $x14259 $x3991 $x14259 $x3991 $x14259 $x1088 $x14259 (= idx %p2)) (concat ((_ extract 7 2) mem0) ((_ extract 1 0) ?x20064)) mem0)))
 (let (($x16121 (and $x3991 $x14259 $x3991 $x14259 $x3991 $x14259 $x1088 $x14259 (= idx (bvadd (bvadd %p2 (_ bv1 64)) (_ bv0 64))))))
 (let (($x12169 (and $x3991 $x14259 $x3991 $x14259 $x3991 $x14259 $x1088 $x14259 (= idx (bvadd (bvadd %p2 (_ bv1 64)) (_ bv1 64))))))
 (let (($x7360 (and $x3991 $x14259 $x3991 $x14259 $x3991 $x14259 $x1088 $x14259 (= idx (bvadd (bvadd %p2 (_ bv1 64)) (_ bv2 64))))))
 (let ((?x16294 (ite $x7360 ((_ extract 25 18) ?x20064) (ite $x12169 ((_ extract 17 10) ?x20064) (ite $x16121 ((_ extract 9 2) ?x20064) ?x18818)))))
 (let (($x1702 (and $x3991 $x14259 $x3991 $x14259 $x3991 $x14259 $x1088 $x14259 (= idx (bvadd (bvadd %p2 (_ bv1 64)) (_ bv3 64))))))
 (let (($x15463 (and $x3991 $x14259 $x3991 $x14259 $x3991 $x14259 $x1088 $x14259 (= idx (bvadd (bvadd %p2 (_ bv1 64)) (_ bv4 64))))))
 (let ((?x7409 (ite $x15463 ((_ extract 41 34) ?x20064) (ite $x1702 ((_ extract 33 26) ?x20064) ?x16294))))
 (let (($x8433 (= |ana_equivalentAddressValues(%p1, %p2)| (_ bv1 1))))
 (and (=> $x8433 (= %p1 %p2)) $x8433 (and (distinct ?x7409 mem0) true))))))))))))))))
(check-sat)
