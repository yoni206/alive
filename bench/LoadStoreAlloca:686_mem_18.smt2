(set-info :status unknown)
(declare-fun mem0 () (_ BitVec 8))
(declare-fun %p2 () (_ BitVec 64))
(declare-fun idx () (_ BitVec 64))
(declare-fun %p1 () (_ BitVec 64))
(declare-fun |ana_equivalentAddressValues(%p1, %p2)| () (_ BitVec 1))
(assert
 (let ((?x15736 (concat ((_ extract 7 6) mem0) ((_ extract 5 0) (concat (concat mem0 mem0) ((_ extract 5 0) mem0))))))
 (let (($x16460 (or true true)))
 (let (($x18224 (and (distinct %p2 (_ bv0 64)) true)))
 (let (($x11102 (and (distinct %p1 (_ bv0 64)) true)))
 (let ((?x13913 (ite (and $x11102 $x16460 $x11102 $x16460 $x11102 $x16460 $x18224 $x16460 (= idx %p2)) ?x15736 mem0)))
 (let (($x5623 (and $x11102 $x16460 $x11102 $x16460 $x11102 $x16460 $x18224 $x16460 (= idx (bvadd (bvadd %p2 (_ bv1 64)) (_ bv0 64))))))
 (let ((?x16243 (ite $x5623 ((_ extract 13 6) (concat (concat mem0 mem0) ((_ extract 5 0) mem0))) ?x13913)))
 (let (($x9886 (and $x11102 $x16460 $x11102 $x16460 $x11102 $x16460 $x18224 $x16460 (= idx (bvadd (bvadd %p2 (_ bv1 64)) (_ bv1 64))))))
 (let ((?x11735 (ite $x9886 ((_ extract 21 14) (concat (concat mem0 mem0) ((_ extract 5 0) mem0))) ?x16243)))
 (let (($x12921 (= |ana_equivalentAddressValues(%p1, %p2)| (_ bv1 1))))
 (and (=> $x12921 (= %p1 %p2)) $x12921 (and (distinct ?x11735 mem0) true)))))))))))))
(check-sat)
