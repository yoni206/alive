(set-info :status unknown)
(declare-fun %Y () (_ BitVec 11))
(declare-fun C2 () (_ BitVec 11))
(declare-fun C1 () (_ BitVec 29))
(declare-fun %X () (_ BitVec 29))
(assert
 (let ((?x3852 (ite (and (distinct ((_ extract 2 2) C2) (_ bv0 1)) true) (_ bv2 29) (ite (and (distinct ((_ extract 1 1) C2) (_ bv0 1)) true) (_ bv1 29) (_ bv0 29)))))
 (let ((?x5848 (ite (and (distinct ((_ extract 5 5) C2) (_ bv0 1)) true) (_ bv5 29) (ite (and (distinct ((_ extract 4 4) C2) (_ bv0 1)) true) (_ bv4 29) (_ bv3 29)))))
 (let ((?x4956 (ite (and (distinct ((_ extract 8 8) C2) (_ bv0 1)) true) (_ bv8 29) (ite (and (distinct ((_ extract 7 7) C2) (_ bv0 1)) true) (_ bv7 29) (_ bv6 29)))))
 (let ((?x4744 (ite (and (distinct ((_ extract 10 9) C2) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) C2) (_ bv0 1)) true) (_ bv10 29) (_ bv9 29)) ?x4956)))
 (let ((?x2022 (ite (and (distinct ((_ extract 10 6) C2) (_ bv0 5)) true) ?x4744 (ite (and (distinct ((_ extract 5 3) C2) (_ bv0 3)) true) ?x5848 ?x3852))))
 (let ((?x1230 (ite (and (distinct ((_ extract 3 2) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 3 3) C1) (_ bv0 1)) true) (_ bv3 29) (_ bv2 29)) (ite (and (distinct ((_ extract 1 1) C1) (_ bv0 1)) true) (_ bv1 29) (_ bv0 29)))))
 (let ((?x1914 (ite (and (distinct ((_ extract 7 6) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 7 7) C1) (_ bv0 1)) true) (_ bv7 29) (_ bv6 29)) (ite (and (distinct ((_ extract 5 5) C1) (_ bv0 1)) true) (_ bv5 29) (_ bv4 29)))))
 (let ((?x4921 (ite (and (distinct ((_ extract 11 10) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 11 11) C1) (_ bv0 1)) true) (_ bv11 29) (_ bv10 29)) (ite (and (distinct ((_ extract 9 9) C1) (_ bv0 1)) true) (_ bv9 29) (_ bv8 29)))))
 (let ((?x1457 (ite (and (distinct ((_ extract 14 14) C1) (_ bv0 1)) true) (_ bv14 29) (ite (and (distinct ((_ extract 13 13) C1) (_ bv0 1)) true) (_ bv13 29) (_ bv12 29)))))
 (let ((?x2874 (ite (and (distinct ((_ extract 14 8) C1) (_ bv0 7)) true) (ite (and (distinct ((_ extract 14 12) C1) (_ bv0 3)) true) ?x1457 ?x4921) (ite (and (distinct ((_ extract 7 4) C1) (_ bv0 4)) true) ?x1914 ?x1230))))
 (let ((?x6590 (ite (and (distinct ((_ extract 18 17) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 18 18) C1) (_ bv0 1)) true) (_ bv18 29) (_ bv17 29)) (ite (and (distinct ((_ extract 16 16) C1) (_ bv0 1)) true) (_ bv16 29) (_ bv15 29)))))
 (let ((?x6247 (ite (and (distinct ((_ extract 21 21) C1) (_ bv0 1)) true) (_ bv21 29) (ite (and (distinct ((_ extract 20 20) C1) (_ bv0 1)) true) (_ bv20 29) (_ bv19 29)))))
 (let ((?x2260 (ite (and (distinct ((_ extract 25 24) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 25 25) C1) (_ bv0 1)) true) (_ bv25 29) (_ bv24 29)) (ite (and (distinct ((_ extract 23 23) C1) (_ bv0 1)) true) (_ bv23 29) (_ bv22 29)))))
 (let ((?x4773 (ite (and (distinct ((_ extract 28 28) C1) (_ bv0 1)) true) (_ bv28 29) (ite (and (distinct ((_ extract 27 27) C1) (_ bv0 1)) true) (_ bv27 29) (_ bv26 29)))))
 (let ((?x3520 (ite (and (distinct ((_ extract 28 22) C1) (_ bv0 7)) true) (ite (and (distinct ((_ extract 28 26) C1) (_ bv0 3)) true) ?x4773 ?x2260) (ite (and (distinct ((_ extract 21 19) C1) (_ bv0 3)) true) ?x6247 ?x6590))))
 (let ((?x5057 (bvsub (ite (and (distinct ((_ extract 28 15) C1) (_ bv0 14)) true) ?x3520 ?x2874) ?x2022)))
 (let ((?x3492 (bvand %X C1)))
 (let (($x4553 (and (distinct (ite (= (ite (= ?x3492 (_ bv0 29)) (_ bv1 1) (_ bv0 1)) (_ bv1 1)) (bvor %Y C2) %Y) (bvor (bvxor ((_ extract 10 0) (bvlshr ?x3492 ?x5057)) C2) %Y)) true)))
 (let ((?x5709 (ite (and (distinct ((_ extract 3 2) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 3 3) C1) (_ bv0 1)) true) (_ bv3 32) (_ bv2 32)) (ite (and (distinct ((_ extract 1 1) C1) (_ bv0 1)) true) (_ bv1 32) (_ bv0 32)))))
 (let ((?x5197 (ite (and (distinct ((_ extract 7 6) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 7 7) C1) (_ bv0 1)) true) (_ bv7 32) (_ bv6 32)) (ite (and (distinct ((_ extract 5 5) C1) (_ bv0 1)) true) (_ bv5 32) (_ bv4 32)))))
 (let ((?x6684 (ite (and (distinct ((_ extract 11 10) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 11 11) C1) (_ bv0 1)) true) (_ bv11 32) (_ bv10 32)) (ite (and (distinct ((_ extract 9 9) C1) (_ bv0 1)) true) (_ bv9 32) (_ bv8 32)))))
 (let ((?x3057 (ite (and (distinct ((_ extract 14 14) C1) (_ bv0 1)) true) (_ bv14 32) (ite (and (distinct ((_ extract 13 13) C1) (_ bv0 1)) true) (_ bv13 32) (_ bv12 32)))))
 (let ((?x5711 (ite (and (distinct ((_ extract 14 8) C1) (_ bv0 7)) true) (ite (and (distinct ((_ extract 14 12) C1) (_ bv0 3)) true) ?x3057 ?x6684) (ite (and (distinct ((_ extract 7 4) C1) (_ bv0 4)) true) ?x5197 ?x5709))))
 (let ((?x2575 (ite (and (distinct ((_ extract 18 17) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 18 18) C1) (_ bv0 1)) true) (_ bv18 32) (_ bv17 32)) (ite (and (distinct ((_ extract 16 16) C1) (_ bv0 1)) true) (_ bv16 32) (_ bv15 32)))))
 (let ((?x1334 (ite (and (distinct ((_ extract 21 21) C1) (_ bv0 1)) true) (_ bv21 32) (ite (and (distinct ((_ extract 20 20) C1) (_ bv0 1)) true) (_ bv20 32) (_ bv19 32)))))
 (let ((?x1632 (ite (and (distinct ((_ extract 25 24) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 25 25) C1) (_ bv0 1)) true) (_ bv25 32) (_ bv24 32)) (ite (and (distinct ((_ extract 23 23) C1) (_ bv0 1)) true) (_ bv23 32) (_ bv22 32)))))
 (let ((?x2847 (ite (and (distinct ((_ extract 28 28) C1) (_ bv0 1)) true) (_ bv28 32) (ite (and (distinct ((_ extract 27 27) C1) (_ bv0 1)) true) (_ bv27 32) (_ bv26 32)))))
 (let ((?x3890 (ite (and (distinct ((_ extract 28 22) C1) (_ bv0 7)) true) (ite (and (distinct ((_ extract 28 26) C1) (_ bv0 3)) true) ?x2847 ?x1632) (ite (and (distinct ((_ extract 21 19) C1) (_ bv0 3)) true) ?x1334 ?x2575))))
 (let ((?x6796 (ite (and (distinct ((_ extract 2 2) C2) (_ bv0 1)) true) (_ bv2 32) (ite (and (distinct ((_ extract 1 1) C2) (_ bv0 1)) true) (_ bv1 32) (_ bv0 32)))))
 (let ((?x1968 (ite (and (distinct ((_ extract 5 5) C2) (_ bv0 1)) true) (_ bv5 32) (ite (and (distinct ((_ extract 4 4) C2) (_ bv0 1)) true) (_ bv4 32) (_ bv3 32)))))
 (let ((?x6279 (ite (and (distinct ((_ extract 8 8) C2) (_ bv0 1)) true) (_ bv8 32) (ite (and (distinct ((_ extract 7 7) C2) (_ bv0 1)) true) (_ bv7 32) (_ bv6 32)))))
 (let ((?x1634 (ite (and (distinct ((_ extract 10 9) C2) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) C2) (_ bv0 1)) true) (_ bv10 32) (_ bv9 32)) ?x6279)))
 (let ((?x1856 (ite (and (distinct ((_ extract 10 6) C2) (_ bv0 5)) true) ?x1634 (ite (and (distinct ((_ extract 5 3) C2) (_ bv0 3)) true) ?x1968 ?x6796))))
 (and (and (and (distinct C1 (_ bv0 29)) true) (= (bvand C1 (bvsub C1 (_ bv1 29))) (_ bv0 29))) (and (and (distinct C2 (_ bv0 11)) true) (= (bvand C2 (bvsub C2 (_ bv1 11))) (_ bv0 11))) (bvslt ?x1856 (ite (and (distinct ((_ extract 28 15) C1) (_ bv0 14)) true) ?x3890 ?x5711)) $x4553)))))))))))))))))))))))))))))))))))
(check-sat)
