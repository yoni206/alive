(set-info :source |
 Generated by Alive 0.1
 More info in N. P. Lopes, D. Menendez, S. Nagarakatte, J. Regehr.
 Provably Correct Peephole Optimizations with Alive. In PLDI'15.
|)

(set-info :status unknown)
(declare-fun C2 () (_ BitVec 44))
(declare-fun |ana_MaskedValueIsZero(%Y, (-1 << (log2(C2) + 1)))| () (_ BitVec 1))
(declare-fun C1 () (_ BitVec 44))
(declare-fun %Y () (_ BitVec 44))
(assert
 (let ((?x18803 (ite (and (distinct ((_ extract 2 2) C2) (_ bv0 1)) true) (_ bv2 44) (ite (and (distinct ((_ extract 1 1) C2) (_ bv0 1)) true) (_ bv1 44) (_ bv0 44)))))
 (let ((?x19463 (ite (and (distinct ((_ extract 5 5) C2) (_ bv0 1)) true) (_ bv5 44) (ite (and (distinct ((_ extract 4 4) C2) (_ bv0 1)) true) (_ bv4 44) (_ bv3 44)))))
 (let ((?x17902 (ite (and (distinct ((_ extract 8 8) C2) (_ bv0 1)) true) (_ bv8 44) (ite (and (distinct ((_ extract 7 7) C2) (_ bv0 1)) true) (_ bv7 44) (_ bv6 44)))))
 (let ((?x13412 (ite (and (distinct ((_ extract 10 9) C2) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) C2) (_ bv0 1)) true) (_ bv10 44) (_ bv9 44)) ?x17902)))
 (let ((?x17165 (ite (and (distinct ((_ extract 10 6) C2) (_ bv0 5)) true) ?x13412 (ite (and (distinct ((_ extract 5 3) C2) (_ bv0 3)) true) ?x19463 ?x18803))))
 (let ((?x18590 (ite (and (distinct ((_ extract 13 13) C2) (_ bv0 1)) true) (_ bv13 44) (ite (and (distinct ((_ extract 12 12) C2) (_ bv0 1)) true) (_ bv12 44) (_ bv11 44)))))
 (let ((?x18274 (ite (and (distinct ((_ extract 16 16) C2) (_ bv0 1)) true) (_ bv16 44) (ite (and (distinct ((_ extract 15 15) C2) (_ bv0 1)) true) (_ bv15 44) (_ bv14 44)))))
 (let ((?x18443 (ite (and (distinct ((_ extract 19 19) C2) (_ bv0 1)) true) (_ bv19 44) (ite (and (distinct ((_ extract 18 18) C2) (_ bv0 1)) true) (_ bv18 44) (_ bv17 44)))))
 (let ((?x16324 (ite (and (distinct ((_ extract 21 20) C2) (_ bv0 2)) true) (ite (and (distinct ((_ extract 21 21) C2) (_ bv0 1)) true) (_ bv21 44) (_ bv20 44)) ?x18443)))
 (let ((?x14880 (ite (and (distinct ((_ extract 21 17) C2) (_ bv0 5)) true) ?x16324 (ite (and (distinct ((_ extract 16 14) C2) (_ bv0 3)) true) ?x18274 ?x18590))))
 (let ((?x18539 (ite (and (distinct ((_ extract 24 24) C2) (_ bv0 1)) true) (_ bv24 44) (ite (and (distinct ((_ extract 23 23) C2) (_ bv0 1)) true) (_ bv23 44) (_ bv22 44)))))
 (let ((?x17769 (ite (and (distinct ((_ extract 27 27) C2) (_ bv0 1)) true) (_ bv27 44) (ite (and (distinct ((_ extract 26 26) C2) (_ bv0 1)) true) (_ bv26 44) (_ bv25 44)))))
 (let ((?x16490 (ite (and (distinct ((_ extract 30 30) C2) (_ bv0 1)) true) (_ bv30 44) (ite (and (distinct ((_ extract 29 29) C2) (_ bv0 1)) true) (_ bv29 44) (_ bv28 44)))))
 (let ((?x16236 (ite (and (distinct ((_ extract 32 31) C2) (_ bv0 2)) true) (ite (and (distinct ((_ extract 32 32) C2) (_ bv0 1)) true) (_ bv32 44) (_ bv31 44)) ?x16490)))
 (let ((?x18659 (ite (and (distinct ((_ extract 32 28) C2) (_ bv0 5)) true) ?x16236 (ite (and (distinct ((_ extract 27 25) C2) (_ bv0 3)) true) ?x17769 ?x18539))))
 (let ((?x19745 (ite (and (distinct ((_ extract 35 35) C2) (_ bv0 1)) true) (_ bv35 44) (ite (and (distinct ((_ extract 34 34) C2) (_ bv0 1)) true) (_ bv34 44) (_ bv33 44)))))
 (let ((?x19809 (ite (and (distinct ((_ extract 38 38) C2) (_ bv0 1)) true) (_ bv38 44) (ite (and (distinct ((_ extract 37 37) C2) (_ bv0 1)) true) (_ bv37 44) (_ bv36 44)))))
 (let ((?x19841 (ite (and (distinct ((_ extract 41 41) C2) (_ bv0 1)) true) (_ bv41 44) (ite (and (distinct ((_ extract 40 40) C2) (_ bv0 1)) true) (_ bv40 44) (_ bv39 44)))))
 (let ((?x19040 (ite (and (distinct ((_ extract 43 42) C2) (_ bv0 2)) true) (ite (and (distinct ((_ extract 43 43) C2) (_ bv0 1)) true) (_ bv43 44) (_ bv42 44)) ?x19841)))
 (let ((?x19777 (ite (and (distinct ((_ extract 43 39) C2) (_ bv0 5)) true) ?x19040 (ite (and (distinct ((_ extract 38 36) C2) (_ bv0 3)) true) ?x19809 ?x19745))))
 (let ((?x18642 (ite (and (distinct ((_ extract 43 22) C2) (_ bv0 22)) true) (ite (and (distinct ((_ extract 43 33) C2) (_ bv0 11)) true) ?x19777 ?x18659) (ite (and (distinct ((_ extract 21 11) C2) (_ bv0 11)) true) ?x14880 ?x17165))))
 (let ((?x18546 (bvsub (bvsub (_ bv44 44) ?x18642) (_ bv1 44))))
 (let (($x34336 (bvult ?x18546 (_ bv44 44))))
 (let (($x4990 (= |ana_MaskedValueIsZero(%Y, (-1 << (log2(C2) + 1)))| (_ bv1 1))))
 (let (($x16918 (and (and (distinct C2 (_ bv0 44)) true) (= (bvand C2 (bvsub C2 (_ bv1 44))) (_ bv0 44)))))
 (let (($x13581 (= C2 (bvneg C1))))
 (let (($x31846 (=> $x4990 (= (bvand %Y (bvshl (_ bv17592186044415 44) (bvadd ?x18642 (_ bv1 44)))) (_ bv0 44)))))
 (and $x31846 $x13581 $x16918 $x4990 (not (and $x34336 $x34336)))))))))))))))))))))))))))))))
(check-sat)
