(set-info :status unknown)
(declare-fun C1 () (_ BitVec 16))
(declare-fun %Y () (_ BitVec 16))
(declare-fun C2 () (_ BitVec 16))
(declare-fun |ana_MaskedValueIsZero(%Y, (-1 << (log2(C1) + 1)))| () (_ BitVec 1))
(assert
 (let ((?x6324 (ite (and (distinct ((_ extract 3 2) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 3 3) C1) (_ bv0 1)) true) (_ bv3 16) (_ bv2 16)) (ite (and (distinct ((_ extract 1 1) C1) (_ bv0 1)) true) (_ bv1 16) (_ bv0 16)))))
 (let ((?x8204 (ite (and (distinct ((_ extract 7 6) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 7 7) C1) (_ bv0 1)) true) (_ bv7 16) (_ bv6 16)) (ite (and (distinct ((_ extract 5 5) C1) (_ bv0 1)) true) (_ bv5 16) (_ bv4 16)))))
 (let ((?x10995 (ite (and (distinct ((_ extract 11 10) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 11 11) C1) (_ bv0 1)) true) (_ bv11 16) (_ bv10 16)) (ite (and (distinct ((_ extract 9 9) C1) (_ bv0 1)) true) (_ bv9 16) (_ bv8 16)))))
 (let ((?x4377 (ite (and (distinct ((_ extract 15 14) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 15 15) C1) (_ bv0 1)) true) (_ bv15 16) (_ bv14 16)) (ite (and (distinct ((_ extract 13 13) C1) (_ bv0 1)) true) (_ bv13 16) (_ bv12 16)))))
 (let ((?x1373 (ite (and (distinct ((_ extract 15 8) C1) (_ bv0 8)) true) (ite (and (distinct ((_ extract 15 12) C1) (_ bv0 4)) true) ?x4377 ?x10995) (ite (and (distinct ((_ extract 7 4) C1) (_ bv0 4)) true) ?x8204 ?x6324))))
 (let ((?x3924 (bvsub (bvsub (_ bv16 16) ?x1373) (_ bv1 16))))
 (let (($x1306 (and (distinct (bvadd (bvxor %Y C2) C1) (bvashr (bvshl %Y ?x3924) ?x3924)) true)))
 (let (($x851 (= |ana_MaskedValueIsZero(%Y, (-1 << (log2(C1) + 1)))| (_ bv1 1))))
 (and (=> $x851 (= (bvand %Y (bvshl (_ bv65535 16) (bvadd ?x1373 (_ bv1 16)))) (_ bv0 16))) (= C2 (bvneg C1)) (and (and (distinct C1 (_ bv0 16)) true) (= (bvand C1 (bvsub C1 (_ bv1 16))) (_ bv0 16))) $x851 $x1306))))))))))
(check-sat)
