(set-info :status unknown)
(declare-fun C () (_ BitVec 12))
(declare-fun %B () (_ BitVec 12))
(declare-fun %A () (_ BitVec 12))
(declare-fun |ana_MaskedValueIsZero(%A, lshr(-1, countLeadingZeros(C)))| () (_ BitVec 1))
(assert
 (let (($x14965 (and (distinct (bvand (bvsub %A %B) C) (bvand (bvsub (_ bv0 12) %B) C)) true)))
 (let (($x11407 (= |ana_MaskedValueIsZero(%A, lshr(-1, countLeadingZeros(C)))| (_ bv1 1))))
 (let ((?x10699 (ite (= ((_ extract 1 1) C) (_ bv1 1)) (_ bv10 12) (ite (= ((_ extract 0 0) C) (_ bv1 1)) (_ bv11 12) (_ bv12 12)))))
 (let ((?x1347 (ite (= ((_ extract 3 3) C) (_ bv1 1)) (_ bv8 12) (ite (= ((_ extract 2 2) C) (_ bv1 1)) (_ bv9 12) ?x10699))))
 (let ((?x8227 (ite (= ((_ extract 5 5) C) (_ bv1 1)) (_ bv6 12) (ite (= ((_ extract 4 4) C) (_ bv1 1)) (_ bv7 12) ?x1347))))
 (let ((?x7133 (ite (= ((_ extract 7 7) C) (_ bv1 1)) (_ bv4 12) (ite (= ((_ extract 6 6) C) (_ bv1 1)) (_ bv5 12) ?x8227))))
 (let ((?x5370 (ite (= ((_ extract 9 9) C) (_ bv1 1)) (_ bv2 12) (ite (= ((_ extract 8 8) C) (_ bv1 1)) (_ bv3 12) ?x7133))))
 (let ((?x14873 (ite (= ((_ extract 11 11) C) (_ bv1 1)) (_ bv0 12) (ite (= ((_ extract 10 10) C) (_ bv1 1)) (_ bv1 12) ?x5370))))
 (and (=> $x11407 (= (bvand %A (bvlshr (_ bv4095 12) ?x14873)) (_ bv0 12))) $x11407 $x14965))))))))))
(check-sat)
