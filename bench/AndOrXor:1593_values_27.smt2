(set-info :status unknown)
(declare-fun %K2 () (_ BitVec 35))
(declare-fun %K1 () (_ BitVec 35))
(declare-fun %A () (_ BitVec 35))
(declare-fun |ana_isPowerOf2(%K2)| () (_ BitVec 1))
(declare-fun |ana_isPowerOf2(%K1)| () (_ BitVec 1))
(assert
 (let ((?x1541 (ite (and (distinct (bvand %A (bvor %K1 %K2)) (bvor %K1 %K2)) true) (_ bv1 1) (_ bv0 1))))
 (let ((?x9101 (ite (= (bvand %A %K2) (_ bv0 35)) (_ bv1 1) (_ bv0 1))))
 (let ((?x15425 (ite (= (bvand %A %K1) (_ bv0 35)) (_ bv1 1) (_ bv0 1))))
 (let (($x13024 (= |ana_isPowerOf2(%K2)| (_ bv1 1))))
 (let (($x1523 (= |ana_isPowerOf2(%K1)| (_ bv1 1))))
 (let (($x7935 (=> $x13024 (and (and (distinct %K2 (_ bv0 35)) true) (= (bvand %K2 (bvsub %K2 (_ bv1 35))) (_ bv0 35))))))
 (let (($x7582 (=> $x1523 (and (and (distinct %K1 (_ bv0 35)) true) (= (bvand %K1 (bvsub %K1 (_ bv1 35))) (_ bv0 35))))))
 (and $x7582 $x7935 $x1523 $x13024 (and (distinct (bvor ?x15425 ?x9101) ?x1541) true))))))))))
(check-sat)
