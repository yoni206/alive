(set-info :source |
 Generated by Alive 0.1
 More info in N. P. Lopes, D. Menendez, S. Nagarakatte, J. Regehr.
 Provably Correct Peephole Optimizations with Alive. In PLDI'15.
|)

(set-info :status unknown)
(declare-fun |ana_MaskedValueIsZero(%Y, (-1 << (log2(C1) + 1)))| () (_ BitVec 1))
(declare-fun C1 () (_ BitVec 35))
(declare-fun C2 () (_ BitVec 35))
(declare-fun %Y () (_ BitVec 35))
(assert
 (let (($x462 (= |ana_MaskedValueIsZero(%Y, (-1 << (log2(C1) + 1)))| (_ bv1 1))))
 (let (($x9394 (and (and (distinct C1 (_ bv0 35)) true) (= (bvand C1 (bvsub C1 (_ bv1 35))) (_ bv0 35)))))
 (let (($x8646 (= C2 (bvneg C1))))
 (let ((?x25729 (ite (and (distinct ((_ extract 2 2) C1) (_ bv0 1)) true) (_ bv2 35) (ite (and (distinct ((_ extract 1 1) C1) (_ bv0 1)) true) (_ bv1 35) (_ bv0 35)))))
 (let ((?x2365 (ite (and (distinct ((_ extract 4 3) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 4 4) C1) (_ bv0 1)) true) (_ bv4 35) (_ bv3 35)) ?x25729)))
 (let ((?x26486 (ite (and (distinct ((_ extract 8 7) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 8 8) C1) (_ bv0 1)) true) (_ bv8 35) (_ bv7 35)) (ite (and (distinct ((_ extract 6 6) C1) (_ bv0 1)) true) (_ bv6 35) (_ bv5 35)))))
 (let ((?x20718 (ite (and (distinct ((_ extract 11 11) C1) (_ bv0 1)) true) (_ bv11 35) (ite (and (distinct ((_ extract 10 10) C1) (_ bv0 1)) true) (_ bv10 35) (_ bv9 35)))))
 (let ((?x19435 (ite (and (distinct ((_ extract 13 12) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 13 13) C1) (_ bv0 1)) true) (_ bv13 35) (_ bv12 35)) ?x20718)))
 (let ((?x8710 (ite (and (distinct ((_ extract 17 16) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 17 17) C1) (_ bv0 1)) true) (_ bv17 35) (_ bv16 35)) (ite (and (distinct ((_ extract 15 15) C1) (_ bv0 1)) true) (_ bv15 35) (_ bv14 35)))))
 (let ((?x10812 (ite (and (distinct ((_ extract 17 9) C1) (_ bv0 9)) true) (ite (and (distinct ((_ extract 17 14) C1) (_ bv0 4)) true) ?x8710 ?x19435) (ite (and (distinct ((_ extract 8 5) C1) (_ bv0 4)) true) ?x26486 ?x2365))))
 (let ((?x4637 (ite (and (distinct ((_ extract 20 20) C1) (_ bv0 1)) true) (_ bv20 35) (ite (and (distinct ((_ extract 19 19) C1) (_ bv0 1)) true) (_ bv19 35) (_ bv18 35)))))
 (let ((?x4606 (ite (and (distinct ((_ extract 22 21) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 22 22) C1) (_ bv0 1)) true) (_ bv22 35) (_ bv21 35)) ?x4637)))
 (let ((?x4528 (ite (and (distinct ((_ extract 26 25) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 26 26) C1) (_ bv0 1)) true) (_ bv26 35) (_ bv25 35)) (ite (and (distinct ((_ extract 24 24) C1) (_ bv0 1)) true) (_ bv24 35) (_ bv23 35)))))
 (let ((?x15924 (ite (and (distinct ((_ extract 30 29) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 30 30) C1) (_ bv0 1)) true) (_ bv30 35) (_ bv29 35)) (ite (and (distinct ((_ extract 28 28) C1) (_ bv0 1)) true) (_ bv28 35) (_ bv27 35)))))
 (let ((?x16835 (ite (and (distinct ((_ extract 34 33) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 34 34) C1) (_ bv0 1)) true) (_ bv34 35) (_ bv33 35)) (ite (and (distinct ((_ extract 32 32) C1) (_ bv0 1)) true) (_ bv32 35) (_ bv31 35)))))
 (let ((?x6534 (ite (and (distinct ((_ extract 34 27) C1) (_ bv0 8)) true) (ite (and (distinct ((_ extract 34 31) C1) (_ bv0 4)) true) ?x16835 ?x15924) (ite (and (distinct ((_ extract 26 23) C1) (_ bv0 4)) true) ?x4528 ?x4606))))
 (let ((?x8361 (bvshl (_ bv34359738367 35) (bvadd (ite (and (distinct ((_ extract 34 18) C1) (_ bv0 17)) true) ?x6534 ?x10812) (_ bv1 35)))))
 (let (($x14361 (=> $x462 (= (bvand %Y ?x8361) (_ bv0 35)))))
 (and $x14361 $x8646 $x9394 $x462 false))))))))))))))))))))
(check-sat)
