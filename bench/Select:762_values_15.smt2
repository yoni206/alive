(set-info :status unknown)
(declare-fun C3 () (_ BitVec 11))
(declare-fun C2 () (_ BitVec 11))
(declare-fun C () (_ BitVec 19))
(declare-fun %Op () (_ BitVec 19))
(assert
 (let ((?x15979 (bvsub C2 C3)))
 (let ((?x3410 (ite (and (distinct ((_ extract 2 2) ?x15979) (_ bv0 1)) true) (_ bv2 11) (ite (and (distinct ((_ extract 1 1) ?x15979) (_ bv0 1)) true) (_ bv1 11) (_ bv0 11)))))
 (let ((?x3178 (ite (and (distinct ((_ extract 5 5) ?x15979) (_ bv0 1)) true) (_ bv5 11) (ite (and (distinct ((_ extract 4 4) ?x15979) (_ bv0 1)) true) (_ bv4 11) (_ bv3 11)))))
 (let ((?x2141 (ite (and (distinct ((_ extract 8 8) ?x15979) (_ bv0 1)) true) (_ bv8 11) (ite (and (distinct ((_ extract 7 7) ?x15979) (_ bv0 1)) true) (_ bv7 11) (_ bv6 11)))))
 (let ((?x18078 (ite (and (distinct ((_ extract 10 9) ?x15979) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) ?x15979) (_ bv0 1)) true) (_ bv10 11) (_ bv9 11)) ?x2141)))
 (let ((?x11925 (ite (and (distinct ((_ extract 10 6) ?x15979) (_ bv0 5)) true) ?x18078 (ite (and (distinct ((_ extract 5 3) ?x15979) (_ bv0 3)) true) ?x3178 ?x3410))))
 (let ((?x6847 (ite (and (distinct ((_ extract 2 2) C) (_ bv0 1)) true) (_ bv2 11) (ite (and (distinct ((_ extract 1 1) C) (_ bv0 1)) true) (_ bv1 11) (_ bv0 11)))))
 (let ((?x6160 (ite (and (distinct ((_ extract 4 3) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 4 4) C) (_ bv0 1)) true) (_ bv4 11) (_ bv3 11)) ?x6847)))
 (let ((?x23276 (ite (and (distinct ((_ extract 7 7) C) (_ bv0 1)) true) (_ bv7 11) (ite (and (distinct ((_ extract 6 6) C) (_ bv0 1)) true) (_ bv6 11) (_ bv5 11)))))
 (let ((?x4086 (ite (and (distinct ((_ extract 9 8) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 9 9) C) (_ bv0 1)) true) (_ bv9 11) (_ bv8 11)) ?x23276)))
 (let ((?x20098 (ite (and (distinct ((_ extract 12 12) C) (_ bv0 1)) true) (_ bv12 11) (ite (and (distinct ((_ extract 11 11) C) (_ bv0 1)) true) (_ bv11 11) (_ bv10 11)))))
 (let ((?x216 (ite (and (distinct ((_ extract 14 13) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 14 14) C) (_ bv0 1)) true) (_ bv14 11) (_ bv13 11)) ?x20098)))
 (let ((?x16661 (ite (and (distinct ((_ extract 18 17) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 18 18) C) (_ bv0 1)) true) (_ bv18 11) (_ bv17 11)) (ite (and (distinct ((_ extract 16 16) C) (_ bv0 1)) true) (_ bv16 11) (_ bv15 11)))))
 (let ((?x22102 (ite (and (distinct ((_ extract 18 10) C) (_ bv0 9)) true) (ite (and (distinct ((_ extract 18 15) C) (_ bv0 4)) true) ?x16661 ?x216) (ite (and (distinct ((_ extract 9 5) C) (_ bv0 5)) true) ?x4086 ?x6160))))
 (let ((?x11605 (bvsub ?x22102 ?x11925)))
 (let ((?x11199 (ite (bvsgt (_ bv0 11) ?x11605) (_ bv0 11) ?x11605)))
 (let ((?x23714 (bvsub ?x11925 ?x22102)))
 (let ((?x10726 (ite (bvsgt (_ bv0 11) ?x23714) (_ bv0 11) ?x23714)))
 (let ((?x788 (bvadd (bvxor (bvlshr (bvshl ((_ extract 10 0) (bvand %Op C)) ?x10726) ?x11199) ?x15979) C3)))
 (let (($x3525 (and (distinct (ite (= (ite (= (bvand %Op C) (_ bv0 19)) (_ bv1 1) (_ bv0 1)) (_ bv1 1)) C2 C3) ?x788) true)))
 (let ((?x20324 (ite (and (distinct ((_ extract 2 2) C) (_ bv0 1)) true) (_ bv2 32) (ite (and (distinct ((_ extract 1 1) C) (_ bv0 1)) true) (_ bv1 32) (_ bv0 32)))))
 (let ((?x18020 (ite (and (distinct ((_ extract 4 3) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 4 4) C) (_ bv0 1)) true) (_ bv4 32) (_ bv3 32)) ?x20324)))
 (let ((?x7483 (ite (and (distinct ((_ extract 7 7) C) (_ bv0 1)) true) (_ bv7 32) (ite (and (distinct ((_ extract 6 6) C) (_ bv0 1)) true) (_ bv6 32) (_ bv5 32)))))
 (let ((?x14190 (ite (and (distinct ((_ extract 9 8) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 9 9) C) (_ bv0 1)) true) (_ bv9 32) (_ bv8 32)) ?x7483)))
 (let ((?x3687 (ite (and (distinct ((_ extract 12 12) C) (_ bv0 1)) true) (_ bv12 32) (ite (and (distinct ((_ extract 11 11) C) (_ bv0 1)) true) (_ bv11 32) (_ bv10 32)))))
 (let ((?x3600 (ite (and (distinct ((_ extract 14 13) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 14 14) C) (_ bv0 1)) true) (_ bv14 32) (_ bv13 32)) ?x3687)))
 (let ((?x14717 (ite (and (distinct ((_ extract 18 17) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 18 18) C) (_ bv0 1)) true) (_ bv18 32) (_ bv17 32)) (ite (and (distinct ((_ extract 16 16) C) (_ bv0 1)) true) (_ bv16 32) (_ bv15 32)))))
 (let ((?x1912 (ite (and (distinct ((_ extract 18 10) C) (_ bv0 9)) true) (ite (and (distinct ((_ extract 18 15) C) (_ bv0 4)) true) ?x14717 ?x3600) (ite (and (distinct ((_ extract 9 5) C) (_ bv0 5)) true) ?x14190 ?x18020))))
 (and (and (and (distinct C (_ bv0 19)) true) (= (bvand C (bvsub C (_ bv1 19))) (_ bv0 19))) (and (and (distinct ?x15979 (_ bv0 11)) true) (= (bvand ?x15979 (bvsub ?x15979 (_ bv1 11))) (_ bv0 11))) (bvslt ?x1912 (_ bv11 32)) $x3525))))))))))))))))))))))))))))))
(check-sat)
