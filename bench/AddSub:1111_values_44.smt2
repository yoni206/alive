(set-info :status unknown)
(declare-fun C2 () (_ BitVec 50))
(declare-fun %Y () (_ BitVec 50))
(declare-fun C1 () (_ BitVec 50))
(assert
 (let ((?x2776 (ite (and (distinct ((_ extract 3 2) C2) (_ bv0 2)) true) (ite (and (distinct ((_ extract 3 3) C2) (_ bv0 1)) true) (_ bv3 50) (_ bv2 50)) (ite (and (distinct ((_ extract 1 1) C2) (_ bv0 1)) true) (_ bv1 50) (_ bv0 50)))))
 (let ((?x4697 (ite (and (distinct ((_ extract 6 6) C2) (_ bv0 1)) true) (_ bv6 50) (ite (and (distinct ((_ extract 5 5) C2) (_ bv0 1)) true) (_ bv5 50) (_ bv4 50)))))
 (let ((?x2880 (ite (and (distinct ((_ extract 9 9) C2) (_ bv0 1)) true) (_ bv9 50) (ite (and (distinct ((_ extract 8 8) C2) (_ bv0 1)) true) (_ bv8 50) (_ bv7 50)))))
 (let ((?x5124 (ite (and (distinct ((_ extract 12 12) C2) (_ bv0 1)) true) (_ bv12 50) (ite (and (distinct ((_ extract 11 11) C2) (_ bv0 1)) true) (_ bv11 50) (_ bv10 50)))))
 (let ((?x5327 (ite (and (distinct ((_ extract 12 7) C2) (_ bv0 6)) true) (ite (and (distinct ((_ extract 12 10) C2) (_ bv0 3)) true) ?x5124 ?x2880) (ite (and (distinct ((_ extract 6 4) C2) (_ bv0 3)) true) ?x4697 ?x2776))))
 (let ((?x2302 (ite (and (distinct ((_ extract 15 15) C2) (_ bv0 1)) true) (_ bv15 50) (ite (and (distinct ((_ extract 14 14) C2) (_ bv0 1)) true) (_ bv14 50) (_ bv13 50)))))
 (let ((?x4188 (ite (and (distinct ((_ extract 18 18) C2) (_ bv0 1)) true) (_ bv18 50) (ite (and (distinct ((_ extract 17 17) C2) (_ bv0 1)) true) (_ bv17 50) (_ bv16 50)))))
 (let ((?x2052 (ite (and (distinct ((_ extract 21 21) C2) (_ bv0 1)) true) (_ bv21 50) (ite (and (distinct ((_ extract 20 20) C2) (_ bv0 1)) true) (_ bv20 50) (_ bv19 50)))))
 (let ((?x6036 (ite (and (distinct ((_ extract 24 24) C2) (_ bv0 1)) true) (_ bv24 50) (ite (and (distinct ((_ extract 23 23) C2) (_ bv0 1)) true) (_ bv23 50) (_ bv22 50)))))
 (let ((?x5082 (ite (and (distinct ((_ extract 24 19) C2) (_ bv0 6)) true) (ite (and (distinct ((_ extract 24 22) C2) (_ bv0 3)) true) ?x6036 ?x2052) (ite (and (distinct ((_ extract 18 16) C2) (_ bv0 3)) true) ?x4188 ?x2302))))
 (let ((?x4178 (ite (and (distinct ((_ extract 28 27) C2) (_ bv0 2)) true) (ite (and (distinct ((_ extract 28 28) C2) (_ bv0 1)) true) (_ bv28 50) (_ bv27 50)) (ite (and (distinct ((_ extract 26 26) C2) (_ bv0 1)) true) (_ bv26 50) (_ bv25 50)))))
 (let ((?x6327 (ite (and (distinct ((_ extract 31 31) C2) (_ bv0 1)) true) (_ bv31 50) (ite (and (distinct ((_ extract 30 30) C2) (_ bv0 1)) true) (_ bv30 50) (_ bv29 50)))))
 (let ((?x7033 (ite (and (distinct ((_ extract 34 34) C2) (_ bv0 1)) true) (_ bv34 50) (ite (and (distinct ((_ extract 33 33) C2) (_ bv0 1)) true) (_ bv33 50) (_ bv32 50)))))
 (let ((?x6154 (ite (and (distinct ((_ extract 37 37) C2) (_ bv0 1)) true) (_ bv37 50) (ite (and (distinct ((_ extract 36 36) C2) (_ bv0 1)) true) (_ bv36 50) (_ bv35 50)))))
 (let ((?x6374 (ite (and (distinct ((_ extract 37 32) C2) (_ bv0 6)) true) (ite (and (distinct ((_ extract 37 35) C2) (_ bv0 3)) true) ?x6154 ?x7033) (ite (and (distinct ((_ extract 31 29) C2) (_ bv0 3)) true) ?x6327 ?x4178))))
 (let ((?x4404 (ite (and (distinct ((_ extract 40 40) C2) (_ bv0 1)) true) (_ bv40 50) (ite (and (distinct ((_ extract 39 39) C2) (_ bv0 1)) true) (_ bv39 50) (_ bv38 50)))))
 (let ((?x5238 (ite (and (distinct ((_ extract 43 43) C2) (_ bv0 1)) true) (_ bv43 50) (ite (and (distinct ((_ extract 42 42) C2) (_ bv0 1)) true) (_ bv42 50) (_ bv41 50)))))
 (let ((?x4505 (ite (and (distinct ((_ extract 46 46) C2) (_ bv0 1)) true) (_ bv46 50) (ite (and (distinct ((_ extract 45 45) C2) (_ bv0 1)) true) (_ bv45 50) (_ bv44 50)))))
 (let ((?x7821 (ite (and (distinct ((_ extract 49 49) C2) (_ bv0 1)) true) (_ bv49 50) (ite (and (distinct ((_ extract 48 48) C2) (_ bv0 1)) true) (_ bv48 50) (_ bv47 50)))))
 (let ((?x7541 (ite (and (distinct ((_ extract 49 44) C2) (_ bv0 6)) true) (ite (and (distinct ((_ extract 49 47) C2) (_ bv0 3)) true) ?x7821 ?x4505) (ite (and (distinct ((_ extract 43 41) C2) (_ bv0 3)) true) ?x5238 ?x4404))))
 (let ((?x4019 (ite (and (distinct ((_ extract 49 25) C2) (_ bv0 25)) true) (ite (and (distinct ((_ extract 49 38) C2) (_ bv0 12)) true) ?x7541 ?x6374) (ite (and (distinct ((_ extract 24 13) C2) (_ bv0 12)) true) ?x5082 ?x5327))))
 (let ((?x1502 (bvsub (_ bv50 50) (bvsub (bvsub (_ bv50 50) ?x4019) (_ bv1 50)))))
 (let (($x8866 (and (distinct (bvadd (bvxor %Y C2) C1) (bvashr (bvshl %Y ?x1502) ?x1502)) true)))
 (and (= C1 (bvneg C2)) (and (and (distinct C2 (_ bv0 50)) true) (= (bvand C2 (bvsub C2 (_ bv1 50))) (_ bv0 50))) (not (= (bvand C2 (bvshl (_ bv1125899906842623 50) ?x1502)) (_ bv0 50))) $x8866)))))))))))))))))))))))))
(check-sat)
