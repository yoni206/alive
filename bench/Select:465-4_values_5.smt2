(set-info :status unknown)
(declare-fun %Y () (_ BitVec 11))
(declare-fun C2 () (_ BitVec 11))
(declare-fun C1 () (_ BitVec 13))
(declare-fun %X () (_ BitVec 13))
(assert
 (let ((?x4720 (ite (and (distinct ((_ extract 2 2) C2) (_ bv0 1)) true) (_ bv2 13) (ite (and (distinct ((_ extract 1 1) C2) (_ bv0 1)) true) (_ bv1 13) (_ bv0 13)))))
 (let ((?x3625 (ite (and (distinct ((_ extract 5 5) C2) (_ bv0 1)) true) (_ bv5 13) (ite (and (distinct ((_ extract 4 4) C2) (_ bv0 1)) true) (_ bv4 13) (_ bv3 13)))))
 (let ((?x4602 (ite (and (distinct ((_ extract 8 8) C2) (_ bv0 1)) true) (_ bv8 13) (ite (and (distinct ((_ extract 7 7) C2) (_ bv0 1)) true) (_ bv7 13) (_ bv6 13)))))
 (let ((?x5528 (ite (and (distinct ((_ extract 10 9) C2) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) C2) (_ bv0 1)) true) (_ bv10 13) (_ bv9 13)) ?x4602)))
 (let ((?x1318 (ite (and (distinct ((_ extract 10 6) C2) (_ bv0 5)) true) ?x5528 (ite (and (distinct ((_ extract 5 3) C2) (_ bv0 3)) true) ?x3625 ?x4720))))
 (let ((?x6426 (ite (and (distinct ((_ extract 3 2) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 3 3) C1) (_ bv0 1)) true) (_ bv3 13) (_ bv2 13)) (ite (and (distinct ((_ extract 1 1) C1) (_ bv0 1)) true) (_ bv1 13) (_ bv0 13)))))
 (let ((?x2619 (ite (and (distinct ((_ extract 6 6) C1) (_ bv0 1)) true) (_ bv6 13) (ite (and (distinct ((_ extract 5 5) C1) (_ bv0 1)) true) (_ bv5 13) (_ bv4 13)))))
 (let ((?x2433 (ite (and (distinct ((_ extract 9 9) C1) (_ bv0 1)) true) (_ bv9 13) (ite (and (distinct ((_ extract 8 8) C1) (_ bv0 1)) true) (_ bv8 13) (_ bv7 13)))))
 (let ((?x5573 (ite (and (distinct ((_ extract 12 12) C1) (_ bv0 1)) true) (_ bv12 13) (ite (and (distinct ((_ extract 11 11) C1) (_ bv0 1)) true) (_ bv11 13) (_ bv10 13)))))
 (let ((?x5734 (ite (and (distinct ((_ extract 12 7) C1) (_ bv0 6)) true) (ite (and (distinct ((_ extract 12 10) C1) (_ bv0 3)) true) ?x5573 ?x2433) (ite (and (distinct ((_ extract 6 4) C1) (_ bv0 3)) true) ?x2619 ?x6426))))
 (let ((?x3858 (bvsub ?x5734 ?x1318)))
 (let ((?x1296 (bvand %X C1)))
 (let ((?x5293 (bvor %Y C2)))
 (let (($x1535 (and (distinct (ite (= (ite (and (distinct ?x1296 (_ bv0 13)) true) (_ bv1 1) (_ bv0 1)) (_ bv1 1)) %Y ?x5293) (bvor (bvxor ((_ extract 10 0) (bvlshr ?x1296 ?x3858)) C2) %Y)) true)))
 (let ((?x5668 (ite (and (distinct ((_ extract 3 2) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 3 3) C1) (_ bv0 1)) true) (_ bv3 32) (_ bv2 32)) (ite (and (distinct ((_ extract 1 1) C1) (_ bv0 1)) true) (_ bv1 32) (_ bv0 32)))))
 (let ((?x6497 (ite (and (distinct ((_ extract 6 6) C1) (_ bv0 1)) true) (_ bv6 32) (ite (and (distinct ((_ extract 5 5) C1) (_ bv0 1)) true) (_ bv5 32) (_ bv4 32)))))
 (let ((?x5901 (ite (and (distinct ((_ extract 9 9) C1) (_ bv0 1)) true) (_ bv9 32) (ite (and (distinct ((_ extract 8 8) C1) (_ bv0 1)) true) (_ bv8 32) (_ bv7 32)))))
 (let ((?x2104 (ite (and (distinct ((_ extract 12 12) C1) (_ bv0 1)) true) (_ bv12 32) (ite (and (distinct ((_ extract 11 11) C1) (_ bv0 1)) true) (_ bv11 32) (_ bv10 32)))))
 (let ((?x6202 (ite (and (distinct ((_ extract 12 7) C1) (_ bv0 6)) true) (ite (and (distinct ((_ extract 12 10) C1) (_ bv0 3)) true) ?x2104 ?x5901) (ite (and (distinct ((_ extract 6 4) C1) (_ bv0 3)) true) ?x6497 ?x5668))))
 (let ((?x5063 (ite (and (distinct ((_ extract 2 2) C2) (_ bv0 1)) true) (_ bv2 32) (ite (and (distinct ((_ extract 1 1) C2) (_ bv0 1)) true) (_ bv1 32) (_ bv0 32)))))
 (let ((?x2864 (ite (and (distinct ((_ extract 5 5) C2) (_ bv0 1)) true) (_ bv5 32) (ite (and (distinct ((_ extract 4 4) C2) (_ bv0 1)) true) (_ bv4 32) (_ bv3 32)))))
 (let ((?x3247 (ite (and (distinct ((_ extract 8 8) C2) (_ bv0 1)) true) (_ bv8 32) (ite (and (distinct ((_ extract 7 7) C2) (_ bv0 1)) true) (_ bv7 32) (_ bv6 32)))))
 (let ((?x3806 (ite (and (distinct ((_ extract 10 9) C2) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) C2) (_ bv0 1)) true) (_ bv10 32) (_ bv9 32)) ?x3247)))
 (let ((?x6217 (ite (and (distinct ((_ extract 10 6) C2) (_ bv0 5)) true) ?x3806 (ite (and (distinct ((_ extract 5 3) C2) (_ bv0 3)) true) ?x2864 ?x5063))))
 (and (and (and (distinct C1 (_ bv0 13)) true) (= (bvand C1 (bvsub C1 (_ bv1 13))) (_ bv0 13))) (and (and (distinct C2 (_ bv0 11)) true) (= (bvand C2 (bvsub C2 (_ bv1 11))) (_ bv0 11))) (bvslt ?x6217 ?x6202) $x1535))))))))))))))))))))))))))
(check-sat)
