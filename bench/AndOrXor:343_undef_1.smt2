(set-info :status unknown)
(declare-fun |ana_MaskedValueIsZero(%B, ((1 << (width(C2) - countLeadingZeros(((C2 - 1) ^ C2)))) - 1))| () (_ BitVec 1))
(declare-fun C2 () (_ BitVec 8))
(declare-fun C1 () (_ BitVec 8))
(declare-fun %B () (_ BitVec 8))
(assert
 (let (($x5440 (= |ana_MaskedValueIsZero(%B, ((1 << (width(C2) - countLeadingZeros(((C2 - 1) ^ C2)))) - 1))| (_ bv1 1))))
 (let ((?x6261 (bvor (bvsub C2 (_ bv1 8)) C2)))
 (let (($x3017 (and (and (distinct ?x6261 (_ bv0 8)) true) (= (bvand (bvadd ?x6261 (_ bv1 8)) ?x6261) (_ bv0 8)) $x5440)))
 (let (($x11113 (or (= (bvand (bvadd C2 (_ bv1 8)) (bvsub (bvadd C2 (_ bv1 8)) (_ bv1 8))) (_ bv0 8)) $x3017)))
 (let ((?x2925 (ite (= ((_ extract 1 1) (bvxor (bvsub C2 (_ bv1 8)) C2)) (_ bv1 1)) (_ bv6 8) (ite (= ((_ extract 0 0) (bvxor (bvsub C2 (_ bv1 8)) C2)) (_ bv1 1)) (_ bv7 8) (_ bv8 8)))))
 (let ((?x15478 (ite (= ((_ extract 3 3) (bvxor (bvsub C2 (_ bv1 8)) C2)) (_ bv1 1)) (_ bv4 8) (ite (= ((_ extract 2 2) (bvxor (bvsub C2 (_ bv1 8)) C2)) (_ bv1 1)) (_ bv5 8) ?x2925))))
 (let ((?x15294 (ite (= ((_ extract 5 5) (bvxor (bvsub C2 (_ bv1 8)) C2)) (_ bv1 1)) (_ bv2 8) (ite (= ((_ extract 4 4) (bvxor (bvsub C2 (_ bv1 8)) C2)) (_ bv1 1)) (_ bv3 8) ?x15478))))
 (let ((?x4767 (ite (= ((_ extract 7 7) (bvxor (bvsub C2 (_ bv1 8)) C2)) (_ bv1 1)) (_ bv0 8) (ite (= ((_ extract 6 6) (bvxor (bvsub C2 (_ bv1 8)) C2)) (_ bv1 1)) (_ bv1 8) ?x15294))))
 (let (($x16298 (=> $x5440 (= (bvand %B (bvsub (bvshl (_ bv1 8) (bvsub (_ bv8 8) ?x4767)) (_ bv1 8))) (_ bv0 8)))))
 (and $x16298 (= (bvand C1 C2) C2) $x11113 false)))))))))))
(check-sat)
