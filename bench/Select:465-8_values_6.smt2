(set-info :status unknown)
(declare-fun %Y () (_ BitVec 11))
(declare-fun C2 () (_ BitVec 11))
(declare-fun C1 () (_ BitVec 7))
(declare-fun %X () (_ BitVec 7))
(assert
 (let ((?x17887 (ite (and (distinct ((_ extract 2 2) C2) (_ bv0 1)) true) (_ bv2 7) (ite (and (distinct ((_ extract 1 1) C2) (_ bv0 1)) true) (_ bv1 7) (_ bv0 7)))))
 (let ((?x11076 (ite (and (distinct ((_ extract 5 5) C2) (_ bv0 1)) true) (_ bv5 7) (ite (and (distinct ((_ extract 4 4) C2) (_ bv0 1)) true) (_ bv4 7) (_ bv3 7)))))
 (let ((?x11069 (ite (and (distinct ((_ extract 8 8) C2) (_ bv0 1)) true) (_ bv8 7) (ite (and (distinct ((_ extract 7 7) C2) (_ bv0 1)) true) (_ bv7 7) (_ bv6 7)))))
 (let ((?x9111 (ite (and (distinct ((_ extract 10 9) C2) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) C2) (_ bv0 1)) true) (_ bv10 7) (_ bv9 7)) ?x11069)))
 (let ((?x10863 (ite (and (distinct ((_ extract 10 6) C2) (_ bv0 5)) true) ?x9111 (ite (and (distinct ((_ extract 5 3) C2) (_ bv0 3)) true) ?x11076 ?x17887))))
 (let ((?x7949 (ite (and (distinct ((_ extract 3 2) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 3 3) C1) (_ bv0 1)) true) (_ bv3 7) (_ bv2 7)) (ite (and (distinct ((_ extract 1 1) C1) (_ bv0 1)) true) (_ bv1 7) (_ bv0 7)))))
 (let ((?x13668 (ite (and (distinct ((_ extract 6 6) C1) (_ bv0 1)) true) (_ bv6 7) (ite (and (distinct ((_ extract 5 5) C1) (_ bv0 1)) true) (_ bv5 7) (_ bv4 7)))))
 (let ((?x9035 (bvsub (ite (and (distinct ((_ extract 6 4) C1) (_ bv0 3)) true) ?x13668 ?x7949) ?x10863)))
 (let ((?x8011 (bvand %X C1)))
 (let ((?x8770 (bvor %Y C2)))
 (let (($x8755 (and (distinct (ite (= (ite (and (distinct ?x8011 (_ bv0 7)) true) (_ bv1 1) (_ bv0 1)) (_ bv1 1)) ?x8770 %Y) (bvor ((_ zero_extend 4) (bvlshr ?x8011 ?x9035)) %Y)) true)))
 (let ((?x7055 (ite (and (distinct ((_ extract 3 2) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 3 3) C1) (_ bv0 1)) true) (_ bv3 32) (_ bv2 32)) (ite (and (distinct ((_ extract 1 1) C1) (_ bv0 1)) true) (_ bv1 32) (_ bv0 32)))))
 (let ((?x18532 (ite (and (distinct ((_ extract 6 6) C1) (_ bv0 1)) true) (_ bv6 32) (ite (and (distinct ((_ extract 5 5) C1) (_ bv0 1)) true) (_ bv5 32) (_ bv4 32)))))
 (let ((?x11735 (ite (and (distinct ((_ extract 2 2) C2) (_ bv0 1)) true) (_ bv2 32) (ite (and (distinct ((_ extract 1 1) C2) (_ bv0 1)) true) (_ bv1 32) (_ bv0 32)))))
 (let ((?x12960 (ite (and (distinct ((_ extract 5 5) C2) (_ bv0 1)) true) (_ bv5 32) (ite (and (distinct ((_ extract 4 4) C2) (_ bv0 1)) true) (_ bv4 32) (_ bv3 32)))))
 (let ((?x5279 (ite (and (distinct ((_ extract 8 8) C2) (_ bv0 1)) true) (_ bv8 32) (ite (and (distinct ((_ extract 7 7) C2) (_ bv0 1)) true) (_ bv7 32) (_ bv6 32)))))
 (let ((?x23534 (ite (and (distinct ((_ extract 10 9) C2) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) C2) (_ bv0 1)) true) (_ bv10 32) (_ bv9 32)) ?x5279)))
 (let ((?x11995 (ite (and (distinct ((_ extract 10 6) C2) (_ bv0 5)) true) ?x23534 (ite (and (distinct ((_ extract 5 3) C2) (_ bv0 3)) true) ?x12960 ?x11735))))
 (and (and (and (distinct C1 (_ bv0 7)) true) (= (bvand C1 (bvsub C1 (_ bv1 7))) (_ bv0 7))) (and (and (distinct C2 (_ bv0 11)) true) (= (bvand C2 (bvsub C2 (_ bv1 11))) (_ bv0 11))) (bvslt ?x11995 (ite (and (distinct ((_ extract 6 4) C1) (_ bv0 3)) true) ?x18532 ?x7055)) $x8755))))))))))))))))))))
(check-sat)
