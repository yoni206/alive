(set-info :status unknown)
(declare-fun C2 () (_ BitVec 33))
(declare-fun C1 () (_ BitVec 33))
(assert
 (let ((?x793 (ite (and (distinct ((_ extract 2 2) C2) (_ bv0 1)) true) (_ bv2 33) (ite (and (distinct ((_ extract 1 1) C2) (_ bv0 1)) true) (_ bv1 33) (_ bv0 33)))))
 (let ((?x3719 (ite (and (distinct ((_ extract 4 3) C2) (_ bv0 2)) true) (ite (and (distinct ((_ extract 4 4) C2) (_ bv0 1)) true) (_ bv4 33) (_ bv3 33)) ?x793)))
 (let ((?x442 (ite (and (distinct ((_ extract 8 7) C2) (_ bv0 2)) true) (ite (and (distinct ((_ extract 8 8) C2) (_ bv0 1)) true) (_ bv8 33) (_ bv7 33)) (ite (and (distinct ((_ extract 6 6) C2) (_ bv0 1)) true) (_ bv6 33) (_ bv5 33)))))
 (let ((?x3973 (ite (and (distinct ((_ extract 12 11) C2) (_ bv0 2)) true) (ite (and (distinct ((_ extract 12 12) C2) (_ bv0 1)) true) (_ bv12 33) (_ bv11 33)) (ite (and (distinct ((_ extract 10 10) C2) (_ bv0 1)) true) (_ bv10 33) (_ bv9 33)))))
 (let ((?x5203 (ite (and (distinct ((_ extract 16 15) C2) (_ bv0 2)) true) (ite (and (distinct ((_ extract 16 16) C2) (_ bv0 1)) true) (_ bv16 33) (_ bv15 33)) (ite (and (distinct ((_ extract 14 14) C2) (_ bv0 1)) true) (_ bv14 33) (_ bv13 33)))))
 (let ((?x4802 (ite (and (distinct ((_ extract 16 9) C2) (_ bv0 8)) true) (ite (and (distinct ((_ extract 16 13) C2) (_ bv0 4)) true) ?x5203 ?x3973) (ite (and (distinct ((_ extract 8 5) C2) (_ bv0 4)) true) ?x442 ?x3719))))
 (let ((?x1468 (ite (and (distinct ((_ extract 20 19) C2) (_ bv0 2)) true) (ite (and (distinct ((_ extract 20 20) C2) (_ bv0 1)) true) (_ bv20 33) (_ bv19 33)) (ite (and (distinct ((_ extract 18 18) C2) (_ bv0 1)) true) (_ bv18 33) (_ bv17 33)))))
 (let ((?x2880 (ite (and (distinct ((_ extract 24 23) C2) (_ bv0 2)) true) (ite (and (distinct ((_ extract 24 24) C2) (_ bv0 1)) true) (_ bv24 33) (_ bv23 33)) (ite (and (distinct ((_ extract 22 22) C2) (_ bv0 1)) true) (_ bv22 33) (_ bv21 33)))))
 (let ((?x1219 (ite (and (distinct ((_ extract 28 27) C2) (_ bv0 2)) true) (ite (and (distinct ((_ extract 28 28) C2) (_ bv0 1)) true) (_ bv28 33) (_ bv27 33)) (ite (and (distinct ((_ extract 26 26) C2) (_ bv0 1)) true) (_ bv26 33) (_ bv25 33)))))
 (let ((?x2678 (ite (and (distinct ((_ extract 32 31) C2) (_ bv0 2)) true) (ite (and (distinct ((_ extract 32 32) C2) (_ bv0 1)) true) (_ bv32 33) (_ bv31 33)) (ite (and (distinct ((_ extract 30 30) C2) (_ bv0 1)) true) (_ bv30 33) (_ bv29 33)))))
 (let ((?x5177 (ite (and (distinct ((_ extract 32 25) C2) (_ bv0 8)) true) (ite (and (distinct ((_ extract 32 29) C2) (_ bv0 4)) true) ?x2678 ?x1219) (ite (and (distinct ((_ extract 24 21) C2) (_ bv0 4)) true) ?x2880 ?x1468))))
 (let ((?x5159 (bvsub (bvsub (_ bv33 33) (ite (and (distinct ((_ extract 32 17) C2) (_ bv0 16)) true) ?x5177 ?x4802)) (_ bv1 33))))
 (let ((?x4201 (bvsub (_ bv33 33) ?x5159)))
 (and (= C1 (bvneg C2)) (and (and (distinct C2 (_ bv0 33)) true) (= (bvand C2 (bvsub C2 (_ bv1 33))) (_ bv0 33))) (not (= (bvand C2 (bvshl (_ bv8589934591 33) ?x4201)) (_ bv0 33))) false)))))))))))))))
(check-sat)
