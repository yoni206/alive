(set-info :status unknown)
(declare-fun C () (_ BitVec 45))
(declare-fun C3 () (_ BitVec 11))
(declare-fun C2 () (_ BitVec 11))
(assert
 (let ((?x21264 (ite (and (distinct ((_ extract 2 2) C) (_ bv0 1)) true) (_ bv2 32) (ite (and (distinct ((_ extract 1 1) C) (_ bv0 1)) true) (_ bv1 32) (_ bv0 32)))))
 (let ((?x17082 (ite (and (distinct ((_ extract 5 5) C) (_ bv0 1)) true) (_ bv5 32) (ite (and (distinct ((_ extract 4 4) C) (_ bv0 1)) true) (_ bv4 32) (_ bv3 32)))))
 (let ((?x13781 (ite (and (distinct ((_ extract 8 8) C) (_ bv0 1)) true) (_ bv8 32) (ite (and (distinct ((_ extract 7 7) C) (_ bv0 1)) true) (_ bv7 32) (_ bv6 32)))))
 (let ((?x12257 (ite (and (distinct ((_ extract 11 11) C) (_ bv0 1)) true) (_ bv11 32) (ite (and (distinct ((_ extract 10 10) C) (_ bv0 1)) true) (_ bv10 32) (_ bv9 32)))))
 (let ((?x24237 (ite (and (distinct ((_ extract 11 6) C) (_ bv0 6)) true) (ite (and (distinct ((_ extract 11 9) C) (_ bv0 3)) true) ?x12257 ?x13781) (ite (and (distinct ((_ extract 5 3) C) (_ bv0 3)) true) ?x17082 ?x21264))))
 (let ((?x10785 (ite (and (distinct ((_ extract 14 14) C) (_ bv0 1)) true) (_ bv14 32) (ite (and (distinct ((_ extract 13 13) C) (_ bv0 1)) true) (_ bv13 32) (_ bv12 32)))))
 (let ((?x9151 (ite (and (distinct ((_ extract 17 17) C) (_ bv0 1)) true) (_ bv17 32) (ite (and (distinct ((_ extract 16 16) C) (_ bv0 1)) true) (_ bv16 32) (_ bv15 32)))))
 (let ((?x11455 (ite (and (distinct ((_ extract 20 20) C) (_ bv0 1)) true) (_ bv20 32) (ite (and (distinct ((_ extract 19 19) C) (_ bv0 1)) true) (_ bv19 32) (_ bv18 32)))))
 (let ((?x8406 (ite (and (distinct ((_ extract 22 21) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 22 22) C) (_ bv0 1)) true) (_ bv22 32) (_ bv21 32)) ?x11455)))
 (let ((?x10272 (ite (and (distinct ((_ extract 22 18) C) (_ bv0 5)) true) ?x8406 (ite (and (distinct ((_ extract 17 15) C) (_ bv0 3)) true) ?x9151 ?x10785))))
 (let ((?x3787 (ite (and (distinct ((_ extract 25 25) C) (_ bv0 1)) true) (_ bv25 32) (ite (and (distinct ((_ extract 24 24) C) (_ bv0 1)) true) (_ bv24 32) (_ bv23 32)))))
 (let ((?x843 (ite (and (distinct ((_ extract 28 28) C) (_ bv0 1)) true) (_ bv28 32) (ite (and (distinct ((_ extract 27 27) C) (_ bv0 1)) true) (_ bv27 32) (_ bv26 32)))))
 (let ((?x8142 (ite (and (distinct ((_ extract 31 31) C) (_ bv0 1)) true) (_ bv31 32) (ite (and (distinct ((_ extract 30 30) C) (_ bv0 1)) true) (_ bv30 32) (_ bv29 32)))))
 (let ((?x10188 (ite (and (distinct ((_ extract 33 32) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 33 33) C) (_ bv0 1)) true) (_ bv33 32) (_ bv32 32)) ?x8142)))
 (let ((?x4867 (ite (and (distinct ((_ extract 33 29) C) (_ bv0 5)) true) ?x10188 (ite (and (distinct ((_ extract 28 26) C) (_ bv0 3)) true) ?x843 ?x3787))))
 (let ((?x18865 (ite (and (distinct ((_ extract 36 36) C) (_ bv0 1)) true) (_ bv36 32) (ite (and (distinct ((_ extract 35 35) C) (_ bv0 1)) true) (_ bv35 32) (_ bv34 32)))))
 (let ((?x11920 (ite (and (distinct ((_ extract 39 39) C) (_ bv0 1)) true) (_ bv39 32) (ite (and (distinct ((_ extract 38 38) C) (_ bv0 1)) true) (_ bv38 32) (_ bv37 32)))))
 (let ((?x11103 (ite (and (distinct ((_ extract 42 42) C) (_ bv0 1)) true) (_ bv42 32) (ite (and (distinct ((_ extract 41 41) C) (_ bv0 1)) true) (_ bv41 32) (_ bv40 32)))))
 (let ((?x10501 (ite (and (distinct ((_ extract 44 43) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 44 44) C) (_ bv0 1)) true) (_ bv44 32) (_ bv43 32)) ?x11103)))
 (let ((?x3669 (ite (and (distinct ((_ extract 44 40) C) (_ bv0 5)) true) ?x10501 (ite (and (distinct ((_ extract 39 37) C) (_ bv0 3)) true) ?x11920 ?x18865))))
 (let ((?x21736 (ite (and (distinct ((_ extract 44 23) C) (_ bv0 22)) true) (ite (and (distinct ((_ extract 44 34) C) (_ bv0 11)) true) ?x3669 ?x4867) (ite (and (distinct ((_ extract 22 12) C) (_ bv0 11)) true) ?x10272 ?x24237))))
 (let (($x9424 (and (and (distinct (bvsub C2 C3) (_ bv0 11)) true) (= (bvand (bvsub C2 C3) (bvsub (bvsub C2 C3) (_ bv1 11))) (_ bv0 11)))))
 (and (and (and (distinct C (_ bv0 45)) true) (= (bvand C (bvsub C (_ bv1 45))) (_ bv0 45))) $x9424 (bvslt ?x21736 (_ bv11 32)) false))))))))))))))))))))))))
(check-sat)
