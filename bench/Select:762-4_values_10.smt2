(set-info :status unknown)
(declare-fun C2 () (_ BitVec 11))
(declare-fun C3 () (_ BitVec 11))
(declare-fun C () (_ BitVec 15))
(declare-fun %Op () (_ BitVec 15))
(assert
 (let ((?x2633 (bvsub C3 C2)))
 (let ((?x6775 (ite (and (distinct ((_ extract 2 2) ?x2633) (_ bv0 1)) true) (_ bv2 11) (ite (and (distinct ((_ extract 1 1) ?x2633) (_ bv0 1)) true) (_ bv1 11) (_ bv0 11)))))
 (let ((?x1784 (ite (and (distinct ((_ extract 5 5) ?x2633) (_ bv0 1)) true) (_ bv5 11) (ite (and (distinct ((_ extract 4 4) ?x2633) (_ bv0 1)) true) (_ bv4 11) (_ bv3 11)))))
 (let ((?x5658 (ite (and (distinct ((_ extract 8 8) ?x2633) (_ bv0 1)) true) (_ bv8 11) (ite (and (distinct ((_ extract 7 7) ?x2633) (_ bv0 1)) true) (_ bv7 11) (_ bv6 11)))))
 (let ((?x5214 (ite (and (distinct ((_ extract 10 9) ?x2633) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) ?x2633) (_ bv0 1)) true) (_ bv10 11) (_ bv9 11)) ?x5658)))
 (let ((?x3343 (ite (and (distinct ((_ extract 10 6) ?x2633) (_ bv0 5)) true) ?x5214 (ite (and (distinct ((_ extract 5 3) ?x2633) (_ bv0 3)) true) ?x1784 ?x6775))))
 (let ((?x3434 (ite (and (distinct ((_ extract 3 2) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 3 3) C) (_ bv0 1)) true) (_ bv3 11) (_ bv2 11)) (ite (and (distinct ((_ extract 1 1) C) (_ bv0 1)) true) (_ bv1 11) (_ bv0 11)))))
 (let ((?x6992 (ite (and (distinct ((_ extract 7 6) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 7 7) C) (_ bv0 1)) true) (_ bv7 11) (_ bv6 11)) (ite (and (distinct ((_ extract 5 5) C) (_ bv0 1)) true) (_ bv5 11) (_ bv4 11)))))
 (let ((?x7131 (ite (and (distinct ((_ extract 11 10) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 11 11) C) (_ bv0 1)) true) (_ bv11 11) (_ bv10 11)) (ite (and (distinct ((_ extract 9 9) C) (_ bv0 1)) true) (_ bv9 11) (_ bv8 11)))))
 (let ((?x5191 (ite (and (distinct ((_ extract 14 14) C) (_ bv0 1)) true) (_ bv14 11) (ite (and (distinct ((_ extract 13 13) C) (_ bv0 1)) true) (_ bv13 11) (_ bv12 11)))))
 (let ((?x5888 (ite (and (distinct ((_ extract 14 8) C) (_ bv0 7)) true) (ite (and (distinct ((_ extract 14 12) C) (_ bv0 3)) true) ?x5191 ?x7131) (ite (and (distinct ((_ extract 7 4) C) (_ bv0 4)) true) ?x6992 ?x3434))))
 (let ((?x4266 (bvsub ?x5888 ?x3343)))
 (let ((?x8374 (ite (bvsgt (_ bv0 11) ?x4266) (_ bv0 11) ?x4266)))
 (let ((?x6388 (bvsub ?x3343 ?x5888)))
 (let ((?x4482 (ite (bvsgt (_ bv0 11) ?x6388) (_ bv0 11) ?x6388)))
 (let ((?x5293 (bvadd (bvxor (bvlshr (bvshl ((_ extract 10 0) (bvand %Op C)) ?x4482) ?x8374) ?x2633) C2)))
 (let ((?x2093 (ite (= (ite (and (distinct (bvand %Op C) (_ bv0 15)) true) (_ bv1 1) (_ bv0 1)) (_ bv1 1)) C2 C3)))
 (let ((?x5073 (ite (and (distinct ((_ extract 3 2) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 3 3) C) (_ bv0 1)) true) (_ bv3 32) (_ bv2 32)) (ite (and (distinct ((_ extract 1 1) C) (_ bv0 1)) true) (_ bv1 32) (_ bv0 32)))))
 (let ((?x3474 (ite (and (distinct ((_ extract 7 6) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 7 7) C) (_ bv0 1)) true) (_ bv7 32) (_ bv6 32)) (ite (and (distinct ((_ extract 5 5) C) (_ bv0 1)) true) (_ bv5 32) (_ bv4 32)))))
 (let ((?x2122 (ite (and (distinct ((_ extract 11 10) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 11 11) C) (_ bv0 1)) true) (_ bv11 32) (_ bv10 32)) (ite (and (distinct ((_ extract 9 9) C) (_ bv0 1)) true) (_ bv9 32) (_ bv8 32)))))
 (let ((?x1397 (ite (and (distinct ((_ extract 14 14) C) (_ bv0 1)) true) (_ bv14 32) (ite (and (distinct ((_ extract 13 13) C) (_ bv0 1)) true) (_ bv13 32) (_ bv12 32)))))
 (let ((?x6727 (ite (and (distinct ((_ extract 14 8) C) (_ bv0 7)) true) (ite (and (distinct ((_ extract 14 12) C) (_ bv0 3)) true) ?x1397 ?x2122) (ite (and (distinct ((_ extract 7 4) C) (_ bv0 4)) true) ?x3474 ?x5073))))
 (and (and (and (distinct C (_ bv0 15)) true) (= (bvand C (bvsub C (_ bv1 15))) (_ bv0 15))) (and (and (distinct ?x2633 (_ bv0 11)) true) (= (bvand ?x2633 (bvsub ?x2633 (_ bv1 11))) (_ bv0 11))) (bvslt ?x6727 (_ bv11 32)) (and (distinct ?x2093 ?x5293) true)))))))))))))))))))))))))
(check-sat)
