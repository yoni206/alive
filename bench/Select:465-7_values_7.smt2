(set-info :status unknown)
(declare-fun %Y () (_ BitVec 11))
(declare-fun C2 () (_ BitVec 11))
(declare-fun C1 () (_ BitVec 15))
(declare-fun %X () (_ BitVec 15))
(assert
 (let ((?x1724 (ite (and (distinct ((_ extract 2 2) C2) (_ bv0 1)) true) (_ bv2 15) (ite (and (distinct ((_ extract 1 1) C2) (_ bv0 1)) true) (_ bv1 15) (_ bv0 15)))))
 (let ((?x1623 (ite (and (distinct ((_ extract 5 5) C2) (_ bv0 1)) true) (_ bv5 15) (ite (and (distinct ((_ extract 4 4) C2) (_ bv0 1)) true) (_ bv4 15) (_ bv3 15)))))
 (let ((?x5533 (ite (and (distinct ((_ extract 8 8) C2) (_ bv0 1)) true) (_ bv8 15) (ite (and (distinct ((_ extract 7 7) C2) (_ bv0 1)) true) (_ bv7 15) (_ bv6 15)))))
 (let ((?x6770 (ite (and (distinct ((_ extract 10 9) C2) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) C2) (_ bv0 1)) true) (_ bv10 15) (_ bv9 15)) ?x5533)))
 (let ((?x6236 (ite (and (distinct ((_ extract 10 6) C2) (_ bv0 5)) true) ?x6770 (ite (and (distinct ((_ extract 5 3) C2) (_ bv0 3)) true) ?x1623 ?x1724))))
 (let ((?x4453 (ite (and (distinct ((_ extract 3 2) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 3 3) C1) (_ bv0 1)) true) (_ bv3 15) (_ bv2 15)) (ite (and (distinct ((_ extract 1 1) C1) (_ bv0 1)) true) (_ bv1 15) (_ bv0 15)))))
 (let ((?x6706 (ite (and (distinct ((_ extract 7 6) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 7 7) C1) (_ bv0 1)) true) (_ bv7 15) (_ bv6 15)) (ite (and (distinct ((_ extract 5 5) C1) (_ bv0 1)) true) (_ bv5 15) (_ bv4 15)))))
 (let ((?x2329 (ite (and (distinct ((_ extract 11 10) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 11 11) C1) (_ bv0 1)) true) (_ bv11 15) (_ bv10 15)) (ite (and (distinct ((_ extract 9 9) C1) (_ bv0 1)) true) (_ bv9 15) (_ bv8 15)))))
 (let ((?x3890 (ite (and (distinct ((_ extract 14 14) C1) (_ bv0 1)) true) (_ bv14 15) (ite (and (distinct ((_ extract 13 13) C1) (_ bv0 1)) true) (_ bv13 15) (_ bv12 15)))))
 (let ((?x2847 (ite (and (distinct ((_ extract 14 8) C1) (_ bv0 7)) true) (ite (and (distinct ((_ extract 14 12) C1) (_ bv0 3)) true) ?x3890 ?x2329) (ite (and (distinct ((_ extract 7 4) C1) (_ bv0 4)) true) ?x6706 ?x4453))))
 (let ((?x1628 (bvsub ?x2847 ?x6236)))
 (let ((?x5064 (bvand %X C1)))
 (let (($x2215 (and (distinct (ite (= (ite (= ?x5064 (_ bv0 15)) (_ bv1 1) (_ bv0 1)) (_ bv1 1)) (bvor %Y C2) %Y) (bvor (bvxor ((_ extract 10 0) (bvlshr ?x5064 ?x1628)) C2) %Y)) true)))
 (let ((?x5794 (ite (and (distinct ((_ extract 3 2) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 3 3) C1) (_ bv0 1)) true) (_ bv3 32) (_ bv2 32)) (ite (and (distinct ((_ extract 1 1) C1) (_ bv0 1)) true) (_ bv1 32) (_ bv0 32)))))
 (let ((?x6492 (ite (and (distinct ((_ extract 7 6) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 7 7) C1) (_ bv0 1)) true) (_ bv7 32) (_ bv6 32)) (ite (and (distinct ((_ extract 5 5) C1) (_ bv0 1)) true) (_ bv5 32) (_ bv4 32)))))
 (let ((?x6649 (ite (and (distinct ((_ extract 11 10) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 11 11) C1) (_ bv0 1)) true) (_ bv11 32) (_ bv10 32)) (ite (and (distinct ((_ extract 9 9) C1) (_ bv0 1)) true) (_ bv9 32) (_ bv8 32)))))
 (let ((?x6654 (ite (and (distinct ((_ extract 14 14) C1) (_ bv0 1)) true) (_ bv14 32) (ite (and (distinct ((_ extract 13 13) C1) (_ bv0 1)) true) (_ bv13 32) (_ bv12 32)))))
 (let ((?x1851 (ite (and (distinct ((_ extract 14 8) C1) (_ bv0 7)) true) (ite (and (distinct ((_ extract 14 12) C1) (_ bv0 3)) true) ?x6654 ?x6649) (ite (and (distinct ((_ extract 7 4) C1) (_ bv0 4)) true) ?x6492 ?x5794))))
 (let ((?x1173 (ite (and (distinct ((_ extract 2 2) C2) (_ bv0 1)) true) (_ bv2 32) (ite (and (distinct ((_ extract 1 1) C2) (_ bv0 1)) true) (_ bv1 32) (_ bv0 32)))))
 (let ((?x4412 (ite (and (distinct ((_ extract 5 5) C2) (_ bv0 1)) true) (_ bv5 32) (ite (and (distinct ((_ extract 4 4) C2) (_ bv0 1)) true) (_ bv4 32) (_ bv3 32)))))
 (let ((?x4431 (ite (and (distinct ((_ extract 8 8) C2) (_ bv0 1)) true) (_ bv8 32) (ite (and (distinct ((_ extract 7 7) C2) (_ bv0 1)) true) (_ bv7 32) (_ bv6 32)))))
 (let ((?x4848 (ite (and (distinct ((_ extract 10 9) C2) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) C2) (_ bv0 1)) true) (_ bv10 32) (_ bv9 32)) ?x4431)))
 (let ((?x4165 (ite (and (distinct ((_ extract 10 6) C2) (_ bv0 5)) true) ?x4848 (ite (and (distinct ((_ extract 5 3) C2) (_ bv0 3)) true) ?x4412 ?x1173))))
 (and (and (and (distinct C1 (_ bv0 15)) true) (= (bvand C1 (bvsub C1 (_ bv1 15))) (_ bv0 15))) (and (and (distinct C2 (_ bv0 11)) true) (= (bvand C2 (bvsub C2 (_ bv1 11))) (_ bv0 11))) (bvslt ?x4165 ?x1851) $x2215)))))))))))))))))))))))))
(check-sat)
