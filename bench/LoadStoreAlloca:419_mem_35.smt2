(set-info :status unknown)
(declare-fun mem0 () (_ BitVec 8))
(declare-fun %x () (_ BitVec 36))
(declare-fun %p1 () (_ BitVec 64))
(declare-fun idx () (_ BitVec 64))
(declare-fun |ana_equivalentAddressValues(%p1, %p2)| () (_ BitVec 1))
(declare-fun %p2 () (_ BitVec 64))
(assert
 (let ((?x10824 (concat ((_ extract 7 4) mem0) ((_ extract 3 0) %x))))
 (let ((?x11100 (ite (and (and (distinct %p1 (_ bv0 64)) true) (or true true) (= idx %p1)) ?x10824 mem0)))
 (let ((?x24966 ((_ extract 11 4) %x)))
 (let (($x5280 (or true true)))
 (let (($x11770 (and (distinct %p1 (_ bv0 64)) true)))
 (let ((?x15249 (ite (and $x11770 $x5280 (= idx (bvadd (bvadd %p1 (_ bv1 64)) (_ bv0 64)))) ?x24966 ?x11100)))
 (let ((?x21669 ((_ extract 19 12) %x)))
 (let ((?x7310 (ite (and $x11770 $x5280 (= idx (bvadd (bvadd %p1 (_ bv1 64)) (_ bv1 64)))) ?x21669 ?x15249)))
 (let ((?x6091 ((_ extract 27 20) %x)))
 (let ((?x5739 (ite (and $x11770 $x5280 (= idx (bvadd (bvadd %p1 (_ bv1 64)) (_ bv2 64)))) ?x6091 ?x7310)))
 (let ((?x12905 ((_ extract 35 28) %x)))
 (let ((?x1038 (ite (and $x11770 $x5280 (= idx (bvadd (bvadd %p1 (_ bv1 64)) (_ bv3 64)))) ?x12905 ?x5739)))
 (let (($x1835 (= |ana_equivalentAddressValues(%p1, %p2)| (_ bv1 1))))
 (and (=> $x1835 (= %p1 %p2)) $x1835 (and (distinct ?x1038 ?x1038) true))))))))))))))))
(check-sat)
