(set-info :status unknown)
(declare-fun %Y () (_ BitVec 11))
(declare-fun C2 () (_ BitVec 11))
(declare-fun C1 () (_ BitVec 25))
(declare-fun %X () (_ BitVec 25))
(assert
 (let ((?x3394 (ite (and (distinct ((_ extract 2 2) C2) (_ bv0 1)) true) (_ bv2 25) (ite (and (distinct ((_ extract 1 1) C2) (_ bv0 1)) true) (_ bv1 25) (_ bv0 25)))))
 (let ((?x1119 (ite (and (distinct ((_ extract 5 5) C2) (_ bv0 1)) true) (_ bv5 25) (ite (and (distinct ((_ extract 4 4) C2) (_ bv0 1)) true) (_ bv4 25) (_ bv3 25)))))
 (let ((?x1941 (ite (and (distinct ((_ extract 8 8) C2) (_ bv0 1)) true) (_ bv8 25) (ite (and (distinct ((_ extract 7 7) C2) (_ bv0 1)) true) (_ bv7 25) (_ bv6 25)))))
 (let ((?x3018 (ite (and (distinct ((_ extract 10 9) C2) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) C2) (_ bv0 1)) true) (_ bv10 25) (_ bv9 25)) ?x1941)))
 (let ((?x4191 (ite (and (distinct ((_ extract 10 6) C2) (_ bv0 5)) true) ?x3018 (ite (and (distinct ((_ extract 5 3) C2) (_ bv0 3)) true) ?x1119 ?x3394))))
 (let ((?x5079 (ite (and (distinct ((_ extract 3 2) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 3 3) C1) (_ bv0 1)) true) (_ bv3 25) (_ bv2 25)) (ite (and (distinct ((_ extract 1 1) C1) (_ bv0 1)) true) (_ bv1 25) (_ bv0 25)))))
 (let ((?x1438 (ite (and (distinct ((_ extract 6 6) C1) (_ bv0 1)) true) (_ bv6 25) (ite (and (distinct ((_ extract 5 5) C1) (_ bv0 1)) true) (_ bv5 25) (_ bv4 25)))))
 (let ((?x5379 (ite (and (distinct ((_ extract 9 9) C1) (_ bv0 1)) true) (_ bv9 25) (ite (and (distinct ((_ extract 8 8) C1) (_ bv0 1)) true) (_ bv8 25) (_ bv7 25)))))
 (let ((?x4229 (ite (and (distinct ((_ extract 12 12) C1) (_ bv0 1)) true) (_ bv12 25) (ite (and (distinct ((_ extract 11 11) C1) (_ bv0 1)) true) (_ bv11 25) (_ bv10 25)))))
 (let ((?x1641 (ite (and (distinct ((_ extract 12 7) C1) (_ bv0 6)) true) (ite (and (distinct ((_ extract 12 10) C1) (_ bv0 3)) true) ?x4229 ?x5379) (ite (and (distinct ((_ extract 6 4) C1) (_ bv0 3)) true) ?x1438 ?x5079))))
 (let ((?x4542 (ite (and (distinct ((_ extract 15 15) C1) (_ bv0 1)) true) (_ bv15 25) (ite (and (distinct ((_ extract 14 14) C1) (_ bv0 1)) true) (_ bv14 25) (_ bv13 25)))))
 (let ((?x3016 (ite (and (distinct ((_ extract 18 18) C1) (_ bv0 1)) true) (_ bv18 25) (ite (and (distinct ((_ extract 17 17) C1) (_ bv0 1)) true) (_ bv17 25) (_ bv16 25)))))
 (let ((?x3459 (ite (and (distinct ((_ extract 21 21) C1) (_ bv0 1)) true) (_ bv21 25) (ite (and (distinct ((_ extract 20 20) C1) (_ bv0 1)) true) (_ bv20 25) (_ bv19 25)))))
 (let ((?x2290 (ite (and (distinct ((_ extract 24 24) C1) (_ bv0 1)) true) (_ bv24 25) (ite (and (distinct ((_ extract 23 23) C1) (_ bv0 1)) true) (_ bv23 25) (_ bv22 25)))))
 (let ((?x1707 (ite (and (distinct ((_ extract 24 19) C1) (_ bv0 6)) true) (ite (and (distinct ((_ extract 24 22) C1) (_ bv0 3)) true) ?x2290 ?x3459) (ite (and (distinct ((_ extract 18 16) C1) (_ bv0 3)) true) ?x3016 ?x4542))))
 (let ((?x4166 (bvsub (ite (and (distinct ((_ extract 24 13) C1) (_ bv0 12)) true) ?x1707 ?x1641) ?x4191)))
 (let ((?x5134 (bvand %X C1)))
 (let (($x3819 (and (distinct (ite (= (ite (= ?x5134 (_ bv0 25)) (_ bv1 1) (_ bv0 1)) (_ bv1 1)) %Y (bvor %Y C2)) (bvor ((_ extract 10 0) (bvlshr ?x5134 ?x4166)) %Y)) true)))
 (let ((?x3163 (ite (and (distinct ((_ extract 3 2) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 3 3) C1) (_ bv0 1)) true) (_ bv3 32) (_ bv2 32)) (ite (and (distinct ((_ extract 1 1) C1) (_ bv0 1)) true) (_ bv1 32) (_ bv0 32)))))
 (let ((?x3588 (ite (and (distinct ((_ extract 6 6) C1) (_ bv0 1)) true) (_ bv6 32) (ite (and (distinct ((_ extract 5 5) C1) (_ bv0 1)) true) (_ bv5 32) (_ bv4 32)))))
 (let ((?x1612 (ite (and (distinct ((_ extract 9 9) C1) (_ bv0 1)) true) (_ bv9 32) (ite (and (distinct ((_ extract 8 8) C1) (_ bv0 1)) true) (_ bv8 32) (_ bv7 32)))))
 (let ((?x2810 (ite (and (distinct ((_ extract 12 12) C1) (_ bv0 1)) true) (_ bv12 32) (ite (and (distinct ((_ extract 11 11) C1) (_ bv0 1)) true) (_ bv11 32) (_ bv10 32)))))
 (let ((?x4154 (ite (and (distinct ((_ extract 12 7) C1) (_ bv0 6)) true) (ite (and (distinct ((_ extract 12 10) C1) (_ bv0 3)) true) ?x2810 ?x1612) (ite (and (distinct ((_ extract 6 4) C1) (_ bv0 3)) true) ?x3588 ?x3163))))
 (let ((?x1677 (ite (and (distinct ((_ extract 15 15) C1) (_ bv0 1)) true) (_ bv15 32) (ite (and (distinct ((_ extract 14 14) C1) (_ bv0 1)) true) (_ bv14 32) (_ bv13 32)))))
 (let ((?x1302 (ite (and (distinct ((_ extract 18 18) C1) (_ bv0 1)) true) (_ bv18 32) (ite (and (distinct ((_ extract 17 17) C1) (_ bv0 1)) true) (_ bv17 32) (_ bv16 32)))))
 (let ((?x3622 (ite (and (distinct ((_ extract 21 21) C1) (_ bv0 1)) true) (_ bv21 32) (ite (and (distinct ((_ extract 20 20) C1) (_ bv0 1)) true) (_ bv20 32) (_ bv19 32)))))
 (let ((?x4388 (ite (and (distinct ((_ extract 24 24) C1) (_ bv0 1)) true) (_ bv24 32) (ite (and (distinct ((_ extract 23 23) C1) (_ bv0 1)) true) (_ bv23 32) (_ bv22 32)))))
 (let ((?x2686 (ite (and (distinct ((_ extract 24 19) C1) (_ bv0 6)) true) (ite (and (distinct ((_ extract 24 22) C1) (_ bv0 3)) true) ?x4388 ?x3622) (ite (and (distinct ((_ extract 18 16) C1) (_ bv0 3)) true) ?x1302 ?x1677))))
 (let ((?x3056 (ite (and (distinct ((_ extract 2 2) C2) (_ bv0 1)) true) (_ bv2 32) (ite (and (distinct ((_ extract 1 1) C2) (_ bv0 1)) true) (_ bv1 32) (_ bv0 32)))))
 (let ((?x2992 (ite (and (distinct ((_ extract 5 5) C2) (_ bv0 1)) true) (_ bv5 32) (ite (and (distinct ((_ extract 4 4) C2) (_ bv0 1)) true) (_ bv4 32) (_ bv3 32)))))
 (let ((?x3693 (ite (and (distinct ((_ extract 8 8) C2) (_ bv0 1)) true) (_ bv8 32) (ite (and (distinct ((_ extract 7 7) C2) (_ bv0 1)) true) (_ bv7 32) (_ bv6 32)))))
 (let ((?x2211 (ite (and (distinct ((_ extract 10 9) C2) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) C2) (_ bv0 1)) true) (_ bv10 32) (_ bv9 32)) ?x3693)))
 (let ((?x3199 (ite (and (distinct ((_ extract 10 6) C2) (_ bv0 5)) true) ?x2211 (ite (and (distinct ((_ extract 5 3) C2) (_ bv0 3)) true) ?x2992 ?x3056))))
 (and (and (and (distinct C1 (_ bv0 25)) true) (= (bvand C1 (bvsub C1 (_ bv1 25))) (_ bv0 25))) (and (and (distinct C2 (_ bv0 11)) true) (= (bvand C2 (bvsub C2 (_ bv1 11))) (_ bv0 11))) (bvslt ?x3199 (ite (and (distinct ((_ extract 24 13) C1) (_ bv0 12)) true) ?x2686 ?x4154)) $x3819)))))))))))))))))))))))))))))))))))
(check-sat)
