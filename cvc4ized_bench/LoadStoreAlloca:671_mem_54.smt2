
(declare-fun mem0 () (_ BitVec 8))
(declare-fun %y () (_ BitVec 56))
(declare-fun %p2 () (_ BitVec 64))
(declare-fun idx () (_ BitVec 64))
(declare-fun %x () (_ BitVec 56))
(declare-fun %p1 () (_ BitVec 64))
(declare-fun |ana_equivalentAddressValues(%p1, %p2)| () (_ BitVec 1))
(assert (let ((_let_0 (= idx (bvadd %p2 (_ bv0 64))))) (let ((_let_1 ((_ extract 7 0) %y))) (let ((_let_2 (= idx (bvadd %p2 (_ bv1 64))))) (let ((_let_3 ((_ extract 15 8) %y))) (let ((_let_4 (= idx (bvadd %p2 (_ bv2 64))))) (let ((_let_5 ((_ extract 23 16) %y))) (let ((_let_6 (= idx (bvadd %p2 (_ bv3 64))))) (let ((_let_7 ((_ extract 31 24) %y))) (let ((_let_8 (= idx (bvadd %p2 (_ bv4 64))))) (let ((_let_9 ((_ extract 39 32) %y))) (let ((_let_10 (= idx (bvadd %p2 (_ bv5 64))))) (let ((_let_11 ((_ extract 47 40) %y))) (let ((_let_12 (= idx (bvadd %p2 (_ bv6 64))))) (let ((_let_13 ((_ extract 55 48) %y))) (let ((_let_14 (= |ana_equivalentAddressValues(%p1, %p2)| (_ bv1 1)))) (let ((_let_15 (not (= %p1 (_ bv0 64))))) (let ((_let_16 (not (= %p2 (_ bv0 64))))) (and (=> _let_14 (= %p1 %p2)) _let_14 (not (= (ite (and _let_12 _let_15 _let_16) _let_13 (ite (and _let_10 _let_15 _let_16) _let_11 (ite (and _let_8 _let_15 _let_16) _let_9 (ite (and _let_6 _let_15 _let_16) _let_7 (ite (and _let_4 _let_15 _let_16) _let_5 (ite (and _let_2 _let_15 _let_16) _let_3 (ite (and _let_0 _let_15 _let_16) _let_1 (ite (and (= idx (bvadd %p1 (_ bv6 64))) _let_15) ((_ extract 55 48) %x) (ite (and (= idx (bvadd %p1 (_ bv5 64))) _let_15) ((_ extract 47 40) %x) (ite (and (= idx (bvadd %p1 (_ bv4 64))) _let_15) ((_ extract 39 32) %x) (ite (and (= idx (bvadd %p1 (_ bv3 64))) _let_15) ((_ extract 31 24) %x) (ite (and (= idx (bvadd %p1 (_ bv2 64))) _let_15) ((_ extract 23 16) %x) (ite (and (= idx (bvadd %p1 (_ bv1 64))) _let_15) ((_ extract 15 8) %x) (ite (and (= idx (bvadd %p1 (_ bv0 64))) _let_15) ((_ extract 7 0) %x) mem0)))))))))))))) (ite (and _let_12 _let_16) _let_13 (ite (and _let_10 _let_16) _let_11 (ite (and _let_8 _let_16) _let_9 (ite (and _let_6 _let_16) _let_7 (ite (and _let_4 _let_16) _let_5 (ite (and _let_2 _let_16) _let_3 (ite (and _let_0 _let_16) _let_1 mem0))))))))))))))))))))))))))))
(assert true)
(check-sat)