
(declare-fun %x () (_ BitVec 60))
(declare-fun mem0 () (_ BitVec 8))
(declare-fun %p1 () (_ BitVec 64))
(declare-fun %p2 () (_ BitVec 64))
(declare-fun |ana_equivalentAddressValues(%p1, %p2)| () (_ BitVec 1))
(assert (let ((_let_0 (concat ((_ extract 7 4) mem0) ((_ extract 3 0) %x)))) (let ((_let_1 ((_ extract 11 4) %x))) (let ((_let_2 (bvadd %p1 (_ bv1 64)))) (let ((_let_3 (bvadd _let_2 (_ bv0 64)))) (let ((_let_4 ((_ extract 19 12) %x))) (let ((_let_5 (bvadd _let_2 (_ bv1 64)))) (let ((_let_6 ((_ extract 27 20) %x))) (let ((_let_7 (bvadd _let_2 (_ bv2 64)))) (let ((_let_8 ((_ extract 35 28) %x))) (let ((_let_9 (bvadd _let_2 (_ bv3 64)))) (let ((_let_10 ((_ extract 43 36) %x))) (let ((_let_11 (bvadd _let_2 (_ bv4 64)))) (let ((_let_12 ((_ extract 51 44) %x))) (let ((_let_13 (bvadd _let_2 (_ bv5 64)))) (let ((_let_14 ((_ extract 59 52) %x))) (let ((_let_15 (bvadd _let_2 (_ bv6 64)))) (let ((_let_16 (bvadd (bvadd %p2 (_ bv1 64)) (_ bv0 64)))) (let ((_let_17 (bvadd (bvadd %p2 (_ bv1 64)) (_ bv1 64)))) (let ((_let_18 (bvadd (bvadd %p2 (_ bv1 64)) (_ bv2 64)))) (let ((_let_19 (bvadd (bvadd %p2 (_ bv1 64)) (_ bv3 64)))) (let ((_let_20 (bvadd (bvadd %p2 (_ bv1 64)) (_ bv4 64)))) (let ((_let_21 (bvadd (bvadd %p2 (_ bv1 64)) (_ bv5 64)))) (let ((_let_22 (bvadd (bvadd %p2 (_ bv1 64)) (_ bv6 64)))) (let ((_let_23 (= |ana_equivalentAddressValues(%p1, %p2)| (_ bv1 1)))) (let ((_let_24 (not (= %p1 (_ bv0 64))))) (and (=> _let_23 (= %p1 %p2)) _let_23 _let_24 (not (= %p2 (_ bv0 64))) (not (= (concat (concat (concat (concat (concat (concat (concat (ite (and (= _let_22 _let_15) _let_24) _let_14 (ite (and (= _let_22 _let_13) _let_24) _let_12 (ite (and (= _let_22 _let_11) _let_24) _let_10 (ite (and (= _let_22 _let_9) _let_24) _let_8 (ite (and (= _let_22 _let_7) _let_24) _let_6 (ite (and (= _let_22 _let_5) _let_24) _let_4 (ite (and (= _let_22 _let_3) _let_24) _let_1 (ite (and (= _let_22 %p1) _let_24) _let_0 mem0)))))))) (ite (and (= _let_21 _let_15) _let_24) _let_14 (ite (and (= _let_21 _let_13) _let_24) _let_12 (ite (and (= _let_21 _let_11) _let_24) _let_10 (ite (and (= _let_21 _let_9) _let_24) _let_8 (ite (and (= _let_21 _let_7) _let_24) _let_6 (ite (and (= _let_21 _let_5) _let_24) _let_4 (ite (and (= _let_21 _let_3) _let_24) _let_1 (ite (and (= _let_21 %p1) _let_24) _let_0 mem0))))))))) (ite (and (= _let_20 _let_15) _let_24) _let_14 (ite (and (= _let_20 _let_13) _let_24) _let_12 (ite (and (= _let_20 _let_11) _let_24) _let_10 (ite (and (= _let_20 _let_9) _let_24) _let_8 (ite (and (= _let_20 _let_7) _let_24) _let_6 (ite (and (= _let_20 _let_5) _let_24) _let_4 (ite (and (= _let_20 _let_3) _let_24) _let_1 (ite (and (= _let_20 %p1) _let_24) _let_0 mem0))))))))) (ite (and (= _let_19 _let_15) _let_24) _let_14 (ite (and (= _let_19 _let_13) _let_24) _let_12 (ite (and (= _let_19 _let_11) _let_24) _let_10 (ite (and (= _let_19 _let_9) _let_24) _let_8 (ite (and (= _let_19 _let_7) _let_24) _let_6 (ite (and (= _let_19 _let_5) _let_24) _let_4 (ite (and (= _let_19 _let_3) _let_24) _let_1 (ite (and (= _let_19 %p1) _let_24) _let_0 mem0))))))))) (ite (and (= _let_18 _let_15) _let_24) _let_14 (ite (and (= _let_18 _let_13) _let_24) _let_12 (ite (and (= _let_18 _let_11) _let_24) _let_10 (ite (and (= _let_18 _let_9) _let_24) _let_8 (ite (and (= _let_18 _let_7) _let_24) _let_6 (ite (and (= _let_18 _let_5) _let_24) _let_4 (ite (and (= _let_18 _let_3) _let_24) _let_1 (ite (and (= _let_18 %p1) _let_24) _let_0 mem0))))))))) (ite (and (= _let_17 _let_15) _let_24) _let_14 (ite (and (= _let_17 _let_13) _let_24) _let_12 (ite (and (= _let_17 _let_11) _let_24) _let_10 (ite (and (= _let_17 _let_9) _let_24) _let_8 (ite (and (= _let_17 _let_7) _let_24) _let_6 (ite (and (= _let_17 _let_5) _let_24) _let_4 (ite (and (= _let_17 _let_3) _let_24) _let_1 (ite (and (= _let_17 %p1) _let_24) _let_0 mem0))))))))) (ite (and (= _let_16 _let_15) _let_24) _let_14 (ite (and (= _let_16 _let_13) _let_24) _let_12 (ite (and (= _let_16 _let_11) _let_24) _let_10 (ite (and (= _let_16 _let_9) _let_24) _let_8 (ite (and (= _let_16 _let_7) _let_24) _let_6 (ite (and (= _let_16 _let_5) _let_24) _let_4 (ite (and (= _let_16 _let_3) _let_24) _let_1 (ite (and (= _let_16 %p1) _let_24) _let_0 mem0))))))))) ((_ extract 3 0) (ite (and (= %p2 _let_15) _let_24) _let_14 (ite (and (= %p2 _let_13) _let_24) _let_12 (ite (and (= %p2 _let_11) _let_24) _let_10 (ite (and (= %p2 _let_9) _let_24) _let_8 (ite (and (= %p2 _let_7) _let_24) _let_6 (ite (and (= %p2 _let_5) _let_24) _let_4 (ite (and (= %p2 _let_3) _let_24) _let_1 (ite (and (= %p2 %p1) _let_24) _let_0 mem0)))))))))) %x)))))))))))))))))))))))))))))
(assert true)
(check-sat)