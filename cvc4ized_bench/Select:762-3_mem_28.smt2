
(declare-fun mem0 () (_ BitVec 8))
(declare-fun C () (_ BitVec 32))
(declare-fun C2 () (_ BitVec 11))
(declare-fun C3 () (_ BitVec 11))
(assert (let ((_let_0 (bvsub C3 C2))) (and (bvslt (ite (not (= ((_ extract 31 16) C) (_ bv0 16))) (ite (not (= ((_ extract 31 24) C) (_ bv0 8))) (ite (not (= ((_ extract 31 28) C) (_ bv0 4))) (ite (not (= ((_ extract 31 30) C) (_ bv0 2))) (ite (not (= ((_ extract 31 31) C) (_ bv0 1))) (_ bv31 32) (_ bv30 32)) (ite (not (= ((_ extract 29 29) C) (_ bv0 1))) (_ bv29 32) (_ bv28 32))) (ite (not (= ((_ extract 27 26) C) (_ bv0 2))) (ite (not (= ((_ extract 27 27) C) (_ bv0 1))) (_ bv27 32) (_ bv26 32)) (ite (not (= ((_ extract 25 25) C) (_ bv0 1))) (_ bv25 32) (_ bv24 32)))) (ite (not (= ((_ extract 23 20) C) (_ bv0 4))) (ite (not (= ((_ extract 23 22) C) (_ bv0 2))) (ite (not (= ((_ extract 23 23) C) (_ bv0 1))) (_ bv23 32) (_ bv22 32)) (ite (not (= ((_ extract 21 21) C) (_ bv0 1))) (_ bv21 32) (_ bv20 32))) (ite (not (= ((_ extract 19 18) C) (_ bv0 2))) (ite (not (= ((_ extract 19 19) C) (_ bv0 1))) (_ bv19 32) (_ bv18 32)) (ite (not (= ((_ extract 17 17) C) (_ bv0 1))) (_ bv17 32) (_ bv16 32))))) (ite (not (= ((_ extract 15 8) C) (_ bv0 8))) (ite (not (= ((_ extract 15 12) C) (_ bv0 4))) (ite (not (= ((_ extract 15 14) C) (_ bv0 2))) (ite (not (= ((_ extract 15 15) C) (_ bv0 1))) (_ bv15 32) (_ bv14 32)) (ite (not (= ((_ extract 13 13) C) (_ bv0 1))) (_ bv13 32) (_ bv12 32))) (ite (not (= ((_ extract 11 10) C) (_ bv0 2))) (ite (not (= ((_ extract 11 11) C) (_ bv0 1))) (_ bv11 32) (_ bv10 32)) (ite (not (= ((_ extract 9 9) C) (_ bv0 1))) (_ bv9 32) (_ bv8 32)))) (ite (not (= ((_ extract 7 4) C) (_ bv0 4))) (ite (not (= ((_ extract 7 6) C) (_ bv0 2))) (ite (not (= ((_ extract 7 7) C) (_ bv0 1))) (_ bv7 32) (_ bv6 32)) (ite (not (= ((_ extract 5 5) C) (_ bv0 1))) (_ bv5 32) (_ bv4 32))) (ite (not (= ((_ extract 3 2) C) (_ bv0 2))) (ite (not (= ((_ extract 3 3) C) (_ bv0 1))) (_ bv3 32) (_ bv2 32)) (ite (not (= ((_ extract 1 1) C) (_ bv0 1))) (_ bv1 32) (_ bv0 32)))))) (_ bv11 32)) (= (bvand C (bvsub C (_ bv1 32))) (_ bv0 32)) (= (bvand _let_0 (bvsub _let_0 (_ bv1 11))) (_ bv0 11)) (not (= mem0 mem0)) (not (= C (_ bv0 32))) (not (= _let_0 (_ bv0 11))))))
(assert true)
(check-sat)