
(declare-fun C () (_ BitVec 33))
(declare-fun %Op0 () (_ BitVec 33))
(assert (let ((_let_0 ((_ extract 32 32) C))) (let ((_let_1 (bvudiv (ite (= ((_ extract 32 32) %Op0) (_ bv1 1)) (bvneg %Op0) %Op0) (ite (= _let_0 (_ bv1 1)) (bvneg C) C)))) (and (or (not (= %Op0 (_ bv4294967296 33))) (not (= C (_ bv8589934591 33)))) (= (bvmul (ite (xor (= ((_ extract 32 32) %Op0) (_ bv1 1)) (= _let_0 (_ bv1 1))) (bvneg _let_1) _let_1) C) %Op0) (bvsge C (_ bv0 33)) (not (bvult (ite (not (= ((_ extract 32 17) C) (_ bv0 16))) (ite (not (= ((_ extract 32 25) C) (_ bv0 8))) (ite (not (= ((_ extract 32 29) C) (_ bv0 4))) (ite (not (= ((_ extract 32 31) C) (_ bv0 2))) (ite (not (= _let_0 (_ bv0 1))) (_ bv32 33) (_ bv31 33)) (ite (not (= ((_ extract 30 30) C) (_ bv0 1))) (_ bv30 33) (_ bv29 33))) (ite (not (= ((_ extract 28 27) C) (_ bv0 2))) (ite (not (= ((_ extract 28 28) C) (_ bv0 1))) (_ bv28 33) (_ bv27 33)) (ite (not (= ((_ extract 26 26) C) (_ bv0 1))) (_ bv26 33) (_ bv25 33)))) (ite (not (= ((_ extract 24 21) C) (_ bv0 4))) (ite (not (= ((_ extract 24 23) C) (_ bv0 2))) (ite (not (= ((_ extract 24 24) C) (_ bv0 1))) (_ bv24 33) (_ bv23 33)) (ite (not (= ((_ extract 22 22) C) (_ bv0 1))) (_ bv22 33) (_ bv21 33))) (ite (not (= ((_ extract 20 19) C) (_ bv0 2))) (ite (not (= ((_ extract 20 20) C) (_ bv0 1))) (_ bv20 33) (_ bv19 33)) (ite (not (= ((_ extract 18 18) C) (_ bv0 1))) (_ bv18 33) (_ bv17 33))))) (ite (not (= ((_ extract 16 9) C) (_ bv0 8))) (ite (not (= ((_ extract 16 13) C) (_ bv0 4))) (ite (not (= ((_ extract 16 15) C) (_ bv0 2))) (ite (not (= ((_ extract 16 16) C) (_ bv0 1))) (_ bv16 33) (_ bv15 33)) (ite (not (= ((_ extract 14 14) C) (_ bv0 1))) (_ bv14 33) (_ bv13 33))) (ite (not (= ((_ extract 12 11) C) (_ bv0 2))) (ite (not (= ((_ extract 12 12) C) (_ bv0 1))) (_ bv12 33) (_ bv11 33)) (ite (not (= ((_ extract 10 10) C) (_ bv0 1))) (_ bv10 33) (_ bv9 33)))) (ite (not (= ((_ extract 8 5) C) (_ bv0 4))) (ite (not (= ((_ extract 8 7) C) (_ bv0 2))) (ite (not (= ((_ extract 8 8) C) (_ bv0 1))) (_ bv8 33) (_ bv7 33)) (ite (not (= ((_ extract 6 6) C) (_ bv0 1))) (_ bv6 33) (_ bv5 33))) (ite (not (= ((_ extract 4 3) C) (_ bv0 2))) (ite (not (= ((_ extract 4 4) C) (_ bv0 1))) (_ bv4 33) (_ bv3 33)) (ite (not (= ((_ extract 2 2) C) (_ bv0 1))) (_ bv2 33) (ite (not (= ((_ extract 1 1) C) (_ bv0 1))) (_ bv1 33) (_ bv0 33))))))) (_ bv33 33))) (not (= C (_ bv0 33))) (= (bvand C (bvsub C (_ bv1 33))) (_ bv0 33))))))
(assert true)
(check-sat)