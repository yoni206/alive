
(declare-fun mem0 () (_ BitVec 8))
(declare-fun %x () (_ BitVec 5))
(declare-fun %p1 () (_ BitVec 64))
(declare-fun idx () (_ BitVec 64))
(declare-fun |ana_equivalentAddressValues(%p1, %p2)| () (_ BitVec 1))
(declare-fun %p2 () (_ BitVec 64))
(assert (let ((_let_0 (= |ana_equivalentAddressValues(%p1, %p2)| (_ bv1 1)))) (let ((_let_1 (ite (and (= idx %p1) (not (= %p1 (_ bv0 64)))) (concat ((_ extract 7 5) mem0) ((_ extract 4 0) %x)) mem0))) (and (=> _let_0 (= %p1 %p2)) _let_0 (not (= _let_1 _let_1))))))
(assert true)
(check-sat)