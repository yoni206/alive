
(declare-fun C2 () (_ BitVec 64))
(declare-fun %Y () (_ BitVec 64))
(declare-fun C1 () (_ BitVec 64))
(assert (let ((_let_0 (bvsub (_ bv64 64) (bvsub (bvsub (_ bv64 64) (ite (not (= ((_ extract 63 32) C2) (_ bv0 32))) (ite (not (= ((_ extract 63 48) C2) (_ bv0 16))) (ite (not (= ((_ extract 63 56) C2) (_ bv0 8))) (ite (not (= ((_ extract 63 60) C2) (_ bv0 4))) (ite (not (= ((_ extract 63 62) C2) (_ bv0 2))) (ite (not (= ((_ extract 63 63) C2) (_ bv0 1))) (_ bv63 64) (_ bv62 64)) (ite (not (= ((_ extract 61 61) C2) (_ bv0 1))) (_ bv61 64) (_ bv60 64))) (ite (not (= ((_ extract 59 58) C2) (_ bv0 2))) (ite (not (= ((_ extract 59 59) C2) (_ bv0 1))) (_ bv59 64) (_ bv58 64)) (ite (not (= ((_ extract 57 57) C2) (_ bv0 1))) (_ bv57 64) (_ bv56 64)))) (ite (not (= ((_ extract 55 52) C2) (_ bv0 4))) (ite (not (= ((_ extract 55 54) C2) (_ bv0 2))) (ite (not (= ((_ extract 55 55) C2) (_ bv0 1))) (_ bv55 64) (_ bv54 64)) (ite (not (= ((_ extract 53 53) C2) (_ bv0 1))) (_ bv53 64) (_ bv52 64))) (ite (not (= ((_ extract 51 50) C2) (_ bv0 2))) (ite (not (= ((_ extract 51 51) C2) (_ bv0 1))) (_ bv51 64) (_ bv50 64)) (ite (not (= ((_ extract 49 49) C2) (_ bv0 1))) (_ bv49 64) (_ bv48 64))))) (ite (not (= ((_ extract 47 40) C2) (_ bv0 8))) (ite (not (= ((_ extract 47 44) C2) (_ bv0 4))) (ite (not (= ((_ extract 47 46) C2) (_ bv0 2))) (ite (not (= ((_ extract 47 47) C2) (_ bv0 1))) (_ bv47 64) (_ bv46 64)) (ite (not (= ((_ extract 45 45) C2) (_ bv0 1))) (_ bv45 64) (_ bv44 64))) (ite (not (= ((_ extract 43 42) C2) (_ bv0 2))) (ite (not (= ((_ extract 43 43) C2) (_ bv0 1))) (_ bv43 64) (_ bv42 64)) (ite (not (= ((_ extract 41 41) C2) (_ bv0 1))) (_ bv41 64) (_ bv40 64)))) (ite (not (= ((_ extract 39 36) C2) (_ bv0 4))) (ite (not (= ((_ extract 39 38) C2) (_ bv0 2))) (ite (not (= ((_ extract 39 39) C2) (_ bv0 1))) (_ bv39 64) (_ bv38 64)) (ite (not (= ((_ extract 37 37) C2) (_ bv0 1))) (_ bv37 64) (_ bv36 64))) (ite (not (= ((_ extract 35 34) C2) (_ bv0 2))) (ite (not (= ((_ extract 35 35) C2) (_ bv0 1))) (_ bv35 64) (_ bv34 64)) (ite (not (= ((_ extract 33 33) C2) (_ bv0 1))) (_ bv33 64) (_ bv32 64)))))) (ite (not (= ((_ extract 31 16) C2) (_ bv0 16))) (ite (not (= ((_ extract 31 24) C2) (_ bv0 8))) (ite (not (= ((_ extract 31 28) C2) (_ bv0 4))) (ite (not (= ((_ extract 31 30) C2) (_ bv0 2))) (ite (not (= ((_ extract 31 31) C2) (_ bv0 1))) (_ bv31 64) (_ bv30 64)) (ite (not (= ((_ extract 29 29) C2) (_ bv0 1))) (_ bv29 64) (_ bv28 64))) (ite (not (= ((_ extract 27 26) C2) (_ bv0 2))) (ite (not (= ((_ extract 27 27) C2) (_ bv0 1))) (_ bv27 64) (_ bv26 64)) (ite (not (= ((_ extract 25 25) C2) (_ bv0 1))) (_ bv25 64) (_ bv24 64)))) (ite (not (= ((_ extract 23 20) C2) (_ bv0 4))) (ite (not (= ((_ extract 23 22) C2) (_ bv0 2))) (ite (not (= ((_ extract 23 23) C2) (_ bv0 1))) (_ bv23 64) (_ bv22 64)) (ite (not (= ((_ extract 21 21) C2) (_ bv0 1))) (_ bv21 64) (_ bv20 64))) (ite (not (= ((_ extract 19 18) C2) (_ bv0 2))) (ite (not (= ((_ extract 19 19) C2) (_ bv0 1))) (_ bv19 64) (_ bv18 64)) (ite (not (= ((_ extract 17 17) C2) (_ bv0 1))) (_ bv17 64) (_ bv16 64))))) (ite (not (= ((_ extract 15 8) C2) (_ bv0 8))) (ite (not (= ((_ extract 15 12) C2) (_ bv0 4))) (ite (not (= ((_ extract 15 14) C2) (_ bv0 2))) (ite (not (= ((_ extract 15 15) C2) (_ bv0 1))) (_ bv15 64) (_ bv14 64)) (ite (not (= ((_ extract 13 13) C2) (_ bv0 1))) (_ bv13 64) (_ bv12 64))) (ite (not (= ((_ extract 11 10) C2) (_ bv0 2))) (ite (not (= ((_ extract 11 11) C2) (_ bv0 1))) (_ bv11 64) (_ bv10 64)) (ite (not (= ((_ extract 9 9) C2) (_ bv0 1))) (_ bv9 64) (_ bv8 64)))) (ite (not (= ((_ extract 7 4) C2) (_ bv0 4))) (ite (not (= ((_ extract 7 6) C2) (_ bv0 2))) (ite (not (= ((_ extract 7 7) C2) (_ bv0 1))) (_ bv7 64) (_ bv6 64)) (ite (not (= ((_ extract 5 5) C2) (_ bv0 1))) (_ bv5 64) (_ bv4 64))) (ite (not (= ((_ extract 3 2) C2) (_ bv0 2))) (ite (not (= ((_ extract 3 3) C2) (_ bv0 1))) (_ bv3 64) (_ bv2 64)) (ite (not (= ((_ extract 1 1) C2) (_ bv0 1))) (_ bv1 64) (_ bv0 64)))))))) (_ bv1 64))))) (and (= C1 (bvneg C2)) (not (= (bvand C2 (bvshl (_ bv18446744073709551615 64) _let_0)) (_ bv0 64))) (= (bvand C2 (bvsub C2 (_ bv1 64))) (_ bv0 64)) (not (= (bvadd (bvxor %Y C2) C1) (bvashr (bvshl %Y _let_0) _let_0))) (not (= C2 (_ bv0 64))))))
(assert true)
(check-sat)