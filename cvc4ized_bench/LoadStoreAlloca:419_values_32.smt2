
(declare-fun %x () (_ BitVec 33))
(declare-fun mem0 () (_ BitVec 8))
(declare-fun %p1 () (_ BitVec 64))
(declare-fun %p2 () (_ BitVec 64))
(declare-fun |ana_equivalentAddressValues(%p1, %p2)| () (_ BitVec 1))
(assert (let ((_let_0 (concat ((_ extract 7 1) mem0) ((_ extract 0 0) %x)))) (let ((_let_1 ((_ extract 8 1) %x))) (let ((_let_2 (bvadd %p1 (_ bv1 64)))) (let ((_let_3 (bvadd _let_2 (_ bv0 64)))) (let ((_let_4 ((_ extract 16 9) %x))) (let ((_let_5 (bvadd _let_2 (_ bv1 64)))) (let ((_let_6 ((_ extract 24 17) %x))) (let ((_let_7 (bvadd _let_2 (_ bv2 64)))) (let ((_let_8 ((_ extract 32 25) %x))) (let ((_let_9 (bvadd _let_2 (_ bv3 64)))) (let ((_let_10 (bvadd (bvadd %p2 (_ bv1 64)) (_ bv0 64)))) (let ((_let_11 (bvadd (bvadd %p2 (_ bv1 64)) (_ bv1 64)))) (let ((_let_12 (bvadd (bvadd %p2 (_ bv1 64)) (_ bv2 64)))) (let ((_let_13 (bvadd (bvadd %p2 (_ bv1 64)) (_ bv3 64)))) (let ((_let_14 (= |ana_equivalentAddressValues(%p1, %p2)| (_ bv1 1)))) (let ((_let_15 (not (= %p1 (_ bv0 64))))) (and (=> _let_14 (= %p1 %p2)) _let_14 _let_15 (not (= %p2 (_ bv0 64))) (not (= (concat (concat (concat (concat (ite (and (= _let_13 _let_9) _let_15) _let_8 (ite (and (= _let_13 _let_7) _let_15) _let_6 (ite (and (= _let_13 _let_5) _let_15) _let_4 (ite (and (= _let_13 _let_3) _let_15) _let_1 (ite (and (= _let_13 %p1) _let_15) _let_0 mem0))))) (ite (and (= _let_12 _let_9) _let_15) _let_8 (ite (and (= _let_12 _let_7) _let_15) _let_6 (ite (and (= _let_12 _let_5) _let_15) _let_4 (ite (and (= _let_12 _let_3) _let_15) _let_1 (ite (and (= _let_12 %p1) _let_15) _let_0 mem0)))))) (ite (and (= _let_11 _let_9) _let_15) _let_8 (ite (and (= _let_11 _let_7) _let_15) _let_6 (ite (and (= _let_11 _let_5) _let_15) _let_4 (ite (and (= _let_11 _let_3) _let_15) _let_1 (ite (and (= _let_11 %p1) _let_15) _let_0 mem0)))))) (ite (and (= _let_10 _let_9) _let_15) _let_8 (ite (and (= _let_10 _let_7) _let_15) _let_6 (ite (and (= _let_10 _let_5) _let_15) _let_4 (ite (and (= _let_10 _let_3) _let_15) _let_1 (ite (and (= _let_10 %p1) _let_15) _let_0 mem0)))))) ((_ extract 0 0) (ite (and (= %p2 _let_9) _let_15) _let_8 (ite (and (= %p2 _let_7) _let_15) _let_6 (ite (and (= %p2 _let_5) _let_15) _let_4 (ite (and (= %p2 _let_3) _let_15) _let_1 (ite (and (= %p2 %p1) _let_15) _let_0 mem0))))))) %x))))))))))))))))))))
(assert true)
(check-sat)