
(declare-fun C () (_ BitVec 24))
(declare-fun %Op0 () (_ BitVec 24))
(declare-fun |ana_ComputeNumSignBits(%Op0)| () (_ BitVec 24))
(assert (let ((_let_0 ((_ extract 23 23) |ana_ComputeNumSignBits(%Op0)|))) (let ((_let_1 (ite (= ((_ extract 22 22) |ana_ComputeNumSignBits(%Op0)|) _let_0) (ite (= ((_ extract 21 21) |ana_ComputeNumSignBits(%Op0)|) _let_0) (ite (= ((_ extract 20 20) |ana_ComputeNumSignBits(%Op0)|) _let_0) (ite (= ((_ extract 19 19) |ana_ComputeNumSignBits(%Op0)|) _let_0) (ite (= ((_ extract 18 18) |ana_ComputeNumSignBits(%Op0)|) _let_0) (ite (= ((_ extract 17 17) |ana_ComputeNumSignBits(%Op0)|) _let_0) (ite (= ((_ extract 16 16) |ana_ComputeNumSignBits(%Op0)|) _let_0) (ite (= ((_ extract 15 15) |ana_ComputeNumSignBits(%Op0)|) _let_0) (ite (= ((_ extract 14 14) |ana_ComputeNumSignBits(%Op0)|) _let_0) (ite (= ((_ extract 13 13) |ana_ComputeNumSignBits(%Op0)|) _let_0) (ite (= ((_ extract 12 12) |ana_ComputeNumSignBits(%Op0)|) _let_0) (ite (= ((_ extract 11 11) |ana_ComputeNumSignBits(%Op0)|) _let_0) (ite (= ((_ extract 10 10) |ana_ComputeNumSignBits(%Op0)|) _let_0) (ite (= ((_ extract 9 9) |ana_ComputeNumSignBits(%Op0)|) _let_0) (ite (= ((_ extract 8 8) |ana_ComputeNumSignBits(%Op0)|) _let_0) (ite (= ((_ extract 7 7) |ana_ComputeNumSignBits(%Op0)|) _let_0) (ite (= ((_ extract 6 6) |ana_ComputeNumSignBits(%Op0)|) _let_0) (ite (= ((_ extract 5 5) |ana_ComputeNumSignBits(%Op0)|) _let_0) (ite (= ((_ extract 4 4) |ana_ComputeNumSignBits(%Op0)|) _let_0) (ite (= ((_ extract 3 3) |ana_ComputeNumSignBits(%Op0)|) _let_0) (ite (= ((_ extract 2 2) |ana_ComputeNumSignBits(%Op0)|) _let_0) (ite (= ((_ extract 1 1) |ana_ComputeNumSignBits(%Op0)|) _let_0) (ite (= ((_ extract 0 0) |ana_ComputeNumSignBits(%Op0)|) _let_0) (_ bv24 24) (_ bv23 24)) (_ bv22 24)) (_ bv21 24)) (_ bv20 24)) (_ bv19 24)) (_ bv18 24)) (_ bv17 24)) (_ bv16 24)) (_ bv15 24)) (_ bv14 24)) (_ bv13 24)) (_ bv12 24)) (_ bv11 24)) (_ bv10 24)) (_ bv9 24)) (_ bv8 24)) (_ bv7 24)) (_ bv6 24)) (_ bv5 24)) (_ bv4 24)) (_ bv3 24)) (_ bv2 24)) (_ bv1 24)))) (let ((_let_2 ((_ extract 23 23) %Op0))) (let ((_let_3 (bvshl %Op0 C))) (and (bvult C (_ bv24 24)) (bvule _let_1 (ite (= ((_ extract 22 22) %Op0) _let_2) (ite (= ((_ extract 21 21) %Op0) _let_2) (ite (= ((_ extract 20 20) %Op0) _let_2) (ite (= ((_ extract 19 19) %Op0) _let_2) (ite (= ((_ extract 18 18) %Op0) _let_2) (ite (= ((_ extract 17 17) %Op0) _let_2) (ite (= ((_ extract 16 16) %Op0) _let_2) (ite (= ((_ extract 15 15) %Op0) _let_2) (ite (= ((_ extract 14 14) %Op0) _let_2) (ite (= ((_ extract 13 13) %Op0) _let_2) (ite (= ((_ extract 12 12) %Op0) _let_2) (ite (= ((_ extract 11 11) %Op0) _let_2) (ite (= ((_ extract 10 10) %Op0) _let_2) (ite (= ((_ extract 9 9) %Op0) _let_2) (ite (= ((_ extract 8 8) %Op0) _let_2) (ite (= ((_ extract 7 7) %Op0) _let_2) (ite (= ((_ extract 6 6) %Op0) _let_2) (ite (= ((_ extract 5 5) %Op0) _let_2) (ite (= ((_ extract 4 4) %Op0) _let_2) (ite (= ((_ extract 3 3) %Op0) _let_2) (ite (= ((_ extract 2 2) %Op0) _let_2) (ite (= ((_ extract 1 1) %Op0) _let_2) (ite (= ((_ extract 0 0) %Op0) _let_2) (_ bv24 24) (_ bv23 24)) (_ bv22 24)) (_ bv21 24)) (_ bv20 24)) (_ bv19 24)) (_ bv18 24)) (_ bv17 24)) (_ bv16 24)) (_ bv15 24)) (_ bv14 24)) (_ bv13 24)) (_ bv12 24)) (_ bv11 24)) (_ bv10 24)) (_ bv9 24)) (_ bv8 24)) (_ bv7 24)) (_ bv6 24)) (_ bv5 24)) (_ bv4 24)) (_ bv3 24)) (_ bv2 24)) (_ bv1 24))) (bvsgt _let_1 C) (not (= _let_3 _let_3))))))))
(assert true)
(check-sat)