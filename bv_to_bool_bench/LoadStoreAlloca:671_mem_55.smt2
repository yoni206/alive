
(declare-fun mem0 () (_ BitVec 8))
(declare-fun %y () (_ BitVec 57))
(declare-fun %p2 () (_ BitVec 64))
(declare-fun idx () (_ BitVec 64))
(declare-fun %x () (_ BitVec 57))
(declare-fun %p1 () (_ BitVec 64))
(declare-fun |ana_equivalentAddressValues(%p1, %p2)| () (_ BitVec 1))
(assert (let ((_let_0 (= idx %p2))) (let ((_let_1 ((_ extract 7 1) mem0))) (let ((_let_2 ((_ extract 0 0) %y))) (let ((_let_3 (bvadd %p2 (_ bv1 64)))) (let ((_let_4 (= idx (bvadd _let_3 (_ bv0 64))))) (let ((_let_5 ((_ extract 8 1) %y))) (let ((_let_6 (= idx (bvadd _let_3 (_ bv1 64))))) (let ((_let_7 ((_ extract 16 9) %y))) (let ((_let_8 (= idx (bvadd _let_3 (_ bv2 64))))) (let ((_let_9 ((_ extract 24 17) %y))) (let ((_let_10 (= idx (bvadd _let_3 (_ bv3 64))))) (let ((_let_11 ((_ extract 32 25) %y))) (let ((_let_12 (= idx (bvadd _let_3 (_ bv4 64))))) (let ((_let_13 ((_ extract 40 33) %y))) (let ((_let_14 (= idx (bvadd _let_3 (_ bv5 64))))) (let ((_let_15 ((_ extract 48 41) %y))) (let ((_let_16 (= idx (bvadd _let_3 (_ bv6 64))))) (let ((_let_17 ((_ extract 56 49) %y))) (let ((_let_18 (concat _let_1 ((_ extract 0 0) %x)))) (let ((_let_19 (bvadd %p1 (_ bv1 64)))) (let ((_let_20 (bvadd _let_19 (_ bv0 64)))) (let ((_let_21 ((_ extract 8 1) %x))) (let ((_let_22 (bvadd _let_19 (_ bv1 64)))) (let ((_let_23 ((_ extract 16 9) %x))) (let ((_let_24 (bvadd _let_19 (_ bv2 64)))) (let ((_let_25 ((_ extract 24 17) %x))) (let ((_let_26 (bvadd _let_19 (_ bv3 64)))) (let ((_let_27 ((_ extract 32 25) %x))) (let ((_let_28 (bvadd _let_19 (_ bv4 64)))) (let ((_let_29 ((_ extract 40 33) %x))) (let ((_let_30 (bvadd _let_19 (_ bv5 64)))) (let ((_let_31 ((_ extract 48 41) %x))) (let ((_let_32 (bvadd _let_19 (_ bv6 64)))) (let ((_let_33 ((_ extract 56 49) %x))) (let ((_let_34 (= |ana_equivalentAddressValues(%p1, %p2)| (_ bv1 1)))) (let ((_let_35 (not (= %p1 (_ bv0 64))))) (let ((_let_36 (not (= %p2 (_ bv0 64))))) (and (=> _let_34 (= %p1 %p2)) _let_34 (not (= (ite (and _let_16 _let_35 _let_36) _let_17 (ite (and _let_14 _let_35 _let_36) _let_15 (ite (and _let_12 _let_35 _let_36) _let_13 (ite (and _let_10 _let_35 _let_36) _let_11 (ite (and _let_8 _let_35 _let_36) _let_9 (ite (and _let_6 _let_35 _let_36) _let_7 (ite (and _let_4 _let_35 _let_36) _let_5 (ite (and _let_0 _let_35 _let_36) (concat ((_ extract 7 1) (ite (and (= %p2 _let_32) _let_35) _let_33 (ite (and (= %p2 _let_30) _let_35) _let_31 (ite (and (= %p2 _let_28) _let_35) _let_29 (ite (and (= %p2 _let_26) _let_35) _let_27 (ite (and (= %p2 _let_24) _let_35) _let_25 (ite (and (= %p2 _let_22) _let_35) _let_23 (ite (and (= %p2 _let_20) _let_35) _let_21 (ite (and (= %p2 %p1) _let_35) _let_18 mem0))))))))) _let_2) (ite (and (= idx _let_32) _let_35) _let_33 (ite (and (= idx _let_30) _let_35) _let_31 (ite (and (= idx _let_28) _let_35) _let_29 (ite (and (= idx _let_26) _let_35) _let_27 (ite (and (= idx _let_24) _let_35) _let_25 (ite (and (= idx _let_22) _let_35) _let_23 (ite (and (= idx _let_20) _let_35) _let_21 (ite (and (= idx %p1) _let_35) _let_18 mem0)))))))))))))))) (ite (and _let_16 _let_36) _let_17 (ite (and _let_14 _let_36) _let_15 (ite (and _let_12 _let_36) _let_13 (ite (and _let_10 _let_36) _let_11 (ite (and _let_8 _let_36) _let_9 (ite (and _let_6 _let_36) _let_7 (ite (and _let_4 _let_36) _let_5 (ite (and _let_0 _let_36) (concat _let_1 _let_2) mem0)))))))))))))))))))))))))))))))))))))))))))))))))
(assert true)
(check-sat)