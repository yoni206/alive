
(declare-fun C2 () (_ BitVec 24))
(declare-fun %B () (_ BitVec 24))
(declare-fun %A () (_ BitVec 24))
(declare-fun C1 () (_ BitVec 24))
(declare-fun |ana_MaskedValueIsZero(%B, ((1 << (width(C2) - countLeadingZeros(((C2 - 1) ^ C2)))) - 1))| () (_ BitVec 1))
(assert (let ((_let_0 (= |ana_MaskedValueIsZero(%B, ((1 << (width(C2) - countLeadingZeros(((C2 - 1) ^ C2)))) - 1))| (_ bv1 1)))) (let ((_let_1 (bvor (bvsub C2 (_ bv1 24)) C2))) (let ((_let_2 (bvadd C2 (_ bv1 24)))) (let ((_let_3 (bvxor (bvsub C2 (_ bv1 24)) C2))) (and (=> _let_0 (= (bvand %B (bvsub (bvshl (_ bv1 24) (bvsub (_ bv24 24) (ite (= ((_ extract 23 23) _let_3) (_ bv1 1)) (_ bv0 24) (ite (= ((_ extract 22 22) _let_3) (_ bv1 1)) (_ bv1 24) (ite (= ((_ extract 21 21) _let_3) (_ bv1 1)) (_ bv2 24) (ite (= ((_ extract 20 20) _let_3) (_ bv1 1)) (_ bv3 24) (ite (= ((_ extract 19 19) _let_3) (_ bv1 1)) (_ bv4 24) (ite (= ((_ extract 18 18) _let_3) (_ bv1 1)) (_ bv5 24) (ite (= ((_ extract 17 17) _let_3) (_ bv1 1)) (_ bv6 24) (ite (= ((_ extract 16 16) _let_3) (_ bv1 1)) (_ bv7 24) (ite (= ((_ extract 15 15) _let_3) (_ bv1 1)) (_ bv8 24) (ite (= ((_ extract 14 14) _let_3) (_ bv1 1)) (_ bv9 24) (ite (= ((_ extract 13 13) _let_3) (_ bv1 1)) (_ bv10 24) (ite (= ((_ extract 12 12) _let_3) (_ bv1 1)) (_ bv11 24) (ite (= ((_ extract 11 11) _let_3) (_ bv1 1)) (_ bv12 24) (ite (= ((_ extract 10 10) _let_3) (_ bv1 1)) (_ bv13 24) (ite (= ((_ extract 9 9) _let_3) (_ bv1 1)) (_ bv14 24) (ite (= ((_ extract 8 8) _let_3) (_ bv1 1)) (_ bv15 24) (ite (= ((_ extract 7 7) _let_3) (_ bv1 1)) (_ bv16 24) (ite (= ((_ extract 6 6) _let_3) (_ bv1 1)) (_ bv17 24) (ite (= ((_ extract 5 5) _let_3) (_ bv1 1)) (_ bv18 24) (ite (= ((_ extract 4 4) _let_3) (_ bv1 1)) (_ bv19 24) (ite (= ((_ extract 3 3) _let_3) (_ bv1 1)) (_ bv20 24) (ite (= ((_ extract 2 2) _let_3) (_ bv1 1)) (_ bv21 24) (ite (= ((_ extract 1 1) _let_3) (_ bv1 1)) (_ bv22 24) (ite (= ((_ extract 0 0) _let_3) (_ bv1 1)) (_ bv23 24) (_ bv24 24))))))))))))))))))))))))))) (_ bv1 24))) (_ bv0 24))) (= (bvand C1 C2) C2) (or (= (bvand _let_2 (bvsub _let_2 (_ bv1 24))) (_ bv0 24)) (and (= (bvand (bvadd _let_1 (_ bv1 24)) _let_1) (_ bv0 24)) _let_0 (not (= _let_1 (_ bv0 24))))) (not (= (bvand (bvadd (bvand %A C1) %B) C2) (bvand (bvadd %A %B) C2)))))))))
(assert true)
(check-sat)