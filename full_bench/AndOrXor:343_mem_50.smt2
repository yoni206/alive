(set-info :source |
 Generated by Alive 0.1
 More info in N. P. Lopes, D. Menendez, S. Nagarakatte, J. Regehr.
 Provably Correct Peephole Optimizations with Alive. In PLDI'15.
|)

(set-info :status unknown)
(declare-fun mem0 () (_ BitVec 8))
(declare-fun |ana_MaskedValueIsZero(%B, ((1 << (width(C2) - countLeadingZeros(((C2 - 1) ^ C2)))) - 1))| () (_ BitVec 1))
(declare-fun C2 () (_ BitVec 52))
(declare-fun C1 () (_ BitVec 52))
(declare-fun %B () (_ BitVec 52))
(assert
 (let (($x927 (and (distinct mem0 mem0) true)))
 (let (($x131713 (= |ana_MaskedValueIsZero(%B, ((1 << (width(C2) - countLeadingZeros(((C2 - 1) ^ C2)))) - 1))| (_ bv1 1))))
 (let ((?x27487 (bvsub C2 (_ bv1 52))))
 (let ((?x155307 (bvor ?x27487 C2)))
 (let (($x155285 (and (and (distinct ?x155307 (_ bv0 52)) true) (= (bvand (bvadd ?x155307 (_ bv1 52)) ?x155307) (_ bv0 52)) $x131713)))
 (let (($x155280 (or (= (bvand (bvadd C2 (_ bv1 52)) (bvsub (bvadd C2 (_ bv1 52)) (_ bv1 52))) (_ bv0 52)) $x155285)))
 (let ((?x131810 (bvand C1 C2)))
 (let (($x155306 (= ?x131810 C2)))
 (let ((?x155303 (ite (= ((_ extract 1 1) (bvxor ?x27487 C2)) (_ bv1 1)) (_ bv50 52) (ite (= ((_ extract 0 0) (bvxor ?x27487 C2)) (_ bv1 1)) (_ bv51 52) (_ bv52 52)))))
 (let ((?x155291 (ite (= ((_ extract 3 3) (bvxor ?x27487 C2)) (_ bv1 1)) (_ bv48 52) (ite (= ((_ extract 2 2) (bvxor ?x27487 C2)) (_ bv1 1)) (_ bv49 52) ?x155303))))
 (let ((?x155283 (ite (= ((_ extract 5 5) (bvxor ?x27487 C2)) (_ bv1 1)) (_ bv46 52) (ite (= ((_ extract 4 4) (bvxor ?x27487 C2)) (_ bv1 1)) (_ bv47 52) ?x155291))))
 (let ((?x155275 (ite (= ((_ extract 7 7) (bvxor ?x27487 C2)) (_ bv1 1)) (_ bv44 52) (ite (= ((_ extract 6 6) (bvxor ?x27487 C2)) (_ bv1 1)) (_ bv45 52) ?x155283))))
 (let ((?x155262 (ite (= ((_ extract 9 9) (bvxor ?x27487 C2)) (_ bv1 1)) (_ bv42 52) (ite (= ((_ extract 8 8) (bvxor ?x27487 C2)) (_ bv1 1)) (_ bv43 52) ?x155275))))
 (let ((?x155253 (ite (= ((_ extract 11 11) (bvxor ?x27487 C2)) (_ bv1 1)) (_ bv40 52) (ite (= ((_ extract 10 10) (bvxor ?x27487 C2)) (_ bv1 1)) (_ bv41 52) ?x155262))))
 (let ((?x155240 (ite (= ((_ extract 13 13) (bvxor ?x27487 C2)) (_ bv1 1)) (_ bv38 52) (ite (= ((_ extract 12 12) (bvxor ?x27487 C2)) (_ bv1 1)) (_ bv39 52) ?x155253))))
 (let ((?x155226 (ite (= ((_ extract 15 15) (bvxor ?x27487 C2)) (_ bv1 1)) (_ bv36 52) (ite (= ((_ extract 14 14) (bvxor ?x27487 C2)) (_ bv1 1)) (_ bv37 52) ?x155240))))
 (let ((?x155214 (ite (= ((_ extract 17 17) (bvxor ?x27487 C2)) (_ bv1 1)) (_ bv34 52) (ite (= ((_ extract 16 16) (bvxor ?x27487 C2)) (_ bv1 1)) (_ bv35 52) ?x155226))))
 (let ((?x155204 (ite (= ((_ extract 19 19) (bvxor ?x27487 C2)) (_ bv1 1)) (_ bv32 52) (ite (= ((_ extract 18 18) (bvxor ?x27487 C2)) (_ bv1 1)) (_ bv33 52) ?x155214))))
 (let ((?x155193 (ite (= ((_ extract 21 21) (bvxor ?x27487 C2)) (_ bv1 1)) (_ bv30 52) (ite (= ((_ extract 20 20) (bvxor ?x27487 C2)) (_ bv1 1)) (_ bv31 52) ?x155204))))
 (let ((?x154234 (ite (= ((_ extract 23 23) (bvxor ?x27487 C2)) (_ bv1 1)) (_ bv28 52) (ite (= ((_ extract 22 22) (bvxor ?x27487 C2)) (_ bv1 1)) (_ bv29 52) ?x155193))))
 (let ((?x154893 (ite (= ((_ extract 25 25) (bvxor ?x27487 C2)) (_ bv1 1)) (_ bv26 52) (ite (= ((_ extract 24 24) (bvxor ?x27487 C2)) (_ bv1 1)) (_ bv27 52) ?x154234))))
 (let ((?x154907 (ite (= ((_ extract 27 27) (bvxor ?x27487 C2)) (_ bv1 1)) (_ bv24 52) (ite (= ((_ extract 26 26) (bvxor ?x27487 C2)) (_ bv1 1)) (_ bv25 52) ?x154893))))
 (let ((?x155391 (ite (= ((_ extract 29 29) (bvxor ?x27487 C2)) (_ bv1 1)) (_ bv22 52) (ite (= ((_ extract 28 28) (bvxor ?x27487 C2)) (_ bv1 1)) (_ bv23 52) ?x154907))))
 (let ((?x155387 (ite (= ((_ extract 31 31) (bvxor ?x27487 C2)) (_ bv1 1)) (_ bv20 52) (ite (= ((_ extract 30 30) (bvxor ?x27487 C2)) (_ bv1 1)) (_ bv21 52) ?x155391))))
 (let ((?x155383 (ite (= ((_ extract 33 33) (bvxor ?x27487 C2)) (_ bv1 1)) (_ bv18 52) (ite (= ((_ extract 32 32) (bvxor ?x27487 C2)) (_ bv1 1)) (_ bv19 52) ?x155387))))
 (let ((?x155379 (ite (= ((_ extract 35 35) (bvxor ?x27487 C2)) (_ bv1 1)) (_ bv16 52) (ite (= ((_ extract 34 34) (bvxor ?x27487 C2)) (_ bv1 1)) (_ bv17 52) ?x155383))))
 (let ((?x155375 (ite (= ((_ extract 37 37) (bvxor ?x27487 C2)) (_ bv1 1)) (_ bv14 52) (ite (= ((_ extract 36 36) (bvxor ?x27487 C2)) (_ bv1 1)) (_ bv15 52) ?x155379))))
 (let ((?x155368 (ite (= ((_ extract 39 39) (bvxor ?x27487 C2)) (_ bv1 1)) (_ bv12 52) (ite (= ((_ extract 38 38) (bvxor ?x27487 C2)) (_ bv1 1)) (_ bv13 52) ?x155375))))
 (let ((?x155361 (ite (= ((_ extract 41 41) (bvxor ?x27487 C2)) (_ bv1 1)) (_ bv10 52) (ite (= ((_ extract 40 40) (bvxor ?x27487 C2)) (_ bv1 1)) (_ bv11 52) ?x155368))))
 (let ((?x155354 (ite (= ((_ extract 43 43) (bvxor ?x27487 C2)) (_ bv1 1)) (_ bv8 52) (ite (= ((_ extract 42 42) (bvxor ?x27487 C2)) (_ bv1 1)) (_ bv9 52) ?x155361))))
 (let ((?x155350 (ite (= ((_ extract 45 45) (bvxor ?x27487 C2)) (_ bv1 1)) (_ bv6 52) (ite (= ((_ extract 44 44) (bvxor ?x27487 C2)) (_ bv1 1)) (_ bv7 52) ?x155354))))
 (let ((?x155346 (ite (= ((_ extract 47 47) (bvxor ?x27487 C2)) (_ bv1 1)) (_ bv4 52) (ite (= ((_ extract 46 46) (bvxor ?x27487 C2)) (_ bv1 1)) (_ bv5 52) ?x155350))))
 (let ((?x155342 (ite (= ((_ extract 49 49) (bvxor ?x27487 C2)) (_ bv1 1)) (_ bv2 52) (ite (= ((_ extract 48 48) (bvxor ?x27487 C2)) (_ bv1 1)) (_ bv3 52) ?x155346))))
 (let ((?x155335 (ite (= ((_ extract 51 51) (bvxor ?x27487 C2)) (_ bv1 1)) (_ bv0 52) (ite (= ((_ extract 50 50) (bvxor ?x27487 C2)) (_ bv1 1)) (_ bv1 52) ?x155342))))
 (let (($x155284 (=> $x131713 (= (bvand %B (bvsub (bvshl (_ bv1 52) (bvsub (_ bv52 52) ?x155335)) (_ bv1 52))) (_ bv0 52)))))
 (and $x155284 $x155306 $x155280 $x927)))))))))))))))))))))))))))))))))))))
(check-sat)
