(set-info :status unknown)
(declare-fun C2 () (_ BitVec 11))
(declare-fun C3 () (_ BitVec 11))
(declare-fun C () (_ BitVec 34))
(declare-fun %Op () (_ BitVec 34))
(assert
 (let ((?x7036 (bvsub C3 C2)))
 (let ((?x18891 (ite (and (distinct ((_ extract 2 2) ?x7036) (_ bv0 1)) true) (_ bv2 11) (ite (and (distinct ((_ extract 1 1) ?x7036) (_ bv0 1)) true) (_ bv1 11) (_ bv0 11)))))
 (let ((?x10049 (ite (and (distinct ((_ extract 5 5) ?x7036) (_ bv0 1)) true) (_ bv5 11) (ite (and (distinct ((_ extract 4 4) ?x7036) (_ bv0 1)) true) (_ bv4 11) (_ bv3 11)))))
 (let ((?x18644 (ite (and (distinct ((_ extract 8 8) ?x7036) (_ bv0 1)) true) (_ bv8 11) (ite (and (distinct ((_ extract 7 7) ?x7036) (_ bv0 1)) true) (_ bv7 11) (_ bv6 11)))))
 (let ((?x4888 (ite (and (distinct ((_ extract 10 9) ?x7036) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) ?x7036) (_ bv0 1)) true) (_ bv10 11) (_ bv9 11)) ?x18644)))
 (let ((?x6431 (ite (and (distinct ((_ extract 10 6) ?x7036) (_ bv0 5)) true) ?x4888 (ite (and (distinct ((_ extract 5 3) ?x7036) (_ bv0 3)) true) ?x10049 ?x18891))))
 (let ((?x19751 (ite (and (distinct ((_ extract 2 2) C) (_ bv0 1)) true) (_ bv2 11) (ite (and (distinct ((_ extract 1 1) C) (_ bv0 1)) true) (_ bv1 11) (_ bv0 11)))))
 (let ((?x17100 (ite (and (distinct ((_ extract 4 3) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 4 4) C) (_ bv0 1)) true) (_ bv4 11) (_ bv3 11)) ?x19751)))
 (let ((?x14985 (ite (and (distinct ((_ extract 8 7) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 8 8) C) (_ bv0 1)) true) (_ bv8 11) (_ bv7 11)) (ite (and (distinct ((_ extract 6 6) C) (_ bv0 1)) true) (_ bv6 11) (_ bv5 11)))))
 (let ((?x1039 (ite (and (distinct ((_ extract 12 11) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 12 12) C) (_ bv0 1)) true) (_ bv12 11) (_ bv11 11)) (ite (and (distinct ((_ extract 10 10) C) (_ bv0 1)) true) (_ bv10 11) (_ bv9 11)))))
 (let ((?x12958 (ite (and (distinct ((_ extract 16 15) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 16 16) C) (_ bv0 1)) true) (_ bv16 11) (_ bv15 11)) (ite (and (distinct ((_ extract 14 14) C) (_ bv0 1)) true) (_ bv14 11) (_ bv13 11)))))
 (let ((?x6214 (ite (and (distinct ((_ extract 16 9) C) (_ bv0 8)) true) (ite (and (distinct ((_ extract 16 13) C) (_ bv0 4)) true) ?x12958 ?x1039) (ite (and (distinct ((_ extract 8 5) C) (_ bv0 4)) true) ?x14985 ?x17100))))
 (let ((?x10525 (ite (and (distinct ((_ extract 19 19) C) (_ bv0 1)) true) (_ bv19 11) (ite (and (distinct ((_ extract 18 18) C) (_ bv0 1)) true) (_ bv18 11) (_ bv17 11)))))
 (let ((?x5450 (ite (and (distinct ((_ extract 21 20) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 21 21) C) (_ bv0 1)) true) (_ bv21 11) (_ bv20 11)) ?x10525)))
 (let ((?x5954 (ite (and (distinct ((_ extract 25 24) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 25 25) C) (_ bv0 1)) true) (_ bv25 11) (_ bv24 11)) (ite (and (distinct ((_ extract 23 23) C) (_ bv0 1)) true) (_ bv23 11) (_ bv22 11)))))
 (let ((?x21073 (ite (and (distinct ((_ extract 29 28) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 29 29) C) (_ bv0 1)) true) (_ bv29 11) (_ bv28 11)) (ite (and (distinct ((_ extract 27 27) C) (_ bv0 1)) true) (_ bv27 11) (_ bv26 11)))))
 (let ((?x18022 (ite (and (distinct ((_ extract 33 32) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 33 33) C) (_ bv0 1)) true) (_ bv33 11) (_ bv32 11)) (ite (and (distinct ((_ extract 31 31) C) (_ bv0 1)) true) (_ bv31 11) (_ bv30 11)))))
 (let ((?x10067 (ite (and (distinct ((_ extract 33 26) C) (_ bv0 8)) true) (ite (and (distinct ((_ extract 33 30) C) (_ bv0 4)) true) ?x18022 ?x21073) (ite (and (distinct ((_ extract 25 22) C) (_ bv0 4)) true) ?x5954 ?x5450))))
 (let ((?x2216 (bvsub (ite (and (distinct ((_ extract 33 17) C) (_ bv0 17)) true) ?x10067 ?x6214) ?x6431)))
 (let ((?x14230 (ite (bvsgt (_ bv0 11) ?x2216) (_ bv0 11) ?x2216)))
 (let ((?x10125 (bvsub ?x6431 (ite (and (distinct ((_ extract 33 17) C) (_ bv0 17)) true) ?x10067 ?x6214))))
 (let ((?x9361 (ite (bvsgt (_ bv0 11) ?x10125) (_ bv0 11) ?x10125)))
 (let ((?x17014 (bvadd (bvxor (bvlshr (bvshl ((_ extract 10 0) (bvand %Op C)) ?x9361) ?x14230) ?x7036) C2)))
 (let ((?x3096 (ite (= (ite (and (distinct (bvand %Op C) (_ bv0 34)) true) (_ bv1 1) (_ bv0 1)) (_ bv1 1)) C2 C3)))
 (let ((?x12107 (ite (and (distinct ((_ extract 2 2) C) (_ bv0 1)) true) (_ bv2 32) (ite (and (distinct ((_ extract 1 1) C) (_ bv0 1)) true) (_ bv1 32) (_ bv0 32)))))
 (let ((?x12629 (ite (and (distinct ((_ extract 4 3) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 4 4) C) (_ bv0 1)) true) (_ bv4 32) (_ bv3 32)) ?x12107)))
 (let ((?x9493 (ite (and (distinct ((_ extract 8 7) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 8 8) C) (_ bv0 1)) true) (_ bv8 32) (_ bv7 32)) (ite (and (distinct ((_ extract 6 6) C) (_ bv0 1)) true) (_ bv6 32) (_ bv5 32)))))
 (let ((?x5458 (ite (and (distinct ((_ extract 12 11) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 12 12) C) (_ bv0 1)) true) (_ bv12 32) (_ bv11 32)) (ite (and (distinct ((_ extract 10 10) C) (_ bv0 1)) true) (_ bv10 32) (_ bv9 32)))))
 (let ((?x2862 (ite (and (distinct ((_ extract 16 15) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 16 16) C) (_ bv0 1)) true) (_ bv16 32) (_ bv15 32)) (ite (and (distinct ((_ extract 14 14) C) (_ bv0 1)) true) (_ bv14 32) (_ bv13 32)))))
 (let ((?x6961 (ite (and (distinct ((_ extract 16 9) C) (_ bv0 8)) true) (ite (and (distinct ((_ extract 16 13) C) (_ bv0 4)) true) ?x2862 ?x5458) (ite (and (distinct ((_ extract 8 5) C) (_ bv0 4)) true) ?x9493 ?x12629))))
 (let ((?x14753 (ite (and (distinct ((_ extract 19 19) C) (_ bv0 1)) true) (_ bv19 32) (ite (and (distinct ((_ extract 18 18) C) (_ bv0 1)) true) (_ bv18 32) (_ bv17 32)))))
 (let ((?x17869 (ite (and (distinct ((_ extract 21 20) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 21 21) C) (_ bv0 1)) true) (_ bv21 32) (_ bv20 32)) ?x14753)))
 (let ((?x19839 (ite (and (distinct ((_ extract 25 24) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 25 25) C) (_ bv0 1)) true) (_ bv25 32) (_ bv24 32)) (ite (and (distinct ((_ extract 23 23) C) (_ bv0 1)) true) (_ bv23 32) (_ bv22 32)))))
 (let ((?x24116 (ite (and (distinct ((_ extract 29 28) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 29 29) C) (_ bv0 1)) true) (_ bv29 32) (_ bv28 32)) (ite (and (distinct ((_ extract 27 27) C) (_ bv0 1)) true) (_ bv27 32) (_ bv26 32)))))
 (let ((?x3316 (ite (and (distinct ((_ extract 33 32) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 33 33) C) (_ bv0 1)) true) (_ bv33 32) (_ bv32 32)) (ite (and (distinct ((_ extract 31 31) C) (_ bv0 1)) true) (_ bv31 32) (_ bv30 32)))))
 (let ((?x13143 (ite (and (distinct ((_ extract 33 26) C) (_ bv0 8)) true) (ite (and (distinct ((_ extract 33 30) C) (_ bv0 4)) true) ?x3316 ?x24116) (ite (and (distinct ((_ extract 25 22) C) (_ bv0 4)) true) ?x19839 ?x17869))))
 (and (and (and (distinct C (_ bv0 34)) true) (= (bvand C (bvsub C (_ bv1 34))) (_ bv0 34))) (and (and (distinct ?x7036 (_ bv0 11)) true) (= (bvand ?x7036 (bvsub ?x7036 (_ bv1 11))) (_ bv0 11))) (bvslt (ite (and (distinct ((_ extract 33 17) C) (_ bv0 17)) true) ?x13143 ?x6961) (_ bv11 32)) (and (distinct ?x3096 ?x17014) true)))))))))))))))))))))))))))))))))))))))
(check-sat)
