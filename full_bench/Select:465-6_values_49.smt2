(set-info :status unknown)
(declare-fun %Y () (_ BitVec 11))
(declare-fun C1 () (_ BitVec 50))
(declare-fun C2 () (_ BitVec 11))
(declare-fun %X () (_ BitVec 50))
(assert
 (let ((?x16395 (ite (and (distinct ((_ extract 3 2) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 3 3) C1) (_ bv0 1)) true) (_ bv3 11) (_ bv2 11)) (ite (and (distinct ((_ extract 1 1) C1) (_ bv0 1)) true) (_ bv1 11) (_ bv0 11)))))
 (let ((?x20250 (ite (and (distinct ((_ extract 6 6) C1) (_ bv0 1)) true) (_ bv6 11) (ite (and (distinct ((_ extract 5 5) C1) (_ bv0 1)) true) (_ bv5 11) (_ bv4 11)))))
 (let ((?x8665 (ite (and (distinct ((_ extract 9 9) C1) (_ bv0 1)) true) (_ bv9 11) (ite (and (distinct ((_ extract 8 8) C1) (_ bv0 1)) true) (_ bv8 11) (_ bv7 11)))))
 (let ((?x7597 (ite (and (distinct ((_ extract 12 12) C1) (_ bv0 1)) true) (_ bv12 11) (ite (and (distinct ((_ extract 11 11) C1) (_ bv0 1)) true) (_ bv11 11) (_ bv10 11)))))
 (let ((?x11257 (ite (and (distinct ((_ extract 12 7) C1) (_ bv0 6)) true) (ite (and (distinct ((_ extract 12 10) C1) (_ bv0 3)) true) ?x7597 ?x8665) (ite (and (distinct ((_ extract 6 4) C1) (_ bv0 3)) true) ?x20250 ?x16395))))
 (let ((?x14178 (ite (and (distinct ((_ extract 15 15) C1) (_ bv0 1)) true) (_ bv15 11) (ite (and (distinct ((_ extract 14 14) C1) (_ bv0 1)) true) (_ bv14 11) (_ bv13 11)))))
 (let ((?x17163 (ite (and (distinct ((_ extract 18 18) C1) (_ bv0 1)) true) (_ bv18 11) (ite (and (distinct ((_ extract 17 17) C1) (_ bv0 1)) true) (_ bv17 11) (_ bv16 11)))))
 (let ((?x18918 (ite (and (distinct ((_ extract 21 21) C1) (_ bv0 1)) true) (_ bv21 11) (ite (and (distinct ((_ extract 20 20) C1) (_ bv0 1)) true) (_ bv20 11) (_ bv19 11)))))
 (let ((?x16701 (ite (and (distinct ((_ extract 24 24) C1) (_ bv0 1)) true) (_ bv24 11) (ite (and (distinct ((_ extract 23 23) C1) (_ bv0 1)) true) (_ bv23 11) (_ bv22 11)))))
 (let ((?x23636 (ite (and (distinct ((_ extract 24 19) C1) (_ bv0 6)) true) (ite (and (distinct ((_ extract 24 22) C1) (_ bv0 3)) true) ?x16701 ?x18918) (ite (and (distinct ((_ extract 18 16) C1) (_ bv0 3)) true) ?x17163 ?x14178))))
 (let ((?x13511 (ite (and (distinct ((_ extract 28 27) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 28 28) C1) (_ bv0 1)) true) (_ bv28 11) (_ bv27 11)) (ite (and (distinct ((_ extract 26 26) C1) (_ bv0 1)) true) (_ bv26 11) (_ bv25 11)))))
 (let ((?x10165 (ite (and (distinct ((_ extract 31 31) C1) (_ bv0 1)) true) (_ bv31 11) (ite (and (distinct ((_ extract 30 30) C1) (_ bv0 1)) true) (_ bv30 11) (_ bv29 11)))))
 (let ((?x5836 (ite (and (distinct ((_ extract 34 34) C1) (_ bv0 1)) true) (_ bv34 11) (ite (and (distinct ((_ extract 33 33) C1) (_ bv0 1)) true) (_ bv33 11) (_ bv32 11)))))
 (let ((?x3562 (ite (and (distinct ((_ extract 37 37) C1) (_ bv0 1)) true) (_ bv37 11) (ite (and (distinct ((_ extract 36 36) C1) (_ bv0 1)) true) (_ bv36 11) (_ bv35 11)))))
 (let ((?x24167 (ite (and (distinct ((_ extract 37 32) C1) (_ bv0 6)) true) (ite (and (distinct ((_ extract 37 35) C1) (_ bv0 3)) true) ?x3562 ?x5836) (ite (and (distinct ((_ extract 31 29) C1) (_ bv0 3)) true) ?x10165 ?x13511))))
 (let ((?x10213 (ite (and (distinct ((_ extract 40 40) C1) (_ bv0 1)) true) (_ bv40 11) (ite (and (distinct ((_ extract 39 39) C1) (_ bv0 1)) true) (_ bv39 11) (_ bv38 11)))))
 (let ((?x15912 (ite (and (distinct ((_ extract 43 43) C1) (_ bv0 1)) true) (_ bv43 11) (ite (and (distinct ((_ extract 42 42) C1) (_ bv0 1)) true) (_ bv42 11) (_ bv41 11)))))
 (let ((?x9359 (ite (and (distinct ((_ extract 46 46) C1) (_ bv0 1)) true) (_ bv46 11) (ite (and (distinct ((_ extract 45 45) C1) (_ bv0 1)) true) (_ bv45 11) (_ bv44 11)))))
 (let ((?x13251 (ite (and (distinct ((_ extract 49 49) C1) (_ bv0 1)) true) (_ bv49 11) (ite (and (distinct ((_ extract 48 48) C1) (_ bv0 1)) true) (_ bv48 11) (_ bv47 11)))))
 (let ((?x9910 (ite (and (distinct ((_ extract 49 44) C1) (_ bv0 6)) true) (ite (and (distinct ((_ extract 49 47) C1) (_ bv0 3)) true) ?x13251 ?x9359) (ite (and (distinct ((_ extract 43 41) C1) (_ bv0 3)) true) ?x15912 ?x10213))))
 (let ((?x8537 (ite (and (distinct ((_ extract 49 25) C1) (_ bv0 25)) true) (ite (and (distinct ((_ extract 49 38) C1) (_ bv0 12)) true) ?x9910 ?x24167) (ite (and (distinct ((_ extract 24 13) C1) (_ bv0 12)) true) ?x23636 ?x11257))))
 (let ((?x16590 (ite (and (distinct ((_ extract 2 2) C2) (_ bv0 1)) true) (_ bv2 11) (ite (and (distinct ((_ extract 1 1) C2) (_ bv0 1)) true) (_ bv1 11) (_ bv0 11)))))
 (let ((?x2984 (ite (and (distinct ((_ extract 5 5) C2) (_ bv0 1)) true) (_ bv5 11) (ite (and (distinct ((_ extract 4 4) C2) (_ bv0 1)) true) (_ bv4 11) (_ bv3 11)))))
 (let ((?x6010 (ite (and (distinct ((_ extract 8 8) C2) (_ bv0 1)) true) (_ bv8 11) (ite (and (distinct ((_ extract 7 7) C2) (_ bv0 1)) true) (_ bv7 11) (_ bv6 11)))))
 (let ((?x650 (ite (and (distinct ((_ extract 10 9) C2) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) C2) (_ bv0 1)) true) (_ bv10 11) (_ bv9 11)) ?x6010)))
 (let ((?x14682 (ite (and (distinct ((_ extract 10 6) C2) (_ bv0 5)) true) ?x650 (ite (and (distinct ((_ extract 5 3) C2) (_ bv0 3)) true) ?x2984 ?x16590))))
 (let ((?x10128 (bvsub ?x14682 ?x8537)))
 (let ((?x432 (bvor %Y C2)))
 (let ((?x3850 (ite (= (ite (and (distinct (bvand %X C1) (_ bv0 50)) true) (_ bv1 1) (_ bv0 1)) (_ bv1 1)) ?x432 %Y)))
 (let ((?x17935 (ite (and (distinct ((_ extract 3 2) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 3 3) C1) (_ bv0 1)) true) (_ bv3 32) (_ bv2 32)) (ite (and (distinct ((_ extract 1 1) C1) (_ bv0 1)) true) (_ bv1 32) (_ bv0 32)))))
 (let ((?x14082 (ite (and (distinct ((_ extract 6 6) C1) (_ bv0 1)) true) (_ bv6 32) (ite (and (distinct ((_ extract 5 5) C1) (_ bv0 1)) true) (_ bv5 32) (_ bv4 32)))))
 (let ((?x13271 (ite (and (distinct ((_ extract 9 9) C1) (_ bv0 1)) true) (_ bv9 32) (ite (and (distinct ((_ extract 8 8) C1) (_ bv0 1)) true) (_ bv8 32) (_ bv7 32)))))
 (let ((?x15317 (ite (and (distinct ((_ extract 12 12) C1) (_ bv0 1)) true) (_ bv12 32) (ite (and (distinct ((_ extract 11 11) C1) (_ bv0 1)) true) (_ bv11 32) (_ bv10 32)))))
 (let ((?x10804 (ite (and (distinct ((_ extract 12 7) C1) (_ bv0 6)) true) (ite (and (distinct ((_ extract 12 10) C1) (_ bv0 3)) true) ?x15317 ?x13271) (ite (and (distinct ((_ extract 6 4) C1) (_ bv0 3)) true) ?x14082 ?x17935))))
 (let ((?x15664 (ite (and (distinct ((_ extract 15 15) C1) (_ bv0 1)) true) (_ bv15 32) (ite (and (distinct ((_ extract 14 14) C1) (_ bv0 1)) true) (_ bv14 32) (_ bv13 32)))))
 (let ((?x7734 (ite (and (distinct ((_ extract 18 18) C1) (_ bv0 1)) true) (_ bv18 32) (ite (and (distinct ((_ extract 17 17) C1) (_ bv0 1)) true) (_ bv17 32) (_ bv16 32)))))
 (let ((?x19314 (ite (and (distinct ((_ extract 21 21) C1) (_ bv0 1)) true) (_ bv21 32) (ite (and (distinct ((_ extract 20 20) C1) (_ bv0 1)) true) (_ bv20 32) (_ bv19 32)))))
 (let ((?x14873 (ite (and (distinct ((_ extract 24 24) C1) (_ bv0 1)) true) (_ bv24 32) (ite (and (distinct ((_ extract 23 23) C1) (_ bv0 1)) true) (_ bv23 32) (_ bv22 32)))))
 (let ((?x17963 (ite (and (distinct ((_ extract 24 19) C1) (_ bv0 6)) true) (ite (and (distinct ((_ extract 24 22) C1) (_ bv0 3)) true) ?x14873 ?x19314) (ite (and (distinct ((_ extract 18 16) C1) (_ bv0 3)) true) ?x7734 ?x15664))))
 (let ((?x11389 (ite (and (distinct ((_ extract 28 27) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 28 28) C1) (_ bv0 1)) true) (_ bv28 32) (_ bv27 32)) (ite (and (distinct ((_ extract 26 26) C1) (_ bv0 1)) true) (_ bv26 32) (_ bv25 32)))))
 (let ((?x8142 (ite (and (distinct ((_ extract 31 31) C1) (_ bv0 1)) true) (_ bv31 32) (ite (and (distinct ((_ extract 30 30) C1) (_ bv0 1)) true) (_ bv30 32) (_ bv29 32)))))
 (let ((?x5528 (ite (and (distinct ((_ extract 34 34) C1) (_ bv0 1)) true) (_ bv34 32) (ite (and (distinct ((_ extract 33 33) C1) (_ bv0 1)) true) (_ bv33 32) (_ bv32 32)))))
 (let ((?x6411 (ite (and (distinct ((_ extract 37 37) C1) (_ bv0 1)) true) (_ bv37 32) (ite (and (distinct ((_ extract 36 36) C1) (_ bv0 1)) true) (_ bv36 32) (_ bv35 32)))))
 (let ((?x21539 (ite (and (distinct ((_ extract 37 32) C1) (_ bv0 6)) true) (ite (and (distinct ((_ extract 37 35) C1) (_ bv0 3)) true) ?x6411 ?x5528) (ite (and (distinct ((_ extract 31 29) C1) (_ bv0 3)) true) ?x8142 ?x11389))))
 (let ((?x9252 (ite (and (distinct ((_ extract 40 40) C1) (_ bv0 1)) true) (_ bv40 32) (ite (and (distinct ((_ extract 39 39) C1) (_ bv0 1)) true) (_ bv39 32) (_ bv38 32)))))
 (let ((?x14344 (ite (and (distinct ((_ extract 43 43) C1) (_ bv0 1)) true) (_ bv43 32) (ite (and (distinct ((_ extract 42 42) C1) (_ bv0 1)) true) (_ bv42 32) (_ bv41 32)))))
 (let ((?x10382 (ite (and (distinct ((_ extract 46 46) C1) (_ bv0 1)) true) (_ bv46 32) (ite (and (distinct ((_ extract 45 45) C1) (_ bv0 1)) true) (_ bv45 32) (_ bv44 32)))))
 (let ((?x2899 (ite (and (distinct ((_ extract 49 49) C1) (_ bv0 1)) true) (_ bv49 32) (ite (and (distinct ((_ extract 48 48) C1) (_ bv0 1)) true) (_ bv48 32) (_ bv47 32)))))
 (let ((?x2278 (ite (and (distinct ((_ extract 49 44) C1) (_ bv0 6)) true) (ite (and (distinct ((_ extract 49 47) C1) (_ bv0 3)) true) ?x2899 ?x10382) (ite (and (distinct ((_ extract 43 41) C1) (_ bv0 3)) true) ?x14344 ?x9252))))
 (let ((?x9131 (ite (and (distinct ((_ extract 49 25) C1) (_ bv0 25)) true) (ite (and (distinct ((_ extract 49 38) C1) (_ bv0 12)) true) ?x2278 ?x21539) (ite (and (distinct ((_ extract 24 13) C1) (_ bv0 12)) true) ?x17963 ?x10804))))
 (let ((?x2674 (ite (and (distinct ((_ extract 2 2) C2) (_ bv0 1)) true) (_ bv2 32) (ite (and (distinct ((_ extract 1 1) C2) (_ bv0 1)) true) (_ bv1 32) (_ bv0 32)))))
 (let ((?x3505 (ite (and (distinct ((_ extract 5 5) C2) (_ bv0 1)) true) (_ bv5 32) (ite (and (distinct ((_ extract 4 4) C2) (_ bv0 1)) true) (_ bv4 32) (_ bv3 32)))))
 (let ((?x19866 (ite (and (distinct ((_ extract 8 8) C2) (_ bv0 1)) true) (_ bv8 32) (ite (and (distinct ((_ extract 7 7) C2) (_ bv0 1)) true) (_ bv7 32) (_ bv6 32)))))
 (let ((?x15333 (ite (and (distinct ((_ extract 10 9) C2) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) C2) (_ bv0 1)) true) (_ bv10 32) (_ bv9 32)) ?x19866)))
 (let ((?x10906 (ite (and (distinct ((_ extract 10 6) C2) (_ bv0 5)) true) ?x15333 (ite (and (distinct ((_ extract 5 3) C2) (_ bv0 3)) true) ?x3505 ?x2674))))
 (and (and (and (distinct C1 (_ bv0 50)) true) (= (bvand C1 (bvsub C1 (_ bv1 50))) (_ bv0 50))) (and (and (distinct C2 (_ bv0 11)) true) (= (bvand C2 (bvsub C2 (_ bv1 11))) (_ bv0 11))) (bvsge ?x10906 ?x9131) (and (distinct ?x3850 (bvor (bvshl ((_ extract 10 0) (bvand %X C1)) ?x10128) %Y)) true))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
