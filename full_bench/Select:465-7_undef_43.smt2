(set-info :status unknown)
(declare-fun C2 () (_ BitVec 11))
(declare-fun C1 () (_ BitVec 51))
(assert
 (let ((?x1953 (ite (and (distinct ((_ extract 2 2) C2) (_ bv0 1)) true) (_ bv2 51) (ite (and (distinct ((_ extract 1 1) C2) (_ bv0 1)) true) (_ bv1 51) (_ bv0 51)))))
 (let ((?x2564 (ite (and (distinct ((_ extract 5 5) C2) (_ bv0 1)) true) (_ bv5 51) (ite (and (distinct ((_ extract 4 4) C2) (_ bv0 1)) true) (_ bv4 51) (_ bv3 51)))))
 (let ((?x4377 (ite (and (distinct ((_ extract 8 8) C2) (_ bv0 1)) true) (_ bv8 51) (ite (and (distinct ((_ extract 7 7) C2) (_ bv0 1)) true) (_ bv7 51) (_ bv6 51)))))
 (let ((?x4718 (ite (and (distinct ((_ extract 10 9) C2) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) C2) (_ bv0 1)) true) (_ bv10 51) (_ bv9 51)) ?x4377)))
 (let ((?x5392 (ite (and (distinct ((_ extract 10 6) C2) (_ bv0 5)) true) ?x4718 (ite (and (distinct ((_ extract 5 3) C2) (_ bv0 3)) true) ?x2564 ?x1953))))
 (let ((?x1974 (ite (and (distinct ((_ extract 3 2) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 3 3) C1) (_ bv0 1)) true) (_ bv3 51) (_ bv2 51)) (ite (and (distinct ((_ extract 1 1) C1) (_ bv0 1)) true) (_ bv1 51) (_ bv0 51)))))
 (let ((?x5311 (ite (and (distinct ((_ extract 6 6) C1) (_ bv0 1)) true) (_ bv6 51) (ite (and (distinct ((_ extract 5 5) C1) (_ bv0 1)) true) (_ bv5 51) (_ bv4 51)))))
 (let ((?x6466 (ite (and (distinct ((_ extract 9 9) C1) (_ bv0 1)) true) (_ bv9 51) (ite (and (distinct ((_ extract 8 8) C1) (_ bv0 1)) true) (_ bv8 51) (_ bv7 51)))))
 (let ((?x5106 (ite (and (distinct ((_ extract 12 12) C1) (_ bv0 1)) true) (_ bv12 51) (ite (and (distinct ((_ extract 11 11) C1) (_ bv0 1)) true) (_ bv11 51) (_ bv10 51)))))
 (let ((?x5228 (ite (and (distinct ((_ extract 12 7) C1) (_ bv0 6)) true) (ite (and (distinct ((_ extract 12 10) C1) (_ bv0 3)) true) ?x5106 ?x6466) (ite (and (distinct ((_ extract 6 4) C1) (_ bv0 3)) true) ?x5311 ?x1974))))
 (let ((?x2255 (ite (and (distinct ((_ extract 16 15) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 16 16) C1) (_ bv0 1)) true) (_ bv16 51) (_ bv15 51)) (ite (and (distinct ((_ extract 14 14) C1) (_ bv0 1)) true) (_ bv14 51) (_ bv13 51)))))
 (let ((?x2088 (ite (and (distinct ((_ extract 19 19) C1) (_ bv0 1)) true) (_ bv19 51) (ite (and (distinct ((_ extract 18 18) C1) (_ bv0 1)) true) (_ bv18 51) (_ bv17 51)))))
 (let ((?x3411 (ite (and (distinct ((_ extract 22 22) C1) (_ bv0 1)) true) (_ bv22 51) (ite (and (distinct ((_ extract 21 21) C1) (_ bv0 1)) true) (_ bv21 51) (_ bv20 51)))))
 (let ((?x2828 (ite (and (distinct ((_ extract 25 25) C1) (_ bv0 1)) true) (_ bv25 51) (ite (and (distinct ((_ extract 24 24) C1) (_ bv0 1)) true) (_ bv24 51) (_ bv23 51)))))
 (let ((?x6431 (ite (and (distinct ((_ extract 25 20) C1) (_ bv0 6)) true) (ite (and (distinct ((_ extract 25 23) C1) (_ bv0 3)) true) ?x2828 ?x3411) (ite (and (distinct ((_ extract 19 17) C1) (_ bv0 3)) true) ?x2088 ?x2255))))
 (let ((?x4763 (ite (and (distinct ((_ extract 29 28) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 29 29) C1) (_ bv0 1)) true) (_ bv29 51) (_ bv28 51)) (ite (and (distinct ((_ extract 27 27) C1) (_ bv0 1)) true) (_ bv27 51) (_ bv26 51)))))
 (let ((?x1245 (ite (and (distinct ((_ extract 32 32) C1) (_ bv0 1)) true) (_ bv32 51) (ite (and (distinct ((_ extract 31 31) C1) (_ bv0 1)) true) (_ bv31 51) (_ bv30 51)))))
 (let ((?x5039 (ite (and (distinct ((_ extract 35 35) C1) (_ bv0 1)) true) (_ bv35 51) (ite (and (distinct ((_ extract 34 34) C1) (_ bv0 1)) true) (_ bv34 51) (_ bv33 51)))))
 (let ((?x4347 (ite (and (distinct ((_ extract 38 38) C1) (_ bv0 1)) true) (_ bv38 51) (ite (and (distinct ((_ extract 37 37) C1) (_ bv0 1)) true) (_ bv37 51) (_ bv36 51)))))
 (let ((?x3364 (ite (and (distinct ((_ extract 38 33) C1) (_ bv0 6)) true) (ite (and (distinct ((_ extract 38 36) C1) (_ bv0 3)) true) ?x4347 ?x5039) (ite (and (distinct ((_ extract 32 30) C1) (_ bv0 3)) true) ?x1245 ?x4763))))
 (let ((?x5378 (ite (and (distinct ((_ extract 41 41) C1) (_ bv0 1)) true) (_ bv41 51) (ite (and (distinct ((_ extract 40 40) C1) (_ bv0 1)) true) (_ bv40 51) (_ bv39 51)))))
 (let ((?x2378 (ite (and (distinct ((_ extract 44 44) C1) (_ bv0 1)) true) (_ bv44 51) (ite (and (distinct ((_ extract 43 43) C1) (_ bv0 1)) true) (_ bv43 51) (_ bv42 51)))))
 (let ((?x1570 (ite (and (distinct ((_ extract 47 47) C1) (_ bv0 1)) true) (_ bv47 51) (ite (and (distinct ((_ extract 46 46) C1) (_ bv0 1)) true) (_ bv46 51) (_ bv45 51)))))
 (let ((?x4774 (ite (and (distinct ((_ extract 50 50) C1) (_ bv0 1)) true) (_ bv50 51) (ite (and (distinct ((_ extract 49 49) C1) (_ bv0 1)) true) (_ bv49 51) (_ bv48 51)))))
 (let ((?x3685 (ite (and (distinct ((_ extract 50 45) C1) (_ bv0 6)) true) (ite (and (distinct ((_ extract 50 48) C1) (_ bv0 3)) true) ?x4774 ?x1570) (ite (and (distinct ((_ extract 44 42) C1) (_ bv0 3)) true) ?x2378 ?x5378))))
 (let ((?x4297 (ite (and (distinct ((_ extract 50 26) C1) (_ bv0 25)) true) (ite (and (distinct ((_ extract 50 39) C1) (_ bv0 12)) true) ?x3685 ?x3364) (ite (and (distinct ((_ extract 25 13) C1) (_ bv0 13)) true) ?x6431 ?x5228))))
 (let ((?x6262 (bvsub ?x4297 ?x5392)))
 (let ((?x6393 (ite (and (distinct ((_ extract 3 2) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 3 3) C1) (_ bv0 1)) true) (_ bv3 32) (_ bv2 32)) (ite (and (distinct ((_ extract 1 1) C1) (_ bv0 1)) true) (_ bv1 32) (_ bv0 32)))))
 (let ((?x5961 (ite (and (distinct ((_ extract 6 6) C1) (_ bv0 1)) true) (_ bv6 32) (ite (and (distinct ((_ extract 5 5) C1) (_ bv0 1)) true) (_ bv5 32) (_ bv4 32)))))
 (let ((?x3228 (ite (and (distinct ((_ extract 9 9) C1) (_ bv0 1)) true) (_ bv9 32) (ite (and (distinct ((_ extract 8 8) C1) (_ bv0 1)) true) (_ bv8 32) (_ bv7 32)))))
 (let ((?x3136 (ite (and (distinct ((_ extract 12 12) C1) (_ bv0 1)) true) (_ bv12 32) (ite (and (distinct ((_ extract 11 11) C1) (_ bv0 1)) true) (_ bv11 32) (_ bv10 32)))))
 (let ((?x3582 (ite (and (distinct ((_ extract 12 7) C1) (_ bv0 6)) true) (ite (and (distinct ((_ extract 12 10) C1) (_ bv0 3)) true) ?x3136 ?x3228) (ite (and (distinct ((_ extract 6 4) C1) (_ bv0 3)) true) ?x5961 ?x6393))))
 (let ((?x3063 (ite (and (distinct ((_ extract 16 15) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 16 16) C1) (_ bv0 1)) true) (_ bv16 32) (_ bv15 32)) (ite (and (distinct ((_ extract 14 14) C1) (_ bv0 1)) true) (_ bv14 32) (_ bv13 32)))))
 (let ((?x1403 (ite (and (distinct ((_ extract 19 19) C1) (_ bv0 1)) true) (_ bv19 32) (ite (and (distinct ((_ extract 18 18) C1) (_ bv0 1)) true) (_ bv18 32) (_ bv17 32)))))
 (let ((?x6630 (ite (and (distinct ((_ extract 22 22) C1) (_ bv0 1)) true) (_ bv22 32) (ite (and (distinct ((_ extract 21 21) C1) (_ bv0 1)) true) (_ bv21 32) (_ bv20 32)))))
 (let ((?x5679 (ite (and (distinct ((_ extract 25 25) C1) (_ bv0 1)) true) (_ bv25 32) (ite (and (distinct ((_ extract 24 24) C1) (_ bv0 1)) true) (_ bv24 32) (_ bv23 32)))))
 (let ((?x1391 (ite (and (distinct ((_ extract 25 20) C1) (_ bv0 6)) true) (ite (and (distinct ((_ extract 25 23) C1) (_ bv0 3)) true) ?x5679 ?x6630) (ite (and (distinct ((_ extract 19 17) C1) (_ bv0 3)) true) ?x1403 ?x3063))))
 (let ((?x5841 (ite (and (distinct ((_ extract 29 28) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 29 29) C1) (_ bv0 1)) true) (_ bv29 32) (_ bv28 32)) (ite (and (distinct ((_ extract 27 27) C1) (_ bv0 1)) true) (_ bv27 32) (_ bv26 32)))))
 (let ((?x4132 (ite (and (distinct ((_ extract 32 32) C1) (_ bv0 1)) true) (_ bv32 32) (ite (and (distinct ((_ extract 31 31) C1) (_ bv0 1)) true) (_ bv31 32) (_ bv30 32)))))
 (let ((?x3092 (ite (and (distinct ((_ extract 35 35) C1) (_ bv0 1)) true) (_ bv35 32) (ite (and (distinct ((_ extract 34 34) C1) (_ bv0 1)) true) (_ bv34 32) (_ bv33 32)))))
 (let ((?x3584 (ite (and (distinct ((_ extract 38 38) C1) (_ bv0 1)) true) (_ bv38 32) (ite (and (distinct ((_ extract 37 37) C1) (_ bv0 1)) true) (_ bv37 32) (_ bv36 32)))))
 (let ((?x3592 (ite (and (distinct ((_ extract 38 33) C1) (_ bv0 6)) true) (ite (and (distinct ((_ extract 38 36) C1) (_ bv0 3)) true) ?x3584 ?x3092) (ite (and (distinct ((_ extract 32 30) C1) (_ bv0 3)) true) ?x4132 ?x5841))))
 (let ((?x1480 (ite (and (distinct ((_ extract 41 41) C1) (_ bv0 1)) true) (_ bv41 32) (ite (and (distinct ((_ extract 40 40) C1) (_ bv0 1)) true) (_ bv40 32) (_ bv39 32)))))
 (let ((?x1763 (ite (and (distinct ((_ extract 44 44) C1) (_ bv0 1)) true) (_ bv44 32) (ite (and (distinct ((_ extract 43 43) C1) (_ bv0 1)) true) (_ bv43 32) (_ bv42 32)))))
 (let ((?x1230 (ite (and (distinct ((_ extract 47 47) C1) (_ bv0 1)) true) (_ bv47 32) (ite (and (distinct ((_ extract 46 46) C1) (_ bv0 1)) true) (_ bv46 32) (_ bv45 32)))))
 (let ((?x2612 (ite (and (distinct ((_ extract 50 50) C1) (_ bv0 1)) true) (_ bv50 32) (ite (and (distinct ((_ extract 49 49) C1) (_ bv0 1)) true) (_ bv49 32) (_ bv48 32)))))
 (let ((?x2176 (ite (and (distinct ((_ extract 50 45) C1) (_ bv0 6)) true) (ite (and (distinct ((_ extract 50 48) C1) (_ bv0 3)) true) ?x2612 ?x1230) (ite (and (distinct ((_ extract 44 42) C1) (_ bv0 3)) true) ?x1763 ?x1480))))
 (let ((?x2197 (ite (and (distinct ((_ extract 50 26) C1) (_ bv0 25)) true) (ite (and (distinct ((_ extract 50 39) C1) (_ bv0 12)) true) ?x2176 ?x3592) (ite (and (distinct ((_ extract 25 13) C1) (_ bv0 13)) true) ?x1391 ?x3582))))
 (let ((?x5198 (ite (and (distinct ((_ extract 2 2) C2) (_ bv0 1)) true) (_ bv2 32) (ite (and (distinct ((_ extract 1 1) C2) (_ bv0 1)) true) (_ bv1 32) (_ bv0 32)))))
 (let ((?x4563 (ite (and (distinct ((_ extract 5 5) C2) (_ bv0 1)) true) (_ bv5 32) (ite (and (distinct ((_ extract 4 4) C2) (_ bv0 1)) true) (_ bv4 32) (_ bv3 32)))))
 (let ((?x5202 (ite (and (distinct ((_ extract 8 8) C2) (_ bv0 1)) true) (_ bv8 32) (ite (and (distinct ((_ extract 7 7) C2) (_ bv0 1)) true) (_ bv7 32) (_ bv6 32)))))
 (let ((?x1367 (ite (and (distinct ((_ extract 10 9) C2) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) C2) (_ bv0 1)) true) (_ bv10 32) (_ bv9 32)) ?x5202)))
 (let ((?x5516 (ite (and (distinct ((_ extract 10 6) C2) (_ bv0 5)) true) ?x1367 (ite (and (distinct ((_ extract 5 3) C2) (_ bv0 3)) true) ?x4563 ?x5198))))
 (and (and (and (distinct C1 (_ bv0 51)) true) (= (bvand C1 (bvsub C1 (_ bv1 51))) (_ bv0 51))) (and (and (distinct C2 (_ bv0 11)) true) (= (bvand C2 (bvsub C2 (_ bv1 11))) (_ bv0 11))) (bvslt ?x5516 ?x2197) (not (bvult ?x6262 (_ bv51 51))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
