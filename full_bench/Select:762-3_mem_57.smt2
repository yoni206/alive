(set-info :status unknown)
(declare-fun mem0 () (_ BitVec 8))
(declare-fun C () (_ BitVec 61))
(declare-fun C2 () (_ BitVec 11))
(declare-fun C3 () (_ BitVec 11))
(assert
 (let ((?x19206 (ite (and (distinct ((_ extract 3 2) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 3 3) C) (_ bv0 1)) true) (_ bv3 32) (_ bv2 32)) (ite (and (distinct ((_ extract 1 1) C) (_ bv0 1)) true) (_ bv1 32) (_ bv0 32)))))
 (let ((?x9232 (ite (and (distinct ((_ extract 7 6) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 7 7) C) (_ bv0 1)) true) (_ bv7 32) (_ bv6 32)) (ite (and (distinct ((_ extract 5 5) C) (_ bv0 1)) true) (_ bv5 32) (_ bv4 32)))))
 (let ((?x7908 (ite (and (distinct ((_ extract 11 10) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 11 11) C) (_ bv0 1)) true) (_ bv11 32) (_ bv10 32)) (ite (and (distinct ((_ extract 9 9) C) (_ bv0 1)) true) (_ bv9 32) (_ bv8 32)))))
 (let ((?x13636 (ite (and (distinct ((_ extract 15 14) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 15 15) C) (_ bv0 1)) true) (_ bv15 32) (_ bv14 32)) (ite (and (distinct ((_ extract 13 13) C) (_ bv0 1)) true) (_ bv13 32) (_ bv12 32)))))
 (let ((?x397 (ite (and (distinct ((_ extract 15 8) C) (_ bv0 8)) true) (ite (and (distinct ((_ extract 15 12) C) (_ bv0 4)) true) ?x13636 ?x7908) (ite (and (distinct ((_ extract 7 4) C) (_ bv0 4)) true) ?x9232 ?x19206))))
 (let ((?x21210 (ite (and (distinct ((_ extract 19 18) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 19 19) C) (_ bv0 1)) true) (_ bv19 32) (_ bv18 32)) (ite (and (distinct ((_ extract 17 17) C) (_ bv0 1)) true) (_ bv17 32) (_ bv16 32)))))
 (let ((?x17610 (ite (and (distinct ((_ extract 23 22) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 23 23) C) (_ bv0 1)) true) (_ bv23 32) (_ bv22 32)) (ite (and (distinct ((_ extract 21 21) C) (_ bv0 1)) true) (_ bv21 32) (_ bv20 32)))))
 (let ((?x15287 (ite (and (distinct ((_ extract 27 26) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 27 27) C) (_ bv0 1)) true) (_ bv27 32) (_ bv26 32)) (ite (and (distinct ((_ extract 25 25) C) (_ bv0 1)) true) (_ bv25 32) (_ bv24 32)))))
 (let ((?x12022 (ite (and (distinct ((_ extract 30 30) C) (_ bv0 1)) true) (_ bv30 32) (ite (and (distinct ((_ extract 29 29) C) (_ bv0 1)) true) (_ bv29 32) (_ bv28 32)))))
 (let ((?x23613 (ite (and (distinct ((_ extract 30 24) C) (_ bv0 7)) true) (ite (and (distinct ((_ extract 30 28) C) (_ bv0 3)) true) ?x12022 ?x15287) (ite (and (distinct ((_ extract 23 20) C) (_ bv0 4)) true) ?x17610 ?x21210))))
 (let ((?x9502 (ite (and (distinct ((_ extract 34 33) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 34 34) C) (_ bv0 1)) true) (_ bv34 32) (_ bv33 32)) (ite (and (distinct ((_ extract 32 32) C) (_ bv0 1)) true) (_ bv32 32) (_ bv31 32)))))
 (let ((?x8724 (ite (and (distinct ((_ extract 38 37) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 38 38) C) (_ bv0 1)) true) (_ bv38 32) (_ bv37 32)) (ite (and (distinct ((_ extract 36 36) C) (_ bv0 1)) true) (_ bv36 32) (_ bv35 32)))))
 (let ((?x2565 (ite (and (distinct ((_ extract 42 41) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 42 42) C) (_ bv0 1)) true) (_ bv42 32) (_ bv41 32)) (ite (and (distinct ((_ extract 40 40) C) (_ bv0 1)) true) (_ bv40 32) (_ bv39 32)))))
 (let ((?x1595 (ite (and (distinct ((_ extract 45 45) C) (_ bv0 1)) true) (_ bv45 32) (ite (and (distinct ((_ extract 44 44) C) (_ bv0 1)) true) (_ bv44 32) (_ bv43 32)))))
 (let ((?x10051 (ite (and (distinct ((_ extract 45 39) C) (_ bv0 7)) true) (ite (and (distinct ((_ extract 45 43) C) (_ bv0 3)) true) ?x1595 ?x2565) (ite (and (distinct ((_ extract 38 35) C) (_ bv0 4)) true) ?x8724 ?x9502))))
 (let ((?x3265 (ite (and (distinct ((_ extract 49 48) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 49 49) C) (_ bv0 1)) true) (_ bv49 32) (_ bv48 32)) (ite (and (distinct ((_ extract 47 47) C) (_ bv0 1)) true) (_ bv47 32) (_ bv46 32)))))
 (let ((?x21979 (ite (and (distinct ((_ extract 53 52) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 53 53) C) (_ bv0 1)) true) (_ bv53 32) (_ bv52 32)) (ite (and (distinct ((_ extract 51 51) C) (_ bv0 1)) true) (_ bv51 32) (_ bv50 32)))))
 (let ((?x10501 (ite (and (distinct ((_ extract 57 56) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 57 57) C) (_ bv0 1)) true) (_ bv57 32) (_ bv56 32)) (ite (and (distinct ((_ extract 55 55) C) (_ bv0 1)) true) (_ bv55 32) (_ bv54 32)))))
 (let ((?x4269 (ite (and (distinct ((_ extract 60 60) C) (_ bv0 1)) true) (_ bv60 32) (ite (and (distinct ((_ extract 59 59) C) (_ bv0 1)) true) (_ bv59 32) (_ bv58 32)))))
 (let ((?x11117 (ite (and (distinct ((_ extract 60 54) C) (_ bv0 7)) true) (ite (and (distinct ((_ extract 60 58) C) (_ bv0 3)) true) ?x4269 ?x10501) (ite (and (distinct ((_ extract 53 50) C) (_ bv0 4)) true) ?x21979 ?x3265))))
 (let ((?x9495 (ite (and (distinct ((_ extract 60 31) C) (_ bv0 30)) true) (ite (and (distinct ((_ extract 60 46) C) (_ bv0 15)) true) ?x11117 ?x10051) (ite (and (distinct ((_ extract 30 16) C) (_ bv0 15)) true) ?x23613 ?x397))))
 (let (($x15773 (and (and (distinct (bvsub C3 C2) (_ bv0 11)) true) (= (bvand (bvsub C3 C2) (bvsub (bvsub C3 C2) (_ bv1 11))) (_ bv0 11)))))
 (and (and (and (distinct C (_ bv0 61)) true) (= (bvand C (bvsub C (_ bv1 61))) (_ bv0 61))) $x15773 (bvslt ?x9495 (_ bv11 32)) (and (distinct mem0 mem0) true)))))))))))))))))))))))))
(check-sat)
