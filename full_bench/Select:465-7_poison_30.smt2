(set-info :status unknown)
(declare-fun C1 () (_ BitVec 35))
(declare-fun C2 () (_ BitVec 11))
(assert
 (let ((?x12231 (ite (and (distinct ((_ extract 2 2) C1) (_ bv0 1)) true) (_ bv2 32) (ite (and (distinct ((_ extract 1 1) C1) (_ bv0 1)) true) (_ bv1 32) (_ bv0 32)))))
 (let ((?x22983 (ite (and (distinct ((_ extract 4 3) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 4 4) C1) (_ bv0 1)) true) (_ bv4 32) (_ bv3 32)) ?x12231)))
 (let ((?x18886 (ite (and (distinct ((_ extract 8 7) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 8 8) C1) (_ bv0 1)) true) (_ bv8 32) (_ bv7 32)) (ite (and (distinct ((_ extract 6 6) C1) (_ bv0 1)) true) (_ bv6 32) (_ bv5 32)))))
 (let ((?x15632 (ite (and (distinct ((_ extract 11 11) C1) (_ bv0 1)) true) (_ bv11 32) (ite (and (distinct ((_ extract 10 10) C1) (_ bv0 1)) true) (_ bv10 32) (_ bv9 32)))))
 (let ((?x14500 (ite (and (distinct ((_ extract 13 12) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 13 13) C1) (_ bv0 1)) true) (_ bv13 32) (_ bv12 32)) ?x15632)))
 (let ((?x11393 (ite (and (distinct ((_ extract 17 16) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 17 17) C1) (_ bv0 1)) true) (_ bv17 32) (_ bv16 32)) (ite (and (distinct ((_ extract 15 15) C1) (_ bv0 1)) true) (_ bv15 32) (_ bv14 32)))))
 (let ((?x19349 (ite (and (distinct ((_ extract 17 9) C1) (_ bv0 9)) true) (ite (and (distinct ((_ extract 17 14) C1) (_ bv0 4)) true) ?x11393 ?x14500) (ite (and (distinct ((_ extract 8 5) C1) (_ bv0 4)) true) ?x18886 ?x22983))))
 (let ((?x8655 (ite (and (distinct ((_ extract 20 20) C1) (_ bv0 1)) true) (_ bv20 32) (ite (and (distinct ((_ extract 19 19) C1) (_ bv0 1)) true) (_ bv19 32) (_ bv18 32)))))
 (let ((?x8444 (ite (and (distinct ((_ extract 22 21) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 22 22) C1) (_ bv0 1)) true) (_ bv22 32) (_ bv21 32)) ?x8655)))
 (let ((?x506 (ite (and (distinct ((_ extract 26 25) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 26 26) C1) (_ bv0 1)) true) (_ bv26 32) (_ bv25 32)) (ite (and (distinct ((_ extract 24 24) C1) (_ bv0 1)) true) (_ bv24 32) (_ bv23 32)))))
 (let ((?x13675 (ite (and (distinct ((_ extract 30 29) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 30 30) C1) (_ bv0 1)) true) (_ bv30 32) (_ bv29 32)) (ite (and (distinct ((_ extract 28 28) C1) (_ bv0 1)) true) (_ bv28 32) (_ bv27 32)))))
 (let ((?x10059 (ite (and (distinct ((_ extract 34 33) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 34 34) C1) (_ bv0 1)) true) (_ bv34 32) (_ bv33 32)) (ite (and (distinct ((_ extract 32 32) C1) (_ bv0 1)) true) (_ bv32 32) (_ bv31 32)))))
 (let ((?x11186 (ite (and (distinct ((_ extract 34 27) C1) (_ bv0 8)) true) (ite (and (distinct ((_ extract 34 31) C1) (_ bv0 4)) true) ?x10059 ?x13675) (ite (and (distinct ((_ extract 26 23) C1) (_ bv0 4)) true) ?x506 ?x8444))))
 (let ((?x9863 (ite (and (distinct ((_ extract 2 2) C2) (_ bv0 1)) true) (_ bv2 32) (ite (and (distinct ((_ extract 1 1) C2) (_ bv0 1)) true) (_ bv1 32) (_ bv0 32)))))
 (let ((?x23146 (ite (and (distinct ((_ extract 5 5) C2) (_ bv0 1)) true) (_ bv5 32) (ite (and (distinct ((_ extract 4 4) C2) (_ bv0 1)) true) (_ bv4 32) (_ bv3 32)))))
 (let ((?x8589 (ite (and (distinct ((_ extract 8 8) C2) (_ bv0 1)) true) (_ bv8 32) (ite (and (distinct ((_ extract 7 7) C2) (_ bv0 1)) true) (_ bv7 32) (_ bv6 32)))))
 (let ((?x15836 (ite (and (distinct ((_ extract 10 9) C2) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) C2) (_ bv0 1)) true) (_ bv10 32) (_ bv9 32)) ?x8589)))
 (let ((?x12588 (ite (and (distinct ((_ extract 10 6) C2) (_ bv0 5)) true) ?x15836 (ite (and (distinct ((_ extract 5 3) C2) (_ bv0 3)) true) ?x23146 ?x9863))))
 (and (and (and (distinct C1 (_ bv0 35)) true) (= (bvand C1 (bvsub C1 (_ bv1 35))) (_ bv0 35))) (and (and (distinct C2 (_ bv0 11)) true) (= (bvand C2 (bvsub C2 (_ bv1 11))) (_ bv0 11))) (bvslt ?x12588 (ite (and (distinct ((_ extract 34 18) C1) (_ bv0 17)) true) ?x11186 ?x19349)) false))))))))))))))))))))
(check-sat)
