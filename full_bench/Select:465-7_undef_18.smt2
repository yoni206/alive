(set-info :status unknown)
(declare-fun C2 () (_ BitVec 11))
(declare-fun C1 () (_ BitVec 23))
(assert
 (let ((?x10620 (ite (and (distinct ((_ extract 2 2) C2) (_ bv0 1)) true) (_ bv2 23) (ite (and (distinct ((_ extract 1 1) C2) (_ bv0 1)) true) (_ bv1 23) (_ bv0 23)))))
 (let ((?x6534 (ite (and (distinct ((_ extract 5 5) C2) (_ bv0 1)) true) (_ bv5 23) (ite (and (distinct ((_ extract 4 4) C2) (_ bv0 1)) true) (_ bv4 23) (_ bv3 23)))))
 (let ((?x22302 (ite (and (distinct ((_ extract 8 8) C2) (_ bv0 1)) true) (_ bv8 23) (ite (and (distinct ((_ extract 7 7) C2) (_ bv0 1)) true) (_ bv7 23) (_ bv6 23)))))
 (let ((?x12115 (ite (and (distinct ((_ extract 10 9) C2) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) C2) (_ bv0 1)) true) (_ bv10 23) (_ bv9 23)) ?x22302)))
 (let ((?x8687 (ite (and (distinct ((_ extract 10 6) C2) (_ bv0 5)) true) ?x12115 (ite (and (distinct ((_ extract 5 3) C2) (_ bv0 3)) true) ?x6534 ?x10620))))
 (let ((?x24237 (ite (and (distinct ((_ extract 2 2) C1) (_ bv0 1)) true) (_ bv2 23) (ite (and (distinct ((_ extract 1 1) C1) (_ bv0 1)) true) (_ bv1 23) (_ bv0 23)))))
 (let ((?x23298 (ite (and (distinct ((_ extract 5 5) C1) (_ bv0 1)) true) (_ bv5 23) (ite (and (distinct ((_ extract 4 4) C1) (_ bv0 1)) true) (_ bv4 23) (_ bv3 23)))))
 (let ((?x19689 (ite (and (distinct ((_ extract 8 8) C1) (_ bv0 1)) true) (_ bv8 23) (ite (and (distinct ((_ extract 7 7) C1) (_ bv0 1)) true) (_ bv7 23) (_ bv6 23)))))
 (let ((?x16399 (ite (and (distinct ((_ extract 11 11) C1) (_ bv0 1)) true) (_ bv11 23) (ite (and (distinct ((_ extract 10 10) C1) (_ bv0 1)) true) (_ bv10 23) (_ bv9 23)))))
 (let ((?x6929 (ite (and (distinct ((_ extract 11 6) C1) (_ bv0 6)) true) (ite (and (distinct ((_ extract 11 9) C1) (_ bv0 3)) true) ?x16399 ?x19689) (ite (and (distinct ((_ extract 5 3) C1) (_ bv0 3)) true) ?x23298 ?x24237))))
 (let ((?x5506 (ite (and (distinct ((_ extract 14 14) C1) (_ bv0 1)) true) (_ bv14 23) (ite (and (distinct ((_ extract 13 13) C1) (_ bv0 1)) true) (_ bv13 23) (_ bv12 23)))))
 (let ((?x9824 (ite (and (distinct ((_ extract 17 17) C1) (_ bv0 1)) true) (_ bv17 23) (ite (and (distinct ((_ extract 16 16) C1) (_ bv0 1)) true) (_ bv16 23) (_ bv15 23)))))
 (let ((?x19830 (ite (and (distinct ((_ extract 20 20) C1) (_ bv0 1)) true) (_ bv20 23) (ite (and (distinct ((_ extract 19 19) C1) (_ bv0 1)) true) (_ bv19 23) (_ bv18 23)))))
 (let ((?x2384 (ite (and (distinct ((_ extract 22 21) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 22 22) C1) (_ bv0 1)) true) (_ bv22 23) (_ bv21 23)) ?x19830)))
 (let ((?x18571 (ite (and (distinct ((_ extract 22 18) C1) (_ bv0 5)) true) ?x2384 (ite (and (distinct ((_ extract 17 15) C1) (_ bv0 3)) true) ?x9824 ?x5506))))
 (let ((?x12343 (bvsub (ite (and (distinct ((_ extract 22 12) C1) (_ bv0 11)) true) ?x18571 ?x6929) ?x8687)))
 (let ((?x8655 (ite (and (distinct ((_ extract 2 2) C1) (_ bv0 1)) true) (_ bv2 32) (ite (and (distinct ((_ extract 1 1) C1) (_ bv0 1)) true) (_ bv1 32) (_ bv0 32)))))
 (let ((?x5704 (ite (and (distinct ((_ extract 5 5) C1) (_ bv0 1)) true) (_ bv5 32) (ite (and (distinct ((_ extract 4 4) C1) (_ bv0 1)) true) (_ bv4 32) (_ bv3 32)))))
 (let ((?x3437 (ite (and (distinct ((_ extract 8 8) C1) (_ bv0 1)) true) (_ bv8 32) (ite (and (distinct ((_ extract 7 7) C1) (_ bv0 1)) true) (_ bv7 32) (_ bv6 32)))))
 (let ((?x12065 (ite (and (distinct ((_ extract 11 11) C1) (_ bv0 1)) true) (_ bv11 32) (ite (and (distinct ((_ extract 10 10) C1) (_ bv0 1)) true) (_ bv10 32) (_ bv9 32)))))
 (let ((?x5996 (ite (and (distinct ((_ extract 11 6) C1) (_ bv0 6)) true) (ite (and (distinct ((_ extract 11 9) C1) (_ bv0 3)) true) ?x12065 ?x3437) (ite (and (distinct ((_ extract 5 3) C1) (_ bv0 3)) true) ?x5704 ?x8655))))
 (let ((?x11558 (ite (and (distinct ((_ extract 14 14) C1) (_ bv0 1)) true) (_ bv14 32) (ite (and (distinct ((_ extract 13 13) C1) (_ bv0 1)) true) (_ bv13 32) (_ bv12 32)))))
 (let ((?x9645 (ite (and (distinct ((_ extract 17 17) C1) (_ bv0 1)) true) (_ bv17 32) (ite (and (distinct ((_ extract 16 16) C1) (_ bv0 1)) true) (_ bv16 32) (_ bv15 32)))))
 (let ((?x11434 (ite (and (distinct ((_ extract 20 20) C1) (_ bv0 1)) true) (_ bv20 32) (ite (and (distinct ((_ extract 19 19) C1) (_ bv0 1)) true) (_ bv19 32) (_ bv18 32)))))
 (let ((?x5043 (ite (and (distinct ((_ extract 22 21) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 22 22) C1) (_ bv0 1)) true) (_ bv22 32) (_ bv21 32)) ?x11434)))
 (let ((?x6507 (ite (and (distinct ((_ extract 22 18) C1) (_ bv0 5)) true) ?x5043 (ite (and (distinct ((_ extract 17 15) C1) (_ bv0 3)) true) ?x9645 ?x11558))))
 (let ((?x15807 (ite (and (distinct ((_ extract 2 2) C2) (_ bv0 1)) true) (_ bv2 32) (ite (and (distinct ((_ extract 1 1) C2) (_ bv0 1)) true) (_ bv1 32) (_ bv0 32)))))
 (let ((?x22205 (ite (and (distinct ((_ extract 5 5) C2) (_ bv0 1)) true) (_ bv5 32) (ite (and (distinct ((_ extract 4 4) C2) (_ bv0 1)) true) (_ bv4 32) (_ bv3 32)))))
 (let ((?x13812 (ite (and (distinct ((_ extract 8 8) C2) (_ bv0 1)) true) (_ bv8 32) (ite (and (distinct ((_ extract 7 7) C2) (_ bv0 1)) true) (_ bv7 32) (_ bv6 32)))))
 (let ((?x17590 (ite (and (distinct ((_ extract 10 9) C2) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) C2) (_ bv0 1)) true) (_ bv10 32) (_ bv9 32)) ?x13812)))
 (let ((?x13544 (ite (and (distinct ((_ extract 10 6) C2) (_ bv0 5)) true) ?x17590 (ite (and (distinct ((_ extract 5 3) C2) (_ bv0 3)) true) ?x22205 ?x15807))))
 (and (and (and (distinct C1 (_ bv0 23)) true) (= (bvand C1 (bvsub C1 (_ bv1 23))) (_ bv0 23))) (and (and (distinct C2 (_ bv0 11)) true) (= (bvand C2 (bvsub C2 (_ bv1 11))) (_ bv0 11))) (bvslt ?x13544 (ite (and (distinct ((_ extract 22 12) C1) (_ bv0 11)) true) ?x6507 ?x5996)) (not (bvult ?x12343 (_ bv23 23))))))))))))))))))))))))))))))))))))
(check-sat)
