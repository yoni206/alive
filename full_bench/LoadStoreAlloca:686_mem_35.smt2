(set-info :status unknown)
(declare-fun mem0 () (_ BitVec 8))
(declare-fun %p2 () (_ BitVec 64))
(declare-fun idx () (_ BitVec 64))
(declare-fun %p1 () (_ BitVec 64))
(declare-fun |ana_equivalentAddressValues(%p1, %p2)| () (_ BitVec 1))
(assert
 (let ((?x23211 (concat (concat (concat (concat mem0 mem0) mem0) mem0) ((_ extract 6 0) mem0))))
 (let (($x12169 (or true true)))
 (let (($x18818 (and (distinct %p2 (_ bv0 64)) true)))
 (let (($x9408 (and (distinct %p1 (_ bv0 64)) true)))
 (let ((?x16348 (ite (and $x9408 $x12169 $x9408 $x12169 $x9408 $x12169 $x18818 $x12169 (= idx %p2)) (concat ((_ extract 7 7) mem0) ((_ extract 6 0) ?x23211)) mem0)))
 (let (($x18812 (and $x9408 $x12169 $x9408 $x12169 $x9408 $x12169 $x18818 $x12169 (= idx (bvadd (bvadd %p2 (_ bv1 64)) (_ bv0 64))))))
 (let (($x3522 (and $x9408 $x12169 $x9408 $x12169 $x9408 $x12169 $x18818 $x12169 (= idx (bvadd (bvadd %p2 (_ bv1 64)) (_ bv1 64))))))
 (let (($x7360 (and $x9408 $x12169 $x9408 $x12169 $x9408 $x12169 $x18818 $x12169 (= idx (bvadd (bvadd %p2 (_ bv1 64)) (_ bv2 64))))))
 (let ((?x23091 (ite $x7360 ((_ extract 30 23) ?x23211) (ite $x3522 ((_ extract 22 15) ?x23211) (ite $x18812 ((_ extract 14 7) ?x23211) ?x16348)))))
 (let (($x15784 (and $x9408 $x12169 $x9408 $x12169 $x9408 $x12169 $x18818 $x12169 (= idx (bvadd (bvadd %p2 (_ bv1 64)) (_ bv3 64))))))
 (let ((?x14259 (ite $x15784 ((_ extract 38 31) ?x23211) ?x23091)))
 (let (($x20064 (= |ana_equivalentAddressValues(%p1, %p2)| (_ bv1 1))))
 (and (=> $x20064 (= %p1 %p2)) $x20064 (and (distinct ?x14259 mem0) true)))))))))))))))
(check-sat)
