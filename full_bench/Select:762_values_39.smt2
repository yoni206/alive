(set-info :status unknown)
(declare-fun C3 () (_ BitVec 11))
(declare-fun C2 () (_ BitVec 11))
(declare-fun C () (_ BitVec 43))
(declare-fun %Op () (_ BitVec 43))
(assert
 (let ((?x4663 (bvsub C2 C3)))
 (let ((?x5473 (ite (and (distinct ((_ extract 2 2) ?x4663) (_ bv0 1)) true) (_ bv2 11) (ite (and (distinct ((_ extract 1 1) ?x4663) (_ bv0 1)) true) (_ bv1 11) (_ bv0 11)))))
 (let ((?x3033 (ite (and (distinct ((_ extract 5 5) ?x4663) (_ bv0 1)) true) (_ bv5 11) (ite (and (distinct ((_ extract 4 4) ?x4663) (_ bv0 1)) true) (_ bv4 11) (_ bv3 11)))))
 (let ((?x2122 (ite (and (distinct ((_ extract 8 8) ?x4663) (_ bv0 1)) true) (_ bv8 11) (ite (and (distinct ((_ extract 7 7) ?x4663) (_ bv0 1)) true) (_ bv7 11) (_ bv6 11)))))
 (let ((?x1554 (ite (and (distinct ((_ extract 10 9) ?x4663) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) ?x4663) (_ bv0 1)) true) (_ bv10 11) (_ bv9 11)) ?x2122)))
 (let ((?x1711 (ite (and (distinct ((_ extract 10 6) ?x4663) (_ bv0 5)) true) ?x1554 (ite (and (distinct ((_ extract 5 3) ?x4663) (_ bv0 3)) true) ?x3033 ?x5473))))
 (let ((?x7730 (ite (and (distinct ((_ extract 2 2) C) (_ bv0 1)) true) (_ bv2 11) (ite (and (distinct ((_ extract 1 1) C) (_ bv0 1)) true) (_ bv1 11) (_ bv0 11)))))
 (let ((?x3224 (ite (and (distinct ((_ extract 5 5) C) (_ bv0 1)) true) (_ bv5 11) (ite (and (distinct ((_ extract 4 4) C) (_ bv0 1)) true) (_ bv4 11) (_ bv3 11)))))
 (let ((?x8560 (ite (and (distinct ((_ extract 8 8) C) (_ bv0 1)) true) (_ bv8 11) (ite (and (distinct ((_ extract 7 7) C) (_ bv0 1)) true) (_ bv7 11) (_ bv6 11)))))
 (let ((?x4501 (ite (and (distinct ((_ extract 10 9) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) C) (_ bv0 1)) true) (_ bv10 11) (_ bv9 11)) ?x8560)))
 (let ((?x5692 (ite (and (distinct ((_ extract 10 6) C) (_ bv0 5)) true) ?x4501 (ite (and (distinct ((_ extract 5 3) C) (_ bv0 3)) true) ?x3224 ?x7730))))
 (let ((?x5651 (ite (and (distinct ((_ extract 13 13) C) (_ bv0 1)) true) (_ bv13 11) (ite (and (distinct ((_ extract 12 12) C) (_ bv0 1)) true) (_ bv12 11) (_ bv11 11)))))
 (let ((?x4446 (ite (and (distinct ((_ extract 16 16) C) (_ bv0 1)) true) (_ bv16 11) (ite (and (distinct ((_ extract 15 15) C) (_ bv0 1)) true) (_ bv15 11) (_ bv14 11)))))
 (let ((?x3484 (ite (and (distinct ((_ extract 19 19) C) (_ bv0 1)) true) (_ bv19 11) (ite (and (distinct ((_ extract 18 18) C) (_ bv0 1)) true) (_ bv18 11) (_ bv17 11)))))
 (let ((?x3839 (ite (and (distinct ((_ extract 21 20) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 21 21) C) (_ bv0 1)) true) (_ bv21 11) (_ bv20 11)) ?x3484)))
 (let ((?x5849 (ite (and (distinct ((_ extract 21 17) C) (_ bv0 5)) true) ?x3839 (ite (and (distinct ((_ extract 16 14) C) (_ bv0 3)) true) ?x4446 ?x5651))))
 (let ((?x2307 (ite (and (distinct ((_ extract 24 24) C) (_ bv0 1)) true) (_ bv24 11) (ite (and (distinct ((_ extract 23 23) C) (_ bv0 1)) true) (_ bv23 11) (_ bv22 11)))))
 (let ((?x5696 (ite (and (distinct ((_ extract 27 27) C) (_ bv0 1)) true) (_ bv27 11) (ite (and (distinct ((_ extract 26 26) C) (_ bv0 1)) true) (_ bv26 11) (_ bv25 11)))))
 (let ((?x4123 (ite (and (distinct ((_ extract 30 30) C) (_ bv0 1)) true) (_ bv30 11) (ite (and (distinct ((_ extract 29 29) C) (_ bv0 1)) true) (_ bv29 11) (_ bv28 11)))))
 (let ((?x1419 (ite (and (distinct ((_ extract 32 31) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 32 32) C) (_ bv0 1)) true) (_ bv32 11) (_ bv31 11)) ?x4123)))
 (let ((?x2579 (ite (and (distinct ((_ extract 32 28) C) (_ bv0 5)) true) ?x1419 (ite (and (distinct ((_ extract 27 25) C) (_ bv0 3)) true) ?x5696 ?x2307))))
 (let ((?x3263 (ite (and (distinct ((_ extract 35 35) C) (_ bv0 1)) true) (_ bv35 11) (ite (and (distinct ((_ extract 34 34) C) (_ bv0 1)) true) (_ bv34 11) (_ bv33 11)))))
 (let ((?x1165 (ite (and (distinct ((_ extract 37 36) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 37 37) C) (_ bv0 1)) true) (_ bv37 11) (_ bv36 11)) ?x3263)))
 (let ((?x5634 (ite (and (distinct ((_ extract 40 40) C) (_ bv0 1)) true) (_ bv40 11) (ite (and (distinct ((_ extract 39 39) C) (_ bv0 1)) true) (_ bv39 11) (_ bv38 11)))))
 (let ((?x2160 (ite (and (distinct ((_ extract 42 41) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 42 42) C) (_ bv0 1)) true) (_ bv42 11) (_ bv41 11)) ?x5634)))
 (let ((?x2563 (ite (and (distinct ((_ extract 42 33) C) (_ bv0 10)) true) (ite (and (distinct ((_ extract 42 38) C) (_ bv0 5)) true) ?x2160 ?x1165) ?x2579)))
 (let ((?x2213 (ite (and (distinct ((_ extract 42 22) C) (_ bv0 21)) true) ?x2563 (ite (and (distinct ((_ extract 21 11) C) (_ bv0 11)) true) ?x5849 ?x5692))))
 (let ((?x2685 (bvsub ?x2213 ?x1711)))
 (let ((?x4093 (ite (bvsgt (_ bv0 11) ?x2685) (_ bv0 11) ?x2685)))
 (let ((?x1939 (bvsub ?x1711 ?x2213)))
 (let ((?x4623 (ite (bvsgt (_ bv0 11) ?x1939) (_ bv0 11) ?x1939)))
 (let ((?x2343 (bvadd (bvxor (bvlshr (bvshl ((_ extract 10 0) (bvand %Op C)) ?x4623) ?x4093) ?x4663) C3)))
 (let (($x7028 (and (distinct (ite (= (ite (= (bvand %Op C) (_ bv0 43)) (_ bv1 1) (_ bv0 1)) (_ bv1 1)) C2 C3) ?x2343) true)))
 (let ((?x5855 (ite (and (distinct ((_ extract 2 2) C) (_ bv0 1)) true) (_ bv2 32) (ite (and (distinct ((_ extract 1 1) C) (_ bv0 1)) true) (_ bv1 32) (_ bv0 32)))))
 (let ((?x5177 (ite (and (distinct ((_ extract 5 5) C) (_ bv0 1)) true) (_ bv5 32) (ite (and (distinct ((_ extract 4 4) C) (_ bv0 1)) true) (_ bv4 32) (_ bv3 32)))))
 (let ((?x4516 (ite (and (distinct ((_ extract 8 8) C) (_ bv0 1)) true) (_ bv8 32) (ite (and (distinct ((_ extract 7 7) C) (_ bv0 1)) true) (_ bv7 32) (_ bv6 32)))))
 (let ((?x4679 (ite (and (distinct ((_ extract 10 9) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) C) (_ bv0 1)) true) (_ bv10 32) (_ bv9 32)) ?x4516)))
 (let ((?x6213 (ite (and (distinct ((_ extract 10 6) C) (_ bv0 5)) true) ?x4679 (ite (and (distinct ((_ extract 5 3) C) (_ bv0 3)) true) ?x5177 ?x5855))))
 (let ((?x4007 (ite (and (distinct ((_ extract 13 13) C) (_ bv0 1)) true) (_ bv13 32) (ite (and (distinct ((_ extract 12 12) C) (_ bv0 1)) true) (_ bv12 32) (_ bv11 32)))))
 (let ((?x2989 (ite (and (distinct ((_ extract 16 16) C) (_ bv0 1)) true) (_ bv16 32) (ite (and (distinct ((_ extract 15 15) C) (_ bv0 1)) true) (_ bv15 32) (_ bv14 32)))))
 (let ((?x2515 (ite (and (distinct ((_ extract 19 19) C) (_ bv0 1)) true) (_ bv19 32) (ite (and (distinct ((_ extract 18 18) C) (_ bv0 1)) true) (_ bv18 32) (_ bv17 32)))))
 (let ((?x2914 (ite (and (distinct ((_ extract 21 20) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 21 21) C) (_ bv0 1)) true) (_ bv21 32) (_ bv20 32)) ?x2515)))
 (let ((?x3967 (ite (and (distinct ((_ extract 21 17) C) (_ bv0 5)) true) ?x2914 (ite (and (distinct ((_ extract 16 14) C) (_ bv0 3)) true) ?x2989 ?x4007))))
 (let ((?x1603 (ite (and (distinct ((_ extract 24 24) C) (_ bv0 1)) true) (_ bv24 32) (ite (and (distinct ((_ extract 23 23) C) (_ bv0 1)) true) (_ bv23 32) (_ bv22 32)))))
 (let ((?x2941 (ite (and (distinct ((_ extract 27 27) C) (_ bv0 1)) true) (_ bv27 32) (ite (and (distinct ((_ extract 26 26) C) (_ bv0 1)) true) (_ bv26 32) (_ bv25 32)))))
 (let ((?x2915 (ite (and (distinct ((_ extract 30 30) C) (_ bv0 1)) true) (_ bv30 32) (ite (and (distinct ((_ extract 29 29) C) (_ bv0 1)) true) (_ bv29 32) (_ bv28 32)))))
 (let ((?x5975 (ite (and (distinct ((_ extract 32 31) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 32 32) C) (_ bv0 1)) true) (_ bv32 32) (_ bv31 32)) ?x2915)))
 (let ((?x2020 (ite (and (distinct ((_ extract 32 28) C) (_ bv0 5)) true) ?x5975 (ite (and (distinct ((_ extract 27 25) C) (_ bv0 3)) true) ?x2941 ?x1603))))
 (let ((?x5518 (ite (and (distinct ((_ extract 35 35) C) (_ bv0 1)) true) (_ bv35 32) (ite (and (distinct ((_ extract 34 34) C) (_ bv0 1)) true) (_ bv34 32) (_ bv33 32)))))
 (let ((?x4562 (ite (and (distinct ((_ extract 37 36) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 37 37) C) (_ bv0 1)) true) (_ bv37 32) (_ bv36 32)) ?x5518)))
 (let ((?x2591 (ite (and (distinct ((_ extract 40 40) C) (_ bv0 1)) true) (_ bv40 32) (ite (and (distinct ((_ extract 39 39) C) (_ bv0 1)) true) (_ bv39 32) (_ bv38 32)))))
 (let ((?x5992 (ite (and (distinct ((_ extract 42 41) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 42 42) C) (_ bv0 1)) true) (_ bv42 32) (_ bv41 32)) ?x2591)))
 (let ((?x6147 (ite (and (distinct ((_ extract 42 33) C) (_ bv0 10)) true) (ite (and (distinct ((_ extract 42 38) C) (_ bv0 5)) true) ?x5992 ?x4562) ?x2020)))
 (let ((?x5948 (ite (and (distinct ((_ extract 42 22) C) (_ bv0 21)) true) ?x6147 (ite (and (distinct ((_ extract 21 11) C) (_ bv0 11)) true) ?x3967 ?x6213))))
 (and (and (and (distinct C (_ bv0 43)) true) (= (bvand C (bvsub C (_ bv1 43))) (_ bv0 43))) (and (and (distinct ?x4663 (_ bv0 11)) true) (= (bvand ?x4663 (bvsub ?x4663 (_ bv1 11))) (_ bv0 11))) (bvslt ?x5948 (_ bv11 32)) $x7028))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
