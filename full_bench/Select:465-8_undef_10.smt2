(set-info :status unknown)
(declare-fun C2 () (_ BitVec 11))
(declare-fun C1 () (_ BitVec 12))
(assert
 (let ((?x9575 (ite (and (distinct ((_ extract 2 2) C2) (_ bv0 1)) true) (_ bv2 12) (ite (and (distinct ((_ extract 1 1) C2) (_ bv0 1)) true) (_ bv1 12) (_ bv0 12)))))
 (let ((?x19440 (ite (and (distinct ((_ extract 5 5) C2) (_ bv0 1)) true) (_ bv5 12) (ite (and (distinct ((_ extract 4 4) C2) (_ bv0 1)) true) (_ bv4 12) (_ bv3 12)))))
 (let ((?x10837 (ite (and (distinct ((_ extract 8 8) C2) (_ bv0 1)) true) (_ bv8 12) (ite (and (distinct ((_ extract 7 7) C2) (_ bv0 1)) true) (_ bv7 12) (_ bv6 12)))))
 (let ((?x4859 (ite (and (distinct ((_ extract 10 9) C2) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) C2) (_ bv0 1)) true) (_ bv10 12) (_ bv9 12)) ?x10837)))
 (let ((?x5284 (ite (and (distinct ((_ extract 10 6) C2) (_ bv0 5)) true) ?x4859 (ite (and (distinct ((_ extract 5 3) C2) (_ bv0 3)) true) ?x19440 ?x9575))))
 (let ((?x3060 (ite (and (distinct ((_ extract 2 2) C1) (_ bv0 1)) true) (_ bv2 12) (ite (and (distinct ((_ extract 1 1) C1) (_ bv0 1)) true) (_ bv1 12) (_ bv0 12)))))
 (let ((?x11254 (ite (and (distinct ((_ extract 5 5) C1) (_ bv0 1)) true) (_ bv5 12) (ite (and (distinct ((_ extract 4 4) C1) (_ bv0 1)) true) (_ bv4 12) (_ bv3 12)))))
 (let ((?x11895 (ite (and (distinct ((_ extract 8 8) C1) (_ bv0 1)) true) (_ bv8 12) (ite (and (distinct ((_ extract 7 7) C1) (_ bv0 1)) true) (_ bv7 12) (_ bv6 12)))))
 (let ((?x10162 (ite (and (distinct ((_ extract 11 11) C1) (_ bv0 1)) true) (_ bv11 12) (ite (and (distinct ((_ extract 10 10) C1) (_ bv0 1)) true) (_ bv10 12) (_ bv9 12)))))
 (let ((?x7055 (ite (and (distinct ((_ extract 11 6) C1) (_ bv0 6)) true) (ite (and (distinct ((_ extract 11 9) C1) (_ bv0 3)) true) ?x10162 ?x11895) (ite (and (distinct ((_ extract 5 3) C1) (_ bv0 3)) true) ?x11254 ?x3060))))
 (let ((?x9319 (bvsub ?x7055 ?x5284)))
 (let ((?x5464 (ite (and (distinct ((_ extract 2 2) C1) (_ bv0 1)) true) (_ bv2 32) (ite (and (distinct ((_ extract 1 1) C1) (_ bv0 1)) true) (_ bv1 32) (_ bv0 32)))))
 (let ((?x3208 (ite (and (distinct ((_ extract 5 5) C1) (_ bv0 1)) true) (_ bv5 32) (ite (and (distinct ((_ extract 4 4) C1) (_ bv0 1)) true) (_ bv4 32) (_ bv3 32)))))
 (let ((?x17087 (ite (and (distinct ((_ extract 8 8) C1) (_ bv0 1)) true) (_ bv8 32) (ite (and (distinct ((_ extract 7 7) C1) (_ bv0 1)) true) (_ bv7 32) (_ bv6 32)))))
 (let ((?x11069 (ite (and (distinct ((_ extract 11 11) C1) (_ bv0 1)) true) (_ bv11 32) (ite (and (distinct ((_ extract 10 10) C1) (_ bv0 1)) true) (_ bv10 32) (_ bv9 32)))))
 (let ((?x1328 (ite (and (distinct ((_ extract 11 6) C1) (_ bv0 6)) true) (ite (and (distinct ((_ extract 11 9) C1) (_ bv0 3)) true) ?x11069 ?x17087) (ite (and (distinct ((_ extract 5 3) C1) (_ bv0 3)) true) ?x3208 ?x5464))))
 (let ((?x14646 (ite (and (distinct ((_ extract 2 2) C2) (_ bv0 1)) true) (_ bv2 32) (ite (and (distinct ((_ extract 1 1) C2) (_ bv0 1)) true) (_ bv1 32) (_ bv0 32)))))
 (let ((?x15805 (ite (and (distinct ((_ extract 5 5) C2) (_ bv0 1)) true) (_ bv5 32) (ite (and (distinct ((_ extract 4 4) C2) (_ bv0 1)) true) (_ bv4 32) (_ bv3 32)))))
 (let ((?x11546 (ite (and (distinct ((_ extract 8 8) C2) (_ bv0 1)) true) (_ bv8 32) (ite (and (distinct ((_ extract 7 7) C2) (_ bv0 1)) true) (_ bv7 32) (_ bv6 32)))))
 (let ((?x14033 (ite (and (distinct ((_ extract 10 9) C2) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) C2) (_ bv0 1)) true) (_ bv10 32) (_ bv9 32)) ?x11546)))
 (let ((?x20626 (ite (and (distinct ((_ extract 10 6) C2) (_ bv0 5)) true) ?x14033 (ite (and (distinct ((_ extract 5 3) C2) (_ bv0 3)) true) ?x15805 ?x14646))))
 (and (and (and (distinct C1 (_ bv0 12)) true) (= (bvand C1 (bvsub C1 (_ bv1 12))) (_ bv0 12))) (and (and (distinct C2 (_ bv0 11)) true) (= (bvand C2 (bvsub C2 (_ bv1 11))) (_ bv0 11))) (bvslt ?x20626 ?x1328) (not (bvult ?x9319 (_ bv12 12))))))))))))))))))))))))))
(check-sat)
