(set-info :status unknown)
(declare-fun mem0 () (_ BitVec 8))
(declare-fun %y () (_ BitVec 28))
(declare-fun %p2 () (_ BitVec 64))
(declare-fun idx () (_ BitVec 64))
(declare-fun %x () (_ BitVec 28))
(declare-fun %p1 () (_ BitVec 64))
(declare-fun |ana_equivalentAddressValues(%p1, %p2)| () (_ BitVec 1))
(assert
 (let ((?x6060 (ite (and (and (distinct %p2 (_ bv0 64)) true) (or true true) (= idx %p2)) (concat ((_ extract 7 4) mem0) ((_ extract 3 0) %y)) mem0)))
 (let (($x5140 (or true true)))
 (let (($x4757 (and (distinct %p2 (_ bv0 64)) true)))
 (let ((?x18598 (ite (and $x4757 $x5140 (= idx (bvadd (bvadd %p2 (_ bv1 64)) (_ bv0 64)))) ((_ extract 11 4) %y) ?x6060)))
 (let ((?x8887 (ite (and $x4757 $x5140 (= idx (bvadd (bvadd %p2 (_ bv1 64)) (_ bv1 64)))) ((_ extract 19 12) %y) ?x18598)))
 (let ((?x18561 (ite (and $x4757 $x5140 (= idx (bvadd (bvadd %p2 (_ bv1 64)) (_ bv2 64)))) ((_ extract 27 20) %y) ?x8887)))
 (let ((?x389 (ite (and (and (distinct %p1 (_ bv0 64)) true) $x5140 (= idx %p1)) (concat ((_ extract 7 4) mem0) ((_ extract 3 0) %x)) mem0)))
 (let (($x17212 (and (distinct %p1 (_ bv0 64)) true)))
 (let ((?x814 (ite (and $x17212 $x5140 (= idx (bvadd (bvadd %p1 (_ bv1 64)) (_ bv0 64)))) ((_ extract 11 4) %x) ?x389)))
 (let ((?x5878 (ite (and $x17212 $x5140 (= idx (bvadd (bvadd %p1 (_ bv1 64)) (_ bv1 64)))) ((_ extract 19 12) %x) ?x814)))
 (let ((?x11981 (ite (and $x17212 $x5140 (= idx (bvadd (bvadd %p1 (_ bv1 64)) (_ bv2 64)))) ((_ extract 27 20) %x) ?x5878)))
 (let ((?x11965 (ite (and $x17212 $x5140 (= %p2 %p1)) (concat ((_ extract 7 4) mem0) ((_ extract 3 0) %x)) mem0)))
 (let ((?x4855 (ite (and $x17212 $x5140 (= %p2 (bvadd (bvadd %p1 (_ bv1 64)) (_ bv0 64)))) ((_ extract 11 4) %x) ?x11965)))
 (let ((?x16072 (ite (and $x17212 $x5140 (= %p2 (bvadd (bvadd %p1 (_ bv1 64)) (_ bv1 64)))) ((_ extract 19 12) %x) ?x4855)))
 (let ((?x14365 (ite (and $x17212 $x5140 (= %p2 (bvadd (bvadd %p1 (_ bv1 64)) (_ bv2 64)))) ((_ extract 27 20) %x) ?x16072)))
 (let ((?x5036 (ite (and $x17212 $x5140 $x4757 $x5140 (= idx %p2)) (concat ((_ extract 7 4) ?x14365) ((_ extract 3 0) %y)) ?x11981)))
 (let ((?x2401 (ite (and $x17212 $x5140 $x4757 $x5140 (= idx (bvadd (bvadd %p2 (_ bv1 64)) (_ bv0 64)))) ((_ extract 11 4) %y) ?x5036)))
 (let ((?x5441 (ite (and $x17212 $x5140 $x4757 $x5140 (= idx (bvadd (bvadd %p2 (_ bv1 64)) (_ bv1 64)))) ((_ extract 19 12) %y) ?x2401)))
 (let ((?x14160 (ite (and $x17212 $x5140 $x4757 $x5140 (= idx (bvadd (bvadd %p2 (_ bv1 64)) (_ bv2 64)))) ((_ extract 27 20) %y) ?x5441)))
 (let (($x12673 (= |ana_equivalentAddressValues(%p1, %p2)| (_ bv1 1))))
 (and (=> $x12673 (= %p1 %p2)) $x12673 (and (distinct ?x14160 ?x18561) true)))))))))))))))))))))))
(check-sat)
