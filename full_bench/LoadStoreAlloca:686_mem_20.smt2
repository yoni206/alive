(set-info :status unknown)
(declare-fun mem0 () (_ BitVec 8))
(declare-fun %p2 () (_ BitVec 64))
(declare-fun idx () (_ BitVec 64))
(declare-fun %p1 () (_ BitVec 64))
(declare-fun |ana_equivalentAddressValues(%p1, %p2)| () (_ BitVec 1))
(assert
 (let (($x16348 (or true true)))
 (let (($x5923 (and (distinct %p2 (_ bv0 64)) true)))
 (let (($x22711 (and (distinct %p1 (_ bv0 64)) true)))
 (let (($x7360 (and $x22711 $x16348 $x22711 $x16348 $x22711 $x16348 $x5923 $x16348 (= idx (bvadd %p2 (_ bv0 64))))))
 (let (($x10689 (and $x22711 $x16348 $x22711 $x16348 $x22711 $x16348 $x5923 $x16348 (= idx (bvadd %p2 (_ bv1 64))))))
 (let ((?x18865 (ite $x10689 ((_ extract 15 8) (concat (concat mem0 mem0) mem0)) (ite $x7360 ((_ extract 7 0) (concat (concat mem0 mem0) mem0)) mem0))))
 (let (($x1702 (and $x22711 $x16348 $x22711 $x16348 $x22711 $x16348 $x5923 $x16348 (= idx (bvadd %p2 (_ bv2 64))))))
 (let ((?x13853 (ite $x1702 ((_ extract 23 16) (concat (concat mem0 mem0) mem0)) ?x18865)))
 (let (($x13413 (= |ana_equivalentAddressValues(%p1, %p2)| (_ bv1 1))))
 (and (=> $x13413 (= %p1 %p2)) $x13413 (and (distinct ?x13853 mem0) true))))))))))))
(check-sat)
