(set-info :status unknown)
(declare-fun %Y () (_ BitVec 11))
(declare-fun C2 () (_ BitVec 11))
(declare-fun C1 () (_ BitVec 16))
(declare-fun %X () (_ BitVec 16))
(assert
 (let ((?x1821 (ite (and (distinct ((_ extract 2 2) C2) (_ bv0 1)) true) (_ bv2 16) (ite (and (distinct ((_ extract 1 1) C2) (_ bv0 1)) true) (_ bv1 16) (_ bv0 16)))))
 (let ((?x2610 (ite (and (distinct ((_ extract 5 5) C2) (_ bv0 1)) true) (_ bv5 16) (ite (and (distinct ((_ extract 4 4) C2) (_ bv0 1)) true) (_ bv4 16) (_ bv3 16)))))
 (let ((?x4247 (ite (and (distinct ((_ extract 8 8) C2) (_ bv0 1)) true) (_ bv8 16) (ite (and (distinct ((_ extract 7 7) C2) (_ bv0 1)) true) (_ bv7 16) (_ bv6 16)))))
 (let ((?x1853 (ite (and (distinct ((_ extract 10 9) C2) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) C2) (_ bv0 1)) true) (_ bv10 16) (_ bv9 16)) ?x4247)))
 (let ((?x1295 (ite (and (distinct ((_ extract 10 6) C2) (_ bv0 5)) true) ?x1853 (ite (and (distinct ((_ extract 5 3) C2) (_ bv0 3)) true) ?x2610 ?x1821))))
 (let ((?x5890 (ite (and (distinct ((_ extract 3 2) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 3 3) C1) (_ bv0 1)) true) (_ bv3 16) (_ bv2 16)) (ite (and (distinct ((_ extract 1 1) C1) (_ bv0 1)) true) (_ bv1 16) (_ bv0 16)))))
 (let ((?x4917 (ite (and (distinct ((_ extract 7 6) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 7 7) C1) (_ bv0 1)) true) (_ bv7 16) (_ bv6 16)) (ite (and (distinct ((_ extract 5 5) C1) (_ bv0 1)) true) (_ bv5 16) (_ bv4 16)))))
 (let ((?x4630 (ite (and (distinct ((_ extract 11 10) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 11 11) C1) (_ bv0 1)) true) (_ bv11 16) (_ bv10 16)) (ite (and (distinct ((_ extract 9 9) C1) (_ bv0 1)) true) (_ bv9 16) (_ bv8 16)))))
 (let ((?x5467 (ite (and (distinct ((_ extract 15 14) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 15 15) C1) (_ bv0 1)) true) (_ bv15 16) (_ bv14 16)) (ite (and (distinct ((_ extract 13 13) C1) (_ bv0 1)) true) (_ bv13 16) (_ bv12 16)))))
 (let ((?x4559 (ite (and (distinct ((_ extract 15 8) C1) (_ bv0 8)) true) (ite (and (distinct ((_ extract 15 12) C1) (_ bv0 4)) true) ?x5467 ?x4630) (ite (and (distinct ((_ extract 7 4) C1) (_ bv0 4)) true) ?x4917 ?x5890))))
 (let ((?x1437 (bvsub ?x4559 ?x1295)))
 (let ((?x2290 (bvand %X C1)))
 (let ((?x2803 (bvor %Y C2)))
 (let (($x1651 (and (distinct (ite (= (ite (and (distinct ?x2290 (_ bv0 16)) true) (_ bv1 1) (_ bv0 1)) (_ bv1 1)) %Y ?x2803) (bvor (bvxor ((_ extract 10 0) (bvlshr ?x2290 ?x1437)) C2) %Y)) true)))
 (let ((?x1301 (ite (and (distinct ((_ extract 3 2) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 3 3) C1) (_ bv0 1)) true) (_ bv3 32) (_ bv2 32)) (ite (and (distinct ((_ extract 1 1) C1) (_ bv0 1)) true) (_ bv1 32) (_ bv0 32)))))
 (let ((?x3061 (ite (and (distinct ((_ extract 7 6) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 7 7) C1) (_ bv0 1)) true) (_ bv7 32) (_ bv6 32)) (ite (and (distinct ((_ extract 5 5) C1) (_ bv0 1)) true) (_ bv5 32) (_ bv4 32)))))
 (let ((?x4014 (ite (and (distinct ((_ extract 11 10) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 11 11) C1) (_ bv0 1)) true) (_ bv11 32) (_ bv10 32)) (ite (and (distinct ((_ extract 9 9) C1) (_ bv0 1)) true) (_ bv9 32) (_ bv8 32)))))
 (let ((?x2517 (ite (and (distinct ((_ extract 15 14) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 15 15) C1) (_ bv0 1)) true) (_ bv15 32) (_ bv14 32)) (ite (and (distinct ((_ extract 13 13) C1) (_ bv0 1)) true) (_ bv13 32) (_ bv12 32)))))
 (let ((?x2416 (ite (and (distinct ((_ extract 15 8) C1) (_ bv0 8)) true) (ite (and (distinct ((_ extract 15 12) C1) (_ bv0 4)) true) ?x2517 ?x4014) (ite (and (distinct ((_ extract 7 4) C1) (_ bv0 4)) true) ?x3061 ?x1301))))
 (let ((?x4790 (ite (and (distinct ((_ extract 2 2) C2) (_ bv0 1)) true) (_ bv2 32) (ite (and (distinct ((_ extract 1 1) C2) (_ bv0 1)) true) (_ bv1 32) (_ bv0 32)))))
 (let ((?x1244 (ite (and (distinct ((_ extract 5 5) C2) (_ bv0 1)) true) (_ bv5 32) (ite (and (distinct ((_ extract 4 4) C2) (_ bv0 1)) true) (_ bv4 32) (_ bv3 32)))))
 (let ((?x3568 (ite (and (distinct ((_ extract 8 8) C2) (_ bv0 1)) true) (_ bv8 32) (ite (and (distinct ((_ extract 7 7) C2) (_ bv0 1)) true) (_ bv7 32) (_ bv6 32)))))
 (let ((?x5508 (ite (and (distinct ((_ extract 10 9) C2) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) C2) (_ bv0 1)) true) (_ bv10 32) (_ bv9 32)) ?x3568)))
 (let ((?x2817 (ite (and (distinct ((_ extract 10 6) C2) (_ bv0 5)) true) ?x5508 (ite (and (distinct ((_ extract 5 3) C2) (_ bv0 3)) true) ?x1244 ?x4790))))
 (and (and (and (distinct C1 (_ bv0 16)) true) (= (bvand C1 (bvsub C1 (_ bv1 16))) (_ bv0 16))) (and (and (distinct C2 (_ bv0 11)) true) (= (bvand C2 (bvsub C2 (_ bv1 11))) (_ bv0 11))) (bvslt ?x2817 ?x2416) $x1651))))))))))))))))))))))))))
(check-sat)
