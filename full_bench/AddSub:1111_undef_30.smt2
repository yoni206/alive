(set-info :status unknown)
(declare-fun C2 () (_ BitVec 36))
(declare-fun C1 () (_ BitVec 36))
(assert
 (let ((?x3205 (ite (and (distinct ((_ extract 2 2) C2) (_ bv0 1)) true) (_ bv2 36) (ite (and (distinct ((_ extract 1 1) C2) (_ bv0 1)) true) (_ bv1 36) (_ bv0 36)))))
 (let ((?x3920 (ite (and (distinct ((_ extract 4 3) C2) (_ bv0 2)) true) (ite (and (distinct ((_ extract 4 4) C2) (_ bv0 1)) true) (_ bv4 36) (_ bv3 36)) ?x3205)))
 (let ((?x2843 (ite (and (distinct ((_ extract 8 7) C2) (_ bv0 2)) true) (ite (and (distinct ((_ extract 8 8) C2) (_ bv0 1)) true) (_ bv8 36) (_ bv7 36)) (ite (and (distinct ((_ extract 6 6) C2) (_ bv0 1)) true) (_ bv6 36) (_ bv5 36)))))
 (let ((?x1680 (ite (and (distinct ((_ extract 11 11) C2) (_ bv0 1)) true) (_ bv11 36) (ite (and (distinct ((_ extract 10 10) C2) (_ bv0 1)) true) (_ bv10 36) (_ bv9 36)))))
 (let ((?x905 (ite (and (distinct ((_ extract 13 12) C2) (_ bv0 2)) true) (ite (and (distinct ((_ extract 13 13) C2) (_ bv0 1)) true) (_ bv13 36) (_ bv12 36)) ?x1680)))
 (let ((?x5050 (ite (and (distinct ((_ extract 17 16) C2) (_ bv0 2)) true) (ite (and (distinct ((_ extract 17 17) C2) (_ bv0 1)) true) (_ bv17 36) (_ bv16 36)) (ite (and (distinct ((_ extract 15 15) C2) (_ bv0 1)) true) (_ bv15 36) (_ bv14 36)))))
 (let ((?x1508 (ite (and (distinct ((_ extract 17 9) C2) (_ bv0 9)) true) (ite (and (distinct ((_ extract 17 14) C2) (_ bv0 4)) true) ?x5050 ?x905) (ite (and (distinct ((_ extract 8 5) C2) (_ bv0 4)) true) ?x2843 ?x3920))))
 (let ((?x4245 (ite (and (distinct ((_ extract 20 20) C2) (_ bv0 1)) true) (_ bv20 36) (ite (and (distinct ((_ extract 19 19) C2) (_ bv0 1)) true) (_ bv19 36) (_ bv18 36)))))
 (let ((?x3534 (ite (and (distinct ((_ extract 22 21) C2) (_ bv0 2)) true) (ite (and (distinct ((_ extract 22 22) C2) (_ bv0 1)) true) (_ bv22 36) (_ bv21 36)) ?x4245)))
 (let ((?x3273 (ite (and (distinct ((_ extract 26 25) C2) (_ bv0 2)) true) (ite (and (distinct ((_ extract 26 26) C2) (_ bv0 1)) true) (_ bv26 36) (_ bv25 36)) (ite (and (distinct ((_ extract 24 24) C2) (_ bv0 1)) true) (_ bv24 36) (_ bv23 36)))))
 (let ((?x5532 (ite (and (distinct ((_ extract 29 29) C2) (_ bv0 1)) true) (_ bv29 36) (ite (and (distinct ((_ extract 28 28) C2) (_ bv0 1)) true) (_ bv28 36) (_ bv27 36)))))
 (let ((?x2365 (ite (and (distinct ((_ extract 31 30) C2) (_ bv0 2)) true) (ite (and (distinct ((_ extract 31 31) C2) (_ bv0 1)) true) (_ bv31 36) (_ bv30 36)) ?x5532)))
 (let ((?x5876 (ite (and (distinct ((_ extract 35 34) C2) (_ bv0 2)) true) (ite (and (distinct ((_ extract 35 35) C2) (_ bv0 1)) true) (_ bv35 36) (_ bv34 36)) (ite (and (distinct ((_ extract 33 33) C2) (_ bv0 1)) true) (_ bv33 36) (_ bv32 36)))))
 (let ((?x2294 (ite (and (distinct ((_ extract 35 27) C2) (_ bv0 9)) true) (ite (and (distinct ((_ extract 35 32) C2) (_ bv0 4)) true) ?x5876 ?x2365) (ite (and (distinct ((_ extract 26 23) C2) (_ bv0 4)) true) ?x3273 ?x3534))))
 (let ((?x4363 (bvsub (bvsub (_ bv36 36) (ite (and (distinct ((_ extract 35 18) C2) (_ bv0 18)) true) ?x2294 ?x1508)) (_ bv1 36))))
 (let ((?x4072 (bvsub (_ bv36 36) ?x4363)))
 (let (($x6372 (bvult ?x4072 (_ bv36 36))))
 (and (= C1 (bvneg C2)) (and (and (distinct C2 (_ bv0 36)) true) (= (bvand C2 (bvsub C2 (_ bv1 36))) (_ bv0 36))) (not (= (bvand C2 (bvshl (_ bv68719476735 36) ?x4072)) (_ bv0 36))) (not (and $x6372 $x6372)))))))))))))))))))))
(check-sat)
