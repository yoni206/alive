(set-info :status unknown)
(declare-fun mem0 () (_ BitVec 8))
(declare-fun C2 () (_ BitVec 40))
(declare-fun C1 () (_ BitVec 40))
(assert
 (let ((?x3556 (ite (and (distinct ((_ extract 2 2) C2) (_ bv0 1)) true) (_ bv2 40) (ite (and (distinct ((_ extract 1 1) C2) (_ bv0 1)) true) (_ bv1 40) (_ bv0 40)))))
 (let ((?x1380 (ite (and (distinct ((_ extract 4 3) C2) (_ bv0 2)) true) (ite (and (distinct ((_ extract 4 4) C2) (_ bv0 1)) true) (_ bv4 40) (_ bv3 40)) ?x3556)))
 (let ((?x1759 (ite (and (distinct ((_ extract 7 7) C2) (_ bv0 1)) true) (_ bv7 40) (ite (and (distinct ((_ extract 6 6) C2) (_ bv0 1)) true) (_ bv6 40) (_ bv5 40)))))
 (let ((?x4954 (ite (and (distinct ((_ extract 9 8) C2) (_ bv0 2)) true) (ite (and (distinct ((_ extract 9 9) C2) (_ bv0 1)) true) (_ bv9 40) (_ bv8 40)) ?x1759)))
 (let ((?x3937 (ite (and (distinct ((_ extract 12 12) C2) (_ bv0 1)) true) (_ bv12 40) (ite (and (distinct ((_ extract 11 11) C2) (_ bv0 1)) true) (_ bv11 40) (_ bv10 40)))))
 (let ((?x5050 (ite (and (distinct ((_ extract 14 13) C2) (_ bv0 2)) true) (ite (and (distinct ((_ extract 14 14) C2) (_ bv0 1)) true) (_ bv14 40) (_ bv13 40)) ?x3937)))
 (let ((?x2833 (ite (and (distinct ((_ extract 17 17) C2) (_ bv0 1)) true) (_ bv17 40) (ite (and (distinct ((_ extract 16 16) C2) (_ bv0 1)) true) (_ bv16 40) (_ bv15 40)))))
 (let ((?x2294 (ite (and (distinct ((_ extract 19 18) C2) (_ bv0 2)) true) (ite (and (distinct ((_ extract 19 19) C2) (_ bv0 1)) true) (_ bv19 40) (_ bv18 40)) ?x2833)))
 (let ((?x5185 (ite (and (distinct ((_ extract 19 10) C2) (_ bv0 10)) true) (ite (and (distinct ((_ extract 19 15) C2) (_ bv0 5)) true) ?x2294 ?x5050) (ite (and (distinct ((_ extract 9 5) C2) (_ bv0 5)) true) ?x4954 ?x1380))))
 (let ((?x3865 (ite (and (distinct ((_ extract 22 22) C2) (_ bv0 1)) true) (_ bv22 40) (ite (and (distinct ((_ extract 21 21) C2) (_ bv0 1)) true) (_ bv21 40) (_ bv20 40)))))
 (let ((?x4831 (ite (and (distinct ((_ extract 24 23) C2) (_ bv0 2)) true) (ite (and (distinct ((_ extract 24 24) C2) (_ bv0 1)) true) (_ bv24 40) (_ bv23 40)) ?x3865)))
 (let ((?x5534 (ite (and (distinct ((_ extract 27 27) C2) (_ bv0 1)) true) (_ bv27 40) (ite (and (distinct ((_ extract 26 26) C2) (_ bv0 1)) true) (_ bv26 40) (_ bv25 40)))))
 (let ((?x4673 (ite (and (distinct ((_ extract 29 28) C2) (_ bv0 2)) true) (ite (and (distinct ((_ extract 29 29) C2) (_ bv0 1)) true) (_ bv29 40) (_ bv28 40)) ?x5534)))
 (let ((?x6035 (ite (and (distinct ((_ extract 32 32) C2) (_ bv0 1)) true) (_ bv32 40) (ite (and (distinct ((_ extract 31 31) C2) (_ bv0 1)) true) (_ bv31 40) (_ bv30 40)))))
 (let ((?x1164 (ite (and (distinct ((_ extract 34 33) C2) (_ bv0 2)) true) (ite (and (distinct ((_ extract 34 34) C2) (_ bv0 1)) true) (_ bv34 40) (_ bv33 40)) ?x6035)))
 (let ((?x6152 (ite (and (distinct ((_ extract 37 37) C2) (_ bv0 1)) true) (_ bv37 40) (ite (and (distinct ((_ extract 36 36) C2) (_ bv0 1)) true) (_ bv36 40) (_ bv35 40)))))
 (let ((?x5998 (ite (and (distinct ((_ extract 39 38) C2) (_ bv0 2)) true) (ite (and (distinct ((_ extract 39 39) C2) (_ bv0 1)) true) (_ bv39 40) (_ bv38 40)) ?x6152)))
 (let ((?x3356 (ite (and (distinct ((_ extract 39 30) C2) (_ bv0 10)) true) (ite (and (distinct ((_ extract 39 35) C2) (_ bv0 5)) true) ?x5998 ?x1164) (ite (and (distinct ((_ extract 29 25) C2) (_ bv0 5)) true) ?x4673 ?x4831))))
 (let ((?x3920 (bvsub (bvsub (_ bv40 40) (ite (and (distinct ((_ extract 39 20) C2) (_ bv0 20)) true) ?x3356 ?x5185)) (_ bv1 40))))
 (let ((?x3792 (bvsub (_ bv40 40) ?x3920)))
 (and (= C1 (bvneg C2)) (and (and (distinct C2 (_ bv0 40)) true) (= (bvand C2 (bvsub C2 (_ bv1 40))) (_ bv0 40))) (not (= (bvand C2 (bvshl (_ bv1099511627775 40) ?x3792)) (_ bv0 40))) (and (distinct mem0 mem0) true)))))))))))))))))))))))
(check-sat)
