(set-info :status unknown)
(declare-fun C () (_ BitVec 13))
(declare-fun %N () (_ BitVec 13))
(assert
 (let ((?x814 (ite (and (distinct ((_ extract 3 2) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 3 3) C) (_ bv0 1)) true) (_ bv3 13) (_ bv2 13)) (ite (and (distinct ((_ extract 1 1) C) (_ bv0 1)) true) (_ bv1 13) (_ bv0 13)))))
 (let ((?x9536 (ite (and (distinct ((_ extract 6 6) C) (_ bv0 1)) true) (_ bv6 13) (ite (and (distinct ((_ extract 5 5) C) (_ bv0 1)) true) (_ bv5 13) (_ bv4 13)))))
 (let ((?x13909 (ite (and (distinct ((_ extract 9 9) C) (_ bv0 1)) true) (_ bv9 13) (ite (and (distinct ((_ extract 8 8) C) (_ bv0 1)) true) (_ bv8 13) (_ bv7 13)))))
 (let ((?x18595 (ite (and (distinct ((_ extract 12 12) C) (_ bv0 1)) true) (_ bv12 13) (ite (and (distinct ((_ extract 11 11) C) (_ bv0 1)) true) (_ bv11 13) (_ bv10 13)))))
 (let ((?x17034 (ite (and (distinct ((_ extract 12 7) C) (_ bv0 6)) true) (ite (and (distinct ((_ extract 12 10) C) (_ bv0 3)) true) ?x18595 ?x13909) (ite (and (distinct ((_ extract 6 4) C) (_ bv0 3)) true) ?x9536 ?x814))))
 (let ((?x11834 (bvadd %N ?x17034)))
 (let (($x16486 (bvult %N (_ bv13 13))))
 (and $x16486 (and (distinct (bvshl C %N) (_ bv0 13)) true) (and (and (distinct C (_ bv0 13)) true) (= (bvand C (bvsub C (_ bv1 13))) (_ bv0 13))) (not (bvult ?x11834 (_ bv13 13))))))))))))
(check-sat)
