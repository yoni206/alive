(set-info :status unknown)
(declare-fun C2 () (_ BitVec 11))
(declare-fun C3 () (_ BitVec 11))
(declare-fun C () (_ BitVec 52))
(declare-fun %Op () (_ BitVec 52))
(assert
 (let ((?x11337 (bvsub C3 C2)))
 (let ((?x12644 (ite (and (distinct ((_ extract 2 2) ?x11337) (_ bv0 1)) true) (_ bv2 11) (ite (and (distinct ((_ extract 1 1) ?x11337) (_ bv0 1)) true) (_ bv1 11) (_ bv0 11)))))
 (let ((?x18843 (ite (and (distinct ((_ extract 5 5) ?x11337) (_ bv0 1)) true) (_ bv5 11) (ite (and (distinct ((_ extract 4 4) ?x11337) (_ bv0 1)) true) (_ bv4 11) (_ bv3 11)))))
 (let ((?x1891 (ite (and (distinct ((_ extract 8 8) ?x11337) (_ bv0 1)) true) (_ bv8 11) (ite (and (distinct ((_ extract 7 7) ?x11337) (_ bv0 1)) true) (_ bv7 11) (_ bv6 11)))))
 (let ((?x5800 (ite (and (distinct ((_ extract 10 9) ?x11337) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) ?x11337) (_ bv0 1)) true) (_ bv10 11) (_ bv9 11)) ?x1891)))
 (let ((?x14415 (ite (and (distinct ((_ extract 10 6) ?x11337) (_ bv0 5)) true) ?x5800 (ite (and (distinct ((_ extract 5 3) ?x11337) (_ bv0 3)) true) ?x18843 ?x12644))))
 (let ((?x6971 (ite (and (distinct ((_ extract 3 2) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 3 3) C) (_ bv0 1)) true) (_ bv3 11) (_ bv2 11)) (ite (and (distinct ((_ extract 1 1) C) (_ bv0 1)) true) (_ bv1 11) (_ bv0 11)))))
 (let ((?x8965 (ite (and (distinct ((_ extract 6 6) C) (_ bv0 1)) true) (_ bv6 11) (ite (and (distinct ((_ extract 5 5) C) (_ bv0 1)) true) (_ bv5 11) (_ bv4 11)))))
 (let ((?x6452 (ite (and (distinct ((_ extract 9 9) C) (_ bv0 1)) true) (_ bv9 11) (ite (and (distinct ((_ extract 8 8) C) (_ bv0 1)) true) (_ bv8 11) (_ bv7 11)))))
 (let ((?x21031 (ite (and (distinct ((_ extract 12 12) C) (_ bv0 1)) true) (_ bv12 11) (ite (and (distinct ((_ extract 11 11) C) (_ bv0 1)) true) (_ bv11 11) (_ bv10 11)))))
 (let ((?x8028 (ite (and (distinct ((_ extract 12 7) C) (_ bv0 6)) true) (ite (and (distinct ((_ extract 12 10) C) (_ bv0 3)) true) ?x21031 ?x6452) (ite (and (distinct ((_ extract 6 4) C) (_ bv0 3)) true) ?x8965 ?x6971))))
 (let ((?x21301 (ite (and (distinct ((_ extract 16 15) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 16 16) C) (_ bv0 1)) true) (_ bv16 11) (_ bv15 11)) (ite (and (distinct ((_ extract 14 14) C) (_ bv0 1)) true) (_ bv14 11) (_ bv13 11)))))
 (let ((?x11814 (ite (and (distinct ((_ extract 19 19) C) (_ bv0 1)) true) (_ bv19 11) (ite (and (distinct ((_ extract 18 18) C) (_ bv0 1)) true) (_ bv18 11) (_ bv17 11)))))
 (let ((?x8358 (ite (and (distinct ((_ extract 22 22) C) (_ bv0 1)) true) (_ bv22 11) (ite (and (distinct ((_ extract 21 21) C) (_ bv0 1)) true) (_ bv21 11) (_ bv20 11)))))
 (let ((?x25152 (ite (and (distinct ((_ extract 25 25) C) (_ bv0 1)) true) (_ bv25 11) (ite (and (distinct ((_ extract 24 24) C) (_ bv0 1)) true) (_ bv24 11) (_ bv23 11)))))
 (let ((?x20811 (ite (and (distinct ((_ extract 25 20) C) (_ bv0 6)) true) (ite (and (distinct ((_ extract 25 23) C) (_ bv0 3)) true) ?x25152 ?x8358) (ite (and (distinct ((_ extract 19 17) C) (_ bv0 3)) true) ?x11814 ?x21301))))
 (let ((?x7510 (ite (and (distinct ((_ extract 29 28) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 29 29) C) (_ bv0 1)) true) (_ bv29 11) (_ bv28 11)) (ite (and (distinct ((_ extract 27 27) C) (_ bv0 1)) true) (_ bv27 11) (_ bv26 11)))))
 (let ((?x9607 (ite (and (distinct ((_ extract 32 32) C) (_ bv0 1)) true) (_ bv32 11) (ite (and (distinct ((_ extract 31 31) C) (_ bv0 1)) true) (_ bv31 11) (_ bv30 11)))))
 (let ((?x7455 (ite (and (distinct ((_ extract 35 35) C) (_ bv0 1)) true) (_ bv35 11) (ite (and (distinct ((_ extract 34 34) C) (_ bv0 1)) true) (_ bv34 11) (_ bv33 11)))))
 (let ((?x3368 (ite (and (distinct ((_ extract 38 38) C) (_ bv0 1)) true) (_ bv38 11) (ite (and (distinct ((_ extract 37 37) C) (_ bv0 1)) true) (_ bv37 11) (_ bv36 11)))))
 (let ((?x17253 (ite (and (distinct ((_ extract 38 33) C) (_ bv0 6)) true) (ite (and (distinct ((_ extract 38 36) C) (_ bv0 3)) true) ?x3368 ?x7455) (ite (and (distinct ((_ extract 32 30) C) (_ bv0 3)) true) ?x9607 ?x7510))))
 (let ((?x1272 (ite (and (distinct ((_ extract 42 41) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 42 42) C) (_ bv0 1)) true) (_ bv42 11) (_ bv41 11)) (ite (and (distinct ((_ extract 40 40) C) (_ bv0 1)) true) (_ bv40 11) (_ bv39 11)))))
 (let ((?x200 (ite (and (distinct ((_ extract 45 45) C) (_ bv0 1)) true) (_ bv45 11) (ite (and (distinct ((_ extract 44 44) C) (_ bv0 1)) true) (_ bv44 11) (_ bv43 11)))))
 (let ((?x13990 (ite (and (distinct ((_ extract 48 48) C) (_ bv0 1)) true) (_ bv48 11) (ite (and (distinct ((_ extract 47 47) C) (_ bv0 1)) true) (_ bv47 11) (_ bv46 11)))))
 (let ((?x17604 (ite (and (distinct ((_ extract 51 51) C) (_ bv0 1)) true) (_ bv51 11) (ite (and (distinct ((_ extract 50 50) C) (_ bv0 1)) true) (_ bv50 11) (_ bv49 11)))))
 (let ((?x10007 (ite (and (distinct ((_ extract 51 46) C) (_ bv0 6)) true) (ite (and (distinct ((_ extract 51 49) C) (_ bv0 3)) true) ?x17604 ?x13990) (ite (and (distinct ((_ extract 45 43) C) (_ bv0 3)) true) ?x200 ?x1272))))
 (let ((?x19777 (ite (and (distinct ((_ extract 51 26) C) (_ bv0 26)) true) (ite (and (distinct ((_ extract 51 39) C) (_ bv0 13)) true) ?x10007 ?x17253) (ite (and (distinct ((_ extract 25 13) C) (_ bv0 13)) true) ?x20811 ?x8028))))
 (let ((?x15333 (bvsub ?x19777 ?x14415)))
 (let ((?x1257 (ite (bvsgt (_ bv0 11) ?x15333) (_ bv0 11) ?x15333)))
 (let ((?x16018 (bvsub ?x14415 ?x19777)))
 (let ((?x17100 (ite (bvsgt (_ bv0 11) ?x16018) (_ bv0 11) ?x16018)))
 (let ((?x19270 (bvadd (bvxor (bvlshr (bvshl ((_ extract 10 0) (bvand %Op C)) ?x17100) ?x1257) ?x11337) C2)))
 (let ((?x15369 (ite (= (ite (and (distinct (bvand %Op C) (_ bv0 52)) true) (_ bv1 1) (_ bv0 1)) (_ bv1 1)) C2 C3)))
 (let ((?x2882 (ite (and (distinct ((_ extract 3 2) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 3 3) C) (_ bv0 1)) true) (_ bv3 32) (_ bv2 32)) (ite (and (distinct ((_ extract 1 1) C) (_ bv0 1)) true) (_ bv1 32) (_ bv0 32)))))
 (let ((?x19424 (ite (and (distinct ((_ extract 6 6) C) (_ bv0 1)) true) (_ bv6 32) (ite (and (distinct ((_ extract 5 5) C) (_ bv0 1)) true) (_ bv5 32) (_ bv4 32)))))
 (let ((?x17213 (ite (and (distinct ((_ extract 9 9) C) (_ bv0 1)) true) (_ bv9 32) (ite (and (distinct ((_ extract 8 8) C) (_ bv0 1)) true) (_ bv8 32) (_ bv7 32)))))
 (let ((?x15594 (ite (and (distinct ((_ extract 12 12) C) (_ bv0 1)) true) (_ bv12 32) (ite (and (distinct ((_ extract 11 11) C) (_ bv0 1)) true) (_ bv11 32) (_ bv10 32)))))
 (let ((?x17583 (ite (and (distinct ((_ extract 12 7) C) (_ bv0 6)) true) (ite (and (distinct ((_ extract 12 10) C) (_ bv0 3)) true) ?x15594 ?x17213) (ite (and (distinct ((_ extract 6 4) C) (_ bv0 3)) true) ?x19424 ?x2882))))
 (let ((?x14383 (ite (and (distinct ((_ extract 16 15) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 16 16) C) (_ bv0 1)) true) (_ bv16 32) (_ bv15 32)) (ite (and (distinct ((_ extract 14 14) C) (_ bv0 1)) true) (_ bv14 32) (_ bv13 32)))))
 (let ((?x11330 (ite (and (distinct ((_ extract 19 19) C) (_ bv0 1)) true) (_ bv19 32) (ite (and (distinct ((_ extract 18 18) C) (_ bv0 1)) true) (_ bv18 32) (_ bv17 32)))))
 (let ((?x9361 (ite (and (distinct ((_ extract 22 22) C) (_ bv0 1)) true) (_ bv22 32) (ite (and (distinct ((_ extract 21 21) C) (_ bv0 1)) true) (_ bv21 32) (_ bv20 32)))))
 (let ((?x7055 (ite (and (distinct ((_ extract 25 25) C) (_ bv0 1)) true) (_ bv25 32) (ite (and (distinct ((_ extract 24 24) C) (_ bv0 1)) true) (_ bv24 32) (_ bv23 32)))))
 (let ((?x13285 (ite (and (distinct ((_ extract 25 20) C) (_ bv0 6)) true) (ite (and (distinct ((_ extract 25 23) C) (_ bv0 3)) true) ?x7055 ?x9361) (ite (and (distinct ((_ extract 19 17) C) (_ bv0 3)) true) ?x11330 ?x14383))))
 (let ((?x5434 (ite (and (distinct ((_ extract 29 28) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 29 29) C) (_ bv0 1)) true) (_ bv29 32) (_ bv28 32)) (ite (and (distinct ((_ extract 27 27) C) (_ bv0 1)) true) (_ bv27 32) (_ bv26 32)))))
 (let ((?x2838 (ite (and (distinct ((_ extract 32 32) C) (_ bv0 1)) true) (_ bv32 32) (ite (and (distinct ((_ extract 31 31) C) (_ bv0 1)) true) (_ bv31 32) (_ bv30 32)))))
 (let ((?x4124 (ite (and (distinct ((_ extract 35 35) C) (_ bv0 1)) true) (_ bv35 32) (ite (and (distinct ((_ extract 34 34) C) (_ bv0 1)) true) (_ bv34 32) (_ bv33 32)))))
 (let ((?x22286 (ite (and (distinct ((_ extract 38 38) C) (_ bv0 1)) true) (_ bv38 32) (ite (and (distinct ((_ extract 37 37) C) (_ bv0 1)) true) (_ bv37 32) (_ bv36 32)))))
 (let ((?x5029 (ite (and (distinct ((_ extract 38 33) C) (_ bv0 6)) true) (ite (and (distinct ((_ extract 38 36) C) (_ bv0 3)) true) ?x22286 ?x4124) (ite (and (distinct ((_ extract 32 30) C) (_ bv0 3)) true) ?x2838 ?x5434))))
 (let ((?x22924 (ite (and (distinct ((_ extract 42 41) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 42 42) C) (_ bv0 1)) true) (_ bv42 32) (_ bv41 32)) (ite (and (distinct ((_ extract 40 40) C) (_ bv0 1)) true) (_ bv40 32) (_ bv39 32)))))
 (let ((?x21409 (ite (and (distinct ((_ extract 45 45) C) (_ bv0 1)) true) (_ bv45 32) (ite (and (distinct ((_ extract 44 44) C) (_ bv0 1)) true) (_ bv44 32) (_ bv43 32)))))
 (let ((?x22023 (ite (and (distinct ((_ extract 48 48) C) (_ bv0 1)) true) (_ bv48 32) (ite (and (distinct ((_ extract 47 47) C) (_ bv0 1)) true) (_ bv47 32) (_ bv46 32)))))
 (let ((?x3983 (ite (and (distinct ((_ extract 51 51) C) (_ bv0 1)) true) (_ bv51 32) (ite (and (distinct ((_ extract 50 50) C) (_ bv0 1)) true) (_ bv50 32) (_ bv49 32)))))
 (let ((?x16077 (ite (and (distinct ((_ extract 51 46) C) (_ bv0 6)) true) (ite (and (distinct ((_ extract 51 49) C) (_ bv0 3)) true) ?x3983 ?x22023) (ite (and (distinct ((_ extract 45 43) C) (_ bv0 3)) true) ?x21409 ?x22924))))
 (let ((?x24070 (ite (and (distinct ((_ extract 51 26) C) (_ bv0 26)) true) (ite (and (distinct ((_ extract 51 39) C) (_ bv0 13)) true) ?x16077 ?x5029) (ite (and (distinct ((_ extract 25 13) C) (_ bv0 13)) true) ?x13285 ?x17583))))
 (and (and (and (distinct C (_ bv0 52)) true) (= (bvand C (bvsub C (_ bv1 52))) (_ bv0 52))) (and (and (distinct ?x11337 (_ bv0 11)) true) (= (bvand ?x11337 (bvsub ?x11337 (_ bv1 11))) (_ bv0 11))) (bvslt ?x24070 (_ bv11 32)) (and (distinct ?x15369 ?x19270) true)))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
