(set-info :status unknown)
(declare-fun %x () (_ BitVec 20))
(declare-fun mem0 () (_ BitVec 8))
(declare-fun %p1 () (_ BitVec 64))
(declare-fun %p2 () (_ BitVec 64))
(declare-fun |ana_equivalentAddressValues(%p1, %p2)| () (_ BitVec 1))
(assert
 (let ((?x17022 (concat ((_ extract 7 4) mem0) ((_ extract 3 0) %x))))
 (let ((?x18858 (ite (and (and (distinct %p1 (_ bv0 64)) true) (or true true) (= %p2 %p1)) ?x17022 mem0)))
 (let ((?x8283 ((_ extract 11 4) %x)))
 (let (($x8080 (or true true)))
 (let (($x407 (and (distinct %p1 (_ bv0 64)) true)))
 (let ((?x9014 (ite (and $x407 $x8080 (= %p2 (bvadd (bvadd %p1 (_ bv1 64)) (_ bv0 64)))) ?x8283 ?x18858)))
 (let ((?x2571 ((_ extract 19 12) %x)))
 (let ((?x11469 (ite (and $x407 $x8080 (= %p2 (bvadd (bvadd %p1 (_ bv1 64)) (_ bv1 64)))) ?x2571 ?x9014)))
 (let ((?x5364 (ite (and $x407 $x8080 (= (bvadd (bvadd %p2 (_ bv1 64)) (_ bv0 64)) %p1)) ?x17022 mem0)))
 (let (($x154 (and $x407 $x8080 (= (bvadd (bvadd %p2 (_ bv1 64)) (_ bv0 64)) (bvadd (bvadd %p1 (_ bv1 64)) (_ bv0 64))))))
 (let (($x11343 (and $x407 $x8080 (= (bvadd (bvadd %p2 (_ bv1 64)) (_ bv0 64)) (bvadd (bvadd %p1 (_ bv1 64)) (_ bv1 64))))))
 (let ((?x23906 (ite (and $x407 $x8080 (= (bvadd (bvadd %p2 (_ bv1 64)) (_ bv1 64)) %p1)) ?x17022 mem0)))
 (let (($x20704 (and $x407 $x8080 (= (bvadd (bvadd %p2 (_ bv1 64)) (_ bv1 64)) (bvadd (bvadd %p1 (_ bv1 64)) (_ bv0 64))))))
 (let (($x634 (and $x407 $x8080 (= (bvadd (bvadd %p2 (_ bv1 64)) (_ bv1 64)) (bvadd (bvadd %p1 (_ bv1 64)) (_ bv1 64))))))
 (let ((?x10927 (concat (ite $x634 ?x2571 (ite $x20704 ?x8283 ?x23906)) (ite $x11343 ?x2571 (ite $x154 ?x8283 ?x5364)))))
 (let (($x6231 (= |ana_equivalentAddressValues(%p1, %p2)| (_ bv1 1))))
 (let (($x13823 (and (distinct %p2 (_ bv0 64)) true)))
 (and $x407 $x8080 $x13823 $x8080 $x13823 $x8080 (=> $x6231 (= %p1 %p2)) $x6231 (and (distinct (concat ?x10927 ((_ extract 3 0) ?x11469)) %x) true))))))))))))))))))))
(check-sat)
