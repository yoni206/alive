(set-info :status unknown)
(declare-fun C1 () (_ BitVec 7))
(declare-fun %Y () (_ BitVec 7))
(declare-fun C2 () (_ BitVec 7))
(declare-fun |ana_MaskedValueIsZero(%Y, (-1 << (log2(C1) + 1)))| () (_ BitVec 1))
(assert
 (let ((?x489 (ite (and (distinct ((_ extract 3 2) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 3 3) C1) (_ bv0 1)) true) (_ bv3 7) (_ bv2 7)) (ite (and (distinct ((_ extract 1 1) C1) (_ bv0 1)) true) (_ bv1 7) (_ bv0 7)))))
 (let ((?x10701 (ite (and (distinct ((_ extract 6 6) C1) (_ bv0 1)) true) (_ bv6 7) (ite (and (distinct ((_ extract 5 5) C1) (_ bv0 1)) true) (_ bv5 7) (_ bv4 7)))))
 (let ((?x4491 (bvsub (bvsub (_ bv7 7) (ite (and (distinct ((_ extract 6 4) C1) (_ bv0 3)) true) ?x10701 ?x489)) (_ bv1 7))))
 (let (($x5160 (and (distinct (bvadd (bvxor %Y C2) C1) (bvashr (bvshl %Y ?x4491) ?x4491)) true)))
 (let (($x10515 (= |ana_MaskedValueIsZero(%Y, (-1 << (log2(C1) + 1)))| (_ bv1 1))))
 (let ((?x11192 (bvshl (_ bv127 7) (bvadd (ite (and (distinct ((_ extract 6 4) C1) (_ bv0 3)) true) ?x10701 ?x489) (_ bv1 7)))))
 (and (=> $x10515 (= (bvand %Y ?x11192) (_ bv0 7))) (= C2 (bvneg C1)) (and (and (distinct C1 (_ bv0 7)) true) (= (bvand C1 (bvsub C1 (_ bv1 7))) (_ bv0 7))) $x10515 $x5160))))))))
(check-sat)
