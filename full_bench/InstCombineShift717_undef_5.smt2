(set-info :status unknown)
(declare-fun C () (_ BitVec 10))
(declare-fun |ana_ComputeNumSignBits(%Op0)| () (_ BitVec 10))
(declare-fun %Op0 () (_ BitVec 10))
(assert
 (let ((?x19378 ((_ extract 9 9) |ana_ComputeNumSignBits(%Op0)|)))
 (let ((?x3913 (ite (= ((_ extract 1 1) |ana_ComputeNumSignBits(%Op0)|) ?x19378) (ite (= ((_ extract 0 0) |ana_ComputeNumSignBits(%Op0)|) ?x19378) (_ bv10 10) (_ bv9 10)) (_ bv8 10))))
 (let ((?x13992 (ite (= ((_ extract 3 3) |ana_ComputeNumSignBits(%Op0)|) ?x19378) (ite (= ((_ extract 2 2) |ana_ComputeNumSignBits(%Op0)|) ?x19378) ?x3913 (_ bv7 10)) (_ bv6 10))))
 (let ((?x3286 (ite (= ((_ extract 5 5) |ana_ComputeNumSignBits(%Op0)|) ?x19378) (ite (= ((_ extract 4 4) |ana_ComputeNumSignBits(%Op0)|) ?x19378) ?x13992 (_ bv5 10)) (_ bv4 10))))
 (let ((?x6874 (ite (= ((_ extract 7 7) |ana_ComputeNumSignBits(%Op0)|) ?x19378) (ite (= ((_ extract 6 6) |ana_ComputeNumSignBits(%Op0)|) ?x19378) ?x3286 (_ bv3 10)) (_ bv2 10))))
 (let (($x16992 (bvsgt (ite (= ((_ extract 8 8) |ana_ComputeNumSignBits(%Op0)|) ?x19378) ?x6874 (_ bv1 10)) C)))
 (let ((?x13233 (ite (= ((_ extract 1 1) %Op0) ((_ extract 9 9) %Op0)) (ite (= ((_ extract 0 0) %Op0) ((_ extract 9 9) %Op0)) (_ bv10 10) (_ bv9 10)) (_ bv8 10))))
 (let ((?x11818 (ite (= ((_ extract 3 3) %Op0) ((_ extract 9 9) %Op0)) (ite (= ((_ extract 2 2) %Op0) ((_ extract 9 9) %Op0)) ?x13233 (_ bv7 10)) (_ bv6 10))))
 (let ((?x14277 (ite (= ((_ extract 5 5) %Op0) ((_ extract 9 9) %Op0)) (ite (= ((_ extract 4 4) %Op0) ((_ extract 9 9) %Op0)) ?x11818 (_ bv5 10)) (_ bv4 10))))
 (let ((?x14647 (ite (= ((_ extract 7 7) %Op0) ((_ extract 9 9) %Op0)) (ite (= ((_ extract 6 6) %Op0) ((_ extract 9 9) %Op0)) ?x14277 (_ bv3 10)) (_ bv2 10))))
 (let (($x7683 (bvule (ite (= ((_ extract 8 8) |ana_ComputeNumSignBits(%Op0)|) ?x19378) ?x6874 (_ bv1 10)) (ite (= ((_ extract 8 8) %Op0) ((_ extract 9 9) %Op0)) ?x14647 (_ bv1 10)))))
 (let (($x150 (bvult C (_ bv10 10))))
 (and $x150 $x7683 $x16992 (not $x150)))))))))))))))
(check-sat)
