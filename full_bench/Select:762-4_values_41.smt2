(set-info :status unknown)
(declare-fun C2 () (_ BitVec 11))
(declare-fun C3 () (_ BitVec 11))
(declare-fun C () (_ BitVec 46))
(declare-fun %Op () (_ BitVec 46))
(assert
 (let ((?x3122 (bvsub C3 C2)))
 (let ((?x5148 (ite (and (distinct ((_ extract 2 2) ?x3122) (_ bv0 1)) true) (_ bv2 11) (ite (and (distinct ((_ extract 1 1) ?x3122) (_ bv0 1)) true) (_ bv1 11) (_ bv0 11)))))
 (let ((?x3068 (ite (and (distinct ((_ extract 5 5) ?x3122) (_ bv0 1)) true) (_ bv5 11) (ite (and (distinct ((_ extract 4 4) ?x3122) (_ bv0 1)) true) (_ bv4 11) (_ bv3 11)))))
 (let ((?x4834 (ite (and (distinct ((_ extract 8 8) ?x3122) (_ bv0 1)) true) (_ bv8 11) (ite (and (distinct ((_ extract 7 7) ?x3122) (_ bv0 1)) true) (_ bv7 11) (_ bv6 11)))))
 (let ((?x7152 (ite (and (distinct ((_ extract 10 9) ?x3122) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) ?x3122) (_ bv0 1)) true) (_ bv10 11) (_ bv9 11)) ?x4834)))
 (let ((?x4912 (ite (and (distinct ((_ extract 10 6) ?x3122) (_ bv0 5)) true) ?x7152 (ite (and (distinct ((_ extract 5 3) ?x3122) (_ bv0 3)) true) ?x3068 ?x5148))))
 (let ((?x5131 (ite (and (distinct ((_ extract 2 2) C) (_ bv0 1)) true) (_ bv2 11) (ite (and (distinct ((_ extract 1 1) C) (_ bv0 1)) true) (_ bv1 11) (_ bv0 11)))))
 (let ((?x5200 (ite (and (distinct ((_ extract 5 5) C) (_ bv0 1)) true) (_ bv5 11) (ite (and (distinct ((_ extract 4 4) C) (_ bv0 1)) true) (_ bv4 11) (_ bv3 11)))))
 (let ((?x1928 (ite (and (distinct ((_ extract 8 8) C) (_ bv0 1)) true) (_ bv8 11) (ite (and (distinct ((_ extract 7 7) C) (_ bv0 1)) true) (_ bv7 11) (_ bv6 11)))))
 (let ((?x2032 (ite (and (distinct ((_ extract 11 11) C) (_ bv0 1)) true) (_ bv11 11) (ite (and (distinct ((_ extract 10 10) C) (_ bv0 1)) true) (_ bv10 11) (_ bv9 11)))))
 (let ((?x2519 (ite (and (distinct ((_ extract 11 6) C) (_ bv0 6)) true) (ite (and (distinct ((_ extract 11 9) C) (_ bv0 3)) true) ?x2032 ?x1928) (ite (and (distinct ((_ extract 5 3) C) (_ bv0 3)) true) ?x5200 ?x5131))))
 (let ((?x4463 (ite (and (distinct ((_ extract 14 14) C) (_ bv0 1)) true) (_ bv14 11) (ite (and (distinct ((_ extract 13 13) C) (_ bv0 1)) true) (_ bv13 11) (_ bv12 11)))))
 (let ((?x1783 (ite (and (distinct ((_ extract 17 17) C) (_ bv0 1)) true) (_ bv17 11) (ite (and (distinct ((_ extract 16 16) C) (_ bv0 1)) true) (_ bv16 11) (_ bv15 11)))))
 (let ((?x4613 (ite (and (distinct ((_ extract 20 20) C) (_ bv0 1)) true) (_ bv20 11) (ite (and (distinct ((_ extract 19 19) C) (_ bv0 1)) true) (_ bv19 11) (_ bv18 11)))))
 (let ((?x5651 (ite (and (distinct ((_ extract 22 21) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 22 22) C) (_ bv0 1)) true) (_ bv22 11) (_ bv21 11)) ?x4613)))
 (let ((?x7095 (ite (and (distinct ((_ extract 22 18) C) (_ bv0 5)) true) ?x5651 (ite (and (distinct ((_ extract 17 15) C) (_ bv0 3)) true) ?x1783 ?x4463))))
 (let ((?x4745 (ite (and (distinct ((_ extract 25 25) C) (_ bv0 1)) true) (_ bv25 11) (ite (and (distinct ((_ extract 24 24) C) (_ bv0 1)) true) (_ bv24 11) (_ bv23 11)))))
 (let ((?x3859 (ite (and (distinct ((_ extract 28 28) C) (_ bv0 1)) true) (_ bv28 11) (ite (and (distinct ((_ extract 27 27) C) (_ bv0 1)) true) (_ bv27 11) (_ bv26 11)))))
 (let ((?x2995 (ite (and (distinct ((_ extract 31 31) C) (_ bv0 1)) true) (_ bv31 11) (ite (and (distinct ((_ extract 30 30) C) (_ bv0 1)) true) (_ bv30 11) (_ bv29 11)))))
 (let ((?x2006 (ite (and (distinct ((_ extract 34 34) C) (_ bv0 1)) true) (_ bv34 11) (ite (and (distinct ((_ extract 33 33) C) (_ bv0 1)) true) (_ bv33 11) (_ bv32 11)))))
 (let ((?x4442 (ite (and (distinct ((_ extract 34 29) C) (_ bv0 6)) true) (ite (and (distinct ((_ extract 34 32) C) (_ bv0 3)) true) ?x2006 ?x2995) (ite (and (distinct ((_ extract 28 26) C) (_ bv0 3)) true) ?x3859 ?x4745))))
 (let ((?x2677 (ite (and (distinct ((_ extract 37 37) C) (_ bv0 1)) true) (_ bv37 11) (ite (and (distinct ((_ extract 36 36) C) (_ bv0 1)) true) (_ bv36 11) (_ bv35 11)))))
 (let ((?x2545 (ite (and (distinct ((_ extract 40 40) C) (_ bv0 1)) true) (_ bv40 11) (ite (and (distinct ((_ extract 39 39) C) (_ bv0 1)) true) (_ bv39 11) (_ bv38 11)))))
 (let ((?x6775 (ite (and (distinct ((_ extract 43 43) C) (_ bv0 1)) true) (_ bv43 11) (ite (and (distinct ((_ extract 42 42) C) (_ bv0 1)) true) (_ bv42 11) (_ bv41 11)))))
 (let ((?x8122 (ite (and (distinct ((_ extract 45 44) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 45 45) C) (_ bv0 1)) true) (_ bv45 11) (_ bv44 11)) ?x6775)))
 (let ((?x7254 (ite (and (distinct ((_ extract 45 41) C) (_ bv0 5)) true) ?x8122 (ite (and (distinct ((_ extract 40 38) C) (_ bv0 3)) true) ?x2545 ?x2677))))
 (let ((?x5240 (ite (and (distinct ((_ extract 45 23) C) (_ bv0 23)) true) (ite (and (distinct ((_ extract 45 35) C) (_ bv0 11)) true) ?x7254 ?x4442) (ite (and (distinct ((_ extract 22 12) C) (_ bv0 11)) true) ?x7095 ?x2519))))
 (let ((?x5923 (bvsub ?x5240 ?x4912)))
 (let ((?x1784 (ite (bvsgt (_ bv0 11) ?x5923) (_ bv0 11) ?x5923)))
 (let ((?x6539 (bvsub ?x4912 ?x5240)))
 (let ((?x5932 (ite (bvsgt (_ bv0 11) ?x6539) (_ bv0 11) ?x6539)))
 (let ((?x2503 (bvadd (bvxor (bvlshr (bvshl ((_ extract 10 0) (bvand %Op C)) ?x5932) ?x1784) ?x3122) C2)))
 (let ((?x2926 (ite (= (ite (and (distinct (bvand %Op C) (_ bv0 46)) true) (_ bv1 1) (_ bv0 1)) (_ bv1 1)) C2 C3)))
 (let ((?x7379 (ite (and (distinct ((_ extract 2 2) C) (_ bv0 1)) true) (_ bv2 32) (ite (and (distinct ((_ extract 1 1) C) (_ bv0 1)) true) (_ bv1 32) (_ bv0 32)))))
 (let ((?x7187 (ite (and (distinct ((_ extract 5 5) C) (_ bv0 1)) true) (_ bv5 32) (ite (and (distinct ((_ extract 4 4) C) (_ bv0 1)) true) (_ bv4 32) (_ bv3 32)))))
 (let ((?x6493 (ite (and (distinct ((_ extract 8 8) C) (_ bv0 1)) true) (_ bv8 32) (ite (and (distinct ((_ extract 7 7) C) (_ bv0 1)) true) (_ bv7 32) (_ bv6 32)))))
 (let ((?x5619 (ite (and (distinct ((_ extract 11 11) C) (_ bv0 1)) true) (_ bv11 32) (ite (and (distinct ((_ extract 10 10) C) (_ bv0 1)) true) (_ bv10 32) (_ bv9 32)))))
 (let ((?x7624 (ite (and (distinct ((_ extract 11 6) C) (_ bv0 6)) true) (ite (and (distinct ((_ extract 11 9) C) (_ bv0 3)) true) ?x5619 ?x6493) (ite (and (distinct ((_ extract 5 3) C) (_ bv0 3)) true) ?x7187 ?x7379))))
 (let ((?x4769 (ite (and (distinct ((_ extract 14 14) C) (_ bv0 1)) true) (_ bv14 32) (ite (and (distinct ((_ extract 13 13) C) (_ bv0 1)) true) (_ bv13 32) (_ bv12 32)))))
 (let ((?x3573 (ite (and (distinct ((_ extract 17 17) C) (_ bv0 1)) true) (_ bv17 32) (ite (and (distinct ((_ extract 16 16) C) (_ bv0 1)) true) (_ bv16 32) (_ bv15 32)))))
 (let ((?x3041 (ite (and (distinct ((_ extract 20 20) C) (_ bv0 1)) true) (_ bv20 32) (ite (and (distinct ((_ extract 19 19) C) (_ bv0 1)) true) (_ bv19 32) (_ bv18 32)))))
 (let ((?x3202 (ite (and (distinct ((_ extract 22 21) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 22 22) C) (_ bv0 1)) true) (_ bv22 32) (_ bv21 32)) ?x3041)))
 (let ((?x5115 (ite (and (distinct ((_ extract 22 18) C) (_ bv0 5)) true) ?x3202 (ite (and (distinct ((_ extract 17 15) C) (_ bv0 3)) true) ?x3573 ?x4769))))
 (let ((?x1833 (ite (and (distinct ((_ extract 25 25) C) (_ bv0 1)) true) (_ bv25 32) (ite (and (distinct ((_ extract 24 24) C) (_ bv0 1)) true) (_ bv24 32) (_ bv23 32)))))
 (let ((?x2319 (ite (and (distinct ((_ extract 28 28) C) (_ bv0 1)) true) (_ bv28 32) (ite (and (distinct ((_ extract 27 27) C) (_ bv0 1)) true) (_ bv27 32) (_ bv26 32)))))
 (let ((?x4948 (ite (and (distinct ((_ extract 31 31) C) (_ bv0 1)) true) (_ bv31 32) (ite (and (distinct ((_ extract 30 30) C) (_ bv0 1)) true) (_ bv30 32) (_ bv29 32)))))
 (let ((?x1158 (ite (and (distinct ((_ extract 34 34) C) (_ bv0 1)) true) (_ bv34 32) (ite (and (distinct ((_ extract 33 33) C) (_ bv0 1)) true) (_ bv33 32) (_ bv32 32)))))
 (let ((?x1559 (ite (and (distinct ((_ extract 34 29) C) (_ bv0 6)) true) (ite (and (distinct ((_ extract 34 32) C) (_ bv0 3)) true) ?x1158 ?x4948) (ite (and (distinct ((_ extract 28 26) C) (_ bv0 3)) true) ?x2319 ?x1833))))
 (let ((?x7226 (ite (and (distinct ((_ extract 37 37) C) (_ bv0 1)) true) (_ bv37 32) (ite (and (distinct ((_ extract 36 36) C) (_ bv0 1)) true) (_ bv36 32) (_ bv35 32)))))
 (let ((?x3244 (ite (and (distinct ((_ extract 40 40) C) (_ bv0 1)) true) (_ bv40 32) (ite (and (distinct ((_ extract 39 39) C) (_ bv0 1)) true) (_ bv39 32) (_ bv38 32)))))
 (let ((?x5817 (ite (and (distinct ((_ extract 43 43) C) (_ bv0 1)) true) (_ bv43 32) (ite (and (distinct ((_ extract 42 42) C) (_ bv0 1)) true) (_ bv42 32) (_ bv41 32)))))
 (let ((?x2711 (ite (and (distinct ((_ extract 45 44) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 45 45) C) (_ bv0 1)) true) (_ bv45 32) (_ bv44 32)) ?x5817)))
 (let ((?x5687 (ite (and (distinct ((_ extract 45 41) C) (_ bv0 5)) true) ?x2711 (ite (and (distinct ((_ extract 40 38) C) (_ bv0 3)) true) ?x3244 ?x7226))))
 (let ((?x7707 (ite (and (distinct ((_ extract 45 23) C) (_ bv0 23)) true) (ite (and (distinct ((_ extract 45 35) C) (_ bv0 11)) true) ?x5687 ?x1559) (ite (and (distinct ((_ extract 22 12) C) (_ bv0 11)) true) ?x5115 ?x7624))))
 (and (and (and (distinct C (_ bv0 46)) true) (= (bvand C (bvsub C (_ bv1 46))) (_ bv0 46))) (and (and (distinct ?x3122 (_ bv0 11)) true) (= (bvand ?x3122 (bvsub ?x3122 (_ bv1 11))) (_ bv0 11))) (bvslt ?x7707 (_ bv11 32)) (and (distinct ?x2926 ?x2503) true)))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
