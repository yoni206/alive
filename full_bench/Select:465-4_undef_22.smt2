(set-info :status unknown)
(declare-fun C2 () (_ BitVec 11))
(declare-fun C1 () (_ BitVec 30))
(assert
 (let ((?x4921 (ite (and (distinct ((_ extract 2 2) C2) (_ bv0 1)) true) (_ bv2 30) (ite (and (distinct ((_ extract 1 1) C2) (_ bv0 1)) true) (_ bv1 30) (_ bv0 30)))))
 (let ((?x4425 (ite (and (distinct ((_ extract 5 5) C2) (_ bv0 1)) true) (_ bv5 30) (ite (and (distinct ((_ extract 4 4) C2) (_ bv0 1)) true) (_ bv4 30) (_ bv3 30)))))
 (let ((?x4699 (ite (and (distinct ((_ extract 8 8) C2) (_ bv0 1)) true) (_ bv8 30) (ite (and (distinct ((_ extract 7 7) C2) (_ bv0 1)) true) (_ bv7 30) (_ bv6 30)))))
 (let ((?x5009 (ite (and (distinct ((_ extract 10 9) C2) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) C2) (_ bv0 1)) true) (_ bv10 30) (_ bv9 30)) ?x4699)))
 (let ((?x5191 (ite (and (distinct ((_ extract 10 6) C2) (_ bv0 5)) true) ?x5009 (ite (and (distinct ((_ extract 5 3) C2) (_ bv0 3)) true) ?x4425 ?x4921))))
 (let ((?x2625 (ite (and (distinct ((_ extract 3 2) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 3 3) C1) (_ bv0 1)) true) (_ bv3 30) (_ bv2 30)) (ite (and (distinct ((_ extract 1 1) C1) (_ bv0 1)) true) (_ bv1 30) (_ bv0 30)))))
 (let ((?x3797 (ite (and (distinct ((_ extract 7 6) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 7 7) C1) (_ bv0 1)) true) (_ bv7 30) (_ bv6 30)) (ite (and (distinct ((_ extract 5 5) C1) (_ bv0 1)) true) (_ bv5 30) (_ bv4 30)))))
 (let ((?x3201 (ite (and (distinct ((_ extract 11 10) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 11 11) C1) (_ bv0 1)) true) (_ bv11 30) (_ bv10 30)) (ite (and (distinct ((_ extract 9 9) C1) (_ bv0 1)) true) (_ bv9 30) (_ bv8 30)))))
 (let ((?x3982 (ite (and (distinct ((_ extract 14 14) C1) (_ bv0 1)) true) (_ bv14 30) (ite (and (distinct ((_ extract 13 13) C1) (_ bv0 1)) true) (_ bv13 30) (_ bv12 30)))))
 (let ((?x3217 (ite (and (distinct ((_ extract 14 8) C1) (_ bv0 7)) true) (ite (and (distinct ((_ extract 14 12) C1) (_ bv0 3)) true) ?x3982 ?x3201) (ite (and (distinct ((_ extract 7 4) C1) (_ bv0 4)) true) ?x3797 ?x2625))))
 (let ((?x1953 (ite (and (distinct ((_ extract 18 17) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 18 18) C1) (_ bv0 1)) true) (_ bv18 30) (_ bv17 30)) (ite (and (distinct ((_ extract 16 16) C1) (_ bv0 1)) true) (_ bv16 30) (_ bv15 30)))))
 (let ((?x2634 (ite (and (distinct ((_ extract 22 21) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 22 22) C1) (_ bv0 1)) true) (_ bv22 30) (_ bv21 30)) (ite (and (distinct ((_ extract 20 20) C1) (_ bv0 1)) true) (_ bv20 30) (_ bv19 30)))))
 (let ((?x5370 (ite (and (distinct ((_ extract 26 25) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 26 26) C1) (_ bv0 1)) true) (_ bv26 30) (_ bv25 30)) (ite (and (distinct ((_ extract 24 24) C1) (_ bv0 1)) true) (_ bv24 30) (_ bv23 30)))))
 (let ((?x2933 (ite (and (distinct ((_ extract 29 29) C1) (_ bv0 1)) true) (_ bv29 30) (ite (and (distinct ((_ extract 28 28) C1) (_ bv0 1)) true) (_ bv28 30) (_ bv27 30)))))
 (let ((?x2909 (ite (and (distinct ((_ extract 29 23) C1) (_ bv0 7)) true) (ite (and (distinct ((_ extract 29 27) C1) (_ bv0 3)) true) ?x2933 ?x5370) (ite (and (distinct ((_ extract 22 19) C1) (_ bv0 4)) true) ?x2634 ?x1953))))
 (let ((?x2018 (bvsub (ite (and (distinct ((_ extract 29 15) C1) (_ bv0 15)) true) ?x2909 ?x3217) ?x5191)))
 (let ((?x4542 (ite (and (distinct ((_ extract 3 2) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 3 3) C1) (_ bv0 1)) true) (_ bv3 32) (_ bv2 32)) (ite (and (distinct ((_ extract 1 1) C1) (_ bv0 1)) true) (_ bv1 32) (_ bv0 32)))))
 (let ((?x4259 (ite (and (distinct ((_ extract 7 6) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 7 7) C1) (_ bv0 1)) true) (_ bv7 32) (_ bv6 32)) (ite (and (distinct ((_ extract 5 5) C1) (_ bv0 1)) true) (_ bv5 32) (_ bv4 32)))))
 (let ((?x6856 (ite (and (distinct ((_ extract 11 10) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 11 11) C1) (_ bv0 1)) true) (_ bv11 32) (_ bv10 32)) (ite (and (distinct ((_ extract 9 9) C1) (_ bv0 1)) true) (_ bv9 32) (_ bv8 32)))))
 (let ((?x3362 (ite (and (distinct ((_ extract 14 14) C1) (_ bv0 1)) true) (_ bv14 32) (ite (and (distinct ((_ extract 13 13) C1) (_ bv0 1)) true) (_ bv13 32) (_ bv12 32)))))
 (let ((?x4621 (ite (and (distinct ((_ extract 14 8) C1) (_ bv0 7)) true) (ite (and (distinct ((_ extract 14 12) C1) (_ bv0 3)) true) ?x3362 ?x6856) (ite (and (distinct ((_ extract 7 4) C1) (_ bv0 4)) true) ?x4259 ?x4542))))
 (let ((?x4265 (ite (and (distinct ((_ extract 18 17) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 18 18) C1) (_ bv0 1)) true) (_ bv18 32) (_ bv17 32)) (ite (and (distinct ((_ extract 16 16) C1) (_ bv0 1)) true) (_ bv16 32) (_ bv15 32)))))
 (let ((?x2684 (ite (and (distinct ((_ extract 22 21) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 22 22) C1) (_ bv0 1)) true) (_ bv22 32) (_ bv21 32)) (ite (and (distinct ((_ extract 20 20) C1) (_ bv0 1)) true) (_ bv20 32) (_ bv19 32)))))
 (let ((?x6051 (ite (and (distinct ((_ extract 26 25) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 26 26) C1) (_ bv0 1)) true) (_ bv26 32) (_ bv25 32)) (ite (and (distinct ((_ extract 24 24) C1) (_ bv0 1)) true) (_ bv24 32) (_ bv23 32)))))
 (let ((?x2015 (ite (and (distinct ((_ extract 29 29) C1) (_ bv0 1)) true) (_ bv29 32) (ite (and (distinct ((_ extract 28 28) C1) (_ bv0 1)) true) (_ bv28 32) (_ bv27 32)))))
 (let ((?x2797 (ite (and (distinct ((_ extract 29 23) C1) (_ bv0 7)) true) (ite (and (distinct ((_ extract 29 27) C1) (_ bv0 3)) true) ?x2015 ?x6051) (ite (and (distinct ((_ extract 22 19) C1) (_ bv0 4)) true) ?x2684 ?x4265))))
 (let ((?x3174 (ite (and (distinct ((_ extract 2 2) C2) (_ bv0 1)) true) (_ bv2 32) (ite (and (distinct ((_ extract 1 1) C2) (_ bv0 1)) true) (_ bv1 32) (_ bv0 32)))))
 (let ((?x4196 (ite (and (distinct ((_ extract 5 5) C2) (_ bv0 1)) true) (_ bv5 32) (ite (and (distinct ((_ extract 4 4) C2) (_ bv0 1)) true) (_ bv4 32) (_ bv3 32)))))
 (let ((?x1455 (ite (and (distinct ((_ extract 8 8) C2) (_ bv0 1)) true) (_ bv8 32) (ite (and (distinct ((_ extract 7 7) C2) (_ bv0 1)) true) (_ bv7 32) (_ bv6 32)))))
 (let ((?x2418 (ite (and (distinct ((_ extract 10 9) C2) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) C2) (_ bv0 1)) true) (_ bv10 32) (_ bv9 32)) ?x1455)))
 (let ((?x1574 (ite (and (distinct ((_ extract 10 6) C2) (_ bv0 5)) true) ?x2418 (ite (and (distinct ((_ extract 5 3) C2) (_ bv0 3)) true) ?x4196 ?x3174))))
 (and (and (and (distinct C1 (_ bv0 30)) true) (= (bvand C1 (bvsub C1 (_ bv1 30))) (_ bv0 30))) (and (and (distinct C2 (_ bv0 11)) true) (= (bvand C2 (bvsub C2 (_ bv1 11))) (_ bv0 11))) (bvslt ?x1574 (ite (and (distinct ((_ extract 29 15) C1) (_ bv0 15)) true) ?x2797 ?x4621)) (not (bvult ?x2018 (_ bv30 30))))))))))))))))))))))))))))))))))))
(check-sat)
