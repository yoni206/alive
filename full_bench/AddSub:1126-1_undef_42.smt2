(set-info :source |
 Generated by Alive 0.1
 More info in N. P. Lopes, D. Menendez, S. Nagarakatte, J. Regehr.
 Provably Correct Peephole Optimizations with Alive. In PLDI'15.
|)

(set-info :status unknown)
(declare-fun C1 () (_ BitVec 47))
(declare-fun |ana_MaskedValueIsZero(%Y, (-1 << (log2(C1) + 1)))| () (_ BitVec 1))
(declare-fun C2 () (_ BitVec 47))
(declare-fun %Y () (_ BitVec 47))
(assert
 (let ((?x20565 (ite (and (distinct ((_ extract 2 2) C1) (_ bv0 1)) true) (_ bv2 47) (ite (and (distinct ((_ extract 1 1) C1) (_ bv0 1)) true) (_ bv1 47) (_ bv0 47)))))
 (let ((?x20870 (ite (and (distinct ((_ extract 5 5) C1) (_ bv0 1)) true) (_ bv5 47) (ite (and (distinct ((_ extract 4 4) C1) (_ bv0 1)) true) (_ bv4 47) (_ bv3 47)))))
 (let ((?x20839 (ite (and (distinct ((_ extract 8 8) C1) (_ bv0 1)) true) (_ bv8 47) (ite (and (distinct ((_ extract 7 7) C1) (_ bv0 1)) true) (_ bv7 47) (_ bv6 47)))))
 (let ((?x21189 (ite (and (distinct ((_ extract 11 11) C1) (_ bv0 1)) true) (_ bv11 47) (ite (and (distinct ((_ extract 10 10) C1) (_ bv0 1)) true) (_ bv10 47) (_ bv9 47)))))
 (let ((?x20567 (ite (and (distinct ((_ extract 11 6) C1) (_ bv0 6)) true) (ite (and (distinct ((_ extract 11 9) C1) (_ bv0 3)) true) ?x21189 ?x20839) (ite (and (distinct ((_ extract 5 3) C1) (_ bv0 3)) true) ?x20870 ?x20565))))
 (let ((?x19632 (ite (and (distinct ((_ extract 14 14) C1) (_ bv0 1)) true) (_ bv14 47) (ite (and (distinct ((_ extract 13 13) C1) (_ bv0 1)) true) (_ bv13 47) (_ bv12 47)))))
 (let ((?x19316 (ite (and (distinct ((_ extract 17 17) C1) (_ bv0 1)) true) (_ bv17 47) (ite (and (distinct ((_ extract 16 16) C1) (_ bv0 1)) true) (_ bv16 47) (_ bv15 47)))))
 (let ((?x19128 (ite (and (distinct ((_ extract 20 20) C1) (_ bv0 1)) true) (_ bv20 47) (ite (and (distinct ((_ extract 19 19) C1) (_ bv0 1)) true) (_ bv19 47) (_ bv18 47)))))
 (let ((?x19008 (ite (and (distinct ((_ extract 23 23) C1) (_ bv0 1)) true) (_ bv23 47) (ite (and (distinct ((_ extract 22 22) C1) (_ bv0 1)) true) (_ bv22 47) (_ bv21 47)))))
 (let ((?x21515 (ite (and (distinct ((_ extract 23 18) C1) (_ bv0 6)) true) (ite (and (distinct ((_ extract 23 21) C1) (_ bv0 3)) true) ?x19008 ?x19128) (ite (and (distinct ((_ extract 17 15) C1) (_ bv0 3)) true) ?x19316 ?x19632))))
 (let ((?x18527 (ite (and (distinct ((_ extract 26 26) C1) (_ bv0 1)) true) (_ bv26 47) (ite (and (distinct ((_ extract 25 25) C1) (_ bv0 1)) true) (_ bv25 47) (_ bv24 47)))))
 (let ((?x18528 (ite (and (distinct ((_ extract 29 29) C1) (_ bv0 1)) true) (_ bv29 47) (ite (and (distinct ((_ extract 28 28) C1) (_ bv0 1)) true) (_ bv28 47) (_ bv27 47)))))
 (let ((?x15632 (ite (and (distinct ((_ extract 32 32) C1) (_ bv0 1)) true) (_ bv32 47) (ite (and (distinct ((_ extract 31 31) C1) (_ bv0 1)) true) (_ bv31 47) (_ bv30 47)))))
 (let ((?x21505 (ite (and (distinct ((_ extract 35 35) C1) (_ bv0 1)) true) (_ bv35 47) (ite (and (distinct ((_ extract 34 34) C1) (_ bv0 1)) true) (_ bv34 47) (_ bv33 47)))))
 (let ((?x17569 (ite (and (distinct ((_ extract 35 30) C1) (_ bv0 6)) true) (ite (and (distinct ((_ extract 35 33) C1) (_ bv0 3)) true) ?x21505 ?x15632) (ite (and (distinct ((_ extract 29 27) C1) (_ bv0 3)) true) ?x18528 ?x18527))))
 (let ((?x21501 (ite (and (distinct ((_ extract 38 38) C1) (_ bv0 1)) true) (_ bv38 47) (ite (and (distinct ((_ extract 37 37) C1) (_ bv0 1)) true) (_ bv37 47) (_ bv36 47)))))
 (let ((?x21504 (ite (and (distinct ((_ extract 41 41) C1) (_ bv0 1)) true) (_ bv41 47) (ite (and (distinct ((_ extract 40 40) C1) (_ bv0 1)) true) (_ bv40 47) (_ bv39 47)))))
 (let ((?x21507 (ite (and (distinct ((_ extract 44 44) C1) (_ bv0 1)) true) (_ bv44 47) (ite (and (distinct ((_ extract 43 43) C1) (_ bv0 1)) true) (_ bv43 47) (_ bv42 47)))))
 (let ((?x21489 (ite (and (distinct ((_ extract 46 45) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 46 46) C1) (_ bv0 1)) true) (_ bv46 47) (_ bv45 47)) ?x21507)))
 (let ((?x21326 (ite (and (distinct ((_ extract 46 42) C1) (_ bv0 5)) true) ?x21489 (ite (and (distinct ((_ extract 41 39) C1) (_ bv0 3)) true) ?x21504 ?x21501))))
 (let ((?x17386 (ite (and (distinct ((_ extract 46 24) C1) (_ bv0 23)) true) (ite (and (distinct ((_ extract 46 36) C1) (_ bv0 11)) true) ?x21326 ?x17569) (ite (and (distinct ((_ extract 23 12) C1) (_ bv0 12)) true) ?x21515 ?x20567))))
 (let ((?x18851 (bvsub (bvsub (_ bv47 47) ?x17386) (_ bv1 47))))
 (let (($x18833 (bvult ?x18851 (_ bv47 47))))
 (let (($x8887 (= |ana_MaskedValueIsZero(%Y, (-1 << (log2(C1) + 1)))| (_ bv1 1))))
 (let (($x21522 (and (and (distinct C1 (_ bv0 47)) true) (= (bvand C1 (bvsub C1 (_ bv1 47))) (_ bv0 47)))))
 (let (($x21514 (= C2 (bvneg C1))))
 (let (($x21169 (=> $x8887 (= (bvand %Y (bvshl (_ bv140737488355327 47) (bvadd ?x17386 (_ bv1 47)))) (_ bv0 47)))))
 (and $x21169 $x21514 $x21522 $x8887 (not (and $x18833 $x18833)))))))))))))))))))))))))))))))
(check-sat)
