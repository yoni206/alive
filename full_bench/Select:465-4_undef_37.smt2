(set-info :status unknown)
(declare-fun C2 () (_ BitVec 11))
(declare-fun C1 () (_ BitVec 42))
(assert
 (let ((?x14695 (ite (and (distinct ((_ extract 2 2) C2) (_ bv0 1)) true) (_ bv2 42) (ite (and (distinct ((_ extract 1 1) C2) (_ bv0 1)) true) (_ bv1 42) (_ bv0 42)))))
 (let ((?x6004 (ite (and (distinct ((_ extract 5 5) C2) (_ bv0 1)) true) (_ bv5 42) (ite (and (distinct ((_ extract 4 4) C2) (_ bv0 1)) true) (_ bv4 42) (_ bv3 42)))))
 (let ((?x7545 (ite (and (distinct ((_ extract 8 8) C2) (_ bv0 1)) true) (_ bv8 42) (ite (and (distinct ((_ extract 7 7) C2) (_ bv0 1)) true) (_ bv7 42) (_ bv6 42)))))
 (let ((?x13524 (ite (and (distinct ((_ extract 10 9) C2) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) C2) (_ bv0 1)) true) (_ bv10 42) (_ bv9 42)) ?x7545)))
 (let ((?x21189 (ite (and (distinct ((_ extract 10 6) C2) (_ bv0 5)) true) ?x13524 (ite (and (distinct ((_ extract 5 3) C2) (_ bv0 3)) true) ?x6004 ?x14695))))
 (let ((?x21846 (ite (and (distinct ((_ extract 2 2) C1) (_ bv0 1)) true) (_ bv2 42) (ite (and (distinct ((_ extract 1 1) C1) (_ bv0 1)) true) (_ bv1 42) (_ bv0 42)))))
 (let ((?x24897 (ite (and (distinct ((_ extract 5 5) C1) (_ bv0 1)) true) (_ bv5 42) (ite (and (distinct ((_ extract 4 4) C1) (_ bv0 1)) true) (_ bv4 42) (_ bv3 42)))))
 (let ((?x12567 (ite (and (distinct ((_ extract 8 8) C1) (_ bv0 1)) true) (_ bv8 42) (ite (and (distinct ((_ extract 7 7) C1) (_ bv0 1)) true) (_ bv7 42) (_ bv6 42)))))
 (let ((?x11318 (ite (and (distinct ((_ extract 10 9) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) C1) (_ bv0 1)) true) (_ bv10 42) (_ bv9 42)) ?x12567)))
 (let ((?x7851 (ite (and (distinct ((_ extract 10 6) C1) (_ bv0 5)) true) ?x11318 (ite (and (distinct ((_ extract 5 3) C1) (_ bv0 3)) true) ?x24897 ?x21846))))
 (let ((?x9849 (ite (and (distinct ((_ extract 13 13) C1) (_ bv0 1)) true) (_ bv13 42) (ite (and (distinct ((_ extract 12 12) C1) (_ bv0 1)) true) (_ bv12 42) (_ bv11 42)))))
 (let ((?x9756 (ite (and (distinct ((_ extract 15 14) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 15 15) C1) (_ bv0 1)) true) (_ bv15 42) (_ bv14 42)) ?x9849)))
 (let ((?x6215 (ite (and (distinct ((_ extract 18 18) C1) (_ bv0 1)) true) (_ bv18 42) (ite (and (distinct ((_ extract 17 17) C1) (_ bv0 1)) true) (_ bv17 42) (_ bv16 42)))))
 (let ((?x20803 (ite (and (distinct ((_ extract 20 19) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 20 20) C1) (_ bv0 1)) true) (_ bv20 42) (_ bv19 42)) ?x6215)))
 (let ((?x9522 (ite (and (distinct ((_ extract 20 11) C1) (_ bv0 10)) true) (ite (and (distinct ((_ extract 20 16) C1) (_ bv0 5)) true) ?x20803 ?x9756) ?x7851)))
 (let ((?x16229 (ite (and (distinct ((_ extract 23 23) C1) (_ bv0 1)) true) (_ bv23 42) (ite (and (distinct ((_ extract 22 22) C1) (_ bv0 1)) true) (_ bv22 42) (_ bv21 42)))))
 (let ((?x1600 (ite (and (distinct ((_ extract 26 26) C1) (_ bv0 1)) true) (_ bv26 42) (ite (and (distinct ((_ extract 25 25) C1) (_ bv0 1)) true) (_ bv25 42) (_ bv24 42)))))
 (let ((?x724 (ite (and (distinct ((_ extract 29 29) C1) (_ bv0 1)) true) (_ bv29 42) (ite (and (distinct ((_ extract 28 28) C1) (_ bv0 1)) true) (_ bv28 42) (_ bv27 42)))))
 (let ((?x14205 (ite (and (distinct ((_ extract 31 30) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 31 31) C1) (_ bv0 1)) true) (_ bv31 42) (_ bv30 42)) ?x724)))
 (let ((?x2490 (ite (and (distinct ((_ extract 31 27) C1) (_ bv0 5)) true) ?x14205 (ite (and (distinct ((_ extract 26 24) C1) (_ bv0 3)) true) ?x1600 ?x16229))))
 (let ((?x5481 (ite (and (distinct ((_ extract 34 34) C1) (_ bv0 1)) true) (_ bv34 42) (ite (and (distinct ((_ extract 33 33) C1) (_ bv0 1)) true) (_ bv33 42) (_ bv32 42)))))
 (let ((?x18896 (ite (and (distinct ((_ extract 36 35) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 36 36) C1) (_ bv0 1)) true) (_ bv36 42) (_ bv35 42)) ?x5481)))
 (let ((?x11958 (ite (and (distinct ((_ extract 39 39) C1) (_ bv0 1)) true) (_ bv39 42) (ite (and (distinct ((_ extract 38 38) C1) (_ bv0 1)) true) (_ bv38 42) (_ bv37 42)))))
 (let ((?x11053 (ite (and (distinct ((_ extract 41 40) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 41 41) C1) (_ bv0 1)) true) (_ bv41 42) (_ bv40 42)) ?x11958)))
 (let ((?x1625 (ite (and (distinct ((_ extract 41 32) C1) (_ bv0 10)) true) (ite (and (distinct ((_ extract 41 37) C1) (_ bv0 5)) true) ?x11053 ?x18896) ?x2490)))
 (let ((?x25134 (bvsub (ite (and (distinct ((_ extract 41 21) C1) (_ bv0 21)) true) ?x1625 ?x9522) ?x21189)))
 (let ((?x20248 (ite (and (distinct ((_ extract 2 2) C1) (_ bv0 1)) true) (_ bv2 32) (ite (and (distinct ((_ extract 1 1) C1) (_ bv0 1)) true) (_ bv1 32) (_ bv0 32)))))
 (let ((?x13975 (ite (and (distinct ((_ extract 5 5) C1) (_ bv0 1)) true) (_ bv5 32) (ite (and (distinct ((_ extract 4 4) C1) (_ bv0 1)) true) (_ bv4 32) (_ bv3 32)))))
 (let ((?x14908 (ite (and (distinct ((_ extract 8 8) C1) (_ bv0 1)) true) (_ bv8 32) (ite (and (distinct ((_ extract 7 7) C1) (_ bv0 1)) true) (_ bv7 32) (_ bv6 32)))))
 (let ((?x6350 (ite (and (distinct ((_ extract 10 9) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) C1) (_ bv0 1)) true) (_ bv10 32) (_ bv9 32)) ?x14908)))
 (let ((?x17969 (ite (and (distinct ((_ extract 10 6) C1) (_ bv0 5)) true) ?x6350 (ite (and (distinct ((_ extract 5 3) C1) (_ bv0 3)) true) ?x13975 ?x20248))))
 (let ((?x8114 (ite (and (distinct ((_ extract 13 13) C1) (_ bv0 1)) true) (_ bv13 32) (ite (and (distinct ((_ extract 12 12) C1) (_ bv0 1)) true) (_ bv12 32) (_ bv11 32)))))
 (let ((?x23913 (ite (and (distinct ((_ extract 15 14) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 15 15) C1) (_ bv0 1)) true) (_ bv15 32) (_ bv14 32)) ?x8114)))
 (let ((?x13698 (ite (and (distinct ((_ extract 18 18) C1) (_ bv0 1)) true) (_ bv18 32) (ite (and (distinct ((_ extract 17 17) C1) (_ bv0 1)) true) (_ bv17 32) (_ bv16 32)))))
 (let ((?x13392 (ite (and (distinct ((_ extract 20 19) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 20 20) C1) (_ bv0 1)) true) (_ bv20 32) (_ bv19 32)) ?x13698)))
 (let ((?x19292 (ite (and (distinct ((_ extract 20 11) C1) (_ bv0 10)) true) (ite (and (distinct ((_ extract 20 16) C1) (_ bv0 5)) true) ?x13392 ?x23913) ?x17969)))
 (let ((?x8422 (ite (and (distinct ((_ extract 23 23) C1) (_ bv0 1)) true) (_ bv23 32) (ite (and (distinct ((_ extract 22 22) C1) (_ bv0 1)) true) (_ bv22 32) (_ bv21 32)))))
 (let ((?x8328 (ite (and (distinct ((_ extract 26 26) C1) (_ bv0 1)) true) (_ bv26 32) (ite (and (distinct ((_ extract 25 25) C1) (_ bv0 1)) true) (_ bv25 32) (_ bv24 32)))))
 (let ((?x5213 (ite (and (distinct ((_ extract 29 29) C1) (_ bv0 1)) true) (_ bv29 32) (ite (and (distinct ((_ extract 28 28) C1) (_ bv0 1)) true) (_ bv28 32) (_ bv27 32)))))
 (let ((?x4224 (ite (and (distinct ((_ extract 31 30) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 31 31) C1) (_ bv0 1)) true) (_ bv31 32) (_ bv30 32)) ?x5213)))
 (let ((?x12016 (ite (and (distinct ((_ extract 31 27) C1) (_ bv0 5)) true) ?x4224 (ite (and (distinct ((_ extract 26 24) C1) (_ bv0 3)) true) ?x8328 ?x8422))))
 (let ((?x667 (ite (and (distinct ((_ extract 34 34) C1) (_ bv0 1)) true) (_ bv34 32) (ite (and (distinct ((_ extract 33 33) C1) (_ bv0 1)) true) (_ bv33 32) (_ bv32 32)))))
 (let ((?x6910 (ite (and (distinct ((_ extract 36 35) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 36 36) C1) (_ bv0 1)) true) (_ bv36 32) (_ bv35 32)) ?x667)))
 (let ((?x4487 (ite (and (distinct ((_ extract 39 39) C1) (_ bv0 1)) true) (_ bv39 32) (ite (and (distinct ((_ extract 38 38) C1) (_ bv0 1)) true) (_ bv38 32) (_ bv37 32)))))
 (let ((?x18010 (ite (and (distinct ((_ extract 41 40) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 41 41) C1) (_ bv0 1)) true) (_ bv41 32) (_ bv40 32)) ?x4487)))
 (let ((?x2676 (ite (and (distinct ((_ extract 41 32) C1) (_ bv0 10)) true) (ite (and (distinct ((_ extract 41 37) C1) (_ bv0 5)) true) ?x18010 ?x6910) ?x12016)))
 (let ((?x14518 (ite (and (distinct ((_ extract 2 2) C2) (_ bv0 1)) true) (_ bv2 32) (ite (and (distinct ((_ extract 1 1) C2) (_ bv0 1)) true) (_ bv1 32) (_ bv0 32)))))
 (let ((?x16098 (ite (and (distinct ((_ extract 5 5) C2) (_ bv0 1)) true) (_ bv5 32) (ite (and (distinct ((_ extract 4 4) C2) (_ bv0 1)) true) (_ bv4 32) (_ bv3 32)))))
 (let ((?x19453 (ite (and (distinct ((_ extract 8 8) C2) (_ bv0 1)) true) (_ bv8 32) (ite (and (distinct ((_ extract 7 7) C2) (_ bv0 1)) true) (_ bv7 32) (_ bv6 32)))))
 (let ((?x20425 (ite (and (distinct ((_ extract 10 9) C2) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) C2) (_ bv0 1)) true) (_ bv10 32) (_ bv9 32)) ?x19453)))
 (let ((?x12719 (ite (and (distinct ((_ extract 10 6) C2) (_ bv0 5)) true) ?x20425 (ite (and (distinct ((_ extract 5 3) C2) (_ bv0 3)) true) ?x16098 ?x14518))))
 (and (and (and (distinct C1 (_ bv0 42)) true) (= (bvand C1 (bvsub C1 (_ bv1 42))) (_ bv0 42))) (and (and (distinct C2 (_ bv0 11)) true) (= (bvand C2 (bvsub C2 (_ bv1 11))) (_ bv0 11))) (bvslt ?x12719 (ite (and (distinct ((_ extract 41 21) C1) (_ bv0 21)) true) ?x2676 ?x19292)) (not (bvult ?x25134 (_ bv42 42))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
