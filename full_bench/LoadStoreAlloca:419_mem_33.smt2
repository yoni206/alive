(set-info :status unknown)
(declare-fun mem0 () (_ BitVec 8))
(declare-fun %x () (_ BitVec 34))
(declare-fun %p1 () (_ BitVec 64))
(declare-fun idx () (_ BitVec 64))
(declare-fun |ana_equivalentAddressValues(%p1, %p2)| () (_ BitVec 1))
(declare-fun %p2 () (_ BitVec 64))
(assert
 (let ((?x22445 (concat ((_ extract 7 2) mem0) ((_ extract 1 0) %x))))
 (let ((?x3717 (ite (and (and (distinct %p1 (_ bv0 64)) true) (or true true) (= idx %p1)) ?x22445 mem0)))
 (let ((?x1057 ((_ extract 9 2) %x)))
 (let (($x1038 (or true true)))
 (let (($x11100 (and (distinct %p1 (_ bv0 64)) true)))
 (let ((?x18896 (ite (and $x11100 $x1038 (= idx (bvadd (bvadd %p1 (_ bv1 64)) (_ bv0 64)))) ?x1057 ?x3717)))
 (let ((?x23999 ((_ extract 17 10) %x)))
 (let ((?x18058 (ite (and $x11100 $x1038 (= idx (bvadd (bvadd %p1 (_ bv1 64)) (_ bv1 64)))) ?x23999 ?x18896)))
 (let ((?x21161 ((_ extract 25 18) %x)))
 (let ((?x14289 (ite (and $x11100 $x1038 (= idx (bvadd (bvadd %p1 (_ bv1 64)) (_ bv2 64)))) ?x21161 ?x18058)))
 (let ((?x5799 ((_ extract 33 26) %x)))
 (let ((?x6023 (ite (and $x11100 $x1038 (= idx (bvadd (bvadd %p1 (_ bv1 64)) (_ bv3 64)))) ?x5799 ?x14289)))
 (let (($x6201 (= |ana_equivalentAddressValues(%p1, %p2)| (_ bv1 1))))
 (and (=> $x6201 (= %p1 %p2)) $x6201 (and (distinct ?x6023 ?x6023) true))))))))))))))))
(check-sat)
