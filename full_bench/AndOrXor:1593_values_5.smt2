(set-info :status unknown)
(declare-fun %K2 () (_ BitVec 13))
(declare-fun %K1 () (_ BitVec 13))
(declare-fun %A () (_ BitVec 13))
(declare-fun |ana_isPowerOf2(%K2)| () (_ BitVec 1))
(declare-fun |ana_isPowerOf2(%K1)| () (_ BitVec 1))
(assert
 (let ((?x3262 (ite (and (distinct (bvand %A (bvor %K1 %K2)) (bvor %K1 %K2)) true) (_ bv1 1) (_ bv0 1))))
 (let ((?x19585 (ite (= (bvand %A %K2) (_ bv0 13)) (_ bv1 1) (_ bv0 1))))
 (let ((?x13539 (ite (= (bvand %A %K1) (_ bv0 13)) (_ bv1 1) (_ bv0 1))))
 (let (($x3680 (= |ana_isPowerOf2(%K2)| (_ bv1 1))))
 (let (($x20479 (= |ana_isPowerOf2(%K1)| (_ bv1 1))))
 (let (($x8530 (=> $x3680 (and (and (distinct %K2 (_ bv0 13)) true) (= (bvand %K2 (bvsub %K2 (_ bv1 13))) (_ bv0 13))))))
 (let (($x19459 (=> $x20479 (and (and (distinct %K1 (_ bv0 13)) true) (= (bvand %K1 (bvsub %K1 (_ bv1 13))) (_ bv0 13))))))
 (and $x19459 $x8530 $x20479 $x3680 (and (distinct (bvor ?x13539 ?x19585) ?x3262) true))))))))))
(check-sat)
