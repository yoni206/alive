(set-info :source |
 Generated by Alive 0.1
 More info in N. P. Lopes, D. Menendez, S. Nagarakatte, J. Regehr.
 Provably Correct Peephole Optimizations with Alive. In PLDI'15.
|)

(set-info :status unknown)
(declare-fun C2 () (_ BitVec 62))
(declare-fun C1 () (_ BitVec 62))
(assert
 (let (($x15027 (= C1 (bvadd C2 (_ bv1 62)))))
 (let ((?x14837 (ite (= ((_ extract 60 60) C1) (_ bv1 1)) (_ bv60 32) (ite (= ((_ extract 61 61) C1) (_ bv1 1)) (_ bv61 32) (_ bv62 32)))))
 (let ((?x14833 (ite (= ((_ extract 58 58) C1) (_ bv1 1)) (_ bv58 32) (ite (= ((_ extract 59 59) C1) (_ bv1 1)) (_ bv59 32) ?x14837))))
 (let ((?x14826 (ite (= ((_ extract 56 56) C1) (_ bv1 1)) (_ bv56 32) (ite (= ((_ extract 57 57) C1) (_ bv1 1)) (_ bv57 32) ?x14833))))
 (let ((?x14822 (ite (= ((_ extract 54 54) C1) (_ bv1 1)) (_ bv54 32) (ite (= ((_ extract 55 55) C1) (_ bv1 1)) (_ bv55 32) ?x14826))))
 (let ((?x14818 (ite (= ((_ extract 52 52) C1) (_ bv1 1)) (_ bv52 32) (ite (= ((_ extract 53 53) C1) (_ bv1 1)) (_ bv53 32) ?x14822))))
 (let ((?x14811 (ite (= ((_ extract 50 50) C1) (_ bv1 1)) (_ bv50 32) (ite (= ((_ extract 51 51) C1) (_ bv1 1)) (_ bv51 32) ?x14818))))
 (let ((?x14804 (ite (= ((_ extract 48 48) C1) (_ bv1 1)) (_ bv48 32) (ite (= ((_ extract 49 49) C1) (_ bv1 1)) (_ bv49 32) ?x14811))))
 (let ((?x14797 (ite (= ((_ extract 46 46) C1) (_ bv1 1)) (_ bv46 32) (ite (= ((_ extract 47 47) C1) (_ bv1 1)) (_ bv47 32) ?x14804))))
 (let ((?x14793 (ite (= ((_ extract 44 44) C1) (_ bv1 1)) (_ bv44 32) (ite (= ((_ extract 45 45) C1) (_ bv1 1)) (_ bv45 32) ?x14797))))
 (let ((?x14786 (ite (= ((_ extract 42 42) C1) (_ bv1 1)) (_ bv42 32) (ite (= ((_ extract 43 43) C1) (_ bv1 1)) (_ bv43 32) ?x14793))))
 (let ((?x14779 (ite (= ((_ extract 40 40) C1) (_ bv1 1)) (_ bv40 32) (ite (= ((_ extract 41 41) C1) (_ bv1 1)) (_ bv41 32) ?x14786))))
 (let ((?x14775 (ite (= ((_ extract 38 38) C1) (_ bv1 1)) (_ bv38 32) (ite (= ((_ extract 39 39) C1) (_ bv1 1)) (_ bv39 32) ?x14779))))
 (let ((?x14768 (ite (= ((_ extract 36 36) C1) (_ bv1 1)) (_ bv36 32) (ite (= ((_ extract 37 37) C1) (_ bv1 1)) (_ bv37 32) ?x14775))))
 (let ((?x14990 (ite (= ((_ extract 34 34) C1) (_ bv1 1)) (_ bv34 32) (ite (= ((_ extract 35 35) C1) (_ bv1 1)) (_ bv35 32) ?x14768))))
 (let ((?x14992 (ite (= ((_ extract 32 32) C1) (_ bv1 1)) (_ bv32 32) (ite (= ((_ extract 33 33) C1) (_ bv1 1)) (_ bv33 32) ?x14990))))
 (let ((?x14994 (ite (= ((_ extract 30 30) C1) (_ bv1 1)) (_ bv30 32) (ite (= ((_ extract 31 31) C1) (_ bv1 1)) (_ bv31 32) ?x14992))))
 (let ((?x14996 (ite (= ((_ extract 28 28) C1) (_ bv1 1)) (_ bv28 32) (ite (= ((_ extract 29 29) C1) (_ bv1 1)) (_ bv29 32) ?x14994))))
 (let ((?x14998 (ite (= ((_ extract 26 26) C1) (_ bv1 1)) (_ bv26 32) (ite (= ((_ extract 27 27) C1) (_ bv1 1)) (_ bv27 32) ?x14996))))
 (let ((?x15000 (ite (= ((_ extract 24 24) C1) (_ bv1 1)) (_ bv24 32) (ite (= ((_ extract 25 25) C1) (_ bv1 1)) (_ bv25 32) ?x14998))))
 (let ((?x15002 (ite (= ((_ extract 22 22) C1) (_ bv1 1)) (_ bv22 32) (ite (= ((_ extract 23 23) C1) (_ bv1 1)) (_ bv23 32) ?x15000))))
 (let ((?x15004 (ite (= ((_ extract 20 20) C1) (_ bv1 1)) (_ bv20 32) (ite (= ((_ extract 21 21) C1) (_ bv1 1)) (_ bv21 32) ?x15002))))
 (let ((?x15006 (ite (= ((_ extract 18 18) C1) (_ bv1 1)) (_ bv18 32) (ite (= ((_ extract 19 19) C1) (_ bv1 1)) (_ bv19 32) ?x15004))))
 (let ((?x15008 (ite (= ((_ extract 16 16) C1) (_ bv1 1)) (_ bv16 32) (ite (= ((_ extract 17 17) C1) (_ bv1 1)) (_ bv17 32) ?x15006))))
 (let ((?x15010 (ite (= ((_ extract 14 14) C1) (_ bv1 1)) (_ bv14 32) (ite (= ((_ extract 15 15) C1) (_ bv1 1)) (_ bv15 32) ?x15008))))
 (let ((?x15012 (ite (= ((_ extract 12 12) C1) (_ bv1 1)) (_ bv12 32) (ite (= ((_ extract 13 13) C1) (_ bv1 1)) (_ bv13 32) ?x15010))))
 (let ((?x15014 (ite (= ((_ extract 10 10) C1) (_ bv1 1)) (_ bv10 32) (ite (= ((_ extract 11 11) C1) (_ bv1 1)) (_ bv11 32) ?x15012))))
 (let ((?x15016 (ite (= ((_ extract 8 8) C1) (_ bv1 1)) (_ bv8 32) (ite (= ((_ extract 9 9) C1) (_ bv1 1)) (_ bv9 32) ?x15014))))
 (let ((?x15018 (ite (= ((_ extract 6 6) C1) (_ bv1 1)) (_ bv6 32) (ite (= ((_ extract 7 7) C1) (_ bv1 1)) (_ bv7 32) ?x15016))))
 (let ((?x15020 (ite (= ((_ extract 4 4) C1) (_ bv1 1)) (_ bv4 32) (ite (= ((_ extract 5 5) C1) (_ bv1 1)) (_ bv5 32) ?x15018))))
 (let ((?x15022 (ite (= ((_ extract 2 2) C1) (_ bv1 1)) (_ bv2 32) (ite (= ((_ extract 3 3) C1) (_ bv1 1)) (_ bv3 32) ?x15020))))
 (let ((?x15024 (ite (= ((_ extract 0 0) C1) (_ bv1 1)) (_ bv0 32) (ite (= ((_ extract 1 1) C1) (_ bv1 1)) (_ bv1 32) ?x15022))))
 (let (($x15025 (= ?x15024 (_ bv0 32))))
 (and $x15025 $x15027 false)))))))))))))))))))))))))))))))))))
(check-sat)
