(set-info :status unknown)
(declare-fun C2 () (_ BitVec 11))
(declare-fun C3 () (_ BitVec 11))
(declare-fun C () (_ BitVec 45))
(declare-fun %Op () (_ BitVec 45))
(assert
 (let ((?x3122 (bvsub C3 C2)))
 (let ((?x1460 (ite (and (distinct ((_ extract 2 2) ?x3122) (_ bv0 1)) true) (_ bv2 11) (ite (and (distinct ((_ extract 1 1) ?x3122) (_ bv0 1)) true) (_ bv1 11) (_ bv0 11)))))
 (let ((?x2663 (ite (and (distinct ((_ extract 5 5) ?x3122) (_ bv0 1)) true) (_ bv5 11) (ite (and (distinct ((_ extract 4 4) ?x3122) (_ bv0 1)) true) (_ bv4 11) (_ bv3 11)))))
 (let ((?x7900 (ite (and (distinct ((_ extract 8 8) ?x3122) (_ bv0 1)) true) (_ bv8 11) (ite (and (distinct ((_ extract 7 7) ?x3122) (_ bv0 1)) true) (_ bv7 11) (_ bv6 11)))))
 (let ((?x3343 (ite (and (distinct ((_ extract 10 9) ?x3122) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) ?x3122) (_ bv0 1)) true) (_ bv10 11) (_ bv9 11)) ?x7900)))
 (let ((?x7663 (ite (and (distinct ((_ extract 10 6) ?x3122) (_ bv0 5)) true) ?x3343 (ite (and (distinct ((_ extract 5 3) ?x3122) (_ bv0 3)) true) ?x2663 ?x1460))))
 (let ((?x1182 (ite (and (distinct ((_ extract 2 2) C) (_ bv0 1)) true) (_ bv2 11) (ite (and (distinct ((_ extract 1 1) C) (_ bv0 1)) true) (_ bv1 11) (_ bv0 11)))))
 (let ((?x3446 (ite (and (distinct ((_ extract 5 5) C) (_ bv0 1)) true) (_ bv5 11) (ite (and (distinct ((_ extract 4 4) C) (_ bv0 1)) true) (_ bv4 11) (_ bv3 11)))))
 (let ((?x5687 (ite (and (distinct ((_ extract 8 8) C) (_ bv0 1)) true) (_ bv8 11) (ite (and (distinct ((_ extract 7 7) C) (_ bv0 1)) true) (_ bv7 11) (_ bv6 11)))))
 (let ((?x3085 (ite (and (distinct ((_ extract 11 11) C) (_ bv0 1)) true) (_ bv11 11) (ite (and (distinct ((_ extract 10 10) C) (_ bv0 1)) true) (_ bv10 11) (_ bv9 11)))))
 (let ((?x6407 (ite (and (distinct ((_ extract 11 6) C) (_ bv0 6)) true) (ite (and (distinct ((_ extract 11 9) C) (_ bv0 3)) true) ?x3085 ?x5687) (ite (and (distinct ((_ extract 5 3) C) (_ bv0 3)) true) ?x3446 ?x1182))))
 (let ((?x7915 (ite (and (distinct ((_ extract 14 14) C) (_ bv0 1)) true) (_ bv14 11) (ite (and (distinct ((_ extract 13 13) C) (_ bv0 1)) true) (_ bv13 11) (_ bv12 11)))))
 (let ((?x7368 (ite (and (distinct ((_ extract 17 17) C) (_ bv0 1)) true) (_ bv17 11) (ite (and (distinct ((_ extract 16 16) C) (_ bv0 1)) true) (_ bv16 11) (_ bv15 11)))))
 (let ((?x3974 (ite (and (distinct ((_ extract 20 20) C) (_ bv0 1)) true) (_ bv20 11) (ite (and (distinct ((_ extract 19 19) C) (_ bv0 1)) true) (_ bv19 11) (_ bv18 11)))))
 (let ((?x3257 (ite (and (distinct ((_ extract 22 21) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 22 22) C) (_ bv0 1)) true) (_ bv22 11) (_ bv21 11)) ?x3974)))
 (let ((?x6433 (ite (and (distinct ((_ extract 22 18) C) (_ bv0 5)) true) ?x3257 (ite (and (distinct ((_ extract 17 15) C) (_ bv0 3)) true) ?x7368 ?x7915))))
 (let ((?x5252 (ite (and (distinct ((_ extract 25 25) C) (_ bv0 1)) true) (_ bv25 11) (ite (and (distinct ((_ extract 24 24) C) (_ bv0 1)) true) (_ bv24 11) (_ bv23 11)))))
 (let ((?x5527 (ite (and (distinct ((_ extract 28 28) C) (_ bv0 1)) true) (_ bv28 11) (ite (and (distinct ((_ extract 27 27) C) (_ bv0 1)) true) (_ bv27 11) (_ bv26 11)))))
 (let ((?x4319 (ite (and (distinct ((_ extract 31 31) C) (_ bv0 1)) true) (_ bv31 11) (ite (and (distinct ((_ extract 30 30) C) (_ bv0 1)) true) (_ bv30 11) (_ bv29 11)))))
 (let ((?x3730 (ite (and (distinct ((_ extract 33 32) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 33 33) C) (_ bv0 1)) true) (_ bv33 11) (_ bv32 11)) ?x4319)))
 (let ((?x4494 (ite (and (distinct ((_ extract 33 29) C) (_ bv0 5)) true) ?x3730 (ite (and (distinct ((_ extract 28 26) C) (_ bv0 3)) true) ?x5527 ?x5252))))
 (let ((?x2855 (ite (and (distinct ((_ extract 36 36) C) (_ bv0 1)) true) (_ bv36 11) (ite (and (distinct ((_ extract 35 35) C) (_ bv0 1)) true) (_ bv35 11) (_ bv34 11)))))
 (let ((?x7237 (ite (and (distinct ((_ extract 39 39) C) (_ bv0 1)) true) (_ bv39 11) (ite (and (distinct ((_ extract 38 38) C) (_ bv0 1)) true) (_ bv38 11) (_ bv37 11)))))
 (let ((?x1262 (ite (and (distinct ((_ extract 42 42) C) (_ bv0 1)) true) (_ bv42 11) (ite (and (distinct ((_ extract 41 41) C) (_ bv0 1)) true) (_ bv41 11) (_ bv40 11)))))
 (let ((?x3850 (ite (and (distinct ((_ extract 44 43) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 44 44) C) (_ bv0 1)) true) (_ bv44 11) (_ bv43 11)) ?x1262)))
 (let ((?x7695 (ite (and (distinct ((_ extract 44 40) C) (_ bv0 5)) true) ?x3850 (ite (and (distinct ((_ extract 39 37) C) (_ bv0 3)) true) ?x7237 ?x2855))))
 (let ((?x3056 (ite (and (distinct ((_ extract 44 23) C) (_ bv0 22)) true) (ite (and (distinct ((_ extract 44 34) C) (_ bv0 11)) true) ?x7695 ?x4494) (ite (and (distinct ((_ extract 22 12) C) (_ bv0 11)) true) ?x6433 ?x6407))))
 (let ((?x6409 (bvsub ?x3056 ?x7663)))
 (let ((?x2472 (ite (bvsgt (_ bv0 11) ?x6409) (_ bv0 11) ?x6409)))
 (let ((?x5559 (bvsub ?x7663 ?x3056)))
 (let ((?x7310 (ite (bvsgt (_ bv0 11) ?x5559) (_ bv0 11) ?x5559)))
 (let ((?x1607 (bvadd (bvxor (bvlshr (bvshl ((_ extract 10 0) (bvand %Op C)) ?x7310) ?x2472) ?x3122) C2)))
 (let ((?x7887 (ite (= (ite (and (distinct (bvand %Op C) (_ bv0 45)) true) (_ bv1 1) (_ bv0 1)) (_ bv1 1)) C2 C3)))
 (let ((?x6727 (ite (and (distinct ((_ extract 2 2) C) (_ bv0 1)) true) (_ bv2 32) (ite (and (distinct ((_ extract 1 1) C) (_ bv0 1)) true) (_ bv1 32) (_ bv0 32)))))
 (let ((?x1115 (ite (and (distinct ((_ extract 5 5) C) (_ bv0 1)) true) (_ bv5 32) (ite (and (distinct ((_ extract 4 4) C) (_ bv0 1)) true) (_ bv4 32) (_ bv3 32)))))
 (let ((?x5804 (ite (and (distinct ((_ extract 8 8) C) (_ bv0 1)) true) (_ bv8 32) (ite (and (distinct ((_ extract 7 7) C) (_ bv0 1)) true) (_ bv7 32) (_ bv6 32)))))
 (let ((?x5207 (ite (and (distinct ((_ extract 11 11) C) (_ bv0 1)) true) (_ bv11 32) (ite (and (distinct ((_ extract 10 10) C) (_ bv0 1)) true) (_ bv10 32) (_ bv9 32)))))
 (let ((?x7319 (ite (and (distinct ((_ extract 11 6) C) (_ bv0 6)) true) (ite (and (distinct ((_ extract 11 9) C) (_ bv0 3)) true) ?x5207 ?x5804) (ite (and (distinct ((_ extract 5 3) C) (_ bv0 3)) true) ?x1115 ?x6727))))
 (let ((?x4442 (ite (and (distinct ((_ extract 14 14) C) (_ bv0 1)) true) (_ bv14 32) (ite (and (distinct ((_ extract 13 13) C) (_ bv0 1)) true) (_ bv13 32) (_ bv12 32)))))
 (let ((?x4322 (ite (and (distinct ((_ extract 17 17) C) (_ bv0 1)) true) (_ bv17 32) (ite (and (distinct ((_ extract 16 16) C) (_ bv0 1)) true) (_ bv16 32) (_ bv15 32)))))
 (let ((?x3508 (ite (and (distinct ((_ extract 20 20) C) (_ bv0 1)) true) (_ bv20 32) (ite (and (distinct ((_ extract 19 19) C) (_ bv0 1)) true) (_ bv19 32) (_ bv18 32)))))
 (let ((?x3419 (ite (and (distinct ((_ extract 22 21) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 22 22) C) (_ bv0 1)) true) (_ bv22 32) (_ bv21 32)) ?x3508)))
 (let ((?x4765 (ite (and (distinct ((_ extract 22 18) C) (_ bv0 5)) true) ?x3419 (ite (and (distinct ((_ extract 17 15) C) (_ bv0 3)) true) ?x4322 ?x4442))))
 (let ((?x4552 (ite (and (distinct ((_ extract 25 25) C) (_ bv0 1)) true) (_ bv25 32) (ite (and (distinct ((_ extract 24 24) C) (_ bv0 1)) true) (_ bv24 32) (_ bv23 32)))))
 (let ((?x3840 (ite (and (distinct ((_ extract 28 28) C) (_ bv0 1)) true) (_ bv28 32) (ite (and (distinct ((_ extract 27 27) C) (_ bv0 1)) true) (_ bv27 32) (_ bv26 32)))))
 (let ((?x1455 (ite (and (distinct ((_ extract 31 31) C) (_ bv0 1)) true) (_ bv31 32) (ite (and (distinct ((_ extract 30 30) C) (_ bv0 1)) true) (_ bv30 32) (_ bv29 32)))))
 (let ((?x4515 (ite (and (distinct ((_ extract 33 32) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 33 33) C) (_ bv0 1)) true) (_ bv33 32) (_ bv32 32)) ?x1455)))
 (let ((?x2345 (ite (and (distinct ((_ extract 33 29) C) (_ bv0 5)) true) ?x4515 (ite (and (distinct ((_ extract 28 26) C) (_ bv0 3)) true) ?x3840 ?x4552))))
 (let ((?x6667 (ite (and (distinct ((_ extract 36 36) C) (_ bv0 1)) true) (_ bv36 32) (ite (and (distinct ((_ extract 35 35) C) (_ bv0 1)) true) (_ bv35 32) (_ bv34 32)))))
 (let ((?x5148 (ite (and (distinct ((_ extract 39 39) C) (_ bv0 1)) true) (_ bv39 32) (ite (and (distinct ((_ extract 38 38) C) (_ bv0 1)) true) (_ bv38 32) (_ bv37 32)))))
 (let ((?x2943 (ite (and (distinct ((_ extract 42 42) C) (_ bv0 1)) true) (_ bv42 32) (ite (and (distinct ((_ extract 41 41) C) (_ bv0 1)) true) (_ bv41 32) (_ bv40 32)))))
 (let ((?x4933 (ite (and (distinct ((_ extract 44 43) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 44 44) C) (_ bv0 1)) true) (_ bv44 32) (_ bv43 32)) ?x2943)))
 (let ((?x6886 (ite (and (distinct ((_ extract 44 40) C) (_ bv0 5)) true) ?x4933 (ite (and (distinct ((_ extract 39 37) C) (_ bv0 3)) true) ?x5148 ?x6667))))
 (let ((?x7588 (ite (and (distinct ((_ extract 44 23) C) (_ bv0 22)) true) (ite (and (distinct ((_ extract 44 34) C) (_ bv0 11)) true) ?x6886 ?x2345) (ite (and (distinct ((_ extract 22 12) C) (_ bv0 11)) true) ?x4765 ?x7319))))
 (and (and (and (distinct C (_ bv0 45)) true) (= (bvand C (bvsub C (_ bv1 45))) (_ bv0 45))) (and (and (distinct ?x3122 (_ bv0 11)) true) (= (bvand ?x3122 (bvsub ?x3122 (_ bv1 11))) (_ bv0 11))) (bvslt ?x7588 (_ bv11 32)) (and (distinct ?x7887 ?x1607) true)))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
