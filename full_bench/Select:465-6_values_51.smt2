(set-info :status unknown)
(declare-fun %Y () (_ BitVec 11))
(declare-fun C1 () (_ BitVec 59))
(declare-fun C2 () (_ BitVec 11))
(declare-fun %X () (_ BitVec 59))
(assert
 (let ((?x6812 (ite (and (distinct ((_ extract 3 2) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 3 3) C1) (_ bv0 1)) true) (_ bv3 11) (_ bv2 11)) (ite (and (distinct ((_ extract 1 1) C1) (_ bv0 1)) true) (_ bv1 11) (_ bv0 11)))))
 (let ((?x1705 (ite (and (distinct ((_ extract 7 6) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 7 7) C1) (_ bv0 1)) true) (_ bv7 11) (_ bv6 11)) (ite (and (distinct ((_ extract 5 5) C1) (_ bv0 1)) true) (_ bv5 11) (_ bv4 11)))))
 (let ((?x5193 (ite (and (distinct ((_ extract 11 10) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 11 11) C1) (_ bv0 1)) true) (_ bv11 11) (_ bv10 11)) (ite (and (distinct ((_ extract 9 9) C1) (_ bv0 1)) true) (_ bv9 11) (_ bv8 11)))))
 (let ((?x2508 (ite (and (distinct ((_ extract 14 14) C1) (_ bv0 1)) true) (_ bv14 11) (ite (and (distinct ((_ extract 13 13) C1) (_ bv0 1)) true) (_ bv13 11) (_ bv12 11)))))
 (let ((?x6295 (ite (and (distinct ((_ extract 14 8) C1) (_ bv0 7)) true) (ite (and (distinct ((_ extract 14 12) C1) (_ bv0 3)) true) ?x2508 ?x5193) (ite (and (distinct ((_ extract 7 4) C1) (_ bv0 4)) true) ?x1705 ?x6812))))
 (let ((?x5816 (ite (and (distinct ((_ extract 18 17) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 18 18) C1) (_ bv0 1)) true) (_ bv18 11) (_ bv17 11)) (ite (and (distinct ((_ extract 16 16) C1) (_ bv0 1)) true) (_ bv16 11) (_ bv15 11)))))
 (let ((?x6096 (ite (and (distinct ((_ extract 22 21) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 22 22) C1) (_ bv0 1)) true) (_ bv22 11) (_ bv21 11)) (ite (and (distinct ((_ extract 20 20) C1) (_ bv0 1)) true) (_ bv20 11) (_ bv19 11)))))
 (let ((?x4806 (ite (and (distinct ((_ extract 26 25) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 26 26) C1) (_ bv0 1)) true) (_ bv26 11) (_ bv25 11)) (ite (and (distinct ((_ extract 24 24) C1) (_ bv0 1)) true) (_ bv24 11) (_ bv23 11)))))
 (let ((?x6033 (ite (and (distinct ((_ extract 29 29) C1) (_ bv0 1)) true) (_ bv29 11) (ite (and (distinct ((_ extract 28 28) C1) (_ bv0 1)) true) (_ bv28 11) (_ bv27 11)))))
 (let ((?x1848 (ite (and (distinct ((_ extract 29 23) C1) (_ bv0 7)) true) (ite (and (distinct ((_ extract 29 27) C1) (_ bv0 3)) true) ?x6033 ?x4806) (ite (and (distinct ((_ extract 22 19) C1) (_ bv0 4)) true) ?x6096 ?x5816))))
 (let ((?x5290 (ite (and (distinct ((_ extract 33 32) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 33 33) C1) (_ bv0 1)) true) (_ bv33 11) (_ bv32 11)) (ite (and (distinct ((_ extract 31 31) C1) (_ bv0 1)) true) (_ bv31 11) (_ bv30 11)))))
 (let ((?x5108 (ite (and (distinct ((_ extract 37 36) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 37 37) C1) (_ bv0 1)) true) (_ bv37 11) (_ bv36 11)) (ite (and (distinct ((_ extract 35 35) C1) (_ bv0 1)) true) (_ bv35 11) (_ bv34 11)))))
 (let ((?x3775 (ite (and (distinct ((_ extract 41 40) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 41 41) C1) (_ bv0 1)) true) (_ bv41 11) (_ bv40 11)) (ite (and (distinct ((_ extract 39 39) C1) (_ bv0 1)) true) (_ bv39 11) (_ bv38 11)))))
 (let ((?x2107 (ite (and (distinct ((_ extract 44 44) C1) (_ bv0 1)) true) (_ bv44 11) (ite (and (distinct ((_ extract 43 43) C1) (_ bv0 1)) true) (_ bv43 11) (_ bv42 11)))))
 (let ((?x5175 (ite (and (distinct ((_ extract 44 38) C1) (_ bv0 7)) true) (ite (and (distinct ((_ extract 44 42) C1) (_ bv0 3)) true) ?x2107 ?x3775) (ite (and (distinct ((_ extract 37 34) C1) (_ bv0 4)) true) ?x5108 ?x5290))))
 (let ((?x1823 (ite (and (distinct ((_ extract 48 47) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 48 48) C1) (_ bv0 1)) true) (_ bv48 11) (_ bv47 11)) (ite (and (distinct ((_ extract 46 46) C1) (_ bv0 1)) true) (_ bv46 11) (_ bv45 11)))))
 (let ((?x3642 (ite (and (distinct ((_ extract 51 51) C1) (_ bv0 1)) true) (_ bv51 11) (ite (and (distinct ((_ extract 50 50) C1) (_ bv0 1)) true) (_ bv50 11) (_ bv49 11)))))
 (let ((?x2486 (ite (and (distinct ((_ extract 55 54) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 55 55) C1) (_ bv0 1)) true) (_ bv55 11) (_ bv54 11)) (ite (and (distinct ((_ extract 53 53) C1) (_ bv0 1)) true) (_ bv53 11) (_ bv52 11)))))
 (let ((?x4347 (ite (and (distinct ((_ extract 58 58) C1) (_ bv0 1)) true) (_ bv58 11) (ite (and (distinct ((_ extract 57 57) C1) (_ bv0 1)) true) (_ bv57 11) (_ bv56 11)))))
 (let ((?x1341 (ite (and (distinct ((_ extract 58 52) C1) (_ bv0 7)) true) (ite (and (distinct ((_ extract 58 56) C1) (_ bv0 3)) true) ?x4347 ?x2486) (ite (and (distinct ((_ extract 51 49) C1) (_ bv0 3)) true) ?x3642 ?x1823))))
 (let ((?x1486 (ite (and (distinct ((_ extract 58 30) C1) (_ bv0 29)) true) (ite (and (distinct ((_ extract 58 45) C1) (_ bv0 14)) true) ?x1341 ?x5175) (ite (and (distinct ((_ extract 29 15) C1) (_ bv0 15)) true) ?x1848 ?x6295))))
 (let ((?x4501 (ite (and (distinct ((_ extract 2 2) C2) (_ bv0 1)) true) (_ bv2 11) (ite (and (distinct ((_ extract 1 1) C2) (_ bv0 1)) true) (_ bv1 11) (_ bv0 11)))))
 (let ((?x5871 (ite (and (distinct ((_ extract 5 5) C2) (_ bv0 1)) true) (_ bv5 11) (ite (and (distinct ((_ extract 4 4) C2) (_ bv0 1)) true) (_ bv4 11) (_ bv3 11)))))
 (let ((?x5624 (ite (and (distinct ((_ extract 8 8) C2) (_ bv0 1)) true) (_ bv8 11) (ite (and (distinct ((_ extract 7 7) C2) (_ bv0 1)) true) (_ bv7 11) (_ bv6 11)))))
 (let ((?x3268 (ite (and (distinct ((_ extract 10 9) C2) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) C2) (_ bv0 1)) true) (_ bv10 11) (_ bv9 11)) ?x5624)))
 (let ((?x5577 (ite (and (distinct ((_ extract 10 6) C2) (_ bv0 5)) true) ?x3268 (ite (and (distinct ((_ extract 5 3) C2) (_ bv0 3)) true) ?x5871 ?x4501))))
 (let ((?x4517 (bvsub ?x5577 ?x1486)))
 (let ((?x4740 (bvor %Y C2)))
 (let ((?x4553 (ite (= (ite (and (distinct (bvand %X C1) (_ bv0 59)) true) (_ bv1 1) (_ bv0 1)) (_ bv1 1)) ?x4740 %Y)))
 (let ((?x5444 (ite (and (distinct ((_ extract 3 2) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 3 3) C1) (_ bv0 1)) true) (_ bv3 32) (_ bv2 32)) (ite (and (distinct ((_ extract 1 1) C1) (_ bv0 1)) true) (_ bv1 32) (_ bv0 32)))))
 (let ((?x5513 (ite (and (distinct ((_ extract 7 6) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 7 7) C1) (_ bv0 1)) true) (_ bv7 32) (_ bv6 32)) (ite (and (distinct ((_ extract 5 5) C1) (_ bv0 1)) true) (_ bv5 32) (_ bv4 32)))))
 (let ((?x1967 (ite (and (distinct ((_ extract 11 10) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 11 11) C1) (_ bv0 1)) true) (_ bv11 32) (_ bv10 32)) (ite (and (distinct ((_ extract 9 9) C1) (_ bv0 1)) true) (_ bv9 32) (_ bv8 32)))))
 (let ((?x3828 (ite (and (distinct ((_ extract 14 14) C1) (_ bv0 1)) true) (_ bv14 32) (ite (and (distinct ((_ extract 13 13) C1) (_ bv0 1)) true) (_ bv13 32) (_ bv12 32)))))
 (let ((?x3629 (ite (and (distinct ((_ extract 14 8) C1) (_ bv0 7)) true) (ite (and (distinct ((_ extract 14 12) C1) (_ bv0 3)) true) ?x3828 ?x1967) (ite (and (distinct ((_ extract 7 4) C1) (_ bv0 4)) true) ?x5513 ?x5444))))
 (let ((?x2441 (ite (and (distinct ((_ extract 18 17) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 18 18) C1) (_ bv0 1)) true) (_ bv18 32) (_ bv17 32)) (ite (and (distinct ((_ extract 16 16) C1) (_ bv0 1)) true) (_ bv16 32) (_ bv15 32)))))
 (let ((?x6730 (ite (and (distinct ((_ extract 22 21) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 22 22) C1) (_ bv0 1)) true) (_ bv22 32) (_ bv21 32)) (ite (and (distinct ((_ extract 20 20) C1) (_ bv0 1)) true) (_ bv20 32) (_ bv19 32)))))
 (let ((?x6495 (ite (and (distinct ((_ extract 26 25) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 26 26) C1) (_ bv0 1)) true) (_ bv26 32) (_ bv25 32)) (ite (and (distinct ((_ extract 24 24) C1) (_ bv0 1)) true) (_ bv24 32) (_ bv23 32)))))
 (let ((?x5282 (ite (and (distinct ((_ extract 29 29) C1) (_ bv0 1)) true) (_ bv29 32) (ite (and (distinct ((_ extract 28 28) C1) (_ bv0 1)) true) (_ bv28 32) (_ bv27 32)))))
 (let ((?x1997 (ite (and (distinct ((_ extract 29 23) C1) (_ bv0 7)) true) (ite (and (distinct ((_ extract 29 27) C1) (_ bv0 3)) true) ?x5282 ?x6495) (ite (and (distinct ((_ extract 22 19) C1) (_ bv0 4)) true) ?x6730 ?x2441))))
 (let ((?x5570 (ite (and (distinct ((_ extract 33 32) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 33 33) C1) (_ bv0 1)) true) (_ bv33 32) (_ bv32 32)) (ite (and (distinct ((_ extract 31 31) C1) (_ bv0 1)) true) (_ bv31 32) (_ bv30 32)))))
 (let ((?x1669 (ite (and (distinct ((_ extract 37 36) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 37 37) C1) (_ bv0 1)) true) (_ bv37 32) (_ bv36 32)) (ite (and (distinct ((_ extract 35 35) C1) (_ bv0 1)) true) (_ bv35 32) (_ bv34 32)))))
 (let ((?x3900 (ite (and (distinct ((_ extract 41 40) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 41 41) C1) (_ bv0 1)) true) (_ bv41 32) (_ bv40 32)) (ite (and (distinct ((_ extract 39 39) C1) (_ bv0 1)) true) (_ bv39 32) (_ bv38 32)))))
 (let ((?x2914 (ite (and (distinct ((_ extract 44 44) C1) (_ bv0 1)) true) (_ bv44 32) (ite (and (distinct ((_ extract 43 43) C1) (_ bv0 1)) true) (_ bv43 32) (_ bv42 32)))))
 (let ((?x5866 (ite (and (distinct ((_ extract 44 38) C1) (_ bv0 7)) true) (ite (and (distinct ((_ extract 44 42) C1) (_ bv0 3)) true) ?x2914 ?x3900) (ite (and (distinct ((_ extract 37 34) C1) (_ bv0 4)) true) ?x1669 ?x5570))))
 (let ((?x4004 (ite (and (distinct ((_ extract 48 47) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 48 48) C1) (_ bv0 1)) true) (_ bv48 32) (_ bv47 32)) (ite (and (distinct ((_ extract 46 46) C1) (_ bv0 1)) true) (_ bv46 32) (_ bv45 32)))))
 (let ((?x3411 (ite (and (distinct ((_ extract 51 51) C1) (_ bv0 1)) true) (_ bv51 32) (ite (and (distinct ((_ extract 50 50) C1) (_ bv0 1)) true) (_ bv50 32) (_ bv49 32)))))
 (let ((?x3069 (ite (and (distinct ((_ extract 55 54) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 55 55) C1) (_ bv0 1)) true) (_ bv55 32) (_ bv54 32)) (ite (and (distinct ((_ extract 53 53) C1) (_ bv0 1)) true) (_ bv53 32) (_ bv52 32)))))
 (let ((?x4415 (ite (and (distinct ((_ extract 58 58) C1) (_ bv0 1)) true) (_ bv58 32) (ite (and (distinct ((_ extract 57 57) C1) (_ bv0 1)) true) (_ bv57 32) (_ bv56 32)))))
 (let ((?x2808 (ite (and (distinct ((_ extract 58 52) C1) (_ bv0 7)) true) (ite (and (distinct ((_ extract 58 56) C1) (_ bv0 3)) true) ?x4415 ?x3069) (ite (and (distinct ((_ extract 51 49) C1) (_ bv0 3)) true) ?x3411 ?x4004))))
 (let ((?x5593 (ite (and (distinct ((_ extract 58 30) C1) (_ bv0 29)) true) (ite (and (distinct ((_ extract 58 45) C1) (_ bv0 14)) true) ?x2808 ?x5866) (ite (and (distinct ((_ extract 29 15) C1) (_ bv0 15)) true) ?x1997 ?x3629))))
 (let ((?x3856 (ite (and (distinct ((_ extract 2 2) C2) (_ bv0 1)) true) (_ bv2 32) (ite (and (distinct ((_ extract 1 1) C2) (_ bv0 1)) true) (_ bv1 32) (_ bv0 32)))))
 (let ((?x6108 (ite (and (distinct ((_ extract 5 5) C2) (_ bv0 1)) true) (_ bv5 32) (ite (and (distinct ((_ extract 4 4) C2) (_ bv0 1)) true) (_ bv4 32) (_ bv3 32)))))
 (let ((?x1650 (ite (and (distinct ((_ extract 8 8) C2) (_ bv0 1)) true) (_ bv8 32) (ite (and (distinct ((_ extract 7 7) C2) (_ bv0 1)) true) (_ bv7 32) (_ bv6 32)))))
 (let ((?x3482 (ite (and (distinct ((_ extract 10 9) C2) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) C2) (_ bv0 1)) true) (_ bv10 32) (_ bv9 32)) ?x1650)))
 (let ((?x4454 (ite (and (distinct ((_ extract 10 6) C2) (_ bv0 5)) true) ?x3482 (ite (and (distinct ((_ extract 5 3) C2) (_ bv0 3)) true) ?x6108 ?x3856))))
 (and (and (and (distinct C1 (_ bv0 59)) true) (= (bvand C1 (bvsub C1 (_ bv1 59))) (_ bv0 59))) (and (and (distinct C2 (_ bv0 11)) true) (= (bvand C2 (bvsub C2 (_ bv1 11))) (_ bv0 11))) (bvsge ?x4454 ?x5593) (and (distinct ?x4553 (bvor (bvshl ((_ extract 10 0) (bvand %X C1)) ?x4517) %Y)) true))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
