(set-info :status unknown)
(declare-fun mem0 () (_ BitVec 8))
(declare-fun %y () (_ BitVec 13))
(declare-fun %p2 () (_ BitVec 64))
(declare-fun idx () (_ BitVec 64))
(declare-fun %x () (_ BitVec 13))
(declare-fun %p1 () (_ BitVec 64))
(declare-fun |ana_equivalentAddressValues(%p1, %p2)| () (_ BitVec 1))
(assert
 (let ((?x11965 (ite (and (and (distinct %p2 (_ bv0 64)) true) (or true true) (= idx %p2)) (concat ((_ extract 7 5) mem0) ((_ extract 4 0) %y)) mem0)))
 (let (($x11570 (or true true)))
 (let (($x9453 (and (distinct %p2 (_ bv0 64)) true)))
 (let ((?x10461 (ite (and $x9453 $x11570 (= idx (bvadd (bvadd %p2 (_ bv1 64)) (_ bv0 64)))) ((_ extract 12 5) %y) ?x11965)))
 (let ((?x14457 (ite (and (and (distinct %p1 (_ bv0 64)) true) $x11570 (= idx %p1)) (concat ((_ extract 7 5) mem0) ((_ extract 4 0) %x)) mem0)))
 (let (($x17212 (and (distinct %p1 (_ bv0 64)) true)))
 (let ((?x11363 (ite (and $x17212 $x11570 (= idx (bvadd (bvadd %p1 (_ bv1 64)) (_ bv0 64)))) ((_ extract 12 5) %x) ?x14457)))
 (let ((?x8887 (ite (and $x17212 $x11570 (= %p2 %p1)) (concat ((_ extract 7 5) mem0) ((_ extract 4 0) %x)) mem0)))
 (let ((?x7397 (ite (and $x17212 $x11570 (= %p2 (bvadd (bvadd %p1 (_ bv1 64)) (_ bv0 64)))) ((_ extract 12 5) %x) ?x8887)))
 (let ((?x5626 (ite (and $x17212 $x11570 $x9453 $x11570 (= idx %p2)) (concat ((_ extract 7 5) ?x7397) ((_ extract 4 0) %y)) ?x11363)))
 (let ((?x6308 (ite (and $x17212 $x11570 $x9453 $x11570 (= idx (bvadd (bvadd %p2 (_ bv1 64)) (_ bv0 64)))) ((_ extract 12 5) %y) ?x5626)))
 (let (($x12694 (= |ana_equivalentAddressValues(%p1, %p2)| (_ bv1 1))))
 (and (=> $x12694 (= %p1 %p2)) $x12694 (and (distinct ?x6308 ?x10461) true)))))))))))))))
(check-sat)
