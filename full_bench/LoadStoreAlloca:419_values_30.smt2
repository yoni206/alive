(set-info :status unknown)
(declare-fun %x () (_ BitVec 31))
(declare-fun mem0 () (_ BitVec 8))
(declare-fun %p1 () (_ BitVec 64))
(declare-fun %p2 () (_ BitVec 64))
(declare-fun |ana_equivalentAddressValues(%p1, %p2)| () (_ BitVec 1))
(assert
 (let ((?x1585 (concat ((_ extract 7 7) mem0) ((_ extract 6 0) %x))))
 (let ((?x21090 (ite (and (and (distinct %p1 (_ bv0 64)) true) (or true true) (= %p2 %p1)) ?x1585 mem0)))
 (let ((?x10245 ((_ extract 14 7) %x)))
 (let (($x7310 (or true true)))
 (let (($x6023 (and (distinct %p1 (_ bv0 64)) true)))
 (let ((?x4996 (ite (and $x6023 $x7310 (= %p2 (bvadd (bvadd %p1 (_ bv1 64)) (_ bv0 64)))) ?x10245 ?x21090)))
 (let ((?x11474 ((_ extract 22 15) %x)))
 (let ((?x11891 (ite (and $x6023 $x7310 (= %p2 (bvadd (bvadd %p1 (_ bv1 64)) (_ bv1 64)))) ?x11474 ?x4996)))
 (let ((?x18058 ((_ extract 30 23) %x)))
 (let ((?x8359 (ite (and $x6023 $x7310 (= %p2 (bvadd (bvadd %p1 (_ bv1 64)) (_ bv2 64)))) ?x18058 ?x11891)))
 (let ((?x2976 (ite (and $x6023 $x7310 (= (bvadd (bvadd %p2 (_ bv1 64)) (_ bv0 64)) %p1)) ?x1585 mem0)))
 (let (($x9596 (and $x6023 $x7310 (= (bvadd (bvadd %p2 (_ bv1 64)) (_ bv0 64)) (bvadd (bvadd %p1 (_ bv1 64)) (_ bv0 64))))))
 (let (($x21245 (and $x6023 $x7310 (= (bvadd (bvadd %p2 (_ bv1 64)) (_ bv0 64)) (bvadd (bvadd %p1 (_ bv1 64)) (_ bv1 64))))))
 (let (($x19641 (and $x6023 $x7310 (= (bvadd (bvadd %p2 (_ bv1 64)) (_ bv0 64)) (bvadd (bvadd %p1 (_ bv1 64)) (_ bv2 64))))))
 (let ((?x23210 (ite (and $x6023 $x7310 (= (bvadd (bvadd %p2 (_ bv1 64)) (_ bv1 64)) %p1)) ?x1585 mem0)))
 (let (($x9945 (and $x6023 $x7310 (= (bvadd (bvadd %p2 (_ bv1 64)) (_ bv1 64)) (bvadd (bvadd %p1 (_ bv1 64)) (_ bv0 64))))))
 (let (($x2351 (and $x6023 $x7310 (= (bvadd (bvadd %p2 (_ bv1 64)) (_ bv1 64)) (bvadd (bvadd %p1 (_ bv1 64)) (_ bv1 64))))))
 (let (($x4001 (and $x6023 $x7310 (= (bvadd (bvadd %p2 (_ bv1 64)) (_ bv1 64)) (bvadd (bvadd %p1 (_ bv1 64)) (_ bv2 64))))))
 (let ((?x1110 (ite (and $x6023 $x7310 (= (bvadd (bvadd %p2 (_ bv1 64)) (_ bv2 64)) %p1)) ?x1585 mem0)))
 (let (($x24008 (and $x6023 $x7310 (= (bvadd (bvadd %p2 (_ bv1 64)) (_ bv2 64)) (bvadd (bvadd %p1 (_ bv1 64)) (_ bv0 64))))))
 (let (($x5763 (and $x6023 $x7310 (= (bvadd (bvadd %p2 (_ bv1 64)) (_ bv2 64)) (bvadd (bvadd %p1 (_ bv1 64)) (_ bv1 64))))))
 (let (($x7010 (and $x6023 $x7310 (= (bvadd (bvadd %p2 (_ bv1 64)) (_ bv2 64)) (bvadd (bvadd %p1 (_ bv1 64)) (_ bv2 64))))))
 (let ((?x16590 (concat (ite $x7010 ?x18058 (ite $x5763 ?x11474 (ite $x24008 ?x10245 ?x1110))) (ite $x4001 ?x18058 (ite $x2351 ?x11474 (ite $x9945 ?x10245 ?x23210))))))
 (let ((?x2242 (concat (concat ?x16590 (ite $x19641 ?x18058 (ite $x21245 ?x11474 (ite $x9596 ?x10245 ?x2976)))) ((_ extract 6 0) ?x8359))))
 (let (($x10824 (= |ana_equivalentAddressValues(%p1, %p2)| (_ bv1 1))))
 (let (($x10679 (and (distinct %p2 (_ bv0 64)) true)))
 (and $x6023 $x7310 $x10679 $x7310 $x10679 $x7310 (=> $x10824 (= %p1 %p2)) $x10824 (and (distinct ?x2242 %x) true)))))))))))))))))))))))))))))
(check-sat)
