(set-info :source |
 Generated by Alive 0.1
 More info in N. P. Lopes, D. Menendez, S. Nagarakatte, J. Regehr.
 Provably Correct Peephole Optimizations with Alive. In PLDI'15.
|)

(set-info :status unknown)
(declare-fun C2 () (_ BitVec 44))
(declare-fun C1 () (_ BitVec 44))
(assert
 (let ((?x24554 (ite (and (distinct ((_ extract 2 2) C2) (_ bv0 1)) true) (_ bv2 44) (ite (and (distinct ((_ extract 1 1) C2) (_ bv0 1)) true) (_ bv1 44) (_ bv0 44)))))
 (let ((?x24579 (ite (and (distinct ((_ extract 5 5) C2) (_ bv0 1)) true) (_ bv5 44) (ite (and (distinct ((_ extract 4 4) C2) (_ bv0 1)) true) (_ bv4 44) (_ bv3 44)))))
 (let ((?x24079 (ite (and (distinct ((_ extract 8 8) C2) (_ bv0 1)) true) (_ bv8 44) (ite (and (distinct ((_ extract 7 7) C2) (_ bv0 1)) true) (_ bv7 44) (_ bv6 44)))))
 (let ((?x24091 (ite (and (distinct ((_ extract 10 9) C2) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) C2) (_ bv0 1)) true) (_ bv10 44) (_ bv9 44)) ?x24079)))
 (let ((?x24547 (ite (and (distinct ((_ extract 10 6) C2) (_ bv0 5)) true) ?x24091 (ite (and (distinct ((_ extract 5 3) C2) (_ bv0 3)) true) ?x24579 ?x24554))))
 (let ((?x24447 (ite (and (distinct ((_ extract 13 13) C2) (_ bv0 1)) true) (_ bv13 44) (ite (and (distinct ((_ extract 12 12) C2) (_ bv0 1)) true) (_ bv12 44) (_ bv11 44)))))
 (let ((?x24499 (ite (and (distinct ((_ extract 16 16) C2) (_ bv0 1)) true) (_ bv16 44) (ite (and (distinct ((_ extract 15 15) C2) (_ bv0 1)) true) (_ bv15 44) (_ bv14 44)))))
 (let ((?x24565 (ite (and (distinct ((_ extract 19 19) C2) (_ bv0 1)) true) (_ bv19 44) (ite (and (distinct ((_ extract 18 18) C2) (_ bv0 1)) true) (_ bv18 44) (_ bv17 44)))))
 (let ((?x24558 (ite (and (distinct ((_ extract 21 20) C2) (_ bv0 2)) true) (ite (and (distinct ((_ extract 21 21) C2) (_ bv0 1)) true) (_ bv21 44) (_ bv20 44)) ?x24565)))
 (let ((?x24436 (ite (and (distinct ((_ extract 21 17) C2) (_ bv0 5)) true) ?x24558 (ite (and (distinct ((_ extract 16 14) C2) (_ bv0 3)) true) ?x24499 ?x24447))))
 (let ((?x24056 (ite (and (distinct ((_ extract 24 24) C2) (_ bv0 1)) true) (_ bv24 44) (ite (and (distinct ((_ extract 23 23) C2) (_ bv0 1)) true) (_ bv23 44) (_ bv22 44)))))
 (let ((?x24124 (ite (and (distinct ((_ extract 27 27) C2) (_ bv0 1)) true) (_ bv27 44) (ite (and (distinct ((_ extract 26 26) C2) (_ bv0 1)) true) (_ bv26 44) (_ bv25 44)))))
 (let ((?x24058 (ite (and (distinct ((_ extract 30 30) C2) (_ bv0 1)) true) (_ bv30 44) (ite (and (distinct ((_ extract 29 29) C2) (_ bv0 1)) true) (_ bv29 44) (_ bv28 44)))))
 (let ((?x24084 (ite (and (distinct ((_ extract 32 31) C2) (_ bv0 2)) true) (ite (and (distinct ((_ extract 32 32) C2) (_ bv0 1)) true) (_ bv32 44) (_ bv31 44)) ?x24058)))
 (let ((?x24061 (ite (and (distinct ((_ extract 32 28) C2) (_ bv0 5)) true) ?x24084 (ite (and (distinct ((_ extract 27 25) C2) (_ bv0 3)) true) ?x24124 ?x24056))))
 (let ((?x22674 (ite (and (distinct ((_ extract 35 35) C2) (_ bv0 1)) true) (_ bv35 44) (ite (and (distinct ((_ extract 34 34) C2) (_ bv0 1)) true) (_ bv34 44) (_ bv33 44)))))
 (let ((?x24614 (ite (and (distinct ((_ extract 38 38) C2) (_ bv0 1)) true) (_ bv38 44) (ite (and (distinct ((_ extract 37 37) C2) (_ bv0 1)) true) (_ bv37 44) (_ bv36 44)))))
 (let ((?x24615 (ite (and (distinct ((_ extract 41 41) C2) (_ bv0 1)) true) (_ bv41 44) (ite (and (distinct ((_ extract 40 40) C2) (_ bv0 1)) true) (_ bv40 44) (_ bv39 44)))))
 (let ((?x24420 (ite (and (distinct ((_ extract 43 42) C2) (_ bv0 2)) true) (ite (and (distinct ((_ extract 43 43) C2) (_ bv0 1)) true) (_ bv43 44) (_ bv42 44)) ?x24615)))
 (let ((?x23665 (ite (and (distinct ((_ extract 43 39) C2) (_ bv0 5)) true) ?x24420 (ite (and (distinct ((_ extract 38 36) C2) (_ bv0 3)) true) ?x24614 ?x22674))))
 (let ((?x24543 (ite (and (distinct ((_ extract 43 22) C2) (_ bv0 22)) true) (ite (and (distinct ((_ extract 43 33) C2) (_ bv0 11)) true) ?x23665 ?x24061) (ite (and (distinct ((_ extract 21 11) C2) (_ bv0 11)) true) ?x24436 ?x24547))))
 (let ((?x24540 (bvsub (_ bv44 44) (bvsub (bvsub (_ bv44 44) ?x24543) (_ bv1 44)))))
 (let (($x24488 (not (= (bvand C2 (bvshl (_ bv17592186044415 44) ?x24540)) (_ bv0 44)))))
 (let (($x24503 (and (and (distinct C2 (_ bv0 44)) true) (= (bvand C2 (bvsub C2 (_ bv1 44))) (_ bv0 44)))))
 (let (($x24513 (= C1 (bvneg C2))))
 (and $x24513 $x24503 $x24488 false)))))))))))))))))))))))))))
(check-sat)
