(set-info :status unknown)
(declare-fun mem0 () (_ BitVec 8))
(declare-fun %x () (_ BitVec 33))
(declare-fun %p1 () (_ BitVec 64))
(declare-fun idx () (_ BitVec 64))
(declare-fun |ana_equivalentAddressValues(%p1, %p2)| () (_ BitVec 1))
(declare-fun %p2 () (_ BitVec 64))
(assert
 (let ((?x11162 (concat ((_ extract 7 1) mem0) ((_ extract 0 0) %x))))
 (let ((?x6023 (ite (and (and (distinct %p1 (_ bv0 64)) true) (or true true) (= idx %p1)) ?x11162 mem0)))
 (let ((?x11745 ((_ extract 8 1) %x)))
 (let (($x3717 (or true true)))
 (let (($x1038 (and (distinct %p1 (_ bv0 64)) true)))
 (let ((?x11474 (ite (and $x1038 $x3717 (= idx (bvadd (bvadd %p1 (_ bv1 64)) (_ bv0 64)))) ?x11745 ?x6023)))
 (let ((?x6091 ((_ extract 16 9) %x)))
 (let ((?x10633 (ite (and $x1038 $x3717 (= idx (bvadd (bvadd %p1 (_ bv1 64)) (_ bv1 64)))) ?x6091 ?x11474)))
 (let ((?x23999 ((_ extract 24 17) %x)))
 (let ((?x1175 (ite (and $x1038 $x3717 (= idx (bvadd (bvadd %p1 (_ bv1 64)) (_ bv2 64)))) ?x23999 ?x10633)))
 (let ((?x1057 ((_ extract 32 25) %x)))
 (let ((?x15160 (ite (and $x1038 $x3717 (= idx (bvadd (bvadd %p1 (_ bv1 64)) (_ bv3 64)))) ?x1057 ?x1175)))
 (let (($x15172 (= |ana_equivalentAddressValues(%p1, %p2)| (_ bv1 1))))
 (and (=> $x15172 (= %p1 %p2)) $x15172 (and (distinct ?x15160 ?x15160) true))))))))))))))))
(check-sat)
