(set-info :status unknown)
(declare-fun %x () (_ BitVec 10))
(declare-fun mem0 () (_ BitVec 8))
(declare-fun %p1 () (_ BitVec 64))
(declare-fun %p2 () (_ BitVec 64))
(declare-fun |ana_equivalentAddressValues(%p1, %p2)| () (_ BitVec 1))
(assert
 (let ((?x9727 (concat ((_ extract 7 2) mem0) ((_ extract 1 0) %x))))
 (let ((?x11559 (ite (and (and (distinct %p1 (_ bv0 64)) true) (or true true) (= %p2 %p1)) ?x9727 mem0)))
 (let ((?x11978 ((_ extract 9 2) %x)))
 (let (($x22315 (or true true)))
 (let (($x16073 (and (distinct %p1 (_ bv0 64)) true)))
 (let ((?x13653 (ite (and $x16073 $x22315 (= %p2 (bvadd (bvadd %p1 (_ bv1 64)) (_ bv0 64)))) ?x11978 ?x11559)))
 (let ((?x15615 (ite (and $x16073 $x22315 (= (bvadd (bvadd %p2 (_ bv1 64)) (_ bv0 64)) %p1)) ?x9727 mem0)))
 (let (($x18057 (and $x16073 $x22315 (= (bvadd (bvadd %p2 (_ bv1 64)) (_ bv0 64)) (bvadd (bvadd %p1 (_ bv1 64)) (_ bv0 64))))))
 (let (($x14815 (= |ana_equivalentAddressValues(%p1, %p2)| (_ bv1 1))))
 (let (($x3308 (and (distinct %p2 (_ bv0 64)) true)))
 (and $x16073 $x22315 $x3308 $x22315 $x3308 $x22315 (=> $x14815 (= %p1 %p2)) $x14815 (and (distinct (concat (ite $x18057 ?x11978 ?x15615) ((_ extract 1 0) ?x13653)) %x) true)))))))))))))
(check-sat)
