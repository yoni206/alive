(set-info :status unknown)
(declare-fun C2 () (_ BitVec 11))
(declare-fun C3 () (_ BitVec 11))
(declare-fun C () (_ BitVec 19))
(declare-fun %Op () (_ BitVec 19))
(assert
 (let ((?x1403 (bvsub C3 C2)))
 (let ((?x4989 (ite (and (distinct ((_ extract 2 2) ?x1403) (_ bv0 1)) true) (_ bv2 11) (ite (and (distinct ((_ extract 1 1) ?x1403) (_ bv0 1)) true) (_ bv1 11) (_ bv0 11)))))
 (let ((?x2644 (ite (and (distinct ((_ extract 5 5) ?x1403) (_ bv0 1)) true) (_ bv5 11) (ite (and (distinct ((_ extract 4 4) ?x1403) (_ bv0 1)) true) (_ bv4 11) (_ bv3 11)))))
 (let ((?x7594 (ite (and (distinct ((_ extract 8 8) ?x1403) (_ bv0 1)) true) (_ bv8 11) (ite (and (distinct ((_ extract 7 7) ?x1403) (_ bv0 1)) true) (_ bv7 11) (_ bv6 11)))))
 (let ((?x7787 (ite (and (distinct ((_ extract 10 9) ?x1403) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) ?x1403) (_ bv0 1)) true) (_ bv10 11) (_ bv9 11)) ?x7594)))
 (let ((?x4463 (ite (and (distinct ((_ extract 10 6) ?x1403) (_ bv0 5)) true) ?x7787 (ite (and (distinct ((_ extract 5 3) ?x1403) (_ bv0 3)) true) ?x2644 ?x4989))))
 (let ((?x4304 (ite (and (distinct ((_ extract 2 2) C) (_ bv0 1)) true) (_ bv2 11) (ite (and (distinct ((_ extract 1 1) C) (_ bv0 1)) true) (_ bv1 11) (_ bv0 11)))))
 (let ((?x7958 (ite (and (distinct ((_ extract 4 3) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 4 4) C) (_ bv0 1)) true) (_ bv4 11) (_ bv3 11)) ?x4304)))
 (let ((?x6791 (ite (and (distinct ((_ extract 7 7) C) (_ bv0 1)) true) (_ bv7 11) (ite (and (distinct ((_ extract 6 6) C) (_ bv0 1)) true) (_ bv6 11) (_ bv5 11)))))
 (let ((?x3474 (ite (and (distinct ((_ extract 9 8) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 9 9) C) (_ bv0 1)) true) (_ bv9 11) (_ bv8 11)) ?x6791)))
 (let ((?x7131 (ite (and (distinct ((_ extract 12 12) C) (_ bv0 1)) true) (_ bv12 11) (ite (and (distinct ((_ extract 11 11) C) (_ bv0 1)) true) (_ bv11 11) (_ bv10 11)))))
 (let ((?x7629 (ite (and (distinct ((_ extract 14 13) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 14 14) C) (_ bv0 1)) true) (_ bv14 11) (_ bv13 11)) ?x7131)))
 (let ((?x4420 (ite (and (distinct ((_ extract 18 17) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 18 18) C) (_ bv0 1)) true) (_ bv18 11) (_ bv17 11)) (ite (and (distinct ((_ extract 16 16) C) (_ bv0 1)) true) (_ bv16 11) (_ bv15 11)))))
 (let ((?x6451 (ite (and (distinct ((_ extract 18 10) C) (_ bv0 9)) true) (ite (and (distinct ((_ extract 18 15) C) (_ bv0 4)) true) ?x4420 ?x7629) (ite (and (distinct ((_ extract 9 5) C) (_ bv0 5)) true) ?x3474 ?x7958))))
 (let ((?x6539 (bvsub ?x6451 ?x4463)))
 (let ((?x8152 (ite (bvsgt (_ bv0 11) ?x6539) (_ bv0 11) ?x6539)))
 (let ((?x4720 (bvsub ?x4463 ?x6451)))
 (let ((?x7495 (ite (bvsgt (_ bv0 11) ?x4720) (_ bv0 11) ?x4720)))
 (let ((?x8293 (bvadd (bvxor (bvlshr (bvshl ((_ extract 10 0) (bvand %Op C)) ?x7495) ?x8152) ?x1403) C2)))
 (let ((?x5621 (ite (= (ite (and (distinct (bvand %Op C) (_ bv0 19)) true) (_ bv1 1) (_ bv0 1)) (_ bv1 1)) C2 C3)))
 (let ((?x7707 (ite (and (distinct ((_ extract 2 2) C) (_ bv0 1)) true) (_ bv2 32) (ite (and (distinct ((_ extract 1 1) C) (_ bv0 1)) true) (_ bv1 32) (_ bv0 32)))))
 (let ((?x7552 (ite (and (distinct ((_ extract 4 3) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 4 4) C) (_ bv0 1)) true) (_ bv4 32) (_ bv3 32)) ?x7707)))
 (let ((?x5101 (ite (and (distinct ((_ extract 7 7) C) (_ bv0 1)) true) (_ bv7 32) (ite (and (distinct ((_ extract 6 6) C) (_ bv0 1)) true) (_ bv6 32) (_ bv5 32)))))
 (let ((?x6871 (ite (and (distinct ((_ extract 9 8) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 9 9) C) (_ bv0 1)) true) (_ bv9 32) (_ bv8 32)) ?x5101)))
 (let ((?x3841 (ite (and (distinct ((_ extract 12 12) C) (_ bv0 1)) true) (_ bv12 32) (ite (and (distinct ((_ extract 11 11) C) (_ bv0 1)) true) (_ bv11 32) (_ bv10 32)))))
 (let ((?x4266 (ite (and (distinct ((_ extract 14 13) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 14 14) C) (_ bv0 1)) true) (_ bv14 32) (_ bv13 32)) ?x3841)))
 (let ((?x7089 (ite (and (distinct ((_ extract 18 17) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 18 18) C) (_ bv0 1)) true) (_ bv18 32) (_ bv17 32)) (ite (and (distinct ((_ extract 16 16) C) (_ bv0 1)) true) (_ bv16 32) (_ bv15 32)))))
 (let ((?x7481 (ite (and (distinct ((_ extract 18 10) C) (_ bv0 9)) true) (ite (and (distinct ((_ extract 18 15) C) (_ bv0 4)) true) ?x7089 ?x4266) (ite (and (distinct ((_ extract 9 5) C) (_ bv0 5)) true) ?x6871 ?x7552))))
 (and (and (and (distinct C (_ bv0 19)) true) (= (bvand C (bvsub C (_ bv1 19))) (_ bv0 19))) (and (and (distinct ?x1403 (_ bv0 11)) true) (= (bvand ?x1403 (bvsub ?x1403 (_ bv1 11))) (_ bv0 11))) (bvslt ?x7481 (_ bv11 32)) (and (distinct ?x5621 ?x8293) true)))))))))))))))))))))))))))))))
(check-sat)
