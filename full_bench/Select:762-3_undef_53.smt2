(set-info :status unknown)
(declare-fun C2 () (_ BitVec 11))
(declare-fun C3 () (_ BitVec 11))
(declare-fun C () (_ BitVec 57))
(assert
 (let ((?x8736 (ite (and (distinct ((_ extract 2 2) (bvsub C3 C2)) (_ bv0 1)) true) (_ bv2 11) (ite (and (distinct ((_ extract 1 1) (bvsub C3 C2)) (_ bv0 1)) true) (_ bv1 11) (_ bv0 11)))))
 (let ((?x6279 (ite (and (distinct ((_ extract 5 5) (bvsub C3 C2)) (_ bv0 1)) true) (_ bv5 11) (ite (and (distinct ((_ extract 4 4) (bvsub C3 C2)) (_ bv0 1)) true) (_ bv4 11) (_ bv3 11)))))
 (let ((?x12828 (ite (and (distinct ((_ extract 8 8) (bvsub C3 C2)) (_ bv0 1)) true) (_ bv8 11) (ite (and (distinct ((_ extract 7 7) (bvsub C3 C2)) (_ bv0 1)) true) (_ bv7 11) (_ bv6 11)))))
 (let ((?x16988 (ite (and (distinct ((_ extract 10 9) (bvsub C3 C2)) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) (bvsub C3 C2)) (_ bv0 1)) true) (_ bv10 11) (_ bv9 11)) ?x12828)))
 (let ((?x267 (ite (and (distinct ((_ extract 10 6) (bvsub C3 C2)) (_ bv0 5)) true) ?x16988 (ite (and (distinct ((_ extract 5 3) (bvsub C3 C2)) (_ bv0 3)) true) ?x6279 ?x8736))))
 (let ((?x12820 (ite (and (distinct ((_ extract 3 2) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 3 3) C) (_ bv0 1)) true) (_ bv3 11) (_ bv2 11)) (ite (and (distinct ((_ extract 1 1) C) (_ bv0 1)) true) (_ bv1 11) (_ bv0 11)))))
 (let ((?x824 (ite (and (distinct ((_ extract 7 6) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 7 7) C) (_ bv0 1)) true) (_ bv7 11) (_ bv6 11)) (ite (and (distinct ((_ extract 5 5) C) (_ bv0 1)) true) (_ bv5 11) (_ bv4 11)))))
 (let ((?x21017 (ite (and (distinct ((_ extract 11 10) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 11 11) C) (_ bv0 1)) true) (_ bv11 11) (_ bv10 11)) (ite (and (distinct ((_ extract 9 9) C) (_ bv0 1)) true) (_ bv9 11) (_ bv8 11)))))
 (let ((?x23613 (ite (and (distinct ((_ extract 14 14) C) (_ bv0 1)) true) (_ bv14 11) (ite (and (distinct ((_ extract 13 13) C) (_ bv0 1)) true) (_ bv13 11) (_ bv12 11)))))
 (let ((?x7461 (ite (and (distinct ((_ extract 14 8) C) (_ bv0 7)) true) (ite (and (distinct ((_ extract 14 12) C) (_ bv0 3)) true) ?x23613 ?x21017) (ite (and (distinct ((_ extract 7 4) C) (_ bv0 4)) true) ?x824 ?x12820))))
 (let ((?x6411 (ite (and (distinct ((_ extract 18 17) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 18 18) C) (_ bv0 1)) true) (_ bv18 11) (_ bv17 11)) (ite (and (distinct ((_ extract 16 16) C) (_ bv0 1)) true) (_ bv16 11) (_ bv15 11)))))
 (let ((?x11513 (ite (and (distinct ((_ extract 21 21) C) (_ bv0 1)) true) (_ bv21 11) (ite (and (distinct ((_ extract 20 20) C) (_ bv0 1)) true) (_ bv20 11) (_ bv19 11)))))
 (let ((?x17147 (ite (and (distinct ((_ extract 25 24) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 25 25) C) (_ bv0 1)) true) (_ bv25 11) (_ bv24 11)) (ite (and (distinct ((_ extract 23 23) C) (_ bv0 1)) true) (_ bv23 11) (_ bv22 11)))))
 (let ((?x14705 (ite (and (distinct ((_ extract 28 28) C) (_ bv0 1)) true) (_ bv28 11) (ite (and (distinct ((_ extract 27 27) C) (_ bv0 1)) true) (_ bv27 11) (_ bv26 11)))))
 (let ((?x1170 (ite (and (distinct ((_ extract 28 22) C) (_ bv0 7)) true) (ite (and (distinct ((_ extract 28 26) C) (_ bv0 3)) true) ?x14705 ?x17147) (ite (and (distinct ((_ extract 21 19) C) (_ bv0 3)) true) ?x11513 ?x6411))))
 (let ((?x13099 (ite (and (distinct ((_ extract 32 31) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 32 32) C) (_ bv0 1)) true) (_ bv32 11) (_ bv31 11)) (ite (and (distinct ((_ extract 30 30) C) (_ bv0 1)) true) (_ bv30 11) (_ bv29 11)))))
 (let ((?x11605 (ite (and (distinct ((_ extract 35 35) C) (_ bv0 1)) true) (_ bv35 11) (ite (and (distinct ((_ extract 34 34) C) (_ bv0 1)) true) (_ bv34 11) (_ bv33 11)))))
 (let ((?x9365 (ite (and (distinct ((_ extract 39 38) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 39 39) C) (_ bv0 1)) true) (_ bv39 11) (_ bv38 11)) (ite (and (distinct ((_ extract 37 37) C) (_ bv0 1)) true) (_ bv37 11) (_ bv36 11)))))
 (let ((?x9245 (ite (and (distinct ((_ extract 42 42) C) (_ bv0 1)) true) (_ bv42 11) (ite (and (distinct ((_ extract 41 41) C) (_ bv0 1)) true) (_ bv41 11) (_ bv40 11)))))
 (let ((?x18072 (ite (and (distinct ((_ extract 42 36) C) (_ bv0 7)) true) (ite (and (distinct ((_ extract 42 40) C) (_ bv0 3)) true) ?x9245 ?x9365) (ite (and (distinct ((_ extract 35 33) C) (_ bv0 3)) true) ?x11605 ?x13099))))
 (let ((?x3437 (ite (and (distinct ((_ extract 46 45) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 46 46) C) (_ bv0 1)) true) (_ bv46 11) (_ bv45 11)) (ite (and (distinct ((_ extract 44 44) C) (_ bv0 1)) true) (_ bv44 11) (_ bv43 11)))))
 (let ((?x13904 (ite (and (distinct ((_ extract 49 49) C) (_ bv0 1)) true) (_ bv49 11) (ite (and (distinct ((_ extract 48 48) C) (_ bv0 1)) true) (_ bv48 11) (_ bv47 11)))))
 (let ((?x19178 (ite (and (distinct ((_ extract 53 52) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 53 53) C) (_ bv0 1)) true) (_ bv53 11) (_ bv52 11)) (ite (and (distinct ((_ extract 51 51) C) (_ bv0 1)) true) (_ bv51 11) (_ bv50 11)))))
 (let ((?x10033 (ite (and (distinct ((_ extract 56 56) C) (_ bv0 1)) true) (_ bv56 11) (ite (and (distinct ((_ extract 55 55) C) (_ bv0 1)) true) (_ bv55 11) (_ bv54 11)))))
 (let ((?x3207 (ite (and (distinct ((_ extract 56 50) C) (_ bv0 7)) true) (ite (and (distinct ((_ extract 56 54) C) (_ bv0 3)) true) ?x10033 ?x19178) (ite (and (distinct ((_ extract 49 47) C) (_ bv0 3)) true) ?x13904 ?x3437))))
 (let ((?x14226 (ite (and (distinct ((_ extract 56 29) C) (_ bv0 28)) true) (ite (and (distinct ((_ extract 56 43) C) (_ bv0 14)) true) ?x3207 ?x18072) (ite (and (distinct ((_ extract 28 15) C) (_ bv0 14)) true) ?x1170 ?x7461))))
 (let ((?x3935 (bvsub ?x14226 ?x267)))
 (let ((?x23425 (ite (bvsgt (_ bv0 11) ?x3935) (_ bv0 11) ?x3935)))
 (let ((?x14268 (bvsub ?x267 ?x14226)))
 (let ((?x12053 (ite (bvsgt (_ bv0 11) ?x14268) (_ bv0 11) ?x14268)))
 (let ((?x8064 (ite (and (distinct ((_ extract 3 2) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 3 3) C) (_ bv0 1)) true) (_ bv3 32) (_ bv2 32)) (ite (and (distinct ((_ extract 1 1) C) (_ bv0 1)) true) (_ bv1 32) (_ bv0 32)))))
 (let ((?x16661 (ite (and (distinct ((_ extract 7 6) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 7 7) C) (_ bv0 1)) true) (_ bv7 32) (_ bv6 32)) (ite (and (distinct ((_ extract 5 5) C) (_ bv0 1)) true) (_ bv5 32) (_ bv4 32)))))
 (let ((?x2712 (ite (and (distinct ((_ extract 11 10) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 11 11) C) (_ bv0 1)) true) (_ bv11 32) (_ bv10 32)) (ite (and (distinct ((_ extract 9 9) C) (_ bv0 1)) true) (_ bv9 32) (_ bv8 32)))))
 (let ((?x21678 (ite (and (distinct ((_ extract 14 14) C) (_ bv0 1)) true) (_ bv14 32) (ite (and (distinct ((_ extract 13 13) C) (_ bv0 1)) true) (_ bv13 32) (_ bv12 32)))))
 (let ((?x17560 (ite (and (distinct ((_ extract 14 8) C) (_ bv0 7)) true) (ite (and (distinct ((_ extract 14 12) C) (_ bv0 3)) true) ?x21678 ?x2712) (ite (and (distinct ((_ extract 7 4) C) (_ bv0 4)) true) ?x16661 ?x8064))))
 (let ((?x17941 (ite (and (distinct ((_ extract 18 17) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 18 18) C) (_ bv0 1)) true) (_ bv18 32) (_ bv17 32)) (ite (and (distinct ((_ extract 16 16) C) (_ bv0 1)) true) (_ bv16 32) (_ bv15 32)))))
 (let ((?x17219 (ite (and (distinct ((_ extract 21 21) C) (_ bv0 1)) true) (_ bv21 32) (ite (and (distinct ((_ extract 20 20) C) (_ bv0 1)) true) (_ bv20 32) (_ bv19 32)))))
 (let ((?x13894 (ite (and (distinct ((_ extract 25 24) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 25 25) C) (_ bv0 1)) true) (_ bv25 32) (_ bv24 32)) (ite (and (distinct ((_ extract 23 23) C) (_ bv0 1)) true) (_ bv23 32) (_ bv22 32)))))
 (let ((?x10629 (ite (and (distinct ((_ extract 28 28) C) (_ bv0 1)) true) (_ bv28 32) (ite (and (distinct ((_ extract 27 27) C) (_ bv0 1)) true) (_ bv27 32) (_ bv26 32)))))
 (let ((?x20083 (ite (and (distinct ((_ extract 28 22) C) (_ bv0 7)) true) (ite (and (distinct ((_ extract 28 26) C) (_ bv0 3)) true) ?x10629 ?x13894) (ite (and (distinct ((_ extract 21 19) C) (_ bv0 3)) true) ?x17219 ?x17941))))
 (let ((?x9755 (ite (and (distinct ((_ extract 32 31) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 32 32) C) (_ bv0 1)) true) (_ bv32 32) (_ bv31 32)) (ite (and (distinct ((_ extract 30 30) C) (_ bv0 1)) true) (_ bv30 32) (_ bv29 32)))))
 (let ((?x5772 (ite (and (distinct ((_ extract 35 35) C) (_ bv0 1)) true) (_ bv35 32) (ite (and (distinct ((_ extract 34 34) C) (_ bv0 1)) true) (_ bv34 32) (_ bv33 32)))))
 (let ((?x5306 (ite (and (distinct ((_ extract 39 38) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 39 39) C) (_ bv0 1)) true) (_ bv39 32) (_ bv38 32)) (ite (and (distinct ((_ extract 37 37) C) (_ bv0 1)) true) (_ bv37 32) (_ bv36 32)))))
 (let ((?x1580 (ite (and (distinct ((_ extract 42 42) C) (_ bv0 1)) true) (_ bv42 32) (ite (and (distinct ((_ extract 41 41) C) (_ bv0 1)) true) (_ bv41 32) (_ bv40 32)))))
 (let ((?x9067 (ite (and (distinct ((_ extract 42 36) C) (_ bv0 7)) true) (ite (and (distinct ((_ extract 42 40) C) (_ bv0 3)) true) ?x1580 ?x5306) (ite (and (distinct ((_ extract 35 33) C) (_ bv0 3)) true) ?x5772 ?x9755))))
 (let ((?x19412 (ite (and (distinct ((_ extract 46 45) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 46 46) C) (_ bv0 1)) true) (_ bv46 32) (_ bv45 32)) (ite (and (distinct ((_ extract 44 44) C) (_ bv0 1)) true) (_ bv44 32) (_ bv43 32)))))
 (let ((?x7908 (ite (and (distinct ((_ extract 49 49) C) (_ bv0 1)) true) (_ bv49 32) (ite (and (distinct ((_ extract 48 48) C) (_ bv0 1)) true) (_ bv48 32) (_ bv47 32)))))
 (let ((?x10056 (ite (and (distinct ((_ extract 53 52) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 53 53) C) (_ bv0 1)) true) (_ bv53 32) (_ bv52 32)) (ite (and (distinct ((_ extract 51 51) C) (_ bv0 1)) true) (_ bv51 32) (_ bv50 32)))))
 (let ((?x7442 (ite (and (distinct ((_ extract 56 56) C) (_ bv0 1)) true) (_ bv56 32) (ite (and (distinct ((_ extract 55 55) C) (_ bv0 1)) true) (_ bv55 32) (_ bv54 32)))))
 (let ((?x1040 (ite (and (distinct ((_ extract 56 50) C) (_ bv0 7)) true) (ite (and (distinct ((_ extract 56 54) C) (_ bv0 3)) true) ?x7442 ?x10056) (ite (and (distinct ((_ extract 49 47) C) (_ bv0 3)) true) ?x7908 ?x19412))))
 (let ((?x19882 (ite (and (distinct ((_ extract 56 29) C) (_ bv0 28)) true) (ite (and (distinct ((_ extract 56 43) C) (_ bv0 14)) true) ?x1040 ?x9067) (ite (and (distinct ((_ extract 28 15) C) (_ bv0 14)) true) ?x20083 ?x17560))))
 (let (($x6720 (and (and (distinct (bvsub C3 C2) (_ bv0 11)) true) (= (bvand (bvsub C3 C2) (bvsub (bvsub C3 C2) (_ bv1 11))) (_ bv0 11)))))
 (and (and (and (distinct C (_ bv0 57)) true) (= (bvand C (bvsub C (_ bv1 57))) (_ bv0 57))) $x6720 (bvslt ?x19882 (_ bv11 32)) (not (and (bvult ?x12053 (_ bv11 11)) (bvult ?x23425 (_ bv11 11))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
