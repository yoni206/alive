(set-info :status unknown)
(declare-fun %Y () (_ BitVec 11))
(declare-fun C2 () (_ BitVec 11))
(declare-fun C1 () (_ BitVec 39))
(declare-fun %X () (_ BitVec 39))
(assert
 (let ((?x8546 (ite (and (distinct ((_ extract 2 2) C2) (_ bv0 1)) true) (_ bv2 39) (ite (and (distinct ((_ extract 1 1) C2) (_ bv0 1)) true) (_ bv1 39) (_ bv0 39)))))
 (let ((?x3568 (ite (and (distinct ((_ extract 5 5) C2) (_ bv0 1)) true) (_ bv5 39) (ite (and (distinct ((_ extract 4 4) C2) (_ bv0 1)) true) (_ bv4 39) (_ bv3 39)))))
 (let ((?x23695 (ite (and (distinct ((_ extract 8 8) C2) (_ bv0 1)) true) (_ bv8 39) (ite (and (distinct ((_ extract 7 7) C2) (_ bv0 1)) true) (_ bv7 39) (_ bv6 39)))))
 (let ((?x23193 (ite (and (distinct ((_ extract 10 9) C2) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) C2) (_ bv0 1)) true) (_ bv10 39) (_ bv9 39)) ?x23695)))
 (let ((?x976 (ite (and (distinct ((_ extract 10 6) C2) (_ bv0 5)) true) ?x23193 (ite (and (distinct ((_ extract 5 3) C2) (_ bv0 3)) true) ?x3568 ?x8546))))
 (let ((?x16823 (ite (and (distinct ((_ extract 2 2) C1) (_ bv0 1)) true) (_ bv2 39) (ite (and (distinct ((_ extract 1 1) C1) (_ bv0 1)) true) (_ bv1 39) (_ bv0 39)))))
 (let ((?x19177 (ite (and (distinct ((_ extract 4 3) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 4 4) C1) (_ bv0 1)) true) (_ bv4 39) (_ bv3 39)) ?x16823)))
 (let ((?x12164 (ite (and (distinct ((_ extract 7 7) C1) (_ bv0 1)) true) (_ bv7 39) (ite (and (distinct ((_ extract 6 6) C1) (_ bv0 1)) true) (_ bv6 39) (_ bv5 39)))))
 (let ((?x8330 (ite (and (distinct ((_ extract 9 8) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 9 9) C1) (_ bv0 1)) true) (_ bv9 39) (_ bv8 39)) ?x12164)))
 (let ((?x11014 (ite (and (distinct ((_ extract 12 12) C1) (_ bv0 1)) true) (_ bv12 39) (ite (and (distinct ((_ extract 11 11) C1) (_ bv0 1)) true) (_ bv11 39) (_ bv10 39)))))
 (let ((?x9319 (ite (and (distinct ((_ extract 14 13) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 14 14) C1) (_ bv0 1)) true) (_ bv14 39) (_ bv13 39)) ?x11014)))
 (let ((?x5849 (ite (and (distinct ((_ extract 17 17) C1) (_ bv0 1)) true) (_ bv17 39) (ite (and (distinct ((_ extract 16 16) C1) (_ bv0 1)) true) (_ bv16 39) (_ bv15 39)))))
 (let ((?x5841 (ite (and (distinct ((_ extract 19 18) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 19 19) C1) (_ bv0 1)) true) (_ bv19 39) (_ bv18 39)) ?x5849)))
 (let ((?x16853 (ite (and (distinct ((_ extract 19 10) C1) (_ bv0 10)) true) (ite (and (distinct ((_ extract 19 15) C1) (_ bv0 5)) true) ?x5841 ?x9319) (ite (and (distinct ((_ extract 9 5) C1) (_ bv0 5)) true) ?x8330 ?x19177))))
 (let ((?x19860 (ite (and (distinct ((_ extract 22 22) C1) (_ bv0 1)) true) (_ bv22 39) (ite (and (distinct ((_ extract 21 21) C1) (_ bv0 1)) true) (_ bv21 39) (_ bv20 39)))))
 (let ((?x10444 (ite (and (distinct ((_ extract 24 23) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 24 24) C1) (_ bv0 1)) true) (_ bv24 39) (_ bv23 39)) ?x19860)))
 (let ((?x9098 (ite (and (distinct ((_ extract 27 27) C1) (_ bv0 1)) true) (_ bv27 39) (ite (and (distinct ((_ extract 26 26) C1) (_ bv0 1)) true) (_ bv26 39) (_ bv25 39)))))
 (let ((?x1007 (ite (and (distinct ((_ extract 29 28) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 29 29) C1) (_ bv0 1)) true) (_ bv29 39) (_ bv28 39)) ?x9098)))
 (let ((?x21217 (ite (and (distinct ((_ extract 32 32) C1) (_ bv0 1)) true) (_ bv32 39) (ite (and (distinct ((_ extract 31 31) C1) (_ bv0 1)) true) (_ bv31 39) (_ bv30 39)))))
 (let ((?x19725 (ite (and (distinct ((_ extract 34 33) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 34 34) C1) (_ bv0 1)) true) (_ bv34 39) (_ bv33 39)) ?x21217)))
 (let ((?x20206 (ite (and (distinct ((_ extract 38 37) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 38 38) C1) (_ bv0 1)) true) (_ bv38 39) (_ bv37 39)) (ite (and (distinct ((_ extract 36 36) C1) (_ bv0 1)) true) (_ bv36 39) (_ bv35 39)))))
 (let ((?x16073 (ite (and (distinct ((_ extract 38 30) C1) (_ bv0 9)) true) (ite (and (distinct ((_ extract 38 35) C1) (_ bv0 4)) true) ?x20206 ?x19725) (ite (and (distinct ((_ extract 29 25) C1) (_ bv0 5)) true) ?x1007 ?x10444))))
 (let ((?x10803 (bvsub (ite (and (distinct ((_ extract 38 20) C1) (_ bv0 19)) true) ?x16073 ?x16853) ?x976)))
 (let ((?x4003 (bvand %X C1)))
 (let ((?x22104 (bvor %Y C2)))
 (let (($x23528 (and (distinct (ite (= (ite (and (distinct ?x4003 (_ bv0 39)) true) (_ bv1 1) (_ bv0 1)) (_ bv1 1)) ?x22104 %Y) (bvor ((_ extract 10 0) (bvlshr ?x4003 ?x10803)) %Y)) true)))
 (let ((?x10907 (ite (and (distinct ((_ extract 2 2) C1) (_ bv0 1)) true) (_ bv2 32) (ite (and (distinct ((_ extract 1 1) C1) (_ bv0 1)) true) (_ bv1 32) (_ bv0 32)))))
 (let ((?x22227 (ite (and (distinct ((_ extract 4 3) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 4 4) C1) (_ bv0 1)) true) (_ bv4 32) (_ bv3 32)) ?x10907)))
 (let ((?x20098 (ite (and (distinct ((_ extract 7 7) C1) (_ bv0 1)) true) (_ bv7 32) (ite (and (distinct ((_ extract 6 6) C1) (_ bv0 1)) true) (_ bv6 32) (_ bv5 32)))))
 (let ((?x10863 (ite (and (distinct ((_ extract 9 8) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 9 9) C1) (_ bv0 1)) true) (_ bv9 32) (_ bv8 32)) ?x20098)))
 (let ((?x22239 (ite (and (distinct ((_ extract 12 12) C1) (_ bv0 1)) true) (_ bv12 32) (ite (and (distinct ((_ extract 11 11) C1) (_ bv0 1)) true) (_ bv11 32) (_ bv10 32)))))
 (let ((?x9442 (ite (and (distinct ((_ extract 14 13) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 14 14) C1) (_ bv0 1)) true) (_ bv14 32) (_ bv13 32)) ?x22239)))
 (let ((?x17894 (ite (and (distinct ((_ extract 17 17) C1) (_ bv0 1)) true) (_ bv17 32) (ite (and (distinct ((_ extract 16 16) C1) (_ bv0 1)) true) (_ bv16 32) (_ bv15 32)))))
 (let ((?x17721 (ite (and (distinct ((_ extract 19 18) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 19 19) C1) (_ bv0 1)) true) (_ bv19 32) (_ bv18 32)) ?x17894)))
 (let ((?x10022 (ite (and (distinct ((_ extract 19 10) C1) (_ bv0 10)) true) (ite (and (distinct ((_ extract 19 15) C1) (_ bv0 5)) true) ?x17721 ?x9442) (ite (and (distinct ((_ extract 9 5) C1) (_ bv0 5)) true) ?x10863 ?x22227))))
 (let ((?x6468 (ite (and (distinct ((_ extract 22 22) C1) (_ bv0 1)) true) (_ bv22 32) (ite (and (distinct ((_ extract 21 21) C1) (_ bv0 1)) true) (_ bv21 32) (_ bv20 32)))))
 (let ((?x16750 (ite (and (distinct ((_ extract 24 23) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 24 24) C1) (_ bv0 1)) true) (_ bv24 32) (_ bv23 32)) ?x6468)))
 (let ((?x10415 (ite (and (distinct ((_ extract 27 27) C1) (_ bv0 1)) true) (_ bv27 32) (ite (and (distinct ((_ extract 26 26) C1) (_ bv0 1)) true) (_ bv26 32) (_ bv25 32)))))
 (let ((?x9657 (ite (and (distinct ((_ extract 29 28) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 29 29) C1) (_ bv0 1)) true) (_ bv29 32) (_ bv28 32)) ?x10415)))
 (let ((?x429 (ite (and (distinct ((_ extract 32 32) C1) (_ bv0 1)) true) (_ bv32 32) (ite (and (distinct ((_ extract 31 31) C1) (_ bv0 1)) true) (_ bv31 32) (_ bv30 32)))))
 (let ((?x3252 (ite (and (distinct ((_ extract 34 33) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 34 34) C1) (_ bv0 1)) true) (_ bv34 32) (_ bv33 32)) ?x429)))
 (let ((?x18116 (ite (and (distinct ((_ extract 38 37) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 38 38) C1) (_ bv0 1)) true) (_ bv38 32) (_ bv37 32)) (ite (and (distinct ((_ extract 36 36) C1) (_ bv0 1)) true) (_ bv36 32) (_ bv35 32)))))
 (let ((?x16544 (ite (and (distinct ((_ extract 38 30) C1) (_ bv0 9)) true) (ite (and (distinct ((_ extract 38 35) C1) (_ bv0 4)) true) ?x18116 ?x3252) (ite (and (distinct ((_ extract 29 25) C1) (_ bv0 5)) true) ?x9657 ?x16750))))
 (let ((?x8149 (ite (and (distinct ((_ extract 2 2) C2) (_ bv0 1)) true) (_ bv2 32) (ite (and (distinct ((_ extract 1 1) C2) (_ bv0 1)) true) (_ bv1 32) (_ bv0 32)))))
 (let ((?x20601 (ite (and (distinct ((_ extract 5 5) C2) (_ bv0 1)) true) (_ bv5 32) (ite (and (distinct ((_ extract 4 4) C2) (_ bv0 1)) true) (_ bv4 32) (_ bv3 32)))))
 (let ((?x11053 (ite (and (distinct ((_ extract 8 8) C2) (_ bv0 1)) true) (_ bv8 32) (ite (and (distinct ((_ extract 7 7) C2) (_ bv0 1)) true) (_ bv7 32) (_ bv6 32)))))
 (let ((?x7847 (ite (and (distinct ((_ extract 10 9) C2) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) C2) (_ bv0 1)) true) (_ bv10 32) (_ bv9 32)) ?x11053)))
 (let ((?x12705 (ite (and (distinct ((_ extract 10 6) C2) (_ bv0 5)) true) ?x7847 (ite (and (distinct ((_ extract 5 3) C2) (_ bv0 3)) true) ?x20601 ?x8149))))
 (and (and (and (distinct C1 (_ bv0 39)) true) (= (bvand C1 (bvsub C1 (_ bv1 39))) (_ bv0 39))) (and (and (distinct C2 (_ bv0 11)) true) (= (bvand C2 (bvsub C2 (_ bv1 11))) (_ bv0 11))) (bvslt ?x12705 (ite (and (distinct ((_ extract 38 20) C1) (_ bv0 19)) true) ?x16544 ?x10022)) $x23528))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
