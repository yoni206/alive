(set-info :status unknown)
(declare-fun C2 () (_ BitVec 11))
(declare-fun C1 () (_ BitVec 44))
(assert
 (let ((?x2877 (ite (and (distinct ((_ extract 2 2) C2) (_ bv0 1)) true) (_ bv2 44) (ite (and (distinct ((_ extract 1 1) C2) (_ bv0 1)) true) (_ bv1 44) (_ bv0 44)))))
 (let ((?x4568 (ite (and (distinct ((_ extract 5 5) C2) (_ bv0 1)) true) (_ bv5 44) (ite (and (distinct ((_ extract 4 4) C2) (_ bv0 1)) true) (_ bv4 44) (_ bv3 44)))))
 (let ((?x2595 (ite (and (distinct ((_ extract 8 8) C2) (_ bv0 1)) true) (_ bv8 44) (ite (and (distinct ((_ extract 7 7) C2) (_ bv0 1)) true) (_ bv7 44) (_ bv6 44)))))
 (let ((?x2863 (ite (and (distinct ((_ extract 10 9) C2) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) C2) (_ bv0 1)) true) (_ bv10 44) (_ bv9 44)) ?x2595)))
 (let ((?x5472 (ite (and (distinct ((_ extract 10 6) C2) (_ bv0 5)) true) ?x2863 (ite (and (distinct ((_ extract 5 3) C2) (_ bv0 3)) true) ?x4568 ?x2877))))
 (let ((?x4719 (ite (and (distinct ((_ extract 2 2) C1) (_ bv0 1)) true) (_ bv2 44) (ite (and (distinct ((_ extract 1 1) C1) (_ bv0 1)) true) (_ bv1 44) (_ bv0 44)))))
 (let ((?x2650 (ite (and (distinct ((_ extract 5 5) C1) (_ bv0 1)) true) (_ bv5 44) (ite (and (distinct ((_ extract 4 4) C1) (_ bv0 1)) true) (_ bv4 44) (_ bv3 44)))))
 (let ((?x1919 (ite (and (distinct ((_ extract 8 8) C1) (_ bv0 1)) true) (_ bv8 44) (ite (and (distinct ((_ extract 7 7) C1) (_ bv0 1)) true) (_ bv7 44) (_ bv6 44)))))
 (let ((?x1575 (ite (and (distinct ((_ extract 10 9) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) C1) (_ bv0 1)) true) (_ bv10 44) (_ bv9 44)) ?x1919)))
 (let ((?x3932 (ite (and (distinct ((_ extract 10 6) C1) (_ bv0 5)) true) ?x1575 (ite (and (distinct ((_ extract 5 3) C1) (_ bv0 3)) true) ?x2650 ?x4719))))
 (let ((?x2648 (ite (and (distinct ((_ extract 13 13) C1) (_ bv0 1)) true) (_ bv13 44) (ite (and (distinct ((_ extract 12 12) C1) (_ bv0 1)) true) (_ bv12 44) (_ bv11 44)))))
 (let ((?x3330 (ite (and (distinct ((_ extract 16 16) C1) (_ bv0 1)) true) (_ bv16 44) (ite (and (distinct ((_ extract 15 15) C1) (_ bv0 1)) true) (_ bv15 44) (_ bv14 44)))))
 (let ((?x2726 (ite (and (distinct ((_ extract 19 19) C1) (_ bv0 1)) true) (_ bv19 44) (ite (and (distinct ((_ extract 18 18) C1) (_ bv0 1)) true) (_ bv18 44) (_ bv17 44)))))
 (let ((?x1296 (ite (and (distinct ((_ extract 21 20) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 21 21) C1) (_ bv0 1)) true) (_ bv21 44) (_ bv20 44)) ?x2726)))
 (let ((?x2232 (ite (and (distinct ((_ extract 21 17) C1) (_ bv0 5)) true) ?x1296 (ite (and (distinct ((_ extract 16 14) C1) (_ bv0 3)) true) ?x3330 ?x2648))))
 (let ((?x4506 (ite (and (distinct ((_ extract 24 24) C1) (_ bv0 1)) true) (_ bv24 44) (ite (and (distinct ((_ extract 23 23) C1) (_ bv0 1)) true) (_ bv23 44) (_ bv22 44)))))
 (let ((?x2149 (ite (and (distinct ((_ extract 27 27) C1) (_ bv0 1)) true) (_ bv27 44) (ite (and (distinct ((_ extract 26 26) C1) (_ bv0 1)) true) (_ bv26 44) (_ bv25 44)))))
 (let ((?x5079 (ite (and (distinct ((_ extract 30 30) C1) (_ bv0 1)) true) (_ bv30 44) (ite (and (distinct ((_ extract 29 29) C1) (_ bv0 1)) true) (_ bv29 44) (_ bv28 44)))))
 (let ((?x5635 (ite (and (distinct ((_ extract 32 31) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 32 32) C1) (_ bv0 1)) true) (_ bv32 44) (_ bv31 44)) ?x5079)))
 (let ((?x1211 (ite (and (distinct ((_ extract 32 28) C1) (_ bv0 5)) true) ?x5635 (ite (and (distinct ((_ extract 27 25) C1) (_ bv0 3)) true) ?x2149 ?x4506))))
 (let ((?x4090 (ite (and (distinct ((_ extract 35 35) C1) (_ bv0 1)) true) (_ bv35 44) (ite (and (distinct ((_ extract 34 34) C1) (_ bv0 1)) true) (_ bv34 44) (_ bv33 44)))))
 (let ((?x2375 (ite (and (distinct ((_ extract 38 38) C1) (_ bv0 1)) true) (_ bv38 44) (ite (and (distinct ((_ extract 37 37) C1) (_ bv0 1)) true) (_ bv37 44) (_ bv36 44)))))
 (let ((?x2646 (ite (and (distinct ((_ extract 41 41) C1) (_ bv0 1)) true) (_ bv41 44) (ite (and (distinct ((_ extract 40 40) C1) (_ bv0 1)) true) (_ bv40 44) (_ bv39 44)))))
 (let ((?x2607 (ite (and (distinct ((_ extract 43 42) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 43 43) C1) (_ bv0 1)) true) (_ bv43 44) (_ bv42 44)) ?x2646)))
 (let ((?x3726 (ite (and (distinct ((_ extract 43 39) C1) (_ bv0 5)) true) ?x2607 (ite (and (distinct ((_ extract 38 36) C1) (_ bv0 3)) true) ?x2375 ?x4090))))
 (let ((?x2765 (ite (and (distinct ((_ extract 43 22) C1) (_ bv0 22)) true) (ite (and (distinct ((_ extract 43 33) C1) (_ bv0 11)) true) ?x3726 ?x1211) (ite (and (distinct ((_ extract 21 11) C1) (_ bv0 11)) true) ?x2232 ?x3932))))
 (let ((?x5412 (bvsub ?x2765 ?x5472)))
 (let ((?x4829 (ite (and (distinct ((_ extract 2 2) C1) (_ bv0 1)) true) (_ bv2 32) (ite (and (distinct ((_ extract 1 1) C1) (_ bv0 1)) true) (_ bv1 32) (_ bv0 32)))))
 (let ((?x2364 (ite (and (distinct ((_ extract 5 5) C1) (_ bv0 1)) true) (_ bv5 32) (ite (and (distinct ((_ extract 4 4) C1) (_ bv0 1)) true) (_ bv4 32) (_ bv3 32)))))
 (let ((?x4723 (ite (and (distinct ((_ extract 8 8) C1) (_ bv0 1)) true) (_ bv8 32) (ite (and (distinct ((_ extract 7 7) C1) (_ bv0 1)) true) (_ bv7 32) (_ bv6 32)))))
 (let ((?x3824 (ite (and (distinct ((_ extract 10 9) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) C1) (_ bv0 1)) true) (_ bv10 32) (_ bv9 32)) ?x4723)))
 (let ((?x5197 (ite (and (distinct ((_ extract 10 6) C1) (_ bv0 5)) true) ?x3824 (ite (and (distinct ((_ extract 5 3) C1) (_ bv0 3)) true) ?x2364 ?x4829))))
 (let ((?x2992 (ite (and (distinct ((_ extract 13 13) C1) (_ bv0 1)) true) (_ bv13 32) (ite (and (distinct ((_ extract 12 12) C1) (_ bv0 1)) true) (_ bv12 32) (_ bv11 32)))))
 (let ((?x4329 (ite (and (distinct ((_ extract 16 16) C1) (_ bv0 1)) true) (_ bv16 32) (ite (and (distinct ((_ extract 15 15) C1) (_ bv0 1)) true) (_ bv15 32) (_ bv14 32)))))
 (let ((?x5651 (ite (and (distinct ((_ extract 19 19) C1) (_ bv0 1)) true) (_ bv19 32) (ite (and (distinct ((_ extract 18 18) C1) (_ bv0 1)) true) (_ bv18 32) (_ bv17 32)))))
 (let ((?x5086 (ite (and (distinct ((_ extract 21 20) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 21 21) C1) (_ bv0 1)) true) (_ bv21 32) (_ bv20 32)) ?x5651)))
 (let ((?x2772 (ite (and (distinct ((_ extract 21 17) C1) (_ bv0 5)) true) ?x5086 (ite (and (distinct ((_ extract 16 14) C1) (_ bv0 3)) true) ?x4329 ?x2992))))
 (let ((?x3904 (ite (and (distinct ((_ extract 24 24) C1) (_ bv0 1)) true) (_ bv24 32) (ite (and (distinct ((_ extract 23 23) C1) (_ bv0 1)) true) (_ bv23 32) (_ bv22 32)))))
 (let ((?x2516 (ite (and (distinct ((_ extract 27 27) C1) (_ bv0 1)) true) (_ bv27 32) (ite (and (distinct ((_ extract 26 26) C1) (_ bv0 1)) true) (_ bv26 32) (_ bv25 32)))))
 (let ((?x1973 (ite (and (distinct ((_ extract 30 30) C1) (_ bv0 1)) true) (_ bv30 32) (ite (and (distinct ((_ extract 29 29) C1) (_ bv0 1)) true) (_ bv29 32) (_ bv28 32)))))
 (let ((?x3403 (ite (and (distinct ((_ extract 32 31) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 32 32) C1) (_ bv0 1)) true) (_ bv32 32) (_ bv31 32)) ?x1973)))
 (let ((?x3597 (ite (and (distinct ((_ extract 32 28) C1) (_ bv0 5)) true) ?x3403 (ite (and (distinct ((_ extract 27 25) C1) (_ bv0 3)) true) ?x2516 ?x3904))))
 (let ((?x1127 (ite (and (distinct ((_ extract 35 35) C1) (_ bv0 1)) true) (_ bv35 32) (ite (and (distinct ((_ extract 34 34) C1) (_ bv0 1)) true) (_ bv34 32) (_ bv33 32)))))
 (let ((?x1452 (ite (and (distinct ((_ extract 38 38) C1) (_ bv0 1)) true) (_ bv38 32) (ite (and (distinct ((_ extract 37 37) C1) (_ bv0 1)) true) (_ bv37 32) (_ bv36 32)))))
 (let ((?x1563 (ite (and (distinct ((_ extract 41 41) C1) (_ bv0 1)) true) (_ bv41 32) (ite (and (distinct ((_ extract 40 40) C1) (_ bv0 1)) true) (_ bv40 32) (_ bv39 32)))))
 (let ((?x1550 (ite (and (distinct ((_ extract 43 42) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 43 43) C1) (_ bv0 1)) true) (_ bv43 32) (_ bv42 32)) ?x1563)))
 (let ((?x1747 (ite (and (distinct ((_ extract 43 39) C1) (_ bv0 5)) true) ?x1550 (ite (and (distinct ((_ extract 38 36) C1) (_ bv0 3)) true) ?x1452 ?x1127))))
 (let ((?x3762 (ite (and (distinct ((_ extract 43 22) C1) (_ bv0 22)) true) (ite (and (distinct ((_ extract 43 33) C1) (_ bv0 11)) true) ?x1747 ?x3597) (ite (and (distinct ((_ extract 21 11) C1) (_ bv0 11)) true) ?x2772 ?x5197))))
 (let ((?x5217 (ite (and (distinct ((_ extract 2 2) C2) (_ bv0 1)) true) (_ bv2 32) (ite (and (distinct ((_ extract 1 1) C2) (_ bv0 1)) true) (_ bv1 32) (_ bv0 32)))))
 (let ((?x1130 (ite (and (distinct ((_ extract 5 5) C2) (_ bv0 1)) true) (_ bv5 32) (ite (and (distinct ((_ extract 4 4) C2) (_ bv0 1)) true) (_ bv4 32) (_ bv3 32)))))
 (let ((?x3086 (ite (and (distinct ((_ extract 8 8) C2) (_ bv0 1)) true) (_ bv8 32) (ite (and (distinct ((_ extract 7 7) C2) (_ bv0 1)) true) (_ bv7 32) (_ bv6 32)))))
 (let ((?x4659 (ite (and (distinct ((_ extract 10 9) C2) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) C2) (_ bv0 1)) true) (_ bv10 32) (_ bv9 32)) ?x3086)))
 (let ((?x1301 (ite (and (distinct ((_ extract 10 6) C2) (_ bv0 5)) true) ?x4659 (ite (and (distinct ((_ extract 5 3) C2) (_ bv0 3)) true) ?x1130 ?x5217))))
 (and (and (and (distinct C1 (_ bv0 44)) true) (= (bvand C1 (bvsub C1 (_ bv1 44))) (_ bv0 44))) (and (and (distinct C2 (_ bv0 11)) true) (= (bvand C2 (bvsub C2 (_ bv1 11))) (_ bv0 11))) (bvslt ?x1301 ?x3762) (not (bvult ?x5412 (_ bv44 44))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
