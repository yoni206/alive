(set-info :status unknown)
(declare-fun %Y () (_ BitVec 11))
(declare-fun C2 () (_ BitVec 11))
(declare-fun C1 () (_ BitVec 33))
(declare-fun %X () (_ BitVec 33))
(assert
 (let ((?x1934 (ite (and (distinct ((_ extract 2 2) C2) (_ bv0 1)) true) (_ bv2 33) (ite (and (distinct ((_ extract 1 1) C2) (_ bv0 1)) true) (_ bv1 33) (_ bv0 33)))))
 (let ((?x5143 (ite (and (distinct ((_ extract 5 5) C2) (_ bv0 1)) true) (_ bv5 33) (ite (and (distinct ((_ extract 4 4) C2) (_ bv0 1)) true) (_ bv4 33) (_ bv3 33)))))
 (let ((?x3547 (ite (and (distinct ((_ extract 8 8) C2) (_ bv0 1)) true) (_ bv8 33) (ite (and (distinct ((_ extract 7 7) C2) (_ bv0 1)) true) (_ bv7 33) (_ bv6 33)))))
 (let ((?x1231 (ite (and (distinct ((_ extract 10 9) C2) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) C2) (_ bv0 1)) true) (_ bv10 33) (_ bv9 33)) ?x3547)))
 (let ((?x3158 (ite (and (distinct ((_ extract 10 6) C2) (_ bv0 5)) true) ?x1231 (ite (and (distinct ((_ extract 5 3) C2) (_ bv0 3)) true) ?x5143 ?x1934))))
 (let ((?x1447 (ite (and (distinct ((_ extract 2 2) C1) (_ bv0 1)) true) (_ bv2 33) (ite (and (distinct ((_ extract 1 1) C1) (_ bv0 1)) true) (_ bv1 33) (_ bv0 33)))))
 (let ((?x1543 (ite (and (distinct ((_ extract 4 3) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 4 4) C1) (_ bv0 1)) true) (_ bv4 33) (_ bv3 33)) ?x1447)))
 (let ((?x1366 (ite (and (distinct ((_ extract 8 7) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 8 8) C1) (_ bv0 1)) true) (_ bv8 33) (_ bv7 33)) (ite (and (distinct ((_ extract 6 6) C1) (_ bv0 1)) true) (_ bv6 33) (_ bv5 33)))))
 (let ((?x5344 (ite (and (distinct ((_ extract 12 11) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 12 12) C1) (_ bv0 1)) true) (_ bv12 33) (_ bv11 33)) (ite (and (distinct ((_ extract 10 10) C1) (_ bv0 1)) true) (_ bv10 33) (_ bv9 33)))))
 (let ((?x1202 (ite (and (distinct ((_ extract 16 15) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 16 16) C1) (_ bv0 1)) true) (_ bv16 33) (_ bv15 33)) (ite (and (distinct ((_ extract 14 14) C1) (_ bv0 1)) true) (_ bv14 33) (_ bv13 33)))))
 (let ((?x1482 (ite (and (distinct ((_ extract 16 9) C1) (_ bv0 8)) true) (ite (and (distinct ((_ extract 16 13) C1) (_ bv0 4)) true) ?x1202 ?x5344) (ite (and (distinct ((_ extract 8 5) C1) (_ bv0 4)) true) ?x1366 ?x1543))))
 (let ((?x1749 (ite (and (distinct ((_ extract 20 19) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 20 20) C1) (_ bv0 1)) true) (_ bv20 33) (_ bv19 33)) (ite (and (distinct ((_ extract 18 18) C1) (_ bv0 1)) true) (_ bv18 33) (_ bv17 33)))))
 (let ((?x4916 (ite (and (distinct ((_ extract 24 23) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 24 24) C1) (_ bv0 1)) true) (_ bv24 33) (_ bv23 33)) (ite (and (distinct ((_ extract 22 22) C1) (_ bv0 1)) true) (_ bv22 33) (_ bv21 33)))))
 (let ((?x4814 (ite (and (distinct ((_ extract 28 27) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 28 28) C1) (_ bv0 1)) true) (_ bv28 33) (_ bv27 33)) (ite (and (distinct ((_ extract 26 26) C1) (_ bv0 1)) true) (_ bv26 33) (_ bv25 33)))))
 (let ((?x5144 (ite (and (distinct ((_ extract 32 31) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 32 32) C1) (_ bv0 1)) true) (_ bv32 33) (_ bv31 33)) (ite (and (distinct ((_ extract 30 30) C1) (_ bv0 1)) true) (_ bv30 33) (_ bv29 33)))))
 (let ((?x4668 (ite (and (distinct ((_ extract 32 25) C1) (_ bv0 8)) true) (ite (and (distinct ((_ extract 32 29) C1) (_ bv0 4)) true) ?x5144 ?x4814) (ite (and (distinct ((_ extract 24 21) C1) (_ bv0 4)) true) ?x4916 ?x1749))))
 (let ((?x6791 (bvsub (ite (and (distinct ((_ extract 32 17) C1) (_ bv0 16)) true) ?x4668 ?x1482) ?x3158)))
 (let ((?x1394 (bvand %X C1)))
 (let ((?x1996 (bvor %Y C2)))
 (let (($x6312 (and (distinct (ite (= (ite (and (distinct ?x1394 (_ bv0 33)) true) (_ bv1 1) (_ bv0 1)) (_ bv1 1)) ?x1996 %Y) (bvor ((_ extract 10 0) (bvlshr ?x1394 ?x6791)) %Y)) true)))
 (let ((?x5938 (ite (and (distinct ((_ extract 2 2) C1) (_ bv0 1)) true) (_ bv2 32) (ite (and (distinct ((_ extract 1 1) C1) (_ bv0 1)) true) (_ bv1 32) (_ bv0 32)))))
 (let ((?x3942 (ite (and (distinct ((_ extract 4 3) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 4 4) C1) (_ bv0 1)) true) (_ bv4 32) (_ bv3 32)) ?x5938)))
 (let ((?x5733 (ite (and (distinct ((_ extract 8 7) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 8 8) C1) (_ bv0 1)) true) (_ bv8 32) (_ bv7 32)) (ite (and (distinct ((_ extract 6 6) C1) (_ bv0 1)) true) (_ bv6 32) (_ bv5 32)))))
 (let ((?x5124 (ite (and (distinct ((_ extract 12 11) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 12 12) C1) (_ bv0 1)) true) (_ bv12 32) (_ bv11 32)) (ite (and (distinct ((_ extract 10 10) C1) (_ bv0 1)) true) (_ bv10 32) (_ bv9 32)))))
 (let ((?x3799 (ite (and (distinct ((_ extract 16 15) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 16 16) C1) (_ bv0 1)) true) (_ bv16 32) (_ bv15 32)) (ite (and (distinct ((_ extract 14 14) C1) (_ bv0 1)) true) (_ bv14 32) (_ bv13 32)))))
 (let ((?x5692 (ite (and (distinct ((_ extract 16 9) C1) (_ bv0 8)) true) (ite (and (distinct ((_ extract 16 13) C1) (_ bv0 4)) true) ?x3799 ?x5124) (ite (and (distinct ((_ extract 8 5) C1) (_ bv0 4)) true) ?x5733 ?x3942))))
 (let ((?x3421 (ite (and (distinct ((_ extract 20 19) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 20 20) C1) (_ bv0 1)) true) (_ bv20 32) (_ bv19 32)) (ite (and (distinct ((_ extract 18 18) C1) (_ bv0 1)) true) (_ bv18 32) (_ bv17 32)))))
 (let ((?x2456 (ite (and (distinct ((_ extract 24 23) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 24 24) C1) (_ bv0 1)) true) (_ bv24 32) (_ bv23 32)) (ite (and (distinct ((_ extract 22 22) C1) (_ bv0 1)) true) (_ bv22 32) (_ bv21 32)))))
 (let ((?x2439 (ite (and (distinct ((_ extract 28 27) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 28 28) C1) (_ bv0 1)) true) (_ bv28 32) (_ bv27 32)) (ite (and (distinct ((_ extract 26 26) C1) (_ bv0 1)) true) (_ bv26 32) (_ bv25 32)))))
 (let ((?x2705 (ite (and (distinct ((_ extract 32 31) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 32 32) C1) (_ bv0 1)) true) (_ bv32 32) (_ bv31 32)) (ite (and (distinct ((_ extract 30 30) C1) (_ bv0 1)) true) (_ bv30 32) (_ bv29 32)))))
 (let ((?x3246 (ite (and (distinct ((_ extract 32 25) C1) (_ bv0 8)) true) (ite (and (distinct ((_ extract 32 29) C1) (_ bv0 4)) true) ?x2705 ?x2439) (ite (and (distinct ((_ extract 24 21) C1) (_ bv0 4)) true) ?x2456 ?x3421))))
 (let ((?x1905 (ite (and (distinct ((_ extract 2 2) C2) (_ bv0 1)) true) (_ bv2 32) (ite (and (distinct ((_ extract 1 1) C2) (_ bv0 1)) true) (_ bv1 32) (_ bv0 32)))))
 (let ((?x1649 (ite (and (distinct ((_ extract 5 5) C2) (_ bv0 1)) true) (_ bv5 32) (ite (and (distinct ((_ extract 4 4) C2) (_ bv0 1)) true) (_ bv4 32) (_ bv3 32)))))
 (let ((?x4231 (ite (and (distinct ((_ extract 8 8) C2) (_ bv0 1)) true) (_ bv8 32) (ite (and (distinct ((_ extract 7 7) C2) (_ bv0 1)) true) (_ bv7 32) (_ bv6 32)))))
 (let ((?x2733 (ite (and (distinct ((_ extract 10 9) C2) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) C2) (_ bv0 1)) true) (_ bv10 32) (_ bv9 32)) ?x4231)))
 (let ((?x1465 (ite (and (distinct ((_ extract 10 6) C2) (_ bv0 5)) true) ?x2733 (ite (and (distinct ((_ extract 5 3) C2) (_ bv0 3)) true) ?x1649 ?x1905))))
 (and (and (and (distinct C1 (_ bv0 33)) true) (= (bvand C1 (bvsub C1 (_ bv1 33))) (_ bv0 33))) (and (and (distinct C2 (_ bv0 11)) true) (= (bvand C2 (bvsub C2 (_ bv1 11))) (_ bv0 11))) (bvslt ?x1465 (ite (and (distinct ((_ extract 32 17) C1) (_ bv0 16)) true) ?x3246 ?x5692)) $x6312))))))))))))))))))))))))))))))))))))))
(check-sat)
