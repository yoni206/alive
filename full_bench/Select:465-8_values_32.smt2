(set-info :status unknown)
(declare-fun %Y () (_ BitVec 11))
(declare-fun C2 () (_ BitVec 11))
(declare-fun C1 () (_ BitVec 34))
(declare-fun %X () (_ BitVec 34))
(assert
 (let ((?x19420 (ite (and (distinct ((_ extract 2 2) C2) (_ bv0 1)) true) (_ bv2 34) (ite (and (distinct ((_ extract 1 1) C2) (_ bv0 1)) true) (_ bv1 34) (_ bv0 34)))))
 (let ((?x5338 (ite (and (distinct ((_ extract 5 5) C2) (_ bv0 1)) true) (_ bv5 34) (ite (and (distinct ((_ extract 4 4) C2) (_ bv0 1)) true) (_ bv4 34) (_ bv3 34)))))
 (let ((?x12834 (ite (and (distinct ((_ extract 8 8) C2) (_ bv0 1)) true) (_ bv8 34) (ite (and (distinct ((_ extract 7 7) C2) (_ bv0 1)) true) (_ bv7 34) (_ bv6 34)))))
 (let ((?x14781 (ite (and (distinct ((_ extract 10 9) C2) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) C2) (_ bv0 1)) true) (_ bv10 34) (_ bv9 34)) ?x12834)))
 (let ((?x23197 (ite (and (distinct ((_ extract 10 6) C2) (_ bv0 5)) true) ?x14781 (ite (and (distinct ((_ extract 5 3) C2) (_ bv0 3)) true) ?x5338 ?x19420))))
 (let ((?x20872 (ite (and (distinct ((_ extract 2 2) C1) (_ bv0 1)) true) (_ bv2 34) (ite (and (distinct ((_ extract 1 1) C1) (_ bv0 1)) true) (_ bv1 34) (_ bv0 34)))))
 (let ((?x2153 (ite (and (distinct ((_ extract 4 3) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 4 4) C1) (_ bv0 1)) true) (_ bv4 34) (_ bv3 34)) ?x20872)))
 (let ((?x12032 (ite (and (distinct ((_ extract 8 7) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 8 8) C1) (_ bv0 1)) true) (_ bv8 34) (_ bv7 34)) (ite (and (distinct ((_ extract 6 6) C1) (_ bv0 1)) true) (_ bv6 34) (_ bv5 34)))))
 (let ((?x19622 (ite (and (distinct ((_ extract 12 11) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 12 12) C1) (_ bv0 1)) true) (_ bv12 34) (_ bv11 34)) (ite (and (distinct ((_ extract 10 10) C1) (_ bv0 1)) true) (_ bv10 34) (_ bv9 34)))))
 (let ((?x18428 (ite (and (distinct ((_ extract 16 15) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 16 16) C1) (_ bv0 1)) true) (_ bv16 34) (_ bv15 34)) (ite (and (distinct ((_ extract 14 14) C1) (_ bv0 1)) true) (_ bv14 34) (_ bv13 34)))))
 (let ((?x21031 (ite (and (distinct ((_ extract 16 9) C1) (_ bv0 8)) true) (ite (and (distinct ((_ extract 16 13) C1) (_ bv0 4)) true) ?x18428 ?x19622) (ite (and (distinct ((_ extract 8 5) C1) (_ bv0 4)) true) ?x12032 ?x2153))))
 (let ((?x1899 (ite (and (distinct ((_ extract 19 19) C1) (_ bv0 1)) true) (_ bv19 34) (ite (and (distinct ((_ extract 18 18) C1) (_ bv0 1)) true) (_ bv18 34) (_ bv17 34)))))
 (let ((?x7080 (ite (and (distinct ((_ extract 21 20) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 21 21) C1) (_ bv0 1)) true) (_ bv21 34) (_ bv20 34)) ?x1899)))
 (let ((?x13964 (ite (and (distinct ((_ extract 25 24) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 25 25) C1) (_ bv0 1)) true) (_ bv25 34) (_ bv24 34)) (ite (and (distinct ((_ extract 23 23) C1) (_ bv0 1)) true) (_ bv23 34) (_ bv22 34)))))
 (let ((?x10417 (ite (and (distinct ((_ extract 29 28) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 29 29) C1) (_ bv0 1)) true) (_ bv29 34) (_ bv28 34)) (ite (and (distinct ((_ extract 27 27) C1) (_ bv0 1)) true) (_ bv27 34) (_ bv26 34)))))
 (let ((?x18152 (ite (and (distinct ((_ extract 33 32) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 33 33) C1) (_ bv0 1)) true) (_ bv33 34) (_ bv32 34)) (ite (and (distinct ((_ extract 31 31) C1) (_ bv0 1)) true) (_ bv31 34) (_ bv30 34)))))
 (let ((?x7841 (ite (and (distinct ((_ extract 33 26) C1) (_ bv0 8)) true) (ite (and (distinct ((_ extract 33 30) C1) (_ bv0 4)) true) ?x18152 ?x10417) (ite (and (distinct ((_ extract 25 22) C1) (_ bv0 4)) true) ?x13964 ?x7080))))
 (let ((?x13289 (bvsub (ite (and (distinct ((_ extract 33 17) C1) (_ bv0 17)) true) ?x7841 ?x21031) ?x23197)))
 (let ((?x16750 (bvand %X C1)))
 (let ((?x16980 (bvor %Y C2)))
 (let (($x21452 (and (distinct (ite (= (ite (and (distinct ?x16750 (_ bv0 34)) true) (_ bv1 1) (_ bv0 1)) (_ bv1 1)) ?x16980 %Y) (bvor ((_ extract 10 0) (bvlshr ?x16750 ?x13289)) %Y)) true)))
 (let ((?x19679 (ite (and (distinct ((_ extract 2 2) C1) (_ bv0 1)) true) (_ bv2 32) (ite (and (distinct ((_ extract 1 1) C1) (_ bv0 1)) true) (_ bv1 32) (_ bv0 32)))))
 (let ((?x3358 (ite (and (distinct ((_ extract 4 3) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 4 4) C1) (_ bv0 1)) true) (_ bv4 32) (_ bv3 32)) ?x19679)))
 (let ((?x17717 (ite (and (distinct ((_ extract 8 7) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 8 8) C1) (_ bv0 1)) true) (_ bv8 32) (_ bv7 32)) (ite (and (distinct ((_ extract 6 6) C1) (_ bv0 1)) true) (_ bv6 32) (_ bv5 32)))))
 (let ((?x15702 (ite (and (distinct ((_ extract 12 11) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 12 12) C1) (_ bv0 1)) true) (_ bv12 32) (_ bv11 32)) (ite (and (distinct ((_ extract 10 10) C1) (_ bv0 1)) true) (_ bv10 32) (_ bv9 32)))))
 (let ((?x12902 (ite (and (distinct ((_ extract 16 15) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 16 16) C1) (_ bv0 1)) true) (_ bv16 32) (_ bv15 32)) (ite (and (distinct ((_ extract 14 14) C1) (_ bv0 1)) true) (_ bv14 32) (_ bv13 32)))))
 (let ((?x5840 (ite (and (distinct ((_ extract 16 9) C1) (_ bv0 8)) true) (ite (and (distinct ((_ extract 16 13) C1) (_ bv0 4)) true) ?x12902 ?x15702) (ite (and (distinct ((_ extract 8 5) C1) (_ bv0 4)) true) ?x17717 ?x3358))))
 (let ((?x19750 (ite (and (distinct ((_ extract 19 19) C1) (_ bv0 1)) true) (_ bv19 32) (ite (and (distinct ((_ extract 18 18) C1) (_ bv0 1)) true) (_ bv18 32) (_ bv17 32)))))
 (let ((?x8546 (ite (and (distinct ((_ extract 21 20) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 21 21) C1) (_ bv0 1)) true) (_ bv21 32) (_ bv20 32)) ?x19750)))
 (let ((?x5847 (ite (and (distinct ((_ extract 25 24) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 25 25) C1) (_ bv0 1)) true) (_ bv25 32) (_ bv24 32)) (ite (and (distinct ((_ extract 23 23) C1) (_ bv0 1)) true) (_ bv23 32) (_ bv22 32)))))
 (let ((?x1696 (ite (and (distinct ((_ extract 29 28) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 29 29) C1) (_ bv0 1)) true) (_ bv29 32) (_ bv28 32)) (ite (and (distinct ((_ extract 27 27) C1) (_ bv0 1)) true) (_ bv27 32) (_ bv26 32)))))
 (let ((?x19497 (ite (and (distinct ((_ extract 33 32) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 33 33) C1) (_ bv0 1)) true) (_ bv33 32) (_ bv32 32)) (ite (and (distinct ((_ extract 31 31) C1) (_ bv0 1)) true) (_ bv31 32) (_ bv30 32)))))
 (let ((?x7405 (ite (and (distinct ((_ extract 33 26) C1) (_ bv0 8)) true) (ite (and (distinct ((_ extract 33 30) C1) (_ bv0 4)) true) ?x19497 ?x1696) (ite (and (distinct ((_ extract 25 22) C1) (_ bv0 4)) true) ?x5847 ?x8546))))
 (let ((?x11654 (ite (and (distinct ((_ extract 2 2) C2) (_ bv0 1)) true) (_ bv2 32) (ite (and (distinct ((_ extract 1 1) C2) (_ bv0 1)) true) (_ bv1 32) (_ bv0 32)))))
 (let ((?x15881 (ite (and (distinct ((_ extract 5 5) C2) (_ bv0 1)) true) (_ bv5 32) (ite (and (distinct ((_ extract 4 4) C2) (_ bv0 1)) true) (_ bv4 32) (_ bv3 32)))))
 (let ((?x11675 (ite (and (distinct ((_ extract 8 8) C2) (_ bv0 1)) true) (_ bv8 32) (ite (and (distinct ((_ extract 7 7) C2) (_ bv0 1)) true) (_ bv7 32) (_ bv6 32)))))
 (let ((?x7114 (ite (and (distinct ((_ extract 10 9) C2) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) C2) (_ bv0 1)) true) (_ bv10 32) (_ bv9 32)) ?x11675)))
 (let ((?x9159 (ite (and (distinct ((_ extract 10 6) C2) (_ bv0 5)) true) ?x7114 (ite (and (distinct ((_ extract 5 3) C2) (_ bv0 3)) true) ?x15881 ?x11654))))
 (and (and (and (distinct C1 (_ bv0 34)) true) (= (bvand C1 (bvsub C1 (_ bv1 34))) (_ bv0 34))) (and (and (distinct C2 (_ bv0 11)) true) (= (bvand C2 (bvsub C2 (_ bv1 11))) (_ bv0 11))) (bvslt ?x9159 (ite (and (distinct ((_ extract 33 17) C1) (_ bv0 17)) true) ?x7405 ?x5840)) $x21452))))))))))))))))))))))))))))))))))))))))
(check-sat)
