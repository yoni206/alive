(set-info :status unknown)
(declare-fun mem0 () (_ BitVec 8))
(declare-fun %p2 () (_ BitVec 64))
(declare-fun idx () (_ BitVec 64))
(declare-fun %p1 () (_ BitVec 64))
(declare-fun |ana_equivalentAddressValues(%p1, %p2)| () (_ BitVec 1))
(assert
 (let ((?x15736 (concat (concat (concat mem0 mem0) mem0) ((_ extract 1 0) mem0))))
 (let (($x14986 (or true true)))
 (let (($x5923 (and (distinct %p2 (_ bv0 64)) true)))
 (let (($x14413 (and (distinct %p1 (_ bv0 64)) true)))
 (let ((?x15398 (ite (and $x14413 $x14986 $x14413 $x14986 $x14413 $x14986 $x5923 $x14986 (= idx %p2)) (concat ((_ extract 7 2) mem0) ((_ extract 1 0) ?x15736)) mem0)))
 (let (($x18812 (and $x14413 $x14986 $x14413 $x14986 $x14413 $x14986 $x5923 $x14986 (= idx (bvadd (bvadd %p2 (_ bv1 64)) (_ bv0 64))))))
 (let (($x10689 (and $x14413 $x14986 $x14413 $x14986 $x14413 $x14986 $x5923 $x14986 (= idx (bvadd (bvadd %p2 (_ bv1 64)) (_ bv1 64))))))
 (let (($x18224 (and $x14413 $x14986 $x14413 $x14986 $x14413 $x14986 $x5923 $x14986 (= idx (bvadd (bvadd %p2 (_ bv1 64)) (_ bv2 64))))))
 (let ((?x10401 (ite $x18224 ((_ extract 25 18) ?x15736) (ite $x10689 ((_ extract 17 10) ?x15736) (ite $x18812 ((_ extract 9 2) ?x15736) ?x15398)))))
 (let (($x3284 (= |ana_equivalentAddressValues(%p1, %p2)| (_ bv1 1))))
 (and (=> $x3284 (= %p1 %p2)) $x3284 (and (distinct ?x10401 mem0) true)))))))))))))
(check-sat)
