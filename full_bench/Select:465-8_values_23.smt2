(set-info :status unknown)
(declare-fun %Y () (_ BitVec 11))
(declare-fun C2 () (_ BitVec 11))
(declare-fun C1 () (_ BitVec 24))
(declare-fun %X () (_ BitVec 24))
(assert
 (let ((?x5341 (ite (and (distinct ((_ extract 2 2) C2) (_ bv0 1)) true) (_ bv2 24) (ite (and (distinct ((_ extract 1 1) C2) (_ bv0 1)) true) (_ bv1 24) (_ bv0 24)))))
 (let ((?x1448 (ite (and (distinct ((_ extract 5 5) C2) (_ bv0 1)) true) (_ bv5 24) (ite (and (distinct ((_ extract 4 4) C2) (_ bv0 1)) true) (_ bv4 24) (_ bv3 24)))))
 (let ((?x4346 (ite (and (distinct ((_ extract 8 8) C2) (_ bv0 1)) true) (_ bv8 24) (ite (and (distinct ((_ extract 7 7) C2) (_ bv0 1)) true) (_ bv7 24) (_ bv6 24)))))
 (let ((?x6095 (ite (and (distinct ((_ extract 10 9) C2) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) C2) (_ bv0 1)) true) (_ bv10 24) (_ bv9 24)) ?x4346)))
 (let ((?x6459 (ite (and (distinct ((_ extract 10 6) C2) (_ bv0 5)) true) ?x6095 (ite (and (distinct ((_ extract 5 3) C2) (_ bv0 3)) true) ?x1448 ?x5341))))
 (let ((?x4527 (ite (and (distinct ((_ extract 2 2) C1) (_ bv0 1)) true) (_ bv2 24) (ite (and (distinct ((_ extract 1 1) C1) (_ bv0 1)) true) (_ bv1 24) (_ bv0 24)))))
 (let ((?x1797 (ite (and (distinct ((_ extract 5 5) C1) (_ bv0 1)) true) (_ bv5 24) (ite (and (distinct ((_ extract 4 4) C1) (_ bv0 1)) true) (_ bv4 24) (_ bv3 24)))))
 (let ((?x5147 (ite (and (distinct ((_ extract 8 8) C1) (_ bv0 1)) true) (_ bv8 24) (ite (and (distinct ((_ extract 7 7) C1) (_ bv0 1)) true) (_ bv7 24) (_ bv6 24)))))
 (let ((?x5968 (ite (and (distinct ((_ extract 11 11) C1) (_ bv0 1)) true) (_ bv11 24) (ite (and (distinct ((_ extract 10 10) C1) (_ bv0 1)) true) (_ bv10 24) (_ bv9 24)))))
 (let ((?x3996 (ite (and (distinct ((_ extract 11 6) C1) (_ bv0 6)) true) (ite (and (distinct ((_ extract 11 9) C1) (_ bv0 3)) true) ?x5968 ?x5147) (ite (and (distinct ((_ extract 5 3) C1) (_ bv0 3)) true) ?x1797 ?x4527))))
 (let ((?x1907 (ite (and (distinct ((_ extract 14 14) C1) (_ bv0 1)) true) (_ bv14 24) (ite (and (distinct ((_ extract 13 13) C1) (_ bv0 1)) true) (_ bv13 24) (_ bv12 24)))))
 (let ((?x1518 (ite (and (distinct ((_ extract 17 17) C1) (_ bv0 1)) true) (_ bv17 24) (ite (and (distinct ((_ extract 16 16) C1) (_ bv0 1)) true) (_ bv16 24) (_ bv15 24)))))
 (let ((?x2690 (ite (and (distinct ((_ extract 20 20) C1) (_ bv0 1)) true) (_ bv20 24) (ite (and (distinct ((_ extract 19 19) C1) (_ bv0 1)) true) (_ bv19 24) (_ bv18 24)))))
 (let ((?x5690 (ite (and (distinct ((_ extract 23 23) C1) (_ bv0 1)) true) (_ bv23 24) (ite (and (distinct ((_ extract 22 22) C1) (_ bv0 1)) true) (_ bv22 24) (_ bv21 24)))))
 (let ((?x6723 (ite (and (distinct ((_ extract 23 18) C1) (_ bv0 6)) true) (ite (and (distinct ((_ extract 23 21) C1) (_ bv0 3)) true) ?x5690 ?x2690) (ite (and (distinct ((_ extract 17 15) C1) (_ bv0 3)) true) ?x1518 ?x1907))))
 (let ((?x5036 (bvsub (ite (and (distinct ((_ extract 23 12) C1) (_ bv0 12)) true) ?x6723 ?x3996) ?x6459)))
 (let ((?x6034 (bvand %X C1)))
 (let ((?x6466 (bvor %Y C2)))
 (let (($x4688 (and (distinct (ite (= (ite (and (distinct ?x6034 (_ bv0 24)) true) (_ bv1 1) (_ bv0 1)) (_ bv1 1)) ?x6466 %Y) (bvor ((_ extract 10 0) (bvlshr ?x6034 ?x5036)) %Y)) true)))
 (let ((?x3860 (ite (and (distinct ((_ extract 2 2) C1) (_ bv0 1)) true) (_ bv2 32) (ite (and (distinct ((_ extract 1 1) C1) (_ bv0 1)) true) (_ bv1 32) (_ bv0 32)))))
 (let ((?x4056 (ite (and (distinct ((_ extract 5 5) C1) (_ bv0 1)) true) (_ bv5 32) (ite (and (distinct ((_ extract 4 4) C1) (_ bv0 1)) true) (_ bv4 32) (_ bv3 32)))))
 (let ((?x2146 (ite (and (distinct ((_ extract 8 8) C1) (_ bv0 1)) true) (_ bv8 32) (ite (and (distinct ((_ extract 7 7) C1) (_ bv0 1)) true) (_ bv7 32) (_ bv6 32)))))
 (let ((?x3730 (ite (and (distinct ((_ extract 11 11) C1) (_ bv0 1)) true) (_ bv11 32) (ite (and (distinct ((_ extract 10 10) C1) (_ bv0 1)) true) (_ bv10 32) (_ bv9 32)))))
 (let ((?x4859 (ite (and (distinct ((_ extract 11 6) C1) (_ bv0 6)) true) (ite (and (distinct ((_ extract 11 9) C1) (_ bv0 3)) true) ?x3730 ?x2146) (ite (and (distinct ((_ extract 5 3) C1) (_ bv0 3)) true) ?x4056 ?x3860))))
 (let ((?x2812 (ite (and (distinct ((_ extract 14 14) C1) (_ bv0 1)) true) (_ bv14 32) (ite (and (distinct ((_ extract 13 13) C1) (_ bv0 1)) true) (_ bv13 32) (_ bv12 32)))))
 (let ((?x2439 (ite (and (distinct ((_ extract 17 17) C1) (_ bv0 1)) true) (_ bv17 32) (ite (and (distinct ((_ extract 16 16) C1) (_ bv0 1)) true) (_ bv16 32) (_ bv15 32)))))
 (let ((?x2252 (ite (and (distinct ((_ extract 20 20) C1) (_ bv0 1)) true) (_ bv20 32) (ite (and (distinct ((_ extract 19 19) C1) (_ bv0 1)) true) (_ bv19 32) (_ bv18 32)))))
 (let ((?x2876 (ite (and (distinct ((_ extract 23 23) C1) (_ bv0 1)) true) (_ bv23 32) (ite (and (distinct ((_ extract 22 22) C1) (_ bv0 1)) true) (_ bv22 32) (_ bv21 32)))))
 (let ((?x3485 (ite (and (distinct ((_ extract 23 18) C1) (_ bv0 6)) true) (ite (and (distinct ((_ extract 23 21) C1) (_ bv0 3)) true) ?x2876 ?x2252) (ite (and (distinct ((_ extract 17 15) C1) (_ bv0 3)) true) ?x2439 ?x2812))))
 (let ((?x5157 (ite (and (distinct ((_ extract 2 2) C2) (_ bv0 1)) true) (_ bv2 32) (ite (and (distinct ((_ extract 1 1) C2) (_ bv0 1)) true) (_ bv1 32) (_ bv0 32)))))
 (let ((?x6325 (ite (and (distinct ((_ extract 5 5) C2) (_ bv0 1)) true) (_ bv5 32) (ite (and (distinct ((_ extract 4 4) C2) (_ bv0 1)) true) (_ bv4 32) (_ bv3 32)))))
 (let ((?x1188 (ite (and (distinct ((_ extract 8 8) C2) (_ bv0 1)) true) (_ bv8 32) (ite (and (distinct ((_ extract 7 7) C2) (_ bv0 1)) true) (_ bv7 32) (_ bv6 32)))))
 (let ((?x2761 (ite (and (distinct ((_ extract 10 9) C2) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) C2) (_ bv0 1)) true) (_ bv10 32) (_ bv9 32)) ?x1188)))
 (let ((?x6727 (ite (and (distinct ((_ extract 10 6) C2) (_ bv0 5)) true) ?x2761 (ite (and (distinct ((_ extract 5 3) C2) (_ bv0 3)) true) ?x6325 ?x5157))))
 (and (and (and (distinct C1 (_ bv0 24)) true) (= (bvand C1 (bvsub C1 (_ bv1 24))) (_ bv0 24))) (and (and (distinct C2 (_ bv0 11)) true) (= (bvand C2 (bvsub C2 (_ bv1 11))) (_ bv0 11))) (bvslt ?x6727 (ite (and (distinct ((_ extract 23 12) C1) (_ bv0 12)) true) ?x3485 ?x4859)) $x4688))))))))))))))))))))))))))))))))))))
(check-sat)
