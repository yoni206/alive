(set-info :status unknown)
(declare-fun C () (_ BitVec 10))
(declare-fun %B () (_ BitVec 10))
(declare-fun %A () (_ BitVec 10))
(declare-fun |ana_MaskedValueIsZero(%A, lshr(-1, countLeadingZeros(C)))| () (_ BitVec 1))
(assert
 (let (($x14672 (and (distinct (bvand (bvsub %A %B) C) (bvand (bvsub (_ bv0 10) %B) C)) true)))
 (let (($x17394 (= |ana_MaskedValueIsZero(%A, lshr(-1, countLeadingZeros(C)))| (_ bv1 1))))
 (let ((?x18761 (ite (= ((_ extract 1 1) C) (_ bv1 1)) (_ bv8 10) (ite (= ((_ extract 0 0) C) (_ bv1 1)) (_ bv9 10) (_ bv10 10)))))
 (let ((?x16643 (ite (= ((_ extract 3 3) C) (_ bv1 1)) (_ bv6 10) (ite (= ((_ extract 2 2) C) (_ bv1 1)) (_ bv7 10) ?x18761))))
 (let ((?x5674 (ite (= ((_ extract 5 5) C) (_ bv1 1)) (_ bv4 10) (ite (= ((_ extract 4 4) C) (_ bv1 1)) (_ bv5 10) ?x16643))))
 (let ((?x18385 (ite (= ((_ extract 7 7) C) (_ bv1 1)) (_ bv2 10) (ite (= ((_ extract 6 6) C) (_ bv1 1)) (_ bv3 10) ?x5674))))
 (let ((?x21321 (ite (= ((_ extract 9 9) C) (_ bv1 1)) (_ bv0 10) (ite (= ((_ extract 8 8) C) (_ bv1 1)) (_ bv1 10) ?x18385))))
 (and (=> $x17394 (= (bvand %A (bvlshr (_ bv1023 10) ?x21321)) (_ bv0 10))) $x17394 $x14672)))))))))
(check-sat)
