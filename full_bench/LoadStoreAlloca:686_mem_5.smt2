(set-info :status unknown)
(declare-fun mem0 () (_ BitVec 8))
(declare-fun %p2 () (_ BitVec 64))
(declare-fun idx () (_ BitVec 64))
(declare-fun %p1 () (_ BitVec 64))
(declare-fun |ana_equivalentAddressValues(%p1, %p2)| () (_ BitVec 1))
(assert
 (let (($x12686 (or true true)))
 (let (($x18224 (and (distinct %p2 (_ bv0 64)) true)))
 (let (($x10314 (and (distinct %p1 (_ bv0 64)) true)))
 (let ((?x24423 (ite (and $x10314 $x12686 $x10314 $x12686 $x10314 $x12686 $x18224 $x12686 (= idx %p2)) (concat ((_ extract 7 1) mem0) ((_ extract 0 0) (concat mem0 ((_ extract 0 0) mem0)))) mem0)))
 (let (($x9877 (and $x10314 $x12686 $x10314 $x12686 $x10314 $x12686 $x18224 $x12686 (= idx (bvadd (bvadd %p2 (_ bv1 64)) (_ bv0 64))))))
 (let ((?x13624 (ite $x9877 ((_ extract 8 1) (concat mem0 ((_ extract 0 0) mem0))) ?x24423)))
 (let (($x13853 (= |ana_equivalentAddressValues(%p1, %p2)| (_ bv1 1))))
 (and (=> $x13853 (= %p1 %p2)) $x13853 (and (distinct ?x13624 mem0) true))))))))))
(check-sat)
