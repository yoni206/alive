(set-info :status unknown)
(declare-fun mem0 () (_ BitVec 8))
(declare-fun alloca%a_3028 () (_ BitVec 8))
(declare-fun %a () (_ BitVec 64))
(declare-fun idx () (_ BitVec 64))
(declare-fun %x () (_ BitVec 5))
(declare-fun %idx () (_ BitVec 31))
(declare-fun u_%a () (_ BitVec 8))
(declare-fun u_%ptr () (_ BitVec 8))
(assert
 (forall ((alloca%a_3027 (_ BitVec 8)) (alloca%a_3029 (_ BitVec 8)) )(let (($x11628 (= idx (bvadd %a (_ bv0 64)))))
 (let ((?x34 (ite $x11628 ((_ extract 7 0) alloca%a_3028) mem0)))
 (let ((?x8320 (ite (= (bvadd %a (bvmul (_ bv1 64) ((_ sign_extend 33) %idx))) (bvadd %a (_ bv0 64))) ((_ extract 7 0) alloca%a_3027) mem0)))
 (let (($x18078 (bvuge (_ bv0 64) (bvsub (bvadd %a (bvmul (_ bv1 64) ((_ sign_extend 33) %idx))) %a))))
 (let (($x15546 (and (distinct %a (_ bv0 64)) true)))
 (let (($x14822 (and $x15546 (and (distinct (bvadd %a (bvmul (_ bv1 64) ((_ sign_extend 33) %idx))) (_ bv0 64)) true) (and (bvuge (bvadd %a (bvmul (_ bv1 64) ((_ sign_extend 33) %idx))) %a) $x18078) (= idx (bvadd %a (bvmul (_ bv1 64) ((_ sign_extend 33) %idx)))))))
 (let ((?x18116 (ite $x14822 (concat ((_ extract 7 5) ?x8320) ((_ extract 4 0) %x)) (ite $x11628 ((_ extract 7 0) alloca%a_3027) mem0))))
 (and $x15546 $x15546 (= u_%ptr (_ bv1 8)) (= u_%a (_ bv1 8)) $x15546 $x15546 $x15546 (and (distinct (ite $x11628 ((_ extract 7 0) alloca%a_3029) ?x18116) ?x34) true))))))))))
 )
(check-sat)
