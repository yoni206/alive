(set-info :status unknown)
(declare-fun %x () (_ BitVec 29))
(declare-fun mem0 () (_ BitVec 8))
(declare-fun %p1 () (_ BitVec 64))
(declare-fun %p2 () (_ BitVec 64))
(declare-fun |ana_equivalentAddressValues(%p1, %p2)| () (_ BitVec 1))
(assert
 (let ((?x18459 (concat ((_ extract 7 5) mem0) ((_ extract 4 0) %x))))
 (let ((?x15264 (ite (and (and (distinct %p1 (_ bv0 64)) true) (or true true) (= %p2 %p1)) ?x18459 mem0)))
 (let ((?x17832 ((_ extract 12 5) %x)))
 (let (($x10679 (or true true)))
 (let (($x10275 (and (distinct %p1 (_ bv0 64)) true)))
 (let ((?x18006 (ite (and $x10275 $x10679 (= %p2 (bvadd (bvadd %p1 (_ bv1 64)) (_ bv0 64)))) ?x17832 ?x15264)))
 (let ((?x18254 ((_ extract 20 13) %x)))
 (let ((?x14730 (ite (and $x10275 $x10679 (= %p2 (bvadd (bvadd %p1 (_ bv1 64)) (_ bv1 64)))) ?x18254 ?x18006)))
 (let ((?x21807 ((_ extract 28 21) %x)))
 (let ((?x14587 (ite (and $x10275 $x10679 (= %p2 (bvadd (bvadd %p1 (_ bv1 64)) (_ bv2 64)))) ?x21807 ?x14730)))
 (let ((?x8400 (ite (and $x10275 $x10679 (= (bvadd (bvadd %p2 (_ bv1 64)) (_ bv0 64)) %p1)) ?x18459 mem0)))
 (let (($x5558 (and $x10275 $x10679 (= (bvadd (bvadd %p2 (_ bv1 64)) (_ bv0 64)) (bvadd (bvadd %p1 (_ bv1 64)) (_ bv0 64))))))
 (let (($x13060 (and $x10275 $x10679 (= (bvadd (bvadd %p2 (_ bv1 64)) (_ bv0 64)) (bvadd (bvadd %p1 (_ bv1 64)) (_ bv1 64))))))
 (let (($x24232 (and $x10275 $x10679 (= (bvadd (bvadd %p2 (_ bv1 64)) (_ bv0 64)) (bvadd (bvadd %p1 (_ bv1 64)) (_ bv2 64))))))
 (let ((?x8457 (ite (and $x10275 $x10679 (= (bvadd (bvadd %p2 (_ bv1 64)) (_ bv1 64)) %p1)) ?x18459 mem0)))
 (let (($x11285 (and $x10275 $x10679 (= (bvadd (bvadd %p2 (_ bv1 64)) (_ bv1 64)) (bvadd (bvadd %p1 (_ bv1 64)) (_ bv0 64))))))
 (let (($x5280 (and $x10275 $x10679 (= (bvadd (bvadd %p2 (_ bv1 64)) (_ bv1 64)) (bvadd (bvadd %p1 (_ bv1 64)) (_ bv1 64))))))
 (let (($x2047 (and $x10275 $x10679 (= (bvadd (bvadd %p2 (_ bv1 64)) (_ bv1 64)) (bvadd (bvadd %p1 (_ bv1 64)) (_ bv2 64))))))
 (let ((?x1835 (ite (and $x10275 $x10679 (= (bvadd (bvadd %p2 (_ bv1 64)) (_ bv2 64)) %p1)) ?x18459 mem0)))
 (let (($x23451 (and $x10275 $x10679 (= (bvadd (bvadd %p2 (_ bv1 64)) (_ bv2 64)) (bvadd (bvadd %p1 (_ bv1 64)) (_ bv0 64))))))
 (let (($x10144 (and $x10275 $x10679 (= (bvadd (bvadd %p2 (_ bv1 64)) (_ bv2 64)) (bvadd (bvadd %p1 (_ bv1 64)) (_ bv1 64))))))
 (let (($x3036 (and $x10275 $x10679 (= (bvadd (bvadd %p2 (_ bv1 64)) (_ bv2 64)) (bvadd (bvadd %p1 (_ bv1 64)) (_ bv2 64))))))
 (let ((?x11346 (concat (ite $x3036 ?x21807 (ite $x10144 ?x18254 (ite $x23451 ?x17832 ?x1835))) (ite $x2047 ?x21807 (ite $x5280 ?x18254 (ite $x11285 ?x17832 ?x8457))))))
 (let ((?x20367 (concat (concat ?x11346 (ite $x24232 ?x21807 (ite $x13060 ?x18254 (ite $x5558 ?x17832 ?x8400)))) ((_ extract 4 0) ?x14587))))
 (let (($x23453 (= |ana_equivalentAddressValues(%p1, %p2)| (_ bv1 1))))
 (let (($x1312 (and (distinct %p2 (_ bv0 64)) true)))
 (and $x10275 $x10679 $x1312 $x10679 $x1312 $x10679 (=> $x23453 (= %p1 %p2)) $x23453 (and (distinct ?x20367 %x) true)))))))))))))))))))))))))))))
(check-sat)
