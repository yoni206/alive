(set-info :status unknown)
(declare-fun C2 () (_ BitVec 11))
(declare-fun C1 () (_ BitVec 21))
(assert
 (let ((?x2686 (ite (and (distinct ((_ extract 2 2) C2) (_ bv0 1)) true) (_ bv2 21) (ite (and (distinct ((_ extract 1 1) C2) (_ bv0 1)) true) (_ bv1 21) (_ bv0 21)))))
 (let ((?x2970 (ite (and (distinct ((_ extract 5 5) C2) (_ bv0 1)) true) (_ bv5 21) (ite (and (distinct ((_ extract 4 4) C2) (_ bv0 1)) true) (_ bv4 21) (_ bv3 21)))))
 (let ((?x3321 (ite (and (distinct ((_ extract 8 8) C2) (_ bv0 1)) true) (_ bv8 21) (ite (and (distinct ((_ extract 7 7) C2) (_ bv0 1)) true) (_ bv7 21) (_ bv6 21)))))
 (let ((?x1984 (ite (and (distinct ((_ extract 10 9) C2) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) C2) (_ bv0 1)) true) (_ bv10 21) (_ bv9 21)) ?x3321)))
 (let ((?x2201 (ite (and (distinct ((_ extract 10 6) C2) (_ bv0 5)) true) ?x1984 (ite (and (distinct ((_ extract 5 3) C2) (_ bv0 3)) true) ?x2970 ?x2686))))
 (let ((?x3398 (ite (and (distinct ((_ extract 2 2) C1) (_ bv0 1)) true) (_ bv2 21) (ite (and (distinct ((_ extract 1 1) C1) (_ bv0 1)) true) (_ bv1 21) (_ bv0 21)))))
 (let ((?x2288 (ite (and (distinct ((_ extract 5 5) C1) (_ bv0 1)) true) (_ bv5 21) (ite (and (distinct ((_ extract 4 4) C1) (_ bv0 1)) true) (_ bv4 21) (_ bv3 21)))))
 (let ((?x2004 (ite (and (distinct ((_ extract 8 8) C1) (_ bv0 1)) true) (_ bv8 21) (ite (and (distinct ((_ extract 7 7) C1) (_ bv0 1)) true) (_ bv7 21) (_ bv6 21)))))
 (let ((?x4061 (ite (and (distinct ((_ extract 10 9) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) C1) (_ bv0 1)) true) (_ bv10 21) (_ bv9 21)) ?x2004)))
 (let ((?x1735 (ite (and (distinct ((_ extract 10 6) C1) (_ bv0 5)) true) ?x4061 (ite (and (distinct ((_ extract 5 3) C1) (_ bv0 3)) true) ?x2288 ?x3398))))
 (let ((?x1877 (ite (and (distinct ((_ extract 13 13) C1) (_ bv0 1)) true) (_ bv13 21) (ite (and (distinct ((_ extract 12 12) C1) (_ bv0 1)) true) (_ bv12 21) (_ bv11 21)))))
 (let ((?x5124 (ite (and (distinct ((_ extract 15 14) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 15 15) C1) (_ bv0 1)) true) (_ bv15 21) (_ bv14 21)) ?x1877)))
 (let ((?x3987 (ite (and (distinct ((_ extract 18 18) C1) (_ bv0 1)) true) (_ bv18 21) (ite (and (distinct ((_ extract 17 17) C1) (_ bv0 1)) true) (_ bv17 21) (_ bv16 21)))))
 (let ((?x1119 (ite (and (distinct ((_ extract 20 19) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 20 20) C1) (_ bv0 1)) true) (_ bv20 21) (_ bv19 21)) ?x3987)))
 (let ((?x1560 (ite (and (distinct ((_ extract 20 11) C1) (_ bv0 10)) true) (ite (and (distinct ((_ extract 20 16) C1) (_ bv0 5)) true) ?x1119 ?x5124) ?x1735)))
 (let ((?x2942 (bvsub ?x1560 ?x2201)))
 (let ((?x2553 (ite (and (distinct ((_ extract 2 2) C1) (_ bv0 1)) true) (_ bv2 32) (ite (and (distinct ((_ extract 1 1) C1) (_ bv0 1)) true) (_ bv1 32) (_ bv0 32)))))
 (let ((?x1941 (ite (and (distinct ((_ extract 5 5) C1) (_ bv0 1)) true) (_ bv5 32) (ite (and (distinct ((_ extract 4 4) C1) (_ bv0 1)) true) (_ bv4 32) (_ bv3 32)))))
 (let ((?x1612 (ite (and (distinct ((_ extract 8 8) C1) (_ bv0 1)) true) (_ bv8 32) (ite (and (distinct ((_ extract 7 7) C1) (_ bv0 1)) true) (_ bv7 32) (_ bv6 32)))))
 (let ((?x2118 (ite (and (distinct ((_ extract 10 9) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) C1) (_ bv0 1)) true) (_ bv10 32) (_ bv9 32)) ?x1612)))
 (let ((?x1419 (ite (and (distinct ((_ extract 10 6) C1) (_ bv0 5)) true) ?x2118 (ite (and (distinct ((_ extract 5 3) C1) (_ bv0 3)) true) ?x1941 ?x2553))))
 (let ((?x1508 (ite (and (distinct ((_ extract 13 13) C1) (_ bv0 1)) true) (_ bv13 32) (ite (and (distinct ((_ extract 12 12) C1) (_ bv0 1)) true) (_ bv12 32) (_ bv11 32)))))
 (let ((?x1438 (ite (and (distinct ((_ extract 15 14) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 15 15) C1) (_ bv0 1)) true) (_ bv15 32) (_ bv14 32)) ?x1508)))
 (let ((?x1744 (ite (and (distinct ((_ extract 18 18) C1) (_ bv0 1)) true) (_ bv18 32) (ite (and (distinct ((_ extract 17 17) C1) (_ bv0 1)) true) (_ bv17 32) (_ bv16 32)))))
 (let ((?x1825 (ite (and (distinct ((_ extract 20 19) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 20 20) C1) (_ bv0 1)) true) (_ bv20 32) (_ bv19 32)) ?x1744)))
 (let ((?x3583 (ite (and (distinct ((_ extract 20 11) C1) (_ bv0 10)) true) (ite (and (distinct ((_ extract 20 16) C1) (_ bv0 5)) true) ?x1825 ?x1438) ?x1419)))
 (let ((?x3617 (ite (and (distinct ((_ extract 2 2) C2) (_ bv0 1)) true) (_ bv2 32) (ite (and (distinct ((_ extract 1 1) C2) (_ bv0 1)) true) (_ bv1 32) (_ bv0 32)))))
 (let ((?x1895 (ite (and (distinct ((_ extract 5 5) C2) (_ bv0 1)) true) (_ bv5 32) (ite (and (distinct ((_ extract 4 4) C2) (_ bv0 1)) true) (_ bv4 32) (_ bv3 32)))))
 (let ((?x2379 (ite (and (distinct ((_ extract 8 8) C2) (_ bv0 1)) true) (_ bv8 32) (ite (and (distinct ((_ extract 7 7) C2) (_ bv0 1)) true) (_ bv7 32) (_ bv6 32)))))
 (let ((?x1875 (ite (and (distinct ((_ extract 10 9) C2) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) C2) (_ bv0 1)) true) (_ bv10 32) (_ bv9 32)) ?x2379)))
 (let ((?x2710 (ite (and (distinct ((_ extract 10 6) C2) (_ bv0 5)) true) ?x1875 (ite (and (distinct ((_ extract 5 3) C2) (_ bv0 3)) true) ?x1895 ?x3617))))
 (and (and (and (distinct C1 (_ bv0 21)) true) (= (bvand C1 (bvsub C1 (_ bv1 21))) (_ bv0 21))) (and (and (distinct C2 (_ bv0 11)) true) (= (bvand C2 (bvsub C2 (_ bv1 11))) (_ bv0 11))) (bvslt ?x2710 ?x3583) (not (bvult ?x2942 (_ bv21 21))))))))))))))))))))))))))))))))))))
(check-sat)
