(set-info :status unknown)
(declare-fun %K2 () (_ BitVec 64))
(declare-fun %K1 () (_ BitVec 64))
(declare-fun %A () (_ BitVec 64))
(declare-fun |ana_isPowerOf2(%K2)| () (_ BitVec 1))
(declare-fun |ana_isPowerOf2(%K1)| () (_ BitVec 1))
(assert
 (let ((?x522 (ite (and (distinct (bvand %A (bvor %K1 %K2)) (bvor %K1 %K2)) true) (_ bv1 1) (_ bv0 1))))
 (let ((?x11627 (ite (= (bvand %A %K2) (_ bv0 64)) (_ bv1 1) (_ bv0 1))))
 (let ((?x13125 (ite (= (bvand %A %K1) (_ bv0 64)) (_ bv1 1) (_ bv0 1))))
 (let (($x14980 (= |ana_isPowerOf2(%K2)| (_ bv1 1))))
 (let (($x8661 (= |ana_isPowerOf2(%K1)| (_ bv1 1))))
 (let (($x11977 (=> $x14980 (and (and (distinct %K2 (_ bv0 64)) true) (= (bvand %K2 (bvsub %K2 (_ bv1 64))) (_ bv0 64))))))
 (let (($x22723 (=> $x8661 (and (and (distinct %K1 (_ bv0 64)) true) (= (bvand %K1 (bvsub %K1 (_ bv1 64))) (_ bv0 64))))))
 (and $x22723 $x11977 $x8661 $x14980 (and (distinct (bvor ?x13125 ?x11627) ?x522) true))))))))))
(check-sat)
