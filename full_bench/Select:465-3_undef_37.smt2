(set-info :status unknown)
(declare-fun C2 () (_ BitVec 11))
(declare-fun C1 () (_ BitVec 38))
(assert
 (let ((?x2122 (ite (and (distinct ((_ extract 2 2) C2) (_ bv0 1)) true) (_ bv2 38) (ite (and (distinct ((_ extract 1 1) C2) (_ bv0 1)) true) (_ bv1 38) (_ bv0 38)))))
 (let ((?x1593 (ite (and (distinct ((_ extract 5 5) C2) (_ bv0 1)) true) (_ bv5 38) (ite (and (distinct ((_ extract 4 4) C2) (_ bv0 1)) true) (_ bv4 38) (_ bv3 38)))))
 (let ((?x5132 (ite (and (distinct ((_ extract 8 8) C2) (_ bv0 1)) true) (_ bv8 38) (ite (and (distinct ((_ extract 7 7) C2) (_ bv0 1)) true) (_ bv7 38) (_ bv6 38)))))
 (let ((?x4743 (ite (and (distinct ((_ extract 10 9) C2) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) C2) (_ bv0 1)) true) (_ bv10 38) (_ bv9 38)) ?x5132)))
 (let ((?x2981 (ite (and (distinct ((_ extract 10 6) C2) (_ bv0 5)) true) ?x4743 (ite (and (distinct ((_ extract 5 3) C2) (_ bv0 3)) true) ?x1593 ?x2122))))
 (let ((?x5267 (ite (and (distinct ((_ extract 2 2) C1) (_ bv0 1)) true) (_ bv2 38) (ite (and (distinct ((_ extract 1 1) C1) (_ bv0 1)) true) (_ bv1 38) (_ bv0 38)))))
 (let ((?x4061 (ite (and (distinct ((_ extract 4 3) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 4 4) C1) (_ bv0 1)) true) (_ bv4 38) (_ bv3 38)) ?x5267)))
 (let ((?x4463 (ite (and (distinct ((_ extract 7 7) C1) (_ bv0 1)) true) (_ bv7 38) (ite (and (distinct ((_ extract 6 6) C1) (_ bv0 1)) true) (_ bv6 38) (_ bv5 38)))))
 (let ((?x3739 (ite (and (distinct ((_ extract 9 8) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 9 9) C1) (_ bv0 1)) true) (_ bv9 38) (_ bv8 38)) ?x4463)))
 (let ((?x2960 (ite (and (distinct ((_ extract 12 12) C1) (_ bv0 1)) true) (_ bv12 38) (ite (and (distinct ((_ extract 11 11) C1) (_ bv0 1)) true) (_ bv11 38) (_ bv10 38)))))
 (let ((?x4675 (ite (and (distinct ((_ extract 14 13) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 14 14) C1) (_ bv0 1)) true) (_ bv14 38) (_ bv13 38)) ?x2960)))
 (let ((?x4137 (ite (and (distinct ((_ extract 18 17) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 18 18) C1) (_ bv0 1)) true) (_ bv18 38) (_ bv17 38)) (ite (and (distinct ((_ extract 16 16) C1) (_ bv0 1)) true) (_ bv16 38) (_ bv15 38)))))
 (let ((?x3819 (ite (and (distinct ((_ extract 18 10) C1) (_ bv0 9)) true) (ite (and (distinct ((_ extract 18 15) C1) (_ bv0 4)) true) ?x4137 ?x4675) (ite (and (distinct ((_ extract 9 5) C1) (_ bv0 5)) true) ?x3739 ?x4061))))
 (let ((?x2015 (ite (and (distinct ((_ extract 21 21) C1) (_ bv0 1)) true) (_ bv21 38) (ite (and (distinct ((_ extract 20 20) C1) (_ bv0 1)) true) (_ bv20 38) (_ bv19 38)))))
 (let ((?x1373 (ite (and (distinct ((_ extract 23 22) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 23 23) C1) (_ bv0 1)) true) (_ bv23 38) (_ bv22 38)) ?x2015)))
 (let ((?x1756 (ite (and (distinct ((_ extract 26 26) C1) (_ bv0 1)) true) (_ bv26 38) (ite (and (distinct ((_ extract 25 25) C1) (_ bv0 1)) true) (_ bv25 38) (_ bv24 38)))))
 (let ((?x1154 (ite (and (distinct ((_ extract 28 27) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 28 28) C1) (_ bv0 1)) true) (_ bv28 38) (_ bv27 38)) ?x1756)))
 (let ((?x5086 (ite (and (distinct ((_ extract 31 31) C1) (_ bv0 1)) true) (_ bv31 38) (ite (and (distinct ((_ extract 30 30) C1) (_ bv0 1)) true) (_ bv30 38) (_ bv29 38)))))
 (let ((?x5071 (ite (and (distinct ((_ extract 33 32) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 33 33) C1) (_ bv0 1)) true) (_ bv33 38) (_ bv32 38)) ?x5086)))
 (let ((?x2382 (ite (and (distinct ((_ extract 37 36) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 37 37) C1) (_ bv0 1)) true) (_ bv37 38) (_ bv36 38)) (ite (and (distinct ((_ extract 35 35) C1) (_ bv0 1)) true) (_ bv35 38) (_ bv34 38)))))
 (let ((?x5635 (ite (and (distinct ((_ extract 37 29) C1) (_ bv0 9)) true) (ite (and (distinct ((_ extract 37 34) C1) (_ bv0 4)) true) ?x2382 ?x5071) (ite (and (distinct ((_ extract 28 24) C1) (_ bv0 5)) true) ?x1154 ?x1373))))
 (let ((?x2375 (bvsub (ite (and (distinct ((_ extract 37 19) C1) (_ bv0 19)) true) ?x5635 ?x3819) ?x2981)))
 (let ((?x1766 (ite (and (distinct ((_ extract 2 2) C1) (_ bv0 1)) true) (_ bv2 32) (ite (and (distinct ((_ extract 1 1) C1) (_ bv0 1)) true) (_ bv1 32) (_ bv0 32)))))
 (let ((?x2235 (ite (and (distinct ((_ extract 4 3) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 4 4) C1) (_ bv0 1)) true) (_ bv4 32) (_ bv3 32)) ?x1766)))
 (let ((?x4355 (ite (and (distinct ((_ extract 7 7) C1) (_ bv0 1)) true) (_ bv7 32) (ite (and (distinct ((_ extract 6 6) C1) (_ bv0 1)) true) (_ bv6 32) (_ bv5 32)))))
 (let ((?x5379 (ite (and (distinct ((_ extract 9 8) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 9 9) C1) (_ bv0 1)) true) (_ bv9 32) (_ bv8 32)) ?x4355)))
 (let ((?x4886 (ite (and (distinct ((_ extract 12 12) C1) (_ bv0 1)) true) (_ bv12 32) (ite (and (distinct ((_ extract 11 11) C1) (_ bv0 1)) true) (_ bv11 32) (_ bv10 32)))))
 (let ((?x3021 (ite (and (distinct ((_ extract 14 13) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 14 14) C1) (_ bv0 1)) true) (_ bv14 32) (_ bv13 32)) ?x4886)))
 (let ((?x4179 (ite (and (distinct ((_ extract 18 17) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 18 18) C1) (_ bv0 1)) true) (_ bv18 32) (_ bv17 32)) (ite (and (distinct ((_ extract 16 16) C1) (_ bv0 1)) true) (_ bv16 32) (_ bv15 32)))))
 (let ((?x5334 (ite (and (distinct ((_ extract 18 10) C1) (_ bv0 9)) true) (ite (and (distinct ((_ extract 18 15) C1) (_ bv0 4)) true) ?x4179 ?x3021) (ite (and (distinct ((_ extract 9 5) C1) (_ bv0 5)) true) ?x5379 ?x2235))))
 (let ((?x1927 (ite (and (distinct ((_ extract 21 21) C1) (_ bv0 1)) true) (_ bv21 32) (ite (and (distinct ((_ extract 20 20) C1) (_ bv0 1)) true) (_ bv20 32) (_ bv19 32)))))
 (let ((?x1892 (ite (and (distinct ((_ extract 23 22) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 23 23) C1) (_ bv0 1)) true) (_ bv23 32) (_ bv22 32)) ?x1927)))
 (let ((?x1603 (ite (and (distinct ((_ extract 26 26) C1) (_ bv0 1)) true) (_ bv26 32) (ite (and (distinct ((_ extract 25 25) C1) (_ bv0 1)) true) (_ bv25 32) (_ bv24 32)))))
 (let ((?x1838 (ite (and (distinct ((_ extract 28 27) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 28 28) C1) (_ bv0 1)) true) (_ bv28 32) (_ bv27 32)) ?x1603)))
 (let ((?x1405 (ite (and (distinct ((_ extract 31 31) C1) (_ bv0 1)) true) (_ bv31 32) (ite (and (distinct ((_ extract 30 30) C1) (_ bv0 1)) true) (_ bv30 32) (_ bv29 32)))))
 (let ((?x1399 (ite (and (distinct ((_ extract 33 32) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 33 33) C1) (_ bv0 1)) true) (_ bv33 32) (_ bv32 32)) ?x1405)))
 (let ((?x2648 (ite (and (distinct ((_ extract 37 36) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 37 37) C1) (_ bv0 1)) true) (_ bv37 32) (_ bv36 32)) (ite (and (distinct ((_ extract 35 35) C1) (_ bv0 1)) true) (_ bv35 32) (_ bv34 32)))))
 (let ((?x3545 (ite (and (distinct ((_ extract 37 29) C1) (_ bv0 9)) true) (ite (and (distinct ((_ extract 37 34) C1) (_ bv0 4)) true) ?x2648 ?x1399) (ite (and (distinct ((_ extract 28 24) C1) (_ bv0 5)) true) ?x1838 ?x1892))))
 (let ((?x1850 (ite (and (distinct ((_ extract 2 2) C2) (_ bv0 1)) true) (_ bv2 32) (ite (and (distinct ((_ extract 1 1) C2) (_ bv0 1)) true) (_ bv1 32) (_ bv0 32)))))
 (let ((?x4501 (ite (and (distinct ((_ extract 5 5) C2) (_ bv0 1)) true) (_ bv5 32) (ite (and (distinct ((_ extract 4 4) C2) (_ bv0 1)) true) (_ bv4 32) (_ bv3 32)))))
 (let ((?x4519 (ite (and (distinct ((_ extract 8 8) C2) (_ bv0 1)) true) (_ bv8 32) (ite (and (distinct ((_ extract 7 7) C2) (_ bv0 1)) true) (_ bv7 32) (_ bv6 32)))))
 (let ((?x3820 (ite (and (distinct ((_ extract 10 9) C2) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) C2) (_ bv0 1)) true) (_ bv10 32) (_ bv9 32)) ?x4519)))
 (let ((?x4439 (ite (and (distinct ((_ extract 10 6) C2) (_ bv0 5)) true) ?x3820 (ite (and (distinct ((_ extract 5 3) C2) (_ bv0 3)) true) ?x4501 ?x1850))))
 (and (and (and (distinct C1 (_ bv0 38)) true) (= (bvand C1 (bvsub C1 (_ bv1 38))) (_ bv0 38))) (and (and (distinct C2 (_ bv0 11)) true) (= (bvand C2 (bvsub C2 (_ bv1 11))) (_ bv0 11))) (bvslt ?x4439 (ite (and (distinct ((_ extract 37 19) C1) (_ bv0 19)) true) ?x3545 ?x5334)) (not (bvult ?x2375 (_ bv38 38))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
