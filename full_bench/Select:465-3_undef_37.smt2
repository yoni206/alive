(set-info :status unknown)
(declare-fun C2 () (_ BitVec 11))
(declare-fun C1 () (_ BitVec 39))
(assert
 (let ((?x12995 (ite (and (distinct ((_ extract 2 2) C2) (_ bv0 1)) true) (_ bv2 39) (ite (and (distinct ((_ extract 1 1) C2) (_ bv0 1)) true) (_ bv1 39) (_ bv0 39)))))
 (let ((?x3539 (ite (and (distinct ((_ extract 5 5) C2) (_ bv0 1)) true) (_ bv5 39) (ite (and (distinct ((_ extract 4 4) C2) (_ bv0 1)) true) (_ bv4 39) (_ bv3 39)))))
 (let ((?x22208 (ite (and (distinct ((_ extract 8 8) C2) (_ bv0 1)) true) (_ bv8 39) (ite (and (distinct ((_ extract 7 7) C2) (_ bv0 1)) true) (_ bv7 39) (_ bv6 39)))))
 (let ((?x21127 (ite (and (distinct ((_ extract 10 9) C2) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) C2) (_ bv0 1)) true) (_ bv10 39) (_ bv9 39)) ?x22208)))
 (let ((?x5029 (ite (and (distinct ((_ extract 10 6) C2) (_ bv0 5)) true) ?x21127 (ite (and (distinct ((_ extract 5 3) C2) (_ bv0 3)) true) ?x3539 ?x12995))))
 (let ((?x14692 (ite (and (distinct ((_ extract 2 2) C1) (_ bv0 1)) true) (_ bv2 39) (ite (and (distinct ((_ extract 1 1) C1) (_ bv0 1)) true) (_ bv1 39) (_ bv0 39)))))
 (let ((?x19330 (ite (and (distinct ((_ extract 4 3) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 4 4) C1) (_ bv0 1)) true) (_ bv4 39) (_ bv3 39)) ?x14692)))
 (let ((?x11318 (ite (and (distinct ((_ extract 7 7) C1) (_ bv0 1)) true) (_ bv7 39) (ite (and (distinct ((_ extract 6 6) C1) (_ bv0 1)) true) (_ bv6 39) (_ bv5 39)))))
 (let ((?x7263 (ite (and (distinct ((_ extract 9 8) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 9 9) C1) (_ bv0 1)) true) (_ bv9 39) (_ bv8 39)) ?x11318)))
 (let ((?x7294 (ite (and (distinct ((_ extract 12 12) C1) (_ bv0 1)) true) (_ bv12 39) (ite (and (distinct ((_ extract 11 11) C1) (_ bv0 1)) true) (_ bv11 39) (_ bv10 39)))))
 (let ((?x13862 (ite (and (distinct ((_ extract 14 13) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 14 14) C1) (_ bv0 1)) true) (_ bv14 39) (_ bv13 39)) ?x7294)))
 (let ((?x6996 (ite (and (distinct ((_ extract 17 17) C1) (_ bv0 1)) true) (_ bv17 39) (ite (and (distinct ((_ extract 16 16) C1) (_ bv0 1)) true) (_ bv16 39) (_ bv15 39)))))
 (let ((?x6798 (ite (and (distinct ((_ extract 19 18) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 19 19) C1) (_ bv0 1)) true) (_ bv19 39) (_ bv18 39)) ?x6996)))
 (let ((?x18322 (ite (and (distinct ((_ extract 19 10) C1) (_ bv0 10)) true) (ite (and (distinct ((_ extract 19 15) C1) (_ bv0 5)) true) ?x6798 ?x13862) (ite (and (distinct ((_ extract 9 5) C1) (_ bv0 5)) true) ?x7263 ?x19330))))
 (let ((?x10275 (ite (and (distinct ((_ extract 22 22) C1) (_ bv0 1)) true) (_ bv22 39) (ite (and (distinct ((_ extract 21 21) C1) (_ bv0 1)) true) (_ bv21 39) (_ bv20 39)))))
 (let ((?x3525 (ite (and (distinct ((_ extract 24 23) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 24 24) C1) (_ bv0 1)) true) (_ bv24 39) (_ bv23 39)) ?x10275)))
 (let ((?x14066 (ite (and (distinct ((_ extract 27 27) C1) (_ bv0 1)) true) (_ bv27 39) (ite (and (distinct ((_ extract 26 26) C1) (_ bv0 1)) true) (_ bv26 39) (_ bv25 39)))))
 (let ((?x7325 (ite (and (distinct ((_ extract 29 28) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 29 29) C1) (_ bv0 1)) true) (_ bv29 39) (_ bv28 39)) ?x14066)))
 (let ((?x19333 (ite (and (distinct ((_ extract 32 32) C1) (_ bv0 1)) true) (_ bv32 39) (ite (and (distinct ((_ extract 31 31) C1) (_ bv0 1)) true) (_ bv31 39) (_ bv30 39)))))
 (let ((?x17368 (ite (and (distinct ((_ extract 34 33) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 34 34) C1) (_ bv0 1)) true) (_ bv34 39) (_ bv33 39)) ?x19333)))
 (let ((?x9996 (ite (and (distinct ((_ extract 38 37) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 38 38) C1) (_ bv0 1)) true) (_ bv38 39) (_ bv37 39)) (ite (and (distinct ((_ extract 36 36) C1) (_ bv0 1)) true) (_ bv36 39) (_ bv35 39)))))
 (let ((?x17007 (ite (and (distinct ((_ extract 38 30) C1) (_ bv0 9)) true) (ite (and (distinct ((_ extract 38 35) C1) (_ bv0 4)) true) ?x9996 ?x17368) (ite (and (distinct ((_ extract 29 25) C1) (_ bv0 5)) true) ?x7325 ?x3525))))
 (let ((?x20872 (bvsub (ite (and (distinct ((_ extract 38 20) C1) (_ bv0 19)) true) ?x17007 ?x18322) ?x5029)))
 (let ((?x11918 (ite (and (distinct ((_ extract 2 2) C1) (_ bv0 1)) true) (_ bv2 32) (ite (and (distinct ((_ extract 1 1) C1) (_ bv0 1)) true) (_ bv1 32) (_ bv0 32)))))
 (let ((?x1194 (ite (and (distinct ((_ extract 4 3) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 4 4) C1) (_ bv0 1)) true) (_ bv4 32) (_ bv3 32)) ?x11918)))
 (let ((?x21440 (ite (and (distinct ((_ extract 7 7) C1) (_ bv0 1)) true) (_ bv7 32) (ite (and (distinct ((_ extract 6 6) C1) (_ bv0 1)) true) (_ bv6 32) (_ bv5 32)))))
 (let ((?x10524 (ite (and (distinct ((_ extract 9 8) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 9 9) C1) (_ bv0 1)) true) (_ bv9 32) (_ bv8 32)) ?x21440)))
 (let ((?x21922 (ite (and (distinct ((_ extract 12 12) C1) (_ bv0 1)) true) (_ bv12 32) (ite (and (distinct ((_ extract 11 11) C1) (_ bv0 1)) true) (_ bv11 32) (_ bv10 32)))))
 (let ((?x14159 (ite (and (distinct ((_ extract 14 13) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 14 14) C1) (_ bv0 1)) true) (_ bv14 32) (_ bv13 32)) ?x21922)))
 (let ((?x13743 (ite (and (distinct ((_ extract 17 17) C1) (_ bv0 1)) true) (_ bv17 32) (ite (and (distinct ((_ extract 16 16) C1) (_ bv0 1)) true) (_ bv16 32) (_ bv15 32)))))
 (let ((?x13200 (ite (and (distinct ((_ extract 19 18) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 19 19) C1) (_ bv0 1)) true) (_ bv19 32) (_ bv18 32)) ?x13743)))
 (let ((?x7099 (ite (and (distinct ((_ extract 19 10) C1) (_ bv0 10)) true) (ite (and (distinct ((_ extract 19 15) C1) (_ bv0 5)) true) ?x13200 ?x14159) (ite (and (distinct ((_ extract 9 5) C1) (_ bv0 5)) true) ?x10524 ?x1194))))
 (let ((?x10763 (ite (and (distinct ((_ extract 22 22) C1) (_ bv0 1)) true) (_ bv22 32) (ite (and (distinct ((_ extract 21 21) C1) (_ bv0 1)) true) (_ bv21 32) (_ bv20 32)))))
 (let ((?x10241 (ite (and (distinct ((_ extract 24 23) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 24 24) C1) (_ bv0 1)) true) (_ bv24 32) (_ bv23 32)) ?x10763)))
 (let ((?x19540 (ite (and (distinct ((_ extract 27 27) C1) (_ bv0 1)) true) (_ bv27 32) (ite (and (distinct ((_ extract 26 26) C1) (_ bv0 1)) true) (_ bv26 32) (_ bv25 32)))))
 (let ((?x8640 (ite (and (distinct ((_ extract 29 28) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 29 29) C1) (_ bv0 1)) true) (_ bv29 32) (_ bv28 32)) ?x19540)))
 (let ((?x2791 (ite (and (distinct ((_ extract 32 32) C1) (_ bv0 1)) true) (_ bv32 32) (ite (and (distinct ((_ extract 31 31) C1) (_ bv0 1)) true) (_ bv31 32) (_ bv30 32)))))
 (let ((?x1833 (ite (and (distinct ((_ extract 34 33) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 34 34) C1) (_ bv0 1)) true) (_ bv34 32) (_ bv33 32)) ?x2791)))
 (let ((?x6186 (ite (and (distinct ((_ extract 38 37) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 38 38) C1) (_ bv0 1)) true) (_ bv38 32) (_ bv37 32)) (ite (and (distinct ((_ extract 36 36) C1) (_ bv0 1)) true) (_ bv36 32) (_ bv35 32)))))
 (let ((?x10017 (ite (and (distinct ((_ extract 38 30) C1) (_ bv0 9)) true) (ite (and (distinct ((_ extract 38 35) C1) (_ bv0 4)) true) ?x6186 ?x1833) (ite (and (distinct ((_ extract 29 25) C1) (_ bv0 5)) true) ?x8640 ?x10241))))
 (let ((?x4069 (ite (and (distinct ((_ extract 2 2) C2) (_ bv0 1)) true) (_ bv2 32) (ite (and (distinct ((_ extract 1 1) C2) (_ bv0 1)) true) (_ bv1 32) (_ bv0 32)))))
 (let ((?x2172 (ite (and (distinct ((_ extract 5 5) C2) (_ bv0 1)) true) (_ bv5 32) (ite (and (distinct ((_ extract 4 4) C2) (_ bv0 1)) true) (_ bv4 32) (_ bv3 32)))))
 (let ((?x18846 (ite (and (distinct ((_ extract 8 8) C2) (_ bv0 1)) true) (_ bv8 32) (ite (and (distinct ((_ extract 7 7) C2) (_ bv0 1)) true) (_ bv7 32) (_ bv6 32)))))
 (let ((?x14114 (ite (and (distinct ((_ extract 10 9) C2) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) C2) (_ bv0 1)) true) (_ bv10 32) (_ bv9 32)) ?x18846)))
 (let ((?x15665 (ite (and (distinct ((_ extract 10 6) C2) (_ bv0 5)) true) ?x14114 (ite (and (distinct ((_ extract 5 3) C2) (_ bv0 3)) true) ?x2172 ?x4069))))
 (and (and (and (distinct C1 (_ bv0 39)) true) (= (bvand C1 (bvsub C1 (_ bv1 39))) (_ bv0 39))) (and (and (distinct C2 (_ bv0 11)) true) (= (bvand C2 (bvsub C2 (_ bv1 11))) (_ bv0 11))) (bvslt ?x15665 (ite (and (distinct ((_ extract 38 20) C1) (_ bv0 19)) true) ?x10017 ?x7099)) (not (bvult ?x20872 (_ bv39 39))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
