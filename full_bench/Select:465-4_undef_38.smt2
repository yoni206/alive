(set-info :status unknown)
(declare-fun C2 () (_ BitVec 11))
(declare-fun C1 () (_ BitVec 46))
(assert
 (let ((?x1204 (ite (and (distinct ((_ extract 2 2) C2) (_ bv0 1)) true) (_ bv2 46) (ite (and (distinct ((_ extract 1 1) C2) (_ bv0 1)) true) (_ bv1 46) (_ bv0 46)))))
 (let ((?x6806 (ite (and (distinct ((_ extract 5 5) C2) (_ bv0 1)) true) (_ bv5 46) (ite (and (distinct ((_ extract 4 4) C2) (_ bv0 1)) true) (_ bv4 46) (_ bv3 46)))))
 (let ((?x1702 (ite (and (distinct ((_ extract 8 8) C2) (_ bv0 1)) true) (_ bv8 46) (ite (and (distinct ((_ extract 7 7) C2) (_ bv0 1)) true) (_ bv7 46) (_ bv6 46)))))
 (let ((?x5500 (ite (and (distinct ((_ extract 10 9) C2) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) C2) (_ bv0 1)) true) (_ bv10 46) (_ bv9 46)) ?x1702)))
 (let ((?x6712 (ite (and (distinct ((_ extract 10 6) C2) (_ bv0 5)) true) ?x5500 (ite (and (distinct ((_ extract 5 3) C2) (_ bv0 3)) true) ?x6806 ?x1204))))
 (let ((?x3729 (ite (and (distinct ((_ extract 2 2) C1) (_ bv0 1)) true) (_ bv2 46) (ite (and (distinct ((_ extract 1 1) C1) (_ bv0 1)) true) (_ bv1 46) (_ bv0 46)))))
 (let ((?x6799 (ite (and (distinct ((_ extract 5 5) C1) (_ bv0 1)) true) (_ bv5 46) (ite (and (distinct ((_ extract 4 4) C1) (_ bv0 1)) true) (_ bv4 46) (_ bv3 46)))))
 (let ((?x3221 (ite (and (distinct ((_ extract 8 8) C1) (_ bv0 1)) true) (_ bv8 46) (ite (and (distinct ((_ extract 7 7) C1) (_ bv0 1)) true) (_ bv7 46) (_ bv6 46)))))
 (let ((?x5923 (ite (and (distinct ((_ extract 11 11) C1) (_ bv0 1)) true) (_ bv11 46) (ite (and (distinct ((_ extract 10 10) C1) (_ bv0 1)) true) (_ bv10 46) (_ bv9 46)))))
 (let ((?x4858 (ite (and (distinct ((_ extract 11 6) C1) (_ bv0 6)) true) (ite (and (distinct ((_ extract 11 9) C1) (_ bv0 3)) true) ?x5923 ?x3221) (ite (and (distinct ((_ extract 5 3) C1) (_ bv0 3)) true) ?x6799 ?x3729))))
 (let ((?x5249 (ite (and (distinct ((_ extract 14 14) C1) (_ bv0 1)) true) (_ bv14 46) (ite (and (distinct ((_ extract 13 13) C1) (_ bv0 1)) true) (_ bv13 46) (_ bv12 46)))))
 (let ((?x4840 (ite (and (distinct ((_ extract 17 17) C1) (_ bv0 1)) true) (_ bv17 46) (ite (and (distinct ((_ extract 16 16) C1) (_ bv0 1)) true) (_ bv16 46) (_ bv15 46)))))
 (let ((?x1891 (ite (and (distinct ((_ extract 20 20) C1) (_ bv0 1)) true) (_ bv20 46) (ite (and (distinct ((_ extract 19 19) C1) (_ bv0 1)) true) (_ bv19 46) (_ bv18 46)))))
 (let ((?x2709 (ite (and (distinct ((_ extract 22 21) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 22 22) C1) (_ bv0 1)) true) (_ bv22 46) (_ bv21 46)) ?x1891)))
 (let ((?x4295 (ite (and (distinct ((_ extract 22 18) C1) (_ bv0 5)) true) ?x2709 (ite (and (distinct ((_ extract 17 15) C1) (_ bv0 3)) true) ?x4840 ?x5249))))
 (let ((?x2433 (ite (and (distinct ((_ extract 25 25) C1) (_ bv0 1)) true) (_ bv25 46) (ite (and (distinct ((_ extract 24 24) C1) (_ bv0 1)) true) (_ bv24 46) (_ bv23 46)))))
 (let ((?x3298 (ite (and (distinct ((_ extract 28 28) C1) (_ bv0 1)) true) (_ bv28 46) (ite (and (distinct ((_ extract 27 27) C1) (_ bv0 1)) true) (_ bv27 46) (_ bv26 46)))))
 (let ((?x4819 (ite (and (distinct ((_ extract 31 31) C1) (_ bv0 1)) true) (_ bv31 46) (ite (and (distinct ((_ extract 30 30) C1) (_ bv0 1)) true) (_ bv30 46) (_ bv29 46)))))
 (let ((?x4588 (ite (and (distinct ((_ extract 34 34) C1) (_ bv0 1)) true) (_ bv34 46) (ite (and (distinct ((_ extract 33 33) C1) (_ bv0 1)) true) (_ bv33 46) (_ bv32 46)))))
 (let ((?x3267 (ite (and (distinct ((_ extract 34 29) C1) (_ bv0 6)) true) (ite (and (distinct ((_ extract 34 32) C1) (_ bv0 3)) true) ?x4588 ?x4819) (ite (and (distinct ((_ extract 28 26) C1) (_ bv0 3)) true) ?x3298 ?x2433))))
 (let ((?x3335 (ite (and (distinct ((_ extract 37 37) C1) (_ bv0 1)) true) (_ bv37 46) (ite (and (distinct ((_ extract 36 36) C1) (_ bv0 1)) true) (_ bv36 46) (_ bv35 46)))))
 (let ((?x1332 (ite (and (distinct ((_ extract 40 40) C1) (_ bv0 1)) true) (_ bv40 46) (ite (and (distinct ((_ extract 39 39) C1) (_ bv0 1)) true) (_ bv39 46) (_ bv38 46)))))
 (let ((?x4623 (ite (and (distinct ((_ extract 43 43) C1) (_ bv0 1)) true) (_ bv43 46) (ite (and (distinct ((_ extract 42 42) C1) (_ bv0 1)) true) (_ bv42 46) (_ bv41 46)))))
 (let ((?x2069 (ite (and (distinct ((_ extract 45 44) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 45 45) C1) (_ bv0 1)) true) (_ bv45 46) (_ bv44 46)) ?x4623)))
 (let ((?x5959 (ite (and (distinct ((_ extract 45 41) C1) (_ bv0 5)) true) ?x2069 (ite (and (distinct ((_ extract 40 38) C1) (_ bv0 3)) true) ?x1332 ?x3335))))
 (let ((?x3725 (ite (and (distinct ((_ extract 45 23) C1) (_ bv0 23)) true) (ite (and (distinct ((_ extract 45 35) C1) (_ bv0 11)) true) ?x5959 ?x3267) (ite (and (distinct ((_ extract 22 12) C1) (_ bv0 11)) true) ?x4295 ?x4858))))
 (let ((?x2804 (bvsub ?x3725 ?x6712)))
 (let ((?x3891 (ite (and (distinct ((_ extract 2 2) C1) (_ bv0 1)) true) (_ bv2 32) (ite (and (distinct ((_ extract 1 1) C1) (_ bv0 1)) true) (_ bv1 32) (_ bv0 32)))))
 (let ((?x3550 (ite (and (distinct ((_ extract 5 5) C1) (_ bv0 1)) true) (_ bv5 32) (ite (and (distinct ((_ extract 4 4) C1) (_ bv0 1)) true) (_ bv4 32) (_ bv3 32)))))
 (let ((?x1850 (ite (and (distinct ((_ extract 8 8) C1) (_ bv0 1)) true) (_ bv8 32) (ite (and (distinct ((_ extract 7 7) C1) (_ bv0 1)) true) (_ bv7 32) (_ bv6 32)))))
 (let ((?x2849 (ite (and (distinct ((_ extract 11 11) C1) (_ bv0 1)) true) (_ bv11 32) (ite (and (distinct ((_ extract 10 10) C1) (_ bv0 1)) true) (_ bv10 32) (_ bv9 32)))))
 (let ((?x4648 (ite (and (distinct ((_ extract 11 6) C1) (_ bv0 6)) true) (ite (and (distinct ((_ extract 11 9) C1) (_ bv0 3)) true) ?x2849 ?x1850) (ite (and (distinct ((_ extract 5 3) C1) (_ bv0 3)) true) ?x3550 ?x3891))))
 (let ((?x5025 (ite (and (distinct ((_ extract 14 14) C1) (_ bv0 1)) true) (_ bv14 32) (ite (and (distinct ((_ extract 13 13) C1) (_ bv0 1)) true) (_ bv13 32) (_ bv12 32)))))
 (let ((?x5676 (ite (and (distinct ((_ extract 17 17) C1) (_ bv0 1)) true) (_ bv17 32) (ite (and (distinct ((_ extract 16 16) C1) (_ bv0 1)) true) (_ bv16 32) (_ bv15 32)))))
 (let ((?x5505 (ite (and (distinct ((_ extract 20 20) C1) (_ bv0 1)) true) (_ bv20 32) (ite (and (distinct ((_ extract 19 19) C1) (_ bv0 1)) true) (_ bv19 32) (_ bv18 32)))))
 (let ((?x5456 (ite (and (distinct ((_ extract 22 21) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 22 22) C1) (_ bv0 1)) true) (_ bv22 32) (_ bv21 32)) ?x5505)))
 (let ((?x4848 (ite (and (distinct ((_ extract 22 18) C1) (_ bv0 5)) true) ?x5456 (ite (and (distinct ((_ extract 17 15) C1) (_ bv0 3)) true) ?x5676 ?x5025))))
 (let ((?x4014 (ite (and (distinct ((_ extract 25 25) C1) (_ bv0 1)) true) (_ bv25 32) (ite (and (distinct ((_ extract 24 24) C1) (_ bv0 1)) true) (_ bv24 32) (_ bv23 32)))))
 (let ((?x3310 (ite (and (distinct ((_ extract 28 28) C1) (_ bv0 1)) true) (_ bv28 32) (ite (and (distinct ((_ extract 27 27) C1) (_ bv0 1)) true) (_ bv27 32) (_ bv26 32)))))
 (let ((?x2320 (ite (and (distinct ((_ extract 31 31) C1) (_ bv0 1)) true) (_ bv31 32) (ite (and (distinct ((_ extract 30 30) C1) (_ bv0 1)) true) (_ bv30 32) (_ bv29 32)))))
 (let ((?x2437 (ite (and (distinct ((_ extract 34 34) C1) (_ bv0 1)) true) (_ bv34 32) (ite (and (distinct ((_ extract 33 33) C1) (_ bv0 1)) true) (_ bv33 32) (_ bv32 32)))))
 (let ((?x3735 (ite (and (distinct ((_ extract 34 29) C1) (_ bv0 6)) true) (ite (and (distinct ((_ extract 34 32) C1) (_ bv0 3)) true) ?x2437 ?x2320) (ite (and (distinct ((_ extract 28 26) C1) (_ bv0 3)) true) ?x3310 ?x4014))))
 (let ((?x1298 (ite (and (distinct ((_ extract 37 37) C1) (_ bv0 1)) true) (_ bv37 32) (ite (and (distinct ((_ extract 36 36) C1) (_ bv0 1)) true) (_ bv36 32) (_ bv35 32)))))
 (let ((?x3240 (ite (and (distinct ((_ extract 40 40) C1) (_ bv0 1)) true) (_ bv40 32) (ite (and (distinct ((_ extract 39 39) C1) (_ bv0 1)) true) (_ bv39 32) (_ bv38 32)))))
 (let ((?x3173 (ite (and (distinct ((_ extract 43 43) C1) (_ bv0 1)) true) (_ bv43 32) (ite (and (distinct ((_ extract 42 42) C1) (_ bv0 1)) true) (_ bv42 32) (_ bv41 32)))))
 (let ((?x5518 (ite (and (distinct ((_ extract 45 44) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 45 45) C1) (_ bv0 1)) true) (_ bv45 32) (_ bv44 32)) ?x3173)))
 (let ((?x3861 (ite (and (distinct ((_ extract 45 41) C1) (_ bv0 5)) true) ?x5518 (ite (and (distinct ((_ extract 40 38) C1) (_ bv0 3)) true) ?x3240 ?x1298))))
 (let ((?x6252 (ite (and (distinct ((_ extract 45 23) C1) (_ bv0 23)) true) (ite (and (distinct ((_ extract 45 35) C1) (_ bv0 11)) true) ?x3861 ?x3735) (ite (and (distinct ((_ extract 22 12) C1) (_ bv0 11)) true) ?x4848 ?x4648))))
 (let ((?x4567 (ite (and (distinct ((_ extract 2 2) C2) (_ bv0 1)) true) (_ bv2 32) (ite (and (distinct ((_ extract 1 1) C2) (_ bv0 1)) true) (_ bv1 32) (_ bv0 32)))))
 (let ((?x2039 (ite (and (distinct ((_ extract 5 5) C2) (_ bv0 1)) true) (_ bv5 32) (ite (and (distinct ((_ extract 4 4) C2) (_ bv0 1)) true) (_ bv4 32) (_ bv3 32)))))
 (let ((?x1944 (ite (and (distinct ((_ extract 8 8) C2) (_ bv0 1)) true) (_ bv8 32) (ite (and (distinct ((_ extract 7 7) C2) (_ bv0 1)) true) (_ bv7 32) (_ bv6 32)))))
 (let ((?x4599 (ite (and (distinct ((_ extract 10 9) C2) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) C2) (_ bv0 1)) true) (_ bv10 32) (_ bv9 32)) ?x1944)))
 (let ((?x1765 (ite (and (distinct ((_ extract 10 6) C2) (_ bv0 5)) true) ?x4599 (ite (and (distinct ((_ extract 5 3) C2) (_ bv0 3)) true) ?x2039 ?x4567))))
 (and (and (and (distinct C1 (_ bv0 46)) true) (= (bvand C1 (bvsub C1 (_ bv1 46))) (_ bv0 46))) (and (and (distinct C2 (_ bv0 11)) true) (= (bvand C2 (bvsub C2 (_ bv1 11))) (_ bv0 11))) (bvslt ?x1765 ?x6252) (not (bvult ?x2804 (_ bv46 46))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
