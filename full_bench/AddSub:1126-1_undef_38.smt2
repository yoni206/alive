(set-info :source |
 Generated by Alive 0.1
 More info in N. P. Lopes, D. Menendez, S. Nagarakatte, J. Regehr.
 Provably Correct Peephole Optimizations with Alive. In PLDI'15.
|)

(set-info :status unknown)
(declare-fun C1 () (_ BitVec 43))
(declare-fun |ana_MaskedValueIsZero(%Y, (-1 << (log2(C1) + 1)))| () (_ BitVec 1))
(declare-fun C2 () (_ BitVec 43))
(declare-fun %Y () (_ BitVec 43))
(assert
 (let ((?x2065 (ite (and (distinct ((_ extract 2 2) C1) (_ bv0 1)) true) (_ bv2 43) (ite (and (distinct ((_ extract 1 1) C1) (_ bv0 1)) true) (_ bv1 43) (_ bv0 43)))))
 (let ((?x13380 (ite (and (distinct ((_ extract 5 5) C1) (_ bv0 1)) true) (_ bv5 43) (ite (and (distinct ((_ extract 4 4) C1) (_ bv0 1)) true) (_ bv4 43) (_ bv3 43)))))
 (let ((?x7936 (ite (and (distinct ((_ extract 8 8) C1) (_ bv0 1)) true) (_ bv8 43) (ite (and (distinct ((_ extract 7 7) C1) (_ bv0 1)) true) (_ bv7 43) (_ bv6 43)))))
 (let ((?x11914 (ite (and (distinct ((_ extract 10 9) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) C1) (_ bv0 1)) true) (_ bv10 43) (_ bv9 43)) ?x7936)))
 (let ((?x7861 (ite (and (distinct ((_ extract 10 6) C1) (_ bv0 5)) true) ?x11914 (ite (and (distinct ((_ extract 5 3) C1) (_ bv0 3)) true) ?x13380 ?x2065))))
 (let ((?x28440 (ite (and (distinct ((_ extract 13 13) C1) (_ bv0 1)) true) (_ bv13 43) (ite (and (distinct ((_ extract 12 12) C1) (_ bv0 1)) true) (_ bv12 43) (_ bv11 43)))))
 (let ((?x30650 (ite (and (distinct ((_ extract 16 16) C1) (_ bv0 1)) true) (_ bv16 43) (ite (and (distinct ((_ extract 15 15) C1) (_ bv0 1)) true) (_ bv15 43) (_ bv14 43)))))
 (let ((?x30503 (ite (and (distinct ((_ extract 19 19) C1) (_ bv0 1)) true) (_ bv19 43) (ite (and (distinct ((_ extract 18 18) C1) (_ bv0 1)) true) (_ bv18 43) (_ bv17 43)))))
 (let ((?x28625 (ite (and (distinct ((_ extract 21 20) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 21 21) C1) (_ bv0 1)) true) (_ bv21 43) (_ bv20 43)) ?x30503)))
 (let ((?x31367 (ite (and (distinct ((_ extract 21 17) C1) (_ bv0 5)) true) ?x28625 (ite (and (distinct ((_ extract 16 14) C1) (_ bv0 3)) true) ?x30650 ?x28440))))
 (let ((?x30668 (ite (and (distinct ((_ extract 24 24) C1) (_ bv0 1)) true) (_ bv24 43) (ite (and (distinct ((_ extract 23 23) C1) (_ bv0 1)) true) (_ bv23 43) (_ bv22 43)))))
 (let ((?x28566 (ite (and (distinct ((_ extract 27 27) C1) (_ bv0 1)) true) (_ bv27 43) (ite (and (distinct ((_ extract 26 26) C1) (_ bv0 1)) true) (_ bv26 43) (_ bv25 43)))))
 (let ((?x9523 (ite (and (distinct ((_ extract 30 30) C1) (_ bv0 1)) true) (_ bv30 43) (ite (and (distinct ((_ extract 29 29) C1) (_ bv0 1)) true) (_ bv29 43) (_ bv28 43)))))
 (let ((?x18338 (ite (and (distinct ((_ extract 32 31) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 32 32) C1) (_ bv0 1)) true) (_ bv32 43) (_ bv31 43)) ?x9523)))
 (let ((?x30663 (ite (and (distinct ((_ extract 32 28) C1) (_ bv0 5)) true) ?x18338 (ite (and (distinct ((_ extract 27 25) C1) (_ bv0 3)) true) ?x28566 ?x30668))))
 (let ((?x10313 (ite (and (distinct ((_ extract 35 35) C1) (_ bv0 1)) true) (_ bv35 43) (ite (and (distinct ((_ extract 34 34) C1) (_ bv0 1)) true) (_ bv34 43) (_ bv33 43)))))
 (let ((?x4963 (ite (and (distinct ((_ extract 37 36) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 37 37) C1) (_ bv0 1)) true) (_ bv37 43) (_ bv36 43)) ?x10313)))
 (let ((?x10332 (ite (and (distinct ((_ extract 40 40) C1) (_ bv0 1)) true) (_ bv40 43) (ite (and (distinct ((_ extract 39 39) C1) (_ bv0 1)) true) (_ bv39 43) (_ bv38 43)))))
 (let ((?x9362 (ite (and (distinct ((_ extract 42 41) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 42 42) C1) (_ bv0 1)) true) (_ bv42 43) (_ bv41 43)) ?x10332)))
 (let ((?x28611 (ite (and (distinct ((_ extract 42 33) C1) (_ bv0 10)) true) (ite (and (distinct ((_ extract 42 38) C1) (_ bv0 5)) true) ?x9362 ?x4963) ?x30663)))
 (let ((?x578 (ite (and (distinct ((_ extract 42 22) C1) (_ bv0 21)) true) ?x28611 (ite (and (distinct ((_ extract 21 11) C1) (_ bv0 11)) true) ?x31367 ?x7861))))
 (let ((?x7419 (bvsub (bvsub (_ bv43 43) ?x578) (_ bv1 43))))
 (let (($x31553 (bvult ?x7419 (_ bv43 43))))
 (let (($x8887 (= |ana_MaskedValueIsZero(%Y, (-1 << (log2(C1) + 1)))| (_ bv1 1))))
 (let (($x28565 (and (and (distinct C1 (_ bv0 43)) true) (= (bvand C1 (bvsub C1 (_ bv1 43))) (_ bv0 43)))))
 (let (($x16828 (= C2 (bvneg C1))))
 (let (($x7465 (=> $x8887 (= (bvand %Y (bvshl (_ bv8796093022207 43) (bvadd ?x578 (_ bv1 43)))) (_ bv0 43)))))
 (and $x7465 $x16828 $x28565 $x8887 (not (and $x31553 $x31553)))))))))))))))))))))))))))))))
(check-sat)
