(set-info :status unknown)
(declare-fun C3 () (_ BitVec 11))
(declare-fun C2 () (_ BitVec 11))
(declare-fun C () (_ BitVec 11))
(declare-fun %Op () (_ BitVec 11))
(assert
 (let ((?x21707 (bvsub C2 C3)))
 (let ((?x11330 (ite (and (distinct ((_ extract 2 2) ?x21707) (_ bv0 1)) true) (_ bv2 11) (ite (and (distinct ((_ extract 1 1) ?x21707) (_ bv0 1)) true) (_ bv1 11) (_ bv0 11)))))
 (let ((?x4376 (ite (and (distinct ((_ extract 5 5) ?x21707) (_ bv0 1)) true) (_ bv5 11) (ite (and (distinct ((_ extract 4 4) ?x21707) (_ bv0 1)) true) (_ bv4 11) (_ bv3 11)))))
 (let ((?x1891 (ite (and (distinct ((_ extract 8 8) ?x21707) (_ bv0 1)) true) (_ bv8 11) (ite (and (distinct ((_ extract 7 7) ?x21707) (_ bv0 1)) true) (_ bv7 11) (_ bv6 11)))))
 (let ((?x14053 (ite (and (distinct ((_ extract 10 9) ?x21707) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) ?x21707) (_ bv0 1)) true) (_ bv10 11) (_ bv9 11)) ?x1891)))
 (let ((?x5528 (ite (and (distinct ((_ extract 10 6) ?x21707) (_ bv0 5)) true) ?x14053 (ite (and (distinct ((_ extract 5 3) ?x21707) (_ bv0 3)) true) ?x4376 ?x11330))))
 (let ((?x2401 (ite (and (distinct ((_ extract 2 2) C) (_ bv0 1)) true) (_ bv2 11) (ite (and (distinct ((_ extract 1 1) C) (_ bv0 1)) true) (_ bv1 11) (_ bv0 11)))))
 (let ((?x320 (ite (and (distinct ((_ extract 5 5) C) (_ bv0 1)) true) (_ bv5 11) (ite (and (distinct ((_ extract 4 4) C) (_ bv0 1)) true) (_ bv4 11) (_ bv3 11)))))
 (let ((?x13655 (ite (and (distinct ((_ extract 8 8) C) (_ bv0 1)) true) (_ bv8 11) (ite (and (distinct ((_ extract 7 7) C) (_ bv0 1)) true) (_ bv7 11) (_ bv6 11)))))
 (let ((?x11290 (ite (and (distinct ((_ extract 10 9) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) C) (_ bv0 1)) true) (_ bv10 11) (_ bv9 11)) ?x13655)))
 (let ((?x6158 (ite (and (distinct ((_ extract 10 6) C) (_ bv0 5)) true) ?x11290 (ite (and (distinct ((_ extract 5 3) C) (_ bv0 3)) true) ?x320 ?x2401))))
 (let ((?x22887 (bvsub ?x6158 ?x5528)))
 (let ((?x9994 (ite (bvsgt (_ bv0 11) ?x22887) (_ bv0 11) ?x22887)))
 (let ((?x8358 (bvsub ?x5528 ?x6158)))
 (let ((?x7323 (ite (bvsgt (_ bv0 11) ?x8358) (_ bv0 11) ?x8358)))
 (let ((?x12176 (bvand %Op C)))
 (let (($x14676 (and (distinct (ite (= (ite (= ?x12176 (_ bv0 11)) (_ bv1 1) (_ bv0 1)) (_ bv1 1)) C2 C3) (bvadd (bvxor (bvlshr (bvshl ?x12176 ?x7323) ?x9994) ?x21707) C3)) true)))
 (let ((?x5676 (ite (and (distinct ((_ extract 2 2) C) (_ bv0 1)) true) (_ bv2 32) (ite (and (distinct ((_ extract 1 1) C) (_ bv0 1)) true) (_ bv1 32) (_ bv0 32)))))
 (let ((?x3216 (ite (and (distinct ((_ extract 5 5) C) (_ bv0 1)) true) (_ bv5 32) (ite (and (distinct ((_ extract 4 4) C) (_ bv0 1)) true) (_ bv4 32) (_ bv3 32)))))
 (let ((?x5963 (ite (and (distinct ((_ extract 8 8) C) (_ bv0 1)) true) (_ bv8 32) (ite (and (distinct ((_ extract 7 7) C) (_ bv0 1)) true) (_ bv7 32) (_ bv6 32)))))
 (let ((?x21013 (ite (and (distinct ((_ extract 10 9) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) C) (_ bv0 1)) true) (_ bv10 32) (_ bv9 32)) ?x5963)))
 (let ((?x12479 (ite (and (distinct ((_ extract 10 6) C) (_ bv0 5)) true) ?x21013 (ite (and (distinct ((_ extract 5 3) C) (_ bv0 3)) true) ?x3216 ?x5676))))
 (and (and (and (distinct C (_ bv0 11)) true) (= (bvand C (bvsub C (_ bv1 11))) (_ bv0 11))) (and (and (distinct ?x21707 (_ bv0 11)) true) (= (bvand ?x21707 (bvsub ?x21707 (_ bv1 11))) (_ bv0 11))) (bvslt ?x12479 (_ bv11 32)) $x14676))))))))))))))))))))))))
(check-sat)
