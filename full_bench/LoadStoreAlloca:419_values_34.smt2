(set-info :status unknown)
(declare-fun %x () (_ BitVec 35))
(declare-fun mem0 () (_ BitVec 8))
(declare-fun %p1 () (_ BitVec 64))
(declare-fun %p2 () (_ BitVec 64))
(declare-fun |ana_equivalentAddressValues(%p1, %p2)| () (_ BitVec 1))
(assert
 (let ((?x19414 (concat ((_ extract 7 3) mem0) ((_ extract 2 0) %x))))
 (let ((?x6119 (ite (and (and (distinct %p1 (_ bv0 64)) true) (or true true) (= %p2 %p1)) ?x19414 mem0)))
 (let ((?x5799 ((_ extract 10 3) %x)))
 (let (($x11100 (or true true)))
 (let (($x5280 (and (distinct %p1 (_ bv0 64)) true)))
 (let ((?x18058 (ite (and $x5280 $x11100 (= %p2 (bvadd (bvadd %p1 (_ bv1 64)) (_ bv0 64)))) ?x5799 ?x6119)))
 (let ((?x21161 ((_ extract 18 11) %x)))
 (let ((?x5538 (ite (and $x5280 $x11100 (= %p2 (bvadd (bvadd %p1 (_ bv1 64)) (_ bv1 64)))) ?x21161 ?x18058)))
 (let ((?x21669 ((_ extract 26 19) %x)))
 (let ((?x21435 (ite (and $x5280 $x11100 (= %p2 (bvadd (bvadd %p1 (_ bv1 64)) (_ bv2 64)))) ?x21669 ?x5538)))
 (let ((?x24966 ((_ extract 34 27) %x)))
 (let ((?x8646 (ite (and $x5280 $x11100 (= %p2 (bvadd (bvadd %p1 (_ bv1 64)) (_ bv3 64)))) ?x24966 ?x21435)))
 (let ((?x8952 (ite (and $x5280 $x11100 (= (bvadd (bvadd %p2 (_ bv1 64)) (_ bv0 64)) %p1)) ?x19414 mem0)))
 (let (($x10613 (and $x5280 $x11100 (= (bvadd (bvadd %p2 (_ bv1 64)) (_ bv0 64)) (bvadd (bvadd %p1 (_ bv1 64)) (_ bv0 64))))))
 (let (($x18532 (and $x5280 $x11100 (= (bvadd (bvadd %p2 (_ bv1 64)) (_ bv0 64)) (bvadd (bvadd %p1 (_ bv1 64)) (_ bv1 64))))))
 (let (($x8296 (and $x5280 $x11100 (= (bvadd (bvadd %p2 (_ bv1 64)) (_ bv0 64)) (bvadd (bvadd %p1 (_ bv1 64)) (_ bv2 64))))))
 (let (($x14574 (and $x5280 $x11100 (= (bvadd (bvadd %p2 (_ bv1 64)) (_ bv0 64)) (bvadd (bvadd %p1 (_ bv1 64)) (_ bv3 64))))))
 (let ((?x7503 (ite (and $x5280 $x11100 (= (bvadd (bvadd %p2 (_ bv1 64)) (_ bv1 64)) %p1)) ?x19414 mem0)))
 (let (($x17931 (and $x5280 $x11100 (= (bvadd (bvadd %p2 (_ bv1 64)) (_ bv1 64)) (bvadd (bvadd %p1 (_ bv1 64)) (_ bv0 64))))))
 (let (($x11961 (and $x5280 $x11100 (= (bvadd (bvadd %p2 (_ bv1 64)) (_ bv1 64)) (bvadd (bvadd %p1 (_ bv1 64)) (_ bv1 64))))))
 (let (($x8047 (and $x5280 $x11100 (= (bvadd (bvadd %p2 (_ bv1 64)) (_ bv1 64)) (bvadd (bvadd %p1 (_ bv1 64)) (_ bv2 64))))))
 (let (($x19959 (and $x5280 $x11100 (= (bvadd (bvadd %p2 (_ bv1 64)) (_ bv1 64)) (bvadd (bvadd %p1 (_ bv1 64)) (_ bv3 64))))))
 (let ((?x23267 (ite (and $x5280 $x11100 (= (bvadd (bvadd %p2 (_ bv1 64)) (_ bv2 64)) %p1)) ?x19414 mem0)))
 (let (($x534 (and $x5280 $x11100 (= (bvadd (bvadd %p2 (_ bv1 64)) (_ bv2 64)) (bvadd (bvadd %p1 (_ bv1 64)) (_ bv0 64))))))
 (let (($x5364 (and $x5280 $x11100 (= (bvadd (bvadd %p2 (_ bv1 64)) (_ bv2 64)) (bvadd (bvadd %p1 (_ bv1 64)) (_ bv1 64))))))
 (let (($x23481 (and $x5280 $x11100 (= (bvadd (bvadd %p2 (_ bv1 64)) (_ bv2 64)) (bvadd (bvadd %p1 (_ bv1 64)) (_ bv2 64))))))
 (let (($x17321 (and $x5280 $x11100 (= (bvadd (bvadd %p2 (_ bv1 64)) (_ bv2 64)) (bvadd (bvadd %p1 (_ bv1 64)) (_ bv3 64))))))
 (let ((?x3926 (ite (and $x5280 $x11100 (= (bvadd (bvadd %p2 (_ bv1 64)) (_ bv3 64)) %p1)) ?x19414 mem0)))
 (let (($x22388 (and $x5280 $x11100 (= (bvadd (bvadd %p2 (_ bv1 64)) (_ bv3 64)) (bvadd (bvadd %p1 (_ bv1 64)) (_ bv0 64))))))
 (let (($x13302 (and $x5280 $x11100 (= (bvadd (bvadd %p2 (_ bv1 64)) (_ bv3 64)) (bvadd (bvadd %p1 (_ bv1 64)) (_ bv1 64))))))
 (let (($x785 (and $x5280 $x11100 (= (bvadd (bvadd %p2 (_ bv1 64)) (_ bv3 64)) (bvadd (bvadd %p1 (_ bv1 64)) (_ bv2 64))))))
 (let (($x694 (and $x5280 $x11100 (= (bvadd (bvadd %p2 (_ bv1 64)) (_ bv3 64)) (bvadd (bvadd %p1 (_ bv1 64)) (_ bv3 64))))))
 (let ((?x21644 (concat (ite $x694 ?x24966 (ite $x785 ?x21669 (ite $x13302 ?x21161 (ite $x22388 ?x5799 ?x3926)))) (ite $x17321 ?x24966 (ite $x23481 ?x21669 (ite $x5364 ?x21161 (ite $x534 ?x5799 ?x23267)))))))
 (let ((?x2976 (concat ?x21644 (ite $x19959 ?x24966 (ite $x8047 ?x21669 (ite $x11961 ?x21161 (ite $x17931 ?x5799 ?x7503)))))))
 (let ((?x12644 (concat ?x2976 (ite $x14574 ?x24966 (ite $x8296 ?x21669 (ite $x18532 ?x21161 (ite $x10613 ?x5799 ?x8952)))))))
 (let (($x6292 (= |ana_equivalentAddressValues(%p1, %p2)| (_ bv1 1))))
 (let (($x18896 (and (distinct %p2 (_ bv0 64)) true)))
 (and $x5280 $x11100 $x18896 $x11100 $x18896 $x11100 (=> $x6292 (= %p1 %p2)) $x6292 (and (distinct (concat ?x12644 ((_ extract 2 0) ?x8646)) %x) true))))))))))))))))))))))))))))))))))))))))
(check-sat)
