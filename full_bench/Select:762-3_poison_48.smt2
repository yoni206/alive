(set-info :status unknown)
(declare-fun C () (_ BitVec 52))
(declare-fun C2 () (_ BitVec 11))
(declare-fun C3 () (_ BitVec 11))
(assert
 (let ((?x2244 (ite (and (distinct ((_ extract 3 2) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 3 3) C) (_ bv0 1)) true) (_ bv3 32) (_ bv2 32)) (ite (and (distinct ((_ extract 1 1) C) (_ bv0 1)) true) (_ bv1 32) (_ bv0 32)))))
 (let ((?x3163 (ite (and (distinct ((_ extract 6 6) C) (_ bv0 1)) true) (_ bv6 32) (ite (and (distinct ((_ extract 5 5) C) (_ bv0 1)) true) (_ bv5 32) (_ bv4 32)))))
 (let ((?x7771 (ite (and (distinct ((_ extract 9 9) C) (_ bv0 1)) true) (_ bv9 32) (ite (and (distinct ((_ extract 8 8) C) (_ bv0 1)) true) (_ bv8 32) (_ bv7 32)))))
 (let ((?x6935 (ite (and (distinct ((_ extract 12 12) C) (_ bv0 1)) true) (_ bv12 32) (ite (and (distinct ((_ extract 11 11) C) (_ bv0 1)) true) (_ bv11 32) (_ bv10 32)))))
 (let ((?x7590 (ite (and (distinct ((_ extract 12 7) C) (_ bv0 6)) true) (ite (and (distinct ((_ extract 12 10) C) (_ bv0 3)) true) ?x6935 ?x7771) (ite (and (distinct ((_ extract 6 4) C) (_ bv0 3)) true) ?x3163 ?x2244))))
 (let ((?x6031 (ite (and (distinct ((_ extract 16 15) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 16 16) C) (_ bv0 1)) true) (_ bv16 32) (_ bv15 32)) (ite (and (distinct ((_ extract 14 14) C) (_ bv0 1)) true) (_ bv14 32) (_ bv13 32)))))
 (let ((?x5465 (ite (and (distinct ((_ extract 19 19) C) (_ bv0 1)) true) (_ bv19 32) (ite (and (distinct ((_ extract 18 18) C) (_ bv0 1)) true) (_ bv18 32) (_ bv17 32)))))
 (let ((?x4906 (ite (and (distinct ((_ extract 22 22) C) (_ bv0 1)) true) (_ bv22 32) (ite (and (distinct ((_ extract 21 21) C) (_ bv0 1)) true) (_ bv21 32) (_ bv20 32)))))
 (let ((?x3640 (ite (and (distinct ((_ extract 25 25) C) (_ bv0 1)) true) (_ bv25 32) (ite (and (distinct ((_ extract 24 24) C) (_ bv0 1)) true) (_ bv24 32) (_ bv23 32)))))
 (let ((?x6341 (ite (and (distinct ((_ extract 25 20) C) (_ bv0 6)) true) (ite (and (distinct ((_ extract 25 23) C) (_ bv0 3)) true) ?x3640 ?x4906) (ite (and (distinct ((_ extract 19 17) C) (_ bv0 3)) true) ?x5465 ?x6031))))
 (let ((?x3513 (ite (and (distinct ((_ extract 29 28) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 29 29) C) (_ bv0 1)) true) (_ bv29 32) (_ bv28 32)) (ite (and (distinct ((_ extract 27 27) C) (_ bv0 1)) true) (_ bv27 32) (_ bv26 32)))))
 (let ((?x2296 (ite (and (distinct ((_ extract 32 32) C) (_ bv0 1)) true) (_ bv32 32) (ite (and (distinct ((_ extract 31 31) C) (_ bv0 1)) true) (_ bv31 32) (_ bv30 32)))))
 (let ((?x1790 (ite (and (distinct ((_ extract 35 35) C) (_ bv0 1)) true) (_ bv35 32) (ite (and (distinct ((_ extract 34 34) C) (_ bv0 1)) true) (_ bv34 32) (_ bv33 32)))))
 (let ((?x5497 (ite (and (distinct ((_ extract 38 38) C) (_ bv0 1)) true) (_ bv38 32) (ite (and (distinct ((_ extract 37 37) C) (_ bv0 1)) true) (_ bv37 32) (_ bv36 32)))))
 (let ((?x3467 (ite (and (distinct ((_ extract 38 33) C) (_ bv0 6)) true) (ite (and (distinct ((_ extract 38 36) C) (_ bv0 3)) true) ?x5497 ?x1790) (ite (and (distinct ((_ extract 32 30) C) (_ bv0 3)) true) ?x2296 ?x3513))))
 (let ((?x6670 (ite (and (distinct ((_ extract 42 41) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 42 42) C) (_ bv0 1)) true) (_ bv42 32) (_ bv41 32)) (ite (and (distinct ((_ extract 40 40) C) (_ bv0 1)) true) (_ bv40 32) (_ bv39 32)))))
 (let ((?x5843 (ite (and (distinct ((_ extract 45 45) C) (_ bv0 1)) true) (_ bv45 32) (ite (and (distinct ((_ extract 44 44) C) (_ bv0 1)) true) (_ bv44 32) (_ bv43 32)))))
 (let ((?x2008 (ite (and (distinct ((_ extract 48 48) C) (_ bv0 1)) true) (_ bv48 32) (ite (and (distinct ((_ extract 47 47) C) (_ bv0 1)) true) (_ bv47 32) (_ bv46 32)))))
 (let ((?x7935 (ite (and (distinct ((_ extract 51 51) C) (_ bv0 1)) true) (_ bv51 32) (ite (and (distinct ((_ extract 50 50) C) (_ bv0 1)) true) (_ bv50 32) (_ bv49 32)))))
 (let ((?x3104 (ite (and (distinct ((_ extract 51 46) C) (_ bv0 6)) true) (ite (and (distinct ((_ extract 51 49) C) (_ bv0 3)) true) ?x7935 ?x2008) (ite (and (distinct ((_ extract 45 43) C) (_ bv0 3)) true) ?x5843 ?x6670))))
 (let ((?x6106 (ite (and (distinct ((_ extract 51 26) C) (_ bv0 26)) true) (ite (and (distinct ((_ extract 51 39) C) (_ bv0 13)) true) ?x3104 ?x3467) (ite (and (distinct ((_ extract 25 13) C) (_ bv0 13)) true) ?x6341 ?x7590))))
 (let (($x6730 (and (and (distinct (bvsub C3 C2) (_ bv0 11)) true) (= (bvand (bvsub C3 C2) (bvsub (bvsub C3 C2) (_ bv1 11))) (_ bv0 11)))))
 (and (and (and (distinct C (_ bv0 52)) true) (= (bvand C (bvsub C (_ bv1 52))) (_ bv0 52))) $x6730 (bvslt ?x6106 (_ bv11 32)) false))))))))))))))))))))))))
(check-sat)
