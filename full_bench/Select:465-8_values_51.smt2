(set-info :status unknown)
(declare-fun %Y () (_ BitVec 11))
(declare-fun C2 () (_ BitVec 11))
(declare-fun C1 () (_ BitVec 52))
(declare-fun %X () (_ BitVec 52))
(assert
 (let ((?x6615 (ite (and (distinct ((_ extract 2 2) C2) (_ bv0 1)) true) (_ bv2 52) (ite (and (distinct ((_ extract 1 1) C2) (_ bv0 1)) true) (_ bv1 52) (_ bv0 52)))))
 (let ((?x3020 (ite (and (distinct ((_ extract 5 5) C2) (_ bv0 1)) true) (_ bv5 52) (ite (and (distinct ((_ extract 4 4) C2) (_ bv0 1)) true) (_ bv4 52) (_ bv3 52)))))
 (let ((?x3867 (ite (and (distinct ((_ extract 8 8) C2) (_ bv0 1)) true) (_ bv8 52) (ite (and (distinct ((_ extract 7 7) C2) (_ bv0 1)) true) (_ bv7 52) (_ bv6 52)))))
 (let ((?x3449 (ite (and (distinct ((_ extract 10 9) C2) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) C2) (_ bv0 1)) true) (_ bv10 52) (_ bv9 52)) ?x3867)))
 (let ((?x3955 (ite (and (distinct ((_ extract 10 6) C2) (_ bv0 5)) true) ?x3449 (ite (and (distinct ((_ extract 5 3) C2) (_ bv0 3)) true) ?x3020 ?x6615))))
 (let ((?x6061 (ite (and (distinct ((_ extract 3 2) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 3 3) C1) (_ bv0 1)) true) (_ bv3 52) (_ bv2 52)) (ite (and (distinct ((_ extract 1 1) C1) (_ bv0 1)) true) (_ bv1 52) (_ bv0 52)))))
 (let ((?x2594 (ite (and (distinct ((_ extract 6 6) C1) (_ bv0 1)) true) (_ bv6 52) (ite (and (distinct ((_ extract 5 5) C1) (_ bv0 1)) true) (_ bv5 52) (_ bv4 52)))))
 (let ((?x4478 (ite (and (distinct ((_ extract 9 9) C1) (_ bv0 1)) true) (_ bv9 52) (ite (and (distinct ((_ extract 8 8) C1) (_ bv0 1)) true) (_ bv8 52) (_ bv7 52)))))
 (let ((?x5618 (ite (and (distinct ((_ extract 12 12) C1) (_ bv0 1)) true) (_ bv12 52) (ite (and (distinct ((_ extract 11 11) C1) (_ bv0 1)) true) (_ bv11 52) (_ bv10 52)))))
 (let ((?x3078 (ite (and (distinct ((_ extract 12 7) C1) (_ bv0 6)) true) (ite (and (distinct ((_ extract 12 10) C1) (_ bv0 3)) true) ?x5618 ?x4478) (ite (and (distinct ((_ extract 6 4) C1) (_ bv0 3)) true) ?x2594 ?x6061))))
 (let ((?x4993 (ite (and (distinct ((_ extract 16 15) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 16 16) C1) (_ bv0 1)) true) (_ bv16 52) (_ bv15 52)) (ite (and (distinct ((_ extract 14 14) C1) (_ bv0 1)) true) (_ bv14 52) (_ bv13 52)))))
 (let ((?x4989 (ite (and (distinct ((_ extract 19 19) C1) (_ bv0 1)) true) (_ bv19 52) (ite (and (distinct ((_ extract 18 18) C1) (_ bv0 1)) true) (_ bv18 52) (_ bv17 52)))))
 (let ((?x4084 (ite (and (distinct ((_ extract 22 22) C1) (_ bv0 1)) true) (_ bv22 52) (ite (and (distinct ((_ extract 21 21) C1) (_ bv0 1)) true) (_ bv21 52) (_ bv20 52)))))
 (let ((?x5161 (ite (and (distinct ((_ extract 25 25) C1) (_ bv0 1)) true) (_ bv25 52) (ite (and (distinct ((_ extract 24 24) C1) (_ bv0 1)) true) (_ bv24 52) (_ bv23 52)))))
 (let ((?x3497 (ite (and (distinct ((_ extract 25 20) C1) (_ bv0 6)) true) (ite (and (distinct ((_ extract 25 23) C1) (_ bv0 3)) true) ?x5161 ?x4084) (ite (and (distinct ((_ extract 19 17) C1) (_ bv0 3)) true) ?x4989 ?x4993))))
 (let ((?x2268 (ite (and (distinct ((_ extract 29 28) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 29 29) C1) (_ bv0 1)) true) (_ bv29 52) (_ bv28 52)) (ite (and (distinct ((_ extract 27 27) C1) (_ bv0 1)) true) (_ bv27 52) (_ bv26 52)))))
 (let ((?x3400 (ite (and (distinct ((_ extract 32 32) C1) (_ bv0 1)) true) (_ bv32 52) (ite (and (distinct ((_ extract 31 31) C1) (_ bv0 1)) true) (_ bv31 52) (_ bv30 52)))))
 (let ((?x1306 (ite (and (distinct ((_ extract 35 35) C1) (_ bv0 1)) true) (_ bv35 52) (ite (and (distinct ((_ extract 34 34) C1) (_ bv0 1)) true) (_ bv34 52) (_ bv33 52)))))
 (let ((?x6472 (ite (and (distinct ((_ extract 38 38) C1) (_ bv0 1)) true) (_ bv38 52) (ite (and (distinct ((_ extract 37 37) C1) (_ bv0 1)) true) (_ bv37 52) (_ bv36 52)))))
 (let ((?x4122 (ite (and (distinct ((_ extract 38 33) C1) (_ bv0 6)) true) (ite (and (distinct ((_ extract 38 36) C1) (_ bv0 3)) true) ?x6472 ?x1306) (ite (and (distinct ((_ extract 32 30) C1) (_ bv0 3)) true) ?x3400 ?x2268))))
 (let ((?x6456 (ite (and (distinct ((_ extract 42 41) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 42 42) C1) (_ bv0 1)) true) (_ bv42 52) (_ bv41 52)) (ite (and (distinct ((_ extract 40 40) C1) (_ bv0 1)) true) (_ bv40 52) (_ bv39 52)))))
 (let ((?x4593 (ite (and (distinct ((_ extract 45 45) C1) (_ bv0 1)) true) (_ bv45 52) (ite (and (distinct ((_ extract 44 44) C1) (_ bv0 1)) true) (_ bv44 52) (_ bv43 52)))))
 (let ((?x5099 (ite (and (distinct ((_ extract 48 48) C1) (_ bv0 1)) true) (_ bv48 52) (ite (and (distinct ((_ extract 47 47) C1) (_ bv0 1)) true) (_ bv47 52) (_ bv46 52)))))
 (let ((?x2278 (ite (and (distinct ((_ extract 51 51) C1) (_ bv0 1)) true) (_ bv51 52) (ite (and (distinct ((_ extract 50 50) C1) (_ bv0 1)) true) (_ bv50 52) (_ bv49 52)))))
 (let ((?x5367 (ite (and (distinct ((_ extract 51 46) C1) (_ bv0 6)) true) (ite (and (distinct ((_ extract 51 49) C1) (_ bv0 3)) true) ?x2278 ?x5099) (ite (and (distinct ((_ extract 45 43) C1) (_ bv0 3)) true) ?x4593 ?x6456))))
 (let ((?x2864 (ite (and (distinct ((_ extract 51 26) C1) (_ bv0 26)) true) (ite (and (distinct ((_ extract 51 39) C1) (_ bv0 13)) true) ?x5367 ?x4122) (ite (and (distinct ((_ extract 25 13) C1) (_ bv0 13)) true) ?x3497 ?x3078))))
 (let ((?x1333 (bvsub ?x2864 ?x3955)))
 (let ((?x1869 (bvand %X C1)))
 (let ((?x3622 (bvor %Y C2)))
 (let (($x3063 (and (distinct (ite (= (ite (and (distinct ?x1869 (_ bv0 52)) true) (_ bv1 1) (_ bv0 1)) (_ bv1 1)) ?x3622 %Y) (bvor ((_ extract 10 0) (bvlshr ?x1869 ?x1333)) %Y)) true)))
 (let ((?x1224 (ite (and (distinct ((_ extract 3 2) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 3 3) C1) (_ bv0 1)) true) (_ bv3 32) (_ bv2 32)) (ite (and (distinct ((_ extract 1 1) C1) (_ bv0 1)) true) (_ bv1 32) (_ bv0 32)))))
 (let ((?x4112 (ite (and (distinct ((_ extract 6 6) C1) (_ bv0 1)) true) (_ bv6 32) (ite (and (distinct ((_ extract 5 5) C1) (_ bv0 1)) true) (_ bv5 32) (_ bv4 32)))))
 (let ((?x2465 (ite (and (distinct ((_ extract 9 9) C1) (_ bv0 1)) true) (_ bv9 32) (ite (and (distinct ((_ extract 8 8) C1) (_ bv0 1)) true) (_ bv8 32) (_ bv7 32)))))
 (let ((?x2020 (ite (and (distinct ((_ extract 12 12) C1) (_ bv0 1)) true) (_ bv12 32) (ite (and (distinct ((_ extract 11 11) C1) (_ bv0 1)) true) (_ bv11 32) (_ bv10 32)))))
 (let ((?x5418 (ite (and (distinct ((_ extract 12 7) C1) (_ bv0 6)) true) (ite (and (distinct ((_ extract 12 10) C1) (_ bv0 3)) true) ?x2020 ?x2465) (ite (and (distinct ((_ extract 6 4) C1) (_ bv0 3)) true) ?x4112 ?x1224))))
 (let ((?x2844 (ite (and (distinct ((_ extract 16 15) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 16 16) C1) (_ bv0 1)) true) (_ bv16 32) (_ bv15 32)) (ite (and (distinct ((_ extract 14 14) C1) (_ bv0 1)) true) (_ bv14 32) (_ bv13 32)))))
 (let ((?x2352 (ite (and (distinct ((_ extract 19 19) C1) (_ bv0 1)) true) (_ bv19 32) (ite (and (distinct ((_ extract 18 18) C1) (_ bv0 1)) true) (_ bv18 32) (_ bv17 32)))))
 (let ((?x1749 (ite (and (distinct ((_ extract 22 22) C1) (_ bv0 1)) true) (_ bv22 32) (ite (and (distinct ((_ extract 21 21) C1) (_ bv0 1)) true) (_ bv21 32) (_ bv20 32)))))
 (let ((?x3310 (ite (and (distinct ((_ extract 25 25) C1) (_ bv0 1)) true) (_ bv25 32) (ite (and (distinct ((_ extract 24 24) C1) (_ bv0 1)) true) (_ bv24 32) (_ bv23 32)))))
 (let ((?x5696 (ite (and (distinct ((_ extract 25 20) C1) (_ bv0 6)) true) (ite (and (distinct ((_ extract 25 23) C1) (_ bv0 3)) true) ?x3310 ?x1749) (ite (and (distinct ((_ extract 19 17) C1) (_ bv0 3)) true) ?x2352 ?x2844))))
 (let ((?x5122 (ite (and (distinct ((_ extract 29 28) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 29 29) C1) (_ bv0 1)) true) (_ bv29 32) (_ bv28 32)) (ite (and (distinct ((_ extract 27 27) C1) (_ bv0 1)) true) (_ bv27 32) (_ bv26 32)))))
 (let ((?x4051 (ite (and (distinct ((_ extract 32 32) C1) (_ bv0 1)) true) (_ bv32 32) (ite (and (distinct ((_ extract 31 31) C1) (_ bv0 1)) true) (_ bv31 32) (_ bv30 32)))))
 (let ((?x3002 (ite (and (distinct ((_ extract 35 35) C1) (_ bv0 1)) true) (_ bv35 32) (ite (and (distinct ((_ extract 34 34) C1) (_ bv0 1)) true) (_ bv34 32) (_ bv33 32)))))
 (let ((?x6366 (ite (and (distinct ((_ extract 38 38) C1) (_ bv0 1)) true) (_ bv38 32) (ite (and (distinct ((_ extract 37 37) C1) (_ bv0 1)) true) (_ bv37 32) (_ bv36 32)))))
 (let ((?x5586 (ite (and (distinct ((_ extract 38 33) C1) (_ bv0 6)) true) (ite (and (distinct ((_ extract 38 36) C1) (_ bv0 3)) true) ?x6366 ?x3002) (ite (and (distinct ((_ extract 32 30) C1) (_ bv0 3)) true) ?x4051 ?x5122))))
 (let ((?x2017 (ite (and (distinct ((_ extract 42 41) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 42 42) C1) (_ bv0 1)) true) (_ bv42 32) (_ bv41 32)) (ite (and (distinct ((_ extract 40 40) C1) (_ bv0 1)) true) (_ bv40 32) (_ bv39 32)))))
 (let ((?x4162 (ite (and (distinct ((_ extract 45 45) C1) (_ bv0 1)) true) (_ bv45 32) (ite (and (distinct ((_ extract 44 44) C1) (_ bv0 1)) true) (_ bv44 32) (_ bv43 32)))))
 (let ((?x2625 (ite (and (distinct ((_ extract 48 48) C1) (_ bv0 1)) true) (_ bv48 32) (ite (and (distinct ((_ extract 47 47) C1) (_ bv0 1)) true) (_ bv47 32) (_ bv46 32)))))
 (let ((?x4445 (ite (and (distinct ((_ extract 51 51) C1) (_ bv0 1)) true) (_ bv51 32) (ite (and (distinct ((_ extract 50 50) C1) (_ bv0 1)) true) (_ bv50 32) (_ bv49 32)))))
 (let ((?x2162 (ite (and (distinct ((_ extract 51 46) C1) (_ bv0 6)) true) (ite (and (distinct ((_ extract 51 49) C1) (_ bv0 3)) true) ?x4445 ?x2625) (ite (and (distinct ((_ extract 45 43) C1) (_ bv0 3)) true) ?x4162 ?x2017))))
 (let ((?x2374 (ite (and (distinct ((_ extract 51 26) C1) (_ bv0 26)) true) (ite (and (distinct ((_ extract 51 39) C1) (_ bv0 13)) true) ?x2162 ?x5586) (ite (and (distinct ((_ extract 25 13) C1) (_ bv0 13)) true) ?x5696 ?x5418))))
 (let ((?x6347 (ite (and (distinct ((_ extract 2 2) C2) (_ bv0 1)) true) (_ bv2 32) (ite (and (distinct ((_ extract 1 1) C2) (_ bv0 1)) true) (_ bv1 32) (_ bv0 32)))))
 (let ((?x2824 (ite (and (distinct ((_ extract 5 5) C2) (_ bv0 1)) true) (_ bv5 32) (ite (and (distinct ((_ extract 4 4) C2) (_ bv0 1)) true) (_ bv4 32) (_ bv3 32)))))
 (let ((?x4028 (ite (and (distinct ((_ extract 8 8) C2) (_ bv0 1)) true) (_ bv8 32) (ite (and (distinct ((_ extract 7 7) C2) (_ bv0 1)) true) (_ bv7 32) (_ bv6 32)))))
 (let ((?x6167 (ite (and (distinct ((_ extract 10 9) C2) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) C2) (_ bv0 1)) true) (_ bv10 32) (_ bv9 32)) ?x4028)))
 (let ((?x4091 (ite (and (distinct ((_ extract 10 6) C2) (_ bv0 5)) true) ?x6167 (ite (and (distinct ((_ extract 5 3) C2) (_ bv0 3)) true) ?x2824 ?x6347))))
 (and (and (and (distinct C1 (_ bv0 52)) true) (= (bvand C1 (bvsub C1 (_ bv1 52))) (_ bv0 52))) (and (and (distinct C2 (_ bv0 11)) true) (= (bvand C2 (bvsub C2 (_ bv1 11))) (_ bv0 11))) (bvslt ?x4091 ?x2374) $x3063))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
