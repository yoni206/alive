(set-info :status unknown)
(declare-fun mem0 () (_ BitVec 8))
(declare-fun C () (_ BitVec 64))
(declare-fun C2 () (_ BitVec 11))
(declare-fun C3 () (_ BitVec 11))
(assert
 (let ((?x3009 (ite (and (distinct ((_ extract 3 2) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 3 3) C) (_ bv0 1)) true) (_ bv3 32) (_ bv2 32)) (ite (and (distinct ((_ extract 1 1) C) (_ bv0 1)) true) (_ bv1 32) (_ bv0 32)))))
 (let ((?x1035 (ite (and (distinct ((_ extract 7 6) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 7 7) C) (_ bv0 1)) true) (_ bv7 32) (_ bv6 32)) (ite (and (distinct ((_ extract 5 5) C) (_ bv0 1)) true) (_ bv5 32) (_ bv4 32)))))
 (let ((?x18197 (ite (and (distinct ((_ extract 11 10) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 11 11) C) (_ bv0 1)) true) (_ bv11 32) (_ bv10 32)) (ite (and (distinct ((_ extract 9 9) C) (_ bv0 1)) true) (_ bv9 32) (_ bv8 32)))))
 (let ((?x15447 (ite (and (distinct ((_ extract 15 14) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 15 15) C) (_ bv0 1)) true) (_ bv15 32) (_ bv14 32)) (ite (and (distinct ((_ extract 13 13) C) (_ bv0 1)) true) (_ bv13 32) (_ bv12 32)))))
 (let ((?x17604 (ite (and (distinct ((_ extract 15 8) C) (_ bv0 8)) true) (ite (and (distinct ((_ extract 15 12) C) (_ bv0 4)) true) ?x15447 ?x18197) (ite (and (distinct ((_ extract 7 4) C) (_ bv0 4)) true) ?x1035 ?x3009))))
 (let ((?x20847 (ite (and (distinct ((_ extract 19 18) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 19 19) C) (_ bv0 1)) true) (_ bv19 32) (_ bv18 32)) (ite (and (distinct ((_ extract 17 17) C) (_ bv0 1)) true) (_ bv17 32) (_ bv16 32)))))
 (let ((?x16088 (ite (and (distinct ((_ extract 23 22) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 23 23) C) (_ bv0 1)) true) (_ bv23 32) (_ bv22 32)) (ite (and (distinct ((_ extract 21 21) C) (_ bv0 1)) true) (_ bv21 32) (_ bv20 32)))))
 (let ((?x13707 (ite (and (distinct ((_ extract 27 26) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 27 27) C) (_ bv0 1)) true) (_ bv27 32) (_ bv26 32)) (ite (and (distinct ((_ extract 25 25) C) (_ bv0 1)) true) (_ bv25 32) (_ bv24 32)))))
 (let ((?x4824 (ite (and (distinct ((_ extract 31 30) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 31 31) C) (_ bv0 1)) true) (_ bv31 32) (_ bv30 32)) (ite (and (distinct ((_ extract 29 29) C) (_ bv0 1)) true) (_ bv29 32) (_ bv28 32)))))
 (let ((?x20317 (ite (and (distinct ((_ extract 31 24) C) (_ bv0 8)) true) (ite (and (distinct ((_ extract 31 28) C) (_ bv0 4)) true) ?x4824 ?x13707) (ite (and (distinct ((_ extract 23 20) C) (_ bv0 4)) true) ?x16088 ?x20847))))
 (let ((?x7497 (ite (and (distinct ((_ extract 35 34) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 35 35) C) (_ bv0 1)) true) (_ bv35 32) (_ bv34 32)) (ite (and (distinct ((_ extract 33 33) C) (_ bv0 1)) true) (_ bv33 32) (_ bv32 32)))))
 (let ((?x5103 (ite (and (distinct ((_ extract 39 38) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 39 39) C) (_ bv0 1)) true) (_ bv39 32) (_ bv38 32)) (ite (and (distinct ((_ extract 37 37) C) (_ bv0 1)) true) (_ bv37 32) (_ bv36 32)))))
 (let ((?x2405 (ite (and (distinct ((_ extract 43 42) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 43 43) C) (_ bv0 1)) true) (_ bv43 32) (_ bv42 32)) (ite (and (distinct ((_ extract 41 41) C) (_ bv0 1)) true) (_ bv41 32) (_ bv40 32)))))
 (let ((?x504 (ite (and (distinct ((_ extract 47 46) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 47 47) C) (_ bv0 1)) true) (_ bv47 32) (_ bv46 32)) (ite (and (distinct ((_ extract 45 45) C) (_ bv0 1)) true) (_ bv45 32) (_ bv44 32)))))
 (let ((?x6790 (ite (and (distinct ((_ extract 47 40) C) (_ bv0 8)) true) (ite (and (distinct ((_ extract 47 44) C) (_ bv0 4)) true) ?x504 ?x2405) (ite (and (distinct ((_ extract 39 36) C) (_ bv0 4)) true) ?x5103 ?x7497))))
 (let ((?x16217 (ite (and (distinct ((_ extract 51 50) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 51 51) C) (_ bv0 1)) true) (_ bv51 32) (_ bv50 32)) (ite (and (distinct ((_ extract 49 49) C) (_ bv0 1)) true) (_ bv49 32) (_ bv48 32)))))
 (let ((?x17941 (ite (and (distinct ((_ extract 55 54) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 55 55) C) (_ bv0 1)) true) (_ bv55 32) (_ bv54 32)) (ite (and (distinct ((_ extract 53 53) C) (_ bv0 1)) true) (_ bv53 32) (_ bv52 32)))))
 (let ((?x1272 (ite (and (distinct ((_ extract 59 58) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 59 59) C) (_ bv0 1)) true) (_ bv59 32) (_ bv58 32)) (ite (and (distinct ((_ extract 57 57) C) (_ bv0 1)) true) (_ bv57 32) (_ bv56 32)))))
 (let ((?x10186 (ite (and (distinct ((_ extract 63 62) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 63 63) C) (_ bv0 1)) true) (_ bv63 32) (_ bv62 32)) (ite (and (distinct ((_ extract 61 61) C) (_ bv0 1)) true) (_ bv61 32) (_ bv60 32)))))
 (let ((?x18006 (ite (and (distinct ((_ extract 63 56) C) (_ bv0 8)) true) (ite (and (distinct ((_ extract 63 60) C) (_ bv0 4)) true) ?x10186 ?x1272) (ite (and (distinct ((_ extract 55 52) C) (_ bv0 4)) true) ?x17941 ?x16217))))
 (let ((?x18471 (ite (and (distinct ((_ extract 63 32) C) (_ bv0 32)) true) (ite (and (distinct ((_ extract 63 48) C) (_ bv0 16)) true) ?x18006 ?x6790) (ite (and (distinct ((_ extract 31 16) C) (_ bv0 16)) true) ?x20317 ?x17604))))
 (let (($x3985 (and (and (distinct (bvsub C3 C2) (_ bv0 11)) true) (= (bvand (bvsub C3 C2) (bvsub (bvsub C3 C2) (_ bv1 11))) (_ bv0 11)))))
 (and (and (and (distinct C (_ bv0 64)) true) (= (bvand C (bvsub C (_ bv1 64))) (_ bv0 64))) $x3985 (bvslt ?x18471 (_ bv11 32)) (and (distinct mem0 mem0) true)))))))))))))))))))))))))
(check-sat)
