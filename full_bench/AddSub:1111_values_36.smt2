(set-info :status unknown)
(declare-fun C2 () (_ BitVec 42))
(declare-fun %Y () (_ BitVec 42))
(declare-fun C1 () (_ BitVec 42))
(assert
 (let ((?x5427 (ite (and (distinct ((_ extract 2 2) C2) (_ bv0 1)) true) (_ bv2 42) (ite (and (distinct ((_ extract 1 1) C2) (_ bv0 1)) true) (_ bv1 42) (_ bv0 42)))))
 (let ((?x1810 (ite (and (distinct ((_ extract 5 5) C2) (_ bv0 1)) true) (_ bv5 42) (ite (and (distinct ((_ extract 4 4) C2) (_ bv0 1)) true) (_ bv4 42) (_ bv3 42)))))
 (let ((?x2776 (ite (and (distinct ((_ extract 8 8) C2) (_ bv0 1)) true) (_ bv8 42) (ite (and (distinct ((_ extract 7 7) C2) (_ bv0 1)) true) (_ bv7 42) (_ bv6 42)))))
 (let ((?x2257 (ite (and (distinct ((_ extract 10 9) C2) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) C2) (_ bv0 1)) true) (_ bv10 42) (_ bv9 42)) ?x2776)))
 (let ((?x5092 (ite (and (distinct ((_ extract 10 6) C2) (_ bv0 5)) true) ?x2257 (ite (and (distinct ((_ extract 5 3) C2) (_ bv0 3)) true) ?x1810 ?x5427))))
 (let ((?x1991 (ite (and (distinct ((_ extract 13 13) C2) (_ bv0 1)) true) (_ bv13 42) (ite (and (distinct ((_ extract 12 12) C2) (_ bv0 1)) true) (_ bv12 42) (_ bv11 42)))))
 (let ((?x2923 (ite (and (distinct ((_ extract 15 14) C2) (_ bv0 2)) true) (ite (and (distinct ((_ extract 15 15) C2) (_ bv0 1)) true) (_ bv15 42) (_ bv14 42)) ?x1991)))
 (let ((?x2309 (ite (and (distinct ((_ extract 18 18) C2) (_ bv0 1)) true) (_ bv18 42) (ite (and (distinct ((_ extract 17 17) C2) (_ bv0 1)) true) (_ bv17 42) (_ bv16 42)))))
 (let ((?x1590 (ite (and (distinct ((_ extract 20 19) C2) (_ bv0 2)) true) (ite (and (distinct ((_ extract 20 20) C2) (_ bv0 1)) true) (_ bv20 42) (_ bv19 42)) ?x2309)))
 (let ((?x442 (ite (and (distinct ((_ extract 20 11) C2) (_ bv0 10)) true) (ite (and (distinct ((_ extract 20 16) C2) (_ bv0 5)) true) ?x1590 ?x2923) ?x5092)))
 (let ((?x5369 (ite (and (distinct ((_ extract 23 23) C2) (_ bv0 1)) true) (_ bv23 42) (ite (and (distinct ((_ extract 22 22) C2) (_ bv0 1)) true) (_ bv22 42) (_ bv21 42)))))
 (let ((?x5695 (ite (and (distinct ((_ extract 26 26) C2) (_ bv0 1)) true) (_ bv26 42) (ite (and (distinct ((_ extract 25 25) C2) (_ bv0 1)) true) (_ bv25 42) (_ bv24 42)))))
 (let ((?x2640 (ite (and (distinct ((_ extract 29 29) C2) (_ bv0 1)) true) (_ bv29 42) (ite (and (distinct ((_ extract 28 28) C2) (_ bv0 1)) true) (_ bv28 42) (_ bv27 42)))))
 (let ((?x5868 (ite (and (distinct ((_ extract 31 30) C2) (_ bv0 2)) true) (ite (and (distinct ((_ extract 31 31) C2) (_ bv0 1)) true) (_ bv31 42) (_ bv30 42)) ?x2640)))
 (let ((?x2678 (ite (and (distinct ((_ extract 31 27) C2) (_ bv0 5)) true) ?x5868 (ite (and (distinct ((_ extract 26 24) C2) (_ bv0 3)) true) ?x5695 ?x5369))))
 (let ((?x6370 (ite (and (distinct ((_ extract 34 34) C2) (_ bv0 1)) true) (_ bv34 42) (ite (and (distinct ((_ extract 33 33) C2) (_ bv0 1)) true) (_ bv33 42) (_ bv32 42)))))
 (let ((?x4178 (ite (and (distinct ((_ extract 36 35) C2) (_ bv0 2)) true) (ite (and (distinct ((_ extract 36 36) C2) (_ bv0 1)) true) (_ bv36 42) (_ bv35 42)) ?x6370)))
 (let ((?x6860 (ite (and (distinct ((_ extract 39 39) C2) (_ bv0 1)) true) (_ bv39 42) (ite (and (distinct ((_ extract 38 38) C2) (_ bv0 1)) true) (_ bv38 42) (_ bv37 42)))))
 (let ((?x1385 (ite (and (distinct ((_ extract 41 40) C2) (_ bv0 2)) true) (ite (and (distinct ((_ extract 41 41) C2) (_ bv0 1)) true) (_ bv41 42) (_ bv40 42)) ?x6860)))
 (let ((?x1235 (ite (and (distinct ((_ extract 41 32) C2) (_ bv0 10)) true) (ite (and (distinct ((_ extract 41 37) C2) (_ bv0 5)) true) ?x1385 ?x4178) ?x2678)))
 (let ((?x1530 (bvsub (bvsub (_ bv42 42) (ite (and (distinct ((_ extract 41 21) C2) (_ bv0 21)) true) ?x1235 ?x442)) (_ bv1 42))))
 (let ((?x3691 (bvsub (_ bv42 42) ?x1530)))
 (let (($x6352 (and (distinct (bvadd (bvxor %Y C2) C1) (bvashr (bvshl %Y ?x3691) ?x3691)) true)))
 (and (= C1 (bvneg C2)) (and (and (distinct C2 (_ bv0 42)) true) (= (bvand C2 (bvsub C2 (_ bv1 42))) (_ bv0 42))) (not (= (bvand C2 (bvshl (_ bv4398046511103 42) ?x3691)) (_ bv0 42))) $x6352)))))))))))))))))))))))))
(check-sat)
