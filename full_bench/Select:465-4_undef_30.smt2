(set-info :status unknown)
(declare-fun C2 () (_ BitVec 11))
(declare-fun C1 () (_ BitVec 35))
(assert
 (let ((?x9995 (ite (and (distinct ((_ extract 2 2) C2) (_ bv0 1)) true) (_ bv2 35) (ite (and (distinct ((_ extract 1 1) C2) (_ bv0 1)) true) (_ bv1 35) (_ bv0 35)))))
 (let ((?x21399 (ite (and (distinct ((_ extract 5 5) C2) (_ bv0 1)) true) (_ bv5 35) (ite (and (distinct ((_ extract 4 4) C2) (_ bv0 1)) true) (_ bv4 35) (_ bv3 35)))))
 (let ((?x7948 (ite (and (distinct ((_ extract 8 8) C2) (_ bv0 1)) true) (_ bv8 35) (ite (and (distinct ((_ extract 7 7) C2) (_ bv0 1)) true) (_ bv7 35) (_ bv6 35)))))
 (let ((?x18010 (ite (and (distinct ((_ extract 10 9) C2) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) C2) (_ bv0 1)) true) (_ bv10 35) (_ bv9 35)) ?x7948)))
 (let ((?x4609 (ite (and (distinct ((_ extract 10 6) C2) (_ bv0 5)) true) ?x18010 (ite (and (distinct ((_ extract 5 3) C2) (_ bv0 3)) true) ?x21399 ?x9995))))
 (let ((?x2475 (ite (and (distinct ((_ extract 2 2) C1) (_ bv0 1)) true) (_ bv2 35) (ite (and (distinct ((_ extract 1 1) C1) (_ bv0 1)) true) (_ bv1 35) (_ bv0 35)))))
 (let ((?x511 (ite (and (distinct ((_ extract 4 3) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 4 4) C1) (_ bv0 1)) true) (_ bv4 35) (_ bv3 35)) ?x2475)))
 (let ((?x17833 (ite (and (distinct ((_ extract 8 7) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 8 8) C1) (_ bv0 1)) true) (_ bv8 35) (_ bv7 35)) (ite (and (distinct ((_ extract 6 6) C1) (_ bv0 1)) true) (_ bv6 35) (_ bv5 35)))))
 (let ((?x6655 (ite (and (distinct ((_ extract 11 11) C1) (_ bv0 1)) true) (_ bv11 35) (ite (and (distinct ((_ extract 10 10) C1) (_ bv0 1)) true) (_ bv10 35) (_ bv9 35)))))
 (let ((?x286 (ite (and (distinct ((_ extract 13 12) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 13 13) C1) (_ bv0 1)) true) (_ bv13 35) (_ bv12 35)) ?x6655)))
 (let ((?x1318 (ite (and (distinct ((_ extract 17 16) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 17 17) C1) (_ bv0 1)) true) (_ bv17 35) (_ bv16 35)) (ite (and (distinct ((_ extract 15 15) C1) (_ bv0 1)) true) (_ bv15 35) (_ bv14 35)))))
 (let ((?x15595 (ite (and (distinct ((_ extract 17 9) C1) (_ bv0 9)) true) (ite (and (distinct ((_ extract 17 14) C1) (_ bv0 4)) true) ?x1318 ?x286) (ite (and (distinct ((_ extract 8 5) C1) (_ bv0 4)) true) ?x17833 ?x511))))
 (let ((?x18167 (ite (and (distinct ((_ extract 20 20) C1) (_ bv0 1)) true) (_ bv20 35) (ite (and (distinct ((_ extract 19 19) C1) (_ bv0 1)) true) (_ bv19 35) (_ bv18 35)))))
 (let ((?x17623 (ite (and (distinct ((_ extract 22 21) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 22 22) C1) (_ bv0 1)) true) (_ bv22 35) (_ bv21 35)) ?x18167)))
 (let ((?x3149 (ite (and (distinct ((_ extract 26 25) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 26 26) C1) (_ bv0 1)) true) (_ bv26 35) (_ bv25 35)) (ite (and (distinct ((_ extract 24 24) C1) (_ bv0 1)) true) (_ bv24 35) (_ bv23 35)))))
 (let ((?x7952 (ite (and (distinct ((_ extract 30 29) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 30 30) C1) (_ bv0 1)) true) (_ bv30 35) (_ bv29 35)) (ite (and (distinct ((_ extract 28 28) C1) (_ bv0 1)) true) (_ bv28 35) (_ bv27 35)))))
 (let ((?x25100 (ite (and (distinct ((_ extract 34 33) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 34 34) C1) (_ bv0 1)) true) (_ bv34 35) (_ bv33 35)) (ite (and (distinct ((_ extract 32 32) C1) (_ bv0 1)) true) (_ bv32 35) (_ bv31 35)))))
 (let ((?x21524 (ite (and (distinct ((_ extract 34 27) C1) (_ bv0 8)) true) (ite (and (distinct ((_ extract 34 31) C1) (_ bv0 4)) true) ?x25100 ?x7952) (ite (and (distinct ((_ extract 26 23) C1) (_ bv0 4)) true) ?x3149 ?x17623))))
 (let ((?x24264 (bvsub (ite (and (distinct ((_ extract 34 18) C1) (_ bv0 17)) true) ?x21524 ?x15595) ?x4609)))
 (let ((?x16971 (ite (and (distinct ((_ extract 2 2) C1) (_ bv0 1)) true) (_ bv2 32) (ite (and (distinct ((_ extract 1 1) C1) (_ bv0 1)) true) (_ bv1 32) (_ bv0 32)))))
 (let ((?x14695 (ite (and (distinct ((_ extract 4 3) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 4 4) C1) (_ bv0 1)) true) (_ bv4 32) (_ bv3 32)) ?x16971)))
 (let ((?x14373 (ite (and (distinct ((_ extract 8 7) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 8 8) C1) (_ bv0 1)) true) (_ bv8 32) (_ bv7 32)) (ite (and (distinct ((_ extract 6 6) C1) (_ bv0 1)) true) (_ bv6 32) (_ bv5 32)))))
 (let ((?x16409 (ite (and (distinct ((_ extract 11 11) C1) (_ bv0 1)) true) (_ bv11 32) (ite (and (distinct ((_ extract 10 10) C1) (_ bv0 1)) true) (_ bv10 32) (_ bv9 32)))))
 (let ((?x18224 (ite (and (distinct ((_ extract 13 12) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 13 13) C1) (_ bv0 1)) true) (_ bv13 32) (_ bv12 32)) ?x16409)))
 (let ((?x16251 (ite (and (distinct ((_ extract 17 16) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 17 17) C1) (_ bv0 1)) true) (_ bv17 32) (_ bv16 32)) (ite (and (distinct ((_ extract 15 15) C1) (_ bv0 1)) true) (_ bv15 32) (_ bv14 32)))))
 (let ((?x10603 (ite (and (distinct ((_ extract 17 9) C1) (_ bv0 9)) true) (ite (and (distinct ((_ extract 17 14) C1) (_ bv0 4)) true) ?x16251 ?x18224) (ite (and (distinct ((_ extract 8 5) C1) (_ bv0 4)) true) ?x14373 ?x14695))))
 (let ((?x9480 (ite (and (distinct ((_ extract 20 20) C1) (_ bv0 1)) true) (_ bv20 32) (ite (and (distinct ((_ extract 19 19) C1) (_ bv0 1)) true) (_ bv19 32) (_ bv18 32)))))
 (let ((?x8696 (ite (and (distinct ((_ extract 22 21) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 22 22) C1) (_ bv0 1)) true) (_ bv22 32) (_ bv21 32)) ?x9480)))
 (let ((?x2051 (ite (and (distinct ((_ extract 26 25) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 26 26) C1) (_ bv0 1)) true) (_ bv26 32) (_ bv25 32)) (ite (and (distinct ((_ extract 24 24) C1) (_ bv0 1)) true) (_ bv24 32) (_ bv23 32)))))
 (let ((?x4302 (ite (and (distinct ((_ extract 30 29) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 30 30) C1) (_ bv0 1)) true) (_ bv30 32) (_ bv29 32)) (ite (and (distinct ((_ extract 28 28) C1) (_ bv0 1)) true) (_ bv28 32) (_ bv27 32)))))
 (let ((?x4995 (ite (and (distinct ((_ extract 34 33) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 34 34) C1) (_ bv0 1)) true) (_ bv34 32) (_ bv33 32)) (ite (and (distinct ((_ extract 32 32) C1) (_ bv0 1)) true) (_ bv32 32) (_ bv31 32)))))
 (let ((?x10525 (ite (and (distinct ((_ extract 34 27) C1) (_ bv0 8)) true) (ite (and (distinct ((_ extract 34 31) C1) (_ bv0 4)) true) ?x4995 ?x4302) (ite (and (distinct ((_ extract 26 23) C1) (_ bv0 4)) true) ?x2051 ?x8696))))
 (let ((?x11958 (ite (and (distinct ((_ extract 2 2) C2) (_ bv0 1)) true) (_ bv2 32) (ite (and (distinct ((_ extract 1 1) C2) (_ bv0 1)) true) (_ bv1 32) (_ bv0 32)))))
 (let ((?x11529 (ite (and (distinct ((_ extract 5 5) C2) (_ bv0 1)) true) (_ bv5 32) (ite (and (distinct ((_ extract 4 4) C2) (_ bv0 1)) true) (_ bv4 32) (_ bv3 32)))))
 (let ((?x9442 (ite (and (distinct ((_ extract 8 8) C2) (_ bv0 1)) true) (_ bv8 32) (ite (and (distinct ((_ extract 7 7) C2) (_ bv0 1)) true) (_ bv7 32) (_ bv6 32)))))
 (let ((?x18825 (ite (and (distinct ((_ extract 10 9) C2) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) C2) (_ bv0 1)) true) (_ bv10 32) (_ bv9 32)) ?x9442)))
 (let ((?x6226 (ite (and (distinct ((_ extract 10 6) C2) (_ bv0 5)) true) ?x18825 (ite (and (distinct ((_ extract 5 3) C2) (_ bv0 3)) true) ?x11529 ?x11958))))
 (and (and (and (distinct C1 (_ bv0 35)) true) (= (bvand C1 (bvsub C1 (_ bv1 35))) (_ bv0 35))) (and (and (distinct C2 (_ bv0 11)) true) (= (bvand C2 (bvsub C2 (_ bv1 11))) (_ bv0 11))) (bvslt ?x6226 (ite (and (distinct ((_ extract 34 18) C1) (_ bv0 17)) true) ?x10525 ?x10603)) (not (bvult ?x24264 (_ bv35 35))))))))))))))))))))))))))))))))))))))))))
(check-sat)
