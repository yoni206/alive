(set-info :source |
 Generated by Alive 0.1
 More info in N. P. Lopes, D. Menendez, S. Nagarakatte, J. Regehr.
 Provably Correct Peephole Optimizations with Alive. In PLDI'15.
|)

(set-info :status unknown)
(declare-fun C () (_ BitVec 42))
(declare-fun %B () (_ BitVec 42))
(declare-fun %A () (_ BitVec 42))
(declare-fun |ana_MaskedValueIsZero(%A, lshr(-1, countLeadingZeros(C)))| () (_ BitVec 1))
(assert
 (let (($x189472 (and (distinct (bvand (bvsub %A %B) C) (bvand (bvsub (_ bv0 42) %B) C)) true)))
 (let (($x186517 (= |ana_MaskedValueIsZero(%A, lshr(-1, countLeadingZeros(C)))| (_ bv1 1))))
 (let ((?x189318 (ite (= ((_ extract 1 1) C) (_ bv1 1)) (_ bv40 42) (ite (= ((_ extract 0 0) C) (_ bv1 1)) (_ bv41 42) (_ bv42 42)))))
 (let ((?x189311 (ite (= ((_ extract 3 3) C) (_ bv1 1)) (_ bv38 42) (ite (= ((_ extract 2 2) C) (_ bv1 1)) (_ bv39 42) ?x189318))))
 (let ((?x189307 (ite (= ((_ extract 5 5) C) (_ bv1 1)) (_ bv36 42) (ite (= ((_ extract 4 4) C) (_ bv1 1)) (_ bv37 42) ?x189311))))
 (let ((?x189300 (ite (= ((_ extract 7 7) C) (_ bv1 1)) (_ bv34 42) (ite (= ((_ extract 6 6) C) (_ bv1 1)) (_ bv35 42) ?x189307))))
 (let ((?x189296 (ite (= ((_ extract 9 9) C) (_ bv1 1)) (_ bv32 42) (ite (= ((_ extract 8 8) C) (_ bv1 1)) (_ bv33 42) ?x189300))))
 (let ((?x189292 (ite (= ((_ extract 11 11) C) (_ bv1 1)) (_ bv30 42) (ite (= ((_ extract 10 10) C) (_ bv1 1)) (_ bv31 42) ?x189296))))
 (let ((?x189285 (ite (= ((_ extract 13 13) C) (_ bv1 1)) (_ bv28 42) (ite (= ((_ extract 12 12) C) (_ bv1 1)) (_ bv29 42) ?x189292))))
 (let ((?x189278 (ite (= ((_ extract 15 15) C) (_ bv1 1)) (_ bv26 42) (ite (= ((_ extract 14 14) C) (_ bv1 1)) (_ bv27 42) ?x189285))))
 (let ((?x189274 (ite (= ((_ extract 17 17) C) (_ bv1 1)) (_ bv24 42) (ite (= ((_ extract 16 16) C) (_ bv1 1)) (_ bv25 42) ?x189278))))
 (let ((?x189267 (ite (= ((_ extract 19 19) C) (_ bv1 1)) (_ bv22 42) (ite (= ((_ extract 18 18) C) (_ bv1 1)) (_ bv23 42) ?x189274))))
 (let ((?x189437 (ite (= ((_ extract 21 21) C) (_ bv1 1)) (_ bv20 42) (ite (= ((_ extract 20 20) C) (_ bv1 1)) (_ bv21 42) ?x189267))))
 (let ((?x189439 (ite (= ((_ extract 23 23) C) (_ bv1 1)) (_ bv18 42) (ite (= ((_ extract 22 22) C) (_ bv1 1)) (_ bv19 42) ?x189437))))
 (let ((?x189441 (ite (= ((_ extract 25 25) C) (_ bv1 1)) (_ bv16 42) (ite (= ((_ extract 24 24) C) (_ bv1 1)) (_ bv17 42) ?x189439))))
 (let ((?x189443 (ite (= ((_ extract 27 27) C) (_ bv1 1)) (_ bv14 42) (ite (= ((_ extract 26 26) C) (_ bv1 1)) (_ bv15 42) ?x189441))))
 (let ((?x189445 (ite (= ((_ extract 29 29) C) (_ bv1 1)) (_ bv12 42) (ite (= ((_ extract 28 28) C) (_ bv1 1)) (_ bv13 42) ?x189443))))
 (let ((?x189447 (ite (= ((_ extract 31 31) C) (_ bv1 1)) (_ bv10 42) (ite (= ((_ extract 30 30) C) (_ bv1 1)) (_ bv11 42) ?x189445))))
 (let ((?x189449 (ite (= ((_ extract 33 33) C) (_ bv1 1)) (_ bv8 42) (ite (= ((_ extract 32 32) C) (_ bv1 1)) (_ bv9 42) ?x189447))))
 (let ((?x189451 (ite (= ((_ extract 35 35) C) (_ bv1 1)) (_ bv6 42) (ite (= ((_ extract 34 34) C) (_ bv1 1)) (_ bv7 42) ?x189449))))
 (let ((?x189453 (ite (= ((_ extract 37 37) C) (_ bv1 1)) (_ bv4 42) (ite (= ((_ extract 36 36) C) (_ bv1 1)) (_ bv5 42) ?x189451))))
 (let ((?x189455 (ite (= ((_ extract 39 39) C) (_ bv1 1)) (_ bv2 42) (ite (= ((_ extract 38 38) C) (_ bv1 1)) (_ bv3 42) ?x189453))))
 (let ((?x189457 (ite (= ((_ extract 41 41) C) (_ bv1 1)) (_ bv0 42) (ite (= ((_ extract 40 40) C) (_ bv1 1)) (_ bv1 42) ?x189455))))
 (let (($x189464 (=> $x186517 (= (bvand %A (bvlshr (_ bv4398046511103 42) ?x189457)) (_ bv0 42)))))
 (and $x189464 $x186517 $x189472))))))))))))))))))))))))))
(check-sat)
