(set-info :status unknown)
(declare-fun C () (_ BitVec 9))
(declare-fun %Op0 () (_ BitVec 9))
(declare-fun |ana_ComputeNumSignBits(%Op0)| () (_ BitVec 9))
(assert
 (let ((?x7849 ((_ extract 8 8) |ana_ComputeNumSignBits(%Op0)|)))
 (let ((?x21512 (ite (= ((_ extract 1 1) |ana_ComputeNumSignBits(%Op0)|) ?x7849) (ite (= ((_ extract 0 0) |ana_ComputeNumSignBits(%Op0)|) ?x7849) (_ bv9 9) (_ bv8 9)) (_ bv7 9))))
 (let ((?x22472 (ite (= ((_ extract 3 3) |ana_ComputeNumSignBits(%Op0)|) ?x7849) (ite (= ((_ extract 2 2) |ana_ComputeNumSignBits(%Op0)|) ?x7849) ?x21512 (_ bv6 9)) (_ bv5 9))))
 (let ((?x2204 (ite (= ((_ extract 5 5) |ana_ComputeNumSignBits(%Op0)|) ?x7849) (ite (= ((_ extract 4 4) |ana_ComputeNumSignBits(%Op0)|) ?x7849) ?x22472 (_ bv4 9)) (_ bv3 9))))
 (let ((?x23578 (ite (= ((_ extract 7 7) |ana_ComputeNumSignBits(%Op0)|) ?x7849) (ite (= ((_ extract 6 6) |ana_ComputeNumSignBits(%Op0)|) ?x7849) ?x2204 (_ bv2 9)) (_ bv1 9))))
 (let ((?x18229 (ite (= ((_ extract 1 1) %Op0) ((_ extract 8 8) %Op0)) (ite (= ((_ extract 0 0) %Op0) ((_ extract 8 8) %Op0)) (_ bv9 9) (_ bv8 9)) (_ bv7 9))))
 (let ((?x7940 (ite (= ((_ extract 3 3) %Op0) ((_ extract 8 8) %Op0)) (ite (= ((_ extract 2 2) %Op0) ((_ extract 8 8) %Op0)) ?x18229 (_ bv6 9)) (_ bv5 9))))
 (let ((?x15229 (ite (= ((_ extract 5 5) %Op0) ((_ extract 8 8) %Op0)) (ite (= ((_ extract 4 4) %Op0) ((_ extract 8 8) %Op0)) ?x7940 (_ bv4 9)) (_ bv3 9))))
 (let ((?x19796 (ite (= ((_ extract 7 7) %Op0) ((_ extract 8 8) %Op0)) (ite (= ((_ extract 6 6) %Op0) ((_ extract 8 8) %Op0)) ?x15229 (_ bv2 9)) (_ bv1 9))))
 (let (($x10087 (bvult C (_ bv9 9))))
 (and $x10087 (bvule ?x23578 ?x19796) (bvsgt ?x23578 C) (and (distinct (bvshl %Op0 C) (bvshl %Op0 C)) true)))))))))))))
(check-sat)
