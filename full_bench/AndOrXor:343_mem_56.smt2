(set-info :source |
 Generated by Alive 0.1
 More info in N. P. Lopes, D. Menendez, S. Nagarakatte, J. Regehr.
 Provably Correct Peephole Optimizations with Alive. In PLDI'15.
|)

(set-info :status unknown)
(declare-fun mem0 () (_ BitVec 8))
(declare-fun |ana_MaskedValueIsZero(%B, ((1 << (width(C2) - countLeadingZeros(((C2 - 1) ^ C2)))) - 1))| () (_ BitVec 1))
(declare-fun C2 () (_ BitVec 58))
(declare-fun C1 () (_ BitVec 58))
(declare-fun %B () (_ BitVec 58))
(assert
 (let (($x927 (and (distinct mem0 mem0) true)))
 (let (($x131713 (= |ana_MaskedValueIsZero(%B, ((1 << (width(C2) - countLeadingZeros(((C2 - 1) ^ C2)))) - 1))| (_ bv1 1))))
 (let ((?x29896 (bvsub C2 (_ bv1 58))))
 (let ((?x157296 (bvor ?x29896 C2)))
 (let (($x157274 (and (and (distinct ?x157296 (_ bv0 58)) true) (= (bvand (bvadd ?x157296 (_ bv1 58)) ?x157296) (_ bv0 58)) $x131713)))
 (let (($x157266 (or (= (bvand (bvadd C2 (_ bv1 58)) (bvsub (bvadd C2 (_ bv1 58)) (_ bv1 58))) (_ bv0 58)) $x157274)))
 (let ((?x132173 (bvand C1 C2)))
 (let (($x157295 (= ?x132173 C2)))
 (let ((?x157277 (ite (= ((_ extract 1 1) (bvxor ?x29896 C2)) (_ bv1 1)) (_ bv56 58) (ite (= ((_ extract 0 0) (bvxor ?x29896 C2)) (_ bv1 1)) (_ bv57 58) (_ bv58 58)))))
 (let ((?x157263 (ite (= ((_ extract 3 3) (bvxor ?x29896 C2)) (_ bv1 1)) (_ bv54 58) (ite (= ((_ extract 2 2) (bvxor ?x29896 C2)) (_ bv1 1)) (_ bv55 58) ?x157277))))
 (let ((?x157251 (ite (= ((_ extract 5 5) (bvxor ?x29896 C2)) (_ bv1 1)) (_ bv52 58) (ite (= ((_ extract 4 4) (bvxor ?x29896 C2)) (_ bv1 1)) (_ bv53 58) ?x157263))))
 (let ((?x157241 (ite (= ((_ extract 7 7) (bvxor ?x29896 C2)) (_ bv1 1)) (_ bv50 58) (ite (= ((_ extract 6 6) (bvxor ?x29896 C2)) (_ bv1 1)) (_ bv51 58) ?x157251))))
 (let ((?x157230 (ite (= ((_ extract 9 9) (bvxor ?x29896 C2)) (_ bv1 1)) (_ bv48 58) (ite (= ((_ extract 8 8) (bvxor ?x29896 C2)) (_ bv1 1)) (_ bv49 58) ?x157241))))
 (let ((?x157219 (ite (= ((_ extract 11 11) (bvxor ?x29896 C2)) (_ bv1 1)) (_ bv46 58) (ite (= ((_ extract 10 10) (bvxor ?x29896 C2)) (_ bv1 1)) (_ bv47 58) ?x157230))))
 (let ((?x155543 (ite (= ((_ extract 13 13) (bvxor ?x29896 C2)) (_ bv1 1)) (_ bv44 58) (ite (= ((_ extract 12 12) (bvxor ?x29896 C2)) (_ bv1 1)) (_ bv45 58) ?x157219))))
 (let ((?x156875 (ite (= ((_ extract 15 15) (bvxor ?x29896 C2)) (_ bv1 1)) (_ bv42 58) (ite (= ((_ extract 14 14) (bvxor ?x29896 C2)) (_ bv1 1)) (_ bv43 58) ?x155543))))
 (let ((?x157428 (ite (= ((_ extract 17 17) (bvxor ?x29896 C2)) (_ bv1 1)) (_ bv40 58) (ite (= ((_ extract 16 16) (bvxor ?x29896 C2)) (_ bv1 1)) (_ bv41 58) ?x156875))))
 (let ((?x157424 (ite (= ((_ extract 19 19) (bvxor ?x29896 C2)) (_ bv1 1)) (_ bv38 58) (ite (= ((_ extract 18 18) (bvxor ?x29896 C2)) (_ bv1 1)) (_ bv39 58) ?x157428))))
 (let ((?x157420 (ite (= ((_ extract 21 21) (bvxor ?x29896 C2)) (_ bv1 1)) (_ bv36 58) (ite (= ((_ extract 20 20) (bvxor ?x29896 C2)) (_ bv1 1)) (_ bv37 58) ?x157424))))
 (let ((?x157416 (ite (= ((_ extract 23 23) (bvxor ?x29896 C2)) (_ bv1 1)) (_ bv34 58) (ite (= ((_ extract 22 22) (bvxor ?x29896 C2)) (_ bv1 1)) (_ bv35 58) ?x157420))))
 (let ((?x157412 (ite (= ((_ extract 25 25) (bvxor ?x29896 C2)) (_ bv1 1)) (_ bv32 58) (ite (= ((_ extract 24 24) (bvxor ?x29896 C2)) (_ bv1 1)) (_ bv33 58) ?x157416))))
 (let ((?x157405 (ite (= ((_ extract 27 27) (bvxor ?x29896 C2)) (_ bv1 1)) (_ bv30 58) (ite (= ((_ extract 26 26) (bvxor ?x29896 C2)) (_ bv1 1)) (_ bv31 58) ?x157412))))
 (let ((?x157398 (ite (= ((_ extract 29 29) (bvxor ?x29896 C2)) (_ bv1 1)) (_ bv28 58) (ite (= ((_ extract 28 28) (bvxor ?x29896 C2)) (_ bv1 1)) (_ bv29 58) ?x157405))))
 (let ((?x157391 (ite (= ((_ extract 31 31) (bvxor ?x29896 C2)) (_ bv1 1)) (_ bv26 58) (ite (= ((_ extract 30 30) (bvxor ?x29896 C2)) (_ bv1 1)) (_ bv27 58) ?x157398))))
 (let ((?x157387 (ite (= ((_ extract 33 33) (bvxor ?x29896 C2)) (_ bv1 1)) (_ bv24 58) (ite (= ((_ extract 32 32) (bvxor ?x29896 C2)) (_ bv1 1)) (_ bv25 58) ?x157391))))
 (let ((?x157383 (ite (= ((_ extract 35 35) (bvxor ?x29896 C2)) (_ bv1 1)) (_ bv22 58) (ite (= ((_ extract 34 34) (bvxor ?x29896 C2)) (_ bv1 1)) (_ bv23 58) ?x157387))))
 (let ((?x157379 (ite (= ((_ extract 37 37) (bvxor ?x29896 C2)) (_ bv1 1)) (_ bv20 58) (ite (= ((_ extract 36 36) (bvxor ?x29896 C2)) (_ bv1 1)) (_ bv21 58) ?x157383))))
 (let ((?x157372 (ite (= ((_ extract 39 39) (bvxor ?x29896 C2)) (_ bv1 1)) (_ bv18 58) (ite (= ((_ extract 38 38) (bvxor ?x29896 C2)) (_ bv1 1)) (_ bv19 58) ?x157379))))
 (let ((?x157365 (ite (= ((_ extract 41 41) (bvxor ?x29896 C2)) (_ bv1 1)) (_ bv16 58) (ite (= ((_ extract 40 40) (bvxor ?x29896 C2)) (_ bv1 1)) (_ bv17 58) ?x157372))))
 (let ((?x157358 (ite (= ((_ extract 43 43) (bvxor ?x29896 C2)) (_ bv1 1)) (_ bv14 58) (ite (= ((_ extract 42 42) (bvxor ?x29896 C2)) (_ bv1 1)) (_ bv15 58) ?x157365))))
 (let ((?x157351 (ite (= ((_ extract 45 45) (bvxor ?x29896 C2)) (_ bv1 1)) (_ bv12 58) (ite (= ((_ extract 44 44) (bvxor ?x29896 C2)) (_ bv1 1)) (_ bv13 58) ?x157358))))
 (let ((?x157347 (ite (= ((_ extract 47 47) (bvxor ?x29896 C2)) (_ bv1 1)) (_ bv10 58) (ite (= ((_ extract 46 46) (bvxor ?x29896 C2)) (_ bv1 1)) (_ bv11 58) ?x157351))))
 (let ((?x157343 (ite (= ((_ extract 49 49) (bvxor ?x29896 C2)) (_ bv1 1)) (_ bv8 58) (ite (= ((_ extract 48 48) (bvxor ?x29896 C2)) (_ bv1 1)) (_ bv9 58) ?x157347))))
 (let ((?x157336 (ite (= ((_ extract 51 51) (bvxor ?x29896 C2)) (_ bv1 1)) (_ bv6 58) (ite (= ((_ extract 50 50) (bvxor ?x29896 C2)) (_ bv1 1)) (_ bv7 58) ?x157343))))
 (let ((?x157329 (ite (= ((_ extract 53 53) (bvxor ?x29896 C2)) (_ bv1 1)) (_ bv4 58) (ite (= ((_ extract 52 52) (bvxor ?x29896 C2)) (_ bv1 1)) (_ bv5 58) ?x157336))))
 (let ((?x157325 (ite (= ((_ extract 55 55) (bvxor ?x29896 C2)) (_ bv1 1)) (_ bv2 58) (ite (= ((_ extract 54 54) (bvxor ?x29896 C2)) (_ bv1 1)) (_ bv3 58) ?x157329))))
 (let ((?x157321 (ite (= ((_ extract 57 57) (bvxor ?x29896 C2)) (_ bv1 1)) (_ bv0 58) (ite (= ((_ extract 56 56) (bvxor ?x29896 C2)) (_ bv1 1)) (_ bv1 58) ?x157325))))
 (let (($x157273 (=> $x131713 (= (bvand %B (bvsub (bvshl (_ bv1 58) (bvsub (_ bv58 58) ?x157321)) (_ bv1 58))) (_ bv0 58)))))
 (and $x157273 $x157295 $x157266 $x927))))))))))))))))))))))))))))))))))))))))
(check-sat)
