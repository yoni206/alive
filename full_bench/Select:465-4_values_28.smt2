(set-info :status unknown)
(declare-fun %Y () (_ BitVec 11))
(declare-fun C2 () (_ BitVec 11))
(declare-fun C1 () (_ BitVec 33))
(declare-fun %X () (_ BitVec 33))
(assert
 (let ((?x23371 (ite (and (distinct ((_ extract 2 2) C2) (_ bv0 1)) true) (_ bv2 33) (ite (and (distinct ((_ extract 1 1) C2) (_ bv0 1)) true) (_ bv1 33) (_ bv0 33)))))
 (let ((?x9542 (ite (and (distinct ((_ extract 5 5) C2) (_ bv0 1)) true) (_ bv5 33) (ite (and (distinct ((_ extract 4 4) C2) (_ bv0 1)) true) (_ bv4 33) (_ bv3 33)))))
 (let ((?x4430 (ite (and (distinct ((_ extract 8 8) C2) (_ bv0 1)) true) (_ bv8 33) (ite (and (distinct ((_ extract 7 7) C2) (_ bv0 1)) true) (_ bv7 33) (_ bv6 33)))))
 (let ((?x6186 (ite (and (distinct ((_ extract 10 9) C2) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) C2) (_ bv0 1)) true) (_ bv10 33) (_ bv9 33)) ?x4430)))
 (let ((?x15834 (ite (and (distinct ((_ extract 10 6) C2) (_ bv0 5)) true) ?x6186 (ite (and (distinct ((_ extract 5 3) C2) (_ bv0 3)) true) ?x9542 ?x23371))))
 (let ((?x14122 (ite (and (distinct ((_ extract 2 2) C1) (_ bv0 1)) true) (_ bv2 33) (ite (and (distinct ((_ extract 1 1) C1) (_ bv0 1)) true) (_ bv1 33) (_ bv0 33)))))
 (let ((?x23606 (ite (and (distinct ((_ extract 4 3) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 4 4) C1) (_ bv0 1)) true) (_ bv4 33) (_ bv3 33)) ?x14122)))
 (let ((?x11106 (ite (and (distinct ((_ extract 8 7) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 8 8) C1) (_ bv0 1)) true) (_ bv8 33) (_ bv7 33)) (ite (and (distinct ((_ extract 6 6) C1) (_ bv0 1)) true) (_ bv6 33) (_ bv5 33)))))
 (let ((?x18722 (ite (and (distinct ((_ extract 12 11) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 12 12) C1) (_ bv0 1)) true) (_ bv12 33) (_ bv11 33)) (ite (and (distinct ((_ extract 10 10) C1) (_ bv0 1)) true) (_ bv10 33) (_ bv9 33)))))
 (let ((?x21656 (ite (and (distinct ((_ extract 16 15) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 16 16) C1) (_ bv0 1)) true) (_ bv16 33) (_ bv15 33)) (ite (and (distinct ((_ extract 14 14) C1) (_ bv0 1)) true) (_ bv14 33) (_ bv13 33)))))
 (let ((?x494 (ite (and (distinct ((_ extract 16 9) C1) (_ bv0 8)) true) (ite (and (distinct ((_ extract 16 13) C1) (_ bv0 4)) true) ?x21656 ?x18722) (ite (and (distinct ((_ extract 8 5) C1) (_ bv0 4)) true) ?x11106 ?x23606))))
 (let ((?x4995 (ite (and (distinct ((_ extract 20 19) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 20 20) C1) (_ bv0 1)) true) (_ bv20 33) (_ bv19 33)) (ite (and (distinct ((_ extract 18 18) C1) (_ bv0 1)) true) (_ bv18 33) (_ bv17 33)))))
 (let ((?x6226 (ite (and (distinct ((_ extract 24 23) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 24 24) C1) (_ bv0 1)) true) (_ bv24 33) (_ bv23 33)) (ite (and (distinct ((_ extract 22 22) C1) (_ bv0 1)) true) (_ bv22 33) (_ bv21 33)))))
 (let ((?x7685 (ite (and (distinct ((_ extract 28 27) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 28 28) C1) (_ bv0 1)) true) (_ bv28 33) (_ bv27 33)) (ite (and (distinct ((_ extract 26 26) C1) (_ bv0 1)) true) (_ bv26 33) (_ bv25 33)))))
 (let ((?x19398 (ite (and (distinct ((_ extract 32 31) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 32 32) C1) (_ bv0 1)) true) (_ bv32 33) (_ bv31 33)) (ite (and (distinct ((_ extract 30 30) C1) (_ bv0 1)) true) (_ bv30 33) (_ bv29 33)))))
 (let ((?x10037 (ite (and (distinct ((_ extract 32 25) C1) (_ bv0 8)) true) (ite (and (distinct ((_ extract 32 29) C1) (_ bv0 4)) true) ?x19398 ?x7685) (ite (and (distinct ((_ extract 24 21) C1) (_ bv0 4)) true) ?x6226 ?x4995))))
 (let ((?x16088 (bvsub (ite (and (distinct ((_ extract 32 17) C1) (_ bv0 16)) true) ?x10037 ?x494) ?x15834)))
 (let ((?x10861 (bvand %X C1)))
 (let ((?x15144 (bvor %Y C2)))
 (let (($x25100 (and (distinct (ite (= (ite (and (distinct ?x10861 (_ bv0 33)) true) (_ bv1 1) (_ bv0 1)) (_ bv1 1)) %Y ?x15144) (bvor (bvxor ((_ extract 10 0) (bvlshr ?x10861 ?x16088)) C2) %Y)) true)))
 (let ((?x16667 (ite (and (distinct ((_ extract 2 2) C1) (_ bv0 1)) true) (_ bv2 32) (ite (and (distinct ((_ extract 1 1) C1) (_ bv0 1)) true) (_ bv1 32) (_ bv0 32)))))
 (let ((?x16645 (ite (and (distinct ((_ extract 4 3) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 4 4) C1) (_ bv0 1)) true) (_ bv4 32) (_ bv3 32)) ?x16667)))
 (let ((?x17731 (ite (and (distinct ((_ extract 8 7) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 8 8) C1) (_ bv0 1)) true) (_ bv8 32) (_ bv7 32)) (ite (and (distinct ((_ extract 6 6) C1) (_ bv0 1)) true) (_ bv6 32) (_ bv5 32)))))
 (let ((?x14806 (ite (and (distinct ((_ extract 12 11) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 12 12) C1) (_ bv0 1)) true) (_ bv12 32) (_ bv11 32)) (ite (and (distinct ((_ extract 10 10) C1) (_ bv0 1)) true) (_ bv10 32) (_ bv9 32)))))
 (let ((?x21399 (ite (and (distinct ((_ extract 16 15) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 16 16) C1) (_ bv0 1)) true) (_ bv16 32) (_ bv15 32)) (ite (and (distinct ((_ extract 14 14) C1) (_ bv0 1)) true) (_ bv14 32) (_ bv13 32)))))
 (let ((?x20692 (ite (and (distinct ((_ extract 16 9) C1) (_ bv0 8)) true) (ite (and (distinct ((_ extract 16 13) C1) (_ bv0 4)) true) ?x21399 ?x14806) (ite (and (distinct ((_ extract 8 5) C1) (_ bv0 4)) true) ?x17731 ?x16645))))
 (let ((?x10862 (ite (and (distinct ((_ extract 20 19) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 20 20) C1) (_ bv0 1)) true) (_ bv20 32) (_ bv19 32)) (ite (and (distinct ((_ extract 18 18) C1) (_ bv0 1)) true) (_ bv18 32) (_ bv17 32)))))
 (let ((?x2552 (ite (and (distinct ((_ extract 24 23) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 24 24) C1) (_ bv0 1)) true) (_ bv24 32) (_ bv23 32)) (ite (and (distinct ((_ extract 22 22) C1) (_ bv0 1)) true) (_ bv22 32) (_ bv21 32)))))
 (let ((?x15825 (ite (and (distinct ((_ extract 28 27) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 28 28) C1) (_ bv0 1)) true) (_ bv28 32) (_ bv27 32)) (ite (and (distinct ((_ extract 26 26) C1) (_ bv0 1)) true) (_ bv26 32) (_ bv25 32)))))
 (let ((?x8088 (ite (and (distinct ((_ extract 32 31) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 32 32) C1) (_ bv0 1)) true) (_ bv32 32) (_ bv31 32)) (ite (and (distinct ((_ extract 30 30) C1) (_ bv0 1)) true) (_ bv30 32) (_ bv29 32)))))
 (let ((?x10876 (ite (and (distinct ((_ extract 32 25) C1) (_ bv0 8)) true) (ite (and (distinct ((_ extract 32 29) C1) (_ bv0 4)) true) ?x8088 ?x15825) (ite (and (distinct ((_ extract 24 21) C1) (_ bv0 4)) true) ?x2552 ?x10862))))
 (let ((?x14290 (ite (and (distinct ((_ extract 2 2) C2) (_ bv0 1)) true) (_ bv2 32) (ite (and (distinct ((_ extract 1 1) C2) (_ bv0 1)) true) (_ bv1 32) (_ bv0 32)))))
 (let ((?x13649 (ite (and (distinct ((_ extract 5 5) C2) (_ bv0 1)) true) (_ bv5 32) (ite (and (distinct ((_ extract 4 4) C2) (_ bv0 1)) true) (_ bv4 32) (_ bv3 32)))))
 (let ((?x18750 (ite (and (distinct ((_ extract 8 8) C2) (_ bv0 1)) true) (_ bv8 32) (ite (and (distinct ((_ extract 7 7) C2) (_ bv0 1)) true) (_ bv7 32) (_ bv6 32)))))
 (let ((?x3940 (ite (and (distinct ((_ extract 10 9) C2) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) C2) (_ bv0 1)) true) (_ bv10 32) (_ bv9 32)) ?x18750)))
 (let ((?x15294 (ite (and (distinct ((_ extract 10 6) C2) (_ bv0 5)) true) ?x3940 (ite (and (distinct ((_ extract 5 3) C2) (_ bv0 3)) true) ?x13649 ?x14290))))
 (and (and (and (distinct C1 (_ bv0 33)) true) (= (bvand C1 (bvsub C1 (_ bv1 33))) (_ bv0 33))) (and (and (distinct C2 (_ bv0 11)) true) (= (bvand C2 (bvsub C2 (_ bv1 11))) (_ bv0 11))) (bvslt ?x15294 (ite (and (distinct ((_ extract 32 17) C1) (_ bv0 16)) true) ?x10876 ?x20692)) $x25100))))))))))))))))))))))))))))))))))))))
(check-sat)
