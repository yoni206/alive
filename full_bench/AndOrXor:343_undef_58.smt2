(set-info :status unknown)
(declare-fun |ana_MaskedValueIsZero(%B, ((1 << (width(C2) - countLeadingZeros(((C2 - 1) ^ C2)))) - 1))| () (_ BitVec 1))
(declare-fun C2 () (_ BitVec 64))
(declare-fun C1 () (_ BitVec 64))
(declare-fun %B () (_ BitVec 64))
(assert
 (let (($x9857 (= |ana_MaskedValueIsZero(%B, ((1 << (width(C2) - countLeadingZeros(((C2 - 1) ^ C2)))) - 1))| (_ bv1 1))))
 (let ((?x5425 (bvor (bvsub C2 (_ bv1 64)) C2)))
 (let (($x13244 (and (and (distinct ?x5425 (_ bv0 64)) true) (= (bvand (bvadd ?x5425 (_ bv1 64)) ?x5425) (_ bv0 64)) $x9857)))
 (let (($x15109 (or (= (bvand (bvadd C2 (_ bv1 64)) (bvsub (bvadd C2 (_ bv1 64)) (_ bv1 64))) (_ bv0 64)) $x13244)))
 (let ((?x1167 (ite (= ((_ extract 1 1) (bvxor (bvsub C2 (_ bv1 64)) C2)) (_ bv1 1)) (_ bv62 64) (ite (= ((_ extract 0 0) (bvxor (bvsub C2 (_ bv1 64)) C2)) (_ bv1 1)) (_ bv63 64) (_ bv64 64)))))
 (let ((?x1139 (ite (= ((_ extract 3 3) (bvxor (bvsub C2 (_ bv1 64)) C2)) (_ bv1 1)) (_ bv60 64) (ite (= ((_ extract 2 2) (bvxor (bvsub C2 (_ bv1 64)) C2)) (_ bv1 1)) (_ bv61 64) ?x1167))))
 (let ((?x13317 (ite (= ((_ extract 5 5) (bvxor (bvsub C2 (_ bv1 64)) C2)) (_ bv1 1)) (_ bv58 64) (ite (= ((_ extract 4 4) (bvxor (bvsub C2 (_ bv1 64)) C2)) (_ bv1 1)) (_ bv59 64) ?x1139))))
 (let ((?x6521 (ite (= ((_ extract 7 7) (bvxor (bvsub C2 (_ bv1 64)) C2)) (_ bv1 1)) (_ bv56 64) (ite (= ((_ extract 6 6) (bvxor (bvsub C2 (_ bv1 64)) C2)) (_ bv1 1)) (_ bv57 64) ?x13317))))
 (let ((?x13407 (ite (= ((_ extract 9 9) (bvxor (bvsub C2 (_ bv1 64)) C2)) (_ bv1 1)) (_ bv54 64) (ite (= ((_ extract 8 8) (bvxor (bvsub C2 (_ bv1 64)) C2)) (_ bv1 1)) (_ bv55 64) ?x6521))))
 (let ((?x148 (ite (= ((_ extract 11 11) (bvxor (bvsub C2 (_ bv1 64)) C2)) (_ bv1 1)) (_ bv52 64) (ite (= ((_ extract 10 10) (bvxor (bvsub C2 (_ bv1 64)) C2)) (_ bv1 1)) (_ bv53 64) ?x13407))))
 (let ((?x1068 (ite (= ((_ extract 13 13) (bvxor (bvsub C2 (_ bv1 64)) C2)) (_ bv1 1)) (_ bv50 64) (ite (= ((_ extract 12 12) (bvxor (bvsub C2 (_ bv1 64)) C2)) (_ bv1 1)) (_ bv51 64) ?x148))))
 (let ((?x3942 (ite (= ((_ extract 15 15) (bvxor (bvsub C2 (_ bv1 64)) C2)) (_ bv1 1)) (_ bv48 64) (ite (= ((_ extract 14 14) (bvxor (bvsub C2 (_ bv1 64)) C2)) (_ bv1 1)) (_ bv49 64) ?x1068))))
 (let ((?x9915 (ite (= ((_ extract 17 17) (bvxor (bvsub C2 (_ bv1 64)) C2)) (_ bv1 1)) (_ bv46 64) (ite (= ((_ extract 16 16) (bvxor (bvsub C2 (_ bv1 64)) C2)) (_ bv1 1)) (_ bv47 64) ?x3942))))
 (let ((?x18023 (ite (= ((_ extract 19 19) (bvxor (bvsub C2 (_ bv1 64)) C2)) (_ bv1 1)) (_ bv44 64) (ite (= ((_ extract 18 18) (bvxor (bvsub C2 (_ bv1 64)) C2)) (_ bv1 1)) (_ bv45 64) ?x9915))))
 (let ((?x1787 (ite (= ((_ extract 21 21) (bvxor (bvsub C2 (_ bv1 64)) C2)) (_ bv1 1)) (_ bv42 64) (ite (= ((_ extract 20 20) (bvxor (bvsub C2 (_ bv1 64)) C2)) (_ bv1 1)) (_ bv43 64) ?x18023))))
 (let ((?x3503 (ite (= ((_ extract 23 23) (bvxor (bvsub C2 (_ bv1 64)) C2)) (_ bv1 1)) (_ bv40 64) (ite (= ((_ extract 22 22) (bvxor (bvsub C2 (_ bv1 64)) C2)) (_ bv1 1)) (_ bv41 64) ?x1787))))
 (let ((?x2194 (ite (= ((_ extract 25 25) (bvxor (bvsub C2 (_ bv1 64)) C2)) (_ bv1 1)) (_ bv38 64) (ite (= ((_ extract 24 24) (bvxor (bvsub C2 (_ bv1 64)) C2)) (_ bv1 1)) (_ bv39 64) ?x3503))))
 (let ((?x7328 (ite (= ((_ extract 27 27) (bvxor (bvsub C2 (_ bv1 64)) C2)) (_ bv1 1)) (_ bv36 64) (ite (= ((_ extract 26 26) (bvxor (bvsub C2 (_ bv1 64)) C2)) (_ bv1 1)) (_ bv37 64) ?x2194))))
 (let ((?x1144 (ite (= ((_ extract 29 29) (bvxor (bvsub C2 (_ bv1 64)) C2)) (_ bv1 1)) (_ bv34 64) (ite (= ((_ extract 28 28) (bvxor (bvsub C2 (_ bv1 64)) C2)) (_ bv1 1)) (_ bv35 64) ?x7328))))
 (let ((?x16542 (ite (= ((_ extract 31 31) (bvxor (bvsub C2 (_ bv1 64)) C2)) (_ bv1 1)) (_ bv32 64) (ite (= ((_ extract 30 30) (bvxor (bvsub C2 (_ bv1 64)) C2)) (_ bv1 1)) (_ bv33 64) ?x1144))))
 (let ((?x16367 (ite (= ((_ extract 33 33) (bvxor (bvsub C2 (_ bv1 64)) C2)) (_ bv1 1)) (_ bv30 64) (ite (= ((_ extract 32 32) (bvxor (bvsub C2 (_ bv1 64)) C2)) (_ bv1 1)) (_ bv31 64) ?x16542))))
 (let ((?x6482 (ite (= ((_ extract 35 35) (bvxor (bvsub C2 (_ bv1 64)) C2)) (_ bv1 1)) (_ bv28 64) (ite (= ((_ extract 34 34) (bvxor (bvsub C2 (_ bv1 64)) C2)) (_ bv1 1)) (_ bv29 64) ?x16367))))
 (let ((?x15160 (ite (= ((_ extract 37 37) (bvxor (bvsub C2 (_ bv1 64)) C2)) (_ bv1 1)) (_ bv26 64) (ite (= ((_ extract 36 36) (bvxor (bvsub C2 (_ bv1 64)) C2)) (_ bv1 1)) (_ bv27 64) ?x6482))))
 (let ((?x18084 (ite (= ((_ extract 39 39) (bvxor (bvsub C2 (_ bv1 64)) C2)) (_ bv1 1)) (_ bv24 64) (ite (= ((_ extract 38 38) (bvxor (bvsub C2 (_ bv1 64)) C2)) (_ bv1 1)) (_ bv25 64) ?x15160))))
 (let ((?x1457 (ite (= ((_ extract 41 41) (bvxor (bvsub C2 (_ bv1 64)) C2)) (_ bv1 1)) (_ bv22 64) (ite (= ((_ extract 40 40) (bvxor (bvsub C2 (_ bv1 64)) C2)) (_ bv1 1)) (_ bv23 64) ?x18084))))
 (let ((?x3097 (ite (= ((_ extract 43 43) (bvxor (bvsub C2 (_ bv1 64)) C2)) (_ bv1 1)) (_ bv20 64) (ite (= ((_ extract 42 42) (bvxor (bvsub C2 (_ bv1 64)) C2)) (_ bv1 1)) (_ bv21 64) ?x1457))))
 (let ((?x5030 (ite (= ((_ extract 45 45) (bvxor (bvsub C2 (_ bv1 64)) C2)) (_ bv1 1)) (_ bv18 64) (ite (= ((_ extract 44 44) (bvxor (bvsub C2 (_ bv1 64)) C2)) (_ bv1 1)) (_ bv19 64) ?x3097))))
 (let ((?x10269 (ite (= ((_ extract 47 47) (bvxor (bvsub C2 (_ bv1 64)) C2)) (_ bv1 1)) (_ bv16 64) (ite (= ((_ extract 46 46) (bvxor (bvsub C2 (_ bv1 64)) C2)) (_ bv1 1)) (_ bv17 64) ?x5030))))
 (let ((?x12922 (ite (= ((_ extract 49 49) (bvxor (bvsub C2 (_ bv1 64)) C2)) (_ bv1 1)) (_ bv14 64) (ite (= ((_ extract 48 48) (bvxor (bvsub C2 (_ bv1 64)) C2)) (_ bv1 1)) (_ bv15 64) ?x10269))))
 (let ((?x9829 (ite (= ((_ extract 51 51) (bvxor (bvsub C2 (_ bv1 64)) C2)) (_ bv1 1)) (_ bv12 64) (ite (= ((_ extract 50 50) (bvxor (bvsub C2 (_ bv1 64)) C2)) (_ bv1 1)) (_ bv13 64) ?x12922))))
 (let ((?x14736 (ite (= ((_ extract 53 53) (bvxor (bvsub C2 (_ bv1 64)) C2)) (_ bv1 1)) (_ bv10 64) (ite (= ((_ extract 52 52) (bvxor (bvsub C2 (_ bv1 64)) C2)) (_ bv1 1)) (_ bv11 64) ?x9829))))
 (let ((?x4891 (ite (= ((_ extract 55 55) (bvxor (bvsub C2 (_ bv1 64)) C2)) (_ bv1 1)) (_ bv8 64) (ite (= ((_ extract 54 54) (bvxor (bvsub C2 (_ bv1 64)) C2)) (_ bv1 1)) (_ bv9 64) ?x14736))))
 (let ((?x228 (ite (= ((_ extract 57 57) (bvxor (bvsub C2 (_ bv1 64)) C2)) (_ bv1 1)) (_ bv6 64) (ite (= ((_ extract 56 56) (bvxor (bvsub C2 (_ bv1 64)) C2)) (_ bv1 1)) (_ bv7 64) ?x4891))))
 (let ((?x16254 (ite (= ((_ extract 59 59) (bvxor (bvsub C2 (_ bv1 64)) C2)) (_ bv1 1)) (_ bv4 64) (ite (= ((_ extract 58 58) (bvxor (bvsub C2 (_ bv1 64)) C2)) (_ bv1 1)) (_ bv5 64) ?x228))))
 (let ((?x15683 (ite (= ((_ extract 61 61) (bvxor (bvsub C2 (_ bv1 64)) C2)) (_ bv1 1)) (_ bv2 64) (ite (= ((_ extract 60 60) (bvxor (bvsub C2 (_ bv1 64)) C2)) (_ bv1 1)) (_ bv3 64) ?x16254))))
 (let ((?x16349 (ite (= ((_ extract 63 63) (bvxor (bvsub C2 (_ bv1 64)) C2)) (_ bv1 1)) (_ bv0 64) (ite (= ((_ extract 62 62) (bvxor (bvsub C2 (_ bv1 64)) C2)) (_ bv1 1)) (_ bv1 64) ?x15683))))
 (let (($x10831 (=> $x9857 (= (bvand %B (bvsub (bvshl (_ bv1 64) (bvsub (_ bv64 64) ?x16349)) (_ bv1 64))) (_ bv0 64)))))
 (and $x10831 (= (bvand C1 C2) C2) $x15109 false)))))))))))))))))))))))))))))))))))))))
(check-sat)
