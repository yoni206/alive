(set-info :status unknown)
(declare-fun mem0 () (_ BitVec 8))
(declare-fun %p2 () (_ BitVec 64))
(declare-fun idx () (_ BitVec 64))
(declare-fun %p1 () (_ BitVec 64))
(declare-fun |ana_equivalentAddressValues(%p1, %p2)| () (_ BitVec 1))
(assert
 (let (($x10401 (or true true)))
 (let (($x18224 (and (distinct %p2 (_ bv0 64)) true)))
 (let (($x7718 (and (distinct %p1 (_ bv0 64)) true)))
 (let ((?x18812 (ite (and $x7718 $x10401 $x7718 $x10401 $x7718 $x10401 $x18224 $x10401 (= idx %p2)) (concat ((_ extract 7 5) mem0) ((_ extract 4 0) (concat mem0 ((_ extract 4 0) mem0)))) mem0)))
 (let (($x14853 (and $x7718 $x10401 $x7718 $x10401 $x7718 $x10401 $x18224 $x10401 (= idx (bvadd (bvadd %p2 (_ bv1 64)) (_ bv0 64))))))
 (let ((?x1587 (ite $x14853 ((_ extract 12 5) (concat mem0 ((_ extract 4 0) mem0))) ?x18812)))
 (let (($x15736 (= |ana_equivalentAddressValues(%p1, %p2)| (_ bv1 1))))
 (and (=> $x15736 (= %p1 %p2)) $x15736 (and (distinct ?x1587 mem0) true))))))))))
(check-sat)
