(set-info :status unknown)
(declare-fun %Y () (_ BitVec 11))
(declare-fun C2 () (_ BitVec 11))
(declare-fun C1 () (_ BitVec 49))
(declare-fun %X () (_ BitVec 49))
(assert
 (let ((?x9378 (ite (and (distinct ((_ extract 2 2) C2) (_ bv0 1)) true) (_ bv2 49) (ite (and (distinct ((_ extract 1 1) C2) (_ bv0 1)) true) (_ bv1 49) (_ bv0 49)))))
 (let ((?x14234 (ite (and (distinct ((_ extract 5 5) C2) (_ bv0 1)) true) (_ bv5 49) (ite (and (distinct ((_ extract 4 4) C2) (_ bv0 1)) true) (_ bv4 49) (_ bv3 49)))))
 (let ((?x3794 (ite (and (distinct ((_ extract 8 8) C2) (_ bv0 1)) true) (_ bv8 49) (ite (and (distinct ((_ extract 7 7) C2) (_ bv0 1)) true) (_ bv7 49) (_ bv6 49)))))
 (let ((?x23614 (ite (and (distinct ((_ extract 10 9) C2) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) C2) (_ bv0 1)) true) (_ bv10 49) (_ bv9 49)) ?x3794)))
 (let ((?x14138 (ite (and (distinct ((_ extract 10 6) C2) (_ bv0 5)) true) ?x23614 (ite (and (distinct ((_ extract 5 3) C2) (_ bv0 3)) true) ?x14234 ?x9378))))
 (let ((?x2221 (ite (and (distinct ((_ extract 3 2) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 3 3) C1) (_ bv0 1)) true) (_ bv3 49) (_ bv2 49)) (ite (and (distinct ((_ extract 1 1) C1) (_ bv0 1)) true) (_ bv1 49) (_ bv0 49)))))
 (let ((?x1185 (ite (and (distinct ((_ extract 6 6) C1) (_ bv0 1)) true) (_ bv6 49) (ite (and (distinct ((_ extract 5 5) C1) (_ bv0 1)) true) (_ bv5 49) (_ bv4 49)))))
 (let ((?x19571 (ite (and (distinct ((_ extract 9 9) C1) (_ bv0 1)) true) (_ bv9 49) (ite (and (distinct ((_ extract 8 8) C1) (_ bv0 1)) true) (_ bv8 49) (_ bv7 49)))))
 (let ((?x10044 (ite (and (distinct ((_ extract 12 12) C1) (_ bv0 1)) true) (_ bv12 49) (ite (and (distinct ((_ extract 11 11) C1) (_ bv0 1)) true) (_ bv11 49) (_ bv10 49)))))
 (let ((?x13290 (ite (and (distinct ((_ extract 12 7) C1) (_ bv0 6)) true) (ite (and (distinct ((_ extract 12 10) C1) (_ bv0 3)) true) ?x10044 ?x19571) (ite (and (distinct ((_ extract 6 4) C1) (_ bv0 3)) true) ?x1185 ?x2221))))
 (let ((?x15203 (ite (and (distinct ((_ extract 15 15) C1) (_ bv0 1)) true) (_ bv15 49) (ite (and (distinct ((_ extract 14 14) C1) (_ bv0 1)) true) (_ bv14 49) (_ bv13 49)))))
 (let ((?x10519 (ite (and (distinct ((_ extract 18 18) C1) (_ bv0 1)) true) (_ bv18 49) (ite (and (distinct ((_ extract 17 17) C1) (_ bv0 1)) true) (_ bv17 49) (_ bv16 49)))))
 (let ((?x9447 (ite (and (distinct ((_ extract 21 21) C1) (_ bv0 1)) true) (_ bv21 49) (ite (and (distinct ((_ extract 20 20) C1) (_ bv0 1)) true) (_ bv20 49) (_ bv19 49)))))
 (let ((?x4430 (ite (and (distinct ((_ extract 24 24) C1) (_ bv0 1)) true) (_ bv24 49) (ite (and (distinct ((_ extract 23 23) C1) (_ bv0 1)) true) (_ bv23 49) (_ bv22 49)))))
 (let ((?x15958 (ite (and (distinct ((_ extract 24 19) C1) (_ bv0 6)) true) (ite (and (distinct ((_ extract 24 22) C1) (_ bv0 3)) true) ?x4430 ?x9447) (ite (and (distinct ((_ extract 18 16) C1) (_ bv0 3)) true) ?x10519 ?x15203))))
 (let ((?x1180 (ite (and (distinct ((_ extract 27 27) C1) (_ bv0 1)) true) (_ bv27 49) (ite (and (distinct ((_ extract 26 26) C1) (_ bv0 1)) true) (_ bv26 49) (_ bv25 49)))))
 (let ((?x6529 (ite (and (distinct ((_ extract 30 30) C1) (_ bv0 1)) true) (_ bv30 49) (ite (and (distinct ((_ extract 29 29) C1) (_ bv0 1)) true) (_ bv29 49) (_ bv28 49)))))
 (let ((?x5132 (ite (and (distinct ((_ extract 33 33) C1) (_ bv0 1)) true) (_ bv33 49) (ite (and (distinct ((_ extract 32 32) C1) (_ bv0 1)) true) (_ bv32 49) (_ bv31 49)))))
 (let ((?x6677 (ite (and (distinct ((_ extract 36 36) C1) (_ bv0 1)) true) (_ bv36 49) (ite (and (distinct ((_ extract 35 35) C1) (_ bv0 1)) true) (_ bv35 49) (_ bv34 49)))))
 (let ((?x20265 (ite (and (distinct ((_ extract 36 31) C1) (_ bv0 6)) true) (ite (and (distinct ((_ extract 36 34) C1) (_ bv0 3)) true) ?x6677 ?x5132) (ite (and (distinct ((_ extract 30 28) C1) (_ bv0 3)) true) ?x6529 ?x1180))))
 (let ((?x17590 (ite (and (distinct ((_ extract 39 39) C1) (_ bv0 1)) true) (_ bv39 49) (ite (and (distinct ((_ extract 38 38) C1) (_ bv0 1)) true) (_ bv38 49) (_ bv37 49)))))
 (let ((?x16150 (ite (and (distinct ((_ extract 42 42) C1) (_ bv0 1)) true) (_ bv42 49) (ite (and (distinct ((_ extract 41 41) C1) (_ bv0 1)) true) (_ bv41 49) (_ bv40 49)))))
 (let ((?x17293 (ite (and (distinct ((_ extract 45 45) C1) (_ bv0 1)) true) (_ bv45 49) (ite (and (distinct ((_ extract 44 44) C1) (_ bv0 1)) true) (_ bv44 49) (_ bv43 49)))))
 (let ((?x12615 (ite (and (distinct ((_ extract 48 48) C1) (_ bv0 1)) true) (_ bv48 49) (ite (and (distinct ((_ extract 47 47) C1) (_ bv0 1)) true) (_ bv47 49) (_ bv46 49)))))
 (let ((?x13812 (ite (and (distinct ((_ extract 48 43) C1) (_ bv0 6)) true) (ite (and (distinct ((_ extract 48 46) C1) (_ bv0 3)) true) ?x12615 ?x17293) (ite (and (distinct ((_ extract 42 40) C1) (_ bv0 3)) true) ?x16150 ?x17590))))
 (let ((?x15230 (ite (and (distinct ((_ extract 48 25) C1) (_ bv0 24)) true) (ite (and (distinct ((_ extract 48 37) C1) (_ bv0 12)) true) ?x13812 ?x20265) (ite (and (distinct ((_ extract 24 13) C1) (_ bv0 12)) true) ?x15958 ?x13290))))
 (let ((?x15742 (bvsub ?x15230 ?x14138)))
 (let ((?x20021 (bvand %X C1)))
 (let (($x17302 (and (distinct (ite (= (ite (= ?x20021 (_ bv0 49)) (_ bv1 1) (_ bv0 1)) (_ bv1 1)) (bvor %Y C2) %Y) (bvor (bvxor ((_ extract 10 0) (bvlshr ?x20021 ?x15742)) C2) %Y)) true)))
 (let ((?x8834 (ite (and (distinct ((_ extract 3 2) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 3 3) C1) (_ bv0 1)) true) (_ bv3 32) (_ bv2 32)) (ite (and (distinct ((_ extract 1 1) C1) (_ bv0 1)) true) (_ bv1 32) (_ bv0 32)))))
 (let ((?x15873 (ite (and (distinct ((_ extract 6 6) C1) (_ bv0 1)) true) (_ bv6 32) (ite (and (distinct ((_ extract 5 5) C1) (_ bv0 1)) true) (_ bv5 32) (_ bv4 32)))))
 (let ((?x11291 (ite (and (distinct ((_ extract 9 9) C1) (_ bv0 1)) true) (_ bv9 32) (ite (and (distinct ((_ extract 8 8) C1) (_ bv0 1)) true) (_ bv8 32) (_ bv7 32)))))
 (let ((?x11800 (ite (and (distinct ((_ extract 12 12) C1) (_ bv0 1)) true) (_ bv12 32) (ite (and (distinct ((_ extract 11 11) C1) (_ bv0 1)) true) (_ bv11 32) (_ bv10 32)))))
 (let ((?x5556 (ite (and (distinct ((_ extract 12 7) C1) (_ bv0 6)) true) (ite (and (distinct ((_ extract 12 10) C1) (_ bv0 3)) true) ?x11800 ?x11291) (ite (and (distinct ((_ extract 6 4) C1) (_ bv0 3)) true) ?x15873 ?x8834))))
 (let ((?x9197 (ite (and (distinct ((_ extract 15 15) C1) (_ bv0 1)) true) (_ bv15 32) (ite (and (distinct ((_ extract 14 14) C1) (_ bv0 1)) true) (_ bv14 32) (_ bv13 32)))))
 (let ((?x21264 (ite (and (distinct ((_ extract 18 18) C1) (_ bv0 1)) true) (_ bv18 32) (ite (and (distinct ((_ extract 17 17) C1) (_ bv0 1)) true) (_ bv17 32) (_ bv16 32)))))
 (let ((?x19767 (ite (and (distinct ((_ extract 21 21) C1) (_ bv0 1)) true) (_ bv21 32) (ite (and (distinct ((_ extract 20 20) C1) (_ bv0 1)) true) (_ bv20 32) (_ bv19 32)))))
 (let ((?x19400 (ite (and (distinct ((_ extract 24 24) C1) (_ bv0 1)) true) (_ bv24 32) (ite (and (distinct ((_ extract 23 23) C1) (_ bv0 1)) true) (_ bv23 32) (_ bv22 32)))))
 (let ((?x14761 (ite (and (distinct ((_ extract 24 19) C1) (_ bv0 6)) true) (ite (and (distinct ((_ extract 24 22) C1) (_ bv0 3)) true) ?x19400 ?x19767) (ite (and (distinct ((_ extract 18 16) C1) (_ bv0 3)) true) ?x21264 ?x9197))))
 (let ((?x16976 (ite (and (distinct ((_ extract 27 27) C1) (_ bv0 1)) true) (_ bv27 32) (ite (and (distinct ((_ extract 26 26) C1) (_ bv0 1)) true) (_ bv26 32) (_ bv25 32)))))
 (let ((?x9824 (ite (and (distinct ((_ extract 30 30) C1) (_ bv0 1)) true) (_ bv30 32) (ite (and (distinct ((_ extract 29 29) C1) (_ bv0 1)) true) (_ bv29 32) (_ bv28 32)))))
 (let ((?x9407 (ite (and (distinct ((_ extract 33 33) C1) (_ bv0 1)) true) (_ bv33 32) (ite (and (distinct ((_ extract 32 32) C1) (_ bv0 1)) true) (_ bv32 32) (_ bv31 32)))))
 (let ((?x6768 (ite (and (distinct ((_ extract 36 36) C1) (_ bv0 1)) true) (_ bv36 32) (ite (and (distinct ((_ extract 35 35) C1) (_ bv0 1)) true) (_ bv35 32) (_ bv34 32)))))
 (let ((?x16065 (ite (and (distinct ((_ extract 36 31) C1) (_ bv0 6)) true) (ite (and (distinct ((_ extract 36 34) C1) (_ bv0 3)) true) ?x6768 ?x9407) (ite (and (distinct ((_ extract 30 28) C1) (_ bv0 3)) true) ?x9824 ?x16976))))
 (let ((?x869 (ite (and (distinct ((_ extract 39 39) C1) (_ bv0 1)) true) (_ bv39 32) (ite (and (distinct ((_ extract 38 38) C1) (_ bv0 1)) true) (_ bv38 32) (_ bv37 32)))))
 (let ((?x11814 (ite (and (distinct ((_ extract 42 42) C1) (_ bv0 1)) true) (_ bv42 32) (ite (and (distinct ((_ extract 41 41) C1) (_ bv0 1)) true) (_ bv41 32) (_ bv40 32)))))
 (let ((?x13938 (ite (and (distinct ((_ extract 45 45) C1) (_ bv0 1)) true) (_ bv45 32) (ite (and (distinct ((_ extract 44 44) C1) (_ bv0 1)) true) (_ bv44 32) (_ bv43 32)))))
 (let ((?x11787 (ite (and (distinct ((_ extract 48 48) C1) (_ bv0 1)) true) (_ bv48 32) (ite (and (distinct ((_ extract 47 47) C1) (_ bv0 1)) true) (_ bv47 32) (_ bv46 32)))))
 (let ((?x15976 (ite (and (distinct ((_ extract 48 43) C1) (_ bv0 6)) true) (ite (and (distinct ((_ extract 48 46) C1) (_ bv0 3)) true) ?x11787 ?x13938) (ite (and (distinct ((_ extract 42 40) C1) (_ bv0 3)) true) ?x11814 ?x869))))
 (let ((?x1063 (ite (and (distinct ((_ extract 48 25) C1) (_ bv0 24)) true) (ite (and (distinct ((_ extract 48 37) C1) (_ bv0 12)) true) ?x15976 ?x16065) (ite (and (distinct ((_ extract 24 13) C1) (_ bv0 12)) true) ?x14761 ?x5556))))
 (let ((?x3782 (ite (and (distinct ((_ extract 2 2) C2) (_ bv0 1)) true) (_ bv2 32) (ite (and (distinct ((_ extract 1 1) C2) (_ bv0 1)) true) (_ bv1 32) (_ bv0 32)))))
 (let ((?x14303 (ite (and (distinct ((_ extract 5 5) C2) (_ bv0 1)) true) (_ bv5 32) (ite (and (distinct ((_ extract 4 4) C2) (_ bv0 1)) true) (_ bv4 32) (_ bv3 32)))))
 (let ((?x12405 (ite (and (distinct ((_ extract 8 8) C2) (_ bv0 1)) true) (_ bv8 32) (ite (and (distinct ((_ extract 7 7) C2) (_ bv0 1)) true) (_ bv7 32) (_ bv6 32)))))
 (let ((?x10121 (ite (and (distinct ((_ extract 10 9) C2) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) C2) (_ bv0 1)) true) (_ bv10 32) (_ bv9 32)) ?x12405)))
 (let ((?x2148 (ite (and (distinct ((_ extract 10 6) C2) (_ bv0 5)) true) ?x10121 (ite (and (distinct ((_ extract 5 3) C2) (_ bv0 3)) true) ?x14303 ?x3782))))
 (and (and (and (distinct C1 (_ bv0 49)) true) (= (bvand C1 (bvsub C1 (_ bv1 49))) (_ bv0 49))) (and (and (distinct C2 (_ bv0 11)) true) (= (bvand C2 (bvsub C2 (_ bv1 11))) (_ bv0 11))) (bvslt ?x2148 ?x1063) $x17302)))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
