(set-info :status unknown)
(declare-fun C3 () (_ BitVec 11))
(declare-fun C2 () (_ BitVec 11))
(declare-fun C () (_ BitVec 42))
(assert
 (let ((?x4911 (ite (and (distinct ((_ extract 2 2) (bvsub C2 C3)) (_ bv0 1)) true) (_ bv2 11) (ite (and (distinct ((_ extract 1 1) (bvsub C2 C3)) (_ bv0 1)) true) (_ bv1 11) (_ bv0 11)))))
 (let ((?x3144 (ite (and (distinct ((_ extract 5 5) (bvsub C2 C3)) (_ bv0 1)) true) (_ bv5 11) (ite (and (distinct ((_ extract 4 4) (bvsub C2 C3)) (_ bv0 1)) true) (_ bv4 11) (_ bv3 11)))))
 (let ((?x6072 (ite (and (distinct ((_ extract 8 8) (bvsub C2 C3)) (_ bv0 1)) true) (_ bv8 11) (ite (and (distinct ((_ extract 7 7) (bvsub C2 C3)) (_ bv0 1)) true) (_ bv7 11) (_ bv6 11)))))
 (let ((?x4270 (ite (and (distinct ((_ extract 10 9) (bvsub C2 C3)) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) (bvsub C2 C3)) (_ bv0 1)) true) (_ bv10 11) (_ bv9 11)) ?x6072)))
 (let ((?x2265 (ite (and (distinct ((_ extract 10 6) (bvsub C2 C3)) (_ bv0 5)) true) ?x4270 (ite (and (distinct ((_ extract 5 3) (bvsub C2 C3)) (_ bv0 3)) true) ?x3144 ?x4911))))
 (let ((?x5233 (ite (and (distinct ((_ extract 2 2) C) (_ bv0 1)) true) (_ bv2 11) (ite (and (distinct ((_ extract 1 1) C) (_ bv0 1)) true) (_ bv1 11) (_ bv0 11)))))
 (let ((?x5441 (ite (and (distinct ((_ extract 5 5) C) (_ bv0 1)) true) (_ bv5 11) (ite (and (distinct ((_ extract 4 4) C) (_ bv0 1)) true) (_ bv4 11) (_ bv3 11)))))
 (let ((?x6501 (ite (and (distinct ((_ extract 8 8) C) (_ bv0 1)) true) (_ bv8 11) (ite (and (distinct ((_ extract 7 7) C) (_ bv0 1)) true) (_ bv7 11) (_ bv6 11)))))
 (let ((?x8341 (ite (and (distinct ((_ extract 10 9) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) C) (_ bv0 1)) true) (_ bv10 11) (_ bv9 11)) ?x6501)))
 (let ((?x4761 (ite (and (distinct ((_ extract 10 6) C) (_ bv0 5)) true) ?x8341 (ite (and (distinct ((_ extract 5 3) C) (_ bv0 3)) true) ?x5441 ?x5233))))
 (let ((?x6094 (ite (and (distinct ((_ extract 13 13) C) (_ bv0 1)) true) (_ bv13 11) (ite (and (distinct ((_ extract 12 12) C) (_ bv0 1)) true) (_ bv12 11) (_ bv11 11)))))
 (let ((?x6373 (ite (and (distinct ((_ extract 15 14) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 15 15) C) (_ bv0 1)) true) (_ bv15 11) (_ bv14 11)) ?x6094)))
 (let ((?x1749 (ite (and (distinct ((_ extract 18 18) C) (_ bv0 1)) true) (_ bv18 11) (ite (and (distinct ((_ extract 17 17) C) (_ bv0 1)) true) (_ bv17 11) (_ bv16 11)))))
 (let ((?x1285 (ite (and (distinct ((_ extract 20 19) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 20 20) C) (_ bv0 1)) true) (_ bv20 11) (_ bv19 11)) ?x1749)))
 (let ((?x5669 (ite (and (distinct ((_ extract 20 11) C) (_ bv0 10)) true) (ite (and (distinct ((_ extract 20 16) C) (_ bv0 5)) true) ?x1285 ?x6373) ?x4761)))
 (let ((?x3408 (ite (and (distinct ((_ extract 23 23) C) (_ bv0 1)) true) (_ bv23 11) (ite (and (distinct ((_ extract 22 22) C) (_ bv0 1)) true) (_ bv22 11) (_ bv21 11)))))
 (let ((?x5505 (ite (and (distinct ((_ extract 26 26) C) (_ bv0 1)) true) (_ bv26 11) (ite (and (distinct ((_ extract 25 25) C) (_ bv0 1)) true) (_ bv25 11) (_ bv24 11)))))
 (let ((?x1747 (ite (and (distinct ((_ extract 29 29) C) (_ bv0 1)) true) (_ bv29 11) (ite (and (distinct ((_ extract 28 28) C) (_ bv0 1)) true) (_ bv28 11) (_ bv27 11)))))
 (let ((?x2252 (ite (and (distinct ((_ extract 31 30) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 31 31) C) (_ bv0 1)) true) (_ bv31 11) (_ bv30 11)) ?x1747)))
 (let ((?x6147 (ite (and (distinct ((_ extract 31 27) C) (_ bv0 5)) true) ?x2252 (ite (and (distinct ((_ extract 26 24) C) (_ bv0 3)) true) ?x5505 ?x3408))))
 (let ((?x1726 (ite (and (distinct ((_ extract 34 34) C) (_ bv0 1)) true) (_ bv34 11) (ite (and (distinct ((_ extract 33 33) C) (_ bv0 1)) true) (_ bv33 11) (_ bv32 11)))))
 (let ((?x1566 (ite (and (distinct ((_ extract 36 35) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 36 36) C) (_ bv0 1)) true) (_ bv36 11) (_ bv35 11)) ?x1726)))
 (let ((?x5770 (ite (and (distinct ((_ extract 39 39) C) (_ bv0 1)) true) (_ bv39 11) (ite (and (distinct ((_ extract 38 38) C) (_ bv0 1)) true) (_ bv38 11) (_ bv37 11)))))
 (let ((?x1447 (ite (and (distinct ((_ extract 41 40) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 41 41) C) (_ bv0 1)) true) (_ bv41 11) (_ bv40 11)) ?x5770)))
 (let ((?x5932 (ite (and (distinct ((_ extract 41 32) C) (_ bv0 10)) true) (ite (and (distinct ((_ extract 41 37) C) (_ bv0 5)) true) ?x1447 ?x1566) ?x6147)))
 (let ((?x2656 (bvsub (ite (and (distinct ((_ extract 41 21) C) (_ bv0 21)) true) ?x5932 ?x5669) ?x2265)))
 (let ((?x1206 (ite (bvsgt (_ bv0 11) ?x2656) (_ bv0 11) ?x2656)))
 (let ((?x3740 (bvsub ?x2265 (ite (and (distinct ((_ extract 41 21) C) (_ bv0 21)) true) ?x5932 ?x5669))))
 (let ((?x7509 (ite (bvsgt (_ bv0 11) ?x3740) (_ bv0 11) ?x3740)))
 (let ((?x5651 (ite (and (distinct ((_ extract 2 2) C) (_ bv0 1)) true) (_ bv2 32) (ite (and (distinct ((_ extract 1 1) C) (_ bv0 1)) true) (_ bv1 32) (_ bv0 32)))))
 (let ((?x4446 (ite (and (distinct ((_ extract 5 5) C) (_ bv0 1)) true) (_ bv5 32) (ite (and (distinct ((_ extract 4 4) C) (_ bv0 1)) true) (_ bv4 32) (_ bv3 32)))))
 (let ((?x3484 (ite (and (distinct ((_ extract 8 8) C) (_ bv0 1)) true) (_ bv8 32) (ite (and (distinct ((_ extract 7 7) C) (_ bv0 1)) true) (_ bv7 32) (_ bv6 32)))))
 (let ((?x3839 (ite (and (distinct ((_ extract 10 9) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) C) (_ bv0 1)) true) (_ bv10 32) (_ bv9 32)) ?x3484)))
 (let ((?x5849 (ite (and (distinct ((_ extract 10 6) C) (_ bv0 5)) true) ?x3839 (ite (and (distinct ((_ extract 5 3) C) (_ bv0 3)) true) ?x4446 ?x5651))))
 (let ((?x2563 (ite (and (distinct ((_ extract 13 13) C) (_ bv0 1)) true) (_ bv13 32) (ite (and (distinct ((_ extract 12 12) C) (_ bv0 1)) true) (_ bv12 32) (_ bv11 32)))))
 (let ((?x3012 (ite (and (distinct ((_ extract 15 14) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 15 15) C) (_ bv0 1)) true) (_ bv15 32) (_ bv14 32)) ?x2563)))
 (let ((?x2023 (ite (and (distinct ((_ extract 18 18) C) (_ bv0 1)) true) (_ bv18 32) (ite (and (distinct ((_ extract 17 17) C) (_ bv0 1)) true) (_ bv17 32) (_ bv16 32)))))
 (let ((?x2303 (ite (and (distinct ((_ extract 20 19) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 20 20) C) (_ bv0 1)) true) (_ bv20 32) (_ bv19 32)) ?x2023)))
 (let ((?x5818 (ite (and (distinct ((_ extract 20 11) C) (_ bv0 10)) true) (ite (and (distinct ((_ extract 20 16) C) (_ bv0 5)) true) ?x2303 ?x3012) ?x5849)))
 (let ((?x1282 (ite (and (distinct ((_ extract 23 23) C) (_ bv0 1)) true) (_ bv23 32) (ite (and (distinct ((_ extract 22 22) C) (_ bv0 1)) true) (_ bv22 32) (_ bv21 32)))))
 (let ((?x7008 (ite (and (distinct ((_ extract 26 26) C) (_ bv0 1)) true) (_ bv26 32) (ite (and (distinct ((_ extract 25 25) C) (_ bv0 1)) true) (_ bv25 32) (_ bv24 32)))))
 (let ((?x1777 (ite (and (distinct ((_ extract 29 29) C) (_ bv0 1)) true) (_ bv29 32) (ite (and (distinct ((_ extract 28 28) C) (_ bv0 1)) true) (_ bv28 32) (_ bv27 32)))))
 (let ((?x5634 (ite (and (distinct ((_ extract 31 30) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 31 31) C) (_ bv0 1)) true) (_ bv31 32) (_ bv30 32)) ?x1777)))
 (let ((?x1783 (ite (and (distinct ((_ extract 31 27) C) (_ bv0 5)) true) ?x5634 (ite (and (distinct ((_ extract 26 24) C) (_ bv0 3)) true) ?x7008 ?x1282))))
 (let ((?x5925 (ite (and (distinct ((_ extract 34 34) C) (_ bv0 1)) true) (_ bv34 32) (ite (and (distinct ((_ extract 33 33) C) (_ bv0 1)) true) (_ bv33 32) (_ bv32 32)))))
 (let ((?x3500 (ite (and (distinct ((_ extract 36 35) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 36 36) C) (_ bv0 1)) true) (_ bv36 32) (_ bv35 32)) ?x5925)))
 (let ((?x2647 (ite (and (distinct ((_ extract 39 39) C) (_ bv0 1)) true) (_ bv39 32) (ite (and (distinct ((_ extract 38 38) C) (_ bv0 1)) true) (_ bv38 32) (_ bv37 32)))))
 (let ((?x4568 (ite (and (distinct ((_ extract 41 40) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 41 41) C) (_ bv0 1)) true) (_ bv41 32) (_ bv40 32)) ?x2647)))
 (let ((?x3013 (ite (and (distinct ((_ extract 41 32) C) (_ bv0 10)) true) (ite (and (distinct ((_ extract 41 37) C) (_ bv0 5)) true) ?x4568 ?x3500) ?x1783)))
 (let (($x1522 (and (and (distinct (bvsub C2 C3) (_ bv0 11)) true) (= (bvand (bvsub C2 C3) (bvsub (bvsub C2 C3) (_ bv1 11))) (_ bv0 11)))))
 (and (and (and (distinct C (_ bv0 42)) true) (= (bvand C (bvsub C (_ bv1 42))) (_ bv0 42))) $x1522 (bvslt (ite (and (distinct ((_ extract 41 21) C) (_ bv0 21)) true) ?x3013 ?x5818) (_ bv11 32)) (not (and (bvult ?x7509 (_ bv11 11)) (bvult ?x1206 (_ bv11 11))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
