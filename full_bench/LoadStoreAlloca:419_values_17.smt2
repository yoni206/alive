(set-info :status unknown)
(declare-fun %x () (_ BitVec 18))
(declare-fun mem0 () (_ BitVec 8))
(declare-fun %p1 () (_ BitVec 64))
(declare-fun %p2 () (_ BitVec 64))
(declare-fun |ana_equivalentAddressValues(%p1, %p2)| () (_ BitVec 1))
(assert
 (let ((?x13904 (concat ((_ extract 7 2) mem0) ((_ extract 1 0) %x))))
 (let ((?x5713 (ite (and (and (distinct %p1 (_ bv0 64)) true) (or true true) (= %p2 %p1)) ?x13904 mem0)))
 (let ((?x1989 ((_ extract 9 2) %x)))
 (let (($x9014 (or true true)))
 (let (($x6055 (and (distinct %p1 (_ bv0 64)) true)))
 (let ((?x11318 (ite (and $x6055 $x9014 (= %p2 (bvadd (bvadd %p1 (_ bv1 64)) (_ bv0 64)))) ?x1989 ?x5713)))
 (let ((?x8283 ((_ extract 17 10) %x)))
 (let ((?x6882 (ite (and $x6055 $x9014 (= %p2 (bvadd (bvadd %p1 (_ bv1 64)) (_ bv1 64)))) ?x8283 ?x11318)))
 (let ((?x5342 (ite (and $x6055 $x9014 (= (bvadd (bvadd %p2 (_ bv1 64)) (_ bv0 64)) %p1)) ?x13904 mem0)))
 (let (($x17660 (and $x6055 $x9014 (= (bvadd (bvadd %p2 (_ bv1 64)) (_ bv0 64)) (bvadd (bvadd %p1 (_ bv1 64)) (_ bv0 64))))))
 (let (($x17994 (and $x6055 $x9014 (= (bvadd (bvadd %p2 (_ bv1 64)) (_ bv0 64)) (bvadd (bvadd %p1 (_ bv1 64)) (_ bv1 64))))))
 (let ((?x1666 (ite (and $x6055 $x9014 (= (bvadd (bvadd %p2 (_ bv1 64)) (_ bv1 64)) %p1)) ?x13904 mem0)))
 (let (($x3705 (and $x6055 $x9014 (= (bvadd (bvadd %p2 (_ bv1 64)) (_ bv1 64)) (bvadd (bvadd %p1 (_ bv1 64)) (_ bv0 64))))))
 (let (($x13181 (and $x6055 $x9014 (= (bvadd (bvadd %p2 (_ bv1 64)) (_ bv1 64)) (bvadd (bvadd %p1 (_ bv1 64)) (_ bv1 64))))))
 (let ((?x14318 (concat (ite $x13181 ?x8283 (ite $x3705 ?x1989 ?x1666)) (ite $x17994 ?x8283 (ite $x17660 ?x1989 ?x5342)))))
 (let (($x3641 (= |ana_equivalentAddressValues(%p1, %p2)| (_ bv1 1))))
 (let (($x14815 (and (distinct %p2 (_ bv0 64)) true)))
 (and $x6055 $x9014 $x14815 $x9014 $x14815 $x9014 (=> $x3641 (= %p1 %p2)) $x3641 (and (distinct (concat ?x14318 ((_ extract 1 0) ?x6882)) %x) true))))))))))))))))))))
(check-sat)
