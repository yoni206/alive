(set-info :status unknown)
(declare-fun %Y () (_ BitVec 11))
(declare-fun C2 () (_ BitVec 11))
(declare-fun C1 () (_ BitVec 5))
(declare-fun %X () (_ BitVec 5))
(assert
 (let ((?x4552 (ite (and (distinct ((_ extract 2 2) C2) (_ bv0 1)) true) (_ bv2 5) (ite (and (distinct ((_ extract 1 1) C2) (_ bv0 1)) true) (_ bv1 5) (_ bv0 5)))))
 (let ((?x2840 (ite (and (distinct ((_ extract 5 5) C2) (_ bv0 1)) true) (_ bv5 5) (ite (and (distinct ((_ extract 4 4) C2) (_ bv0 1)) true) (_ bv4 5) (_ bv3 5)))))
 (let ((?x2519 (ite (and (distinct ((_ extract 8 8) C2) (_ bv0 1)) true) (_ bv8 5) (ite (and (distinct ((_ extract 7 7) C2) (_ bv0 1)) true) (_ bv7 5) (_ bv6 5)))))
 (let ((?x3497 (ite (and (distinct ((_ extract 10 9) C2) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) C2) (_ bv0 1)) true) (_ bv10 5) (_ bv9 5)) ?x2519)))
 (let ((?x6182 (ite (and (distinct ((_ extract 10 6) C2) (_ bv0 5)) true) ?x3497 (ite (and (distinct ((_ extract 5 3) C2) (_ bv0 3)) true) ?x2840 ?x4552))))
 (let ((?x2291 (ite (and (distinct ((_ extract 2 2) C1) (_ bv0 1)) true) (_ bv2 5) (ite (and (distinct ((_ extract 1 1) C1) (_ bv0 1)) true) (_ bv1 5) (_ bv0 5)))))
 (let ((?x3589 (ite (and (distinct ((_ extract 4 3) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 4 4) C1) (_ bv0 1)) true) (_ bv4 5) (_ bv3 5)) ?x2291)))
 (let ((?x2023 (bvsub ?x3589 ?x6182)))
 (let ((?x3795 (bvand %X C1)))
 (let ((?x4713 (bvor %Y C2)))
 (let (($x2784 (and (distinct (ite (= (ite (and (distinct ?x3795 (_ bv0 5)) true) (_ bv1 1) (_ bv0 1)) (_ bv1 1)) ?x4713 %Y) (bvor ((_ zero_extend 6) (bvlshr ?x3795 ?x2023)) %Y)) true)))
 (let ((?x1958 (ite (and (distinct ((_ extract 2 2) C1) (_ bv0 1)) true) (_ bv2 32) (ite (and (distinct ((_ extract 1 1) C1) (_ bv0 1)) true) (_ bv1 32) (_ bv0 32)))))
 (let ((?x4887 (ite (and (distinct ((_ extract 4 3) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 4 4) C1) (_ bv0 1)) true) (_ bv4 32) (_ bv3 32)) ?x1958)))
 (let ((?x3598 (ite (and (distinct ((_ extract 2 2) C2) (_ bv0 1)) true) (_ bv2 32) (ite (and (distinct ((_ extract 1 1) C2) (_ bv0 1)) true) (_ bv1 32) (_ bv0 32)))))
 (let ((?x2310 (ite (and (distinct ((_ extract 5 5) C2) (_ bv0 1)) true) (_ bv5 32) (ite (and (distinct ((_ extract 4 4) C2) (_ bv0 1)) true) (_ bv4 32) (_ bv3 32)))))
 (let ((?x2972 (ite (and (distinct ((_ extract 8 8) C2) (_ bv0 1)) true) (_ bv8 32) (ite (and (distinct ((_ extract 7 7) C2) (_ bv0 1)) true) (_ bv7 32) (_ bv6 32)))))
 (let ((?x4663 (ite (and (distinct ((_ extract 10 9) C2) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) C2) (_ bv0 1)) true) (_ bv10 32) (_ bv9 32)) ?x2972)))
 (let ((?x5721 (ite (and (distinct ((_ extract 10 6) C2) (_ bv0 5)) true) ?x4663 (ite (and (distinct ((_ extract 5 3) C2) (_ bv0 3)) true) ?x2310 ?x3598))))
 (and (and (and (distinct C1 (_ bv0 5)) true) (= (bvand C1 (bvsub C1 (_ bv1 5))) (_ bv0 5))) (and (and (distinct C2 (_ bv0 11)) true) (= (bvand C2 (bvsub C2 (_ bv1 11))) (_ bv0 11))) (bvslt ?x5721 ?x4887) $x2784))))))))))))))))))))
(check-sat)
