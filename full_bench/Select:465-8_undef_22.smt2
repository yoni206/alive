(set-info :status unknown)
(declare-fun C2 () (_ BitVec 11))
(declare-fun C1 () (_ BitVec 23))
(assert
 (let ((?x4239 (ite (and (distinct ((_ extract 2 2) C2) (_ bv0 1)) true) (_ bv2 23) (ite (and (distinct ((_ extract 1 1) C2) (_ bv0 1)) true) (_ bv1 23) (_ bv0 23)))))
 (let ((?x4141 (ite (and (distinct ((_ extract 5 5) C2) (_ bv0 1)) true) (_ bv5 23) (ite (and (distinct ((_ extract 4 4) C2) (_ bv0 1)) true) (_ bv4 23) (_ bv3 23)))))
 (let ((?x1532 (ite (and (distinct ((_ extract 8 8) C2) (_ bv0 1)) true) (_ bv8 23) (ite (and (distinct ((_ extract 7 7) C2) (_ bv0 1)) true) (_ bv7 23) (_ bv6 23)))))
 (let ((?x1480 (ite (and (distinct ((_ extract 10 9) C2) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) C2) (_ bv0 1)) true) (_ bv10 23) (_ bv9 23)) ?x1532)))
 (let ((?x3841 (ite (and (distinct ((_ extract 10 6) C2) (_ bv0 5)) true) ?x1480 (ite (and (distinct ((_ extract 5 3) C2) (_ bv0 3)) true) ?x4141 ?x4239))))
 (let ((?x2421 (ite (and (distinct ((_ extract 2 2) C1) (_ bv0 1)) true) (_ bv2 23) (ite (and (distinct ((_ extract 1 1) C1) (_ bv0 1)) true) (_ bv1 23) (_ bv0 23)))))
 (let ((?x3330 (ite (and (distinct ((_ extract 5 5) C1) (_ bv0 1)) true) (_ bv5 23) (ite (and (distinct ((_ extract 4 4) C1) (_ bv0 1)) true) (_ bv4 23) (_ bv3 23)))))
 (let ((?x6093 (ite (and (distinct ((_ extract 8 8) C1) (_ bv0 1)) true) (_ bv8 23) (ite (and (distinct ((_ extract 7 7) C1) (_ bv0 1)) true) (_ bv7 23) (_ bv6 23)))))
 (let ((?x5775 (ite (and (distinct ((_ extract 11 11) C1) (_ bv0 1)) true) (_ bv11 23) (ite (and (distinct ((_ extract 10 10) C1) (_ bv0 1)) true) (_ bv10 23) (_ bv9 23)))))
 (let ((?x5799 (ite (and (distinct ((_ extract 11 6) C1) (_ bv0 6)) true) (ite (and (distinct ((_ extract 11 9) C1) (_ bv0 3)) true) ?x5775 ?x6093) (ite (and (distinct ((_ extract 5 3) C1) (_ bv0 3)) true) ?x3330 ?x2421))))
 (let ((?x2513 (ite (and (distinct ((_ extract 14 14) C1) (_ bv0 1)) true) (_ bv14 23) (ite (and (distinct ((_ extract 13 13) C1) (_ bv0 1)) true) (_ bv13 23) (_ bv12 23)))))
 (let ((?x3013 (ite (and (distinct ((_ extract 17 17) C1) (_ bv0 1)) true) (_ bv17 23) (ite (and (distinct ((_ extract 16 16) C1) (_ bv0 1)) true) (_ bv16 23) (_ bv15 23)))))
 (let ((?x4353 (ite (and (distinct ((_ extract 20 20) C1) (_ bv0 1)) true) (_ bv20 23) (ite (and (distinct ((_ extract 19 19) C1) (_ bv0 1)) true) (_ bv19 23) (_ bv18 23)))))
 (let ((?x5864 (ite (and (distinct ((_ extract 22 21) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 22 22) C1) (_ bv0 1)) true) (_ bv22 23) (_ bv21 23)) ?x4353)))
 (let ((?x6717 (ite (and (distinct ((_ extract 22 18) C1) (_ bv0 5)) true) ?x5864 (ite (and (distinct ((_ extract 17 15) C1) (_ bv0 3)) true) ?x3013 ?x2513))))
 (let ((?x1724 (bvsub (ite (and (distinct ((_ extract 22 12) C1) (_ bv0 11)) true) ?x6717 ?x5799) ?x3841)))
 (let ((?x3930 (ite (and (distinct ((_ extract 2 2) C1) (_ bv0 1)) true) (_ bv2 32) (ite (and (distinct ((_ extract 1 1) C1) (_ bv0 1)) true) (_ bv1 32) (_ bv0 32)))))
 (let ((?x4516 (ite (and (distinct ((_ extract 5 5) C1) (_ bv0 1)) true) (_ bv5 32) (ite (and (distinct ((_ extract 4 4) C1) (_ bv0 1)) true) (_ bv4 32) (_ bv3 32)))))
 (let ((?x3473 (ite (and (distinct ((_ extract 8 8) C1) (_ bv0 1)) true) (_ bv8 32) (ite (and (distinct ((_ extract 7 7) C1) (_ bv0 1)) true) (_ bv7 32) (_ bv6 32)))))
 (let ((?x2841 (ite (and (distinct ((_ extract 11 11) C1) (_ bv0 1)) true) (_ bv11 32) (ite (and (distinct ((_ extract 10 10) C1) (_ bv0 1)) true) (_ bv10 32) (_ bv9 32)))))
 (let ((?x3567 (ite (and (distinct ((_ extract 11 6) C1) (_ bv0 6)) true) (ite (and (distinct ((_ extract 11 9) C1) (_ bv0 3)) true) ?x2841 ?x3473) (ite (and (distinct ((_ extract 5 3) C1) (_ bv0 3)) true) ?x4516 ?x3930))))
 (let ((?x2251 (ite (and (distinct ((_ extract 14 14) C1) (_ bv0 1)) true) (_ bv14 32) (ite (and (distinct ((_ extract 13 13) C1) (_ bv0 1)) true) (_ bv13 32) (_ bv12 32)))))
 (let ((?x1308 (ite (and (distinct ((_ extract 17 17) C1) (_ bv0 1)) true) (_ bv17 32) (ite (and (distinct ((_ extract 16 16) C1) (_ bv0 1)) true) (_ bv16 32) (_ bv15 32)))))
 (let ((?x4814 (ite (and (distinct ((_ extract 20 20) C1) (_ bv0 1)) true) (_ bv20 32) (ite (and (distinct ((_ extract 19 19) C1) (_ bv0 1)) true) (_ bv19 32) (_ bv18 32)))))
 (let ((?x6639 (ite (and (distinct ((_ extract 22 21) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 22 22) C1) (_ bv0 1)) true) (_ bv22 32) (_ bv21 32)) ?x4814)))
 (let ((?x1806 (ite (and (distinct ((_ extract 22 18) C1) (_ bv0 5)) true) ?x6639 (ite (and (distinct ((_ extract 17 15) C1) (_ bv0 3)) true) ?x1308 ?x2251))))
 (let ((?x2535 (ite (and (distinct ((_ extract 2 2) C2) (_ bv0 1)) true) (_ bv2 32) (ite (and (distinct ((_ extract 1 1) C2) (_ bv0 1)) true) (_ bv1 32) (_ bv0 32)))))
 (let ((?x2206 (ite (and (distinct ((_ extract 5 5) C2) (_ bv0 1)) true) (_ bv5 32) (ite (and (distinct ((_ extract 4 4) C2) (_ bv0 1)) true) (_ bv4 32) (_ bv3 32)))))
 (let ((?x2909 (ite (and (distinct ((_ extract 8 8) C2) (_ bv0 1)) true) (_ bv8 32) (ite (and (distinct ((_ extract 7 7) C2) (_ bv0 1)) true) (_ bv7 32) (_ bv6 32)))))
 (let ((?x5344 (ite (and (distinct ((_ extract 10 9) C2) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) C2) (_ bv0 1)) true) (_ bv10 32) (_ bv9 32)) ?x2909)))
 (let ((?x1985 (ite (and (distinct ((_ extract 10 6) C2) (_ bv0 5)) true) ?x5344 (ite (and (distinct ((_ extract 5 3) C2) (_ bv0 3)) true) ?x2206 ?x2535))))
 (and (and (and (distinct C1 (_ bv0 23)) true) (= (bvand C1 (bvsub C1 (_ bv1 23))) (_ bv0 23))) (and (and (distinct C2 (_ bv0 11)) true) (= (bvand C2 (bvsub C2 (_ bv1 11))) (_ bv0 11))) (bvslt ?x1985 (ite (and (distinct ((_ extract 22 12) C1) (_ bv0 11)) true) ?x1806 ?x3567)) (not (bvult ?x1724 (_ bv23 23))))))))))))))))))))))))))))))))))))
(check-sat)
