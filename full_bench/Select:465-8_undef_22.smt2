(set-info :status unknown)
(declare-fun C2 () (_ BitVec 11))
(declare-fun C1 () (_ BitVec 24))
(assert
 (let ((?x17372 (ite (and (distinct ((_ extract 2 2) C2) (_ bv0 1)) true) (_ bv2 24) (ite (and (distinct ((_ extract 1 1) C2) (_ bv0 1)) true) (_ bv1 24) (_ bv0 24)))))
 (let ((?x1864 (ite (and (distinct ((_ extract 5 5) C2) (_ bv0 1)) true) (_ bv5 24) (ite (and (distinct ((_ extract 4 4) C2) (_ bv0 1)) true) (_ bv4 24) (_ bv3 24)))))
 (let ((?x10188 (ite (and (distinct ((_ extract 8 8) C2) (_ bv0 1)) true) (_ bv8 24) (ite (and (distinct ((_ extract 7 7) C2) (_ bv0 1)) true) (_ bv7 24) (_ bv6 24)))))
 (let ((?x6965 (ite (and (distinct ((_ extract 10 9) C2) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) C2) (_ bv0 1)) true) (_ bv10 24) (_ bv9 24)) ?x10188)))
 (let ((?x14418 (ite (and (distinct ((_ extract 10 6) C2) (_ bv0 5)) true) ?x6965 (ite (and (distinct ((_ extract 5 3) C2) (_ bv0 3)) true) ?x1864 ?x17372))))
 (let ((?x17970 (ite (and (distinct ((_ extract 2 2) C1) (_ bv0 1)) true) (_ bv2 24) (ite (and (distinct ((_ extract 1 1) C1) (_ bv0 1)) true) (_ bv1 24) (_ bv0 24)))))
 (let ((?x17630 (ite (and (distinct ((_ extract 5 5) C1) (_ bv0 1)) true) (_ bv5 24) (ite (and (distinct ((_ extract 4 4) C1) (_ bv0 1)) true) (_ bv4 24) (_ bv3 24)))))
 (let ((?x7850 (ite (and (distinct ((_ extract 8 8) C1) (_ bv0 1)) true) (_ bv8 24) (ite (and (distinct ((_ extract 7 7) C1) (_ bv0 1)) true) (_ bv7 24) (_ bv6 24)))))
 (let ((?x2729 (ite (and (distinct ((_ extract 11 11) C1) (_ bv0 1)) true) (_ bv11 24) (ite (and (distinct ((_ extract 10 10) C1) (_ bv0 1)) true) (_ bv10 24) (_ bv9 24)))))
 (let ((?x650 (ite (and (distinct ((_ extract 11 6) C1) (_ bv0 6)) true) (ite (and (distinct ((_ extract 11 9) C1) (_ bv0 3)) true) ?x2729 ?x7850) (ite (and (distinct ((_ extract 5 3) C1) (_ bv0 3)) true) ?x17630 ?x17970))))
 (let ((?x19897 (ite (and (distinct ((_ extract 14 14) C1) (_ bv0 1)) true) (_ bv14 24) (ite (and (distinct ((_ extract 13 13) C1) (_ bv0 1)) true) (_ bv13 24) (_ bv12 24)))))
 (let ((?x18445 (ite (and (distinct ((_ extract 17 17) C1) (_ bv0 1)) true) (_ bv17 24) (ite (and (distinct ((_ extract 16 16) C1) (_ bv0 1)) true) (_ bv16 24) (_ bv15 24)))))
 (let ((?x6277 (ite (and (distinct ((_ extract 20 20) C1) (_ bv0 1)) true) (_ bv20 24) (ite (and (distinct ((_ extract 19 19) C1) (_ bv0 1)) true) (_ bv19 24) (_ bv18 24)))))
 (let ((?x10965 (ite (and (distinct ((_ extract 23 23) C1) (_ bv0 1)) true) (_ bv23 24) (ite (and (distinct ((_ extract 22 22) C1) (_ bv0 1)) true) (_ bv22 24) (_ bv21 24)))))
 (let ((?x16762 (ite (and (distinct ((_ extract 23 18) C1) (_ bv0 6)) true) (ite (and (distinct ((_ extract 23 21) C1) (_ bv0 3)) true) ?x10965 ?x6277) (ite (and (distinct ((_ extract 17 15) C1) (_ bv0 3)) true) ?x18445 ?x19897))))
 (let ((?x13426 (bvsub (ite (and (distinct ((_ extract 23 12) C1) (_ bv0 12)) true) ?x16762 ?x650) ?x14418)))
 (let ((?x8011 (ite (and (distinct ((_ extract 2 2) C1) (_ bv0 1)) true) (_ bv2 32) (ite (and (distinct ((_ extract 1 1) C1) (_ bv0 1)) true) (_ bv1 32) (_ bv0 32)))))
 (let ((?x8366 (ite (and (distinct ((_ extract 5 5) C1) (_ bv0 1)) true) (_ bv5 32) (ite (and (distinct ((_ extract 4 4) C1) (_ bv0 1)) true) (_ bv4 32) (_ bv3 32)))))
 (let ((?x8943 (ite (and (distinct ((_ extract 8 8) C1) (_ bv0 1)) true) (_ bv8 32) (ite (and (distinct ((_ extract 7 7) C1) (_ bv0 1)) true) (_ bv7 32) (_ bv6 32)))))
 (let ((?x6185 (ite (and (distinct ((_ extract 11 11) C1) (_ bv0 1)) true) (_ bv11 32) (ite (and (distinct ((_ extract 10 10) C1) (_ bv0 1)) true) (_ bv10 32) (_ bv9 32)))))
 (let ((?x12719 (ite (and (distinct ((_ extract 11 6) C1) (_ bv0 6)) true) (ite (and (distinct ((_ extract 11 9) C1) (_ bv0 3)) true) ?x6185 ?x8943) (ite (and (distinct ((_ extract 5 3) C1) (_ bv0 3)) true) ?x8366 ?x8011))))
 (let ((?x5997 (ite (and (distinct ((_ extract 14 14) C1) (_ bv0 1)) true) (_ bv14 32) (ite (and (distinct ((_ extract 13 13) C1) (_ bv0 1)) true) (_ bv13 32) (_ bv12 32)))))
 (let ((?x19996 (ite (and (distinct ((_ extract 17 17) C1) (_ bv0 1)) true) (_ bv17 32) (ite (and (distinct ((_ extract 16 16) C1) (_ bv0 1)) true) (_ bv16 32) (_ bv15 32)))))
 (let ((?x23786 (ite (and (distinct ((_ extract 20 20) C1) (_ bv0 1)) true) (_ bv20 32) (ite (and (distinct ((_ extract 19 19) C1) (_ bv0 1)) true) (_ bv19 32) (_ bv18 32)))))
 (let ((?x6144 (ite (and (distinct ((_ extract 23 23) C1) (_ bv0 1)) true) (_ bv23 32) (ite (and (distinct ((_ extract 22 22) C1) (_ bv0 1)) true) (_ bv22 32) (_ bv21 32)))))
 (let ((?x5297 (ite (and (distinct ((_ extract 23 18) C1) (_ bv0 6)) true) (ite (and (distinct ((_ extract 23 21) C1) (_ bv0 3)) true) ?x6144 ?x23786) (ite (and (distinct ((_ extract 17 15) C1) (_ bv0 3)) true) ?x19996 ?x5997))))
 (let ((?x2153 (ite (and (distinct ((_ extract 2 2) C2) (_ bv0 1)) true) (_ bv2 32) (ite (and (distinct ((_ extract 1 1) C2) (_ bv0 1)) true) (_ bv1 32) (_ bv0 32)))))
 (let ((?x6462 (ite (and (distinct ((_ extract 5 5) C2) (_ bv0 1)) true) (_ bv5 32) (ite (and (distinct ((_ extract 4 4) C2) (_ bv0 1)) true) (_ bv4 32) (_ bv3 32)))))
 (let ((?x12513 (ite (and (distinct ((_ extract 8 8) C2) (_ bv0 1)) true) (_ bv8 32) (ite (and (distinct ((_ extract 7 7) C2) (_ bv0 1)) true) (_ bv7 32) (_ bv6 32)))))
 (let ((?x6540 (ite (and (distinct ((_ extract 10 9) C2) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) C2) (_ bv0 1)) true) (_ bv10 32) (_ bv9 32)) ?x12513)))
 (let ((?x14461 (ite (and (distinct ((_ extract 10 6) C2) (_ bv0 5)) true) ?x6540 (ite (and (distinct ((_ extract 5 3) C2) (_ bv0 3)) true) ?x6462 ?x2153))))
 (and (and (and (distinct C1 (_ bv0 24)) true) (= (bvand C1 (bvsub C1 (_ bv1 24))) (_ bv0 24))) (and (and (distinct C2 (_ bv0 11)) true) (= (bvand C2 (bvsub C2 (_ bv1 11))) (_ bv0 11))) (bvslt ?x14461 (ite (and (distinct ((_ extract 23 12) C1) (_ bv0 12)) true) ?x5297 ?x12719)) (not (bvult ?x13426 (_ bv24 24))))))))))))))))))))))))))))))))))))
(check-sat)
