(set-info :status unknown)
(declare-fun %Y () (_ BitVec 11))
(declare-fun C2 () (_ BitVec 11))
(declare-fun C1 () (_ BitVec 22))
(declare-fun %X () (_ BitVec 22))
(assert
 (let ((?x4848 (ite (and (distinct ((_ extract 2 2) C2) (_ bv0 1)) true) (_ bv2 22) (ite (and (distinct ((_ extract 1 1) C2) (_ bv0 1)) true) (_ bv1 22) (_ bv0 22)))))
 (let ((?x2181 (ite (and (distinct ((_ extract 5 5) C2) (_ bv0 1)) true) (_ bv5 22) (ite (and (distinct ((_ extract 4 4) C2) (_ bv0 1)) true) (_ bv4 22) (_ bv3 22)))))
 (let ((?x1866 (ite (and (distinct ((_ extract 8 8) C2) (_ bv0 1)) true) (_ bv8 22) (ite (and (distinct ((_ extract 7 7) C2) (_ bv0 1)) true) (_ bv7 22) (_ bv6 22)))))
 (let ((?x6122 (ite (and (distinct ((_ extract 10 9) C2) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) C2) (_ bv0 1)) true) (_ bv10 22) (_ bv9 22)) ?x1866)))
 (let ((?x2919 (ite (and (distinct ((_ extract 10 6) C2) (_ bv0 5)) true) ?x6122 (ite (and (distinct ((_ extract 5 3) C2) (_ bv0 3)) true) ?x2181 ?x4848))))
 (let ((?x1428 (ite (and (distinct ((_ extract 2 2) C1) (_ bv0 1)) true) (_ bv2 22) (ite (and (distinct ((_ extract 1 1) C1) (_ bv0 1)) true) (_ bv1 22) (_ bv0 22)))))
 (let ((?x6796 (ite (and (distinct ((_ extract 5 5) C1) (_ bv0 1)) true) (_ bv5 22) (ite (and (distinct ((_ extract 4 4) C1) (_ bv0 1)) true) (_ bv4 22) (_ bv3 22)))))
 (let ((?x2344 (ite (and (distinct ((_ extract 8 8) C1) (_ bv0 1)) true) (_ bv8 22) (ite (and (distinct ((_ extract 7 7) C1) (_ bv0 1)) true) (_ bv7 22) (_ bv6 22)))))
 (let ((?x3299 (ite (and (distinct ((_ extract 10 9) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) C1) (_ bv0 1)) true) (_ bv10 22) (_ bv9 22)) ?x2344)))
 (let ((?x2343 (ite (and (distinct ((_ extract 10 6) C1) (_ bv0 5)) true) ?x3299 (ite (and (distinct ((_ extract 5 3) C1) (_ bv0 3)) true) ?x6796 ?x1428))))
 (let ((?x4370 (ite (and (distinct ((_ extract 13 13) C1) (_ bv0 1)) true) (_ bv13 22) (ite (and (distinct ((_ extract 12 12) C1) (_ bv0 1)) true) (_ bv12 22) (_ bv11 22)))))
 (let ((?x2214 (ite (and (distinct ((_ extract 16 16) C1) (_ bv0 1)) true) (_ bv16 22) (ite (and (distinct ((_ extract 15 15) C1) (_ bv0 1)) true) (_ bv15 22) (_ bv14 22)))))
 (let ((?x6595 (ite (and (distinct ((_ extract 19 19) C1) (_ bv0 1)) true) (_ bv19 22) (ite (and (distinct ((_ extract 18 18) C1) (_ bv0 1)) true) (_ bv18 22) (_ bv17 22)))))
 (let ((?x2235 (ite (and (distinct ((_ extract 21 20) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 21 21) C1) (_ bv0 1)) true) (_ bv21 22) (_ bv20 22)) ?x6595)))
 (let ((?x2874 (ite (and (distinct ((_ extract 21 17) C1) (_ bv0 5)) true) ?x2235 (ite (and (distinct ((_ extract 16 14) C1) (_ bv0 3)) true) ?x2214 ?x4370))))
 (let ((?x3007 (bvsub (ite (and (distinct ((_ extract 21 11) C1) (_ bv0 11)) true) ?x2874 ?x2343) ?x2919)))
 (let ((?x4725 (bvand %X C1)))
 (let (($x2983 (and (distinct (ite (= (ite (= ?x4725 (_ bv0 22)) (_ bv1 1) (_ bv0 1)) (_ bv1 1)) (bvor %Y C2) %Y) (bvor (bvxor ((_ extract 10 0) (bvlshr ?x4725 ?x3007)) C2) %Y)) true)))
 (let ((?x3639 (ite (and (distinct ((_ extract 2 2) C1) (_ bv0 1)) true) (_ bv2 32) (ite (and (distinct ((_ extract 1 1) C1) (_ bv0 1)) true) (_ bv1 32) (_ bv0 32)))))
 (let ((?x2490 (ite (and (distinct ((_ extract 5 5) C1) (_ bv0 1)) true) (_ bv5 32) (ite (and (distinct ((_ extract 4 4) C1) (_ bv0 1)) true) (_ bv4 32) (_ bv3 32)))))
 (let ((?x1624 (ite (and (distinct ((_ extract 8 8) C1) (_ bv0 1)) true) (_ bv8 32) (ite (and (distinct ((_ extract 7 7) C1) (_ bv0 1)) true) (_ bv7 32) (_ bv6 32)))))
 (let ((?x2963 (ite (and (distinct ((_ extract 10 9) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) C1) (_ bv0 1)) true) (_ bv10 32) (_ bv9 32)) ?x1624)))
 (let ((?x3545 (ite (and (distinct ((_ extract 10 6) C1) (_ bv0 5)) true) ?x2963 (ite (and (distinct ((_ extract 5 3) C1) (_ bv0 3)) true) ?x2490 ?x3639))))
 (let ((?x1486 (ite (and (distinct ((_ extract 13 13) C1) (_ bv0 1)) true) (_ bv13 32) (ite (and (distinct ((_ extract 12 12) C1) (_ bv0 1)) true) (_ bv12 32) (_ bv11 32)))))
 (let ((?x6035 (ite (and (distinct ((_ extract 16 16) C1) (_ bv0 1)) true) (_ bv16 32) (ite (and (distinct ((_ extract 15 15) C1) (_ bv0 1)) true) (_ bv15 32) (_ bv14 32)))))
 (let ((?x4456 (ite (and (distinct ((_ extract 19 19) C1) (_ bv0 1)) true) (_ bv19 32) (ite (and (distinct ((_ extract 18 18) C1) (_ bv0 1)) true) (_ bv18 32) (_ bv17 32)))))
 (let ((?x2506 (ite (and (distinct ((_ extract 21 20) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 21 21) C1) (_ bv0 1)) true) (_ bv21 32) (_ bv20 32)) ?x4456)))
 (let ((?x2533 (ite (and (distinct ((_ extract 21 17) C1) (_ bv0 5)) true) ?x2506 (ite (and (distinct ((_ extract 16 14) C1) (_ bv0 3)) true) ?x6035 ?x1486))))
 (let ((?x4459 (ite (and (distinct ((_ extract 2 2) C2) (_ bv0 1)) true) (_ bv2 32) (ite (and (distinct ((_ extract 1 1) C2) (_ bv0 1)) true) (_ bv1 32) (_ bv0 32)))))
 (let ((?x4358 (ite (and (distinct ((_ extract 5 5) C2) (_ bv0 1)) true) (_ bv5 32) (ite (and (distinct ((_ extract 4 4) C2) (_ bv0 1)) true) (_ bv4 32) (_ bv3 32)))))
 (let ((?x3681 (ite (and (distinct ((_ extract 8 8) C2) (_ bv0 1)) true) (_ bv8 32) (ite (and (distinct ((_ extract 7 7) C2) (_ bv0 1)) true) (_ bv7 32) (_ bv6 32)))))
 (let ((?x5580 (ite (and (distinct ((_ extract 10 9) C2) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) C2) (_ bv0 1)) true) (_ bv10 32) (_ bv9 32)) ?x3681)))
 (let ((?x4072 (ite (and (distinct ((_ extract 10 6) C2) (_ bv0 5)) true) ?x5580 (ite (and (distinct ((_ extract 5 3) C2) (_ bv0 3)) true) ?x4358 ?x4459))))
 (and (and (and (distinct C1 (_ bv0 22)) true) (= (bvand C1 (bvsub C1 (_ bv1 22))) (_ bv0 22))) (and (and (distinct C2 (_ bv0 11)) true) (= (bvand C2 (bvsub C2 (_ bv1 11))) (_ bv0 11))) (bvslt ?x4072 (ite (and (distinct ((_ extract 21 11) C1) (_ bv0 11)) true) ?x2533 ?x3545)) $x2983)))))))))))))))))))))))))))))))))))
(check-sat)
