(set-info :status unknown)
(declare-fun C2 () (_ BitVec 11))
(declare-fun C3 () (_ BitVec 11))
(declare-fun C () (_ BitVec 59))
(declare-fun %Op () (_ BitVec 59))
(assert
 (let ((?x2363 (bvsub C3 C2)))
 (let ((?x2926 (ite (and (distinct ((_ extract 2 2) ?x2363) (_ bv0 1)) true) (_ bv2 11) (ite (and (distinct ((_ extract 1 1) ?x2363) (_ bv0 1)) true) (_ bv1 11) (_ bv0 11)))))
 (let ((?x1691 (ite (and (distinct ((_ extract 5 5) ?x2363) (_ bv0 1)) true) (_ bv5 11) (ite (and (distinct ((_ extract 4 4) ?x2363) (_ bv0 1)) true) (_ bv4 11) (_ bv3 11)))))
 (let ((?x1917 (ite (and (distinct ((_ extract 8 8) ?x2363) (_ bv0 1)) true) (_ bv8 11) (ite (and (distinct ((_ extract 7 7) ?x2363) (_ bv0 1)) true) (_ bv7 11) (_ bv6 11)))))
 (let ((?x3290 (ite (and (distinct ((_ extract 10 9) ?x2363) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) ?x2363) (_ bv0 1)) true) (_ bv10 11) (_ bv9 11)) ?x1917)))
 (let ((?x2805 (ite (and (distinct ((_ extract 10 6) ?x2363) (_ bv0 5)) true) ?x3290 (ite (and (distinct ((_ extract 5 3) ?x2363) (_ bv0 3)) true) ?x1691 ?x2926))))
 (let ((?x7180 (ite (and (distinct ((_ extract 3 2) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 3 3) C) (_ bv0 1)) true) (_ bv3 11) (_ bv2 11)) (ite (and (distinct ((_ extract 1 1) C) (_ bv0 1)) true) (_ bv1 11) (_ bv0 11)))))
 (let ((?x3717 (ite (and (distinct ((_ extract 7 6) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 7 7) C) (_ bv0 1)) true) (_ bv7 11) (_ bv6 11)) (ite (and (distinct ((_ extract 5 5) C) (_ bv0 1)) true) (_ bv5 11) (_ bv4 11)))))
 (let ((?x4547 (ite (and (distinct ((_ extract 11 10) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 11 11) C) (_ bv0 1)) true) (_ bv11 11) (_ bv10 11)) (ite (and (distinct ((_ extract 9 9) C) (_ bv0 1)) true) (_ bv9 11) (_ bv8 11)))))
 (let ((?x5804 (ite (and (distinct ((_ extract 14 14) C) (_ bv0 1)) true) (_ bv14 11) (ite (and (distinct ((_ extract 13 13) C) (_ bv0 1)) true) (_ bv13 11) (_ bv12 11)))))
 (let ((?x6381 (ite (and (distinct ((_ extract 14 8) C) (_ bv0 7)) true) (ite (and (distinct ((_ extract 14 12) C) (_ bv0 3)) true) ?x5804 ?x4547) (ite (and (distinct ((_ extract 7 4) C) (_ bv0 4)) true) ?x3717 ?x7180))))
 (let ((?x8099 (ite (and (distinct ((_ extract 18 17) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 18 18) C) (_ bv0 1)) true) (_ bv18 11) (_ bv17 11)) (ite (and (distinct ((_ extract 16 16) C) (_ bv0 1)) true) (_ bv16 11) (_ bv15 11)))))
 (let ((?x2156 (ite (and (distinct ((_ extract 22 21) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 22 22) C) (_ bv0 1)) true) (_ bv22 11) (_ bv21 11)) (ite (and (distinct ((_ extract 20 20) C) (_ bv0 1)) true) (_ bv20 11) (_ bv19 11)))))
 (let ((?x6743 (ite (and (distinct ((_ extract 26 25) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 26 26) C) (_ bv0 1)) true) (_ bv26 11) (_ bv25 11)) (ite (and (distinct ((_ extract 24 24) C) (_ bv0 1)) true) (_ bv24 11) (_ bv23 11)))))
 (let ((?x5460 (ite (and (distinct ((_ extract 29 29) C) (_ bv0 1)) true) (_ bv29 11) (ite (and (distinct ((_ extract 28 28) C) (_ bv0 1)) true) (_ bv28 11) (_ bv27 11)))))
 (let ((?x2594 (ite (and (distinct ((_ extract 29 23) C) (_ bv0 7)) true) (ite (and (distinct ((_ extract 29 27) C) (_ bv0 3)) true) ?x5460 ?x6743) (ite (and (distinct ((_ extract 22 19) C) (_ bv0 4)) true) ?x2156 ?x8099))))
 (let ((?x7467 (ite (and (distinct ((_ extract 33 32) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 33 33) C) (_ bv0 1)) true) (_ bv33 11) (_ bv32 11)) (ite (and (distinct ((_ extract 31 31) C) (_ bv0 1)) true) (_ bv31 11) (_ bv30 11)))))
 (let ((?x4004 (ite (and (distinct ((_ extract 37 36) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 37 37) C) (_ bv0 1)) true) (_ bv37 11) (_ bv36 11)) (ite (and (distinct ((_ extract 35 35) C) (_ bv0 1)) true) (_ bv35 11) (_ bv34 11)))))
 (let ((?x5476 (ite (and (distinct ((_ extract 41 40) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 41 41) C) (_ bv0 1)) true) (_ bv41 11) (_ bv40 11)) (ite (and (distinct ((_ extract 39 39) C) (_ bv0 1)) true) (_ bv39 11) (_ bv38 11)))))
 (let ((?x1466 (ite (and (distinct ((_ extract 44 44) C) (_ bv0 1)) true) (_ bv44 11) (ite (and (distinct ((_ extract 43 43) C) (_ bv0 1)) true) (_ bv43 11) (_ bv42 11)))))
 (let ((?x4600 (ite (and (distinct ((_ extract 44 38) C) (_ bv0 7)) true) (ite (and (distinct ((_ extract 44 42) C) (_ bv0 3)) true) ?x1466 ?x5476) (ite (and (distinct ((_ extract 37 34) C) (_ bv0 4)) true) ?x4004 ?x7467))))
 (let ((?x1991 (ite (and (distinct ((_ extract 48 47) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 48 48) C) (_ bv0 1)) true) (_ bv48 11) (_ bv47 11)) (ite (and (distinct ((_ extract 46 46) C) (_ bv0 1)) true) (_ bv46 11) (_ bv45 11)))))
 (let ((?x2321 (ite (and (distinct ((_ extract 51 51) C) (_ bv0 1)) true) (_ bv51 11) (ite (and (distinct ((_ extract 50 50) C) (_ bv0 1)) true) (_ bv50 11) (_ bv49 11)))))
 (let ((?x1833 (ite (and (distinct ((_ extract 55 54) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 55 55) C) (_ bv0 1)) true) (_ bv55 11) (_ bv54 11)) (ite (and (distinct ((_ extract 53 53) C) (_ bv0 1)) true) (_ bv53 11) (_ bv52 11)))))
 (let ((?x7627 (ite (and (distinct ((_ extract 58 58) C) (_ bv0 1)) true) (_ bv58 11) (ite (and (distinct ((_ extract 57 57) C) (_ bv0 1)) true) (_ bv57 11) (_ bv56 11)))))
 (let ((?x4476 (ite (and (distinct ((_ extract 58 52) C) (_ bv0 7)) true) (ite (and (distinct ((_ extract 58 56) C) (_ bv0 3)) true) ?x7627 ?x1833) (ite (and (distinct ((_ extract 51 49) C) (_ bv0 3)) true) ?x2321 ?x1991))))
 (let ((?x5157 (ite (and (distinct ((_ extract 58 30) C) (_ bv0 29)) true) (ite (and (distinct ((_ extract 58 45) C) (_ bv0 14)) true) ?x4476 ?x4600) (ite (and (distinct ((_ extract 29 15) C) (_ bv0 15)) true) ?x2594 ?x6381))))
 (let ((?x2123 (bvsub ?x5157 ?x2805)))
 (let ((?x1460 (ite (bvsgt (_ bv0 11) ?x2123) (_ bv0 11) ?x2123)))
 (let ((?x3108 (bvsub ?x2805 ?x5157)))
 (let ((?x3458 (ite (bvsgt (_ bv0 11) ?x3108) (_ bv0 11) ?x3108)))
 (let ((?x3631 (bvadd (bvxor (bvlshr (bvshl ((_ extract 10 0) (bvand %Op C)) ?x3458) ?x1460) ?x2363) C2)))
 (let ((?x5923 (ite (= (ite (and (distinct (bvand %Op C) (_ bv0 59)) true) (_ bv1 1) (_ bv0 1)) (_ bv1 1)) C2 C3)))
 (let ((?x1630 (ite (and (distinct ((_ extract 3 2) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 3 3) C) (_ bv0 1)) true) (_ bv3 32) (_ bv2 32)) (ite (and (distinct ((_ extract 1 1) C) (_ bv0 1)) true) (_ bv1 32) (_ bv0 32)))))
 (let ((?x4298 (ite (and (distinct ((_ extract 7 6) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 7 7) C) (_ bv0 1)) true) (_ bv7 32) (_ bv6 32)) (ite (and (distinct ((_ extract 5 5) C) (_ bv0 1)) true) (_ bv5 32) (_ bv4 32)))))
 (let ((?x7915 (ite (and (distinct ((_ extract 11 10) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 11 11) C) (_ bv0 1)) true) (_ bv11 32) (_ bv10 32)) (ite (and (distinct ((_ extract 9 9) C) (_ bv0 1)) true) (_ bv9 32) (_ bv8 32)))))
 (let ((?x7006 (ite (and (distinct ((_ extract 14 14) C) (_ bv0 1)) true) (_ bv14 32) (ite (and (distinct ((_ extract 13 13) C) (_ bv0 1)) true) (_ bv13 32) (_ bv12 32)))))
 (let ((?x3205 (ite (and (distinct ((_ extract 14 8) C) (_ bv0 7)) true) (ite (and (distinct ((_ extract 14 12) C) (_ bv0 3)) true) ?x7006 ?x7915) (ite (and (distinct ((_ extract 7 4) C) (_ bv0 4)) true) ?x4298 ?x1630))))
 (let ((?x6772 (ite (and (distinct ((_ extract 18 17) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 18 18) C) (_ bv0 1)) true) (_ bv18 32) (_ bv17 32)) (ite (and (distinct ((_ extract 16 16) C) (_ bv0 1)) true) (_ bv16 32) (_ bv15 32)))))
 (let ((?x5323 (ite (and (distinct ((_ extract 22 21) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 22 22) C) (_ bv0 1)) true) (_ bv22 32) (_ bv21 32)) (ite (and (distinct ((_ extract 20 20) C) (_ bv0 1)) true) (_ bv20 32) (_ bv19 32)))))
 (let ((?x4494 (ite (and (distinct ((_ extract 26 25) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 26 26) C) (_ bv0 1)) true) (_ bv26 32) (_ bv25 32)) (ite (and (distinct ((_ extract 24 24) C) (_ bv0 1)) true) (_ bv24 32) (_ bv23 32)))))
 (let ((?x3450 (ite (and (distinct ((_ extract 29 29) C) (_ bv0 1)) true) (_ bv29 32) (ite (and (distinct ((_ extract 28 28) C) (_ bv0 1)) true) (_ bv28 32) (_ bv27 32)))))
 (let ((?x6559 (ite (and (distinct ((_ extract 29 23) C) (_ bv0 7)) true) (ite (and (distinct ((_ extract 29 27) C) (_ bv0 3)) true) ?x3450 ?x4494) (ite (and (distinct ((_ extract 22 19) C) (_ bv0 4)) true) ?x5323 ?x6772))))
 (let ((?x2753 (ite (and (distinct ((_ extract 33 32) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 33 33) C) (_ bv0 1)) true) (_ bv33 32) (_ bv32 32)) (ite (and (distinct ((_ extract 31 31) C) (_ bv0 1)) true) (_ bv31 32) (_ bv30 32)))))
 (let ((?x2422 (ite (and (distinct ((_ extract 37 36) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 37 37) C) (_ bv0 1)) true) (_ bv37 32) (_ bv36 32)) (ite (and (distinct ((_ extract 35 35) C) (_ bv0 1)) true) (_ bv35 32) (_ bv34 32)))))
 (let ((?x1920 (ite (and (distinct ((_ extract 41 40) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 41 41) C) (_ bv0 1)) true) (_ bv41 32) (_ bv40 32)) (ite (and (distinct ((_ extract 39 39) C) (_ bv0 1)) true) (_ bv39 32) (_ bv38 32)))))
 (let ((?x1117 (ite (and (distinct ((_ extract 44 44) C) (_ bv0 1)) true) (_ bv44 32) (ite (and (distinct ((_ extract 43 43) C) (_ bv0 1)) true) (_ bv43 32) (_ bv42 32)))))
 (let ((?x3055 (ite (and (distinct ((_ extract 44 38) C) (_ bv0 7)) true) (ite (and (distinct ((_ extract 44 42) C) (_ bv0 3)) true) ?x1117 ?x1920) (ite (and (distinct ((_ extract 37 34) C) (_ bv0 4)) true) ?x2422 ?x2753))))
 (let ((?x2671 (ite (and (distinct ((_ extract 48 47) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 48 48) C) (_ bv0 1)) true) (_ bv48 32) (_ bv47 32)) (ite (and (distinct ((_ extract 46 46) C) (_ bv0 1)) true) (_ bv46 32) (_ bv45 32)))))
 (let ((?x5775 (ite (and (distinct ((_ extract 51 51) C) (_ bv0 1)) true) (_ bv51 32) (ite (and (distinct ((_ extract 50 50) C) (_ bv0 1)) true) (_ bv50 32) (_ bv49 32)))))
 (let ((?x5474 (ite (and (distinct ((_ extract 55 54) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 55 55) C) (_ bv0 1)) true) (_ bv55 32) (_ bv54 32)) (ite (and (distinct ((_ extract 53 53) C) (_ bv0 1)) true) (_ bv53 32) (_ bv52 32)))))
 (let ((?x2472 (ite (and (distinct ((_ extract 58 58) C) (_ bv0 1)) true) (_ bv58 32) (ite (and (distinct ((_ extract 57 57) C) (_ bv0 1)) true) (_ bv57 32) (_ bv56 32)))))
 (let ((?x7368 (ite (and (distinct ((_ extract 58 52) C) (_ bv0 7)) true) (ite (and (distinct ((_ extract 58 56) C) (_ bv0 3)) true) ?x2472 ?x5474) (ite (and (distinct ((_ extract 51 49) C) (_ bv0 3)) true) ?x5775 ?x2671))))
 (let ((?x3620 (ite (and (distinct ((_ extract 58 30) C) (_ bv0 29)) true) (ite (and (distinct ((_ extract 58 45) C) (_ bv0 14)) true) ?x7368 ?x3055) (ite (and (distinct ((_ extract 29 15) C) (_ bv0 15)) true) ?x6559 ?x3205))))
 (and (and (and (distinct C (_ bv0 59)) true) (= (bvand C (bvsub C (_ bv1 59))) (_ bv0 59))) (and (and (distinct ?x2363 (_ bv0 11)) true) (= (bvand ?x2363 (bvsub ?x2363 (_ bv1 11))) (_ bv0 11))) (bvslt ?x3620 (_ bv11 32)) (and (distinct ?x5923 ?x3631) true)))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
