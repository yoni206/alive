(set-info :status unknown)
(declare-fun mem0 () (_ BitVec 8))
(declare-fun %x () (_ BitVec 13))
(declare-fun %p1 () (_ BitVec 64))
(declare-fun idx () (_ BitVec 64))
(declare-fun |ana_equivalentAddressValues(%p1, %p2)| () (_ BitVec 1))
(declare-fun %p2 () (_ BitVec 64))
(assert
 (let ((?x8685 (concat ((_ extract 7 5) mem0) ((_ extract 4 0) %x))))
 (let ((?x286 (ite (and (and (distinct %p1 (_ bv0 64)) true) (or true true) (= idx %p1)) ?x8685 mem0)))
 (let ((?x6191 ((_ extract 12 5) %x)))
 (let (($x19815 (or true true)))
 (let (($x586 (and (distinct %p1 (_ bv0 64)) true)))
 (let ((?x5433 (ite (and $x586 $x19815 (= idx (bvadd (bvadd %p1 (_ bv1 64)) (_ bv0 64)))) ?x6191 ?x286)))
 (let (($x13248 (= |ana_equivalentAddressValues(%p1, %p2)| (_ bv1 1))))
 (and (=> $x13248 (= %p1 %p2)) $x13248 (and (distinct ?x5433 ?x5433) true))))))))))
(check-sat)
