(set-info :status unknown)
(declare-fun mem0 () (_ BitVec 8))
(declare-fun %x () (_ BitVec 43))
(declare-fun %p1 () (_ BitVec 64))
(declare-fun idx () (_ BitVec 64))
(declare-fun |ana_equivalentAddressValues(%p1, %p2)| () (_ BitVec 1))
(declare-fun %p2 () (_ BitVec 64))
(assert
 (let ((?x6624 (concat ((_ extract 7 3) mem0) ((_ extract 2 0) %x))))
 (let ((?x14589 (ite (and (and (distinct %p1 (_ bv0 64)) true) (or true true) (= idx %p1)) ?x6624 mem0)))
 (let ((?x17801 ((_ extract 10 3) %x)))
 (let (($x22796 (or true true)))
 (let (($x15927 (and (distinct %p1 (_ bv0 64)) true)))
 (let ((?x21161 (ite (and $x15927 $x22796 (= idx (bvadd (bvadd %p1 (_ bv1 64)) (_ bv0 64)))) ?x17801 ?x14589)))
 (let ((?x12432 ((_ extract 18 11) %x)))
 (let ((?x21669 (ite (and $x15927 $x22796 (= idx (bvadd (bvadd %p1 (_ bv1 64)) (_ bv1 64)))) ?x12432 ?x21161)))
 (let ((?x15172 ((_ extract 26 19) %x)))
 (let ((?x3560 (ite (and $x15927 $x22796 (= idx (bvadd (bvadd %p1 (_ bv1 64)) (_ bv2 64)))) ?x15172 ?x21669)))
 (let ((?x22445 ((_ extract 34 27) %x)))
 (let ((?x5215 (ite (and $x15927 $x22796 (= idx (bvadd (bvadd %p1 (_ bv1 64)) (_ bv3 64)))) ?x22445 ?x3560)))
 (let ((?x24966 ((_ extract 42 35) %x)))
 (let ((?x18317 (ite (and $x15927 $x22796 (= idx (bvadd (bvadd %p1 (_ bv1 64)) (_ bv4 64)))) ?x24966 ?x5215)))
 (let (($x18536 (= |ana_equivalentAddressValues(%p1, %p2)| (_ bv1 1))))
 (and (=> $x18536 (= %p1 %p2)) $x18536 (and (distinct ?x18317 ?x18317) true))))))))))))))))))
(check-sat)
