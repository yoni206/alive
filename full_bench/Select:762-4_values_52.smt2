(set-info :status unknown)
(declare-fun C2 () (_ BitVec 11))
(declare-fun C3 () (_ BitVec 11))
(declare-fun C () (_ BitVec 57))
(declare-fun %Op () (_ BitVec 57))
(assert
 (let ((?x2363 (bvsub C3 C2)))
 (let ((?x2357 (ite (and (distinct ((_ extract 2 2) ?x2363) (_ bv0 1)) true) (_ bv2 11) (ite (and (distinct ((_ extract 1 1) ?x2363) (_ bv0 1)) true) (_ bv1 11) (_ bv0 11)))))
 (let ((?x3450 (ite (and (distinct ((_ extract 5 5) ?x2363) (_ bv0 1)) true) (_ bv5 11) (ite (and (distinct ((_ extract 4 4) ?x2363) (_ bv0 1)) true) (_ bv4 11) (_ bv3 11)))))
 (let ((?x2055 (ite (and (distinct ((_ extract 8 8) ?x2363) (_ bv0 1)) true) (_ bv8 11) (ite (and (distinct ((_ extract 7 7) ?x2363) (_ bv0 1)) true) (_ bv7 11) (_ bv6 11)))))
 (let ((?x4599 (ite (and (distinct ((_ extract 10 9) ?x2363) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) ?x2363) (_ bv0 1)) true) (_ bv10 11) (_ bv9 11)) ?x2055)))
 (let ((?x4322 (ite (and (distinct ((_ extract 10 6) ?x2363) (_ bv0 5)) true) ?x4599 (ite (and (distinct ((_ extract 5 3) ?x2363) (_ bv0 3)) true) ?x3450 ?x2357))))
 (let ((?x2020 (ite (and (distinct ((_ extract 3 2) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 3 3) C) (_ bv0 1)) true) (_ bv3 11) (_ bv2 11)) (ite (and (distinct ((_ extract 1 1) C) (_ bv0 1)) true) (_ bv1 11) (_ bv0 11)))))
 (let ((?x3890 (ite (and (distinct ((_ extract 7 6) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 7 7) C) (_ bv0 1)) true) (_ bv7 11) (_ bv6 11)) (ite (and (distinct ((_ extract 5 5) C) (_ bv0 1)) true) (_ bv5 11) (_ bv4 11)))))
 (let ((?x1811 (ite (and (distinct ((_ extract 11 10) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 11 11) C) (_ bv0 1)) true) (_ bv11 11) (_ bv10 11)) (ite (and (distinct ((_ extract 9 9) C) (_ bv0 1)) true) (_ bv9 11) (_ bv8 11)))))
 (let ((?x5323 (ite (and (distinct ((_ extract 14 14) C) (_ bv0 1)) true) (_ bv14 11) (ite (and (distinct ((_ extract 13 13) C) (_ bv0 1)) true) (_ bv13 11) (_ bv12 11)))))
 (let ((?x1963 (ite (and (distinct ((_ extract 14 8) C) (_ bv0 7)) true) (ite (and (distinct ((_ extract 14 12) C) (_ bv0 3)) true) ?x5323 ?x1811) (ite (and (distinct ((_ extract 7 4) C) (_ bv0 4)) true) ?x3890 ?x2020))))
 (let ((?x8083 (ite (and (distinct ((_ extract 18 17) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 18 18) C) (_ bv0 1)) true) (_ bv18 11) (_ bv17 11)) (ite (and (distinct ((_ extract 16 16) C) (_ bv0 1)) true) (_ bv16 11) (_ bv15 11)))))
 (let ((?x7368 (ite (and (distinct ((_ extract 21 21) C) (_ bv0 1)) true) (_ bv21 11) (ite (and (distinct ((_ extract 20 20) C) (_ bv0 1)) true) (_ bv20 11) (_ bv19 11)))))
 (let ((?x6370 (ite (and (distinct ((_ extract 25 24) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 25 25) C) (_ bv0 1)) true) (_ bv25 11) (_ bv24 11)) (ite (and (distinct ((_ extract 23 23) C) (_ bv0 1)) true) (_ bv23 11) (_ bv22 11)))))
 (let ((?x5112 (ite (and (distinct ((_ extract 28 28) C) (_ bv0 1)) true) (_ bv28 11) (ite (and (distinct ((_ extract 27 27) C) (_ bv0 1)) true) (_ bv27 11) (_ bv26 11)))))
 (let ((?x8150 (ite (and (distinct ((_ extract 28 22) C) (_ bv0 7)) true) (ite (and (distinct ((_ extract 28 26) C) (_ bv0 3)) true) ?x5112 ?x6370) (ite (and (distinct ((_ extract 21 19) C) (_ bv0 3)) true) ?x7368 ?x8083))))
 (let ((?x4728 (ite (and (distinct ((_ extract 32 31) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 32 32) C) (_ bv0 1)) true) (_ bv32 11) (_ bv31 11)) (ite (and (distinct ((_ extract 30 30) C) (_ bv0 1)) true) (_ bv30 11) (_ bv29 11)))))
 (let ((?x3899 (ite (and (distinct ((_ extract 35 35) C) (_ bv0 1)) true) (_ bv35 11) (ite (and (distinct ((_ extract 34 34) C) (_ bv0 1)) true) (_ bv34 11) (_ bv33 11)))))
 (let ((?x3434 (ite (and (distinct ((_ extract 39 38) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 39 39) C) (_ bv0 1)) true) (_ bv39 11) (_ bv38 11)) (ite (and (distinct ((_ extract 37 37) C) (_ bv0 1)) true) (_ bv37 11) (_ bv36 11)))))
 (let ((?x2717 (ite (and (distinct ((_ extract 42 42) C) (_ bv0 1)) true) (_ bv42 11) (ite (and (distinct ((_ extract 41 41) C) (_ bv0 1)) true) (_ bv41 11) (_ bv40 11)))))
 (let ((?x5775 (ite (and (distinct ((_ extract 42 36) C) (_ bv0 7)) true) (ite (and (distinct ((_ extract 42 40) C) (_ bv0 3)) true) ?x2717 ?x3434) (ite (and (distinct ((_ extract 35 33) C) (_ bv0 3)) true) ?x3899 ?x4728))))
 (let ((?x2445 (ite (and (distinct ((_ extract 46 45) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 46 46) C) (_ bv0 1)) true) (_ bv46 11) (_ bv45 11)) (ite (and (distinct ((_ extract 44 44) C) (_ bv0 1)) true) (_ bv44 11) (_ bv43 11)))))
 (let ((?x4651 (ite (and (distinct ((_ extract 49 49) C) (_ bv0 1)) true) (_ bv49 11) (ite (and (distinct ((_ extract 48 48) C) (_ bv0 1)) true) (_ bv48 11) (_ bv47 11)))))
 (let ((?x8441 (ite (and (distinct ((_ extract 53 52) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 53 53) C) (_ bv0 1)) true) (_ bv53 11) (_ bv52 11)) (ite (and (distinct ((_ extract 51 51) C) (_ bv0 1)) true) (_ bv51 11) (_ bv50 11)))))
 (let ((?x6605 (ite (and (distinct ((_ extract 56 56) C) (_ bv0 1)) true) (_ bv56 11) (ite (and (distinct ((_ extract 55 55) C) (_ bv0 1)) true) (_ bv55 11) (_ bv54 11)))))
 (let ((?x2064 (ite (and (distinct ((_ extract 56 50) C) (_ bv0 7)) true) (ite (and (distinct ((_ extract 56 54) C) (_ bv0 3)) true) ?x6605 ?x8441) (ite (and (distinct ((_ extract 49 47) C) (_ bv0 3)) true) ?x4651 ?x2445))))
 (let ((?x7471 (ite (and (distinct ((_ extract 56 29) C) (_ bv0 28)) true) (ite (and (distinct ((_ extract 56 43) C) (_ bv0 14)) true) ?x2064 ?x5775) (ite (and (distinct ((_ extract 28 15) C) (_ bv0 14)) true) ?x8150 ?x1963))))
 (let ((?x5119 (bvsub ?x7471 ?x4322)))
 (let ((?x6425 (ite (bvsgt (_ bv0 11) ?x5119) (_ bv0 11) ?x5119)))
 (let ((?x4339 (bvsub ?x4322 ?x7471)))
 (let ((?x6433 (ite (bvsgt (_ bv0 11) ?x4339) (_ bv0 11) ?x4339)))
 (let ((?x4216 (bvadd (bvxor (bvlshr (bvshl ((_ extract 10 0) (bvand %Op C)) ?x6433) ?x6425) ?x2363) C2)))
 (let ((?x4948 (ite (= (ite (and (distinct (bvand %Op C) (_ bv0 57)) true) (_ bv1 1) (_ bv0 1)) (_ bv1 1)) C2 C3)))
 (let ((?x1771 (ite (and (distinct ((_ extract 3 2) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 3 3) C) (_ bv0 1)) true) (_ bv3 32) (_ bv2 32)) (ite (and (distinct ((_ extract 1 1) C) (_ bv0 1)) true) (_ bv1 32) (_ bv0 32)))))
 (let ((?x2258 (ite (and (distinct ((_ extract 7 6) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 7 7) C) (_ bv0 1)) true) (_ bv7 32) (_ bv6 32)) (ite (and (distinct ((_ extract 5 5) C) (_ bv0 1)) true) (_ bv5 32) (_ bv4 32)))))
 (let ((?x7587 (ite (and (distinct ((_ extract 11 10) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 11 11) C) (_ bv0 1)) true) (_ bv11 32) (_ bv10 32)) (ite (and (distinct ((_ extract 9 9) C) (_ bv0 1)) true) (_ bv9 32) (_ bv8 32)))))
 (let ((?x6539 (ite (and (distinct ((_ extract 14 14) C) (_ bv0 1)) true) (_ bv14 32) (ite (and (distinct ((_ extract 13 13) C) (_ bv0 1)) true) (_ bv13 32) (_ bv12 32)))))
 (let ((?x5292 (ite (and (distinct ((_ extract 14 8) C) (_ bv0 7)) true) (ite (and (distinct ((_ extract 14 12) C) (_ bv0 3)) true) ?x6539 ?x7587) (ite (and (distinct ((_ extract 7 4) C) (_ bv0 4)) true) ?x2258 ?x1771))))
 (let ((?x6402 (ite (and (distinct ((_ extract 18 17) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 18 18) C) (_ bv0 1)) true) (_ bv18 32) (_ bv17 32)) (ite (and (distinct ((_ extract 16 16) C) (_ bv0 1)) true) (_ bv16 32) (_ bv15 32)))))
 (let ((?x5132 (ite (and (distinct ((_ extract 21 21) C) (_ bv0 1)) true) (_ bv21 32) (ite (and (distinct ((_ extract 20 20) C) (_ bv0 1)) true) (_ bv20 32) (_ bv19 32)))))
 (let ((?x4972 (ite (and (distinct ((_ extract 25 24) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 25 25) C) (_ bv0 1)) true) (_ bv25 32) (_ bv24 32)) (ite (and (distinct ((_ extract 23 23) C) (_ bv0 1)) true) (_ bv23 32) (_ bv22 32)))))
 (let ((?x4188 (ite (and (distinct ((_ extract 28 28) C) (_ bv0 1)) true) (_ bv28 32) (ite (and (distinct ((_ extract 27 27) C) (_ bv0 1)) true) (_ bv27 32) (_ bv26 32)))))
 (let ((?x6346 (ite (and (distinct ((_ extract 28 22) C) (_ bv0 7)) true) (ite (and (distinct ((_ extract 28 26) C) (_ bv0 3)) true) ?x4188 ?x4972) (ite (and (distinct ((_ extract 21 19) C) (_ bv0 3)) true) ?x5132 ?x6402))))
 (let ((?x3034 (ite (and (distinct ((_ extract 32 31) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 32 32) C) (_ bv0 1)) true) (_ bv32 32) (_ bv31 32)) (ite (and (distinct ((_ extract 30 30) C) (_ bv0 1)) true) (_ bv30 32) (_ bv29 32)))))
 (let ((?x2853 (ite (and (distinct ((_ extract 35 35) C) (_ bv0 1)) true) (_ bv35 32) (ite (and (distinct ((_ extract 34 34) C) (_ bv0 1)) true) (_ bv34 32) (_ bv33 32)))))
 (let ((?x4975 (ite (and (distinct ((_ extract 39 38) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 39 39) C) (_ bv0 1)) true) (_ bv39 32) (_ bv38 32)) (ite (and (distinct ((_ extract 37 37) C) (_ bv0 1)) true) (_ bv37 32) (_ bv36 32)))))
 (let ((?x5073 (ite (and (distinct ((_ extract 42 42) C) (_ bv0 1)) true) (_ bv42 32) (ite (and (distinct ((_ extract 41 41) C) (_ bv0 1)) true) (_ bv41 32) (_ bv40 32)))))
 (let ((?x3508 (ite (and (distinct ((_ extract 42 36) C) (_ bv0 7)) true) (ite (and (distinct ((_ extract 42 40) C) (_ bv0 3)) true) ?x5073 ?x4975) (ite (and (distinct ((_ extract 35 33) C) (_ bv0 3)) true) ?x2853 ?x3034))))
 (let ((?x7851 (ite (and (distinct ((_ extract 46 45) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 46 46) C) (_ bv0 1)) true) (_ bv46 32) (_ bv45 32)) (ite (and (distinct ((_ extract 44 44) C) (_ bv0 1)) true) (_ bv44 32) (_ bv43 32)))))
 (let ((?x7169 (ite (and (distinct ((_ extract 49 49) C) (_ bv0 1)) true) (_ bv49 32) (ite (and (distinct ((_ extract 48 48) C) (_ bv0 1)) true) (_ bv48 32) (_ bv47 32)))))
 (let ((?x5801 (ite (and (distinct ((_ extract 53 52) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 53 53) C) (_ bv0 1)) true) (_ bv53 32) (_ bv52 32)) (ite (and (distinct ((_ extract 51 51) C) (_ bv0 1)) true) (_ bv51 32) (_ bv50 32)))))
 (let ((?x3582 (ite (and (distinct ((_ extract 56 56) C) (_ bv0 1)) true) (_ bv56 32) (ite (and (distinct ((_ extract 55 55) C) (_ bv0 1)) true) (_ bv55 32) (_ bv54 32)))))
 (let ((?x1884 (ite (and (distinct ((_ extract 56 50) C) (_ bv0 7)) true) (ite (and (distinct ((_ extract 56 54) C) (_ bv0 3)) true) ?x3582 ?x5801) (ite (and (distinct ((_ extract 49 47) C) (_ bv0 3)) true) ?x7169 ?x7851))))
 (let ((?x6830 (ite (and (distinct ((_ extract 56 29) C) (_ bv0 28)) true) (ite (and (distinct ((_ extract 56 43) C) (_ bv0 14)) true) ?x1884 ?x3508) (ite (and (distinct ((_ extract 28 15) C) (_ bv0 14)) true) ?x6346 ?x5292))))
 (and (and (and (distinct C (_ bv0 57)) true) (= (bvand C (bvsub C (_ bv1 57))) (_ bv0 57))) (and (and (distinct ?x2363 (_ bv0 11)) true) (= (bvand ?x2363 (bvsub ?x2363 (_ bv1 11))) (_ bv0 11))) (bvslt ?x6830 (_ bv11 32)) (and (distinct ?x4948 ?x4216) true)))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
