(set-info :status unknown)
(declare-fun mem0 () (_ BitVec 8))
(declare-fun %p2 () (_ BitVec 64))
(declare-fun idx () (_ BitVec 64))
(declare-fun %p1 () (_ BitVec 64))
(declare-fun |ana_equivalentAddressValues(%p1, %p2)| () (_ BitVec 1))
(assert
 (let ((?x15939 (concat (concat (concat (concat (concat mem0 mem0) mem0) mem0) mem0) ((_ extract 3 0) mem0))))
 (let (($x4201 (or true true)))
 (let (($x1088 (and (distinct %p2 (_ bv0 64)) true)))
 (let (($x755 (and (distinct %p1 (_ bv0 64)) true)))
 (let ((?x7072 (ite (and $x755 $x4201 $x755 $x4201 $x755 $x4201 $x1088 $x4201 (= idx %p2)) (concat ((_ extract 7 4) mem0) ((_ extract 3 0) ?x15939)) mem0)))
 (let (($x6657 (and $x755 $x4201 $x755 $x4201 $x755 $x4201 $x1088 $x4201 (= idx (bvadd (bvadd %p2 (_ bv1 64)) (_ bv0 64))))))
 (let (($x10689 (and $x755 $x4201 $x755 $x4201 $x755 $x4201 $x1088 $x4201 (= idx (bvadd (bvadd %p2 (_ bv1 64)) (_ bv1 64))))))
 (let (($x12921 (and $x755 $x4201 $x755 $x4201 $x755 $x4201 $x1088 $x4201 (= idx (bvadd (bvadd %p2 (_ bv1 64)) (_ bv2 64))))))
 (let ((?x13413 (ite $x12921 ((_ extract 27 20) ?x15939) (ite $x10689 ((_ extract 19 12) ?x15939) (ite $x6657 ((_ extract 11 4) ?x15939) ?x7072)))))
 (let (($x20064 (and $x755 $x4201 $x755 $x4201 $x755 $x4201 $x1088 $x4201 (= idx (bvadd (bvadd %p2 (_ bv1 64)) (_ bv3 64))))))
 (let (($x17826 (and $x755 $x4201 $x755 $x4201 $x755 $x4201 $x1088 $x4201 (= idx (bvadd (bvadd %p2 (_ bv1 64)) (_ bv4 64))))))
 (let ((?x14986 (ite $x17826 ((_ extract 43 36) ?x15939) (ite $x20064 ((_ extract 35 28) ?x15939) ?x13413))))
 (let (($x15425 (= |ana_equivalentAddressValues(%p1, %p2)| (_ bv1 1))))
 (and (=> $x15425 (= %p1 %p2)) $x15425 (and (distinct ?x14986 mem0) true))))))))))))))))
(check-sat)
