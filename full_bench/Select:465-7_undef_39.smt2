(set-info :status unknown)
(declare-fun C2 () (_ BitVec 11))
(declare-fun C1 () (_ BitVec 47))
(assert
 (let ((?x2804 (ite (and (distinct ((_ extract 2 2) C2) (_ bv0 1)) true) (_ bv2 47) (ite (and (distinct ((_ extract 1 1) C2) (_ bv0 1)) true) (_ bv1 47) (_ bv0 47)))))
 (let ((?x4488 (ite (and (distinct ((_ extract 5 5) C2) (_ bv0 1)) true) (_ bv5 47) (ite (and (distinct ((_ extract 4 4) C2) (_ bv0 1)) true) (_ bv4 47) (_ bv3 47)))))
 (let ((?x3056 (ite (and (distinct ((_ extract 8 8) C2) (_ bv0 1)) true) (_ bv8 47) (ite (and (distinct ((_ extract 7 7) C2) (_ bv0 1)) true) (_ bv7 47) (_ bv6 47)))))
 (let ((?x5760 (ite (and (distinct ((_ extract 10 9) C2) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) C2) (_ bv0 1)) true) (_ bv10 47) (_ bv9 47)) ?x3056)))
 (let ((?x3451 (ite (and (distinct ((_ extract 10 6) C2) (_ bv0 5)) true) ?x5760 (ite (and (distinct ((_ extract 5 3) C2) (_ bv0 3)) true) ?x4488 ?x2804))))
 (let ((?x3916 (ite (and (distinct ((_ extract 2 2) C1) (_ bv0 1)) true) (_ bv2 47) (ite (and (distinct ((_ extract 1 1) C1) (_ bv0 1)) true) (_ bv1 47) (_ bv0 47)))))
 (let ((?x2308 (ite (and (distinct ((_ extract 5 5) C1) (_ bv0 1)) true) (_ bv5 47) (ite (and (distinct ((_ extract 4 4) C1) (_ bv0 1)) true) (_ bv4 47) (_ bv3 47)))))
 (let ((?x5961 (ite (and (distinct ((_ extract 8 8) C1) (_ bv0 1)) true) (_ bv8 47) (ite (and (distinct ((_ extract 7 7) C1) (_ bv0 1)) true) (_ bv7 47) (_ bv6 47)))))
 (let ((?x4805 (ite (and (distinct ((_ extract 11 11) C1) (_ bv0 1)) true) (_ bv11 47) (ite (and (distinct ((_ extract 10 10) C1) (_ bv0 1)) true) (_ bv10 47) (_ bv9 47)))))
 (let ((?x4151 (ite (and (distinct ((_ extract 11 6) C1) (_ bv0 6)) true) (ite (and (distinct ((_ extract 11 9) C1) (_ bv0 3)) true) ?x4805 ?x5961) (ite (and (distinct ((_ extract 5 3) C1) (_ bv0 3)) true) ?x2308 ?x3916))))
 (let ((?x1822 (ite (and (distinct ((_ extract 14 14) C1) (_ bv0 1)) true) (_ bv14 47) (ite (and (distinct ((_ extract 13 13) C1) (_ bv0 1)) true) (_ bv13 47) (_ bv12 47)))))
 (let ((?x3584 (ite (and (distinct ((_ extract 17 17) C1) (_ bv0 1)) true) (_ bv17 47) (ite (and (distinct ((_ extract 16 16) C1) (_ bv0 1)) true) (_ bv16 47) (_ bv15 47)))))
 (let ((?x4268 (ite (and (distinct ((_ extract 20 20) C1) (_ bv0 1)) true) (_ bv20 47) (ite (and (distinct ((_ extract 19 19) C1) (_ bv0 1)) true) (_ bv19 47) (_ bv18 47)))))
 (let ((?x6107 (ite (and (distinct ((_ extract 23 23) C1) (_ bv0 1)) true) (_ bv23 47) (ite (and (distinct ((_ extract 22 22) C1) (_ bv0 1)) true) (_ bv22 47) (_ bv21 47)))))
 (let ((?x4767 (ite (and (distinct ((_ extract 23 18) C1) (_ bv0 6)) true) (ite (and (distinct ((_ extract 23 21) C1) (_ bv0 3)) true) ?x6107 ?x4268) (ite (and (distinct ((_ extract 17 15) C1) (_ bv0 3)) true) ?x3584 ?x1822))))
 (let ((?x3238 (ite (and (distinct ((_ extract 26 26) C1) (_ bv0 1)) true) (_ bv26 47) (ite (and (distinct ((_ extract 25 25) C1) (_ bv0 1)) true) (_ bv25 47) (_ bv24 47)))))
 (let ((?x1849 (ite (and (distinct ((_ extract 29 29) C1) (_ bv0 1)) true) (_ bv29 47) (ite (and (distinct ((_ extract 28 28) C1) (_ bv0 1)) true) (_ bv28 47) (_ bv27 47)))))
 (let ((?x6084 (ite (and (distinct ((_ extract 32 32) C1) (_ bv0 1)) true) (_ bv32 47) (ite (and (distinct ((_ extract 31 31) C1) (_ bv0 1)) true) (_ bv31 47) (_ bv30 47)))))
 (let ((?x6345 (ite (and (distinct ((_ extract 35 35) C1) (_ bv0 1)) true) (_ bv35 47) (ite (and (distinct ((_ extract 34 34) C1) (_ bv0 1)) true) (_ bv34 47) (_ bv33 47)))))
 (let ((?x3764 (ite (and (distinct ((_ extract 35 30) C1) (_ bv0 6)) true) (ite (and (distinct ((_ extract 35 33) C1) (_ bv0 3)) true) ?x6345 ?x6084) (ite (and (distinct ((_ extract 29 27) C1) (_ bv0 3)) true) ?x1849 ?x3238))))
 (let ((?x4676 (ite (and (distinct ((_ extract 38 38) C1) (_ bv0 1)) true) (_ bv38 47) (ite (and (distinct ((_ extract 37 37) C1) (_ bv0 1)) true) (_ bv37 47) (_ bv36 47)))))
 (let ((?x2570 (ite (and (distinct ((_ extract 41 41) C1) (_ bv0 1)) true) (_ bv41 47) (ite (and (distinct ((_ extract 40 40) C1) (_ bv0 1)) true) (_ bv40 47) (_ bv39 47)))))
 (let ((?x5853 (ite (and (distinct ((_ extract 44 44) C1) (_ bv0 1)) true) (_ bv44 47) (ite (and (distinct ((_ extract 43 43) C1) (_ bv0 1)) true) (_ bv43 47) (_ bv42 47)))))
 (let ((?x2263 (ite (and (distinct ((_ extract 46 45) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 46 46) C1) (_ bv0 1)) true) (_ bv46 47) (_ bv45 47)) ?x5853)))
 (let ((?x4402 (ite (and (distinct ((_ extract 46 42) C1) (_ bv0 5)) true) ?x2263 (ite (and (distinct ((_ extract 41 39) C1) (_ bv0 3)) true) ?x2570 ?x4676))))
 (let ((?x1968 (ite (and (distinct ((_ extract 46 24) C1) (_ bv0 23)) true) (ite (and (distinct ((_ extract 46 36) C1) (_ bv0 11)) true) ?x4402 ?x3764) (ite (and (distinct ((_ extract 23 12) C1) (_ bv0 12)) true) ?x4767 ?x4151))))
 (let ((?x5841 (bvsub ?x1968 ?x3451)))
 (let ((?x4661 (ite (and (distinct ((_ extract 2 2) C1) (_ bv0 1)) true) (_ bv2 32) (ite (and (distinct ((_ extract 1 1) C1) (_ bv0 1)) true) (_ bv1 32) (_ bv0 32)))))
 (let ((?x2913 (ite (and (distinct ((_ extract 5 5) C1) (_ bv0 1)) true) (_ bv5 32) (ite (and (distinct ((_ extract 4 4) C1) (_ bv0 1)) true) (_ bv4 32) (_ bv3 32)))))
 (let ((?x2704 (ite (and (distinct ((_ extract 8 8) C1) (_ bv0 1)) true) (_ bv8 32) (ite (and (distinct ((_ extract 7 7) C1) (_ bv0 1)) true) (_ bv7 32) (_ bv6 32)))))
 (let ((?x5487 (ite (and (distinct ((_ extract 11 11) C1) (_ bv0 1)) true) (_ bv11 32) (ite (and (distinct ((_ extract 10 10) C1) (_ bv0 1)) true) (_ bv10 32) (_ bv9 32)))))
 (let ((?x2299 (ite (and (distinct ((_ extract 11 6) C1) (_ bv0 6)) true) (ite (and (distinct ((_ extract 11 9) C1) (_ bv0 3)) true) ?x5487 ?x2704) (ite (and (distinct ((_ extract 5 3) C1) (_ bv0 3)) true) ?x2913 ?x4661))))
 (let ((?x2858 (ite (and (distinct ((_ extract 14 14) C1) (_ bv0 1)) true) (_ bv14 32) (ite (and (distinct ((_ extract 13 13) C1) (_ bv0 1)) true) (_ bv13 32) (_ bv12 32)))))
 (let ((?x6343 (ite (and (distinct ((_ extract 17 17) C1) (_ bv0 1)) true) (_ bv17 32) (ite (and (distinct ((_ extract 16 16) C1) (_ bv0 1)) true) (_ bv16 32) (_ bv15 32)))))
 (let ((?x5843 (ite (and (distinct ((_ extract 20 20) C1) (_ bv0 1)) true) (_ bv20 32) (ite (and (distinct ((_ extract 19 19) C1) (_ bv0 1)) true) (_ bv19 32) (_ bv18 32)))))
 (let ((?x5129 (ite (and (distinct ((_ extract 23 23) C1) (_ bv0 1)) true) (_ bv23 32) (ite (and (distinct ((_ extract 22 22) C1) (_ bv0 1)) true) (_ bv22 32) (_ bv21 32)))))
 (let ((?x6279 (ite (and (distinct ((_ extract 23 18) C1) (_ bv0 6)) true) (ite (and (distinct ((_ extract 23 21) C1) (_ bv0 3)) true) ?x5129 ?x5843) (ite (and (distinct ((_ extract 17 15) C1) (_ bv0 3)) true) ?x6343 ?x2858))))
 (let ((?x3685 (ite (and (distinct ((_ extract 26 26) C1) (_ bv0 1)) true) (_ bv26 32) (ite (and (distinct ((_ extract 25 25) C1) (_ bv0 1)) true) (_ bv25 32) (_ bv24 32)))))
 (let ((?x4166 (ite (and (distinct ((_ extract 29 29) C1) (_ bv0 1)) true) (_ bv29 32) (ite (and (distinct ((_ extract 28 28) C1) (_ bv0 1)) true) (_ bv28 32) (_ bv27 32)))))
 (let ((?x3047 (ite (and (distinct ((_ extract 32 32) C1) (_ bv0 1)) true) (_ bv32 32) (ite (and (distinct ((_ extract 31 31) C1) (_ bv0 1)) true) (_ bv31 32) (_ bv30 32)))))
 (let ((?x1235 (ite (and (distinct ((_ extract 35 35) C1) (_ bv0 1)) true) (_ bv35 32) (ite (and (distinct ((_ extract 34 34) C1) (_ bv0 1)) true) (_ bv34 32) (_ bv33 32)))))
 (let ((?x4470 (ite (and (distinct ((_ extract 35 30) C1) (_ bv0 6)) true) (ite (and (distinct ((_ extract 35 33) C1) (_ bv0 3)) true) ?x1235 ?x3047) (ite (and (distinct ((_ extract 29 27) C1) (_ bv0 3)) true) ?x4166 ?x3685))))
 (let ((?x2485 (ite (and (distinct ((_ extract 38 38) C1) (_ bv0 1)) true) (_ bv38 32) (ite (and (distinct ((_ extract 37 37) C1) (_ bv0 1)) true) (_ bv37 32) (_ bv36 32)))))
 (let ((?x2817 (ite (and (distinct ((_ extract 41 41) C1) (_ bv0 1)) true) (_ bv41 32) (ite (and (distinct ((_ extract 40 40) C1) (_ bv0 1)) true) (_ bv40 32) (_ bv39 32)))))
 (let ((?x6649 (ite (and (distinct ((_ extract 44 44) C1) (_ bv0 1)) true) (_ bv44 32) (ite (and (distinct ((_ extract 43 43) C1) (_ bv0 1)) true) (_ bv43 32) (_ bv42 32)))))
 (let ((?x1375 (ite (and (distinct ((_ extract 46 45) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 46 46) C1) (_ bv0 1)) true) (_ bv46 32) (_ bv45 32)) ?x6649)))
 (let ((?x1953 (ite (and (distinct ((_ extract 46 42) C1) (_ bv0 5)) true) ?x1375 (ite (and (distinct ((_ extract 41 39) C1) (_ bv0 3)) true) ?x2817 ?x2485))))
 (let ((?x4037 (ite (and (distinct ((_ extract 46 24) C1) (_ bv0 23)) true) (ite (and (distinct ((_ extract 46 36) C1) (_ bv0 11)) true) ?x1953 ?x4470) (ite (and (distinct ((_ extract 23 12) C1) (_ bv0 12)) true) ?x6279 ?x2299))))
 (let ((?x3616 (ite (and (distinct ((_ extract 2 2) C2) (_ bv0 1)) true) (_ bv2 32) (ite (and (distinct ((_ extract 1 1) C2) (_ bv0 1)) true) (_ bv1 32) (_ bv0 32)))))
 (let ((?x3876 (ite (and (distinct ((_ extract 5 5) C2) (_ bv0 1)) true) (_ bv5 32) (ite (and (distinct ((_ extract 4 4) C2) (_ bv0 1)) true) (_ bv4 32) (_ bv3 32)))))
 (let ((?x3194 (ite (and (distinct ((_ extract 8 8) C2) (_ bv0 1)) true) (_ bv8 32) (ite (and (distinct ((_ extract 7 7) C2) (_ bv0 1)) true) (_ bv7 32) (_ bv6 32)))))
 (let ((?x4270 (ite (and (distinct ((_ extract 10 9) C2) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) C2) (_ bv0 1)) true) (_ bv10 32) (_ bv9 32)) ?x3194)))
 (let ((?x5541 (ite (and (distinct ((_ extract 10 6) C2) (_ bv0 5)) true) ?x4270 (ite (and (distinct ((_ extract 5 3) C2) (_ bv0 3)) true) ?x3876 ?x3616))))
 (and (and (and (distinct C1 (_ bv0 47)) true) (= (bvand C1 (bvsub C1 (_ bv1 47))) (_ bv0 47))) (and (and (distinct C2 (_ bv0 11)) true) (= (bvand C2 (bvsub C2 (_ bv1 11))) (_ bv0 11))) (bvslt ?x5541 ?x4037) (not (bvult ?x5841 (_ bv47 47))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
