(set-info :status unknown)
(declare-fun mem0 () (_ BitVec 8))
(declare-fun alloca%a_3100 () (_ BitVec 8))
(declare-fun %a () (_ BitVec 64))
(declare-fun idx () (_ BitVec 64))
(declare-fun %x () (_ BitVec 5))
(declare-fun %idx () (_ BitVec 55))
(declare-fun u_%a () (_ BitVec 8))
(declare-fun u_%ptr () (_ BitVec 8))
(assert
 (forall ((alloca%a_3099 (_ BitVec 8)) (alloca%a_3101 (_ BitVec 8)) )(let (($x12869 (= idx (bvadd %a (_ bv0 64)))))
 (let ((?x10911 (ite $x12869 ((_ extract 7 0) alloca%a_3100) mem0)))
 (let ((?x16827 (ite (= (bvadd %a (bvmul (_ bv1 64) ((_ sign_extend 9) %idx))) (bvadd %a (_ bv0 64))) ((_ extract 7 0) alloca%a_3099) mem0)))
 (let (($x18581 (bvuge (_ bv0 64) (bvsub (bvadd %a (bvmul (_ bv1 64) ((_ sign_extend 9) %idx))) %a))))
 (let (($x22198 (and (distinct %a (_ bv0 64)) true)))
 (let (($x8469 (and $x22198 (and (distinct (bvadd %a (bvmul (_ bv1 64) ((_ sign_extend 9) %idx))) (_ bv0 64)) true) (and (bvuge (bvadd %a (bvmul (_ bv1 64) ((_ sign_extend 9) %idx))) %a) $x18581) (= idx (bvadd %a (bvmul (_ bv1 64) ((_ sign_extend 9) %idx)))))))
 (let ((?x5440 (ite $x8469 (concat ((_ extract 7 5) ?x16827) ((_ extract 4 0) %x)) (ite $x12869 ((_ extract 7 0) alloca%a_3099) mem0))))
 (and $x22198 $x22198 (= u_%ptr (_ bv1 8)) (= u_%a (_ bv1 8)) $x22198 $x22198 $x22198 (and (distinct (ite $x12869 ((_ extract 7 0) alloca%a_3101) ?x5440) ?x10911) true))))))))))
 )
(check-sat)
