(set-info :status unknown)
(declare-fun %x () (_ BitVec 28))
(declare-fun mem0 () (_ BitVec 8))
(declare-fun %p1 () (_ BitVec 64))
(declare-fun %p2 () (_ BitVec 64))
(declare-fun |ana_equivalentAddressValues(%p1, %p2)| () (_ BitVec 1))
(assert
 (let ((?x7281 (concat ((_ extract 7 4) mem0) ((_ extract 3 0) %x))))
 (let ((?x24008 (ite (and (and (distinct %p1 (_ bv0 64)) true) (or true true) (= %p2 %p1)) ?x7281 mem0)))
 (let ((?x6124 ((_ extract 11 4) %x)))
 (let (($x318 (or true true)))
 (let (($x10679 (and (distinct %p1 (_ bv0 64)) true)))
 (let ((?x3562 (ite (and $x10679 $x318 (= %p2 (bvadd (bvadd %p1 (_ bv1 64)) (_ bv0 64)))) ?x6124 ?x24008)))
 (let ((?x4952 ((_ extract 19 12) %x)))
 (let ((?x6249 (ite (and $x10679 $x318 (= %p2 (bvadd (bvadd %p1 (_ bv1 64)) (_ bv1 64)))) ?x4952 ?x3562)))
 (let ((?x17832 ((_ extract 27 20) %x)))
 (let ((?x17107 (ite (and $x10679 $x318 (= %p2 (bvadd (bvadd %p1 (_ bv1 64)) (_ bv2 64)))) ?x17832 ?x6249)))
 (let ((?x17730 (ite (and $x10679 $x318 (= (bvadd (bvadd %p2 (_ bv1 64)) (_ bv0 64)) %p1)) ?x7281 mem0)))
 (let (($x18944 (and $x10679 $x318 (= (bvadd (bvadd %p2 (_ bv1 64)) (_ bv0 64)) (bvadd (bvadd %p1 (_ bv1 64)) (_ bv0 64))))))
 (let (($x12910 (and $x10679 $x318 (= (bvadd (bvadd %p2 (_ bv1 64)) (_ bv0 64)) (bvadd (bvadd %p1 (_ bv1 64)) (_ bv1 64))))))
 (let (($x13016 (and $x10679 $x318 (= (bvadd (bvadd %p2 (_ bv1 64)) (_ bv0 64)) (bvadd (bvadd %p1 (_ bv1 64)) (_ bv2 64))))))
 (let ((?x16334 (ite (and $x10679 $x318 (= (bvadd (bvadd %p2 (_ bv1 64)) (_ bv1 64)) %p1)) ?x7281 mem0)))
 (let (($x18286 (and $x10679 $x318 (= (bvadd (bvadd %p2 (_ bv1 64)) (_ bv1 64)) (bvadd (bvadd %p1 (_ bv1 64)) (_ bv0 64))))))
 (let (($x3306 (and $x10679 $x318 (= (bvadd (bvadd %p2 (_ bv1 64)) (_ bv1 64)) (bvadd (bvadd %p1 (_ bv1 64)) (_ bv1 64))))))
 (let (($x2242 (and $x10679 $x318 (= (bvadd (bvadd %p2 (_ bv1 64)) (_ bv1 64)) (bvadd (bvadd %p1 (_ bv1 64)) (_ bv2 64))))))
 (let ((?x17447 (ite (and $x10679 $x318 (= (bvadd (bvadd %p2 (_ bv1 64)) (_ bv2 64)) %p1)) ?x7281 mem0)))
 (let (($x19414 (and $x10679 $x318 (= (bvadd (bvadd %p2 (_ bv1 64)) (_ bv2 64)) (bvadd (bvadd %p1 (_ bv1 64)) (_ bv0 64))))))
 (let (($x10947 (and $x10679 $x318 (= (bvadd (bvadd %p2 (_ bv1 64)) (_ bv2 64)) (bvadd (bvadd %p1 (_ bv1 64)) (_ bv1 64))))))
 (let (($x2838 (and $x10679 $x318 (= (bvadd (bvadd %p2 (_ bv1 64)) (_ bv2 64)) (bvadd (bvadd %p1 (_ bv1 64)) (_ bv2 64))))))
 (let ((?x13369 (concat (ite $x2838 ?x17832 (ite $x10947 ?x4952 (ite $x19414 ?x6124 ?x17447))) (ite $x2242 ?x17832 (ite $x3306 ?x4952 (ite $x18286 ?x6124 ?x16334))))))
 (let ((?x13180 (concat (concat ?x13369 (ite $x13016 ?x17832 (ite $x12910 ?x4952 (ite $x18944 ?x6124 ?x17730)))) ((_ extract 3 0) ?x17107))))
 (let (($x5739 (= |ana_equivalentAddressValues(%p1, %p2)| (_ bv1 1))))
 (let (($x11105 (and (distinct %p2 (_ bv0 64)) true)))
 (and $x10679 $x318 $x11105 $x318 $x11105 $x318 (=> $x5739 (= %p1 %p2)) $x5739 (and (distinct ?x13180 %x) true)))))))))))))))))))))))))))))
(check-sat)
