(set-info :status unknown)
(declare-fun %Y () (_ BitVec 11))
(declare-fun C2 () (_ BitVec 11))
(declare-fun C1 () (_ BitVec 15))
(declare-fun %X () (_ BitVec 15))
(assert
 (let ((?x4859 (ite (and (distinct ((_ extract 2 2) C2) (_ bv0 1)) true) (_ bv2 15) (ite (and (distinct ((_ extract 1 1) C2) (_ bv0 1)) true) (_ bv1 15) (_ bv0 15)))))
 (let ((?x1366 (ite (and (distinct ((_ extract 5 5) C2) (_ bv0 1)) true) (_ bv5 15) (ite (and (distinct ((_ extract 4 4) C2) (_ bv0 1)) true) (_ bv4 15) (_ bv3 15)))))
 (let ((?x5862 (ite (and (distinct ((_ extract 8 8) C2) (_ bv0 1)) true) (_ bv8 15) (ite (and (distinct ((_ extract 7 7) C2) (_ bv0 1)) true) (_ bv7 15) (_ bv6 15)))))
 (let ((?x5968 (ite (and (distinct ((_ extract 10 9) C2) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) C2) (_ bv0 1)) true) (_ bv10 15) (_ bv9 15)) ?x5862)))
 (let ((?x5013 (ite (and (distinct ((_ extract 10 6) C2) (_ bv0 5)) true) ?x5968 (ite (and (distinct ((_ extract 5 3) C2) (_ bv0 3)) true) ?x1366 ?x4859))))
 (let ((?x5086 (ite (and (distinct ((_ extract 3 2) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 3 3) C1) (_ bv0 1)) true) (_ bv3 15) (_ bv2 15)) (ite (and (distinct ((_ extract 1 1) C1) (_ bv0 1)) true) (_ bv1 15) (_ bv0 15)))))
 (let ((?x5933 (ite (and (distinct ((_ extract 7 6) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 7 7) C1) (_ bv0 1)) true) (_ bv7 15) (_ bv6 15)) (ite (and (distinct ((_ extract 5 5) C1) (_ bv0 1)) true) (_ bv5 15) (_ bv4 15)))))
 (let ((?x6420 (ite (and (distinct ((_ extract 11 10) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 11 11) C1) (_ bv0 1)) true) (_ bv11 15) (_ bv10 15)) (ite (and (distinct ((_ extract 9 9) C1) (_ bv0 1)) true) (_ bv9 15) (_ bv8 15)))))
 (let ((?x6367 (ite (and (distinct ((_ extract 14 14) C1) (_ bv0 1)) true) (_ bv14 15) (ite (and (distinct ((_ extract 13 13) C1) (_ bv0 1)) true) (_ bv13 15) (_ bv12 15)))))
 (let ((?x5942 (ite (and (distinct ((_ extract 14 8) C1) (_ bv0 7)) true) (ite (and (distinct ((_ extract 14 12) C1) (_ bv0 3)) true) ?x6367 ?x6420) (ite (and (distinct ((_ extract 7 4) C1) (_ bv0 4)) true) ?x5933 ?x5086))))
 (let ((?x1203 (bvsub ?x5942 ?x5013)))
 (let ((?x6039 (bvand %X C1)))
 (let ((?x4713 (bvor %Y C2)))
 (let (($x2378 (and (distinct (ite (= (ite (and (distinct ?x6039 (_ bv0 15)) true) (_ bv1 1) (_ bv0 1)) (_ bv1 1)) ?x4713 %Y) (bvor ((_ extract 10 0) (bvlshr ?x6039 ?x1203)) %Y)) true)))
 (let ((?x2489 (ite (and (distinct ((_ extract 3 2) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 3 3) C1) (_ bv0 1)) true) (_ bv3 32) (_ bv2 32)) (ite (and (distinct ((_ extract 1 1) C1) (_ bv0 1)) true) (_ bv1 32) (_ bv0 32)))))
 (let ((?x1343 (ite (and (distinct ((_ extract 7 6) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 7 7) C1) (_ bv0 1)) true) (_ bv7 32) (_ bv6 32)) (ite (and (distinct ((_ extract 5 5) C1) (_ bv0 1)) true) (_ bv5 32) (_ bv4 32)))))
 (let ((?x5874 (ite (and (distinct ((_ extract 11 10) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 11 11) C1) (_ bv0 1)) true) (_ bv11 32) (_ bv10 32)) (ite (and (distinct ((_ extract 9 9) C1) (_ bv0 1)) true) (_ bv9 32) (_ bv8 32)))))
 (let ((?x4015 (ite (and (distinct ((_ extract 14 14) C1) (_ bv0 1)) true) (_ bv14 32) (ite (and (distinct ((_ extract 13 13) C1) (_ bv0 1)) true) (_ bv13 32) (_ bv12 32)))))
 (let ((?x1297 (ite (and (distinct ((_ extract 14 8) C1) (_ bv0 7)) true) (ite (and (distinct ((_ extract 14 12) C1) (_ bv0 3)) true) ?x4015 ?x5874) (ite (and (distinct ((_ extract 7 4) C1) (_ bv0 4)) true) ?x1343 ?x2489))))
 (let ((?x1907 (ite (and (distinct ((_ extract 2 2) C2) (_ bv0 1)) true) (_ bv2 32) (ite (and (distinct ((_ extract 1 1) C2) (_ bv0 1)) true) (_ bv1 32) (_ bv0 32)))))
 (let ((?x4923 (ite (and (distinct ((_ extract 5 5) C2) (_ bv0 1)) true) (_ bv5 32) (ite (and (distinct ((_ extract 4 4) C2) (_ bv0 1)) true) (_ bv4 32) (_ bv3 32)))))
 (let ((?x1799 (ite (and (distinct ((_ extract 8 8) C2) (_ bv0 1)) true) (_ bv8 32) (ite (and (distinct ((_ extract 7 7) C2) (_ bv0 1)) true) (_ bv7 32) (_ bv6 32)))))
 (let ((?x4628 (ite (and (distinct ((_ extract 10 9) C2) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) C2) (_ bv0 1)) true) (_ bv10 32) (_ bv9 32)) ?x1799)))
 (let ((?x6773 (ite (and (distinct ((_ extract 10 6) C2) (_ bv0 5)) true) ?x4628 (ite (and (distinct ((_ extract 5 3) C2) (_ bv0 3)) true) ?x4923 ?x1907))))
 (and (and (and (distinct C1 (_ bv0 15)) true) (= (bvand C1 (bvsub C1 (_ bv1 15))) (_ bv0 15))) (and (and (distinct C2 (_ bv0 11)) true) (= (bvand C2 (bvsub C2 (_ bv1 11))) (_ bv0 11))) (bvslt ?x6773 ?x1297) $x2378))))))))))))))))))))))))))
(check-sat)
