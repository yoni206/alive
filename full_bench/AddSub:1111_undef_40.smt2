(set-info :status unknown)
(declare-fun C2 () (_ BitVec 46))
(declare-fun C1 () (_ BitVec 46))
(assert
 (let ((?x1341 (ite (and (distinct ((_ extract 2 2) C2) (_ bv0 1)) true) (_ bv2 46) (ite (and (distinct ((_ extract 1 1) C2) (_ bv0 1)) true) (_ bv1 46) (_ bv0 46)))))
 (let ((?x2776 (ite (and (distinct ((_ extract 5 5) C2) (_ bv0 1)) true) (_ bv5 46) (ite (and (distinct ((_ extract 4 4) C2) (_ bv0 1)) true) (_ bv4 46) (_ bv3 46)))))
 (let ((?x2396 (ite (and (distinct ((_ extract 8 8) C2) (_ bv0 1)) true) (_ bv8 46) (ite (and (distinct ((_ extract 7 7) C2) (_ bv0 1)) true) (_ bv7 46) (_ bv6 46)))))
 (let ((?x1915 (ite (and (distinct ((_ extract 11 11) C2) (_ bv0 1)) true) (_ bv11 46) (ite (and (distinct ((_ extract 10 10) C2) (_ bv0 1)) true) (_ bv10 46) (_ bv9 46)))))
 (let ((?x1502 (ite (and (distinct ((_ extract 11 6) C2) (_ bv0 6)) true) (ite (and (distinct ((_ extract 11 9) C2) (_ bv0 3)) true) ?x1915 ?x2396) (ite (and (distinct ((_ extract 5 3) C2) (_ bv0 3)) true) ?x2776 ?x1341))))
 (let ((?x1590 (ite (and (distinct ((_ extract 14 14) C2) (_ bv0 1)) true) (_ bv14 46) (ite (and (distinct ((_ extract 13 13) C2) (_ bv0 1)) true) (_ bv13 46) (_ bv12 46)))))
 (let ((?x1219 (ite (and (distinct ((_ extract 17 17) C2) (_ bv0 1)) true) (_ bv17 46) (ite (and (distinct ((_ extract 16 16) C2) (_ bv0 1)) true) (_ bv16 46) (_ bv15 46)))))
 (let ((?x1235 (ite (and (distinct ((_ extract 20 20) C2) (_ bv0 1)) true) (_ bv20 46) (ite (and (distinct ((_ extract 19 19) C2) (_ bv0 1)) true) (_ bv19 46) (_ bv18 46)))))
 (let ((?x5166 (ite (and (distinct ((_ extract 22 21) C2) (_ bv0 2)) true) (ite (and (distinct ((_ extract 22 22) C2) (_ bv0 1)) true) (_ bv22 46) (_ bv21 46)) ?x1235)))
 (let ((?x3405 (ite (and (distinct ((_ extract 22 18) C2) (_ bv0 5)) true) ?x5166 (ite (and (distinct ((_ extract 17 15) C2) (_ bv0 3)) true) ?x1219 ?x1590))))
 (let ((?x4995 (ite (and (distinct ((_ extract 25 25) C2) (_ bv0 1)) true) (_ bv25 46) (ite (and (distinct ((_ extract 24 24) C2) (_ bv0 1)) true) (_ bv24 46) (_ bv23 46)))))
 (let ((?x3727 (ite (and (distinct ((_ extract 28 28) C2) (_ bv0 1)) true) (_ bv28 46) (ite (and (distinct ((_ extract 27 27) C2) (_ bv0 1)) true) (_ bv27 46) (_ bv26 46)))))
 (let ((?x4178 (ite (and (distinct ((_ extract 31 31) C2) (_ bv0 1)) true) (_ bv31 46) (ite (and (distinct ((_ extract 30 30) C2) (_ bv0 1)) true) (_ bv30 46) (_ bv29 46)))))
 (let ((?x1551 (ite (and (distinct ((_ extract 34 34) C2) (_ bv0 1)) true) (_ bv34 46) (ite (and (distinct ((_ extract 33 33) C2) (_ bv0 1)) true) (_ bv33 46) (_ bv32 46)))))
 (let ((?x3192 (ite (and (distinct ((_ extract 34 29) C2) (_ bv0 6)) true) (ite (and (distinct ((_ extract 34 32) C2) (_ bv0 3)) true) ?x1551 ?x4178) (ite (and (distinct ((_ extract 28 26) C2) (_ bv0 3)) true) ?x3727 ?x4995))))
 (let ((?x6999 (ite (and (distinct ((_ extract 37 37) C2) (_ bv0 1)) true) (_ bv37 46) (ite (and (distinct ((_ extract 36 36) C2) (_ bv0 1)) true) (_ bv36 46) (_ bv35 46)))))
 (let ((?x7198 (ite (and (distinct ((_ extract 40 40) C2) (_ bv0 1)) true) (_ bv40 46) (ite (and (distinct ((_ extract 39 39) C2) (_ bv0 1)) true) (_ bv39 46) (_ bv38 46)))))
 (let ((?x7535 (ite (and (distinct ((_ extract 43 43) C2) (_ bv0 1)) true) (_ bv43 46) (ite (and (distinct ((_ extract 42 42) C2) (_ bv0 1)) true) (_ bv42 46) (_ bv41 46)))))
 (let ((?x7531 (ite (and (distinct ((_ extract 45 44) C2) (_ bv0 2)) true) (ite (and (distinct ((_ extract 45 45) C2) (_ bv0 1)) true) (_ bv45 46) (_ bv44 46)) ?x7535)))
 (let ((?x6864 (ite (and (distinct ((_ extract 45 41) C2) (_ bv0 5)) true) ?x7531 (ite (and (distinct ((_ extract 40 38) C2) (_ bv0 3)) true) ?x7198 ?x6999))))
 (let ((?x5427 (ite (and (distinct ((_ extract 45 23) C2) (_ bv0 23)) true) (ite (and (distinct ((_ extract 45 35) C2) (_ bv0 11)) true) ?x6864 ?x3192) (ite (and (distinct ((_ extract 22 12) C2) (_ bv0 11)) true) ?x3405 ?x1502))))
 (let ((?x442 (bvsub (_ bv46 46) (bvsub (bvsub (_ bv46 46) ?x5427) (_ bv1 46)))))
 (let (($x8044 (bvult ?x442 (_ bv46 46))))
 (and (= C1 (bvneg C2)) (and (and (distinct C2 (_ bv0 46)) true) (= (bvand C2 (bvsub C2 (_ bv1 46))) (_ bv0 46))) (not (= (bvand C2 (bvshl (_ bv70368744177663 46) ?x442)) (_ bv0 46))) (not (and $x8044 $x8044)))))))))))))))))))))))))))
(check-sat)
