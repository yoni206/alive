(set-info :status unknown)
(declare-fun %Y () (_ BitVec 11))
(declare-fun C2 () (_ BitVec 11))
(declare-fun C1 () (_ BitVec 48))
(declare-fun %X () (_ BitVec 48))
(assert
 (let ((?x16675 (ite (and (distinct ((_ extract 2 2) C2) (_ bv0 1)) true) (_ bv2 48) (ite (and (distinct ((_ extract 1 1) C2) (_ bv0 1)) true) (_ bv1 48) (_ bv0 48)))))
 (let ((?x2964 (ite (and (distinct ((_ extract 5 5) C2) (_ bv0 1)) true) (_ bv5 48) (ite (and (distinct ((_ extract 4 4) C2) (_ bv0 1)) true) (_ bv4 48) (_ bv3 48)))))
 (let ((?x18181 (ite (and (distinct ((_ extract 8 8) C2) (_ bv0 1)) true) (_ bv8 48) (ite (and (distinct ((_ extract 7 7) C2) (_ bv0 1)) true) (_ bv7 48) (_ bv6 48)))))
 (let ((?x17588 (ite (and (distinct ((_ extract 10 9) C2) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) C2) (_ bv0 1)) true) (_ bv10 48) (_ bv9 48)) ?x18181)))
 (let ((?x18043 (ite (and (distinct ((_ extract 10 6) C2) (_ bv0 5)) true) ?x17588 (ite (and (distinct ((_ extract 5 3) C2) (_ bv0 3)) true) ?x2964 ?x16675))))
 (let ((?x5927 (ite (and (distinct ((_ extract 2 2) C1) (_ bv0 1)) true) (_ bv2 48) (ite (and (distinct ((_ extract 1 1) C1) (_ bv0 1)) true) (_ bv1 48) (_ bv0 48)))))
 (let ((?x3963 (ite (and (distinct ((_ extract 5 5) C1) (_ bv0 1)) true) (_ bv5 48) (ite (and (distinct ((_ extract 4 4) C1) (_ bv0 1)) true) (_ bv4 48) (_ bv3 48)))))
 (let ((?x12982 (ite (and (distinct ((_ extract 8 8) C1) (_ bv0 1)) true) (_ bv8 48) (ite (and (distinct ((_ extract 7 7) C1) (_ bv0 1)) true) (_ bv7 48) (_ bv6 48)))))
 (let ((?x15294 (ite (and (distinct ((_ extract 11 11) C1) (_ bv0 1)) true) (_ bv11 48) (ite (and (distinct ((_ extract 10 10) C1) (_ bv0 1)) true) (_ bv10 48) (_ bv9 48)))))
 (let ((?x14284 (ite (and (distinct ((_ extract 11 6) C1) (_ bv0 6)) true) (ite (and (distinct ((_ extract 11 9) C1) (_ bv0 3)) true) ?x15294 ?x12982) (ite (and (distinct ((_ extract 5 3) C1) (_ bv0 3)) true) ?x3963 ?x5927))))
 (let ((?x16038 (ite (and (distinct ((_ extract 14 14) C1) (_ bv0 1)) true) (_ bv14 48) (ite (and (distinct ((_ extract 13 13) C1) (_ bv0 1)) true) (_ bv13 48) (_ bv12 48)))))
 (let ((?x10451 (ite (and (distinct ((_ extract 17 17) C1) (_ bv0 1)) true) (_ bv17 48) (ite (and (distinct ((_ extract 16 16) C1) (_ bv0 1)) true) (_ bv16 48) (_ bv15 48)))))
 (let ((?x850 (ite (and (distinct ((_ extract 20 20) C1) (_ bv0 1)) true) (_ bv20 48) (ite (and (distinct ((_ extract 19 19) C1) (_ bv0 1)) true) (_ bv19 48) (_ bv18 48)))))
 (let ((?x7794 (ite (and (distinct ((_ extract 23 23) C1) (_ bv0 1)) true) (_ bv23 48) (ite (and (distinct ((_ extract 22 22) C1) (_ bv0 1)) true) (_ bv22 48) (_ bv21 48)))))
 (let ((?x3766 (ite (and (distinct ((_ extract 23 18) C1) (_ bv0 6)) true) (ite (and (distinct ((_ extract 23 21) C1) (_ bv0 3)) true) ?x7794 ?x850) (ite (and (distinct ((_ extract 17 15) C1) (_ bv0 3)) true) ?x10451 ?x16038))))
 (let ((?x14757 (ite (and (distinct ((_ extract 26 26) C1) (_ bv0 1)) true) (_ bv26 48) (ite (and (distinct ((_ extract 25 25) C1) (_ bv0 1)) true) (_ bv25 48) (_ bv24 48)))))
 (let ((?x5402 (ite (and (distinct ((_ extract 29 29) C1) (_ bv0 1)) true) (_ bv29 48) (ite (and (distinct ((_ extract 28 28) C1) (_ bv0 1)) true) (_ bv28 48) (_ bv27 48)))))
 (let ((?x4701 (ite (and (distinct ((_ extract 32 32) C1) (_ bv0 1)) true) (_ bv32 48) (ite (and (distinct ((_ extract 31 31) C1) (_ bv0 1)) true) (_ bv31 48) (_ bv30 48)))))
 (let ((?x12960 (ite (and (distinct ((_ extract 35 35) C1) (_ bv0 1)) true) (_ bv35 48) (ite (and (distinct ((_ extract 34 34) C1) (_ bv0 1)) true) (_ bv34 48) (_ bv33 48)))))
 (let ((?x5441 (ite (and (distinct ((_ extract 35 30) C1) (_ bv0 6)) true) (ite (and (distinct ((_ extract 35 33) C1) (_ bv0 3)) true) ?x12960 ?x4701) (ite (and (distinct ((_ extract 29 27) C1) (_ bv0 3)) true) ?x5402 ?x14757))))
 (let ((?x21922 (ite (and (distinct ((_ extract 38 38) C1) (_ bv0 1)) true) (_ bv38 48) (ite (and (distinct ((_ extract 37 37) C1) (_ bv0 1)) true) (_ bv37 48) (_ bv36 48)))))
 (let ((?x7847 (ite (and (distinct ((_ extract 41 41) C1) (_ bv0 1)) true) (_ bv41 48) (ite (and (distinct ((_ extract 40 40) C1) (_ bv0 1)) true) (_ bv40 48) (_ bv39 48)))))
 (let ((?x3208 (ite (and (distinct ((_ extract 44 44) C1) (_ bv0 1)) true) (_ bv44 48) (ite (and (distinct ((_ extract 43 43) C1) (_ bv0 1)) true) (_ bv43 48) (_ bv42 48)))))
 (let ((?x18165 (ite (and (distinct ((_ extract 47 47) C1) (_ bv0 1)) true) (_ bv47 48) (ite (and (distinct ((_ extract 46 46) C1) (_ bv0 1)) true) (_ bv46 48) (_ bv45 48)))))
 (let ((?x14587 (ite (and (distinct ((_ extract 47 42) C1) (_ bv0 6)) true) (ite (and (distinct ((_ extract 47 45) C1) (_ bv0 3)) true) ?x18165 ?x3208) (ite (and (distinct ((_ extract 41 39) C1) (_ bv0 3)) true) ?x7847 ?x21922))))
 (let ((?x13184 (ite (and (distinct ((_ extract 47 24) C1) (_ bv0 24)) true) (ite (and (distinct ((_ extract 47 36) C1) (_ bv0 12)) true) ?x14587 ?x5441) (ite (and (distinct ((_ extract 23 12) C1) (_ bv0 12)) true) ?x3766 ?x14284))))
 (let ((?x18917 (bvsub ?x13184 ?x18043)))
 (let ((?x16404 (bvand %X C1)))
 (let ((?x8546 (bvor %Y C2)))
 (let (($x3025 (and (distinct (ite (= (ite (and (distinct ?x16404 (_ bv0 48)) true) (_ bv1 1) (_ bv0 1)) (_ bv1 1)) ?x8546 %Y) (bvor ((_ extract 10 0) (bvlshr ?x16404 ?x18917)) %Y)) true)))
 (let ((?x14159 (ite (and (distinct ((_ extract 2 2) C1) (_ bv0 1)) true) (_ bv2 32) (ite (and (distinct ((_ extract 1 1) C1) (_ bv0 1)) true) (_ bv1 32) (_ bv0 32)))))
 (let ((?x20045 (ite (and (distinct ((_ extract 5 5) C1) (_ bv0 1)) true) (_ bv5 32) (ite (and (distinct ((_ extract 4 4) C1) (_ bv0 1)) true) (_ bv4 32) (_ bv3 32)))))
 (let ((?x4680 (ite (and (distinct ((_ extract 8 8) C1) (_ bv0 1)) true) (_ bv8 32) (ite (and (distinct ((_ extract 7 7) C1) (_ bv0 1)) true) (_ bv7 32) (_ bv6 32)))))
 (let ((?x12267 (ite (and (distinct ((_ extract 11 11) C1) (_ bv0 1)) true) (_ bv11 32) (ite (and (distinct ((_ extract 10 10) C1) (_ bv0 1)) true) (_ bv10 32) (_ bv9 32)))))
 (let ((?x17499 (ite (and (distinct ((_ extract 11 6) C1) (_ bv0 6)) true) (ite (and (distinct ((_ extract 11 9) C1) (_ bv0 3)) true) ?x12267 ?x4680) (ite (and (distinct ((_ extract 5 3) C1) (_ bv0 3)) true) ?x20045 ?x14159))))
 (let ((?x3881 (ite (and (distinct ((_ extract 14 14) C1) (_ bv0 1)) true) (_ bv14 32) (ite (and (distinct ((_ extract 13 13) C1) (_ bv0 1)) true) (_ bv13 32) (_ bv12 32)))))
 (let ((?x17028 (ite (and (distinct ((_ extract 17 17) C1) (_ bv0 1)) true) (_ bv17 32) (ite (and (distinct ((_ extract 16 16) C1) (_ bv0 1)) true) (_ bv16 32) (_ bv15 32)))))
 (let ((?x22935 (ite (and (distinct ((_ extract 20 20) C1) (_ bv0 1)) true) (_ bv20 32) (ite (and (distinct ((_ extract 19 19) C1) (_ bv0 1)) true) (_ bv19 32) (_ bv18 32)))))
 (let ((?x17957 (ite (and (distinct ((_ extract 23 23) C1) (_ bv0 1)) true) (_ bv23 32) (ite (and (distinct ((_ extract 22 22) C1) (_ bv0 1)) true) (_ bv22 32) (_ bv21 32)))))
 (let ((?x6540 (ite (and (distinct ((_ extract 23 18) C1) (_ bv0 6)) true) (ite (and (distinct ((_ extract 23 21) C1) (_ bv0 3)) true) ?x17957 ?x22935) (ite (and (distinct ((_ extract 17 15) C1) (_ bv0 3)) true) ?x17028 ?x3881))))
 (let ((?x23022 (ite (and (distinct ((_ extract 26 26) C1) (_ bv0 1)) true) (_ bv26 32) (ite (and (distinct ((_ extract 25 25) C1) (_ bv0 1)) true) (_ bv25 32) (_ bv24 32)))))
 (let ((?x14215 (ite (and (distinct ((_ extract 29 29) C1) (_ bv0 1)) true) (_ bv29 32) (ite (and (distinct ((_ extract 28 28) C1) (_ bv0 1)) true) (_ bv28 32) (_ bv27 32)))))
 (let ((?x9890 (ite (and (distinct ((_ extract 32 32) C1) (_ bv0 1)) true) (_ bv32 32) (ite (and (distinct ((_ extract 31 31) C1) (_ bv0 1)) true) (_ bv31 32) (_ bv30 32)))))
 (let ((?x23614 (ite (and (distinct ((_ extract 35 35) C1) (_ bv0 1)) true) (_ bv35 32) (ite (and (distinct ((_ extract 34 34) C1) (_ bv0 1)) true) (_ bv34 32) (_ bv33 32)))))
 (let ((?x17526 (ite (and (distinct ((_ extract 35 30) C1) (_ bv0 6)) true) (ite (and (distinct ((_ extract 35 33) C1) (_ bv0 3)) true) ?x23614 ?x9890) (ite (and (distinct ((_ extract 29 27) C1) (_ bv0 3)) true) ?x14215 ?x23022))))
 (let ((?x3596 (ite (and (distinct ((_ extract 38 38) C1) (_ bv0 1)) true) (_ bv38 32) (ite (and (distinct ((_ extract 37 37) C1) (_ bv0 1)) true) (_ bv37 32) (_ bv36 32)))))
 (let ((?x1084 (ite (and (distinct ((_ extract 41 41) C1) (_ bv0 1)) true) (_ bv41 32) (ite (and (distinct ((_ extract 40 40) C1) (_ bv0 1)) true) (_ bv40 32) (_ bv39 32)))))
 (let ((?x21942 (ite (and (distinct ((_ extract 44 44) C1) (_ bv0 1)) true) (_ bv44 32) (ite (and (distinct ((_ extract 43 43) C1) (_ bv0 1)) true) (_ bv43 32) (_ bv42 32)))))
 (let ((?x19160 (ite (and (distinct ((_ extract 47 47) C1) (_ bv0 1)) true) (_ bv47 32) (ite (and (distinct ((_ extract 46 46) C1) (_ bv0 1)) true) (_ bv46 32) (_ bv45 32)))))
 (let ((?x6873 (ite (and (distinct ((_ extract 47 42) C1) (_ bv0 6)) true) (ite (and (distinct ((_ extract 47 45) C1) (_ bv0 3)) true) ?x19160 ?x21942) (ite (and (distinct ((_ extract 41 39) C1) (_ bv0 3)) true) ?x1084 ?x3596))))
 (let ((?x15039 (ite (and (distinct ((_ extract 47 24) C1) (_ bv0 24)) true) (ite (and (distinct ((_ extract 47 36) C1) (_ bv0 12)) true) ?x6873 ?x17526) (ite (and (distinct ((_ extract 23 12) C1) (_ bv0 12)) true) ?x6540 ?x17499))))
 (let ((?x16683 (ite (and (distinct ((_ extract 2 2) C2) (_ bv0 1)) true) (_ bv2 32) (ite (and (distinct ((_ extract 1 1) C2) (_ bv0 1)) true) (_ bv1 32) (_ bv0 32)))))
 (let ((?x18690 (ite (and (distinct ((_ extract 5 5) C2) (_ bv0 1)) true) (_ bv5 32) (ite (and (distinct ((_ extract 4 4) C2) (_ bv0 1)) true) (_ bv4 32) (_ bv3 32)))))
 (let ((?x20270 (ite (and (distinct ((_ extract 8 8) C2) (_ bv0 1)) true) (_ bv8 32) (ite (and (distinct ((_ extract 7 7) C2) (_ bv0 1)) true) (_ bv7 32) (_ bv6 32)))))
 (let ((?x4015 (ite (and (distinct ((_ extract 10 9) C2) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) C2) (_ bv0 1)) true) (_ bv10 32) (_ bv9 32)) ?x20270)))
 (let ((?x22686 (ite (and (distinct ((_ extract 10 6) C2) (_ bv0 5)) true) ?x4015 (ite (and (distinct ((_ extract 5 3) C2) (_ bv0 3)) true) ?x18690 ?x16683))))
 (and (and (and (distinct C1 (_ bv0 48)) true) (= (bvand C1 (bvsub C1 (_ bv1 48))) (_ bv0 48))) (and (and (distinct C2 (_ bv0 11)) true) (= (bvand C2 (bvsub C2 (_ bv1 11))) (_ bv0 11))) (bvslt ?x22686 ?x15039) $x3025))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
