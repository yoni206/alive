(set-info :status unknown)
(declare-fun mem0 () (_ BitVec 8))
(declare-fun %p2 () (_ BitVec 64))
(declare-fun idx () (_ BitVec 64))
(declare-fun %p1 () (_ BitVec 64))
(declare-fun |ana_equivalentAddressValues(%p1, %p2)| () (_ BitVec 1))
(assert
 (let (($x12921 (or true true)))
 (let (($x18818 (and (distinct %p2 (_ bv0 64)) true)))
 (let (($x17032 (and (distinct %p1 (_ bv0 64)) true)))
 (let (($x23211 (and $x17032 $x12921 $x17032 $x12921 $x17032 $x12921 $x18818 $x12921 (= idx (bvadd %p2 (_ bv0 64))))))
 (let ((?x1702 (ite $x23211 ((_ extract 7 0) (concat (concat (concat mem0 mem0) mem0) mem0)) mem0)))
 (let (($x5676 (and $x17032 $x12921 $x17032 $x12921 $x17032 $x12921 $x18818 $x12921 (= idx (bvadd %p2 (_ bv1 64))))))
 (let ((?x19564 (ite $x5676 ((_ extract 15 8) (concat (concat (concat mem0 mem0) mem0) mem0)) ?x1702)))
 (let (($x7360 (and $x17032 $x12921 $x17032 $x12921 $x17032 $x12921 $x18818 $x12921 (= idx (bvadd %p2 (_ bv2 64))))))
 (let ((?x18865 (ite $x7360 ((_ extract 23 16) (concat (concat (concat mem0 mem0) mem0) mem0)) ?x19564)))
 (let (($x10055 (and $x17032 $x12921 $x17032 $x12921 $x17032 $x12921 $x18818 $x12921 (= idx (bvadd %p2 (_ bv3 64))))))
 (let ((?x8366 (ite $x10055 ((_ extract 31 24) (concat (concat (concat mem0 mem0) mem0) mem0)) ?x18865)))
 (let (($x16121 (= |ana_equivalentAddressValues(%p1, %p2)| (_ bv1 1))))
 (and (=> $x16121 (= %p1 %p2)) $x16121 (and (distinct ?x8366 mem0) true)))))))))))))))
(check-sat)
