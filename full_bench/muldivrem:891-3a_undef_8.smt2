(set-info :status unknown)
(declare-fun C () (_ BitVec 12))
(declare-fun %N () (_ BitVec 12))
(assert
 (let ((?x3690 (ite (and (distinct ((_ extract 2 2) C) (_ bv0 1)) true) (_ bv2 12) (ite (and (distinct ((_ extract 1 1) C) (_ bv0 1)) true) (_ bv1 12) (_ bv0 12)))))
 (let ((?x3483 (ite (and (distinct ((_ extract 5 5) C) (_ bv0 1)) true) (_ bv5 12) (ite (and (distinct ((_ extract 4 4) C) (_ bv0 1)) true) (_ bv4 12) (_ bv3 12)))))
 (let ((?x16227 (ite (and (distinct ((_ extract 8 8) C) (_ bv0 1)) true) (_ bv8 12) (ite (and (distinct ((_ extract 7 7) C) (_ bv0 1)) true) (_ bv7 12) (_ bv6 12)))))
 (let ((?x2391 (ite (and (distinct ((_ extract 11 11) C) (_ bv0 1)) true) (_ bv11 12) (ite (and (distinct ((_ extract 10 10) C) (_ bv0 1)) true) (_ bv10 12) (_ bv9 12)))))
 (let ((?x11199 (ite (and (distinct ((_ extract 11 6) C) (_ bv0 6)) true) (ite (and (distinct ((_ extract 11 9) C) (_ bv0 3)) true) ?x2391 ?x16227) (ite (and (distinct ((_ extract 5 3) C) (_ bv0 3)) true) ?x3483 ?x3690))))
 (let ((?x9212 ((_ zero_extend 1) (bvadd %N ?x11199))))
 (let (($x11667 (bvult %N (_ bv12 12))))
 (and $x11667 (and (distinct ((_ zero_extend 1) (bvshl C %N)) (_ bv0 13)) true) (and (and (distinct C (_ bv0 12)) true) (= (bvand C (bvsub C (_ bv1 12))) (_ bv0 12))) (not (bvult ?x9212 (_ bv13 13))))))))))))
(check-sat)
