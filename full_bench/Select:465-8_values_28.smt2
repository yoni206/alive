(set-info :status unknown)
(declare-fun %Y () (_ BitVec 11))
(declare-fun C2 () (_ BitVec 11))
(declare-fun C1 () (_ BitVec 30))
(declare-fun %X () (_ BitVec 30))
(assert
 (let ((?x17763 (ite (and (distinct ((_ extract 2 2) C2) (_ bv0 1)) true) (_ bv2 30) (ite (and (distinct ((_ extract 1 1) C2) (_ bv0 1)) true) (_ bv1 30) (_ bv0 30)))))
 (let ((?x7566 (ite (and (distinct ((_ extract 5 5) C2) (_ bv0 1)) true) (_ bv5 30) (ite (and (distinct ((_ extract 4 4) C2) (_ bv0 1)) true) (_ bv4 30) (_ bv3 30)))))
 (let ((?x15144 (ite (and (distinct ((_ extract 8 8) C2) (_ bv0 1)) true) (_ bv8 30) (ite (and (distinct ((_ extract 7 7) C2) (_ bv0 1)) true) (_ bv7 30) (_ bv6 30)))))
 (let ((?x21691 (ite (and (distinct ((_ extract 10 9) C2) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) C2) (_ bv0 1)) true) (_ bv10 30) (_ bv9 30)) ?x15144)))
 (let ((?x16566 (ite (and (distinct ((_ extract 10 6) C2) (_ bv0 5)) true) ?x21691 (ite (and (distinct ((_ extract 5 3) C2) (_ bv0 3)) true) ?x7566 ?x17763))))
 (let ((?x1568 (ite (and (distinct ((_ extract 3 2) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 3 3) C1) (_ bv0 1)) true) (_ bv3 30) (_ bv2 30)) (ite (and (distinct ((_ extract 1 1) C1) (_ bv0 1)) true) (_ bv1 30) (_ bv0 30)))))
 (let ((?x6653 (ite (and (distinct ((_ extract 7 6) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 7 7) C1) (_ bv0 1)) true) (_ bv7 30) (_ bv6 30)) (ite (and (distinct ((_ extract 5 5) C1) (_ bv0 1)) true) (_ bv5 30) (_ bv4 30)))))
 (let ((?x13927 (ite (and (distinct ((_ extract 11 10) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 11 11) C1) (_ bv0 1)) true) (_ bv11 30) (_ bv10 30)) (ite (and (distinct ((_ extract 9 9) C1) (_ bv0 1)) true) (_ bv9 30) (_ bv8 30)))))
 (let ((?x1576 (ite (and (distinct ((_ extract 14 14) C1) (_ bv0 1)) true) (_ bv14 30) (ite (and (distinct ((_ extract 13 13) C1) (_ bv0 1)) true) (_ bv13 30) (_ bv12 30)))))
 (let ((?x5719 (ite (and (distinct ((_ extract 14 8) C1) (_ bv0 7)) true) (ite (and (distinct ((_ extract 14 12) C1) (_ bv0 3)) true) ?x1576 ?x13927) (ite (and (distinct ((_ extract 7 4) C1) (_ bv0 4)) true) ?x6653 ?x1568))))
 (let ((?x3185 (ite (and (distinct ((_ extract 18 17) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 18 18) C1) (_ bv0 1)) true) (_ bv18 30) (_ bv17 30)) (ite (and (distinct ((_ extract 16 16) C1) (_ bv0 1)) true) (_ bv16 30) (_ bv15 30)))))
 (let ((?x10942 (ite (and (distinct ((_ extract 22 21) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 22 22) C1) (_ bv0 1)) true) (_ bv22 30) (_ bv21 30)) (ite (and (distinct ((_ extract 20 20) C1) (_ bv0 1)) true) (_ bv20 30) (_ bv19 30)))))
 (let ((?x16675 (ite (and (distinct ((_ extract 26 25) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 26 26) C1) (_ bv0 1)) true) (_ bv26 30) (_ bv25 30)) (ite (and (distinct ((_ extract 24 24) C1) (_ bv0 1)) true) (_ bv24 30) (_ bv23 30)))))
 (let ((?x10767 (ite (and (distinct ((_ extract 29 29) C1) (_ bv0 1)) true) (_ bv29 30) (ite (and (distinct ((_ extract 28 28) C1) (_ bv0 1)) true) (_ bv28 30) (_ bv27 30)))))
 (let ((?x22634 (ite (and (distinct ((_ extract 29 23) C1) (_ bv0 7)) true) (ite (and (distinct ((_ extract 29 27) C1) (_ bv0 3)) true) ?x10767 ?x16675) (ite (and (distinct ((_ extract 22 19) C1) (_ bv0 4)) true) ?x10942 ?x3185))))
 (let ((?x21390 (bvsub (ite (and (distinct ((_ extract 29 15) C1) (_ bv0 15)) true) ?x22634 ?x5719) ?x16566)))
 (let ((?x14781 (bvand %X C1)))
 (let ((?x10803 (bvor %Y C2)))
 (let (($x18152 (and (distinct (ite (= (ite (and (distinct ?x14781 (_ bv0 30)) true) (_ bv1 1) (_ bv0 1)) (_ bv1 1)) ?x10803 %Y) (bvor ((_ extract 10 0) (bvlshr ?x14781 ?x21390)) %Y)) true)))
 (let ((?x16853 (ite (and (distinct ((_ extract 3 2) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 3 3) C1) (_ bv0 1)) true) (_ bv3 32) (_ bv2 32)) (ite (and (distinct ((_ extract 1 1) C1) (_ bv0 1)) true) (_ bv1 32) (_ bv0 32)))))
 (let ((?x23404 (ite (and (distinct ((_ extract 7 6) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 7 7) C1) (_ bv0 1)) true) (_ bv7 32) (_ bv6 32)) (ite (and (distinct ((_ extract 5 5) C1) (_ bv0 1)) true) (_ bv5 32) (_ bv4 32)))))
 (let ((?x14316 (ite (and (distinct ((_ extract 11 10) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 11 11) C1) (_ bv0 1)) true) (_ bv11 32) (_ bv10 32)) (ite (and (distinct ((_ extract 9 9) C1) (_ bv0 1)) true) (_ bv9 32) (_ bv8 32)))))
 (let ((?x9442 (ite (and (distinct ((_ extract 14 14) C1) (_ bv0 1)) true) (_ bv14 32) (ite (and (distinct ((_ extract 13 13) C1) (_ bv0 1)) true) (_ bv13 32) (_ bv12 32)))))
 (let ((?x15724 (ite (and (distinct ((_ extract 14 8) C1) (_ bv0 7)) true) (ite (and (distinct ((_ extract 14 12) C1) (_ bv0 3)) true) ?x9442 ?x14316) (ite (and (distinct ((_ extract 7 4) C1) (_ bv0 4)) true) ?x23404 ?x16853))))
 (let ((?x7841 (ite (and (distinct ((_ extract 18 17) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 18 18) C1) (_ bv0 1)) true) (_ bv18 32) (_ bv17 32)) (ite (and (distinct ((_ extract 16 16) C1) (_ bv0 1)) true) (_ bv16 32) (_ bv15 32)))))
 (let ((?x4578 (ite (and (distinct ((_ extract 22 21) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 22 22) C1) (_ bv0 1)) true) (_ bv22 32) (_ bv21 32)) (ite (and (distinct ((_ extract 20 20) C1) (_ bv0 1)) true) (_ bv20 32) (_ bv19 32)))))
 (let ((?x13730 (ite (and (distinct ((_ extract 26 25) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 26 26) C1) (_ bv0 1)) true) (_ bv26 32) (_ bv25 32)) (ite (and (distinct ((_ extract 24 24) C1) (_ bv0 1)) true) (_ bv24 32) (_ bv23 32)))))
 (let ((?x18306 (ite (and (distinct ((_ extract 29 29) C1) (_ bv0 1)) true) (_ bv29 32) (ite (and (distinct ((_ extract 28 28) C1) (_ bv0 1)) true) (_ bv28 32) (_ bv27 32)))))
 (let ((?x12719 (ite (and (distinct ((_ extract 29 23) C1) (_ bv0 7)) true) (ite (and (distinct ((_ extract 29 27) C1) (_ bv0 3)) true) ?x18306 ?x13730) (ite (and (distinct ((_ extract 22 19) C1) (_ bv0 4)) true) ?x4578 ?x7841))))
 (let ((?x8465 (ite (and (distinct ((_ extract 2 2) C2) (_ bv0 1)) true) (_ bv2 32) (ite (and (distinct ((_ extract 1 1) C2) (_ bv0 1)) true) (_ bv1 32) (_ bv0 32)))))
 (let ((?x18584 (ite (and (distinct ((_ extract 5 5) C2) (_ bv0 1)) true) (_ bv5 32) (ite (and (distinct ((_ extract 4 4) C2) (_ bv0 1)) true) (_ bv4 32) (_ bv3 32)))))
 (let ((?x3879 (ite (and (distinct ((_ extract 8 8) C2) (_ bv0 1)) true) (_ bv8 32) (ite (and (distinct ((_ extract 7 7) C2) (_ bv0 1)) true) (_ bv7 32) (_ bv6 32)))))
 (let ((?x18372 (ite (and (distinct ((_ extract 10 9) C2) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) C2) (_ bv0 1)) true) (_ bv10 32) (_ bv9 32)) ?x3879)))
 (let ((?x21033 (ite (and (distinct ((_ extract 10 6) C2) (_ bv0 5)) true) ?x18372 (ite (and (distinct ((_ extract 5 3) C2) (_ bv0 3)) true) ?x18584 ?x8465))))
 (and (and (and (distinct C1 (_ bv0 30)) true) (= (bvand C1 (bvsub C1 (_ bv1 30))) (_ bv0 30))) (and (and (distinct C2 (_ bv0 11)) true) (= (bvand C2 (bvsub C2 (_ bv1 11))) (_ bv0 11))) (bvslt ?x21033 (ite (and (distinct ((_ extract 29 15) C1) (_ bv0 15)) true) ?x12719 ?x15724)) $x18152))))))))))))))))))))))))))))))))))))
(check-sat)
