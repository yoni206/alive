(set-info :status unknown)
(declare-fun mem0 () (_ BitVec 8))
(declare-fun %x () (_ BitVec 63))
(declare-fun %p1 () (_ BitVec 64))
(declare-fun idx () (_ BitVec 64))
(declare-fun |ana_equivalentAddressValues(%p1, %p2)| () (_ BitVec 1))
(declare-fun %p2 () (_ BitVec 64))
(assert
 (let ((?x15865 (concat ((_ extract 7 7) mem0) ((_ extract 6 0) %x))))
 (let ((?x23577 (ite (and (and (distinct %p1 (_ bv0 64)) true) (or true true) (= idx %p1)) ?x15865 mem0)))
 (let ((?x23786 ((_ extract 14 7) %x)))
 (let (($x3883 (or true true)))
 (let (($x23534 (and (distinct %p1 (_ bv0 64)) true)))
 (let ((?x17826 (ite (and $x23534 $x3883 (= idx (bvadd (bvadd %p1 (_ bv1 64)) (_ bv0 64)))) ?x23786 ?x23577)))
 (let ((?x7441 ((_ extract 22 15) %x)))
 (let ((?x17907 (ite (and $x23534 $x3883 (= idx (bvadd (bvadd %p1 (_ bv1 64)) (_ bv1 64)))) ?x7441 ?x17826)))
 (let ((?x6201 ((_ extract 30 23) %x)))
 (let ((?x5013 (ite (and $x23534 $x3883 (= idx (bvadd (bvadd %p1 (_ bv1 64)) (_ bv2 64)))) ?x6201 ?x17907)))
 (let ((?x4211 ((_ extract 38 31) %x)))
 (let ((?x6193 (ite (and $x23534 $x3883 (= idx (bvadd (bvadd %p1 (_ bv1 64)) (_ bv3 64)))) ?x4211 ?x5013)))
 (let ((?x8976 ((_ extract 46 39) %x)))
 (let ((?x18741 (ite (and $x23534 $x3883 (= idx (bvadd (bvadd %p1 (_ bv1 64)) (_ bv4 64)))) ?x8976 ?x6193)))
 (let ((?x19292 ((_ extract 54 47) %x)))
 (let ((?x10550 (ite (and $x23534 $x3883 (= idx (bvadd (bvadd %p1 (_ bv1 64)) (_ bv5 64)))) ?x19292 ?x18741)))
 (let ((?x8479 ((_ extract 62 55) %x)))
 (let ((?x20203 (ite (and $x23534 $x3883 (= idx (bvadd (bvadd %p1 (_ bv1 64)) (_ bv6 64)))) ?x8479 ?x10550)))
 (let (($x10800 (= |ana_equivalentAddressValues(%p1, %p2)| (_ bv1 1))))
 (and (=> $x10800 (= %p1 %p2)) $x10800 (and (distinct ?x20203 ?x20203) true))))))))))))))))))))))
(check-sat)
