(set-info :status unknown)
(declare-fun %Y () (_ BitVec 11))
(declare-fun C2 () (_ BitVec 11))
(declare-fun C1 () (_ BitVec 5))
(declare-fun %X () (_ BitVec 5))
(assert
 (let ((?x13008 (ite (and (distinct ((_ extract 2 2) C2) (_ bv0 1)) true) (_ bv2 5) (ite (and (distinct ((_ extract 1 1) C2) (_ bv0 1)) true) (_ bv1 5) (_ bv0 5)))))
 (let ((?x18532 (ite (and (distinct ((_ extract 5 5) C2) (_ bv0 1)) true) (_ bv5 5) (ite (and (distinct ((_ extract 4 4) C2) (_ bv0 1)) true) (_ bv4 5) (_ bv3 5)))))
 (let ((?x8305 (ite (and (distinct ((_ extract 8 8) C2) (_ bv0 1)) true) (_ bv8 5) (ite (and (distinct ((_ extract 7 7) C2) (_ bv0 1)) true) (_ bv7 5) (_ bv6 5)))))
 (let ((?x17088 (ite (and (distinct ((_ extract 10 9) C2) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) C2) (_ bv0 1)) true) (_ bv10 5) (_ bv9 5)) ?x8305)))
 (let ((?x7097 (ite (and (distinct ((_ extract 10 6) C2) (_ bv0 5)) true) ?x17088 (ite (and (distinct ((_ extract 5 3) C2) (_ bv0 3)) true) ?x18532 ?x13008))))
 (let ((?x22973 (ite (and (distinct ((_ extract 2 2) C1) (_ bv0 1)) true) (_ bv2 5) (ite (and (distinct ((_ extract 1 1) C1) (_ bv0 1)) true) (_ bv1 5) (_ bv0 5)))))
 (let ((?x10925 (ite (and (distinct ((_ extract 4 3) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 4 4) C1) (_ bv0 1)) true) (_ bv4 5) (_ bv3 5)) ?x22973)))
 (let ((?x4082 (bvsub ?x10925 ?x7097)))
 (let ((?x3913 (bvand %X C1)))
 (let ((?x1968 (bvor %Y C2)))
 (let (($x5741 (and (distinct (ite (= (ite (and (distinct ?x3913 (_ bv0 5)) true) (_ bv1 1) (_ bv0 1)) (_ bv1 1)) ?x1968 %Y) (bvor ((_ zero_extend 6) (bvlshr ?x3913 ?x4082)) %Y)) true)))
 (let ((?x1758 (ite (and (distinct ((_ extract 2 2) C1) (_ bv0 1)) true) (_ bv2 32) (ite (and (distinct ((_ extract 1 1) C1) (_ bv0 1)) true) (_ bv1 32) (_ bv0 32)))))
 (let ((?x16853 (ite (and (distinct ((_ extract 4 3) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 4 4) C1) (_ bv0 1)) true) (_ bv4 32) (_ bv3 32)) ?x1758)))
 (let ((?x1180 (ite (and (distinct ((_ extract 2 2) C2) (_ bv0 1)) true) (_ bv2 32) (ite (and (distinct ((_ extract 1 1) C2) (_ bv0 1)) true) (_ bv1 32) (_ bv0 32)))))
 (let ((?x11418 (ite (and (distinct ((_ extract 5 5) C2) (_ bv0 1)) true) (_ bv5 32) (ite (and (distinct ((_ extract 4 4) C2) (_ bv0 1)) true) (_ bv4 32) (_ bv3 32)))))
 (let ((?x12423 (ite (and (distinct ((_ extract 8 8) C2) (_ bv0 1)) true) (_ bv8 32) (ite (and (distinct ((_ extract 7 7) C2) (_ bv0 1)) true) (_ bv7 32) (_ bv6 32)))))
 (let ((?x23551 (ite (and (distinct ((_ extract 10 9) C2) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) C2) (_ bv0 1)) true) (_ bv10 32) (_ bv9 32)) ?x12423)))
 (let ((?x17302 (ite (and (distinct ((_ extract 10 6) C2) (_ bv0 5)) true) ?x23551 (ite (and (distinct ((_ extract 5 3) C2) (_ bv0 3)) true) ?x11418 ?x1180))))
 (and (and (and (distinct C1 (_ bv0 5)) true) (= (bvand C1 (bvsub C1 (_ bv1 5))) (_ bv0 5))) (and (and (distinct C2 (_ bv0 11)) true) (= (bvand C2 (bvsub C2 (_ bv1 11))) (_ bv0 11))) (bvslt ?x17302 ?x16853) $x5741))))))))))))))))))))
(check-sat)
