(set-info :status unknown)
(declare-fun %Y () (_ BitVec 11))
(declare-fun C2 () (_ BitVec 11))
(declare-fun C1 () (_ BitVec 17))
(declare-fun %X () (_ BitVec 17))
(assert
 (let ((?x1122 (ite (and (distinct ((_ extract 2 2) C2) (_ bv0 1)) true) (_ bv2 17) (ite (and (distinct ((_ extract 1 1) C2) (_ bv0 1)) true) (_ bv1 17) (_ bv0 17)))))
 (let ((?x3845 (ite (and (distinct ((_ extract 5 5) C2) (_ bv0 1)) true) (_ bv5 17) (ite (and (distinct ((_ extract 4 4) C2) (_ bv0 1)) true) (_ bv4 17) (_ bv3 17)))))
 (let ((?x1382 (ite (and (distinct ((_ extract 8 8) C2) (_ bv0 1)) true) (_ bv8 17) (ite (and (distinct ((_ extract 7 7) C2) (_ bv0 1)) true) (_ bv7 17) (_ bv6 17)))))
 (let ((?x2992 (ite (and (distinct ((_ extract 10 9) C2) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) C2) (_ bv0 1)) true) (_ bv10 17) (_ bv9 17)) ?x1382)))
 (let ((?x2379 (ite (and (distinct ((_ extract 10 6) C2) (_ bv0 5)) true) ?x2992 (ite (and (distinct ((_ extract 5 3) C2) (_ bv0 3)) true) ?x3845 ?x1122))))
 (let ((?x3617 (ite (and (distinct ((_ extract 2 2) C1) (_ bv0 1)) true) (_ bv2 17) (ite (and (distinct ((_ extract 1 1) C1) (_ bv0 1)) true) (_ bv1 17) (_ bv0 17)))))
 (let ((?x2517 (ite (and (distinct ((_ extract 4 3) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 4 4) C1) (_ bv0 1)) true) (_ bv4 17) (_ bv3 17)) ?x3617)))
 (let ((?x6052 (ite (and (distinct ((_ extract 8 7) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 8 8) C1) (_ bv0 1)) true) (_ bv8 17) (_ bv7 17)) (ite (and (distinct ((_ extract 6 6) C1) (_ bv0 1)) true) (_ bv6 17) (_ bv5 17)))))
 (let ((?x5124 (ite (and (distinct ((_ extract 12 11) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 12 12) C1) (_ bv0 1)) true) (_ bv12 17) (_ bv11 17)) (ite (and (distinct ((_ extract 10 10) C1) (_ bv0 1)) true) (_ bv10 17) (_ bv9 17)))))
 (let ((?x5461 (ite (and (distinct ((_ extract 16 15) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 16 16) C1) (_ bv0 1)) true) (_ bv16 17) (_ bv15 17)) (ite (and (distinct ((_ extract 14 14) C1) (_ bv0 1)) true) (_ bv14 17) (_ bv13 17)))))
 (let ((?x4621 (ite (and (distinct ((_ extract 16 9) C1) (_ bv0 8)) true) (ite (and (distinct ((_ extract 16 13) C1) (_ bv0 4)) true) ?x5461 ?x5124) (ite (and (distinct ((_ extract 8 5) C1) (_ bv0 4)) true) ?x6052 ?x2517))))
 (let ((?x1758 (bvsub ?x4621 ?x2379)))
 (let ((?x3596 (bvand %X C1)))
 (let ((?x4384 (bvor %Y C2)))
 (let (($x1487 (and (distinct (ite (= (ite (and (distinct ?x3596 (_ bv0 17)) true) (_ bv1 1) (_ bv0 1)) (_ bv1 1)) %Y ?x4384) (bvor (bvxor ((_ extract 10 0) (bvlshr ?x3596 ?x1758)) C2) %Y)) true)))
 (let ((?x1318 (ite (and (distinct ((_ extract 2 2) C1) (_ bv0 1)) true) (_ bv2 32) (ite (and (distinct ((_ extract 1 1) C1) (_ bv0 1)) true) (_ bv1 32) (_ bv0 32)))))
 (let ((?x1661 (ite (and (distinct ((_ extract 4 3) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 4 4) C1) (_ bv0 1)) true) (_ bv4 32) (_ bv3 32)) ?x1318)))
 (let ((?x1465 (ite (and (distinct ((_ extract 8 7) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 8 8) C1) (_ bv0 1)) true) (_ bv8 32) (_ bv7 32)) (ite (and (distinct ((_ extract 6 6) C1) (_ bv0 1)) true) (_ bv6 32) (_ bv5 32)))))
 (let ((?x3111 (ite (and (distinct ((_ extract 12 11) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 12 12) C1) (_ bv0 1)) true) (_ bv12 32) (_ bv11 32)) (ite (and (distinct ((_ extract 10 10) C1) (_ bv0 1)) true) (_ bv10 32) (_ bv9 32)))))
 (let ((?x5040 (ite (and (distinct ((_ extract 16 15) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 16 16) C1) (_ bv0 1)) true) (_ bv16 32) (_ bv15 32)) (ite (and (distinct ((_ extract 14 14) C1) (_ bv0 1)) true) (_ bv14 32) (_ bv13 32)))))
 (let ((?x1799 (ite (and (distinct ((_ extract 16 9) C1) (_ bv0 8)) true) (ite (and (distinct ((_ extract 16 13) C1) (_ bv0 4)) true) ?x5040 ?x3111) (ite (and (distinct ((_ extract 8 5) C1) (_ bv0 4)) true) ?x1465 ?x1661))))
 (let ((?x4735 (ite (and (distinct ((_ extract 2 2) C2) (_ bv0 1)) true) (_ bv2 32) (ite (and (distinct ((_ extract 1 1) C2) (_ bv0 1)) true) (_ bv1 32) (_ bv0 32)))))
 (let ((?x4990 (ite (and (distinct ((_ extract 5 5) C2) (_ bv0 1)) true) (_ bv5 32) (ite (and (distinct ((_ extract 4 4) C2) (_ bv0 1)) true) (_ bv4 32) (_ bv3 32)))))
 (let ((?x2292 (ite (and (distinct ((_ extract 8 8) C2) (_ bv0 1)) true) (_ bv8 32) (ite (and (distinct ((_ extract 7 7) C2) (_ bv0 1)) true) (_ bv7 32) (_ bv6 32)))))
 (let ((?x3329 (ite (and (distinct ((_ extract 10 9) C2) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) C2) (_ bv0 1)) true) (_ bv10 32) (_ bv9 32)) ?x2292)))
 (let ((?x3318 (ite (and (distinct ((_ extract 10 6) C2) (_ bv0 5)) true) ?x3329 (ite (and (distinct ((_ extract 5 3) C2) (_ bv0 3)) true) ?x4990 ?x4735))))
 (and (and (and (distinct C1 (_ bv0 17)) true) (= (bvand C1 (bvsub C1 (_ bv1 17))) (_ bv0 17))) (and (and (distinct C2 (_ bv0 11)) true) (= (bvand C2 (bvsub C2 (_ bv1 11))) (_ bv0 11))) (bvslt ?x3318 ?x1799) $x1487))))))))))))))))))))))))))))
(check-sat)
