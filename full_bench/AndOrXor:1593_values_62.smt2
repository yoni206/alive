(set-info :status unknown)
(declare-fun %K2 () (_ BitVec 2))
(declare-fun %K1 () (_ BitVec 2))
(declare-fun %A () (_ BitVec 2))
(declare-fun |ana_isPowerOf2(%K2)| () (_ BitVec 1))
(declare-fun |ana_isPowerOf2(%K1)| () (_ BitVec 1))
(assert
 (let ((?x11219 (ite (and (distinct (bvand %A (bvor %K1 %K2)) (bvor %K1 %K2)) true) (_ bv1 1) (_ bv0 1))))
 (let ((?x18074 (ite (= (bvand %A %K2) (_ bv0 2)) (_ bv1 1) (_ bv0 1))))
 (let ((?x15943 (ite (= (bvand %A %K1) (_ bv0 2)) (_ bv1 1) (_ bv0 1))))
 (let (($x9010 (= |ana_isPowerOf2(%K2)| (_ bv1 1))))
 (let (($x17707 (= |ana_isPowerOf2(%K1)| (_ bv1 1))))
 (let (($x23959 (=> $x9010 (and (and (distinct %K2 (_ bv0 2)) true) (= (bvand %K2 (bvsub %K2 (_ bv1 2))) (_ bv0 2))))))
 (let (($x14706 (=> $x17707 (and (and (distinct %K1 (_ bv0 2)) true) (= (bvand %K1 (bvsub %K1 (_ bv1 2))) (_ bv0 2))))))
 (and $x14706 $x23959 $x17707 $x9010 (and (distinct (bvor ?x15943 ?x18074) ?x11219) true))))))))))
(check-sat)
