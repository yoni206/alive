(set-info :source |
 Generated by Alive 0.1
 More info in N. P. Lopes, D. Menendez, S. Nagarakatte, J. Regehr.
 Provably Correct Peephole Optimizations with Alive. In PLDI'15.
|)

(set-info :status unknown)
(declare-fun mem0 () (_ BitVec 8))
(declare-fun C2 () (_ BitVec 27))
(declare-fun C1 () (_ BitVec 27))
(assert
 (let (($x927 (and (distinct mem0 mem0) true)))
 (let ((?x18952 (ite (and (distinct ((_ extract 3 2) C2) (_ bv0 2)) true) (ite (and (distinct ((_ extract 3 3) C2) (_ bv0 1)) true) (_ bv3 27) (_ bv2 27)) (ite (and (distinct ((_ extract 1 1) C2) (_ bv0 1)) true) (_ bv1 27) (_ bv0 27)))))
 (let ((?x18596 (ite (and (distinct ((_ extract 6 6) C2) (_ bv0 1)) true) (_ bv6 27) (ite (and (distinct ((_ extract 5 5) C2) (_ bv0 1)) true) (_ bv5 27) (_ bv4 27)))))
 (let ((?x18651 (ite (and (distinct ((_ extract 10 9) C2) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) C2) (_ bv0 1)) true) (_ bv10 27) (_ bv9 27)) (ite (and (distinct ((_ extract 8 8) C2) (_ bv0 1)) true) (_ bv8 27) (_ bv7 27)))))
 (let ((?x18356 (ite (and (distinct ((_ extract 13 13) C2) (_ bv0 1)) true) (_ bv13 27) (ite (and (distinct ((_ extract 12 12) C2) (_ bv0 1)) true) (_ bv12 27) (_ bv11 27)))))
 (let ((?x18943 (ite (and (distinct ((_ extract 13 7) C2) (_ bv0 7)) true) (ite (and (distinct ((_ extract 13 11) C2) (_ bv0 3)) true) ?x18356 ?x18651) (ite (and (distinct ((_ extract 6 4) C2) (_ bv0 3)) true) ?x18596 ?x18952))))
 (let ((?x17960 (ite (and (distinct ((_ extract 17 16) C2) (_ bv0 2)) true) (ite (and (distinct ((_ extract 17 17) C2) (_ bv0 1)) true) (_ bv17 27) (_ bv16 27)) (ite (and (distinct ((_ extract 15 15) C2) (_ bv0 1)) true) (_ bv15 27) (_ bv14 27)))))
 (let ((?x18962 (ite (and (distinct ((_ extract 20 20) C2) (_ bv0 1)) true) (_ bv20 27) (ite (and (distinct ((_ extract 19 19) C2) (_ bv0 1)) true) (_ bv19 27) (_ bv18 27)))))
 (let ((?x18973 (ite (and (distinct ((_ extract 23 23) C2) (_ bv0 1)) true) (_ bv23 27) (ite (and (distinct ((_ extract 22 22) C2) (_ bv0 1)) true) (_ bv22 27) (_ bv21 27)))))
 (let ((?x18988 (ite (and (distinct ((_ extract 26 26) C2) (_ bv0 1)) true) (_ bv26 27) (ite (and (distinct ((_ extract 25 25) C2) (_ bv0 1)) true) (_ bv25 27) (_ bv24 27)))))
 (let ((?x18573 (ite (and (distinct ((_ extract 26 21) C2) (_ bv0 6)) true) (ite (and (distinct ((_ extract 26 24) C2) (_ bv0 3)) true) ?x18988 ?x18973) (ite (and (distinct ((_ extract 20 18) C2) (_ bv0 3)) true) ?x18962 ?x17960))))
 (let ((?x18929 (bvsub (bvsub (_ bv27 27) (ite (and (distinct ((_ extract 26 14) C2) (_ bv0 13)) true) ?x18573 ?x18943)) (_ bv1 27))))
 (let ((?x18922 (bvsub (_ bv27 27) ?x18929)))
 (let (($x18824 (not (= (bvand C2 (bvshl (_ bv134217727 27) ?x18922)) (_ bv0 27)))))
 (let (($x18844 (and (and (distinct C2 (_ bv0 27)) true) (= (bvand C2 (bvsub C2 (_ bv1 27))) (_ bv0 27)))))
 (let (($x18874 (= C1 (bvneg C2))))
 (and $x18874 $x18844 $x18824 $x927))))))))))))))))))
(check-sat)
