(set-info :status unknown)
(declare-fun %Y () (_ BitVec 11))
(declare-fun C2 () (_ BitVec 11))
(declare-fun C1 () (_ BitVec 31))
(declare-fun %X () (_ BitVec 31))
(assert
 (let ((?x25100 (ite (and (distinct ((_ extract 2 2) C2) (_ bv0 1)) true) (_ bv2 31) (ite (and (distinct ((_ extract 1 1) C2) (_ bv0 1)) true) (_ bv1 31) (_ bv0 31)))))
 (let ((?x9311 (ite (and (distinct ((_ extract 5 5) C2) (_ bv0 1)) true) (_ bv5 31) (ite (and (distinct ((_ extract 4 4) C2) (_ bv0 1)) true) (_ bv4 31) (_ bv3 31)))))
 (let ((?x3439 (ite (and (distinct ((_ extract 8 8) C2) (_ bv0 1)) true) (_ bv8 31) (ite (and (distinct ((_ extract 7 7) C2) (_ bv0 1)) true) (_ bv7 31) (_ bv6 31)))))
 (let ((?x8769 (ite (and (distinct ((_ extract 10 9) C2) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) C2) (_ bv0 1)) true) (_ bv10 31) (_ bv9 31)) ?x3439)))
 (let ((?x14320 (ite (and (distinct ((_ extract 10 6) C2) (_ bv0 5)) true) ?x8769 (ite (and (distinct ((_ extract 5 3) C2) (_ bv0 3)) true) ?x9311 ?x25100))))
 (let ((?x16556 (ite (and (distinct ((_ extract 3 2) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 3 3) C1) (_ bv0 1)) true) (_ bv3 31) (_ bv2 31)) (ite (and (distinct ((_ extract 1 1) C1) (_ bv0 1)) true) (_ bv1 31) (_ bv0 31)))))
 (let ((?x21724 (ite (and (distinct ((_ extract 7 6) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 7 7) C1) (_ bv0 1)) true) (_ bv7 31) (_ bv6 31)) (ite (and (distinct ((_ extract 5 5) C1) (_ bv0 1)) true) (_ bv5 31) (_ bv4 31)))))
 (let ((?x9950 (ite (and (distinct ((_ extract 11 10) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 11 11) C1) (_ bv0 1)) true) (_ bv11 31) (_ bv10 31)) (ite (and (distinct ((_ extract 9 9) C1) (_ bv0 1)) true) (_ bv9 31) (_ bv8 31)))))
 (let ((?x10146 (ite (and (distinct ((_ extract 15 14) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 15 15) C1) (_ bv0 1)) true) (_ bv15 31) (_ bv14 31)) (ite (and (distinct ((_ extract 13 13) C1) (_ bv0 1)) true) (_ bv13 31) (_ bv12 31)))))
 (let ((?x1104 (ite (and (distinct ((_ extract 15 8) C1) (_ bv0 8)) true) (ite (and (distinct ((_ extract 15 12) C1) (_ bv0 4)) true) ?x10146 ?x9950) (ite (and (distinct ((_ extract 7 4) C1) (_ bv0 4)) true) ?x21724 ?x16556))))
 (let ((?x11954 (ite (and (distinct ((_ extract 19 18) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 19 19) C1) (_ bv0 1)) true) (_ bv19 31) (_ bv18 31)) (ite (and (distinct ((_ extract 17 17) C1) (_ bv0 1)) true) (_ bv17 31) (_ bv16 31)))))
 (let ((?x13002 (ite (and (distinct ((_ extract 23 22) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 23 23) C1) (_ bv0 1)) true) (_ bv23 31) (_ bv22 31)) (ite (and (distinct ((_ extract 21 21) C1) (_ bv0 1)) true) (_ bv21 31) (_ bv20 31)))))
 (let ((?x1392 (ite (and (distinct ((_ extract 27 26) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 27 27) C1) (_ bv0 1)) true) (_ bv27 31) (_ bv26 31)) (ite (and (distinct ((_ extract 25 25) C1) (_ bv0 1)) true) (_ bv25 31) (_ bv24 31)))))
 (let ((?x17929 (ite (and (distinct ((_ extract 30 30) C1) (_ bv0 1)) true) (_ bv30 31) (ite (and (distinct ((_ extract 29 29) C1) (_ bv0 1)) true) (_ bv29 31) (_ bv28 31)))))
 (let ((?x2520 (ite (and (distinct ((_ extract 30 24) C1) (_ bv0 7)) true) (ite (and (distinct ((_ extract 30 28) C1) (_ bv0 3)) true) ?x17929 ?x1392) (ite (and (distinct ((_ extract 23 20) C1) (_ bv0 4)) true) ?x13002 ?x11954))))
 (let ((?x17261 (bvsub (ite (and (distinct ((_ extract 30 16) C1) (_ bv0 15)) true) ?x2520 ?x1104) ?x14320)))
 (let ((?x3788 (bvand %X C1)))
 (let ((?x9509 (bvor %Y C2)))
 (let (($x20692 (and (distinct (ite (= (ite (and (distinct ?x3788 (_ bv0 31)) true) (_ bv1 1) (_ bv0 1)) (_ bv1 1)) %Y ?x9509) (bvor (bvxor ((_ extract 10 0) (bvlshr ?x3788 ?x17261)) C2) %Y)) true)))
 (let ((?x9875 (ite (and (distinct ((_ extract 3 2) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 3 3) C1) (_ bv0 1)) true) (_ bv3 32) (_ bv2 32)) (ite (and (distinct ((_ extract 1 1) C1) (_ bv0 1)) true) (_ bv1 32) (_ bv0 32)))))
 (let ((?x11808 (ite (and (distinct ((_ extract 7 6) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 7 7) C1) (_ bv0 1)) true) (_ bv7 32) (_ bv6 32)) (ite (and (distinct ((_ extract 5 5) C1) (_ bv0 1)) true) (_ bv5 32) (_ bv4 32)))))
 (let ((?x8704 (ite (and (distinct ((_ extract 11 10) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 11 11) C1) (_ bv0 1)) true) (_ bv11 32) (_ bv10 32)) (ite (and (distinct ((_ extract 9 9) C1) (_ bv0 1)) true) (_ bv9 32) (_ bv8 32)))))
 (let ((?x9522 (ite (and (distinct ((_ extract 15 14) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 15 15) C1) (_ bv0 1)) true) (_ bv15 32) (_ bv14 32)) (ite (and (distinct ((_ extract 13 13) C1) (_ bv0 1)) true) (_ bv13 32) (_ bv12 32)))))
 (let ((?x16971 (ite (and (distinct ((_ extract 15 8) C1) (_ bv0 8)) true) (ite (and (distinct ((_ extract 15 12) C1) (_ bv0 4)) true) ?x9522 ?x8704) (ite (and (distinct ((_ extract 7 4) C1) (_ bv0 4)) true) ?x11808 ?x9875))))
 (let ((?x4919 (ite (and (distinct ((_ extract 19 18) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 19 19) C1) (_ bv0 1)) true) (_ bv19 32) (_ bv18 32)) (ite (and (distinct ((_ extract 17 17) C1) (_ bv0 1)) true) (_ bv17 32) (_ bv16 32)))))
 (let ((?x3149 (ite (and (distinct ((_ extract 23 22) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 23 23) C1) (_ bv0 1)) true) (_ bv23 32) (_ bv22 32)) (ite (and (distinct ((_ extract 21 21) C1) (_ bv0 1)) true) (_ bv21 32) (_ bv20 32)))))
 (let ((?x4625 (ite (and (distinct ((_ extract 27 26) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 27 27) C1) (_ bv0 1)) true) (_ bv27 32) (_ bv26 32)) (ite (and (distinct ((_ extract 25 25) C1) (_ bv0 1)) true) (_ bv25 32) (_ bv24 32)))))
 (let ((?x2260 (ite (and (distinct ((_ extract 30 30) C1) (_ bv0 1)) true) (_ bv30 32) (ite (and (distinct ((_ extract 29 29) C1) (_ bv0 1)) true) (_ bv29 32) (_ bv28 32)))))
 (let ((?x6186 (ite (and (distinct ((_ extract 30 24) C1) (_ bv0 7)) true) (ite (and (distinct ((_ extract 30 28) C1) (_ bv0 3)) true) ?x2260 ?x4625) (ite (and (distinct ((_ extract 23 20) C1) (_ bv0 4)) true) ?x3149 ?x4919))))
 (let ((?x14060 (ite (and (distinct ((_ extract 2 2) C2) (_ bv0 1)) true) (_ bv2 32) (ite (and (distinct ((_ extract 1 1) C2) (_ bv0 1)) true) (_ bv1 32) (_ bv0 32)))))
 (let ((?x4701 (ite (and (distinct ((_ extract 5 5) C2) (_ bv0 1)) true) (_ bv5 32) (ite (and (distinct ((_ extract 4 4) C2) (_ bv0 1)) true) (_ bv4 32) (_ bv3 32)))))
 (let ((?x911 (ite (and (distinct ((_ extract 8 8) C2) (_ bv0 1)) true) (_ bv8 32) (ite (and (distinct ((_ extract 7 7) C2) (_ bv0 1)) true) (_ bv7 32) (_ bv6 32)))))
 (let ((?x10037 (ite (and (distinct ((_ extract 10 9) C2) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) C2) (_ bv0 1)) true) (_ bv10 32) (_ bv9 32)) ?x911)))
 (let ((?x24101 (ite (and (distinct ((_ extract 10 6) C2) (_ bv0 5)) true) ?x10037 (ite (and (distinct ((_ extract 5 3) C2) (_ bv0 3)) true) ?x4701 ?x14060))))
 (and (and (and (distinct C1 (_ bv0 31)) true) (= (bvand C1 (bvsub C1 (_ bv1 31))) (_ bv0 31))) (and (and (distinct C2 (_ bv0 11)) true) (= (bvand C2 (bvsub C2 (_ bv1 11))) (_ bv0 11))) (bvslt ?x24101 (ite (and (distinct ((_ extract 30 16) C1) (_ bv0 15)) true) ?x6186 ?x16971)) $x20692))))))))))))))))))))))))))))))))))))
(check-sat)
