(set-info :status unknown)
(declare-fun C3 () (_ BitVec 11))
(declare-fun C2 () (_ BitVec 11))
(declare-fun C () (_ BitVec 10))
(assert
 (let ((?x2906 (ite (and (distinct ((_ extract 2 2) (bvsub C2 C3)) (_ bv0 1)) true) (_ bv2 11) (ite (and (distinct ((_ extract 1 1) (bvsub C2 C3)) (_ bv0 1)) true) (_ bv1 11) (_ bv0 11)))))
 (let ((?x4150 (ite (and (distinct ((_ extract 5 5) (bvsub C2 C3)) (_ bv0 1)) true) (_ bv5 11) (ite (and (distinct ((_ extract 4 4) (bvsub C2 C3)) (_ bv0 1)) true) (_ bv4 11) (_ bv3 11)))))
 (let ((?x8001 (ite (and (distinct ((_ extract 8 8) (bvsub C2 C3)) (_ bv0 1)) true) (_ bv8 11) (ite (and (distinct ((_ extract 7 7) (bvsub C2 C3)) (_ bv0 1)) true) (_ bv7 11) (_ bv6 11)))))
 (let ((?x7612 (ite (and (distinct ((_ extract 10 9) (bvsub C2 C3)) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) (bvsub C2 C3)) (_ bv0 1)) true) (_ bv10 11) (_ bv9 11)) ?x8001)))
 (let ((?x6551 (ite (and (distinct ((_ extract 10 6) (bvsub C2 C3)) (_ bv0 5)) true) ?x7612 (ite (and (distinct ((_ extract 5 3) (bvsub C2 C3)) (_ bv0 3)) true) ?x4150 ?x2906))))
 (let ((?x4691 (ite (and (distinct ((_ extract 2 2) C) (_ bv0 1)) true) (_ bv2 11) (ite (and (distinct ((_ extract 1 1) C) (_ bv0 1)) true) (_ bv1 11) (_ bv0 11)))))
 (let ((?x7336 (ite (and (distinct ((_ extract 4 3) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 4 4) C) (_ bv0 1)) true) (_ bv4 11) (_ bv3 11)) ?x4691)))
 (let ((?x6871 (ite (and (distinct ((_ extract 7 7) C) (_ bv0 1)) true) (_ bv7 11) (ite (and (distinct ((_ extract 6 6) C) (_ bv0 1)) true) (_ bv6 11) (_ bv5 11)))))
 (let ((?x4462 (ite (and (distinct ((_ extract 9 8) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 9 9) C) (_ bv0 1)) true) (_ bv9 11) (_ bv8 11)) ?x6871)))
 (let ((?x3631 (bvsub (ite (and (distinct ((_ extract 9 5) C) (_ bv0 5)) true) ?x4462 ?x7336) ?x6551)))
 (let ((?x6762 (ite (bvsgt (_ bv0 11) ?x3631) (_ bv0 11) ?x3631)))
 (let ((?x5012 (bvsub ?x6551 (ite (and (distinct ((_ extract 9 5) C) (_ bv0 5)) true) ?x4462 ?x7336))))
 (let ((?x5689 (ite (bvsgt (_ bv0 11) ?x5012) (_ bv0 11) ?x5012)))
 (let ((?x4168 (ite (and (distinct ((_ extract 2 2) C) (_ bv0 1)) true) (_ bv2 32) (ite (and (distinct ((_ extract 1 1) C) (_ bv0 1)) true) (_ bv1 32) (_ bv0 32)))))
 (let ((?x7082 (ite (and (distinct ((_ extract 4 3) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 4 4) C) (_ bv0 1)) true) (_ bv4 32) (_ bv3 32)) ?x4168)))
 (let ((?x5672 (ite (and (distinct ((_ extract 7 7) C) (_ bv0 1)) true) (_ bv7 32) (ite (and (distinct ((_ extract 6 6) C) (_ bv0 1)) true) (_ bv6 32) (_ bv5 32)))))
 (let ((?x4273 (ite (and (distinct ((_ extract 9 8) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 9 9) C) (_ bv0 1)) true) (_ bv9 32) (_ bv8 32)) ?x5672)))
 (let (($x6188 (and (and (distinct (bvsub C2 C3) (_ bv0 11)) true) (= (bvand (bvsub C2 C3) (bvsub (bvsub C2 C3) (_ bv1 11))) (_ bv0 11)))))
 (and (and (and (distinct C (_ bv0 10)) true) (= (bvand C (bvsub C (_ bv1 10))) (_ bv0 10))) $x6188 (bvslt (ite (and (distinct ((_ extract 9 5) C) (_ bv0 5)) true) ?x4273 ?x7082) (_ bv11 32)) (not (and (bvult ?x5689 (_ bv11 11)) (bvult ?x6762 (_ bv11 11))))))))))))))))))))))))
(check-sat)
