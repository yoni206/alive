(set-info :status unknown)
(declare-fun %Y () (_ BitVec 11))
(declare-fun C2 () (_ BitVec 11))
(declare-fun C1 () (_ BitVec 3))
(declare-fun %X () (_ BitVec 3))
(assert
 (let ((?x1826 (ite (and (distinct ((_ extract 2 2) C2) (_ bv0 1)) true) (_ bv2 3) (ite (and (distinct ((_ extract 1 1) C2) (_ bv0 1)) true) (_ bv1 3) (_ bv0 3)))))
 (let ((?x2417 (ite (and (distinct ((_ extract 5 5) C2) (_ bv0 1)) true) (_ bv5 3) (ite (and (distinct ((_ extract 4 4) C2) (_ bv0 1)) true) (_ bv4 3) (_ bv3 3)))))
 (let ((?x3475 (ite (and (distinct ((_ extract 8 8) C2) (_ bv0 1)) true) (_ bv0 3) (ite (and (distinct ((_ extract 7 7) C2) (_ bv0 1)) true) (_ bv7 3) (_ bv6 3)))))
 (let ((?x1350 (ite (and (distinct ((_ extract 10 9) C2) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) C2) (_ bv0 1)) true) (_ bv2 3) (_ bv1 3)) ?x3475)))
 (let ((?x2756 (ite (and (distinct ((_ extract 10 6) C2) (_ bv0 5)) true) ?x1350 (ite (and (distinct ((_ extract 5 3) C2) (_ bv0 3)) true) ?x2417 ?x1826))))
 (let ((?x3245 (ite (and (distinct ((_ extract 2 2) C1) (_ bv0 1)) true) (_ bv2 3) (ite (and (distinct ((_ extract 1 1) C1) (_ bv0 1)) true) (_ bv1 3) (_ bv0 3)))))
 (let ((?x5934 (bvsub ?x3245 ?x2756)))
 (let ((?x4583 (bvand %X C1)))
 (let ((?x5531 (bvor %Y C2)))
 (let (($x6612 (and (distinct (ite (= (ite (and (distinct ?x4583 (_ bv0 3)) true) (_ bv1 1) (_ bv0 1)) (_ bv1 1)) %Y ?x5531) (bvor (bvxor ((_ zero_extend 8) (bvlshr ?x4583 ?x5934)) C2) %Y)) true)))
 (let ((?x4838 (ite (and (distinct ((_ extract 2 2) C1) (_ bv0 1)) true) (_ bv2 32) (ite (and (distinct ((_ extract 1 1) C1) (_ bv0 1)) true) (_ bv1 32) (_ bv0 32)))))
 (let ((?x1204 (ite (and (distinct ((_ extract 2 2) C2) (_ bv0 1)) true) (_ bv2 32) (ite (and (distinct ((_ extract 1 1) C2) (_ bv0 1)) true) (_ bv1 32) (_ bv0 32)))))
 (let ((?x4518 (ite (and (distinct ((_ extract 5 5) C2) (_ bv0 1)) true) (_ bv5 32) (ite (and (distinct ((_ extract 4 4) C2) (_ bv0 1)) true) (_ bv4 32) (_ bv3 32)))))
 (let ((?x2475 (ite (and (distinct ((_ extract 8 8) C2) (_ bv0 1)) true) (_ bv8 32) (ite (and (distinct ((_ extract 7 7) C2) (_ bv0 1)) true) (_ bv7 32) (_ bv6 32)))))
 (let ((?x4933 (ite (and (distinct ((_ extract 10 9) C2) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) C2) (_ bv0 1)) true) (_ bv10 32) (_ bv9 32)) ?x2475)))
 (let ((?x4634 (ite (and (distinct ((_ extract 10 6) C2) (_ bv0 5)) true) ?x4933 (ite (and (distinct ((_ extract 5 3) C2) (_ bv0 3)) true) ?x4518 ?x1204))))
 (and (and (and (distinct C1 (_ bv0 3)) true) (= (bvand C1 (bvsub C1 (_ bv1 3))) (_ bv0 3))) (and (and (distinct C2 (_ bv0 11)) true) (= (bvand C2 (bvsub C2 (_ bv1 11))) (_ bv0 11))) (bvslt ?x4634 ?x4838) $x6612))))))))))))))))))
(check-sat)
