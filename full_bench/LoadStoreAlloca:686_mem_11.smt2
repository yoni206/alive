(set-info :status unknown)
(declare-fun mem0 () (_ BitVec 8))
(declare-fun %p2 () (_ BitVec 64))
(declare-fun idx () (_ BitVec 64))
(declare-fun %p1 () (_ BitVec 64))
(declare-fun |ana_equivalentAddressValues(%p1, %p2)| () (_ BitVec 1))
(assert
 (let (($x16460 (or true true)))
 (let (($x18224 (and (distinct %p2 (_ bv0 64)) true)))
 (let (($x16437 (and (distinct %p1 (_ bv0 64)) true)))
 (let ((?x10401 (ite (and $x16437 $x16460 $x16437 $x16460 $x16437 $x16460 $x18224 $x16460 (= idx %p2)) (concat ((_ extract 7 7) mem0) ((_ extract 6 0) (concat mem0 ((_ extract 6 0) mem0)))) mem0)))
 (let (($x13853 (and $x16437 $x16460 $x16437 $x16460 $x16437 $x16460 $x18224 $x16460 (= idx (bvadd (bvadd %p2 (_ bv1 64)) (_ bv0 64))))))
 (let ((?x7718 (ite $x13853 ((_ extract 14 7) (concat mem0 ((_ extract 6 0) mem0))) ?x10401)))
 (let (($x12655 (= |ana_equivalentAddressValues(%p1, %p2)| (_ bv1 1))))
 (and (=> $x12655 (= %p1 %p2)) $x12655 (and (distinct ?x7718 mem0) true))))))))))
(check-sat)
