(set-info :status unknown)
(declare-fun C3 () (_ BitVec 11))
(declare-fun C2 () (_ BitVec 11))
(declare-fun C () (_ BitVec 42))
(declare-fun %Op () (_ BitVec 42))
(assert
 (let ((?x6104 (ite (and (distinct ((_ extract 2 2) (bvsub C2 C3)) (_ bv0 1)) true) (_ bv2 11) (ite (and (distinct ((_ extract 1 1) (bvsub C2 C3)) (_ bv0 1)) true) (_ bv1 11) (_ bv0 11)))))
 (let ((?x7547 (ite (and (distinct ((_ extract 5 5) (bvsub C2 C3)) (_ bv0 1)) true) (_ bv5 11) (ite (and (distinct ((_ extract 4 4) (bvsub C2 C3)) (_ bv0 1)) true) (_ bv4 11) (_ bv3 11)))))
 (let ((?x4705 (ite (and (distinct ((_ extract 8 8) (bvsub C2 C3)) (_ bv0 1)) true) (_ bv8 11) (ite (and (distinct ((_ extract 7 7) (bvsub C2 C3)) (_ bv0 1)) true) (_ bv7 11) (_ bv6 11)))))
 (let ((?x4634 (ite (and (distinct ((_ extract 10 9) (bvsub C2 C3)) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) (bvsub C2 C3)) (_ bv0 1)) true) (_ bv10 11) (_ bv9 11)) ?x4705)))
 (let ((?x7549 (ite (and (distinct ((_ extract 10 6) (bvsub C2 C3)) (_ bv0 5)) true) ?x4634 (ite (and (distinct ((_ extract 5 3) (bvsub C2 C3)) (_ bv0 3)) true) ?x7547 ?x6104))))
 (let ((?x5682 (ite (and (distinct ((_ extract 2 2) C) (_ bv0 1)) true) (_ bv2 11) (ite (and (distinct ((_ extract 1 1) C) (_ bv0 1)) true) (_ bv1 11) (_ bv0 11)))))
 (let ((?x7108 (ite (and (distinct ((_ extract 5 5) C) (_ bv0 1)) true) (_ bv5 11) (ite (and (distinct ((_ extract 4 4) C) (_ bv0 1)) true) (_ bv4 11) (_ bv3 11)))))
 (let ((?x6821 (ite (and (distinct ((_ extract 8 8) C) (_ bv0 1)) true) (_ bv8 11) (ite (and (distinct ((_ extract 7 7) C) (_ bv0 1)) true) (_ bv7 11) (_ bv6 11)))))
 (let ((?x5837 (ite (and (distinct ((_ extract 10 9) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) C) (_ bv0 1)) true) (_ bv10 11) (_ bv9 11)) ?x6821)))
 (let ((?x1996 (ite (and (distinct ((_ extract 10 6) C) (_ bv0 5)) true) ?x5837 (ite (and (distinct ((_ extract 5 3) C) (_ bv0 3)) true) ?x7108 ?x5682))))
 (let ((?x6834 (ite (and (distinct ((_ extract 13 13) C) (_ bv0 1)) true) (_ bv13 11) (ite (and (distinct ((_ extract 12 12) C) (_ bv0 1)) true) (_ bv12 11) (_ bv11 11)))))
 (let ((?x6792 (ite (and (distinct ((_ extract 15 14) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 15 15) C) (_ bv0 1)) true) (_ bv15 11) (_ bv14 11)) ?x6834)))
 (let ((?x4759 (ite (and (distinct ((_ extract 18 18) C) (_ bv0 1)) true) (_ bv18 11) (ite (and (distinct ((_ extract 17 17) C) (_ bv0 1)) true) (_ bv17 11) (_ bv16 11)))))
 (let ((?x4674 (ite (and (distinct ((_ extract 20 19) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 20 20) C) (_ bv0 1)) true) (_ bv20 11) (_ bv19 11)) ?x4759)))
 (let ((?x2704 (ite (and (distinct ((_ extract 20 11) C) (_ bv0 10)) true) (ite (and (distinct ((_ extract 20 16) C) (_ bv0 5)) true) ?x4674 ?x6792) ?x1996)))
 (let ((?x4406 (ite (and (distinct ((_ extract 23 23) C) (_ bv0 1)) true) (_ bv23 11) (ite (and (distinct ((_ extract 22 22) C) (_ bv0 1)) true) (_ bv22 11) (_ bv21 11)))))
 (let ((?x5037 (ite (and (distinct ((_ extract 26 26) C) (_ bv0 1)) true) (_ bv26 11) (ite (and (distinct ((_ extract 25 25) C) (_ bv0 1)) true) (_ bv25 11) (_ bv24 11)))))
 (let ((?x2399 (ite (and (distinct ((_ extract 29 29) C) (_ bv0 1)) true) (_ bv29 11) (ite (and (distinct ((_ extract 28 28) C) (_ bv0 1)) true) (_ bv28 11) (_ bv27 11)))))
 (let ((?x2380 (ite (and (distinct ((_ extract 31 30) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 31 31) C) (_ bv0 1)) true) (_ bv31 11) (_ bv30 11)) ?x2399)))
 (let ((?x6385 (ite (and (distinct ((_ extract 31 27) C) (_ bv0 5)) true) ?x2380 (ite (and (distinct ((_ extract 26 24) C) (_ bv0 3)) true) ?x5037 ?x4406))))
 (let ((?x2209 (ite (and (distinct ((_ extract 34 34) C) (_ bv0 1)) true) (_ bv34 11) (ite (and (distinct ((_ extract 33 33) C) (_ bv0 1)) true) (_ bv33 11) (_ bv32 11)))))
 (let ((?x1952 (ite (and (distinct ((_ extract 36 35) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 36 36) C) (_ bv0 1)) true) (_ bv36 11) (_ bv35 11)) ?x2209)))
 (let ((?x1146 (ite (and (distinct ((_ extract 39 39) C) (_ bv0 1)) true) (_ bv39 11) (ite (and (distinct ((_ extract 38 38) C) (_ bv0 1)) true) (_ bv38 11) (_ bv37 11)))))
 (let ((?x2337 (ite (and (distinct ((_ extract 41 40) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 41 41) C) (_ bv0 1)) true) (_ bv41 11) (_ bv40 11)) ?x1146)))
 (let ((?x7057 (ite (and (distinct ((_ extract 41 32) C) (_ bv0 10)) true) (ite (and (distinct ((_ extract 41 37) C) (_ bv0 5)) true) ?x2337 ?x1952) ?x6385)))
 (let ((?x7529 (bvsub (ite (and (distinct ((_ extract 41 21) C) (_ bv0 21)) true) ?x7057 ?x2704) ?x7549)))
 (let ((?x5913 (ite (bvsgt (_ bv0 11) ?x7529) (_ bv0 11) ?x7529)))
 (let ((?x4025 (bvsub ?x7549 (ite (and (distinct ((_ extract 41 21) C) (_ bv0 21)) true) ?x7057 ?x2704))))
 (let ((?x2443 (ite (bvsgt (_ bv0 11) ?x4025) (_ bv0 11) ?x4025)))
 (let ((?x4365 (ite (= (ite (and (distinct (bvand %Op C) (_ bv0 42)) true) (_ bv1 1) (_ bv0 1)) (_ bv1 1)) C2 C3)))
 (let (($x8295 (and (distinct ?x4365 (bvadd (bvlshr (bvshl ((_ extract 10 0) (bvand %Op C)) ?x2443) ?x5913) C3)) true)))
 (let ((?x7758 (ite (and (distinct ((_ extract 2 2) C) (_ bv0 1)) true) (_ bv2 32) (ite (and (distinct ((_ extract 1 1) C) (_ bv0 1)) true) (_ bv1 32) (_ bv0 32)))))
 (let ((?x6895 (ite (and (distinct ((_ extract 5 5) C) (_ bv0 1)) true) (_ bv5 32) (ite (and (distinct ((_ extract 4 4) C) (_ bv0 1)) true) (_ bv4 32) (_ bv3 32)))))
 (let ((?x6387 (ite (and (distinct ((_ extract 8 8) C) (_ bv0 1)) true) (_ bv8 32) (ite (and (distinct ((_ extract 7 7) C) (_ bv0 1)) true) (_ bv7 32) (_ bv6 32)))))
 (let ((?x6319 (ite (and (distinct ((_ extract 10 9) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) C) (_ bv0 1)) true) (_ bv10 32) (_ bv9 32)) ?x6387)))
 (let ((?x7908 (ite (and (distinct ((_ extract 10 6) C) (_ bv0 5)) true) ?x6319 (ite (and (distinct ((_ extract 5 3) C) (_ bv0 3)) true) ?x6895 ?x7758))))
 (let ((?x4547 (ite (and (distinct ((_ extract 13 13) C) (_ bv0 1)) true) (_ bv13 32) (ite (and (distinct ((_ extract 12 12) C) (_ bv0 1)) true) (_ bv12 32) (_ bv11 32)))))
 (let ((?x4471 (ite (and (distinct ((_ extract 15 14) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 15 15) C) (_ bv0 1)) true) (_ bv15 32) (_ bv14 32)) ?x4547)))
 (let ((?x4317 (ite (and (distinct ((_ extract 18 18) C) (_ bv0 1)) true) (_ bv18 32) (ite (and (distinct ((_ extract 17 17) C) (_ bv0 1)) true) (_ bv17 32) (_ bv16 32)))))
 (let ((?x3986 (ite (and (distinct ((_ extract 20 19) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 20 20) C) (_ bv0 1)) true) (_ bv20 32) (_ bv19 32)) ?x4317)))
 (let ((?x7886 (ite (and (distinct ((_ extract 20 11) C) (_ bv0 10)) true) (ite (and (distinct ((_ extract 20 16) C) (_ bv0 5)) true) ?x3986 ?x4471) ?x7908)))
 (let ((?x2857 (ite (and (distinct ((_ extract 23 23) C) (_ bv0 1)) true) (_ bv23 32) (ite (and (distinct ((_ extract 22 22) C) (_ bv0 1)) true) (_ bv22 32) (_ bv21 32)))))
 (let ((?x1506 (ite (and (distinct ((_ extract 26 26) C) (_ bv0 1)) true) (_ bv26 32) (ite (and (distinct ((_ extract 25 25) C) (_ bv0 1)) true) (_ bv25 32) (_ bv24 32)))))
 (let ((?x7851 (ite (and (distinct ((_ extract 29 29) C) (_ bv0 1)) true) (_ bv29 32) (ite (and (distinct ((_ extract 28 28) C) (_ bv0 1)) true) (_ bv28 32) (_ bv27 32)))))
 (let ((?x1305 (ite (and (distinct ((_ extract 31 30) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 31 31) C) (_ bv0 1)) true) (_ bv31 32) (_ bv30 32)) ?x7851)))
 (let ((?x2664 (ite (and (distinct ((_ extract 31 27) C) (_ bv0 5)) true) ?x1305 (ite (and (distinct ((_ extract 26 24) C) (_ bv0 3)) true) ?x1506 ?x2857))))
 (let ((?x6261 (ite (and (distinct ((_ extract 34 34) C) (_ bv0 1)) true) (_ bv34 32) (ite (and (distinct ((_ extract 33 33) C) (_ bv0 1)) true) (_ bv33 32) (_ bv32 32)))))
 (let ((?x3716 (ite (and (distinct ((_ extract 36 35) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 36 36) C) (_ bv0 1)) true) (_ bv36 32) (_ bv35 32)) ?x6261)))
 (let ((?x3428 (ite (and (distinct ((_ extract 39 39) C) (_ bv0 1)) true) (_ bv39 32) (ite (and (distinct ((_ extract 38 38) C) (_ bv0 1)) true) (_ bv38 32) (_ bv37 32)))))
 (let ((?x6492 (ite (and (distinct ((_ extract 41 40) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 41 41) C) (_ bv0 1)) true) (_ bv41 32) (_ bv40 32)) ?x3428)))
 (let ((?x3506 (ite (and (distinct ((_ extract 41 32) C) (_ bv0 10)) true) (ite (and (distinct ((_ extract 41 37) C) (_ bv0 5)) true) ?x6492 ?x3716) ?x2664)))
 (let (($x1177 (and (and (distinct (bvsub C2 C3) (_ bv0 11)) true) (= (bvand (bvsub C2 C3) (bvsub (bvsub C2 C3) (_ bv1 11))) (_ bv0 11)))))
 (and (and (and (distinct C (_ bv0 42)) true) (= (bvand C (bvsub C (_ bv1 42))) (_ bv0 42))) $x1177 (bvslt (ite (and (distinct ((_ extract 41 21) C) (_ bv0 21)) true) ?x3506 ?x7886) (_ bv11 32)) $x8295))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
