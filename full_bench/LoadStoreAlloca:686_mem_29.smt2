(set-info :status unknown)
(declare-fun mem0 () (_ BitVec 8))
(declare-fun %p2 () (_ BitVec 64))
(declare-fun idx () (_ BitVec 64))
(declare-fun %p1 () (_ BitVec 64))
(declare-fun |ana_equivalentAddressValues(%p1, %p2)| () (_ BitVec 1))
(assert
 (let ((?x12921 (concat (concat (concat (concat mem0 mem0) mem0) mem0) ((_ extract 0 0) mem0))))
 (let (($x13808 (or true true)))
 (let (($x18818 (and (distinct %p2 (_ bv0 64)) true)))
 (let (($x13413 (and (distinct %p1 (_ bv0 64)) true)))
 (let ((?x9886 (ite (and $x13413 $x13808 $x13413 $x13808 $x13413 $x13808 $x18818 $x13808 (= idx %p2)) (concat ((_ extract 7 1) mem0) ((_ extract 0 0) ?x12921)) mem0)))
 (let (($x20180 (and $x13413 $x13808 $x13413 $x13808 $x13413 $x13808 $x18818 $x13808 (= idx (bvadd (bvadd %p2 (_ bv1 64)) (_ bv0 64))))))
 (let (($x7072 (and $x13413 $x13808 $x13413 $x13808 $x13413 $x13808 $x18818 $x13808 (= idx (bvadd (bvadd %p2 (_ bv1 64)) (_ bv1 64))))))
 (let (($x19564 (and $x13413 $x13808 $x13413 $x13808 $x13413 $x13808 $x18818 $x13808 (= idx (bvadd (bvadd %p2 (_ bv1 64)) (_ bv2 64))))))
 (let ((?x18865 (ite $x19564 ((_ extract 24 17) ?x12921) (ite $x7072 ((_ extract 16 9) ?x12921) (ite $x20180 ((_ extract 8 1) ?x12921) ?x9886)))))
 (let (($x8975 (and $x13413 $x13808 $x13413 $x13808 $x13413 $x13808 $x18818 $x13808 (= idx (bvadd (bvadd %p2 (_ bv1 64)) (_ bv3 64))))))
 (let ((?x7840 (ite $x8975 ((_ extract 32 25) ?x12921) ?x18865)))
 (let (($x1088 (= |ana_equivalentAddressValues(%p1, %p2)| (_ bv1 1))))
 (and (=> $x1088 (= %p1 %p2)) $x1088 (and (distinct ?x7840 mem0) true)))))))))))))))
(check-sat)
