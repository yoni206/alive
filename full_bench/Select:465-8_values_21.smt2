(set-info :status unknown)
(declare-fun %Y () (_ BitVec 11))
(declare-fun C2 () (_ BitVec 11))
(declare-fun C1 () (_ BitVec 23))
(declare-fun %X () (_ BitVec 23))
(assert
 (let ((?x13413 (ite (and (distinct ((_ extract 2 2) C2) (_ bv0 1)) true) (_ bv2 23) (ite (and (distinct ((_ extract 1 1) C2) (_ bv0 1)) true) (_ bv1 23) (_ bv0 23)))))
 (let ((?x1576 (ite (and (distinct ((_ extract 5 5) C2) (_ bv0 1)) true) (_ bv5 23) (ite (and (distinct ((_ extract 4 4) C2) (_ bv0 1)) true) (_ bv4 23) (_ bv3 23)))))
 (let ((?x12829 (ite (and (distinct ((_ extract 8 8) C2) (_ bv0 1)) true) (_ bv8 23) (ite (and (distinct ((_ extract 7 7) C2) (_ bv0 1)) true) (_ bv7 23) (_ bv6 23)))))
 (let ((?x4920 (ite (and (distinct ((_ extract 10 9) C2) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) C2) (_ bv0 1)) true) (_ bv10 23) (_ bv9 23)) ?x12829)))
 (let ((?x13065 (ite (and (distinct ((_ extract 10 6) C2) (_ bv0 5)) true) ?x4920 (ite (and (distinct ((_ extract 5 3) C2) (_ bv0 3)) true) ?x1576 ?x13413))))
 (let ((?x14159 (ite (and (distinct ((_ extract 2 2) C1) (_ bv0 1)) true) (_ bv2 23) (ite (and (distinct ((_ extract 1 1) C1) (_ bv0 1)) true) (_ bv1 23) (_ bv0 23)))))
 (let ((?x5841 (ite (and (distinct ((_ extract 5 5) C1) (_ bv0 1)) true) (_ bv5 23) (ite (and (distinct ((_ extract 4 4) C1) (_ bv0 1)) true) (_ bv4 23) (_ bv3 23)))))
 (let ((?x12399 (ite (and (distinct ((_ extract 8 8) C1) (_ bv0 1)) true) (_ bv8 23) (ite (and (distinct ((_ extract 7 7) C1) (_ bv0 1)) true) (_ bv7 23) (_ bv6 23)))))
 (let ((?x4539 (ite (and (distinct ((_ extract 11 11) C1) (_ bv0 1)) true) (_ bv11 23) (ite (and (distinct ((_ extract 10 10) C1) (_ bv0 1)) true) (_ bv10 23) (_ bv9 23)))))
 (let ((?x4365 (ite (and (distinct ((_ extract 11 6) C1) (_ bv0 6)) true) (ite (and (distinct ((_ extract 11 9) C1) (_ bv0 3)) true) ?x4539 ?x12399) (ite (and (distinct ((_ extract 5 3) C1) (_ bv0 3)) true) ?x5841 ?x14159))))
 (let ((?x12877 (ite (and (distinct ((_ extract 14 14) C1) (_ bv0 1)) true) (_ bv14 23) (ite (and (distinct ((_ extract 13 13) C1) (_ bv0 1)) true) (_ bv13 23) (_ bv12 23)))))
 (let ((?x14680 (ite (and (distinct ((_ extract 17 17) C1) (_ bv0 1)) true) (_ bv17 23) (ite (and (distinct ((_ extract 16 16) C1) (_ bv0 1)) true) (_ bv16 23) (_ bv15 23)))))
 (let ((?x23273 (ite (and (distinct ((_ extract 20 20) C1) (_ bv0 1)) true) (_ bv20 23) (ite (and (distinct ((_ extract 19 19) C1) (_ bv0 1)) true) (_ bv19 23) (_ bv18 23)))))
 (let ((?x16671 (ite (and (distinct ((_ extract 22 21) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 22 22) C1) (_ bv0 1)) true) (_ bv22 23) (_ bv21 23)) ?x23273)))
 (let ((?x9461 (ite (and (distinct ((_ extract 22 18) C1) (_ bv0 5)) true) ?x16671 (ite (and (distinct ((_ extract 17 15) C1) (_ bv0 3)) true) ?x14680 ?x12877))))
 (let ((?x10907 (bvsub (ite (and (distinct ((_ extract 22 12) C1) (_ bv0 11)) true) ?x9461 ?x4365) ?x13065)))
 (let ((?x15196 (bvand %X C1)))
 (let ((?x6890 (bvor %Y C2)))
 (let (($x2840 (and (distinct (ite (= (ite (and (distinct ?x15196 (_ bv0 23)) true) (_ bv1 1) (_ bv0 1)) (_ bv1 1)) ?x6890 %Y) (bvor ((_ extract 10 0) (bvlshr ?x15196 ?x10907)) %Y)) true)))
 (let ((?x9447 (ite (and (distinct ((_ extract 2 2) C1) (_ bv0 1)) true) (_ bv2 32) (ite (and (distinct ((_ extract 1 1) C1) (_ bv0 1)) true) (_ bv1 32) (_ bv0 32)))))
 (let ((?x2051 (ite (and (distinct ((_ extract 5 5) C1) (_ bv0 1)) true) (_ bv5 32) (ite (and (distinct ((_ extract 4 4) C1) (_ bv0 1)) true) (_ bv4 32) (_ bv3 32)))))
 (let ((?x7566 (ite (and (distinct ((_ extract 8 8) C1) (_ bv0 1)) true) (_ bv8 32) (ite (and (distinct ((_ extract 7 7) C1) (_ bv0 1)) true) (_ bv7 32) (_ bv6 32)))))
 (let ((?x9003 (ite (and (distinct ((_ extract 11 11) C1) (_ bv0 1)) true) (_ bv11 32) (ite (and (distinct ((_ extract 10 10) C1) (_ bv0 1)) true) (_ bv10 32) (_ bv9 32)))))
 (let ((?x9097 (ite (and (distinct ((_ extract 11 6) C1) (_ bv0 6)) true) (ite (and (distinct ((_ extract 11 9) C1) (_ bv0 3)) true) ?x9003 ?x7566) (ite (and (distinct ((_ extract 5 3) C1) (_ bv0 3)) true) ?x2051 ?x9447))))
 (let ((?x4790 (ite (and (distinct ((_ extract 14 14) C1) (_ bv0 1)) true) (_ bv14 32) (ite (and (distinct ((_ extract 13 13) C1) (_ bv0 1)) true) (_ bv13 32) (_ bv12 32)))))
 (let ((?x2041 (ite (and (distinct ((_ extract 17 17) C1) (_ bv0 1)) true) (_ bv17 32) (ite (and (distinct ((_ extract 16 16) C1) (_ bv0 1)) true) (_ bv16 32) (_ bv15 32)))))
 (let ((?x1146 (ite (and (distinct ((_ extract 20 20) C1) (_ bv0 1)) true) (_ bv20 32) (ite (and (distinct ((_ extract 19 19) C1) (_ bv0 1)) true) (_ bv19 32) (_ bv18 32)))))
 (let ((?x5704 (ite (and (distinct ((_ extract 22 21) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 22 22) C1) (_ bv0 1)) true) (_ bv22 32) (_ bv21 32)) ?x1146)))
 (let ((?x6747 (ite (and (distinct ((_ extract 22 18) C1) (_ bv0 5)) true) ?x5704 (ite (and (distinct ((_ extract 17 15) C1) (_ bv0 3)) true) ?x2041 ?x4790))))
 (let ((?x9360 (ite (and (distinct ((_ extract 2 2) C2) (_ bv0 1)) true) (_ bv2 32) (ite (and (distinct ((_ extract 1 1) C2) (_ bv0 1)) true) (_ bv1 32) (_ bv0 32)))))
 (let ((?x15147 (ite (and (distinct ((_ extract 5 5) C2) (_ bv0 1)) true) (_ bv5 32) (ite (and (distinct ((_ extract 4 4) C2) (_ bv0 1)) true) (_ bv4 32) (_ bv3 32)))))
 (let ((?x20185 (ite (and (distinct ((_ extract 8 8) C2) (_ bv0 1)) true) (_ bv8 32) (ite (and (distinct ((_ extract 7 7) C2) (_ bv0 1)) true) (_ bv7 32) (_ bv6 32)))))
 (let ((?x17512 (ite (and (distinct ((_ extract 10 9) C2) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) C2) (_ bv0 1)) true) (_ bv10 32) (_ bv9 32)) ?x20185)))
 (let ((?x23939 (ite (and (distinct ((_ extract 10 6) C2) (_ bv0 5)) true) ?x17512 (ite (and (distinct ((_ extract 5 3) C2) (_ bv0 3)) true) ?x15147 ?x9360))))
 (and (and (and (distinct C1 (_ bv0 23)) true) (= (bvand C1 (bvsub C1 (_ bv1 23))) (_ bv0 23))) (and (and (distinct C2 (_ bv0 11)) true) (= (bvand C2 (bvsub C2 (_ bv1 11))) (_ bv0 11))) (bvslt ?x23939 (ite (and (distinct ((_ extract 22 12) C1) (_ bv0 11)) true) ?x6747 ?x9097)) $x2840))))))))))))))))))))))))))))))))))))
(check-sat)
