(set-info :status unknown)
(declare-fun %Y () (_ BitVec 11))
(declare-fun C2 () (_ BitVec 11))
(declare-fun C1 () (_ BitVec 22))
(declare-fun %X () (_ BitVec 22))
(assert
 (let ((?x2812 (ite (and (distinct ((_ extract 2 2) C2) (_ bv0 1)) true) (_ bv2 22) (ite (and (distinct ((_ extract 1 1) C2) (_ bv0 1)) true) (_ bv1 22) (_ bv0 22)))))
 (let ((?x5623 (ite (and (distinct ((_ extract 5 5) C2) (_ bv0 1)) true) (_ bv5 22) (ite (and (distinct ((_ extract 4 4) C2) (_ bv0 1)) true) (_ bv4 22) (_ bv3 22)))))
 (let ((?x6456 (ite (and (distinct ((_ extract 8 8) C2) (_ bv0 1)) true) (_ bv8 22) (ite (and (distinct ((_ extract 7 7) C2) (_ bv0 1)) true) (_ bv7 22) (_ bv6 22)))))
 (let ((?x2307 (ite (and (distinct ((_ extract 10 9) C2) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) C2) (_ bv0 1)) true) (_ bv10 22) (_ bv9 22)) ?x6456)))
 (let ((?x3664 (ite (and (distinct ((_ extract 10 6) C2) (_ bv0 5)) true) ?x2307 (ite (and (distinct ((_ extract 5 3) C2) (_ bv0 3)) true) ?x5623 ?x2812))))
 (let ((?x1829 (ite (and (distinct ((_ extract 2 2) C1) (_ bv0 1)) true) (_ bv2 22) (ite (and (distinct ((_ extract 1 1) C1) (_ bv0 1)) true) (_ bv1 22) (_ bv0 22)))))
 (let ((?x4618 (ite (and (distinct ((_ extract 5 5) C1) (_ bv0 1)) true) (_ bv5 22) (ite (and (distinct ((_ extract 4 4) C1) (_ bv0 1)) true) (_ bv4 22) (_ bv3 22)))))
 (let ((?x6414 (ite (and (distinct ((_ extract 8 8) C1) (_ bv0 1)) true) (_ bv8 22) (ite (and (distinct ((_ extract 7 7) C1) (_ bv0 1)) true) (_ bv7 22) (_ bv6 22)))))
 (let ((?x4276 (ite (and (distinct ((_ extract 10 9) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) C1) (_ bv0 1)) true) (_ bv10 22) (_ bv9 22)) ?x6414)))
 (let ((?x5355 (ite (and (distinct ((_ extract 10 6) C1) (_ bv0 5)) true) ?x4276 (ite (and (distinct ((_ extract 5 3) C1) (_ bv0 3)) true) ?x4618 ?x1829))))
 (let ((?x6385 (ite (and (distinct ((_ extract 13 13) C1) (_ bv0 1)) true) (_ bv13 22) (ite (and (distinct ((_ extract 12 12) C1) (_ bv0 1)) true) (_ bv12 22) (_ bv11 22)))))
 (let ((?x4217 (ite (and (distinct ((_ extract 16 16) C1) (_ bv0 1)) true) (_ bv16 22) (ite (and (distinct ((_ extract 15 15) C1) (_ bv0 1)) true) (_ bv15 22) (_ bv14 22)))))
 (let ((?x1988 (ite (and (distinct ((_ extract 19 19) C1) (_ bv0 1)) true) (_ bv19 22) (ite (and (distinct ((_ extract 18 18) C1) (_ bv0 1)) true) (_ bv18 22) (_ bv17 22)))))
 (let ((?x2902 (ite (and (distinct ((_ extract 21 20) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 21 21) C1) (_ bv0 1)) true) (_ bv21 22) (_ bv20 22)) ?x1988)))
 (let ((?x6181 (ite (and (distinct ((_ extract 21 17) C1) (_ bv0 5)) true) ?x2902 (ite (and (distinct ((_ extract 16 14) C1) (_ bv0 3)) true) ?x4217 ?x6385))))
 (let ((?x5328 (bvsub (ite (and (distinct ((_ extract 21 11) C1) (_ bv0 11)) true) ?x6181 ?x5355) ?x3664)))
 (let ((?x3177 (bvand %X C1)))
 (let ((?x3967 (bvor %Y C2)))
 (let (($x4033 (and (distinct (ite (= (ite (and (distinct ?x3177 (_ bv0 22)) true) (_ bv1 1) (_ bv0 1)) (_ bv1 1)) ?x3967 %Y) (bvor ((_ extract 10 0) (bvlshr ?x3177 ?x5328)) %Y)) true)))
 (let ((?x3010 (ite (and (distinct ((_ extract 2 2) C1) (_ bv0 1)) true) (_ bv2 32) (ite (and (distinct ((_ extract 1 1) C1) (_ bv0 1)) true) (_ bv1 32) (_ bv0 32)))))
 (let ((?x3516 (ite (and (distinct ((_ extract 5 5) C1) (_ bv0 1)) true) (_ bv5 32) (ite (and (distinct ((_ extract 4 4) C1) (_ bv0 1)) true) (_ bv4 32) (_ bv3 32)))))
 (let ((?x2980 (ite (and (distinct ((_ extract 8 8) C1) (_ bv0 1)) true) (_ bv8 32) (ite (and (distinct ((_ extract 7 7) C1) (_ bv0 1)) true) (_ bv7 32) (_ bv6 32)))))
 (let ((?x2946 (ite (and (distinct ((_ extract 10 9) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) C1) (_ bv0 1)) true) (_ bv10 32) (_ bv9 32)) ?x2980)))
 (let ((?x4490 (ite (and (distinct ((_ extract 10 6) C1) (_ bv0 5)) true) ?x2946 (ite (and (distinct ((_ extract 5 3) C1) (_ bv0 3)) true) ?x3516 ?x3010))))
 (let ((?x1285 (ite (and (distinct ((_ extract 13 13) C1) (_ bv0 1)) true) (_ bv13 32) (ite (and (distinct ((_ extract 12 12) C1) (_ bv0 1)) true) (_ bv12 32) (_ bv11 32)))))
 (let ((?x3301 (ite (and (distinct ((_ extract 16 16) C1) (_ bv0 1)) true) (_ bv16 32) (ite (and (distinct ((_ extract 15 15) C1) (_ bv0 1)) true) (_ bv15 32) (_ bv14 32)))))
 (let ((?x4958 (ite (and (distinct ((_ extract 19 19) C1) (_ bv0 1)) true) (_ bv19 32) (ite (and (distinct ((_ extract 18 18) C1) (_ bv0 1)) true) (_ bv18 32) (_ bv17 32)))))
 (let ((?x1736 (ite (and (distinct ((_ extract 21 20) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 21 21) C1) (_ bv0 1)) true) (_ bv21 32) (_ bv20 32)) ?x4958)))
 (let ((?x2416 (ite (and (distinct ((_ extract 21 17) C1) (_ bv0 5)) true) ?x1736 (ite (and (distinct ((_ extract 16 14) C1) (_ bv0 3)) true) ?x3301 ?x1285))))
 (let ((?x5793 (ite (and (distinct ((_ extract 2 2) C2) (_ bv0 1)) true) (_ bv2 32) (ite (and (distinct ((_ extract 1 1) C2) (_ bv0 1)) true) (_ bv1 32) (_ bv0 32)))))
 (let ((?x1865 (ite (and (distinct ((_ extract 5 5) C2) (_ bv0 1)) true) (_ bv5 32) (ite (and (distinct ((_ extract 4 4) C2) (_ bv0 1)) true) (_ bv4 32) (_ bv3 32)))))
 (let ((?x2417 (ite (and (distinct ((_ extract 8 8) C2) (_ bv0 1)) true) (_ bv8 32) (ite (and (distinct ((_ extract 7 7) C2) (_ bv0 1)) true) (_ bv7 32) (_ bv6 32)))))
 (let ((?x4353 (ite (and (distinct ((_ extract 10 9) C2) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) C2) (_ bv0 1)) true) (_ bv10 32) (_ bv9 32)) ?x2417)))
 (let ((?x2165 (ite (and (distinct ((_ extract 10 6) C2) (_ bv0 5)) true) ?x4353 (ite (and (distinct ((_ extract 5 3) C2) (_ bv0 3)) true) ?x1865 ?x5793))))
 (and (and (and (distinct C1 (_ bv0 22)) true) (= (bvand C1 (bvsub C1 (_ bv1 22))) (_ bv0 22))) (and (and (distinct C2 (_ bv0 11)) true) (= (bvand C2 (bvsub C2 (_ bv1 11))) (_ bv0 11))) (bvslt ?x2165 (ite (and (distinct ((_ extract 21 11) C1) (_ bv0 11)) true) ?x2416 ?x4490)) $x4033))))))))))))))))))))))))))))))))))))
(check-sat)
