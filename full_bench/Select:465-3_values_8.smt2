(set-info :status unknown)
(declare-fun %Y () (_ BitVec 11))
(declare-fun C2 () (_ BitVec 11))
(declare-fun C1 () (_ BitVec 9))
(declare-fun %X () (_ BitVec 9))
(assert
 (let ((?x3948 (ite (and (distinct ((_ extract 2 2) C2) (_ bv0 1)) true) (_ bv2 9) (ite (and (distinct ((_ extract 1 1) C2) (_ bv0 1)) true) (_ bv1 9) (_ bv0 9)))))
 (let ((?x3422 (ite (and (distinct ((_ extract 5 5) C2) (_ bv0 1)) true) (_ bv5 9) (ite (and (distinct ((_ extract 4 4) C2) (_ bv0 1)) true) (_ bv4 9) (_ bv3 9)))))
 (let ((?x3833 (ite (and (distinct ((_ extract 8 8) C2) (_ bv0 1)) true) (_ bv8 9) (ite (and (distinct ((_ extract 7 7) C2) (_ bv0 1)) true) (_ bv7 9) (_ bv6 9)))))
 (let ((?x4384 (ite (and (distinct ((_ extract 10 9) C2) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) C2) (_ bv0 1)) true) (_ bv10 9) (_ bv9 9)) ?x3833)))
 (let ((?x1968 (ite (and (distinct ((_ extract 10 6) C2) (_ bv0 5)) true) ?x4384 (ite (and (distinct ((_ extract 5 3) C2) (_ bv0 3)) true) ?x3422 ?x3948))))
 (let ((?x1548 (ite (and (distinct ((_ extract 2 2) C1) (_ bv0 1)) true) (_ bv2 9) (ite (and (distinct ((_ extract 1 1) C1) (_ bv0 1)) true) (_ bv1 9) (_ bv0 9)))))
 (let ((?x1451 (ite (and (distinct ((_ extract 4 3) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 4 4) C1) (_ bv0 1)) true) (_ bv4 9) (_ bv3 9)) ?x1548)))
 (let ((?x1290 (ite (and (distinct ((_ extract 8 7) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 8 8) C1) (_ bv0 1)) true) (_ bv8 9) (_ bv7 9)) (ite (and (distinct ((_ extract 6 6) C1) (_ bv0 1)) true) (_ bv6 9) (_ bv5 9)))))
 (let ((?x3946 (bvsub (ite (and (distinct ((_ extract 8 5) C1) (_ bv0 4)) true) ?x1290 ?x1451) ?x1968)))
 (let ((?x2060 (bvand %X C1)))
 (let (($x3891 (and (distinct (ite (= (ite (= ?x2060 (_ bv0 9)) (_ bv1 1) (_ bv0 1)) (_ bv1 1)) %Y (bvor %Y C2)) (bvor ((_ zero_extend 2) (bvlshr ?x2060 ?x3946)) %Y)) true)))
 (let ((?x2457 (ite (and (distinct ((_ extract 2 2) C1) (_ bv0 1)) true) (_ bv2 32) (ite (and (distinct ((_ extract 1 1) C1) (_ bv0 1)) true) (_ bv1 32) (_ bv0 32)))))
 (let ((?x5190 (ite (and (distinct ((_ extract 4 3) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 4 4) C1) (_ bv0 1)) true) (_ bv4 32) (_ bv3 32)) ?x2457)))
 (let ((?x5322 (ite (and (distinct ((_ extract 8 7) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 8 8) C1) (_ bv0 1)) true) (_ bv8 32) (_ bv7 32)) (ite (and (distinct ((_ extract 6 6) C1) (_ bv0 1)) true) (_ bv6 32) (_ bv5 32)))))
 (let ((?x2630 (ite (and (distinct ((_ extract 2 2) C2) (_ bv0 1)) true) (_ bv2 32) (ite (and (distinct ((_ extract 1 1) C2) (_ bv0 1)) true) (_ bv1 32) (_ bv0 32)))))
 (let ((?x5061 (ite (and (distinct ((_ extract 5 5) C2) (_ bv0 1)) true) (_ bv5 32) (ite (and (distinct ((_ extract 4 4) C2) (_ bv0 1)) true) (_ bv4 32) (_ bv3 32)))))
 (let ((?x5112 (ite (and (distinct ((_ extract 8 8) C2) (_ bv0 1)) true) (_ bv8 32) (ite (and (distinct ((_ extract 7 7) C2) (_ bv0 1)) true) (_ bv7 32) (_ bv6 32)))))
 (let ((?x3874 (ite (and (distinct ((_ extract 10 9) C2) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) C2) (_ bv0 1)) true) (_ bv10 32) (_ bv9 32)) ?x5112)))
 (let ((?x2056 (ite (and (distinct ((_ extract 10 6) C2) (_ bv0 5)) true) ?x3874 (ite (and (distinct ((_ extract 5 3) C2) (_ bv0 3)) true) ?x5061 ?x2630))))
 (and (and (and (distinct C1 (_ bv0 9)) true) (= (bvand C1 (bvsub C1 (_ bv1 9))) (_ bv0 9))) (and (and (distinct C2 (_ bv0 11)) true) (= (bvand C2 (bvsub C2 (_ bv1 11))) (_ bv0 11))) (bvslt ?x2056 (ite (and (distinct ((_ extract 8 5) C1) (_ bv0 4)) true) ?x5322 ?x5190)) $x3891)))))))))))))))))))))
(check-sat)
