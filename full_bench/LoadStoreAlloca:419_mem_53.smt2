(set-info :status unknown)
(declare-fun mem0 () (_ BitVec 8))
(declare-fun %x () (_ BitVec 54))
(declare-fun %p1 () (_ BitVec 64))
(declare-fun idx () (_ BitVec 64))
(declare-fun |ana_equivalentAddressValues(%p1, %p2)| () (_ BitVec 1))
(declare-fun %p2 () (_ BitVec 64))
(assert
 (let ((?x6201 (concat ((_ extract 7 6) mem0) ((_ extract 5 0) %x))))
 (let ((?x10245 (ite (and (and (distinct %p1 (_ bv0 64)) true) (or true true) (= idx %p1)) ?x6201 mem0)))
 (let ((?x20203 ((_ extract 13 6) %x)))
 (let (($x15865 (or true true)))
 (let (($x17348 (and (distinct %p1 (_ bv0 64)) true)))
 (let ((?x20396 (ite (and $x17348 $x15865 (= idx (bvadd (bvadd %p1 (_ bv1 64)) (_ bv0 64)))) ?x20203 ?x10245)))
 (let ((?x23974 ((_ extract 21 14) %x)))
 (let ((?x5733 (ite (and $x17348 $x15865 (= idx (bvadd (bvadd %p1 (_ bv1 64)) (_ bv1 64)))) ?x23974 ?x20396)))
 (let ((?x15971 ((_ extract 29 22) %x)))
 (let ((?x6624 (ite (and $x17348 $x15865 (= idx (bvadd (bvadd %p1 (_ bv1 64)) (_ bv2 64)))) ?x15971 ?x5733)))
 (let ((?x18536 ((_ extract 37 30) %x)))
 (let ((?x21858 (ite (and $x17348 $x15865 (= idx (bvadd (bvadd %p1 (_ bv1 64)) (_ bv3 64)))) ?x18536 ?x6624)))
 (let ((?x4086 ((_ extract 45 38) %x)))
 (let ((?x9660 (ite (and $x17348 $x15865 (= idx (bvadd (bvadd %p1 (_ bv1 64)) (_ bv4 64)))) ?x4086 ?x21858)))
 (let ((?x4356 ((_ extract 53 46) %x)))
 (let ((?x7186 (ite (and $x17348 $x15865 (= idx (bvadd (bvadd %p1 (_ bv1 64)) (_ bv5 64)))) ?x4356 ?x9660)))
 (let (($x19537 (= |ana_equivalentAddressValues(%p1, %p2)| (_ bv1 1))))
 (and (=> $x19537 (= %p1 %p2)) $x19537 (and (distinct ?x7186 ?x7186) true))))))))))))))))))))
(check-sat)
