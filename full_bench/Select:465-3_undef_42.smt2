(set-info :status unknown)
(declare-fun C2 () (_ BitVec 11))
(declare-fun C1 () (_ BitVec 44))
(assert
 (let ((?x12266 (ite (and (distinct ((_ extract 2 2) C2) (_ bv0 1)) true) (_ bv2 44) (ite (and (distinct ((_ extract 1 1) C2) (_ bv0 1)) true) (_ bv1 44) (_ bv0 44)))))
 (let ((?x11343 (ite (and (distinct ((_ extract 5 5) C2) (_ bv0 1)) true) (_ bv5 44) (ite (and (distinct ((_ extract 4 4) C2) (_ bv0 1)) true) (_ bv4 44) (_ bv3 44)))))
 (let ((?x18812 (ite (and (distinct ((_ extract 8 8) C2) (_ bv0 1)) true) (_ bv8 44) (ite (and (distinct ((_ extract 7 7) C2) (_ bv0 1)) true) (_ bv7 44) (_ bv6 44)))))
 (let ((?x18846 (ite (and (distinct ((_ extract 10 9) C2) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) C2) (_ bv0 1)) true) (_ bv10 44) (_ bv9 44)) ?x18812)))
 (let ((?x8498 (ite (and (distinct ((_ extract 10 6) C2) (_ bv0 5)) true) ?x18846 (ite (and (distinct ((_ extract 5 3) C2) (_ bv0 3)) true) ?x11343 ?x12266))))
 (let ((?x7941 (ite (and (distinct ((_ extract 2 2) C1) (_ bv0 1)) true) (_ bv2 44) (ite (and (distinct ((_ extract 1 1) C1) (_ bv0 1)) true) (_ bv1 44) (_ bv0 44)))))
 (let ((?x8544 (ite (and (distinct ((_ extract 5 5) C1) (_ bv0 1)) true) (_ bv5 44) (ite (and (distinct ((_ extract 4 4) C1) (_ bv0 1)) true) (_ bv4 44) (_ bv3 44)))))
 (let ((?x19167 (ite (and (distinct ((_ extract 8 8) C1) (_ bv0 1)) true) (_ bv8 44) (ite (and (distinct ((_ extract 7 7) C1) (_ bv0 1)) true) (_ bv7 44) (_ bv6 44)))))
 (let ((?x3525 (ite (and (distinct ((_ extract 10 9) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) C1) (_ bv0 1)) true) (_ bv10 44) (_ bv9 44)) ?x19167)))
 (let ((?x22348 (ite (and (distinct ((_ extract 10 6) C1) (_ bv0 5)) true) ?x3525 (ite (and (distinct ((_ extract 5 3) C1) (_ bv0 3)) true) ?x8544 ?x7941))))
 (let ((?x16233 (ite (and (distinct ((_ extract 13 13) C1) (_ bv0 1)) true) (_ bv13 44) (ite (and (distinct ((_ extract 12 12) C1) (_ bv0 1)) true) (_ bv12 44) (_ bv11 44)))))
 (let ((?x20799 (ite (and (distinct ((_ extract 16 16) C1) (_ bv0 1)) true) (_ bv16 44) (ite (and (distinct ((_ extract 15 15) C1) (_ bv0 1)) true) (_ bv15 44) (_ bv14 44)))))
 (let ((?x8117 (ite (and (distinct ((_ extract 19 19) C1) (_ bv0 1)) true) (_ bv19 44) (ite (and (distinct ((_ extract 18 18) C1) (_ bv0 1)) true) (_ bv18 44) (_ bv17 44)))))
 (let ((?x10825 (ite (and (distinct ((_ extract 21 20) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 21 21) C1) (_ bv0 1)) true) (_ bv21 44) (_ bv20 44)) ?x8117)))
 (let ((?x6973 (ite (and (distinct ((_ extract 21 17) C1) (_ bv0 5)) true) ?x10825 (ite (and (distinct ((_ extract 16 14) C1) (_ bv0 3)) true) ?x20799 ?x16233))))
 (let ((?x1194 (ite (and (distinct ((_ extract 24 24) C1) (_ bv0 1)) true) (_ bv24 44) (ite (and (distinct ((_ extract 23 23) C1) (_ bv0 1)) true) (_ bv23 44) (_ bv22 44)))))
 (let ((?x18637 (ite (and (distinct ((_ extract 27 27) C1) (_ bv0 1)) true) (_ bv27 44) (ite (and (distinct ((_ extract 26 26) C1) (_ bv0 1)) true) (_ bv26 44) (_ bv25 44)))))
 (let ((?x19814 (ite (and (distinct ((_ extract 30 30) C1) (_ bv0 1)) true) (_ bv30 44) (ite (and (distinct ((_ extract 29 29) C1) (_ bv0 1)) true) (_ bv29 44) (_ bv28 44)))))
 (let ((?x20665 (ite (and (distinct ((_ extract 32 31) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 32 32) C1) (_ bv0 1)) true) (_ bv32 44) (_ bv31 44)) ?x19814)))
 (let ((?x1711 (ite (and (distinct ((_ extract 32 28) C1) (_ bv0 5)) true) ?x20665 (ite (and (distinct ((_ extract 27 25) C1) (_ bv0 3)) true) ?x18637 ?x1194))))
 (let ((?x5447 (ite (and (distinct ((_ extract 35 35) C1) (_ bv0 1)) true) (_ bv35 44) (ite (and (distinct ((_ extract 34 34) C1) (_ bv0 1)) true) (_ bv34 44) (_ bv33 44)))))
 (let ((?x14322 (ite (and (distinct ((_ extract 38 38) C1) (_ bv0 1)) true) (_ bv38 44) (ite (and (distinct ((_ extract 37 37) C1) (_ bv0 1)) true) (_ bv37 44) (_ bv36 44)))))
 (let ((?x15289 (ite (and (distinct ((_ extract 41 41) C1) (_ bv0 1)) true) (_ bv41 44) (ite (and (distinct ((_ extract 40 40) C1) (_ bv0 1)) true) (_ bv40 44) (_ bv39 44)))))
 (let ((?x19330 (ite (and (distinct ((_ extract 43 42) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 43 43) C1) (_ bv0 1)) true) (_ bv43 44) (_ bv42 44)) ?x15289)))
 (let ((?x10165 (ite (and (distinct ((_ extract 43 39) C1) (_ bv0 5)) true) ?x19330 (ite (and (distinct ((_ extract 38 36) C1) (_ bv0 3)) true) ?x14322 ?x5447))))
 (let ((?x737 (ite (and (distinct ((_ extract 43 22) C1) (_ bv0 22)) true) (ite (and (distinct ((_ extract 43 33) C1) (_ bv0 11)) true) ?x10165 ?x1711) (ite (and (distinct ((_ extract 21 11) C1) (_ bv0 11)) true) ?x6973 ?x22348))))
 (let ((?x5252 (bvsub ?x737 ?x8498)))
 (let ((?x4126 (ite (and (distinct ((_ extract 2 2) C1) (_ bv0 1)) true) (_ bv2 32) (ite (and (distinct ((_ extract 1 1) C1) (_ bv0 1)) true) (_ bv1 32) (_ bv0 32)))))
 (let ((?x13641 (ite (and (distinct ((_ extract 5 5) C1) (_ bv0 1)) true) (_ bv5 32) (ite (and (distinct ((_ extract 4 4) C1) (_ bv0 1)) true) (_ bv4 32) (_ bv3 32)))))
 (let ((?x11014 (ite (and (distinct ((_ extract 8 8) C1) (_ bv0 1)) true) (_ bv8 32) (ite (and (distinct ((_ extract 7 7) C1) (_ bv0 1)) true) (_ bv7 32) (_ bv6 32)))))
 (let ((?x18968 (ite (and (distinct ((_ extract 10 9) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) C1) (_ bv0 1)) true) (_ bv10 32) (_ bv9 32)) ?x11014)))
 (let ((?x22935 (ite (and (distinct ((_ extract 10 6) C1) (_ bv0 5)) true) ?x18968 (ite (and (distinct ((_ extract 5 3) C1) (_ bv0 3)) true) ?x13641 ?x4126))))
 (let ((?x6996 (ite (and (distinct ((_ extract 13 13) C1) (_ bv0 1)) true) (_ bv13 32) (ite (and (distinct ((_ extract 12 12) C1) (_ bv0 1)) true) (_ bv12 32) (_ bv11 32)))))
 (let ((?x22208 (ite (and (distinct ((_ extract 16 16) C1) (_ bv0 1)) true) (_ bv16 32) (ite (and (distinct ((_ extract 15 15) C1) (_ bv0 1)) true) (_ bv15 32) (_ bv14 32)))))
 (let ((?x17709 (ite (and (distinct ((_ extract 19 19) C1) (_ bv0 1)) true) (_ bv19 32) (ite (and (distinct ((_ extract 18 18) C1) (_ bv0 1)) true) (_ bv18 32) (_ bv17 32)))))
 (let ((?x18900 (ite (and (distinct ((_ extract 21 20) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 21 21) C1) (_ bv0 1)) true) (_ bv21 32) (_ bv20 32)) ?x17709)))
 (let ((?x3294 (ite (and (distinct ((_ extract 21 17) C1) (_ bv0 5)) true) ?x18900 (ite (and (distinct ((_ extract 16 14) C1) (_ bv0 3)) true) ?x22208 ?x6996))))
 (let ((?x11867 (ite (and (distinct ((_ extract 24 24) C1) (_ bv0 1)) true) (_ bv24 32) (ite (and (distinct ((_ extract 23 23) C1) (_ bv0 1)) true) (_ bv23 32) (_ bv22 32)))))
 (let ((?x13705 (ite (and (distinct ((_ extract 27 27) C1) (_ bv0 1)) true) (_ bv27 32) (ite (and (distinct ((_ extract 26 26) C1) (_ bv0 1)) true) (_ bv26 32) (_ bv25 32)))))
 (let ((?x11591 (ite (and (distinct ((_ extract 30 30) C1) (_ bv0 1)) true) (_ bv30 32) (ite (and (distinct ((_ extract 29 29) C1) (_ bv0 1)) true) (_ bv29 32) (_ bv28 32)))))
 (let ((?x11318 (ite (and (distinct ((_ extract 32 31) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 32 32) C1) (_ bv0 1)) true) (_ bv32 32) (_ bv31 32)) ?x11591)))
 (let ((?x14385 (ite (and (distinct ((_ extract 32 28) C1) (_ bv0 5)) true) ?x11318 (ite (and (distinct ((_ extract 27 25) C1) (_ bv0 3)) true) ?x13705 ?x11867))))
 (let ((?x3107 (ite (and (distinct ((_ extract 35 35) C1) (_ bv0 1)) true) (_ bv35 32) (ite (and (distinct ((_ extract 34 34) C1) (_ bv0 1)) true) (_ bv34 32) (_ bv33 32)))))
 (let ((?x2405 (ite (and (distinct ((_ extract 38 38) C1) (_ bv0 1)) true) (_ bv38 32) (ite (and (distinct ((_ extract 37 37) C1) (_ bv0 1)) true) (_ bv37 32) (_ bv36 32)))))
 (let ((?x22234 (ite (and (distinct ((_ extract 41 41) C1) (_ bv0 1)) true) (_ bv41 32) (ite (and (distinct ((_ extract 40 40) C1) (_ bv0 1)) true) (_ bv40 32) (_ bv39 32)))))
 (let ((?x5719 (ite (and (distinct ((_ extract 43 42) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 43 43) C1) (_ bv0 1)) true) (_ bv43 32) (_ bv42 32)) ?x22234)))
 (let ((?x797 (ite (and (distinct ((_ extract 43 39) C1) (_ bv0 5)) true) ?x5719 (ite (and (distinct ((_ extract 38 36) C1) (_ bv0 3)) true) ?x2405 ?x3107))))
 (let ((?x3766 (ite (and (distinct ((_ extract 43 22) C1) (_ bv0 22)) true) (ite (and (distinct ((_ extract 43 33) C1) (_ bv0 11)) true) ?x797 ?x14385) (ite (and (distinct ((_ extract 21 11) C1) (_ bv0 11)) true) ?x3294 ?x22935))))
 (let ((?x7502 (ite (and (distinct ((_ extract 2 2) C2) (_ bv0 1)) true) (_ bv2 32) (ite (and (distinct ((_ extract 1 1) C2) (_ bv0 1)) true) (_ bv1 32) (_ bv0 32)))))
 (let ((?x19808 (ite (and (distinct ((_ extract 5 5) C2) (_ bv0 1)) true) (_ bv5 32) (ite (and (distinct ((_ extract 4 4) C2) (_ bv0 1)) true) (_ bv4 32) (_ bv3 32)))))
 (let ((?x3184 (ite (and (distinct ((_ extract 8 8) C2) (_ bv0 1)) true) (_ bv8 32) (ite (and (distinct ((_ extract 7 7) C2) (_ bv0 1)) true) (_ bv7 32) (_ bv6 32)))))
 (let ((?x12106 (ite (and (distinct ((_ extract 10 9) C2) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) C2) (_ bv0 1)) true) (_ bv10 32) (_ bv9 32)) ?x3184)))
 (let ((?x11131 (ite (and (distinct ((_ extract 10 6) C2) (_ bv0 5)) true) ?x12106 (ite (and (distinct ((_ extract 5 3) C2) (_ bv0 3)) true) ?x19808 ?x7502))))
 (and (and (and (distinct C1 (_ bv0 44)) true) (= (bvand C1 (bvsub C1 (_ bv1 44))) (_ bv0 44))) (and (and (distinct C2 (_ bv0 11)) true) (= (bvand C2 (bvsub C2 (_ bv1 11))) (_ bv0 11))) (bvslt ?x11131 ?x3766) (not (bvult ?x5252 (_ bv44 44))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
