(set-info :status unknown)
(declare-fun C2 () (_ BitVec 2))
(declare-fun %B () (_ BitVec 2))
(declare-fun %A () (_ BitVec 2))
(declare-fun C1 () (_ BitVec 2))
(declare-fun |ana_MaskedValueIsZero(%B, ((1 << (width(C2) - countLeadingZeros(((C2 - 1) ^ C2)))) - 1))| () (_ BitVec 1))
(assert
 (let (($x3355 (and (distinct (bvand (bvadd (bvand %A C1) %B) C2) (bvand (bvadd %A %B) C2)) true)))
 (let (($x1520 (= |ana_MaskedValueIsZero(%B, ((1 << (width(C2) - countLeadingZeros(((C2 - 1) ^ C2)))) - 1))| (_ bv1 1))))
 (let ((?x6090 (bvor (bvsub C2 (_ bv1 2)) C2)))
 (let (($x17560 (and (and (distinct ?x6090 (_ bv0 2)) true) (= (bvand (bvadd ?x6090 (_ bv1 2)) ?x6090) (_ bv0 2)) $x1520)))
 (let (($x15707 (or (= (bvand (bvadd C2 (_ bv1 2)) (bvsub (bvadd C2 (_ bv1 2)) (_ bv1 2))) (_ bv0 2)) $x17560)))
 (let ((?x15459 (ite (= ((_ extract 1 1) (bvxor (bvsub C2 (_ bv1 2)) C2)) (_ bv1 1)) (_ bv0 2) (ite (= ((_ extract 0 0) (bvxor (bvsub C2 (_ bv1 2)) C2)) (_ bv1 1)) (_ bv1 2) (_ bv2 2)))))
 (let (($x15373 (=> $x1520 (= (bvand %B (bvsub (bvshl (_ bv1 2) (bvsub (_ bv2 2) ?x15459)) (_ bv1 2))) (_ bv0 2)))))
 (and $x15373 (= (bvand C1 C2) C2) $x15707 $x3355)))))))))
(check-sat)
