(set-info :source |
 Generated by Alive 0.1
 More info in N. P. Lopes, D. Menendez, S. Nagarakatte, J. Regehr.
 Provably Correct Peephole Optimizations with Alive. In PLDI'15.
|)

(set-info :status unknown)
(declare-fun %Op0 () (_ BitVec 4))
(declare-fun C () (_ BitVec 4))
(declare-fun |ana_ComputeNumSignBits(%Op0)| () (_ BitVec 4))
(assert
 (let ((?x448183 ((_ extract 3 3) |ana_ComputeNumSignBits(%Op0)|)))
 (let ((?x458494 (ite (= ((_ extract 1 1) |ana_ComputeNumSignBits(%Op0)|) ?x448183) (ite (= ((_ extract 0 0) |ana_ComputeNumSignBits(%Op0)|) ?x448183) (_ bv4 4) (_ bv3 4)) (_ bv2 4))))
 (let (($x443211 (bvsgt (ite (= ((_ extract 2 2) |ana_ComputeNumSignBits(%Op0)|) ?x448183) ?x458494 (_ bv1 4)) C)))
 (let ((?x444167 (ite (= ((_ extract 1 1) %Op0) ((_ extract 3 3) %Op0)) (ite (= ((_ extract 0 0) %Op0) ((_ extract 3 3) %Op0)) (_ bv4 4) (_ bv3 4)) (_ bv2 4))))
 (let (($x472706 (bvule (ite (= ((_ extract 2 2) |ana_ComputeNumSignBits(%Op0)|) ?x448183) ?x458494 (_ bv1 4)) (ite (= ((_ extract 2 2) %Op0) ((_ extract 3 3) %Op0)) ?x444167 (_ bv1 4)))))
 (let (($x92372 (bvult C (_ bv4 4))))
 (and $x92372 $x472706 $x443211 (not (= (bvashr (bvshl %Op0 C) C) %Op0))))))))))
(check-sat)
