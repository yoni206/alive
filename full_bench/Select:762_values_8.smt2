(set-info :status unknown)
(declare-fun C3 () (_ BitVec 11))
(declare-fun C2 () (_ BitVec 11))
(declare-fun C () (_ BitVec 12))
(declare-fun %Op () (_ BitVec 12))
(assert
 (let ((?x21707 (bvsub C2 C3)))
 (let ((?x4790 (ite (and (distinct ((_ extract 2 2) ?x21707) (_ bv0 1)) true) (_ bv2 11) (ite (and (distinct ((_ extract 1 1) ?x21707) (_ bv0 1)) true) (_ bv1 11) (_ bv0 11)))))
 (let ((?x3972 (ite (and (distinct ((_ extract 5 5) ?x21707) (_ bv0 1)) true) (_ bv5 11) (ite (and (distinct ((_ extract 4 4) ?x21707) (_ bv0 1)) true) (_ bv4 11) (_ bv3 11)))))
 (let ((?x22381 (ite (and (distinct ((_ extract 8 8) ?x21707) (_ bv0 1)) true) (_ bv8 11) (ite (and (distinct ((_ extract 7 7) ?x21707) (_ bv0 1)) true) (_ bv7 11) (_ bv6 11)))))
 (let ((?x5963 (ite (and (distinct ((_ extract 10 9) ?x21707) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) ?x21707) (_ bv0 1)) true) (_ bv10 11) (_ bv9 11)) ?x22381)))
 (let ((?x5676 (ite (and (distinct ((_ extract 10 6) ?x21707) (_ bv0 5)) true) ?x5963 (ite (and (distinct ((_ extract 5 3) ?x21707) (_ bv0 3)) true) ?x3972 ?x4790))))
 (let ((?x13477 (ite (and (distinct ((_ extract 2 2) C) (_ bv0 1)) true) (_ bv2 11) (ite (and (distinct ((_ extract 1 1) C) (_ bv0 1)) true) (_ bv1 11) (_ bv0 11)))))
 (let ((?x22373 (ite (and (distinct ((_ extract 5 5) C) (_ bv0 1)) true) (_ bv5 11) (ite (and (distinct ((_ extract 4 4) C) (_ bv0 1)) true) (_ bv4 11) (_ bv3 11)))))
 (let ((?x3149 (ite (and (distinct ((_ extract 8 8) C) (_ bv0 1)) true) (_ bv8 11) (ite (and (distinct ((_ extract 7 7) C) (_ bv0 1)) true) (_ bv7 11) (_ bv6 11)))))
 (let ((?x24136 (ite (and (distinct ((_ extract 11 11) C) (_ bv0 1)) true) (_ bv11 11) (ite (and (distinct ((_ extract 10 10) C) (_ bv0 1)) true) (_ bv10 11) (_ bv9 11)))))
 (let ((?x12340 (ite (and (distinct ((_ extract 11 6) C) (_ bv0 6)) true) (ite (and (distinct ((_ extract 11 9) C) (_ bv0 3)) true) ?x24136 ?x3149) (ite (and (distinct ((_ extract 5 3) C) (_ bv0 3)) true) ?x22373 ?x13477))))
 (let ((?x20453 (bvsub ?x12340 ?x5676)))
 (let ((?x6447 (ite (bvsgt (_ bv0 11) ?x20453) (_ bv0 11) ?x20453)))
 (let ((?x22634 (bvsub ?x5676 ?x12340)))
 (let ((?x720 (ite (bvsgt (_ bv0 11) ?x22634) (_ bv0 11) ?x22634)))
 (let ((?x3505 (bvadd (bvxor (bvlshr (bvshl ((_ extract 10 0) (bvand %Op C)) ?x720) ?x6447) ?x21707) C3)))
 (let (($x15628 (and (distinct (ite (= (ite (= (bvand %Op C) (_ bv0 12)) (_ bv1 1) (_ bv0 1)) (_ bv1 1)) C2 C3) ?x3505) true)))
 (let ((?x10467 (ite (and (distinct ((_ extract 2 2) C) (_ bv0 1)) true) (_ bv2 32) (ite (and (distinct ((_ extract 1 1) C) (_ bv0 1)) true) (_ bv1 32) (_ bv0 32)))))
 (let ((?x10425 (ite (and (distinct ((_ extract 5 5) C) (_ bv0 1)) true) (_ bv5 32) (ite (and (distinct ((_ extract 4 4) C) (_ bv0 1)) true) (_ bv4 32) (_ bv3 32)))))
 (let ((?x7288 (ite (and (distinct ((_ extract 8 8) C) (_ bv0 1)) true) (_ bv8 32) (ite (and (distinct ((_ extract 7 7) C) (_ bv0 1)) true) (_ bv7 32) (_ bv6 32)))))
 (let ((?x9036 (ite (and (distinct ((_ extract 11 11) C) (_ bv0 1)) true) (_ bv11 32) (ite (and (distinct ((_ extract 10 10) C) (_ bv0 1)) true) (_ bv10 32) (_ bv9 32)))))
 (let ((?x12470 (ite (and (distinct ((_ extract 11 6) C) (_ bv0 6)) true) (ite (and (distinct ((_ extract 11 9) C) (_ bv0 3)) true) ?x9036 ?x7288) (ite (and (distinct ((_ extract 5 3) C) (_ bv0 3)) true) ?x10425 ?x10467))))
 (and (and (and (distinct C (_ bv0 12)) true) (= (bvand C (bvsub C (_ bv1 12))) (_ bv0 12))) (and (and (distinct ?x21707 (_ bv0 11)) true) (= (bvand ?x21707 (bvsub ?x21707 (_ bv1 11))) (_ bv0 11))) (bvslt ?x12470 (_ bv11 32)) $x15628))))))))))))))))))))))))
(check-sat)
