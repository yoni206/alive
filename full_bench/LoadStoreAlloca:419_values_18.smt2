(set-info :status unknown)
(declare-fun %x () (_ BitVec 19))
(declare-fun mem0 () (_ BitVec 8))
(declare-fun %p1 () (_ BitVec 64))
(declare-fun %p2 () (_ BitVec 64))
(declare-fun |ana_equivalentAddressValues(%p1, %p2)| () (_ BitVec 1))
(assert
 (let ((?x13823 (concat ((_ extract 7 3) mem0) ((_ extract 2 0) %x))))
 (let ((?x12536 (ite (and (and (distinct %p1 (_ bv0 64)) true) (or true true) (= %p2 %p1)) ?x13823 mem0)))
 (let ((?x13453 ((_ extract 10 3) %x)))
 (let (($x6055 (or true true)))
 (let (($x8080 (and (distinct %p1 (_ bv0 64)) true)))
 (let ((?x3677 (ite (and $x8080 $x6055 (= %p2 (bvadd (bvadd %p1 (_ bv1 64)) (_ bv0 64)))) ?x13453 ?x12536)))
 (let ((?x6201 ((_ extract 18 11) %x)))
 (let ((?x10731 (ite (and $x8080 $x6055 (= %p2 (bvadd (bvadd %p1 (_ bv1 64)) (_ bv1 64)))) ?x6201 ?x3677)))
 (let ((?x4976 (ite (and $x8080 $x6055 (= (bvadd (bvadd %p2 (_ bv1 64)) (_ bv0 64)) %p1)) ?x13823 mem0)))
 (let (($x916 (and $x8080 $x6055 (= (bvadd (bvadd %p2 (_ bv1 64)) (_ bv0 64)) (bvadd (bvadd %p1 (_ bv1 64)) (_ bv0 64))))))
 (let (($x5571 (and $x8080 $x6055 (= (bvadd (bvadd %p2 (_ bv1 64)) (_ bv0 64)) (bvadd (bvadd %p1 (_ bv1 64)) (_ bv1 64))))))
 (let ((?x13565 (ite (and $x8080 $x6055 (= (bvadd (bvadd %p2 (_ bv1 64)) (_ bv1 64)) %p1)) ?x13823 mem0)))
 (let (($x23121 (and $x8080 $x6055 (= (bvadd (bvadd %p2 (_ bv1 64)) (_ bv1 64)) (bvadd (bvadd %p1 (_ bv1 64)) (_ bv0 64))))))
 (let (($x10011 (and $x8080 $x6055 (= (bvadd (bvadd %p2 (_ bv1 64)) (_ bv1 64)) (bvadd (bvadd %p1 (_ bv1 64)) (_ bv1 64))))))
 (let ((?x6635 (concat (ite $x10011 ?x6201 (ite $x23121 ?x13453 ?x13565)) (ite $x5571 ?x6201 (ite $x916 ?x13453 ?x4976)))))
 (let (($x3169 (= |ana_equivalentAddressValues(%p1, %p2)| (_ bv1 1))))
 (let (($x13904 (and (distinct %p2 (_ bv0 64)) true)))
 (and $x8080 $x6055 $x13904 $x6055 $x13904 $x6055 (=> $x3169 (= %p1 %p2)) $x3169 (and (distinct (concat ?x6635 ((_ extract 2 0) ?x10731)) %x) true))))))))))))))))))))
(check-sat)
