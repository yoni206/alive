(set-info :status unknown)
(declare-fun mem0 () (_ BitVec 8))
(declare-fun %y () (_ BitVec 42))
(declare-fun %p2 () (_ BitVec 64))
(declare-fun idx () (_ BitVec 64))
(declare-fun %x () (_ BitVec 42))
(declare-fun %p1 () (_ BitVec 64))
(declare-fun |ana_equivalentAddressValues(%p1, %p2)| () (_ BitVec 1))
(assert
 (let ((?x5638 (ite (and (and (distinct %p2 (_ bv0 64)) true) (or true true) (= idx %p2)) (concat ((_ extract 7 2) mem0) ((_ extract 1 0) %y)) mem0)))
 (let (($x21710 (or true true)))
 (let (($x12869 (and (distinct %p2 (_ bv0 64)) true)))
 (let ((?x19116 (ite (and $x12869 $x21710 (= idx (bvadd (bvadd %p2 (_ bv1 64)) (_ bv0 64)))) ((_ extract 9 2) %y) ?x5638)))
 (let ((?x8088 (ite (and $x12869 $x21710 (= idx (bvadd (bvadd %p2 (_ bv1 64)) (_ bv1 64)))) ((_ extract 17 10) %y) ?x19116)))
 (let ((?x23756 (ite (and $x12869 $x21710 (= idx (bvadd (bvadd %p2 (_ bv1 64)) (_ bv2 64)))) ((_ extract 25 18) %y) ?x8088)))
 (let ((?x8920 (ite (and $x12869 $x21710 (= idx (bvadd (bvadd %p2 (_ bv1 64)) (_ bv3 64)))) ((_ extract 33 26) %y) ?x23756)))
 (let ((?x469 (ite (and $x12869 $x21710 (= idx (bvadd (bvadd %p2 (_ bv1 64)) (_ bv4 64)))) ((_ extract 41 34) %y) ?x8920)))
 (let ((?x14788 (ite (and (and (distinct %p1 (_ bv0 64)) true) $x21710 (= idx %p1)) (concat ((_ extract 7 2) mem0) ((_ extract 1 0) %x)) mem0)))
 (let (($x17212 (and (distinct %p1 (_ bv0 64)) true)))
 (let ((?x23996 (ite (and $x17212 $x21710 (= idx (bvadd (bvadd %p1 (_ bv1 64)) (_ bv0 64)))) ((_ extract 9 2) %x) ?x14788)))
 (let ((?x14607 (ite (and $x17212 $x21710 (= idx (bvadd (bvadd %p1 (_ bv1 64)) (_ bv1 64)))) ((_ extract 17 10) %x) ?x23996)))
 (let ((?x22023 (ite (and $x17212 $x21710 (= idx (bvadd (bvadd %p1 (_ bv1 64)) (_ bv2 64)))) ((_ extract 25 18) %x) ?x14607)))
 (let ((?x5000 (ite (and $x17212 $x21710 (= idx (bvadd (bvadd %p1 (_ bv1 64)) (_ bv3 64)))) ((_ extract 33 26) %x) ?x22023)))
 (let ((?x20865 (ite (and $x17212 $x21710 (= idx (bvadd (bvadd %p1 (_ bv1 64)) (_ bv4 64)))) ((_ extract 41 34) %x) ?x5000)))
 (let ((?x17981 (ite (and $x17212 $x21710 (= %p2 %p1)) (concat ((_ extract 7 2) mem0) ((_ extract 1 0) %x)) mem0)))
 (let ((?x6727 (ite (and $x17212 $x21710 (= %p2 (bvadd (bvadd %p1 (_ bv1 64)) (_ bv0 64)))) ((_ extract 9 2) %x) ?x17981)))
 (let ((?x4519 (ite (and $x17212 $x21710 (= %p2 (bvadd (bvadd %p1 (_ bv1 64)) (_ bv1 64)))) ((_ extract 17 10) %x) ?x6727)))
 (let ((?x1172 (ite (and $x17212 $x21710 (= %p2 (bvadd (bvadd %p1 (_ bv1 64)) (_ bv2 64)))) ((_ extract 25 18) %x) ?x4519)))
 (let ((?x21869 (ite (and $x17212 $x21710 (= %p2 (bvadd (bvadd %p1 (_ bv1 64)) (_ bv3 64)))) ((_ extract 33 26) %x) ?x1172)))
 (let ((?x3794 (ite (and $x17212 $x21710 (= %p2 (bvadd (bvadd %p1 (_ bv1 64)) (_ bv4 64)))) ((_ extract 41 34) %x) ?x21869)))
 (let ((?x18561 (ite (and $x17212 $x21710 $x12869 $x21710 (= idx %p2)) (concat ((_ extract 7 2) ?x3794) ((_ extract 1 0) %y)) ?x20865)))
 (let ((?x17538 (ite (and $x17212 $x21710 $x12869 $x21710 (= idx (bvadd (bvadd %p2 (_ bv1 64)) (_ bv0 64)))) ((_ extract 9 2) %y) ?x18561)))
 (let ((?x5878 (ite (and $x17212 $x21710 $x12869 $x21710 (= idx (bvadd (bvadd %p2 (_ bv1 64)) (_ bv1 64)))) ((_ extract 17 10) %y) ?x17538)))
 (let ((?x4515 (ite (and $x17212 $x21710 $x12869 $x21710 (= idx (bvadd (bvadd %p2 (_ bv1 64)) (_ bv2 64)))) ((_ extract 25 18) %y) ?x5878)))
 (let ((?x2408 (ite (and $x17212 $x21710 $x12869 $x21710 (= idx (bvadd (bvadd %p2 (_ bv1 64)) (_ bv3 64)))) ((_ extract 33 26) %y) ?x4515)))
 (let ((?x389 (ite (and $x17212 $x21710 $x12869 $x21710 (= idx (bvadd (bvadd %p2 (_ bv1 64)) (_ bv4 64)))) ((_ extract 41 34) %y) ?x2408)))
 (let (($x7967 (= |ana_equivalentAddressValues(%p1, %p2)| (_ bv1 1))))
 (and (=> $x7967 (= %p1 %p2)) $x7967 (and (distinct ?x389 ?x469) true)))))))))))))))))))))))))))))))
(check-sat)
