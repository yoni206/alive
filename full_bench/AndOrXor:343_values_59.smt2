(set-info :source |
 Generated by Alive 0.1
 More info in N. P. Lopes, D. Menendez, S. Nagarakatte, J. Regehr.
 Provably Correct Peephole Optimizations with Alive. In PLDI'15.
|)

(set-info :status unknown)
(declare-fun C2 () (_ BitVec 61))
(declare-fun %B () (_ BitVec 61))
(declare-fun %A () (_ BitVec 61))
(declare-fun C1 () (_ BitVec 61))
(declare-fun |ana_MaskedValueIsZero(%B, ((1 << (width(C2) - countLeadingZeros(((C2 - 1) ^ C2)))) - 1))| () (_ BitVec 1))
(assert
 (let (($x158268 (and (distinct (bvand (bvadd (bvand %A C1) %B) C2) (bvand (bvadd %A %B) C2)) true)))
 (let (($x131713 (= |ana_MaskedValueIsZero(%B, ((1 << (width(C2) - countLeadingZeros(((C2 - 1) ^ C2)))) - 1))| (_ bv1 1))))
 (let ((?x31589 (bvsub C2 (_ bv1 61))))
 (let ((?x158325 (bvor ?x31589 C2)))
 (let (($x158303 (and (and (distinct ?x158325 (_ bv0 61)) true) (= (bvand (bvadd ?x158325 (_ bv1 61)) ?x158325) (_ bv0 61)) $x131713)))
 (let (($x158304 (or (= (bvand (bvadd C2 (_ bv1 61)) (bvsub (bvadd C2 (_ bv1 61)) (_ bv1 61))) (_ bv0 61)) $x158303)))
 (let ((?x132350 (bvand C1 C2)))
 (let (($x158333 (= ?x132350 C2)))
 (let ((?x158300 (ite (= ((_ extract 1 1) (bvxor ?x31589 C2)) (_ bv1 1)) (_ bv59 61) (ite (= ((_ extract 0 0) (bvxor ?x31589 C2)) (_ bv1 1)) (_ bv60 61) (_ bv61 61)))))
 (let ((?x158289 (ite (= ((_ extract 3 3) (bvxor ?x31589 C2)) (_ bv1 1)) (_ bv57 61) (ite (= ((_ extract 2 2) (bvxor ?x31589 C2)) (_ bv1 1)) (_ bv58 61) ?x158300))))
 (let ((?x158278 (ite (= ((_ extract 5 5) (bvxor ?x31589 C2)) (_ bv1 1)) (_ bv55 61) (ite (= ((_ extract 4 4) (bvxor ?x31589 C2)) (_ bv1 1)) (_ bv56 61) ?x158289))))
 (let ((?x158263 (ite (= ((_ extract 7 7) (bvxor ?x31589 C2)) (_ bv1 1)) (_ bv53 61) (ite (= ((_ extract 6 6) (bvxor ?x31589 C2)) (_ bv1 1)) (_ bv54 61) ?x158278))))
 (let ((?x157558 (ite (= ((_ extract 9 9) (bvxor ?x31589 C2)) (_ bv1 1)) (_ bv51 61) (ite (= ((_ extract 8 8) (bvxor ?x31589 C2)) (_ bv1 1)) (_ bv52 61) ?x158263))))
 (let ((?x158487 (ite (= ((_ extract 11 11) (bvxor ?x31589 C2)) (_ bv1 1)) (_ bv49 61) (ite (= ((_ extract 10 10) (bvxor ?x31589 C2)) (_ bv1 1)) (_ bv50 61) ?x157558))))
 (let ((?x158483 (ite (= ((_ extract 13 13) (bvxor ?x31589 C2)) (_ bv1 1)) (_ bv47 61) (ite (= ((_ extract 12 12) (bvxor ?x31589 C2)) (_ bv1 1)) (_ bv48 61) ?x158487))))
 (let ((?x158479 (ite (= ((_ extract 15 15) (bvxor ?x31589 C2)) (_ bv1 1)) (_ bv45 61) (ite (= ((_ extract 14 14) (bvxor ?x31589 C2)) (_ bv1 1)) (_ bv46 61) ?x158483))))
 (let ((?x158475 (ite (= ((_ extract 17 17) (bvxor ?x31589 C2)) (_ bv1 1)) (_ bv43 61) (ite (= ((_ extract 16 16) (bvxor ?x31589 C2)) (_ bv1 1)) (_ bv44 61) ?x158479))))
 (let ((?x158471 (ite (= ((_ extract 19 19) (bvxor ?x31589 C2)) (_ bv1 1)) (_ bv41 61) (ite (= ((_ extract 18 18) (bvxor ?x31589 C2)) (_ bv1 1)) (_ bv42 61) ?x158475))))
 (let ((?x158464 (ite (= ((_ extract 21 21) (bvxor ?x31589 C2)) (_ bv1 1)) (_ bv39 61) (ite (= ((_ extract 20 20) (bvxor ?x31589 C2)) (_ bv1 1)) (_ bv40 61) ?x158471))))
 (let ((?x158457 (ite (= ((_ extract 23 23) (bvxor ?x31589 C2)) (_ bv1 1)) (_ bv37 61) (ite (= ((_ extract 22 22) (bvxor ?x31589 C2)) (_ bv1 1)) (_ bv38 61) ?x158464))))
 (let ((?x158450 (ite (= ((_ extract 25 25) (bvxor ?x31589 C2)) (_ bv1 1)) (_ bv35 61) (ite (= ((_ extract 24 24) (bvxor ?x31589 C2)) (_ bv1 1)) (_ bv36 61) ?x158457))))
 (let ((?x158446 (ite (= ((_ extract 27 27) (bvxor ?x31589 C2)) (_ bv1 1)) (_ bv33 61) (ite (= ((_ extract 26 26) (bvxor ?x31589 C2)) (_ bv1 1)) (_ bv34 61) ?x158450))))
 (let ((?x158442 (ite (= ((_ extract 29 29) (bvxor ?x31589 C2)) (_ bv1 1)) (_ bv31 61) (ite (= ((_ extract 28 28) (bvxor ?x31589 C2)) (_ bv1 1)) (_ bv32 61) ?x158446))))
 (let ((?x158438 (ite (= ((_ extract 31 31) (bvxor ?x31589 C2)) (_ bv1 1)) (_ bv29 61) (ite (= ((_ extract 30 30) (bvxor ?x31589 C2)) (_ bv1 1)) (_ bv30 61) ?x158442))))
 (let ((?x158431 (ite (= ((_ extract 33 33) (bvxor ?x31589 C2)) (_ bv1 1)) (_ bv27 61) (ite (= ((_ extract 32 32) (bvxor ?x31589 C2)) (_ bv1 1)) (_ bv28 61) ?x158438))))
 (let ((?x158424 (ite (= ((_ extract 35 35) (bvxor ?x31589 C2)) (_ bv1 1)) (_ bv25 61) (ite (= ((_ extract 34 34) (bvxor ?x31589 C2)) (_ bv1 1)) (_ bv26 61) ?x158431))))
 (let ((?x158417 (ite (= ((_ extract 37 37) (bvxor ?x31589 C2)) (_ bv1 1)) (_ bv23 61) (ite (= ((_ extract 36 36) (bvxor ?x31589 C2)) (_ bv1 1)) (_ bv24 61) ?x158424))))
 (let ((?x158410 (ite (= ((_ extract 39 39) (bvxor ?x31589 C2)) (_ bv1 1)) (_ bv21 61) (ite (= ((_ extract 38 38) (bvxor ?x31589 C2)) (_ bv1 1)) (_ bv22 61) ?x158417))))
 (let ((?x158406 (ite (= ((_ extract 41 41) (bvxor ?x31589 C2)) (_ bv1 1)) (_ bv19 61) (ite (= ((_ extract 40 40) (bvxor ?x31589 C2)) (_ bv1 1)) (_ bv20 61) ?x158410))))
 (let ((?x158402 (ite (= ((_ extract 43 43) (bvxor ?x31589 C2)) (_ bv1 1)) (_ bv17 61) (ite (= ((_ extract 42 42) (bvxor ?x31589 C2)) (_ bv1 1)) (_ bv18 61) ?x158406))))
 (let ((?x158395 (ite (= ((_ extract 45 45) (bvxor ?x31589 C2)) (_ bv1 1)) (_ bv15 61) (ite (= ((_ extract 44 44) (bvxor ?x31589 C2)) (_ bv1 1)) (_ bv16 61) ?x158402))))
 (let ((?x158388 (ite (= ((_ extract 47 47) (bvxor ?x31589 C2)) (_ bv1 1)) (_ bv13 61) (ite (= ((_ extract 46 46) (bvxor ?x31589 C2)) (_ bv1 1)) (_ bv14 61) ?x158395))))
 (let ((?x158384 (ite (= ((_ extract 49 49) (bvxor ?x31589 C2)) (_ bv1 1)) (_ bv11 61) (ite (= ((_ extract 48 48) (bvxor ?x31589 C2)) (_ bv1 1)) (_ bv12 61) ?x158388))))
 (let ((?x158380 (ite (= ((_ extract 51 51) (bvxor ?x31589 C2)) (_ bv1 1)) (_ bv9 61) (ite (= ((_ extract 50 50) (bvxor ?x31589 C2)) (_ bv1 1)) (_ bv10 61) ?x158384))))
 (let ((?x158376 (ite (= ((_ extract 53 53) (bvxor ?x31589 C2)) (_ bv1 1)) (_ bv7 61) (ite (= ((_ extract 52 52) (bvxor ?x31589 C2)) (_ bv1 1)) (_ bv8 61) ?x158380))))
 (let ((?x158372 (ite (= ((_ extract 55 55) (bvxor ?x31589 C2)) (_ bv1 1)) (_ bv5 61) (ite (= ((_ extract 54 54) (bvxor ?x31589 C2)) (_ bv1 1)) (_ bv6 61) ?x158376))))
 (let ((?x158368 (ite (= ((_ extract 57 57) (bvxor ?x31589 C2)) (_ bv1 1)) (_ bv3 61) (ite (= ((_ extract 56 56) (bvxor ?x31589 C2)) (_ bv1 1)) (_ bv4 61) ?x158372))))
 (let ((?x158361 (ite (= ((_ extract 59 59) (bvxor ?x31589 C2)) (_ bv1 1)) (_ bv1 61) (ite (= ((_ extract 58 58) (bvxor ?x31589 C2)) (_ bv1 1)) (_ bv2 61) ?x158368))))
 (let ((?x158355 (bvshl (_ bv1 61) (bvsub (_ bv61 61) (ite (= ((_ extract 60 60) (bvxor ?x31589 C2)) (_ bv1 1)) (_ bv0 61) ?x158361)))))
 (let (($x158308 (=> $x131713 (= (bvand %B (bvsub ?x158355 (_ bv1 61))) (_ bv0 61)))))
 (and $x158308 $x158333 $x158304 $x158268))))))))))))))))))))))))))))))))))))))))))
(check-sat)
