(set-info :status unknown)
(declare-fun C2 () (_ BitVec 11))
(declare-fun C3 () (_ BitVec 11))
(declare-fun C () (_ BitVec 47))
(declare-fun %Op () (_ BitVec 47))
(assert
 (let ((?x21613 (bvsub C3 C2)))
 (let ((?x6319 (ite (and (distinct ((_ extract 2 2) ?x21613) (_ bv0 1)) true) (_ bv2 11) (ite (and (distinct ((_ extract 1 1) ?x21613) (_ bv0 1)) true) (_ bv1 11) (_ bv0 11)))))
 (let ((?x5927 (ite (and (distinct ((_ extract 5 5) ?x21613) (_ bv0 1)) true) (_ bv5 11) (ite (and (distinct ((_ extract 4 4) ?x21613) (_ bv0 1)) true) (_ bv4 11) (_ bv3 11)))))
 (let ((?x16329 (ite (and (distinct ((_ extract 8 8) ?x21613) (_ bv0 1)) true) (_ bv8 11) (ite (and (distinct ((_ extract 7 7) ?x21613) (_ bv0 1)) true) (_ bv7 11) (_ bv6 11)))))
 (let ((?x8647 (ite (and (distinct ((_ extract 10 9) ?x21613) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) ?x21613) (_ bv0 1)) true) (_ bv10 11) (_ bv9 11)) ?x16329)))
 (let ((?x20018 (ite (and (distinct ((_ extract 10 6) ?x21613) (_ bv0 5)) true) ?x8647 (ite (and (distinct ((_ extract 5 3) ?x21613) (_ bv0 3)) true) ?x5927 ?x6319))))
 (let ((?x12712 (ite (and (distinct ((_ extract 2 2) C) (_ bv0 1)) true) (_ bv2 11) (ite (and (distinct ((_ extract 1 1) C) (_ bv0 1)) true) (_ bv1 11) (_ bv0 11)))))
 (let ((?x23738 (ite (and (distinct ((_ extract 5 5) C) (_ bv0 1)) true) (_ bv5 11) (ite (and (distinct ((_ extract 4 4) C) (_ bv0 1)) true) (_ bv4 11) (_ bv3 11)))))
 (let ((?x12075 (ite (and (distinct ((_ extract 8 8) C) (_ bv0 1)) true) (_ bv8 11) (ite (and (distinct ((_ extract 7 7) C) (_ bv0 1)) true) (_ bv7 11) (_ bv6 11)))))
 (let ((?x16841 (ite (and (distinct ((_ extract 11 11) C) (_ bv0 1)) true) (_ bv11 11) (ite (and (distinct ((_ extract 10 10) C) (_ bv0 1)) true) (_ bv10 11) (_ bv9 11)))))
 (let ((?x18006 (ite (and (distinct ((_ extract 11 6) C) (_ bv0 6)) true) (ite (and (distinct ((_ extract 11 9) C) (_ bv0 3)) true) ?x16841 ?x12075) (ite (and (distinct ((_ extract 5 3) C) (_ bv0 3)) true) ?x23738 ?x12712))))
 (let ((?x5029 (ite (and (distinct ((_ extract 14 14) C) (_ bv0 1)) true) (_ bv14 11) (ite (and (distinct ((_ extract 13 13) C) (_ bv0 1)) true) (_ bv13 11) (_ bv12 11)))))
 (let ((?x11591 (ite (and (distinct ((_ extract 17 17) C) (_ bv0 1)) true) (_ bv17 11) (ite (and (distinct ((_ extract 16 16) C) (_ bv0 1)) true) (_ bv16 11) (_ bv15 11)))))
 (let ((?x11609 (ite (and (distinct ((_ extract 20 20) C) (_ bv0 1)) true) (_ bv20 11) (ite (and (distinct ((_ extract 19 19) C) (_ bv0 1)) true) (_ bv19 11) (_ bv18 11)))))
 (let ((?x19270 (ite (and (distinct ((_ extract 23 23) C) (_ bv0 1)) true) (_ bv23 11) (ite (and (distinct ((_ extract 22 22) C) (_ bv0 1)) true) (_ bv22 11) (_ bv21 11)))))
 (let ((?x16500 (ite (and (distinct ((_ extract 23 18) C) (_ bv0 6)) true) (ite (and (distinct ((_ extract 23 21) C) (_ bv0 3)) true) ?x19270 ?x11609) (ite (and (distinct ((_ extract 17 15) C) (_ bv0 3)) true) ?x11591 ?x5029))))
 (let ((?x15162 (ite (and (distinct ((_ extract 26 26) C) (_ bv0 1)) true) (_ bv26 11) (ite (and (distinct ((_ extract 25 25) C) (_ bv0 1)) true) (_ bv25 11) (_ bv24 11)))))
 (let ((?x14484 (ite (and (distinct ((_ extract 29 29) C) (_ bv0 1)) true) (_ bv29 11) (ite (and (distinct ((_ extract 28 28) C) (_ bv0 1)) true) (_ bv28 11) (_ bv27 11)))))
 (let ((?x11347 (ite (and (distinct ((_ extract 32 32) C) (_ bv0 1)) true) (_ bv32 11) (ite (and (distinct ((_ extract 31 31) C) (_ bv0 1)) true) (_ bv31 11) (_ bv30 11)))))
 (let ((?x18736 (ite (and (distinct ((_ extract 35 35) C) (_ bv0 1)) true) (_ bv35 11) (ite (and (distinct ((_ extract 34 34) C) (_ bv0 1)) true) (_ bv34 11) (_ bv33 11)))))
 (let ((?x6418 (ite (and (distinct ((_ extract 35 30) C) (_ bv0 6)) true) (ite (and (distinct ((_ extract 35 33) C) (_ bv0 3)) true) ?x18736 ?x11347) (ite (and (distinct ((_ extract 29 27) C) (_ bv0 3)) true) ?x14484 ?x15162))))
 (let ((?x170 (ite (and (distinct ((_ extract 38 38) C) (_ bv0 1)) true) (_ bv38 11) (ite (and (distinct ((_ extract 37 37) C) (_ bv0 1)) true) (_ bv37 11) (_ bv36 11)))))
 (let ((?x5272 (ite (and (distinct ((_ extract 41 41) C) (_ bv0 1)) true) (_ bv41 11) (ite (and (distinct ((_ extract 40 40) C) (_ bv0 1)) true) (_ bv40 11) (_ bv39 11)))))
 (let ((?x7373 (ite (and (distinct ((_ extract 44 44) C) (_ bv0 1)) true) (_ bv44 11) (ite (and (distinct ((_ extract 43 43) C) (_ bv0 1)) true) (_ bv43 11) (_ bv42 11)))))
 (let ((?x10153 (ite (and (distinct ((_ extract 46 45) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 46 46) C) (_ bv0 1)) true) (_ bv46 11) (_ bv45 11)) ?x7373)))
 (let ((?x7261 (ite (and (distinct ((_ extract 46 42) C) (_ bv0 5)) true) ?x10153 (ite (and (distinct ((_ extract 41 39) C) (_ bv0 3)) true) ?x5272 ?x170))))
 (let ((?x24468 (ite (and (distinct ((_ extract 46 24) C) (_ bv0 23)) true) (ite (and (distinct ((_ extract 46 36) C) (_ bv0 11)) true) ?x7261 ?x6418) (ite (and (distinct ((_ extract 23 12) C) (_ bv0 12)) true) ?x16500 ?x18006))))
 (let ((?x8818 (bvsub ?x24468 ?x20018)))
 (let ((?x18270 (ite (bvsgt (_ bv0 11) ?x8818) (_ bv0 11) ?x8818)))
 (let ((?x19013 (bvsub ?x20018 ?x24468)))
 (let ((?x5723 (ite (bvsgt (_ bv0 11) ?x19013) (_ bv0 11) ?x19013)))
 (let ((?x7870 (bvadd (bvxor (bvlshr (bvshl ((_ extract 10 0) (bvand %Op C)) ?x5723) ?x18270) ?x21613) C2)))
 (let ((?x23677 (ite (= (ite (and (distinct (bvand %Op C) (_ bv0 47)) true) (_ bv1 1) (_ bv0 1)) (_ bv1 1)) C2 C3)))
 (let ((?x19652 (ite (and (distinct ((_ extract 2 2) C) (_ bv0 1)) true) (_ bv2 32) (ite (and (distinct ((_ extract 1 1) C) (_ bv0 1)) true) (_ bv1 32) (_ bv0 32)))))
 (let ((?x19051 (ite (and (distinct ((_ extract 5 5) C) (_ bv0 1)) true) (_ bv5 32) (ite (and (distinct ((_ extract 4 4) C) (_ bv0 1)) true) (_ bv4 32) (_ bv3 32)))))
 (let ((?x16758 (ite (and (distinct ((_ extract 8 8) C) (_ bv0 1)) true) (_ bv8 32) (ite (and (distinct ((_ extract 7 7) C) (_ bv0 1)) true) (_ bv7 32) (_ bv6 32)))))
 (let ((?x12907 (ite (and (distinct ((_ extract 11 11) C) (_ bv0 1)) true) (_ bv11 32) (ite (and (distinct ((_ extract 10 10) C) (_ bv0 1)) true) (_ bv10 32) (_ bv9 32)))))
 (let ((?x21669 (ite (and (distinct ((_ extract 11 6) C) (_ bv0 6)) true) (ite (and (distinct ((_ extract 11 9) C) (_ bv0 3)) true) ?x12907 ?x16758) (ite (and (distinct ((_ extract 5 3) C) (_ bv0 3)) true) ?x19051 ?x19652))))
 (let ((?x12557 (ite (and (distinct ((_ extract 14 14) C) (_ bv0 1)) true) (_ bv14 32) (ite (and (distinct ((_ extract 13 13) C) (_ bv0 1)) true) (_ bv13 32) (_ bv12 32)))))
 (let ((?x11419 (ite (and (distinct ((_ extract 17 17) C) (_ bv0 1)) true) (_ bv17 32) (ite (and (distinct ((_ extract 16 16) C) (_ bv0 1)) true) (_ bv16 32) (_ bv15 32)))))
 (let ((?x8598 (ite (and (distinct ((_ extract 20 20) C) (_ bv0 1)) true) (_ bv20 32) (ite (and (distinct ((_ extract 19 19) C) (_ bv0 1)) true) (_ bv19 32) (_ bv18 32)))))
 (let ((?x3976 (ite (and (distinct ((_ extract 23 23) C) (_ bv0 1)) true) (_ bv23 32) (ite (and (distinct ((_ extract 22 22) C) (_ bv0 1)) true) (_ bv22 32) (_ bv21 32)))))
 (let ((?x13387 (ite (and (distinct ((_ extract 23 18) C) (_ bv0 6)) true) (ite (and (distinct ((_ extract 23 21) C) (_ bv0 3)) true) ?x3976 ?x8598) (ite (and (distinct ((_ extract 17 15) C) (_ bv0 3)) true) ?x11419 ?x12557))))
 (let ((?x1369 (ite (and (distinct ((_ extract 26 26) C) (_ bv0 1)) true) (_ bv26 32) (ite (and (distinct ((_ extract 25 25) C) (_ bv0 1)) true) (_ bv25 32) (_ bv24 32)))))
 (let ((?x786 (ite (and (distinct ((_ extract 29 29) C) (_ bv0 1)) true) (_ bv29 32) (ite (and (distinct ((_ extract 28 28) C) (_ bv0 1)) true) (_ bv28 32) (_ bv27 32)))))
 (let ((?x2992 (ite (and (distinct ((_ extract 32 32) C) (_ bv0 1)) true) (_ bv32 32) (ite (and (distinct ((_ extract 31 31) C) (_ bv0 1)) true) (_ bv31 32) (_ bv30 32)))))
 (let ((?x6296 (ite (and (distinct ((_ extract 35 35) C) (_ bv0 1)) true) (_ bv35 32) (ite (and (distinct ((_ extract 34 34) C) (_ bv0 1)) true) (_ bv34 32) (_ bv33 32)))))
 (let ((?x1180 (ite (and (distinct ((_ extract 35 30) C) (_ bv0 6)) true) (ite (and (distinct ((_ extract 35 33) C) (_ bv0 3)) true) ?x6296 ?x2992) (ite (and (distinct ((_ extract 29 27) C) (_ bv0 3)) true) ?x786 ?x1369))))
 (let ((?x8248 (ite (and (distinct ((_ extract 38 38) C) (_ bv0 1)) true) (_ bv38 32) (ite (and (distinct ((_ extract 37 37) C) (_ bv0 1)) true) (_ bv37 32) (_ bv36 32)))))
 (let ((?x21656 (ite (and (distinct ((_ extract 41 41) C) (_ bv0 1)) true) (_ bv41 32) (ite (and (distinct ((_ extract 40 40) C) (_ bv0 1)) true) (_ bv40 32) (_ bv39 32)))))
 (let ((?x8582 (ite (and (distinct ((_ extract 44 44) C) (_ bv0 1)) true) (_ bv44 32) (ite (and (distinct ((_ extract 43 43) C) (_ bv0 1)) true) (_ bv43 32) (_ bv42 32)))))
 (let ((?x8018 (ite (and (distinct ((_ extract 46 45) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 46 46) C) (_ bv0 1)) true) (_ bv46 32) (_ bv45 32)) ?x8582)))
 (let ((?x16056 (ite (and (distinct ((_ extract 46 42) C) (_ bv0 5)) true) ?x8018 (ite (and (distinct ((_ extract 41 39) C) (_ bv0 3)) true) ?x21656 ?x8248))))
 (let ((?x23904 (ite (and (distinct ((_ extract 46 24) C) (_ bv0 23)) true) (ite (and (distinct ((_ extract 46 36) C) (_ bv0 11)) true) ?x16056 ?x1180) (ite (and (distinct ((_ extract 23 12) C) (_ bv0 12)) true) ?x13387 ?x21669))))
 (and (and (and (distinct C (_ bv0 47)) true) (= (bvand C (bvsub C (_ bv1 47))) (_ bv0 47))) (and (and (distinct ?x21613 (_ bv0 11)) true) (= (bvand ?x21613 (bvsub ?x21613 (_ bv1 11))) (_ bv0 11))) (bvslt ?x23904 (_ bv11 32)) (and (distinct ?x23677 ?x7870) true)))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
