(set-info :status unknown)
(declare-fun C2 () (_ BitVec 11))
(declare-fun C1 () (_ BitVec 55))
(assert
 (let ((?x1367 (ite (and (distinct ((_ extract 2 2) C2) (_ bv0 1)) true) (_ bv2 55) (ite (and (distinct ((_ extract 1 1) C2) (_ bv0 1)) true) (_ bv1 55) (_ bv0 55)))))
 (let ((?x5052 (ite (and (distinct ((_ extract 5 5) C2) (_ bv0 1)) true) (_ bv5 55) (ite (and (distinct ((_ extract 4 4) C2) (_ bv0 1)) true) (_ bv4 55) (_ bv3 55)))))
 (let ((?x4083 (ite (and (distinct ((_ extract 8 8) C2) (_ bv0 1)) true) (_ bv8 55) (ite (and (distinct ((_ extract 7 7) C2) (_ bv0 1)) true) (_ bv7 55) (_ bv6 55)))))
 (let ((?x3561 (ite (and (distinct ((_ extract 10 9) C2) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) C2) (_ bv0 1)) true) (_ bv10 55) (_ bv9 55)) ?x4083)))
 (let ((?x1764 (ite (and (distinct ((_ extract 10 6) C2) (_ bv0 5)) true) ?x3561 (ite (and (distinct ((_ extract 5 3) C2) (_ bv0 3)) true) ?x5052 ?x1367))))
 (let ((?x6156 (ite (and (distinct ((_ extract 3 2) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 3 3) C1) (_ bv0 1)) true) (_ bv3 55) (_ bv2 55)) (ite (and (distinct ((_ extract 1 1) C1) (_ bv0 1)) true) (_ bv1 55) (_ bv0 55)))))
 (let ((?x3484 (ite (and (distinct ((_ extract 6 6) C1) (_ bv0 1)) true) (_ bv6 55) (ite (and (distinct ((_ extract 5 5) C1) (_ bv0 1)) true) (_ bv5 55) (_ bv4 55)))))
 (let ((?x5311 (ite (and (distinct ((_ extract 10 9) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) C1) (_ bv0 1)) true) (_ bv10 55) (_ bv9 55)) (ite (and (distinct ((_ extract 8 8) C1) (_ bv0 1)) true) (_ bv8 55) (_ bv7 55)))))
 (let ((?x4966 (ite (and (distinct ((_ extract 13 13) C1) (_ bv0 1)) true) (_ bv13 55) (ite (and (distinct ((_ extract 12 12) C1) (_ bv0 1)) true) (_ bv12 55) (_ bv11 55)))))
 (let ((?x5738 (ite (and (distinct ((_ extract 13 7) C1) (_ bv0 7)) true) (ite (and (distinct ((_ extract 13 11) C1) (_ bv0 3)) true) ?x4966 ?x5311) (ite (and (distinct ((_ extract 6 4) C1) (_ bv0 3)) true) ?x3484 ?x6156))))
 (let ((?x3067 (ite (and (distinct ((_ extract 17 16) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 17 17) C1) (_ bv0 1)) true) (_ bv17 55) (_ bv16 55)) (ite (and (distinct ((_ extract 15 15) C1) (_ bv0 1)) true) (_ bv15 55) (_ bv14 55)))))
 (let ((?x4848 (ite (and (distinct ((_ extract 20 20) C1) (_ bv0 1)) true) (_ bv20 55) (ite (and (distinct ((_ extract 19 19) C1) (_ bv0 1)) true) (_ bv19 55) (_ bv18 55)))))
 (let ((?x1624 (ite (and (distinct ((_ extract 24 23) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 24 24) C1) (_ bv0 1)) true) (_ bv24 55) (_ bv23 55)) (ite (and (distinct ((_ extract 22 22) C1) (_ bv0 1)) true) (_ bv22 55) (_ bv21 55)))))
 (let ((?x1166 (ite (and (distinct ((_ extract 27 27) C1) (_ bv0 1)) true) (_ bv27 55) (ite (and (distinct ((_ extract 26 26) C1) (_ bv0 1)) true) (_ bv26 55) (_ bv25 55)))))
 (let ((?x5382 (ite (and (distinct ((_ extract 27 21) C1) (_ bv0 7)) true) (ite (and (distinct ((_ extract 27 25) C1) (_ bv0 3)) true) ?x1166 ?x1624) (ite (and (distinct ((_ extract 20 18) C1) (_ bv0 3)) true) ?x4848 ?x3067))))
 (let ((?x2029 (ite (and (distinct ((_ extract 31 30) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 31 31) C1) (_ bv0 1)) true) (_ bv31 55) (_ bv30 55)) (ite (and (distinct ((_ extract 29 29) C1) (_ bv0 1)) true) (_ bv29 55) (_ bv28 55)))))
 (let ((?x2121 (ite (and (distinct ((_ extract 34 34) C1) (_ bv0 1)) true) (_ bv34 55) (ite (and (distinct ((_ extract 33 33) C1) (_ bv0 1)) true) (_ bv33 55) (_ bv32 55)))))
 (let ((?x5017 (ite (and (distinct ((_ extract 38 37) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 38 38) C1) (_ bv0 1)) true) (_ bv38 55) (_ bv37 55)) (ite (and (distinct ((_ extract 36 36) C1) (_ bv0 1)) true) (_ bv36 55) (_ bv35 55)))))
 (let ((?x3111 (ite (and (distinct ((_ extract 41 41) C1) (_ bv0 1)) true) (_ bv41 55) (ite (and (distinct ((_ extract 40 40) C1) (_ bv0 1)) true) (_ bv40 55) (_ bv39 55)))))
 (let ((?x1248 (ite (and (distinct ((_ extract 41 35) C1) (_ bv0 7)) true) (ite (and (distinct ((_ extract 41 39) C1) (_ bv0 3)) true) ?x3111 ?x5017) (ite (and (distinct ((_ extract 34 32) C1) (_ bv0 3)) true) ?x2121 ?x2029))))
 (let ((?x4928 (ite (and (distinct ((_ extract 45 44) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 45 45) C1) (_ bv0 1)) true) (_ bv45 55) (_ bv44 55)) (ite (and (distinct ((_ extract 43 43) C1) (_ bv0 1)) true) (_ bv43 55) (_ bv42 55)))))
 (let ((?x5012 (ite (and (distinct ((_ extract 48 48) C1) (_ bv0 1)) true) (_ bv48 55) (ite (and (distinct ((_ extract 47 47) C1) (_ bv0 1)) true) (_ bv47 55) (_ bv46 55)))))
 (let ((?x2690 (ite (and (distinct ((_ extract 51 51) C1) (_ bv0 1)) true) (_ bv51 55) (ite (and (distinct ((_ extract 50 50) C1) (_ bv0 1)) true) (_ bv50 55) (_ bv49 55)))))
 (let ((?x4226 (ite (and (distinct ((_ extract 54 54) C1) (_ bv0 1)) true) (_ bv54 55) (ite (and (distinct ((_ extract 53 53) C1) (_ bv0 1)) true) (_ bv53 55) (_ bv52 55)))))
 (let ((?x3521 (ite (and (distinct ((_ extract 54 49) C1) (_ bv0 6)) true) (ite (and (distinct ((_ extract 54 52) C1) (_ bv0 3)) true) ?x4226 ?x2690) (ite (and (distinct ((_ extract 48 46) C1) (_ bv0 3)) true) ?x5012 ?x4928))))
 (let ((?x4347 (ite (and (distinct ((_ extract 54 28) C1) (_ bv0 27)) true) (ite (and (distinct ((_ extract 54 42) C1) (_ bv0 13)) true) ?x3521 ?x1248) (ite (and (distinct ((_ extract 27 14) C1) (_ bv0 14)) true) ?x5382 ?x5738))))
 (let ((?x2064 (bvsub ?x4347 ?x1764)))
 (let ((?x1731 (ite (and (distinct ((_ extract 3 2) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 3 3) C1) (_ bv0 1)) true) (_ bv3 32) (_ bv2 32)) (ite (and (distinct ((_ extract 1 1) C1) (_ bv0 1)) true) (_ bv1 32) (_ bv0 32)))))
 (let ((?x2433 (ite (and (distinct ((_ extract 6 6) C1) (_ bv0 1)) true) (_ bv6 32) (ite (and (distinct ((_ extract 5 5) C1) (_ bv0 1)) true) (_ bv5 32) (_ bv4 32)))))
 (let ((?x4168 (ite (and (distinct ((_ extract 10 9) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) C1) (_ bv0 1)) true) (_ bv10 32) (_ bv9 32)) (ite (and (distinct ((_ extract 8 8) C1) (_ bv0 1)) true) (_ bv8 32) (_ bv7 32)))))
 (let ((?x5090 (ite (and (distinct ((_ extract 13 13) C1) (_ bv0 1)) true) (_ bv13 32) (ite (and (distinct ((_ extract 12 12) C1) (_ bv0 1)) true) (_ bv12 32) (_ bv11 32)))))
 (let ((?x6573 (ite (and (distinct ((_ extract 13 7) C1) (_ bv0 7)) true) (ite (and (distinct ((_ extract 13 11) C1) (_ bv0 3)) true) ?x5090 ?x4168) (ite (and (distinct ((_ extract 6 4) C1) (_ bv0 3)) true) ?x2433 ?x1731))))
 (let ((?x6110 (ite (and (distinct ((_ extract 17 16) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 17 17) C1) (_ bv0 1)) true) (_ bv17 32) (_ bv16 32)) (ite (and (distinct ((_ extract 15 15) C1) (_ bv0 1)) true) (_ bv15 32) (_ bv14 32)))))
 (let ((?x5055 (ite (and (distinct ((_ extract 20 20) C1) (_ bv0 1)) true) (_ bv20 32) (ite (and (distinct ((_ extract 19 19) C1) (_ bv0 1)) true) (_ bv19 32) (_ bv18 32)))))
 (let ((?x6262 (ite (and (distinct ((_ extract 24 23) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 24 24) C1) (_ bv0 1)) true) (_ bv24 32) (_ bv23 32)) (ite (and (distinct ((_ extract 22 22) C1) (_ bv0 1)) true) (_ bv22 32) (_ bv21 32)))))
 (let ((?x5583 (ite (and (distinct ((_ extract 27 27) C1) (_ bv0 1)) true) (_ bv27 32) (ite (and (distinct ((_ extract 26 26) C1) (_ bv0 1)) true) (_ bv26 32) (_ bv25 32)))))
 (let ((?x2765 (ite (and (distinct ((_ extract 27 21) C1) (_ bv0 7)) true) (ite (and (distinct ((_ extract 27 25) C1) (_ bv0 3)) true) ?x5583 ?x6262) (ite (and (distinct ((_ extract 20 18) C1) (_ bv0 3)) true) ?x5055 ?x6110))))
 (let ((?x4681 (ite (and (distinct ((_ extract 31 30) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 31 31) C1) (_ bv0 1)) true) (_ bv31 32) (_ bv30 32)) (ite (and (distinct ((_ extract 29 29) C1) (_ bv0 1)) true) (_ bv29 32) (_ bv28 32)))))
 (let ((?x4268 (ite (and (distinct ((_ extract 34 34) C1) (_ bv0 1)) true) (_ bv34 32) (ite (and (distinct ((_ extract 33 33) C1) (_ bv0 1)) true) (_ bv33 32) (_ bv32 32)))))
 (let ((?x4191 (ite (and (distinct ((_ extract 38 37) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 38 38) C1) (_ bv0 1)) true) (_ bv38 32) (_ bv37 32)) (ite (and (distinct ((_ extract 36 36) C1) (_ bv0 1)) true) (_ bv36 32) (_ bv35 32)))))
 (let ((?x3135 (ite (and (distinct ((_ extract 41 41) C1) (_ bv0 1)) true) (_ bv41 32) (ite (and (distinct ((_ extract 40 40) C1) (_ bv0 1)) true) (_ bv40 32) (_ bv39 32)))))
 (let ((?x4618 (ite (and (distinct ((_ extract 41 35) C1) (_ bv0 7)) true) (ite (and (distinct ((_ extract 41 39) C1) (_ bv0 3)) true) ?x3135 ?x4191) (ite (and (distinct ((_ extract 34 32) C1) (_ bv0 3)) true) ?x4268 ?x4681))))
 (let ((?x2589 (ite (and (distinct ((_ extract 45 44) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 45 45) C1) (_ bv0 1)) true) (_ bv45 32) (_ bv44 32)) (ite (and (distinct ((_ extract 43 43) C1) (_ bv0 1)) true) (_ bv43 32) (_ bv42 32)))))
 (let ((?x2959 (ite (and (distinct ((_ extract 48 48) C1) (_ bv0 1)) true) (_ bv48 32) (ite (and (distinct ((_ extract 47 47) C1) (_ bv0 1)) true) (_ bv47 32) (_ bv46 32)))))
 (let ((?x2021 (ite (and (distinct ((_ extract 51 51) C1) (_ bv0 1)) true) (_ bv51 32) (ite (and (distinct ((_ extract 50 50) C1) (_ bv0 1)) true) (_ bv50 32) (_ bv49 32)))))
 (let ((?x5503 (ite (and (distinct ((_ extract 54 54) C1) (_ bv0 1)) true) (_ bv54 32) (ite (and (distinct ((_ extract 53 53) C1) (_ bv0 1)) true) (_ bv53 32) (_ bv52 32)))))
 (let ((?x2369 (ite (and (distinct ((_ extract 54 49) C1) (_ bv0 6)) true) (ite (and (distinct ((_ extract 54 52) C1) (_ bv0 3)) true) ?x5503 ?x2021) (ite (and (distinct ((_ extract 48 46) C1) (_ bv0 3)) true) ?x2959 ?x2589))))
 (let ((?x5646 (ite (and (distinct ((_ extract 54 28) C1) (_ bv0 27)) true) (ite (and (distinct ((_ extract 54 42) C1) (_ bv0 13)) true) ?x2369 ?x4618) (ite (and (distinct ((_ extract 27 14) C1) (_ bv0 14)) true) ?x2765 ?x6573))))
 (let ((?x2440 (ite (and (distinct ((_ extract 2 2) C2) (_ bv0 1)) true) (_ bv2 32) (ite (and (distinct ((_ extract 1 1) C2) (_ bv0 1)) true) (_ bv1 32) (_ bv0 32)))))
 (let ((?x5655 (ite (and (distinct ((_ extract 5 5) C2) (_ bv0 1)) true) (_ bv5 32) (ite (and (distinct ((_ extract 4 4) C2) (_ bv0 1)) true) (_ bv4 32) (_ bv3 32)))))
 (let ((?x6333 (ite (and (distinct ((_ extract 8 8) C2) (_ bv0 1)) true) (_ bv8 32) (ite (and (distinct ((_ extract 7 7) C2) (_ bv0 1)) true) (_ bv7 32) (_ bv6 32)))))
 (let ((?x4497 (ite (and (distinct ((_ extract 10 9) C2) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) C2) (_ bv0 1)) true) (_ bv10 32) (_ bv9 32)) ?x6333)))
 (let ((?x3105 (ite (and (distinct ((_ extract 10 6) C2) (_ bv0 5)) true) ?x4497 (ite (and (distinct ((_ extract 5 3) C2) (_ bv0 3)) true) ?x5655 ?x2440))))
 (and (and (and (distinct C1 (_ bv0 55)) true) (= (bvand C1 (bvsub C1 (_ bv1 55))) (_ bv0 55))) (and (and (distinct C2 (_ bv0 11)) true) (= (bvand C2 (bvsub C2 (_ bv1 11))) (_ bv0 11))) (bvslt ?x3105 ?x5646) (not (bvult ?x2064 (_ bv55 55))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
