(set-info :source |
 Generated by Alive 0.1
 More info in N. P. Lopes, D. Menendez, S. Nagarakatte, J. Regehr.
 Provably Correct Peephole Optimizations with Alive. In PLDI'15.
|)

(set-info :status unknown)
(declare-fun mem0 () (_ BitVec 8))
(declare-fun |ana_MaskedValueIsZero(%A, lshr(-1, countLeadingZeros(C)))| () (_ BitVec 1))
(declare-fun C () (_ BitVec 46))
(declare-fun %A () (_ BitVec 46))
(assert
 (let (($x927 (and (distinct mem0 mem0) true)))
 (let (($x186517 (= |ana_MaskedValueIsZero(%A, lshr(-1, countLeadingZeros(C)))| (_ bv1 1))))
 (let ((?x190166 (ite (= ((_ extract 1 1) C) (_ bv1 1)) (_ bv44 46) (ite (= ((_ extract 0 0) C) (_ bv1 1)) (_ bv45 46) (_ bv46 46)))))
 (let ((?x190162 (ite (= ((_ extract 3 3) C) (_ bv1 1)) (_ bv42 46) (ite (= ((_ extract 2 2) C) (_ bv1 1)) (_ bv43 46) ?x190166))))
 (let ((?x190155 (ite (= ((_ extract 5 5) C) (_ bv1 1)) (_ bv40 46) (ite (= ((_ extract 4 4) C) (_ bv1 1)) (_ bv41 46) ?x190162))))
 (let ((?x190148 (ite (= ((_ extract 7 7) C) (_ bv1 1)) (_ bv38 46) (ite (= ((_ extract 6 6) C) (_ bv1 1)) (_ bv39 46) ?x190155))))
 (let ((?x190144 (ite (= ((_ extract 9 9) C) (_ bv1 1)) (_ bv36 46) (ite (= ((_ extract 8 8) C) (_ bv1 1)) (_ bv37 46) ?x190148))))
 (let ((?x190137 (ite (= ((_ extract 11 11) C) (_ bv1 1)) (_ bv34 46) (ite (= ((_ extract 10 10) C) (_ bv1 1)) (_ bv35 46) ?x190144))))
 (let ((?x190307 (ite (= ((_ extract 13 13) C) (_ bv1 1)) (_ bv32 46) (ite (= ((_ extract 12 12) C) (_ bv1 1)) (_ bv33 46) ?x190137))))
 (let ((?x190309 (ite (= ((_ extract 15 15) C) (_ bv1 1)) (_ bv30 46) (ite (= ((_ extract 14 14) C) (_ bv1 1)) (_ bv31 46) ?x190307))))
 (let ((?x190311 (ite (= ((_ extract 17 17) C) (_ bv1 1)) (_ bv28 46) (ite (= ((_ extract 16 16) C) (_ bv1 1)) (_ bv29 46) ?x190309))))
 (let ((?x190313 (ite (= ((_ extract 19 19) C) (_ bv1 1)) (_ bv26 46) (ite (= ((_ extract 18 18) C) (_ bv1 1)) (_ bv27 46) ?x190311))))
 (let ((?x190315 (ite (= ((_ extract 21 21) C) (_ bv1 1)) (_ bv24 46) (ite (= ((_ extract 20 20) C) (_ bv1 1)) (_ bv25 46) ?x190313))))
 (let ((?x190317 (ite (= ((_ extract 23 23) C) (_ bv1 1)) (_ bv22 46) (ite (= ((_ extract 22 22) C) (_ bv1 1)) (_ bv23 46) ?x190315))))
 (let ((?x190319 (ite (= ((_ extract 25 25) C) (_ bv1 1)) (_ bv20 46) (ite (= ((_ extract 24 24) C) (_ bv1 1)) (_ bv21 46) ?x190317))))
 (let ((?x190321 (ite (= ((_ extract 27 27) C) (_ bv1 1)) (_ bv18 46) (ite (= ((_ extract 26 26) C) (_ bv1 1)) (_ bv19 46) ?x190319))))
 (let ((?x190323 (ite (= ((_ extract 29 29) C) (_ bv1 1)) (_ bv16 46) (ite (= ((_ extract 28 28) C) (_ bv1 1)) (_ bv17 46) ?x190321))))
 (let ((?x190325 (ite (= ((_ extract 31 31) C) (_ bv1 1)) (_ bv14 46) (ite (= ((_ extract 30 30) C) (_ bv1 1)) (_ bv15 46) ?x190323))))
 (let ((?x190327 (ite (= ((_ extract 33 33) C) (_ bv1 1)) (_ bv12 46) (ite (= ((_ extract 32 32) C) (_ bv1 1)) (_ bv13 46) ?x190325))))
 (let ((?x190329 (ite (= ((_ extract 35 35) C) (_ bv1 1)) (_ bv10 46) (ite (= ((_ extract 34 34) C) (_ bv1 1)) (_ bv11 46) ?x190327))))
 (let ((?x190331 (ite (= ((_ extract 37 37) C) (_ bv1 1)) (_ bv8 46) (ite (= ((_ extract 36 36) C) (_ bv1 1)) (_ bv9 46) ?x190329))))
 (let ((?x190333 (ite (= ((_ extract 39 39) C) (_ bv1 1)) (_ bv6 46) (ite (= ((_ extract 38 38) C) (_ bv1 1)) (_ bv7 46) ?x190331))))
 (let ((?x190335 (ite (= ((_ extract 41 41) C) (_ bv1 1)) (_ bv4 46) (ite (= ((_ extract 40 40) C) (_ bv1 1)) (_ bv5 46) ?x190333))))
 (let ((?x190337 (ite (= ((_ extract 43 43) C) (_ bv1 1)) (_ bv2 46) (ite (= ((_ extract 42 42) C) (_ bv1 1)) (_ bv3 46) ?x190335))))
 (let ((?x190339 (ite (= ((_ extract 45 45) C) (_ bv1 1)) (_ bv0 46) (ite (= ((_ extract 44 44) C) (_ bv1 1)) (_ bv1 46) ?x190337))))
 (let (($x190346 (=> $x186517 (= (bvand %A (bvlshr (_ bv70368744177663 46) ?x190339)) (_ bv0 46)))))
 (and $x190346 $x186517 $x927))))))))))))))))))))))))))))
(check-sat)
