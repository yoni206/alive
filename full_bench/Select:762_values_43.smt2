(set-info :status unknown)
(declare-fun C3 () (_ BitVec 11))
(declare-fun C2 () (_ BitVec 11))
(declare-fun C () (_ BitVec 47))
(declare-fun %Op () (_ BitVec 47))
(assert
 (let ((?x9439 (bvsub C2 C3)))
 (let ((?x10417 (ite (and (distinct ((_ extract 2 2) ?x9439) (_ bv0 1)) true) (_ bv2 11) (ite (and (distinct ((_ extract 1 1) ?x9439) (_ bv0 1)) true) (_ bv1 11) (_ bv0 11)))))
 (let ((?x16073 (ite (and (distinct ((_ extract 5 5) ?x9439) (_ bv0 1)) true) (_ bv5 11) (ite (and (distinct ((_ extract 4 4) ?x9439) (_ bv0 1)) true) (_ bv4 11) (_ bv3 11)))))
 (let ((?x3213 (ite (and (distinct ((_ extract 8 8) ?x9439) (_ bv0 1)) true) (_ bv8 11) (ite (and (distinct ((_ extract 7 7) ?x9439) (_ bv0 1)) true) (_ bv7 11) (_ bv6 11)))))
 (let ((?x10369 (ite (and (distinct ((_ extract 10 9) ?x9439) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) ?x9439) (_ bv0 1)) true) (_ bv10 11) (_ bv9 11)) ?x3213)))
 (let ((?x15760 (ite (and (distinct ((_ extract 10 6) ?x9439) (_ bv0 5)) true) ?x10369 (ite (and (distinct ((_ extract 5 3) ?x9439) (_ bv0 3)) true) ?x16073 ?x10417))))
 (let ((?x3559 (ite (and (distinct ((_ extract 2 2) C) (_ bv0 1)) true) (_ bv2 11) (ite (and (distinct ((_ extract 1 1) C) (_ bv0 1)) true) (_ bv1 11) (_ bv0 11)))))
 (let ((?x6187 (ite (and (distinct ((_ extract 5 5) C) (_ bv0 1)) true) (_ bv5 11) (ite (and (distinct ((_ extract 4 4) C) (_ bv0 1)) true) (_ bv4 11) (_ bv3 11)))))
 (let ((?x12447 (ite (and (distinct ((_ extract 8 8) C) (_ bv0 1)) true) (_ bv8 11) (ite (and (distinct ((_ extract 7 7) C) (_ bv0 1)) true) (_ bv7 11) (_ bv6 11)))))
 (let ((?x6532 (ite (and (distinct ((_ extract 11 11) C) (_ bv0 1)) true) (_ bv11 11) (ite (and (distinct ((_ extract 10 10) C) (_ bv0 1)) true) (_ bv10 11) (_ bv9 11)))))
 (let ((?x14931 (ite (and (distinct ((_ extract 11 6) C) (_ bv0 6)) true) (ite (and (distinct ((_ extract 11 9) C) (_ bv0 3)) true) ?x6532 ?x12447) (ite (and (distinct ((_ extract 5 3) C) (_ bv0 3)) true) ?x6187 ?x3559))))
 (let ((?x12658 (ite (and (distinct ((_ extract 14 14) C) (_ bv0 1)) true) (_ bv14 11) (ite (and (distinct ((_ extract 13 13) C) (_ bv0 1)) true) (_ bv13 11) (_ bv12 11)))))
 (let ((?x13287 (ite (and (distinct ((_ extract 17 17) C) (_ bv0 1)) true) (_ bv17 11) (ite (and (distinct ((_ extract 16 16) C) (_ bv0 1)) true) (_ bv16 11) (_ bv15 11)))))
 (let ((?x20655 (ite (and (distinct ((_ extract 20 20) C) (_ bv0 1)) true) (_ bv20 11) (ite (and (distinct ((_ extract 19 19) C) (_ bv0 1)) true) (_ bv19 11) (_ bv18 11)))))
 (let ((?x20665 (ite (and (distinct ((_ extract 23 23) C) (_ bv0 1)) true) (_ bv23 11) (ite (and (distinct ((_ extract 22 22) C) (_ bv0 1)) true) (_ bv22 11) (_ bv21 11)))))
 (let ((?x18337 (ite (and (distinct ((_ extract 23 18) C) (_ bv0 6)) true) (ite (and (distinct ((_ extract 23 21) C) (_ bv0 3)) true) ?x20665 ?x20655) (ite (and (distinct ((_ extract 17 15) C) (_ bv0 3)) true) ?x13287 ?x12658))))
 (let ((?x14429 (ite (and (distinct ((_ extract 26 26) C) (_ bv0 1)) true) (_ bv26 11) (ite (and (distinct ((_ extract 25 25) C) (_ bv0 1)) true) (_ bv25 11) (_ bv24 11)))))
 (let ((?x14030 (ite (and (distinct ((_ extract 29 29) C) (_ bv0 1)) true) (_ bv29 11) (ite (and (distinct ((_ extract 28 28) C) (_ bv0 1)) true) (_ bv28 11) (_ bv27 11)))))
 (let ((?x13233 (ite (and (distinct ((_ extract 32 32) C) (_ bv0 1)) true) (_ bv32 11) (ite (and (distinct ((_ extract 31 31) C) (_ bv0 1)) true) (_ bv31 11) (_ bv30 11)))))
 (let ((?x19028 (ite (and (distinct ((_ extract 35 35) C) (_ bv0 1)) true) (_ bv35 11) (ite (and (distinct ((_ extract 34 34) C) (_ bv0 1)) true) (_ bv34 11) (_ bv33 11)))))
 (let ((?x9661 (ite (and (distinct ((_ extract 35 30) C) (_ bv0 6)) true) (ite (and (distinct ((_ extract 35 33) C) (_ bv0 3)) true) ?x19028 ?x13233) (ite (and (distinct ((_ extract 29 27) C) (_ bv0 3)) true) ?x14030 ?x14429))))
 (let ((?x16163 (ite (and (distinct ((_ extract 38 38) C) (_ bv0 1)) true) (_ bv38 11) (ite (and (distinct ((_ extract 37 37) C) (_ bv0 1)) true) (_ bv37 11) (_ bv36 11)))))
 (let ((?x6015 (ite (and (distinct ((_ extract 41 41) C) (_ bv0 1)) true) (_ bv41 11) (ite (and (distinct ((_ extract 40 40) C) (_ bv0 1)) true) (_ bv40 11) (_ bv39 11)))))
 (let ((?x1948 (ite (and (distinct ((_ extract 44 44) C) (_ bv0 1)) true) (_ bv44 11) (ite (and (distinct ((_ extract 43 43) C) (_ bv0 1)) true) (_ bv43 11) (_ bv42 11)))))
 (let ((?x7353 (ite (and (distinct ((_ extract 46 45) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 46 46) C) (_ bv0 1)) true) (_ bv46 11) (_ bv45 11)) ?x1948)))
 (let ((?x8422 (ite (and (distinct ((_ extract 46 42) C) (_ bv0 5)) true) ?x7353 (ite (and (distinct ((_ extract 41 39) C) (_ bv0 3)) true) ?x6015 ?x16163))))
 (let ((?x15219 (ite (and (distinct ((_ extract 46 24) C) (_ bv0 23)) true) (ite (and (distinct ((_ extract 46 36) C) (_ bv0 11)) true) ?x8422 ?x9661) (ite (and (distinct ((_ extract 23 12) C) (_ bv0 12)) true) ?x18337 ?x14931))))
 (let ((?x11609 (bvsub ?x15219 ?x15760)))
 (let ((?x7663 (ite (bvsgt (_ bv0 11) ?x11609) (_ bv0 11) ?x11609)))
 (let ((?x17610 (bvsub ?x15760 ?x15219)))
 (let ((?x9574 (ite (bvsgt (_ bv0 11) ?x17610) (_ bv0 11) ?x17610)))
 (let ((?x7952 (bvadd (bvxor (bvlshr (bvshl ((_ extract 10 0) (bvand %Op C)) ?x9574) ?x7663) ?x9439) C3)))
 (let (($x23854 (and (distinct (ite (= (ite (= (bvand %Op C) (_ bv0 47)) (_ bv1 1) (_ bv0 1)) (_ bv1 1)) C2 C3) ?x7952) true)))
 (let ((?x20410 (ite (and (distinct ((_ extract 2 2) C) (_ bv0 1)) true) (_ bv2 32) (ite (and (distinct ((_ extract 1 1) C) (_ bv0 1)) true) (_ bv1 32) (_ bv0 32)))))
 (let ((?x16664 (ite (and (distinct ((_ extract 5 5) C) (_ bv0 1)) true) (_ bv5 32) (ite (and (distinct ((_ extract 4 4) C) (_ bv0 1)) true) (_ bv4 32) (_ bv3 32)))))
 (let ((?x13589 (ite (and (distinct ((_ extract 8 8) C) (_ bv0 1)) true) (_ bv8 32) (ite (and (distinct ((_ extract 7 7) C) (_ bv0 1)) true) (_ bv7 32) (_ bv6 32)))))
 (let ((?x13342 (ite (and (distinct ((_ extract 11 11) C) (_ bv0 1)) true) (_ bv11 32) (ite (and (distinct ((_ extract 10 10) C) (_ bv0 1)) true) (_ bv10 32) (_ bv9 32)))))
 (let ((?x20363 (ite (and (distinct ((_ extract 11 6) C) (_ bv0 6)) true) (ite (and (distinct ((_ extract 11 9) C) (_ bv0 3)) true) ?x13342 ?x13589) (ite (and (distinct ((_ extract 5 3) C) (_ bv0 3)) true) ?x16664 ?x20410))))
 (let ((?x10320 (ite (and (distinct ((_ extract 14 14) C) (_ bv0 1)) true) (_ bv14 32) (ite (and (distinct ((_ extract 13 13) C) (_ bv0 1)) true) (_ bv13 32) (_ bv12 32)))))
 (let ((?x9506 (ite (and (distinct ((_ extract 17 17) C) (_ bv0 1)) true) (_ bv17 32) (ite (and (distinct ((_ extract 16 16) C) (_ bv0 1)) true) (_ bv16 32) (_ bv15 32)))))
 (let ((?x7221 (ite (and (distinct ((_ extract 20 20) C) (_ bv0 1)) true) (_ bv20 32) (ite (and (distinct ((_ extract 19 19) C) (_ bv0 1)) true) (_ bv19 32) (_ bv18 32)))))
 (let ((?x6715 (ite (and (distinct ((_ extract 23 23) C) (_ bv0 1)) true) (_ bv23 32) (ite (and (distinct ((_ extract 22 22) C) (_ bv0 1)) true) (_ bv22 32) (_ bv21 32)))))
 (let ((?x11131 (ite (and (distinct ((_ extract 23 18) C) (_ bv0 6)) true) (ite (and (distinct ((_ extract 23 21) C) (_ bv0 3)) true) ?x6715 ?x7221) (ite (and (distinct ((_ extract 17 15) C) (_ bv0 3)) true) ?x9506 ?x10320))))
 (let ((?x7539 (ite (and (distinct ((_ extract 26 26) C) (_ bv0 1)) true) (_ bv26 32) (ite (and (distinct ((_ extract 25 25) C) (_ bv0 1)) true) (_ bv25 32) (_ bv24 32)))))
 (let ((?x10462 (ite (and (distinct ((_ extract 29 29) C) (_ bv0 1)) true) (_ bv29 32) (ite (and (distinct ((_ extract 28 28) C) (_ bv0 1)) true) (_ bv28 32) (_ bv27 32)))))
 (let ((?x2356 (ite (and (distinct ((_ extract 32 32) C) (_ bv0 1)) true) (_ bv32 32) (ite (and (distinct ((_ extract 31 31) C) (_ bv0 1)) true) (_ bv31 32) (_ bv30 32)))))
 (let ((?x12643 (ite (and (distinct ((_ extract 35 35) C) (_ bv0 1)) true) (_ bv35 32) (ite (and (distinct ((_ extract 34 34) C) (_ bv0 1)) true) (_ bv34 32) (_ bv33 32)))))
 (let ((?x2089 (ite (and (distinct ((_ extract 35 30) C) (_ bv0 6)) true) (ite (and (distinct ((_ extract 35 33) C) (_ bv0 3)) true) ?x12643 ?x2356) (ite (and (distinct ((_ extract 29 27) C) (_ bv0 3)) true) ?x10462 ?x7539))))
 (let ((?x2982 (ite (and (distinct ((_ extract 38 38) C) (_ bv0 1)) true) (_ bv38 32) (ite (and (distinct ((_ extract 37 37) C) (_ bv0 1)) true) (_ bv37 32) (_ bv36 32)))))
 (let ((?x765 (ite (and (distinct ((_ extract 41 41) C) (_ bv0 1)) true) (_ bv41 32) (ite (and (distinct ((_ extract 40 40) C) (_ bv0 1)) true) (_ bv40 32) (_ bv39 32)))))
 (let ((?x869 (ite (and (distinct ((_ extract 44 44) C) (_ bv0 1)) true) (_ bv44 32) (ite (and (distinct ((_ extract 43 43) C) (_ bv0 1)) true) (_ bv43 32) (_ bv42 32)))))
 (let ((?x5515 (ite (and (distinct ((_ extract 46 45) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 46 46) C) (_ bv0 1)) true) (_ bv46 32) (_ bv45 32)) ?x869)))
 (let ((?x20722 (ite (and (distinct ((_ extract 46 42) C) (_ bv0 5)) true) ?x5515 (ite (and (distinct ((_ extract 41 39) C) (_ bv0 3)) true) ?x765 ?x2982))))
 (let ((?x21203 (ite (and (distinct ((_ extract 46 24) C) (_ bv0 23)) true) (ite (and (distinct ((_ extract 46 36) C) (_ bv0 11)) true) ?x20722 ?x2089) (ite (and (distinct ((_ extract 23 12) C) (_ bv0 12)) true) ?x11131 ?x20363))))
 (and (and (and (distinct C (_ bv0 47)) true) (= (bvand C (bvsub C (_ bv1 47))) (_ bv0 47))) (and (and (distinct ?x9439 (_ bv0 11)) true) (= (bvand ?x9439 (bvsub ?x9439 (_ bv1 11))) (_ bv0 11))) (bvslt ?x21203 (_ bv11 32)) $x23854))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
