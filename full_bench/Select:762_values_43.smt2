(set-info :status unknown)
(declare-fun C3 () (_ BitVec 11))
(declare-fun C2 () (_ BitVec 11))
(declare-fun C () (_ BitVec 47))
(declare-fun %Op () (_ BitVec 47))
(assert
 (let ((?x2118 (bvsub C2 C3)))
 (let ((?x3525 (ite (and (distinct ((_ extract 2 2) ?x2118) (_ bv0 1)) true) (_ bv2 11) (ite (and (distinct ((_ extract 1 1) ?x2118) (_ bv0 1)) true) (_ bv1 11) (_ bv0 11)))))
 (let ((?x1188 (ite (and (distinct ((_ extract 5 5) ?x2118) (_ bv0 1)) true) (_ bv5 11) (ite (and (distinct ((_ extract 4 4) ?x2118) (_ bv0 1)) true) (_ bv4 11) (_ bv3 11)))))
 (let ((?x6527 (ite (and (distinct ((_ extract 8 8) ?x2118) (_ bv0 1)) true) (_ bv8 11) (ite (and (distinct ((_ extract 7 7) ?x2118) (_ bv0 1)) true) (_ bv7 11) (_ bv6 11)))))
 (let ((?x1555 (ite (and (distinct ((_ extract 10 9) ?x2118) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) ?x2118) (_ bv0 1)) true) (_ bv10 11) (_ bv9 11)) ?x6527)))
 (let ((?x2752 (ite (and (distinct ((_ extract 10 6) ?x2118) (_ bv0 5)) true) ?x1555 (ite (and (distinct ((_ extract 5 3) ?x2118) (_ bv0 3)) true) ?x1188 ?x3525))))
 (let ((?x2696 (ite (and (distinct ((_ extract 2 2) C) (_ bv0 1)) true) (_ bv2 11) (ite (and (distinct ((_ extract 1 1) C) (_ bv0 1)) true) (_ bv1 11) (_ bv0 11)))))
 (let ((?x7149 (ite (and (distinct ((_ extract 5 5) C) (_ bv0 1)) true) (_ bv5 11) (ite (and (distinct ((_ extract 4 4) C) (_ bv0 1)) true) (_ bv4 11) (_ bv3 11)))))
 (let ((?x7541 (ite (and (distinct ((_ extract 8 8) C) (_ bv0 1)) true) (_ bv8 11) (ite (and (distinct ((_ extract 7 7) C) (_ bv0 1)) true) (_ bv7 11) (_ bv6 11)))))
 (let ((?x6373 (ite (and (distinct ((_ extract 11 11) C) (_ bv0 1)) true) (_ bv11 11) (ite (and (distinct ((_ extract 10 10) C) (_ bv0 1)) true) (_ bv10 11) (_ bv9 11)))))
 (let ((?x6692 (ite (and (distinct ((_ extract 11 6) C) (_ bv0 6)) true) (ite (and (distinct ((_ extract 11 9) C) (_ bv0 3)) true) ?x6373 ?x7541) (ite (and (distinct ((_ extract 5 3) C) (_ bv0 3)) true) ?x7149 ?x2696))))
 (let ((?x4915 (ite (and (distinct ((_ extract 14 14) C) (_ bv0 1)) true) (_ bv14 11) (ite (and (distinct ((_ extract 13 13) C) (_ bv0 1)) true) (_ bv13 11) (_ bv12 11)))))
 (let ((?x4108 (ite (and (distinct ((_ extract 17 17) C) (_ bv0 1)) true) (_ bv17 11) (ite (and (distinct ((_ extract 16 16) C) (_ bv0 1)) true) (_ bv16 11) (_ bv15 11)))))
 (let ((?x5039 (ite (and (distinct ((_ extract 20 20) C) (_ bv0 1)) true) (_ bv20 11) (ite (and (distinct ((_ extract 19 19) C) (_ bv0 1)) true) (_ bv19 11) (_ bv18 11)))))
 (let ((?x7757 (ite (and (distinct ((_ extract 23 23) C) (_ bv0 1)) true) (_ bv23 11) (ite (and (distinct ((_ extract 22 22) C) (_ bv0 1)) true) (_ bv22 11) (_ bv21 11)))))
 (let ((?x6383 (ite (and (distinct ((_ extract 23 18) C) (_ bv0 6)) true) (ite (and (distinct ((_ extract 23 21) C) (_ bv0 3)) true) ?x7757 ?x5039) (ite (and (distinct ((_ extract 17 15) C) (_ bv0 3)) true) ?x4108 ?x4915))))
 (let ((?x5696 (ite (and (distinct ((_ extract 26 26) C) (_ bv0 1)) true) (_ bv26 11) (ite (and (distinct ((_ extract 25 25) C) (_ bv0 1)) true) (_ bv25 11) (_ bv24 11)))))
 (let ((?x4795 (ite (and (distinct ((_ extract 29 29) C) (_ bv0 1)) true) (_ bv29 11) (ite (and (distinct ((_ extract 28 28) C) (_ bv0 1)) true) (_ bv28 11) (_ bv27 11)))))
 (let ((?x3969 (ite (and (distinct ((_ extract 32 32) C) (_ bv0 1)) true) (_ bv32 11) (ite (and (distinct ((_ extract 31 31) C) (_ bv0 1)) true) (_ bv31 11) (_ bv30 11)))))
 (let ((?x6542 (ite (and (distinct ((_ extract 35 35) C) (_ bv0 1)) true) (_ bv35 11) (ite (and (distinct ((_ extract 34 34) C) (_ bv0 1)) true) (_ bv34 11) (_ bv33 11)))))
 (let ((?x4663 (ite (and (distinct ((_ extract 35 30) C) (_ bv0 6)) true) (ite (and (distinct ((_ extract 35 33) C) (_ bv0 3)) true) ?x6542 ?x3969) (ite (and (distinct ((_ extract 29 27) C) (_ bv0 3)) true) ?x4795 ?x5696))))
 (let ((?x4270 (ite (and (distinct ((_ extract 38 38) C) (_ bv0 1)) true) (_ bv38 11) (ite (and (distinct ((_ extract 37 37) C) (_ bv0 1)) true) (_ bv37 11) (_ bv36 11)))))
 (let ((?x2213 (ite (and (distinct ((_ extract 41 41) C) (_ bv0 1)) true) (_ bv41 11) (ite (and (distinct ((_ extract 40 40) C) (_ bv0 1)) true) (_ bv40 11) (_ bv39 11)))))
 (let ((?x4894 (ite (and (distinct ((_ extract 44 44) C) (_ bv0 1)) true) (_ bv44 11) (ite (and (distinct ((_ extract 43 43) C) (_ bv0 1)) true) (_ bv43 11) (_ bv42 11)))))
 (let ((?x5930 (ite (and (distinct ((_ extract 46 45) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 46 46) C) (_ bv0 1)) true) (_ bv46 11) (_ bv45 11)) ?x4894)))
 (let ((?x2962 (ite (and (distinct ((_ extract 46 42) C) (_ bv0 5)) true) ?x5930 (ite (and (distinct ((_ extract 41 39) C) (_ bv0 3)) true) ?x2213 ?x4270))))
 (let ((?x1447 (ite (and (distinct ((_ extract 46 24) C) (_ bv0 23)) true) (ite (and (distinct ((_ extract 46 36) C) (_ bv0 11)) true) ?x2962 ?x4663) (ite (and (distinct ((_ extract 23 12) C) (_ bv0 12)) true) ?x6383 ?x6692))))
 (let ((?x5975 (bvsub ?x1447 ?x2752)))
 (let ((?x3767 (ite (bvsgt (_ bv0 11) ?x5975) (_ bv0 11) ?x5975)))
 (let ((?x7643 (bvsub ?x2752 ?x1447)))
 (let ((?x3890 (ite (bvsgt (_ bv0 11) ?x7643) (_ bv0 11) ?x7643)))
 (let ((?x2941 (bvadd (bvxor (bvlshr (bvshl ((_ extract 10 0) (bvand %Op C)) ?x3890) ?x3767) ?x2118) C3)))
 (let (($x8145 (and (distinct (ite (= (ite (= (bvand %Op C) (_ bv0 47)) (_ bv1 1) (_ bv0 1)) (_ bv1 1)) C2 C3) ?x2941) true)))
 (let ((?x7562 (ite (and (distinct ((_ extract 2 2) C) (_ bv0 1)) true) (_ bv2 32) (ite (and (distinct ((_ extract 1 1) C) (_ bv0 1)) true) (_ bv1 32) (_ bv0 32)))))
 (let ((?x7088 (ite (and (distinct ((_ extract 5 5) C) (_ bv0 1)) true) (_ bv5 32) (ite (and (distinct ((_ extract 4 4) C) (_ bv0 1)) true) (_ bv4 32) (_ bv3 32)))))
 (let ((?x6138 (ite (and (distinct ((_ extract 8 8) C) (_ bv0 1)) true) (_ bv8 32) (ite (and (distinct ((_ extract 7 7) C) (_ bv0 1)) true) (_ bv7 32) (_ bv6 32)))))
 (let ((?x5258 (ite (and (distinct ((_ extract 11 11) C) (_ bv0 1)) true) (_ bv11 32) (ite (and (distinct ((_ extract 10 10) C) (_ bv0 1)) true) (_ bv10 32) (_ bv9 32)))))
 (let ((?x7813 (ite (and (distinct ((_ extract 11 6) C) (_ bv0 6)) true) (ite (and (distinct ((_ extract 11 9) C) (_ bv0 3)) true) ?x5258 ?x6138) (ite (and (distinct ((_ extract 5 3) C) (_ bv0 3)) true) ?x7088 ?x7562))))
 (let ((?x4924 (ite (and (distinct ((_ extract 14 14) C) (_ bv0 1)) true) (_ bv14 32) (ite (and (distinct ((_ extract 13 13) C) (_ bv0 1)) true) (_ bv13 32) (_ bv12 32)))))
 (let ((?x2516 (ite (and (distinct ((_ extract 17 17) C) (_ bv0 1)) true) (_ bv17 32) (ite (and (distinct ((_ extract 16 16) C) (_ bv0 1)) true) (_ bv16 32) (_ bv15 32)))))
 (let ((?x3012 (ite (and (distinct ((_ extract 20 20) C) (_ bv0 1)) true) (_ bv20 32) (ite (and (distinct ((_ extract 19 19) C) (_ bv0 1)) true) (_ bv19 32) (_ bv18 32)))))
 (let ((?x3005 (ite (and (distinct ((_ extract 23 23) C) (_ bv0 1)) true) (_ bv23 32) (ite (and (distinct ((_ extract 22 22) C) (_ bv0 1)) true) (_ bv22 32) (_ bv21 32)))))
 (let ((?x4899 (ite (and (distinct ((_ extract 23 18) C) (_ bv0 6)) true) (ite (and (distinct ((_ extract 23 21) C) (_ bv0 3)) true) ?x3005 ?x3012) (ite (and (distinct ((_ extract 17 15) C) (_ bv0 3)) true) ?x2516 ?x4924))))
 (let ((?x1540 (ite (and (distinct ((_ extract 26 26) C) (_ bv0 1)) true) (_ bv26 32) (ite (and (distinct ((_ extract 25 25) C) (_ bv0 1)) true) (_ bv25 32) (_ bv24 32)))))
 (let ((?x1294 (ite (and (distinct ((_ extract 29 29) C) (_ bv0 1)) true) (_ bv29 32) (ite (and (distinct ((_ extract 28 28) C) (_ bv0 1)) true) (_ bv28 32) (_ bv27 32)))))
 (let ((?x1662 (ite (and (distinct ((_ extract 32 32) C) (_ bv0 1)) true) (_ bv32 32) (ite (and (distinct ((_ extract 31 31) C) (_ bv0 1)) true) (_ bv31 32) (_ bv30 32)))))
 (let ((?x4526 (ite (and (distinct ((_ extract 35 35) C) (_ bv0 1)) true) (_ bv35 32) (ite (and (distinct ((_ extract 34 34) C) (_ bv0 1)) true) (_ bv34 32) (_ bv33 32)))))
 (let ((?x1491 (ite (and (distinct ((_ extract 35 30) C) (_ bv0 6)) true) (ite (and (distinct ((_ extract 35 33) C) (_ bv0 3)) true) ?x4526 ?x1662) (ite (and (distinct ((_ extract 29 27) C) (_ bv0 3)) true) ?x1294 ?x1540))))
 (let ((?x7461 (ite (and (distinct ((_ extract 38 38) C) (_ bv0 1)) true) (_ bv38 32) (ite (and (distinct ((_ extract 37 37) C) (_ bv0 1)) true) (_ bv37 32) (_ bv36 32)))))
 (let ((?x7322 (ite (and (distinct ((_ extract 41 41) C) (_ bv0 1)) true) (_ bv41 32) (ite (and (distinct ((_ extract 40 40) C) (_ bv0 1)) true) (_ bv40 32) (_ bv39 32)))))
 (let ((?x4612 (ite (and (distinct ((_ extract 44 44) C) (_ bv0 1)) true) (_ bv44 32) (ite (and (distinct ((_ extract 43 43) C) (_ bv0 1)) true) (_ bv43 32) (_ bv42 32)))))
 (let ((?x4122 (ite (and (distinct ((_ extract 46 45) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 46 46) C) (_ bv0 1)) true) (_ bv46 32) (_ bv45 32)) ?x4612)))
 (let ((?x4294 (ite (and (distinct ((_ extract 46 42) C) (_ bv0 5)) true) ?x4122 (ite (and (distinct ((_ extract 41 39) C) (_ bv0 3)) true) ?x7322 ?x7461))))
 (let ((?x7646 (ite (and (distinct ((_ extract 46 24) C) (_ bv0 23)) true) (ite (and (distinct ((_ extract 46 36) C) (_ bv0 11)) true) ?x4294 ?x1491) (ite (and (distinct ((_ extract 23 12) C) (_ bv0 12)) true) ?x4899 ?x7813))))
 (and (and (and (distinct C (_ bv0 47)) true) (= (bvand C (bvsub C (_ bv1 47))) (_ bv0 47))) (and (and (distinct ?x2118 (_ bv0 11)) true) (= (bvand ?x2118 (bvsub ?x2118 (_ bv1 11))) (_ bv0 11))) (bvslt ?x7646 (_ bv11 32)) $x8145))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
