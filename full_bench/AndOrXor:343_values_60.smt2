(set-info :status unknown)
(declare-fun C2 () (_ BitVec 5))
(declare-fun %B () (_ BitVec 5))
(declare-fun %A () (_ BitVec 5))
(declare-fun C1 () (_ BitVec 5))
(declare-fun |ana_MaskedValueIsZero(%B, ((1 << (width(C2) - countLeadingZeros(((C2 - 1) ^ C2)))) - 1))| () (_ BitVec 1))
(assert
 (let (($x12192 (and (distinct (bvand (bvadd (bvand %A C1) %B) C2) (bvand (bvadd %A %B) C2)) true)))
 (let (($x8369 (= |ana_MaskedValueIsZero(%B, ((1 << (width(C2) - countLeadingZeros(((C2 - 1) ^ C2)))) - 1))| (_ bv1 1))))
 (let ((?x17939 (bvor (bvsub C2 (_ bv1 5)) C2)))
 (let (($x11374 (and (and (distinct ?x17939 (_ bv0 5)) true) (= (bvand (bvadd ?x17939 (_ bv1 5)) ?x17939) (_ bv0 5)) $x8369)))
 (let (($x12075 (or (= (bvand (bvadd C2 (_ bv1 5)) (bvsub (bvadd C2 (_ bv1 5)) (_ bv1 5))) (_ bv0 5)) $x11374)))
 (let ((?x16416 (ite (= ((_ extract 1 1) (bvxor (bvsub C2 (_ bv1 5)) C2)) (_ bv1 1)) (_ bv3 5) (ite (= ((_ extract 0 0) (bvxor (bvsub C2 (_ bv1 5)) C2)) (_ bv1 1)) (_ bv4 5) (_ bv5 5)))))
 (let ((?x9326 (ite (= ((_ extract 3 3) (bvxor (bvsub C2 (_ bv1 5)) C2)) (_ bv1 1)) (_ bv1 5) (ite (= ((_ extract 2 2) (bvxor (bvsub C2 (_ bv1 5)) C2)) (_ bv1 1)) (_ bv2 5) ?x16416))))
 (let ((?x2783 (bvsub (_ bv5 5) (ite (= ((_ extract 4 4) (bvxor (bvsub C2 (_ bv1 5)) C2)) (_ bv1 1)) (_ bv0 5) ?x9326))))
 (and (=> $x8369 (= (bvand %B (bvsub (bvshl (_ bv1 5) ?x2783) (_ bv1 5))) (_ bv0 5))) (= (bvand C1 C2) C2) $x12075 $x12192))))))))))
(check-sat)
