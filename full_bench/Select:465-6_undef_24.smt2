(set-info :status unknown)
(declare-fun C1 () (_ BitVec 25))
(declare-fun C2 () (_ BitVec 11))
(assert
 (let ((?x10508 (ite (and (distinct ((_ extract 3 2) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 3 3) C1) (_ bv0 1)) true) (_ bv3 11) (_ bv2 11)) (ite (and (distinct ((_ extract 1 1) C1) (_ bv0 1)) true) (_ bv1 11) (_ bv0 11)))))
 (let ((?x6360 (ite (and (distinct ((_ extract 6 6) C1) (_ bv0 1)) true) (_ bv6 11) (ite (and (distinct ((_ extract 5 5) C1) (_ bv0 1)) true) (_ bv5 11) (_ bv4 11)))))
 (let ((?x12657 (ite (and (distinct ((_ extract 9 9) C1) (_ bv0 1)) true) (_ bv9 11) (ite (and (distinct ((_ extract 8 8) C1) (_ bv0 1)) true) (_ bv8 11) (_ bv7 11)))))
 (let ((?x405 (ite (and (distinct ((_ extract 12 12) C1) (_ bv0 1)) true) (_ bv12 11) (ite (and (distinct ((_ extract 11 11) C1) (_ bv0 1)) true) (_ bv11 11) (_ bv10 11)))))
 (let ((?x8639 (ite (and (distinct ((_ extract 12 7) C1) (_ bv0 6)) true) (ite (and (distinct ((_ extract 12 10) C1) (_ bv0 3)) true) ?x405 ?x12657) (ite (and (distinct ((_ extract 6 4) C1) (_ bv0 3)) true) ?x6360 ?x10508))))
 (let ((?x12343 (ite (and (distinct ((_ extract 15 15) C1) (_ bv0 1)) true) (_ bv15 11) (ite (and (distinct ((_ extract 14 14) C1) (_ bv0 1)) true) (_ bv14 11) (_ bv13 11)))))
 (let ((?x18600 (ite (and (distinct ((_ extract 18 18) C1) (_ bv0 1)) true) (_ bv18 11) (ite (and (distinct ((_ extract 17 17) C1) (_ bv0 1)) true) (_ bv17 11) (_ bv16 11)))))
 (let ((?x8272 (ite (and (distinct ((_ extract 21 21) C1) (_ bv0 1)) true) (_ bv21 11) (ite (and (distinct ((_ extract 20 20) C1) (_ bv0 1)) true) (_ bv20 11) (_ bv19 11)))))
 (let ((?x6999 (ite (and (distinct ((_ extract 24 24) C1) (_ bv0 1)) true) (_ bv24 11) (ite (and (distinct ((_ extract 23 23) C1) (_ bv0 1)) true) (_ bv23 11) (_ bv22 11)))))
 (let ((?x2565 (ite (and (distinct ((_ extract 24 19) C1) (_ bv0 6)) true) (ite (and (distinct ((_ extract 24 22) C1) (_ bv0 3)) true) ?x6999 ?x8272) (ite (and (distinct ((_ extract 18 16) C1) (_ bv0 3)) true) ?x18600 ?x12343))))
 (let ((?x14082 (ite (and (distinct ((_ extract 2 2) C2) (_ bv0 1)) true) (_ bv2 11) (ite (and (distinct ((_ extract 1 1) C2) (_ bv0 1)) true) (_ bv1 11) (_ bv0 11)))))
 (let ((?x6949 (ite (and (distinct ((_ extract 5 5) C2) (_ bv0 1)) true) (_ bv5 11) (ite (and (distinct ((_ extract 4 4) C2) (_ bv0 1)) true) (_ bv4 11) (_ bv3 11)))))
 (let ((?x17291 (ite (and (distinct ((_ extract 8 8) C2) (_ bv0 1)) true) (_ bv8 11) (ite (and (distinct ((_ extract 7 7) C2) (_ bv0 1)) true) (_ bv7 11) (_ bv6 11)))))
 (let ((?x2250 (ite (and (distinct ((_ extract 10 9) C2) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) C2) (_ bv0 1)) true) (_ bv10 11) (_ bv9 11)) ?x17291)))
 (let ((?x5836 (ite (and (distinct ((_ extract 10 6) C2) (_ bv0 5)) true) ?x2250 (ite (and (distinct ((_ extract 5 3) C2) (_ bv0 3)) true) ?x6949 ?x14082))))
 (let ((?x10876 (bvsub ?x5836 (ite (and (distinct ((_ extract 24 13) C1) (_ bv0 12)) true) ?x2565 ?x8639))))
 (let ((?x693 (ite (and (distinct ((_ extract 3 2) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 3 3) C1) (_ bv0 1)) true) (_ bv3 32) (_ bv2 32)) (ite (and (distinct ((_ extract 1 1) C1) (_ bv0 1)) true) (_ bv1 32) (_ bv0 32)))))
 (let ((?x8400 (ite (and (distinct ((_ extract 6 6) C1) (_ bv0 1)) true) (_ bv6 32) (ite (and (distinct ((_ extract 5 5) C1) (_ bv0 1)) true) (_ bv5 32) (_ bv4 32)))))
 (let ((?x9726 (ite (and (distinct ((_ extract 9 9) C1) (_ bv0 1)) true) (_ bv9 32) (ite (and (distinct ((_ extract 8 8) C1) (_ bv0 1)) true) (_ bv8 32) (_ bv7 32)))))
 (let ((?x10163 (ite (and (distinct ((_ extract 12 12) C1) (_ bv0 1)) true) (_ bv12 32) (ite (and (distinct ((_ extract 11 11) C1) (_ bv0 1)) true) (_ bv11 32) (_ bv10 32)))))
 (let ((?x11284 (ite (and (distinct ((_ extract 12 7) C1) (_ bv0 6)) true) (ite (and (distinct ((_ extract 12 10) C1) (_ bv0 3)) true) ?x10163 ?x9726) (ite (and (distinct ((_ extract 6 4) C1) (_ bv0 3)) true) ?x8400 ?x693))))
 (let ((?x5186 (ite (and (distinct ((_ extract 15 15) C1) (_ bv0 1)) true) (_ bv15 32) (ite (and (distinct ((_ extract 14 14) C1) (_ bv0 1)) true) (_ bv14 32) (_ bv13 32)))))
 (let ((?x2410 (ite (and (distinct ((_ extract 18 18) C1) (_ bv0 1)) true) (_ bv18 32) (ite (and (distinct ((_ extract 17 17) C1) (_ bv0 1)) true) (_ bv17 32) (_ bv16 32)))))
 (let ((?x18918 (ite (and (distinct ((_ extract 21 21) C1) (_ bv0 1)) true) (_ bv21 32) (ite (and (distinct ((_ extract 20 20) C1) (_ bv0 1)) true) (_ bv20 32) (_ bv19 32)))))
 (let ((?x281 (ite (and (distinct ((_ extract 24 24) C1) (_ bv0 1)) true) (_ bv24 32) (ite (and (distinct ((_ extract 23 23) C1) (_ bv0 1)) true) (_ bv23 32) (_ bv22 32)))))
 (let ((?x3716 (ite (and (distinct ((_ extract 24 19) C1) (_ bv0 6)) true) (ite (and (distinct ((_ extract 24 22) C1) (_ bv0 3)) true) ?x281 ?x18918) (ite (and (distinct ((_ extract 18 16) C1) (_ bv0 3)) true) ?x2410 ?x5186))))
 (let ((?x1626 (ite (and (distinct ((_ extract 2 2) C2) (_ bv0 1)) true) (_ bv2 32) (ite (and (distinct ((_ extract 1 1) C2) (_ bv0 1)) true) (_ bv1 32) (_ bv0 32)))))
 (let ((?x4625 (ite (and (distinct ((_ extract 5 5) C2) (_ bv0 1)) true) (_ bv5 32) (ite (and (distinct ((_ extract 4 4) C2) (_ bv0 1)) true) (_ bv4 32) (_ bv3 32)))))
 (let ((?x21198 (ite (and (distinct ((_ extract 8 8) C2) (_ bv0 1)) true) (_ bv8 32) (ite (and (distinct ((_ extract 7 7) C2) (_ bv0 1)) true) (_ bv7 32) (_ bv6 32)))))
 (let ((?x15881 (ite (and (distinct ((_ extract 10 9) C2) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) C2) (_ bv0 1)) true) (_ bv10 32) (_ bv9 32)) ?x21198)))
 (let ((?x7994 (ite (and (distinct ((_ extract 10 6) C2) (_ bv0 5)) true) ?x15881 (ite (and (distinct ((_ extract 5 3) C2) (_ bv0 3)) true) ?x4625 ?x1626))))
 (and (and (and (distinct C1 (_ bv0 25)) true) (= (bvand C1 (bvsub C1 (_ bv1 25))) (_ bv0 25))) (and (and (distinct C2 (_ bv0 11)) true) (= (bvand C2 (bvsub C2 (_ bv1 11))) (_ bv0 11))) (bvsge ?x7994 (ite (and (distinct ((_ extract 24 13) C1) (_ bv0 12)) true) ?x3716 ?x11284)) (not (bvult ?x10876 (_ bv11 11))))))))))))))))))))))))))))))))))))
(check-sat)
