(set-info :status unknown)
(declare-fun %K2 () (_ BitVec 49))
(declare-fun %K1 () (_ BitVec 49))
(declare-fun %A () (_ BitVec 49))
(declare-fun |ana_isPowerOf2(%K2)| () (_ BitVec 1))
(declare-fun |ana_isPowerOf2(%K1)| () (_ BitVec 1))
(assert
 (let ((?x17249 (ite (and (distinct (bvand %A (bvor %K1 %K2)) (bvor %K1 %K2)) true) (_ bv1 1) (_ bv0 1))))
 (let ((?x14679 (ite (= (bvand %A %K2) (_ bv0 49)) (_ bv1 1) (_ bv0 1))))
 (let ((?x21070 (ite (= (bvand %A %K1) (_ bv0 49)) (_ bv1 1) (_ bv0 1))))
 (let (($x10581 (= |ana_isPowerOf2(%K2)| (_ bv1 1))))
 (let (($x724 (= |ana_isPowerOf2(%K1)| (_ bv1 1))))
 (let (($x22009 (=> $x10581 (and (and (distinct %K2 (_ bv0 49)) true) (= (bvand %K2 (bvsub %K2 (_ bv1 49))) (_ bv0 49))))))
 (let (($x19991 (=> $x724 (and (and (distinct %K1 (_ bv0 49)) true) (= (bvand %K1 (bvsub %K1 (_ bv1 49))) (_ bv0 49))))))
 (and $x19991 $x22009 $x724 $x10581 (and (distinct (bvor ?x21070 ?x14679) ?x17249) true))))))))))
(check-sat)
