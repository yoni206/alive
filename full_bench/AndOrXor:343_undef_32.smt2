(set-info :source |
 Generated by Alive 0.1
 More info in N. P. Lopes, D. Menendez, S. Nagarakatte, J. Regehr.
 Provably Correct Peephole Optimizations with Alive. In PLDI'15.
|)

(set-info :status unknown)
(declare-fun |ana_MaskedValueIsZero(%B, ((1 << (width(C2) - countLeadingZeros(((C2 - 1) ^ C2)))) - 1))| () (_ BitVec 1))
(declare-fun C2 () (_ BitVec 34))
(declare-fun C1 () (_ BitVec 34))
(declare-fun %B () (_ BitVec 34))
(assert
 (let (($x131713 (= |ana_MaskedValueIsZero(%B, ((1 << (width(C2) - countLeadingZeros(((C2 - 1) ^ C2)))) - 1))| (_ bv1 1))))
 (let ((?x20719 (bvsub C2 (_ bv1 34))))
 (let ((?x149806 (bvor ?x20719 C2)))
 (let (($x148995 (and (and (distinct ?x149806 (_ bv0 34)) true) (= (bvand (bvadd ?x149806 (_ bv1 34)) ?x149806) (_ bv0 34)) $x131713)))
 (let (($x149077 (or (= (bvand (bvadd C2 (_ bv1 34)) (bvsub (bvadd C2 (_ bv1 34)) (_ bv1 34))) (_ bv0 34)) $x148995)))
 (let ((?x130763 (bvand C1 C2)))
 (let (($x149812 (= ?x130763 C2)))
 (let ((?x149562 (ite (= ((_ extract 1 1) (bvxor ?x20719 C2)) (_ bv1 1)) (_ bv32 34) (ite (= ((_ extract 0 0) (bvxor ?x20719 C2)) (_ bv1 1)) (_ bv33 34) (_ bv34 34)))))
 (let ((?x149551 (ite (= ((_ extract 3 3) (bvxor ?x20719 C2)) (_ bv1 1)) (_ bv30 34) (ite (= ((_ extract 2 2) (bvxor ?x20719 C2)) (_ bv1 1)) (_ bv31 34) ?x149562))))
 (let ((?x149605 (ite (= ((_ extract 5 5) (bvxor ?x20719 C2)) (_ bv1 1)) (_ bv28 34) (ite (= ((_ extract 4 4) (bvxor ?x20719 C2)) (_ bv1 1)) (_ bv29 34) ?x149551))))
 (let ((?x149598 (ite (= ((_ extract 7 7) (bvxor ?x20719 C2)) (_ bv1 1)) (_ bv26 34) (ite (= ((_ extract 6 6) (bvxor ?x20719 C2)) (_ bv1 1)) (_ bv27 34) ?x149605))))
 (let ((?x149584 (ite (= ((_ extract 9 9) (bvxor ?x20719 C2)) (_ bv1 1)) (_ bv24 34) (ite (= ((_ extract 8 8) (bvxor ?x20719 C2)) (_ bv1 1)) (_ bv25 34) ?x149598))))
 (let ((?x149622 (ite (= ((_ extract 11 11) (bvxor ?x20719 C2)) (_ bv1 1)) (_ bv22 34) (ite (= ((_ extract 10 10) (bvxor ?x20719 C2)) (_ bv1 1)) (_ bv23 34) ?x149584))))
 (let ((?x149630 (ite (= ((_ extract 13 13) (bvxor ?x20719 C2)) (_ bv1 1)) (_ bv20 34) (ite (= ((_ extract 12 12) (bvxor ?x20719 C2)) (_ bv1 1)) (_ bv21 34) ?x149622))))
 (let ((?x149617 (ite (= ((_ extract 15 15) (bvxor ?x20719 C2)) (_ bv1 1)) (_ bv18 34) (ite (= ((_ extract 14 14) (bvxor ?x20719 C2)) (_ bv1 1)) (_ bv19 34) ?x149630))))
 (let ((?x149609 (ite (= ((_ extract 17 17) (bvxor ?x20719 C2)) (_ bv1 1)) (_ bv16 34) (ite (= ((_ extract 16 16) (bvxor ?x20719 C2)) (_ bv1 1)) (_ bv17 34) ?x149617))))
 (let ((?x149650 (ite (= ((_ extract 19 19) (bvxor ?x20719 C2)) (_ bv1 1)) (_ bv14 34) (ite (= ((_ extract 18 18) (bvxor ?x20719 C2)) (_ bv1 1)) (_ bv15 34) ?x149609))))
 (let ((?x149642 (ite (= ((_ extract 21 21) (bvxor ?x20719 C2)) (_ bv1 1)) (_ bv12 34) (ite (= ((_ extract 20 20) (bvxor ?x20719 C2)) (_ bv1 1)) (_ bv13 34) ?x149650))))
 (let ((?x149919 (ite (= ((_ extract 23 23) (bvxor ?x20719 C2)) (_ bv1 1)) (_ bv10 34) (ite (= ((_ extract 22 22) (bvxor ?x20719 C2)) (_ bv1 1)) (_ bv11 34) ?x149642))))
 (let ((?x149909 (ite (= ((_ extract 25 25) (bvxor ?x20719 C2)) (_ bv1 1)) (_ bv8 34) (ite (= ((_ extract 24 24) (bvxor ?x20719 C2)) (_ bv1 1)) (_ bv9 34) ?x149919))))
 (let ((?x149895 (ite (= ((_ extract 27 27) (bvxor ?x20719 C2)) (_ bv1 1)) (_ bv6 34) (ite (= ((_ extract 26 26) (bvxor ?x20719 C2)) (_ bv1 1)) (_ bv7 34) ?x149909))))
 (let ((?x149886 (ite (= ((_ extract 29 29) (bvxor ?x20719 C2)) (_ bv1 1)) (_ bv4 34) (ite (= ((_ extract 28 28) (bvxor ?x20719 C2)) (_ bv1 1)) (_ bv5 34) ?x149895))))
 (let ((?x149876 (ite (= ((_ extract 31 31) (bvxor ?x20719 C2)) (_ bv1 1)) (_ bv2 34) (ite (= ((_ extract 30 30) (bvxor ?x20719 C2)) (_ bv1 1)) (_ bv3 34) ?x149886))))
 (let ((?x149862 (ite (= ((_ extract 33 33) (bvxor ?x20719 C2)) (_ bv1 1)) (_ bv0 34) (ite (= ((_ extract 32 32) (bvxor ?x20719 C2)) (_ bv1 1)) (_ bv1 34) ?x149876))))
 (let (($x149273 (=> $x131713 (= (bvand %B (bvsub (bvshl (_ bv1 34) (bvsub (_ bv34 34) ?x149862)) (_ bv1 34))) (_ bv0 34)))))
 (and $x149273 $x149812 $x149077 false)))))))))))))))))))))))))))
(check-sat)
