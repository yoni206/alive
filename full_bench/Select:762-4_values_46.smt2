(set-info :status unknown)
(declare-fun C2 () (_ BitVec 11))
(declare-fun C3 () (_ BitVec 11))
(declare-fun C () (_ BitVec 50))
(declare-fun %Op () (_ BitVec 50))
(assert
 (let ((?x11337 (bvsub C3 C2)))
 (let ((?x16008 (ite (and (distinct ((_ extract 2 2) ?x11337) (_ bv0 1)) true) (_ bv2 11) (ite (and (distinct ((_ extract 1 1) ?x11337) (_ bv0 1)) true) (_ bv1 11) (_ bv0 11)))))
 (let ((?x19270 (ite (and (distinct ((_ extract 5 5) ?x11337) (_ bv0 1)) true) (_ bv5 11) (ite (and (distinct ((_ extract 4 4) ?x11337) (_ bv0 1)) true) (_ bv4 11) (_ bv3 11)))))
 (let ((?x1257 (ite (and (distinct ((_ extract 8 8) ?x11337) (_ bv0 1)) true) (_ bv8 11) (ite (and (distinct ((_ extract 7 7) ?x11337) (_ bv0 1)) true) (_ bv7 11) (_ bv6 11)))))
 (let ((?x1180 (ite (and (distinct ((_ extract 10 9) ?x11337) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) ?x11337) (_ bv0 1)) true) (_ bv10 11) (_ bv9 11)) ?x1257)))
 (let ((?x14319 (ite (and (distinct ((_ extract 10 6) ?x11337) (_ bv0 5)) true) ?x1180 (ite (and (distinct ((_ extract 5 3) ?x11337) (_ bv0 3)) true) ?x19270 ?x16008))))
 (let ((?x13029 (ite (and (distinct ((_ extract 3 2) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 3 3) C) (_ bv0 1)) true) (_ bv3 11) (_ bv2 11)) (ite (and (distinct ((_ extract 1 1) C) (_ bv0 1)) true) (_ bv1 11) (_ bv0 11)))))
 (let ((?x17321 (ite (and (distinct ((_ extract 6 6) C) (_ bv0 1)) true) (_ bv6 11) (ite (and (distinct ((_ extract 5 5) C) (_ bv0 1)) true) (_ bv5 11) (_ bv4 11)))))
 (let ((?x13712 (ite (and (distinct ((_ extract 9 9) C) (_ bv0 1)) true) (_ bv9 11) (ite (and (distinct ((_ extract 8 8) C) (_ bv0 1)) true) (_ bv8 11) (_ bv7 11)))))
 (let ((?x3534 (ite (and (distinct ((_ extract 12 12) C) (_ bv0 1)) true) (_ bv12 11) (ite (and (distinct ((_ extract 11 11) C) (_ bv0 1)) true) (_ bv11 11) (_ bv10 11)))))
 (let ((?x5604 (ite (and (distinct ((_ extract 12 7) C) (_ bv0 6)) true) (ite (and (distinct ((_ extract 12 10) C) (_ bv0 3)) true) ?x3534 ?x13712) (ite (and (distinct ((_ extract 6 4) C) (_ bv0 3)) true) ?x17321 ?x13029))))
 (let ((?x20847 (ite (and (distinct ((_ extract 15 15) C) (_ bv0 1)) true) (_ bv15 11) (ite (and (distinct ((_ extract 14 14) C) (_ bv0 1)) true) (_ bv14 11) (_ bv13 11)))))
 (let ((?x20036 (ite (and (distinct ((_ extract 18 18) C) (_ bv0 1)) true) (_ bv18 11) (ite (and (distinct ((_ extract 17 17) C) (_ bv0 1)) true) (_ bv17 11) (_ bv16 11)))))
 (let ((?x16149 (ite (and (distinct ((_ extract 21 21) C) (_ bv0 1)) true) (_ bv21 11) (ite (and (distinct ((_ extract 20 20) C) (_ bv0 1)) true) (_ bv20 11) (_ bv19 11)))))
 (let ((?x15594 (ite (and (distinct ((_ extract 24 24) C) (_ bv0 1)) true) (_ bv24 11) (ite (and (distinct ((_ extract 23 23) C) (_ bv0 1)) true) (_ bv23 11) (_ bv22 11)))))
 (let ((?x22286 (ite (and (distinct ((_ extract 24 19) C) (_ bv0 6)) true) (ite (and (distinct ((_ extract 24 22) C) (_ bv0 3)) true) ?x15594 ?x16149) (ite (and (distinct ((_ extract 18 16) C) (_ bv0 3)) true) ?x20036 ?x20847))))
 (let ((?x12712 (ite (and (distinct ((_ extract 28 27) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 28 28) C) (_ bv0 1)) true) (_ bv28 11) (_ bv27 11)) (ite (and (distinct ((_ extract 26 26) C) (_ bv0 1)) true) (_ bv26 11) (_ bv25 11)))))
 (let ((?x17584 (ite (and (distinct ((_ extract 31 31) C) (_ bv0 1)) true) (_ bv31 11) (ite (and (distinct ((_ extract 30 30) C) (_ bv0 1)) true) (_ bv30 11) (_ bv29 11)))))
 (let ((?x8934 (ite (and (distinct ((_ extract 34 34) C) (_ bv0 1)) true) (_ bv34 11) (ite (and (distinct ((_ extract 33 33) C) (_ bv0 1)) true) (_ bv33 11) (_ bv32 11)))))
 (let ((?x13592 (ite (and (distinct ((_ extract 37 37) C) (_ bv0 1)) true) (_ bv37 11) (ite (and (distinct ((_ extract 36 36) C) (_ bv0 1)) true) (_ bv36 11) (_ bv35 11)))))
 (let ((?x21409 (ite (and (distinct ((_ extract 37 32) C) (_ bv0 6)) true) (ite (and (distinct ((_ extract 37 35) C) (_ bv0 3)) true) ?x13592 ?x8934) (ite (and (distinct ((_ extract 31 29) C) (_ bv0 3)) true) ?x17584 ?x12712))))
 (let ((?x15700 (ite (and (distinct ((_ extract 40 40) C) (_ bv0 1)) true) (_ bv40 11) (ite (and (distinct ((_ extract 39 39) C) (_ bv0 1)) true) (_ bv39 11) (_ bv38 11)))))
 (let ((?x13470 (ite (and (distinct ((_ extract 43 43) C) (_ bv0 1)) true) (_ bv43 11) (ite (and (distinct ((_ extract 42 42) C) (_ bv0 1)) true) (_ bv42 11) (_ bv41 11)))))
 (let ((?x17888 (ite (and (distinct ((_ extract 46 46) C) (_ bv0 1)) true) (_ bv46 11) (ite (and (distinct ((_ extract 45 45) C) (_ bv0 1)) true) (_ bv45 11) (_ bv44 11)))))
 (let ((?x4640 (ite (and (distinct ((_ extract 49 49) C) (_ bv0 1)) true) (_ bv49 11) (ite (and (distinct ((_ extract 48 48) C) (_ bv0 1)) true) (_ bv48 11) (_ bv47 11)))))
 (let ((?x3718 (ite (and (distinct ((_ extract 49 44) C) (_ bv0 6)) true) (ite (and (distinct ((_ extract 49 47) C) (_ bv0 3)) true) ?x4640 ?x17888) (ite (and (distinct ((_ extract 43 41) C) (_ bv0 3)) true) ?x13470 ?x15700))))
 (let ((?x14725 (ite (and (distinct ((_ extract 49 25) C) (_ bv0 25)) true) (ite (and (distinct ((_ extract 49 38) C) (_ bv0 12)) true) ?x3718 ?x21409) (ite (and (distinct ((_ extract 24 13) C) (_ bv0 12)) true) ?x22286 ?x5604))))
 (let ((?x738 (bvsub ?x14725 ?x14319)))
 (let ((?x8638 (ite (bvsgt (_ bv0 11) ?x738) (_ bv0 11) ?x738)))
 (let ((?x7036 (bvsub ?x14319 ?x14725)))
 (let ((?x2512 (ite (bvsgt (_ bv0 11) ?x7036) (_ bv0 11) ?x7036)))
 (let ((?x2797 (bvadd (bvxor (bvlshr (bvshl ((_ extract 10 0) (bvand %Op C)) ?x2512) ?x8638) ?x11337) C2)))
 (let ((?x170 (ite (= (ite (and (distinct (bvand %Op C) (_ bv0 50)) true) (_ bv1 1) (_ bv0 1)) (_ bv1 1)) C2 C3)))
 (let ((?x21656 (ite (and (distinct ((_ extract 3 2) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 3 3) C) (_ bv0 1)) true) (_ bv3 32) (_ bv2 32)) (ite (and (distinct ((_ extract 1 1) C) (_ bv0 1)) true) (_ bv1 32) (_ bv0 32)))))
 (let ((?x18901 (ite (and (distinct ((_ extract 6 6) C) (_ bv0 1)) true) (_ bv6 32) (ite (and (distinct ((_ extract 5 5) C) (_ bv0 1)) true) (_ bv5 32) (_ bv4 32)))))
 (let ((?x15294 (ite (and (distinct ((_ extract 9 9) C) (_ bv0 1)) true) (_ bv9 32) (ite (and (distinct ((_ extract 8 8) C) (_ bv0 1)) true) (_ bv8 32) (_ bv7 32)))))
 (let ((?x14847 (ite (and (distinct ((_ extract 12 12) C) (_ bv0 1)) true) (_ bv12 32) (ite (and (distinct ((_ extract 11 11) C) (_ bv0 1)) true) (_ bv11 32) (_ bv10 32)))))
 (let ((?x24231 (ite (and (distinct ((_ extract 12 7) C) (_ bv0 6)) true) (ite (and (distinct ((_ extract 12 10) C) (_ bv0 3)) true) ?x14847 ?x15294) (ite (and (distinct ((_ extract 6 4) C) (_ bv0 3)) true) ?x18901 ?x21656))))
 (let ((?x11133 (ite (and (distinct ((_ extract 15 15) C) (_ bv0 1)) true) (_ bv15 32) (ite (and (distinct ((_ extract 14 14) C) (_ bv0 1)) true) (_ bv14 32) (_ bv13 32)))))
 (let ((?x10076 (ite (and (distinct ((_ extract 18 18) C) (_ bv0 1)) true) (_ bv18 32) (ite (and (distinct ((_ extract 17 17) C) (_ bv0 1)) true) (_ bv17 32) (_ bv16 32)))))
 (let ((?x8592 (ite (and (distinct ((_ extract 21 21) C) (_ bv0 1)) true) (_ bv21 32) (ite (and (distinct ((_ extract 20 20) C) (_ bv0 1)) true) (_ bv20 32) (_ bv19 32)))))
 (let ((?x6963 (ite (and (distinct ((_ extract 24 24) C) (_ bv0 1)) true) (_ bv24 32) (ite (and (distinct ((_ extract 23 23) C) (_ bv0 1)) true) (_ bv23 32) (_ bv22 32)))))
 (let ((?x10554 (ite (and (distinct ((_ extract 24 19) C) (_ bv0 6)) true) (ite (and (distinct ((_ extract 24 22) C) (_ bv0 3)) true) ?x6963 ?x8592) (ite (and (distinct ((_ extract 18 16) C) (_ bv0 3)) true) ?x10076 ?x11133))))
 (let ((?x4310 (ite (and (distinct ((_ extract 28 27) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 28 28) C) (_ bv0 1)) true) (_ bv28 32) (_ bv27 32)) (ite (and (distinct ((_ extract 26 26) C) (_ bv0 1)) true) (_ bv26 32) (_ bv25 32)))))
 (let ((?x3845 (ite (and (distinct ((_ extract 31 31) C) (_ bv0 1)) true) (_ bv31 32) (ite (and (distinct ((_ extract 30 30) C) (_ bv0 1)) true) (_ bv30 32) (_ bv29 32)))))
 (let ((?x24781 (ite (and (distinct ((_ extract 34 34) C) (_ bv0 1)) true) (_ bv34 32) (ite (and (distinct ((_ extract 33 33) C) (_ bv0 1)) true) (_ bv33 32) (_ bv32 32)))))
 (let ((?x18003 (ite (and (distinct ((_ extract 37 37) C) (_ bv0 1)) true) (_ bv37 32) (ite (and (distinct ((_ extract 36 36) C) (_ bv0 1)) true) (_ bv36 32) (_ bv35 32)))))
 (let ((?x5963 (ite (and (distinct ((_ extract 37 32) C) (_ bv0 6)) true) (ite (and (distinct ((_ extract 37 35) C) (_ bv0 3)) true) ?x18003 ?x24781) (ite (and (distinct ((_ extract 31 29) C) (_ bv0 3)) true) ?x3845 ?x4310))))
 (let ((?x4842 (ite (and (distinct ((_ extract 40 40) C) (_ bv0 1)) true) (_ bv40 32) (ite (and (distinct ((_ extract 39 39) C) (_ bv0 1)) true) (_ bv39 32) (_ bv38 32)))))
 (let ((?x3857 (ite (and (distinct ((_ extract 43 43) C) (_ bv0 1)) true) (_ bv43 32) (ite (and (distinct ((_ extract 42 42) C) (_ bv0 1)) true) (_ bv42 32) (_ bv41 32)))))
 (let ((?x11716 (ite (and (distinct ((_ extract 46 46) C) (_ bv0 1)) true) (_ bv46 32) (ite (and (distinct ((_ extract 45 45) C) (_ bv0 1)) true) (_ bv45 32) (_ bv44 32)))))
 (let ((?x17887 (ite (and (distinct ((_ extract 49 49) C) (_ bv0 1)) true) (_ bv49 32) (ite (and (distinct ((_ extract 48 48) C) (_ bv0 1)) true) (_ bv48 32) (_ bv47 32)))))
 (let ((?x15526 (ite (and (distinct ((_ extract 49 44) C) (_ bv0 6)) true) (ite (and (distinct ((_ extract 49 47) C) (_ bv0 3)) true) ?x17887 ?x11716) (ite (and (distinct ((_ extract 43 41) C) (_ bv0 3)) true) ?x3857 ?x4842))))
 (let ((?x6979 (ite (and (distinct ((_ extract 49 25) C) (_ bv0 25)) true) (ite (and (distinct ((_ extract 49 38) C) (_ bv0 12)) true) ?x15526 ?x5963) (ite (and (distinct ((_ extract 24 13) C) (_ bv0 12)) true) ?x10554 ?x24231))))
 (and (and (and (distinct C (_ bv0 50)) true) (= (bvand C (bvsub C (_ bv1 50))) (_ bv0 50))) (and (and (distinct ?x11337 (_ bv0 11)) true) (= (bvand ?x11337 (bvsub ?x11337 (_ bv1 11))) (_ bv0 11))) (bvslt ?x6979 (_ bv11 32)) (and (distinct ?x170 ?x2797) true)))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
