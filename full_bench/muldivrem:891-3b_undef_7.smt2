(set-info :status unknown)
(declare-fun C () (_ BitVec 11))
(declare-fun %N () (_ BitVec 11))
(declare-fun %x () (_ BitVec 13))
(assert
 (let ((?x12371 (ite (and (distinct ((_ extract 2 2) C) (_ bv0 1)) true) (_ bv2 11) (ite (and (distinct ((_ extract 1 1) C) (_ bv0 1)) true) (_ bv1 11) (_ bv0 11)))))
 (let ((?x3690 (ite (and (distinct ((_ extract 5 5) C) (_ bv0 1)) true) (_ bv5 11) (ite (and (distinct ((_ extract 4 4) C) (_ bv0 1)) true) (_ bv4 11) (_ bv3 11)))))
 (let ((?x144 (ite (and (distinct ((_ extract 8 8) C) (_ bv0 1)) true) (_ bv8 11) (ite (and (distinct ((_ extract 7 7) C) (_ bv0 1)) true) (_ bv7 11) (_ bv6 11)))))
 (let ((?x15015 (ite (and (distinct ((_ extract 10 9) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) C) (_ bv0 1)) true) (_ bv10 11) (_ bv9 11)) ?x144)))
 (let ((?x18553 (ite (and (distinct ((_ extract 10 6) C) (_ bv0 5)) true) ?x15015 (ite (and (distinct ((_ extract 5 3) C) (_ bv0 3)) true) ?x3690 ?x12371))))
 (let ((?x18505 ((_ zero_extend 2) (bvadd %N ?x18553))))
 (let ((?x2150 (bvshl C %N)))
 (let ((?x12451 ((_ zero_extend 2) ?x2150)))
 (let (($x13351 (bvult %N (_ bv11 11))))
 (and $x13351 (and (distinct ?x12451 (_ bv0 13)) true) (= (bvmul (bvudiv %x ?x12451) ?x12451) %x) (and (and (distinct C (_ bv0 11)) true) (= (bvand C (bvsub C (_ bv1 11))) (_ bv0 11))) (not (bvult ?x18505 (_ bv13 13))))))))))))))
(check-sat)
