(set-info :status unknown)
(declare-fun %Y () (_ BitVec 11))
(declare-fun C2 () (_ BitVec 11))
(declare-fun C1 () (_ BitVec 49))
(declare-fun %X () (_ BitVec 49))
(assert
 (let ((?x2417 (ite (and (distinct ((_ extract 2 2) C2) (_ bv0 1)) true) (_ bv2 49) (ite (and (distinct ((_ extract 1 1) C2) (_ bv0 1)) true) (_ bv1 49) (_ bv0 49)))))
 (let ((?x6371 (ite (and (distinct ((_ extract 5 5) C2) (_ bv0 1)) true) (_ bv5 49) (ite (and (distinct ((_ extract 4 4) C2) (_ bv0 1)) true) (_ bv4 49) (_ bv3 49)))))
 (let ((?x6413 (ite (and (distinct ((_ extract 8 8) C2) (_ bv0 1)) true) (_ bv8 49) (ite (and (distinct ((_ extract 7 7) C2) (_ bv0 1)) true) (_ bv7 49) (_ bv6 49)))))
 (let ((?x1733 (ite (and (distinct ((_ extract 10 9) C2) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) C2) (_ bv0 1)) true) (_ bv10 49) (_ bv9 49)) ?x6413)))
 (let ((?x1234 (ite (and (distinct ((_ extract 10 6) C2) (_ bv0 5)) true) ?x1733 (ite (and (distinct ((_ extract 5 3) C2) (_ bv0 3)) true) ?x6371 ?x2417))))
 (let ((?x2107 (ite (and (distinct ((_ extract 3 2) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 3 3) C1) (_ bv0 1)) true) (_ bv3 49) (_ bv2 49)) (ite (and (distinct ((_ extract 1 1) C1) (_ bv0 1)) true) (_ bv1 49) (_ bv0 49)))))
 (let ((?x5977 (ite (and (distinct ((_ extract 6 6) C1) (_ bv0 1)) true) (_ bv6 49) (ite (and (distinct ((_ extract 5 5) C1) (_ bv0 1)) true) (_ bv5 49) (_ bv4 49)))))
 (let ((?x6414 (ite (and (distinct ((_ extract 9 9) C1) (_ bv0 1)) true) (_ bv9 49) (ite (and (distinct ((_ extract 8 8) C1) (_ bv0 1)) true) (_ bv8 49) (_ bv7 49)))))
 (let ((?x5768 (ite (and (distinct ((_ extract 12 12) C1) (_ bv0 1)) true) (_ bv12 49) (ite (and (distinct ((_ extract 11 11) C1) (_ bv0 1)) true) (_ bv11 49) (_ bv10 49)))))
 (let ((?x4975 (ite (and (distinct ((_ extract 12 7) C1) (_ bv0 6)) true) (ite (and (distinct ((_ extract 12 10) C1) (_ bv0 3)) true) ?x5768 ?x6414) (ite (and (distinct ((_ extract 6 4) C1) (_ bv0 3)) true) ?x5977 ?x2107))))
 (let ((?x4982 (ite (and (distinct ((_ extract 15 15) C1) (_ bv0 1)) true) (_ bv15 49) (ite (and (distinct ((_ extract 14 14) C1) (_ bv0 1)) true) (_ bv14 49) (_ bv13 49)))))
 (let ((?x4051 (ite (and (distinct ((_ extract 18 18) C1) (_ bv0 1)) true) (_ bv18 49) (ite (and (distinct ((_ extract 17 17) C1) (_ bv0 1)) true) (_ bv17 49) (_ bv16 49)))))
 (let ((?x4477 (ite (and (distinct ((_ extract 21 21) C1) (_ bv0 1)) true) (_ bv21 49) (ite (and (distinct ((_ extract 20 20) C1) (_ bv0 1)) true) (_ bv20 49) (_ bv19 49)))))
 (let ((?x2587 (ite (and (distinct ((_ extract 24 24) C1) (_ bv0 1)) true) (_ bv24 49) (ite (and (distinct ((_ extract 23 23) C1) (_ bv0 1)) true) (_ bv23 49) (_ bv22 49)))))
 (let ((?x2933 (ite (and (distinct ((_ extract 24 19) C1) (_ bv0 6)) true) (ite (and (distinct ((_ extract 24 22) C1) (_ bv0 3)) true) ?x2587 ?x4477) (ite (and (distinct ((_ extract 18 16) C1) (_ bv0 3)) true) ?x4051 ?x4982))))
 (let ((?x2042 (ite (and (distinct ((_ extract 27 27) C1) (_ bv0 1)) true) (_ bv27 49) (ite (and (distinct ((_ extract 26 26) C1) (_ bv0 1)) true) (_ bv26 49) (_ bv25 49)))))
 (let ((?x3167 (ite (and (distinct ((_ extract 30 30) C1) (_ bv0 1)) true) (_ bv30 49) (ite (and (distinct ((_ extract 29 29) C1) (_ bv0 1)) true) (_ bv29 49) (_ bv28 49)))))
 (let ((?x3623 (ite (and (distinct ((_ extract 33 33) C1) (_ bv0 1)) true) (_ bv33 49) (ite (and (distinct ((_ extract 32 32) C1) (_ bv0 1)) true) (_ bv32 49) (_ bv31 49)))))
 (let ((?x2192 (ite (and (distinct ((_ extract 36 36) C1) (_ bv0 1)) true) (_ bv36 49) (ite (and (distinct ((_ extract 35 35) C1) (_ bv0 1)) true) (_ bv35 49) (_ bv34 49)))))
 (let ((?x1532 (ite (and (distinct ((_ extract 36 31) C1) (_ bv0 6)) true) (ite (and (distinct ((_ extract 36 34) C1) (_ bv0 3)) true) ?x2192 ?x3623) (ite (and (distinct ((_ extract 30 28) C1) (_ bv0 3)) true) ?x3167 ?x2042))))
 (let ((?x2430 (ite (and (distinct ((_ extract 39 39) C1) (_ bv0 1)) true) (_ bv39 49) (ite (and (distinct ((_ extract 38 38) C1) (_ bv0 1)) true) (_ bv38 49) (_ bv37 49)))))
 (let ((?x1629 (ite (and (distinct ((_ extract 42 42) C1) (_ bv0 1)) true) (_ bv42 49) (ite (and (distinct ((_ extract 41 41) C1) (_ bv0 1)) true) (_ bv41 49) (_ bv40 49)))))
 (let ((?x5614 (ite (and (distinct ((_ extract 45 45) C1) (_ bv0 1)) true) (_ bv45 49) (ite (and (distinct ((_ extract 44 44) C1) (_ bv0 1)) true) (_ bv44 49) (_ bv43 49)))))
 (let ((?x4298 (ite (and (distinct ((_ extract 48 48) C1) (_ bv0 1)) true) (_ bv48 49) (ite (and (distinct ((_ extract 47 47) C1) (_ bv0 1)) true) (_ bv47 49) (_ bv46 49)))))
 (let ((?x5086 (ite (and (distinct ((_ extract 48 43) C1) (_ bv0 6)) true) (ite (and (distinct ((_ extract 48 46) C1) (_ bv0 3)) true) ?x4298 ?x5614) (ite (and (distinct ((_ extract 42 40) C1) (_ bv0 3)) true) ?x1629 ?x2430))))
 (let ((?x2558 (ite (and (distinct ((_ extract 48 25) C1) (_ bv0 24)) true) (ite (and (distinct ((_ extract 48 37) C1) (_ bv0 12)) true) ?x5086 ?x1532) (ite (and (distinct ((_ extract 24 13) C1) (_ bv0 12)) true) ?x2933 ?x4975))))
 (let ((?x2682 (bvsub ?x2558 ?x1234)))
 (let ((?x2329 (bvand %X C1)))
 (let ((?x6540 (bvor %Y C2)))
 (let (($x5477 (and (distinct (ite (= (ite (and (distinct ?x2329 (_ bv0 49)) true) (_ bv1 1) (_ bv0 1)) (_ bv1 1)) ?x6540 %Y) (bvor ((_ extract 10 0) (bvlshr ?x2329 ?x2682)) %Y)) true)))
 (let ((?x2216 (ite (and (distinct ((_ extract 3 2) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 3 3) C1) (_ bv0 1)) true) (_ bv3 32) (_ bv2 32)) (ite (and (distinct ((_ extract 1 1) C1) (_ bv0 1)) true) (_ bv1 32) (_ bv0 32)))))
 (let ((?x6472 (ite (and (distinct ((_ extract 6 6) C1) (_ bv0 1)) true) (_ bv6 32) (ite (and (distinct ((_ extract 5 5) C1) (_ bv0 1)) true) (_ bv5 32) (_ bv4 32)))))
 (let ((?x2816 (ite (and (distinct ((_ extract 9 9) C1) (_ bv0 1)) true) (_ bv9 32) (ite (and (distinct ((_ extract 8 8) C1) (_ bv0 1)) true) (_ bv8 32) (_ bv7 32)))))
 (let ((?x4036 (ite (and (distinct ((_ extract 12 12) C1) (_ bv0 1)) true) (_ bv12 32) (ite (and (distinct ((_ extract 11 11) C1) (_ bv0 1)) true) (_ bv11 32) (_ bv10 32)))))
 (let ((?x2162 (ite (and (distinct ((_ extract 12 7) C1) (_ bv0 6)) true) (ite (and (distinct ((_ extract 12 10) C1) (_ bv0 3)) true) ?x4036 ?x2816) (ite (and (distinct ((_ extract 6 4) C1) (_ bv0 3)) true) ?x6472 ?x2216))))
 (let ((?x5099 (ite (and (distinct ((_ extract 15 15) C1) (_ bv0 1)) true) (_ bv15 32) (ite (and (distinct ((_ extract 14 14) C1) (_ bv0 1)) true) (_ bv14 32) (_ bv13 32)))))
 (let ((?x2854 (ite (and (distinct ((_ extract 18 18) C1) (_ bv0 1)) true) (_ bv18 32) (ite (and (distinct ((_ extract 17 17) C1) (_ bv0 1)) true) (_ bv17 32) (_ bv16 32)))))
 (let ((?x6189 (ite (and (distinct ((_ extract 21 21) C1) (_ bv0 1)) true) (_ bv21 32) (ite (and (distinct ((_ extract 20 20) C1) (_ bv0 1)) true) (_ bv20 32) (_ bv19 32)))))
 (let ((?x5582 (ite (and (distinct ((_ extract 24 24) C1) (_ bv0 1)) true) (_ bv24 32) (ite (and (distinct ((_ extract 23 23) C1) (_ bv0 1)) true) (_ bv23 32) (_ bv22 32)))))
 (let ((?x3078 (ite (and (distinct ((_ extract 24 19) C1) (_ bv0 6)) true) (ite (and (distinct ((_ extract 24 22) C1) (_ bv0 3)) true) ?x5582 ?x6189) (ite (and (distinct ((_ extract 18 16) C1) (_ bv0 3)) true) ?x2854 ?x5099))))
 (let ((?x3449 (ite (and (distinct ((_ extract 27 27) C1) (_ bv0 1)) true) (_ bv27 32) (ite (and (distinct ((_ extract 26 26) C1) (_ bv0 1)) true) (_ bv26 32) (_ bv25 32)))))
 (let ((?x3791 (ite (and (distinct ((_ extract 30 30) C1) (_ bv0 1)) true) (_ bv30 32) (ite (and (distinct ((_ extract 29 29) C1) (_ bv0 1)) true) (_ bv29 32) (_ bv28 32)))))
 (let ((?x2947 (ite (and (distinct ((_ extract 33 33) C1) (_ bv0 1)) true) (_ bv33 32) (ite (and (distinct ((_ extract 32 32) C1) (_ bv0 1)) true) (_ bv32 32) (_ bv31 32)))))
 (let ((?x2703 (ite (and (distinct ((_ extract 36 36) C1) (_ bv0 1)) true) (_ bv36 32) (ite (and (distinct ((_ extract 35 35) C1) (_ bv0 1)) true) (_ bv35 32) (_ bv34 32)))))
 (let ((?x4796 (ite (and (distinct ((_ extract 36 31) C1) (_ bv0 6)) true) (ite (and (distinct ((_ extract 36 34) C1) (_ bv0 3)) true) ?x2703 ?x2947) (ite (and (distinct ((_ extract 30 28) C1) (_ bv0 3)) true) ?x3791 ?x3449))))
 (let ((?x2188 (ite (and (distinct ((_ extract 39 39) C1) (_ bv0 1)) true) (_ bv39 32) (ite (and (distinct ((_ extract 38 38) C1) (_ bv0 1)) true) (_ bv38 32) (_ bv37 32)))))
 (let ((?x4162 (ite (and (distinct ((_ extract 42 42) C1) (_ bv0 1)) true) (_ bv42 32) (ite (and (distinct ((_ extract 41 41) C1) (_ bv0 1)) true) (_ bv41 32) (_ bv40 32)))))
 (let ((?x2017 (ite (and (distinct ((_ extract 45 45) C1) (_ bv0 1)) true) (_ bv45 32) (ite (and (distinct ((_ extract 44 44) C1) (_ bv0 1)) true) (_ bv44 32) (_ bv43 32)))))
 (let ((?x3955 (ite (and (distinct ((_ extract 48 48) C1) (_ bv0 1)) true) (_ bv48 32) (ite (and (distinct ((_ extract 47 47) C1) (_ bv0 1)) true) (_ bv47 32) (_ bv46 32)))))
 (let ((?x2655 (ite (and (distinct ((_ extract 48 43) C1) (_ bv0 6)) true) (ite (and (distinct ((_ extract 48 46) C1) (_ bv0 3)) true) ?x3955 ?x2017) (ite (and (distinct ((_ extract 42 40) C1) (_ bv0 3)) true) ?x4162 ?x2188))))
 (let ((?x4633 (ite (and (distinct ((_ extract 48 25) C1) (_ bv0 24)) true) (ite (and (distinct ((_ extract 48 37) C1) (_ bv0 12)) true) ?x2655 ?x4796) (ite (and (distinct ((_ extract 24 13) C1) (_ bv0 12)) true) ?x3078 ?x2162))))
 (let ((?x6774 (ite (and (distinct ((_ extract 2 2) C2) (_ bv0 1)) true) (_ bv2 32) (ite (and (distinct ((_ extract 1 1) C2) (_ bv0 1)) true) (_ bv1 32) (_ bv0 32)))))
 (let ((?x1755 (ite (and (distinct ((_ extract 5 5) C2) (_ bv0 1)) true) (_ bv5 32) (ite (and (distinct ((_ extract 4 4) C2) (_ bv0 1)) true) (_ bv4 32) (_ bv3 32)))))
 (let ((?x2264 (ite (and (distinct ((_ extract 8 8) C2) (_ bv0 1)) true) (_ bv8 32) (ite (and (distinct ((_ extract 7 7) C2) (_ bv0 1)) true) (_ bv7 32) (_ bv6 32)))))
 (let ((?x3702 (ite (and (distinct ((_ extract 10 9) C2) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) C2) (_ bv0 1)) true) (_ bv10 32) (_ bv9 32)) ?x2264)))
 (let ((?x6735 (ite (and (distinct ((_ extract 10 6) C2) (_ bv0 5)) true) ?x3702 (ite (and (distinct ((_ extract 5 3) C2) (_ bv0 3)) true) ?x1755 ?x6774))))
 (and (and (and (distinct C1 (_ bv0 49)) true) (= (bvand C1 (bvsub C1 (_ bv1 49))) (_ bv0 49))) (and (and (distinct C2 (_ bv0 11)) true) (= (bvand C2 (bvsub C2 (_ bv1 11))) (_ bv0 11))) (bvslt ?x6735 ?x4633) $x5477))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
