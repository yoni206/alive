(set-info :status unknown)
(declare-fun mem0 () (_ BitVec 8))
(declare-fun %y () (_ BitVec 25))
(declare-fun %p2 () (_ BitVec 64))
(declare-fun idx () (_ BitVec 64))
(declare-fun %x () (_ BitVec 25))
(declare-fun %p1 () (_ BitVec 64))
(declare-fun |ana_equivalentAddressValues(%p1, %p2)| () (_ BitVec 1))
(assert
 (let ((?x769 (ite (and (and (distinct %p2 (_ bv0 64)) true) (or true true) (= idx %p2)) (concat ((_ extract 7 1) mem0) ((_ extract 0 0) %y)) mem0)))
 (let (($x11371 (or true true)))
 (let (($x20865 (and (distinct %p2 (_ bv0 64)) true)))
 (let ((?x4757 (ite (and $x20865 $x11371 (= idx (bvadd (bvadd %p2 (_ bv1 64)) (_ bv0 64)))) ((_ extract 8 1) %y) ?x769)))
 (let ((?x17592 (ite (and $x20865 $x11371 (= idx (bvadd (bvadd %p2 (_ bv1 64)) (_ bv1 64)))) ((_ extract 16 9) %y) ?x4757)))
 (let ((?x4515 (ite (and $x20865 $x11371 (= idx (bvadd (bvadd %p2 (_ bv1 64)) (_ bv2 64)))) ((_ extract 24 17) %y) ?x17592)))
 (let ((?x8696 (ite (and (and (distinct %p1 (_ bv0 64)) true) $x11371 (= idx %p1)) (concat ((_ extract 7 1) mem0) ((_ extract 0 0) %x)) mem0)))
 (let (($x17212 (and (distinct %p1 (_ bv0 64)) true)))
 (let ((?x5441 (ite (and $x17212 $x11371 (= idx (bvadd (bvadd %p1 (_ bv1 64)) (_ bv0 64)))) ((_ extract 8 1) %x) ?x8696)))
 (let ((?x2094 (ite (and $x17212 $x11371 (= idx (bvadd (bvadd %p1 (_ bv1 64)) (_ bv1 64)))) ((_ extract 16 9) %x) ?x5441)))
 (let ((?x18561 (ite (and $x17212 $x11371 (= idx (bvadd (bvadd %p1 (_ bv1 64)) (_ bv2 64)))) ((_ extract 24 17) %x) ?x2094)))
 (let ((?x17538 (ite (and $x17212 $x11371 (= %p2 %p1)) (concat ((_ extract 7 1) mem0) ((_ extract 0 0) %x)) mem0)))
 (let ((?x7397 (ite (and $x17212 $x11371 (= %p2 (bvadd (bvadd %p1 (_ bv1 64)) (_ bv0 64)))) ((_ extract 8 1) %x) ?x17538)))
 (let ((?x21710 (ite (and $x17212 $x11371 (= %p2 (bvadd (bvadd %p1 (_ bv1 64)) (_ bv1 64)))) ((_ extract 16 9) %x) ?x7397)))
 (let ((?x14788 (ite (and $x17212 $x11371 (= %p2 (bvadd (bvadd %p1 (_ bv1 64)) (_ bv2 64)))) ((_ extract 24 17) %x) ?x21710)))
 (let ((?x18598 (ite (and $x17212 $x11371 $x20865 $x11371 (= idx %p2)) (concat ((_ extract 7 1) ?x14788) ((_ extract 0 0) %y)) ?x18561)))
 (let ((?x17981 (ite (and $x17212 $x11371 $x20865 $x11371 (= idx (bvadd (bvadd %p2 (_ bv1 64)) (_ bv0 64)))) ((_ extract 8 1) %y) ?x18598)))
 (let ((?x6060 (ite (and $x17212 $x11371 $x20865 $x11371 (= idx (bvadd (bvadd %p2 (_ bv1 64)) (_ bv1 64)))) ((_ extract 16 9) %y) ?x17981)))
 (let ((?x17144 (ite (and $x17212 $x11371 $x20865 $x11371 (= idx (bvadd (bvadd %p2 (_ bv1 64)) (_ bv2 64)))) ((_ extract 24 17) %y) ?x6060)))
 (let (($x10121 (= |ana_equivalentAddressValues(%p1, %p2)| (_ bv1 1))))
 (and (=> $x10121 (= %p1 %p2)) $x10121 (and (distinct ?x17144 ?x4515) true)))))))))))))))))))))))
(check-sat)
