(set-info :status unknown)
(declare-fun C3 () (_ BitVec 11))
(declare-fun C2 () (_ BitVec 11))
(declare-fun C () (_ BitVec 41))
(assert
 (let ((?x10942 (ite (and (distinct ((_ extract 2 2) (bvsub C2 C3)) (_ bv0 1)) true) (_ bv2 11) (ite (and (distinct ((_ extract 1 1) (bvsub C2 C3)) (_ bv0 1)) true) (_ bv1 11) (_ bv0 11)))))
 (let ((?x19800 (ite (and (distinct ((_ extract 5 5) (bvsub C2 C3)) (_ bv0 1)) true) (_ bv5 11) (ite (and (distinct ((_ extract 4 4) (bvsub C2 C3)) (_ bv0 1)) true) (_ bv4 11) (_ bv3 11)))))
 (let ((?x14577 (ite (and (distinct ((_ extract 8 8) (bvsub C2 C3)) (_ bv0 1)) true) (_ bv8 11) (ite (and (distinct ((_ extract 7 7) (bvsub C2 C3)) (_ bv0 1)) true) (_ bv7 11) (_ bv6 11)))))
 (let ((?x10893 (ite (and (distinct ((_ extract 10 9) (bvsub C2 C3)) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) (bvsub C2 C3)) (_ bv0 1)) true) (_ bv10 11) (_ bv9 11)) ?x14577)))
 (let ((?x17244 (ite (and (distinct ((_ extract 10 6) (bvsub C2 C3)) (_ bv0 5)) true) ?x10893 (ite (and (distinct ((_ extract 5 3) (bvsub C2 C3)) (_ bv0 3)) true) ?x19800 ?x10942))))
 (let ((?x12907 (ite (and (distinct ((_ extract 2 2) C) (_ bv0 1)) true) (_ bv2 11) (ite (and (distinct ((_ extract 1 1) C) (_ bv0 1)) true) (_ bv1 11) (_ bv0 11)))))
 (let ((?x2929 (ite (and (distinct ((_ extract 5 5) C) (_ bv0 1)) true) (_ bv5 11) (ite (and (distinct ((_ extract 4 4) C) (_ bv0 1)) true) (_ bv4 11) (_ bv3 11)))))
 (let ((?x9929 (ite (and (distinct ((_ extract 8 8) C) (_ bv0 1)) true) (_ bv8 11) (ite (and (distinct ((_ extract 7 7) C) (_ bv0 1)) true) (_ bv7 11) (_ bv6 11)))))
 (let ((?x4082 (ite (and (distinct ((_ extract 10 9) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) C) (_ bv0 1)) true) (_ bv10 11) (_ bv9 11)) ?x9929)))
 (let ((?x14072 (ite (and (distinct ((_ extract 10 6) C) (_ bv0 5)) true) ?x4082 (ite (and (distinct ((_ extract 5 3) C) (_ bv0 3)) true) ?x2929 ?x12907))))
 (let ((?x16191 (ite (and (distinct ((_ extract 13 13) C) (_ bv0 1)) true) (_ bv13 11) (ite (and (distinct ((_ extract 12 12) C) (_ bv0 1)) true) (_ bv12 11) (_ bv11 11)))))
 (let ((?x15531 (ite (and (distinct ((_ extract 15 14) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 15 15) C) (_ bv0 1)) true) (_ bv15 11) (_ bv14 11)) ?x16191)))
 (let ((?x13890 (ite (and (distinct ((_ extract 18 18) C) (_ bv0 1)) true) (_ bv18 11) (ite (and (distinct ((_ extract 17 17) C) (_ bv0 1)) true) (_ bv17 11) (_ bv16 11)))))
 (let ((?x13824 (ite (and (distinct ((_ extract 20 19) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 20 20) C) (_ bv0 1)) true) (_ bv20 11) (_ bv19 11)) ?x13890)))
 (let ((?x14944 (ite (and (distinct ((_ extract 20 11) C) (_ bv0 10)) true) (ite (and (distinct ((_ extract 20 16) C) (_ bv0 5)) true) ?x13824 ?x15531) ?x14072)))
 (let ((?x3787 (ite (and (distinct ((_ extract 23 23) C) (_ bv0 1)) true) (_ bv23 11) (ite (and (distinct ((_ extract 22 22) C) (_ bv0 1)) true) (_ bv22 11) (_ bv21 11)))))
 (let ((?x6847 (ite (and (distinct ((_ extract 25 24) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 25 25) C) (_ bv0 1)) true) (_ bv25 11) (_ bv24 11)) ?x3787)))
 (let ((?x3210 (ite (and (distinct ((_ extract 28 28) C) (_ bv0 1)) true) (_ bv28 11) (ite (and (distinct ((_ extract 27 27) C) (_ bv0 1)) true) (_ bv27 11) (_ bv26 11)))))
 (let ((?x3181 (ite (and (distinct ((_ extract 30 29) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 30 30) C) (_ bv0 1)) true) (_ bv30 11) (_ bv29 11)) ?x3210)))
 (let ((?x1514 (ite (and (distinct ((_ extract 33 33) C) (_ bv0 1)) true) (_ bv33 11) (ite (and (distinct ((_ extract 32 32) C) (_ bv0 1)) true) (_ bv32 11) (_ bv31 11)))))
 (let ((?x16823 (ite (and (distinct ((_ extract 35 34) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 35 35) C) (_ bv0 1)) true) (_ bv35 11) (_ bv34 11)) ?x1514)))
 (let ((?x8935 (ite (and (distinct ((_ extract 38 38) C) (_ bv0 1)) true) (_ bv38 11) (ite (and (distinct ((_ extract 37 37) C) (_ bv0 1)) true) (_ bv37 11) (_ bv36 11)))))
 (let ((?x320 (ite (and (distinct ((_ extract 40 39) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 40 40) C) (_ bv0 1)) true) (_ bv40 11) (_ bv39 11)) ?x8935)))
 (let ((?x6643 (ite (and (distinct ((_ extract 40 31) C) (_ bv0 10)) true) (ite (and (distinct ((_ extract 40 36) C) (_ bv0 5)) true) ?x320 ?x16823) (ite (and (distinct ((_ extract 30 26) C) (_ bv0 5)) true) ?x3181 ?x6847))))
 (let ((?x4231 (bvsub (ite (and (distinct ((_ extract 40 21) C) (_ bv0 20)) true) ?x6643 ?x14944) ?x17244)))
 (let ((?x2356 (ite (bvsgt (_ bv0 11) ?x4231) (_ bv0 11) ?x4231)))
 (let ((?x19906 (bvsub ?x17244 (ite (and (distinct ((_ extract 40 21) C) (_ bv0 20)) true) ?x6643 ?x14944))))
 (let ((?x9439 (ite (bvsgt (_ bv0 11) ?x19906) (_ bv0 11) ?x19906)))
 (let ((?x15720 (ite (and (distinct ((_ extract 2 2) C) (_ bv0 1)) true) (_ bv2 32) (ite (and (distinct ((_ extract 1 1) C) (_ bv0 1)) true) (_ bv1 32) (_ bv0 32)))))
 (let ((?x12797 (ite (and (distinct ((_ extract 5 5) C) (_ bv0 1)) true) (_ bv5 32) (ite (and (distinct ((_ extract 4 4) C) (_ bv0 1)) true) (_ bv4 32) (_ bv3 32)))))
 (let ((?x10839 (ite (and (distinct ((_ extract 8 8) C) (_ bv0 1)) true) (_ bv8 32) (ite (and (distinct ((_ extract 7 7) C) (_ bv0 1)) true) (_ bv7 32) (_ bv6 32)))))
 (let ((?x12711 (ite (and (distinct ((_ extract 10 9) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) C) (_ bv0 1)) true) (_ bv10 32) (_ bv9 32)) ?x10839)))
 (let ((?x16549 (ite (and (distinct ((_ extract 10 6) C) (_ bv0 5)) true) ?x12711 (ite (and (distinct ((_ extract 5 3) C) (_ bv0 3)) true) ?x12797 ?x15720))))
 (let ((?x8361 (ite (and (distinct ((_ extract 13 13) C) (_ bv0 1)) true) (_ bv13 32) (ite (and (distinct ((_ extract 12 12) C) (_ bv0 1)) true) (_ bv12 32) (_ bv11 32)))))
 (let ((?x7226 (ite (and (distinct ((_ extract 15 14) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 15 15) C) (_ bv0 1)) true) (_ bv15 32) (_ bv14 32)) ?x8361)))
 (let ((?x4790 (ite (and (distinct ((_ extract 18 18) C) (_ bv0 1)) true) (_ bv18 32) (ite (and (distinct ((_ extract 17 17) C) (_ bv0 1)) true) (_ bv17 32) (_ bv16 32)))))
 (let ((?x4181 (ite (and (distinct ((_ extract 20 19) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 20 20) C) (_ bv0 1)) true) (_ bv20 32) (_ bv19 32)) ?x4790)))
 (let ((?x16399 (ite (and (distinct ((_ extract 20 11) C) (_ bv0 10)) true) (ite (and (distinct ((_ extract 20 16) C) (_ bv0 5)) true) ?x4181 ?x7226) ?x16549)))
 (let ((?x20457 (ite (and (distinct ((_ extract 23 23) C) (_ bv0 1)) true) (_ bv23 32) (ite (and (distinct ((_ extract 22 22) C) (_ bv0 1)) true) (_ bv22 32) (_ bv21 32)))))
 (let ((?x20369 (ite (and (distinct ((_ extract 25 24) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 25 25) C) (_ bv0 1)) true) (_ bv25 32) (_ bv24 32)) ?x20457)))
 (let ((?x2831 (ite (and (distinct ((_ extract 28 28) C) (_ bv0 1)) true) (_ bv28 32) (ite (and (distinct ((_ extract 27 27) C) (_ bv0 1)) true) (_ bv27 32) (_ bv26 32)))))
 (let ((?x195 (ite (and (distinct ((_ extract 30 29) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 30 30) C) (_ bv0 1)) true) (_ bv30 32) (_ bv29 32)) ?x2831)))
 (let ((?x6152 (ite (and (distinct ((_ extract 33 33) C) (_ bv0 1)) true) (_ bv33 32) (ite (and (distinct ((_ extract 32 32) C) (_ bv0 1)) true) (_ bv32 32) (_ bv31 32)))))
 (let ((?x2761 (ite (and (distinct ((_ extract 35 34) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 35 35) C) (_ bv0 1)) true) (_ bv35 32) (_ bv34 32)) ?x6152)))
 (let ((?x2517 (ite (and (distinct ((_ extract 38 38) C) (_ bv0 1)) true) (_ bv38 32) (ite (and (distinct ((_ extract 37 37) C) (_ bv0 1)) true) (_ bv37 32) (_ bv36 32)))))
 (let ((?x10320 (ite (and (distinct ((_ extract 40 39) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 40 40) C) (_ bv0 1)) true) (_ bv40 32) (_ bv39 32)) ?x2517)))
 (let ((?x712 (ite (and (distinct ((_ extract 40 31) C) (_ bv0 10)) true) (ite (and (distinct ((_ extract 40 36) C) (_ bv0 5)) true) ?x10320 ?x2761) (ite (and (distinct ((_ extract 30 26) C) (_ bv0 5)) true) ?x195 ?x20369))))
 (let (($x18890 (and (and (distinct (bvsub C2 C3) (_ bv0 11)) true) (= (bvand (bvsub C2 C3) (bvsub (bvsub C2 C3) (_ bv1 11))) (_ bv0 11)))))
 (and (and (and (distinct C (_ bv0 41)) true) (= (bvand C (bvsub C (_ bv1 41))) (_ bv0 41))) $x18890 (bvslt (ite (and (distinct ((_ extract 40 21) C) (_ bv0 20)) true) ?x712 ?x16399) (_ bv11 32)) (not (and (bvult ?x9439 (_ bv11 11)) (bvult ?x2356 (_ bv11 11))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
