(set-info :status unknown)
(declare-fun mem0 () (_ BitVec 8))
(declare-fun %y () (_ BitVec 15))
(declare-fun %p2 () (_ BitVec 64))
(declare-fun idx () (_ BitVec 64))
(declare-fun %x () (_ BitVec 15))
(declare-fun %p1 () (_ BitVec 64))
(declare-fun |ana_equivalentAddressValues(%p1, %p2)| () (_ BitVec 1))
(assert
 (let ((?x5553 (ite (and (and (distinct %p2 (_ bv0 64)) true) (or true true) (= idx %p2)) (concat ((_ extract 7 7) mem0) ((_ extract 6 0) %y)) mem0)))
 (let (($x12673 (or true true)))
 (let (($x21710 (and (distinct %p2 (_ bv0 64)) true)))
 (let ((?x10461 (ite (and $x21710 $x12673 (= idx (bvadd (bvadd %p2 (_ bv1 64)) (_ bv0 64)))) ((_ extract 14 7) %y) ?x5553)))
 (let ((?x9453 (ite (and (and (distinct %p1 (_ bv0 64)) true) $x12673 (= idx %p1)) (concat ((_ extract 7 7) mem0) ((_ extract 6 0) %x)) mem0)))
 (let (($x17212 (and (distinct %p1 (_ bv0 64)) true)))
 (let ((?x10663 (ite (and $x17212 $x12673 (= idx (bvadd (bvadd %p1 (_ bv1 64)) (_ bv0 64)))) ((_ extract 14 7) %x) ?x9453)))
 (let ((?x2094 (ite (and $x17212 $x12673 (= %p2 %p1)) (concat ((_ extract 7 7) mem0) ((_ extract 6 0) %x)) mem0)))
 (let ((?x18598 (ite (and $x17212 $x12673 (= %p2 (bvadd (bvadd %p1 (_ bv1 64)) (_ bv0 64)))) ((_ extract 14 7) %x) ?x2094)))
 (let ((?x14222 (ite (and $x17212 $x12673 $x21710 $x12673 (= idx %p2)) (concat ((_ extract 7 7) ?x18598) ((_ extract 6 0) %y)) ?x10663)))
 (let ((?x16308 (ite (and $x17212 $x12673 $x21710 $x12673 (= idx (bvadd (bvadd %p2 (_ bv1 64)) (_ bv0 64)))) ((_ extract 14 7) %y) ?x14222)))
 (let (($x12067 (= |ana_equivalentAddressValues(%p1, %p2)| (_ bv1 1))))
 (and (=> $x12067 (= %p1 %p2)) $x12067 (and (distinct ?x16308 ?x10461) true)))))))))))))))
(check-sat)
