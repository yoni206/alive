(set-info :status unknown)
(declare-fun C3 () (_ BitVec 11))
(declare-fun C2 () (_ BitVec 11))
(declare-fun C () (_ BitVec 14))
(declare-fun %Op () (_ BitVec 14))
(assert
 (let ((?x5433 (bvsub C2 C3)))
 (let ((?x1662 (ite (and (distinct ((_ extract 2 2) ?x5433) (_ bv0 1)) true) (_ bv2 11) (ite (and (distinct ((_ extract 1 1) ?x5433) (_ bv0 1)) true) (_ bv1 11) (_ bv0 11)))))
 (let ((?x2452 (ite (and (distinct ((_ extract 5 5) ?x5433) (_ bv0 1)) true) (_ bv5 11) (ite (and (distinct ((_ extract 4 4) ?x5433) (_ bv0 1)) true) (_ bv4 11) (_ bv3 11)))))
 (let ((?x4474 (ite (and (distinct ((_ extract 8 8) ?x5433) (_ bv0 1)) true) (_ bv8 11) (ite (and (distinct ((_ extract 7 7) ?x5433) (_ bv0 1)) true) (_ bv7 11) (_ bv6 11)))))
 (let ((?x1219 (ite (and (distinct ((_ extract 10 9) ?x5433) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) ?x5433) (_ bv0 1)) true) (_ bv10 11) (_ bv9 11)) ?x4474)))
 (let ((?x2831 (ite (and (distinct ((_ extract 10 6) ?x5433) (_ bv0 5)) true) ?x1219 (ite (and (distinct ((_ extract 5 3) ?x5433) (_ bv0 3)) true) ?x2452 ?x1662))))
 (let ((?x7643 (ite (and (distinct ((_ extract 3 2) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 3 3) C) (_ bv0 1)) true) (_ bv3 11) (_ bv2 11)) (ite (and (distinct ((_ extract 1 1) C) (_ bv0 1)) true) (_ bv1 11) (_ bv0 11)))))
 (let ((?x2337 (ite (and (distinct ((_ extract 6 6) C) (_ bv0 1)) true) (_ bv6 11) (ite (and (distinct ((_ extract 5 5) C) (_ bv0 1)) true) (_ bv5 11) (_ bv4 11)))))
 (let ((?x6025 (ite (and (distinct ((_ extract 10 9) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) C) (_ bv0 1)) true) (_ bv10 11) (_ bv9 11)) (ite (and (distinct ((_ extract 8 8) C) (_ bv0 1)) true) (_ bv8 11) (_ bv7 11)))))
 (let ((?x3987 (ite (and (distinct ((_ extract 13 13) C) (_ bv0 1)) true) (_ bv13 11) (ite (and (distinct ((_ extract 12 12) C) (_ bv0 1)) true) (_ bv12 11) (_ bv11 11)))))
 (let ((?x5240 (ite (and (distinct ((_ extract 13 7) C) (_ bv0 7)) true) (ite (and (distinct ((_ extract 13 11) C) (_ bv0 3)) true) ?x3987 ?x6025) (ite (and (distinct ((_ extract 6 4) C) (_ bv0 3)) true) ?x2337 ?x7643))))
 (let ((?x5774 (bvsub ?x5240 ?x2831)))
 (let ((?x3700 (ite (bvsgt (_ bv0 11) ?x5774) (_ bv0 11) ?x5774)))
 (let ((?x6651 (bvsub ?x2831 ?x5240)))
 (let ((?x2600 (ite (bvsgt (_ bv0 11) ?x6651) (_ bv0 11) ?x6651)))
 (let ((?x1868 (bvadd (bvxor (bvlshr (bvshl ((_ extract 10 0) (bvand %Op C)) ?x2600) ?x3700) ?x5433) C3)))
 (let (($x5770 (and (distinct (ite (= (ite (= (bvand %Op C) (_ bv0 14)) (_ bv1 1) (_ bv0 1)) (_ bv1 1)) C2 C3) ?x1868) true)))
 (let ((?x3524 (ite (and (distinct ((_ extract 3 2) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 3 3) C) (_ bv0 1)) true) (_ bv3 32) (_ bv2 32)) (ite (and (distinct ((_ extract 1 1) C) (_ bv0 1)) true) (_ bv1 32) (_ bv0 32)))))
 (let ((?x2810 (ite (and (distinct ((_ extract 6 6) C) (_ bv0 1)) true) (_ bv6 32) (ite (and (distinct ((_ extract 5 5) C) (_ bv0 1)) true) (_ bv5 32) (_ bv4 32)))))
 (let ((?x1757 (ite (and (distinct ((_ extract 10 9) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) C) (_ bv0 1)) true) (_ bv10 32) (_ bv9 32)) (ite (and (distinct ((_ extract 8 8) C) (_ bv0 1)) true) (_ bv8 32) (_ bv7 32)))))
 (let ((?x8477 (ite (and (distinct ((_ extract 13 13) C) (_ bv0 1)) true) (_ bv13 32) (ite (and (distinct ((_ extract 12 12) C) (_ bv0 1)) true) (_ bv12 32) (_ bv11 32)))))
 (let ((?x5286 (ite (and (distinct ((_ extract 13 7) C) (_ bv0 7)) true) (ite (and (distinct ((_ extract 13 11) C) (_ bv0 3)) true) ?x8477 ?x1757) (ite (and (distinct ((_ extract 6 4) C) (_ bv0 3)) true) ?x2810 ?x3524))))
 (and (and (and (distinct C (_ bv0 14)) true) (= (bvand C (bvsub C (_ bv1 14))) (_ bv0 14))) (and (and (distinct ?x5433 (_ bv0 11)) true) (= (bvand ?x5433 (bvsub ?x5433 (_ bv1 11))) (_ bv0 11))) (bvslt ?x5286 (_ bv11 32)) $x5770))))))))))))))))))))))))
(check-sat)
