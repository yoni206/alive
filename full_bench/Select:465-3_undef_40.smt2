(set-info :status unknown)
(declare-fun C2 () (_ BitVec 11))
(declare-fun C1 () (_ BitVec 42))
(assert
 (let ((?x15613 (ite (and (distinct ((_ extract 2 2) C2) (_ bv0 1)) true) (_ bv2 42) (ite (and (distinct ((_ extract 1 1) C2) (_ bv0 1)) true) (_ bv1 42) (_ bv0 42)))))
 (let ((?x16980 (ite (and (distinct ((_ extract 5 5) C2) (_ bv0 1)) true) (_ bv5 42) (ite (and (distinct ((_ extract 4 4) C2) (_ bv0 1)) true) (_ bv4 42) (_ bv3 42)))))
 (let ((?x11005 (ite (and (distinct ((_ extract 8 8) C2) (_ bv0 1)) true) (_ bv8 42) (ite (and (distinct ((_ extract 7 7) C2) (_ bv0 1)) true) (_ bv7 42) (_ bv6 42)))))
 (let ((?x17630 (ite (and (distinct ((_ extract 10 9) C2) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) C2) (_ bv0 1)) true) (_ bv10 42) (_ bv9 42)) ?x11005)))
 (let ((?x11486 (ite (and (distinct ((_ extract 10 6) C2) (_ bv0 5)) true) ?x17630 (ite (and (distinct ((_ extract 5 3) C2) (_ bv0 3)) true) ?x16980 ?x15613))))
 (let ((?x22935 (ite (and (distinct ((_ extract 2 2) C1) (_ bv0 1)) true) (_ bv2 42) (ite (and (distinct ((_ extract 1 1) C1) (_ bv0 1)) true) (_ bv1 42) (_ bv0 42)))))
 (let ((?x8934 (ite (and (distinct ((_ extract 5 5) C1) (_ bv0 1)) true) (_ bv5 42) (ite (and (distinct ((_ extract 4 4) C1) (_ bv0 1)) true) (_ bv4 42) (_ bv3 42)))))
 (let ((?x16544 (ite (and (distinct ((_ extract 8 8) C1) (_ bv0 1)) true) (_ bv8 42) (ite (and (distinct ((_ extract 7 7) C1) (_ bv0 1)) true) (_ bv7 42) (_ bv6 42)))))
 (let ((?x15907 (ite (and (distinct ((_ extract 10 9) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) C1) (_ bv0 1)) true) (_ bv10 42) (_ bv9 42)) ?x16544)))
 (let ((?x11195 (ite (and (distinct ((_ extract 10 6) C1) (_ bv0 5)) true) ?x15907 (ite (and (distinct ((_ extract 5 3) C1) (_ bv0 3)) true) ?x8934 ?x22935))))
 (let ((?x11027 (ite (and (distinct ((_ extract 13 13) C1) (_ bv0 1)) true) (_ bv13 42) (ite (and (distinct ((_ extract 12 12) C1) (_ bv0 1)) true) (_ bv12 42) (_ bv11 42)))))
 (let ((?x9332 (ite (and (distinct ((_ extract 15 14) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 15 15) C1) (_ bv0 1)) true) (_ bv15 42) (_ bv14 42)) ?x11027)))
 (let ((?x7501 (ite (and (distinct ((_ extract 18 18) C1) (_ bv0 1)) true) (_ bv18 42) (ite (and (distinct ((_ extract 17 17) C1) (_ bv0 1)) true) (_ bv17 42) (_ bv16 42)))))
 (let ((?x22234 (ite (and (distinct ((_ extract 20 19) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 20 20) C1) (_ bv0 1)) true) (_ bv20 42) (_ bv19 42)) ?x7501)))
 (let ((?x14487 (ite (and (distinct ((_ extract 20 11) C1) (_ bv0 10)) true) (ite (and (distinct ((_ extract 20 16) C1) (_ bv0 5)) true) ?x22234 ?x9332) ?x11195)))
 (let ((?x13862 (ite (and (distinct ((_ extract 23 23) C1) (_ bv0 1)) true) (_ bv23 42) (ite (and (distinct ((_ extract 22 22) C1) (_ bv0 1)) true) (_ bv22 42) (_ bv21 42)))))
 (let ((?x6798 (ite (and (distinct ((_ extract 26 26) C1) (_ bv0 1)) true) (_ bv26 42) (ite (and (distinct ((_ extract 25 25) C1) (_ bv0 1)) true) (_ bv25 42) (_ bv24 42)))))
 (let ((?x18972 (ite (and (distinct ((_ extract 29 29) C1) (_ bv0 1)) true) (_ bv29 42) (ite (and (distinct ((_ extract 28 28) C1) (_ bv0 1)) true) (_ bv28 42) (_ bv27 42)))))
 (let ((?x18864 (ite (and (distinct ((_ extract 31 30) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 31 31) C1) (_ bv0 1)) true) (_ bv31 42) (_ bv30 42)) ?x18972)))
 (let ((?x1257 (ite (and (distinct ((_ extract 31 27) C1) (_ bv0 5)) true) ?x18864 (ite (and (distinct ((_ extract 26 24) C1) (_ bv0 3)) true) ?x6798 ?x13862))))
 (let ((?x24735 (ite (and (distinct ((_ extract 34 34) C1) (_ bv0 1)) true) (_ bv34 42) (ite (and (distinct ((_ extract 33 33) C1) (_ bv0 1)) true) (_ bv33 42) (_ bv32 42)))))
 (let ((?x9996 (ite (and (distinct ((_ extract 36 35) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 36 36) C1) (_ bv0 1)) true) (_ bv36 42) (_ bv35 42)) ?x24735)))
 (let ((?x24180 (ite (and (distinct ((_ extract 39 39) C1) (_ bv0 1)) true) (_ bv39 42) (ite (and (distinct ((_ extract 38 38) C1) (_ bv0 1)) true) (_ bv38 42) (_ bv37 42)))))
 (let ((?x15435 (ite (and (distinct ((_ extract 41 40) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 41 41) C1) (_ bv0 1)) true) (_ bv41 42) (_ bv40 42)) ?x24180)))
 (let ((?x1104 (ite (and (distinct ((_ extract 41 32) C1) (_ bv0 10)) true) (ite (and (distinct ((_ extract 41 37) C1) (_ bv0 5)) true) ?x15435 ?x9996) ?x1257)))
 (let ((?x18546 (bvsub (ite (and (distinct ((_ extract 41 21) C1) (_ bv0 21)) true) ?x1104 ?x14487) ?x11486)))
 (let ((?x13578 (ite (and (distinct ((_ extract 2 2) C1) (_ bv0 1)) true) (_ bv2 32) (ite (and (distinct ((_ extract 1 1) C1) (_ bv0 1)) true) (_ bv1 32) (_ bv0 32)))))
 (let ((?x13151 (ite (and (distinct ((_ extract 5 5) C1) (_ bv0 1)) true) (_ bv5 32) (ite (and (distinct ((_ extract 4 4) C1) (_ bv0 1)) true) (_ bv4 32) (_ bv3 32)))))
 (let ((?x9714 (ite (and (distinct ((_ extract 8 8) C1) (_ bv0 1)) true) (_ bv8 32) (ite (and (distinct ((_ extract 7 7) C1) (_ bv0 1)) true) (_ bv7 32) (_ bv6 32)))))
 (let ((?x24897 (ite (and (distinct ((_ extract 10 9) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) C1) (_ bv0 1)) true) (_ bv10 32) (_ bv9 32)) ?x9714)))
 (let ((?x7092 (ite (and (distinct ((_ extract 10 6) C1) (_ bv0 5)) true) ?x24897 (ite (and (distinct ((_ extract 5 3) C1) (_ bv0 3)) true) ?x13151 ?x13578))))
 (let ((?x19376 (ite (and (distinct ((_ extract 13 13) C1) (_ bv0 1)) true) (_ bv13 32) (ite (and (distinct ((_ extract 12 12) C1) (_ bv0 1)) true) (_ bv12 32) (_ bv11 32)))))
 (let ((?x18984 (ite (and (distinct ((_ extract 15 14) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 15 15) C1) (_ bv0 1)) true) (_ bv15 32) (_ bv14 32)) ?x19376)))
 (let ((?x14692 (ite (and (distinct ((_ extract 18 18) C1) (_ bv0 1)) true) (_ bv18 32) (ite (and (distinct ((_ extract 17 17) C1) (_ bv0 1)) true) (_ bv17 32) (_ bv16 32)))))
 (let ((?x18812 (ite (and (distinct ((_ extract 20 19) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 20 20) C1) (_ bv0 1)) true) (_ bv20 32) (_ bv19 32)) ?x14692)))
 (let ((?x3075 (ite (and (distinct ((_ extract 20 11) C1) (_ bv0 10)) true) (ite (and (distinct ((_ extract 20 16) C1) (_ bv0 5)) true) ?x18812 ?x18984) ?x7092)))
 (let ((?x8825 (ite (and (distinct ((_ extract 23 23) C1) (_ bv0 1)) true) (_ bv23 32) (ite (and (distinct ((_ extract 22 22) C1) (_ bv0 1)) true) (_ bv22 32) (_ bv21 32)))))
 (let ((?x10380 (ite (and (distinct ((_ extract 26 26) C1) (_ bv0 1)) true) (_ bv26 32) (ite (and (distinct ((_ extract 25 25) C1) (_ bv0 1)) true) (_ bv25 32) (_ bv24 32)))))
 (let ((?x8755 (ite (and (distinct ((_ extract 29 29) C1) (_ bv0 1)) true) (_ bv29 32) (ite (and (distinct ((_ extract 28 28) C1) (_ bv0 1)) true) (_ bv28 32) (_ bv27 32)))))
 (let ((?x8280 (ite (and (distinct ((_ extract 31 30) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 31 31) C1) (_ bv0 1)) true) (_ bv31 32) (_ bv30 32)) ?x8755)))
 (let ((?x11918 (ite (and (distinct ((_ extract 31 27) C1) (_ bv0 5)) true) ?x8280 (ite (and (distinct ((_ extract 26 24) C1) (_ bv0 3)) true) ?x10380 ?x8825))))
 (let ((?x1276 (ite (and (distinct ((_ extract 34 34) C1) (_ bv0 1)) true) (_ bv34 32) (ite (and (distinct ((_ extract 33 33) C1) (_ bv0 1)) true) (_ bv33 32) (_ bv32 32)))))
 (let ((?x797 (ite (and (distinct ((_ extract 36 35) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 36 36) C1) (_ bv0 1)) true) (_ bv36 32) (_ bv35 32)) ?x1276)))
 (let ((?x3453 (ite (and (distinct ((_ extract 39 39) C1) (_ bv0 1)) true) (_ bv39 32) (ite (and (distinct ((_ extract 38 38) C1) (_ bv0 1)) true) (_ bv38 32) (_ bv37 32)))))
 (let ((?x3264 (ite (and (distinct ((_ extract 41 40) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 41 41) C1) (_ bv0 1)) true) (_ bv41 32) (_ bv40 32)) ?x3453)))
 (let ((?x10417 (ite (and (distinct ((_ extract 41 32) C1) (_ bv0 10)) true) (ite (and (distinct ((_ extract 41 37) C1) (_ bv0 5)) true) ?x3264 ?x797) ?x11918)))
 (let ((?x29 (ite (and (distinct ((_ extract 2 2) C2) (_ bv0 1)) true) (_ bv2 32) (ite (and (distinct ((_ extract 1 1) C2) (_ bv0 1)) true) (_ bv1 32) (_ bv0 32)))))
 (let ((?x18637 (ite (and (distinct ((_ extract 5 5) C2) (_ bv0 1)) true) (_ bv5 32) (ite (and (distinct ((_ extract 4 4) C2) (_ bv0 1)) true) (_ bv4 32) (_ bv3 32)))))
 (let ((?x13418 (ite (and (distinct ((_ extract 8 8) C2) (_ bv0 1)) true) (_ bv8 32) (ite (and (distinct ((_ extract 7 7) C2) (_ bv0 1)) true) (_ bv7 32) (_ bv6 32)))))
 (let ((?x6452 (ite (and (distinct ((_ extract 10 9) C2) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) C2) (_ bv0 1)) true) (_ bv10 32) (_ bv9 32)) ?x13418)))
 (let ((?x1711 (ite (and (distinct ((_ extract 10 6) C2) (_ bv0 5)) true) ?x6452 (ite (and (distinct ((_ extract 5 3) C2) (_ bv0 3)) true) ?x18637 ?x29))))
 (and (and (and (distinct C1 (_ bv0 42)) true) (= (bvand C1 (bvsub C1 (_ bv1 42))) (_ bv0 42))) (and (and (distinct C2 (_ bv0 11)) true) (= (bvand C2 (bvsub C2 (_ bv1 11))) (_ bv0 11))) (bvslt ?x1711 (ite (and (distinct ((_ extract 41 21) C1) (_ bv0 21)) true) ?x10417 ?x3075)) (not (bvult ?x18546 (_ bv42 42))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
