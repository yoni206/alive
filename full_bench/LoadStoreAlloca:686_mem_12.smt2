(set-info :status unknown)
(declare-fun mem0 () (_ BitVec 8))
(declare-fun %p2 () (_ BitVec 64))
(declare-fun idx () (_ BitVec 64))
(declare-fun %p1 () (_ BitVec 64))
(declare-fun |ana_equivalentAddressValues(%p1, %p2)| () (_ BitVec 1))
(assert
 (let (($x16243 (or true true)))
 (let (($x18224 (and (distinct %p2 (_ bv0 64)) true)))
 (let (($x7360 (and (distinct %p1 (_ bv0 64)) true)))
 (let (($x16348 (and $x7360 $x16243 $x7360 $x16243 $x7360 $x16243 $x18224 $x16243 (= idx (bvadd %p2 (_ bv0 64))))))
 (let (($x10689 (and $x7360 $x16243 $x7360 $x16243 $x7360 $x16243 $x18224 $x16243 (= idx (bvadd %p2 (_ bv1 64))))))
 (let ((?x11735 (ite $x10689 ((_ extract 15 8) (concat mem0 mem0)) (ite $x16348 ((_ extract 7 0) (concat mem0 mem0)) mem0))))
 (let (($x7718 (= |ana_equivalentAddressValues(%p1, %p2)| (_ bv1 1))))
 (and (=> $x7718 (= %p1 %p2)) $x7718 (and (distinct ?x11735 mem0) true))))))))))
(check-sat)
