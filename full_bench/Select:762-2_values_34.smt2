(set-info :status unknown)
(declare-fun C3 () (_ BitVec 11))
(declare-fun C2 () (_ BitVec 11))
(declare-fun C () (_ BitVec 38))
(declare-fun %Op () (_ BitVec 38))
(assert
 (let ((?x3692 (ite (and (distinct ((_ extract 2 2) (bvsub C2 C3)) (_ bv0 1)) true) (_ bv2 11) (ite (and (distinct ((_ extract 1 1) (bvsub C2 C3)) (_ bv0 1)) true) (_ bv1 11) (_ bv0 11)))))
 (let ((?x5859 (ite (and (distinct ((_ extract 5 5) (bvsub C2 C3)) (_ bv0 1)) true) (_ bv5 11) (ite (and (distinct ((_ extract 4 4) (bvsub C2 C3)) (_ bv0 1)) true) (_ bv4 11) (_ bv3 11)))))
 (let ((?x4763 (ite (and (distinct ((_ extract 8 8) (bvsub C2 C3)) (_ bv0 1)) true) (_ bv8 11) (ite (and (distinct ((_ extract 7 7) (bvsub C2 C3)) (_ bv0 1)) true) (_ bv7 11) (_ bv6 11)))))
 (let ((?x3506 (ite (and (distinct ((_ extract 10 9) (bvsub C2 C3)) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) (bvsub C2 C3)) (_ bv0 1)) true) (_ bv10 11) (_ bv9 11)) ?x4763)))
 (let ((?x5272 (ite (and (distinct ((_ extract 10 6) (bvsub C2 C3)) (_ bv0 5)) true) ?x3506 (ite (and (distinct ((_ extract 5 3) (bvsub C2 C3)) (_ bv0 3)) true) ?x5859 ?x3692))))
 (let ((?x6928 (ite (and (distinct ((_ extract 2 2) C) (_ bv0 1)) true) (_ bv2 11) (ite (and (distinct ((_ extract 1 1) C) (_ bv0 1)) true) (_ bv1 11) (_ bv0 11)))))
 (let ((?x3334 (ite (and (distinct ((_ extract 4 3) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 4 4) C) (_ bv0 1)) true) (_ bv4 11) (_ bv3 11)) ?x6928)))
 (let ((?x6723 (ite (and (distinct ((_ extract 7 7) C) (_ bv0 1)) true) (_ bv7 11) (ite (and (distinct ((_ extract 6 6) C) (_ bv0 1)) true) (_ bv6 11) (_ bv5 11)))))
 (let ((?x5043 (ite (and (distinct ((_ extract 9 8) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 9 9) C) (_ bv0 1)) true) (_ bv9 11) (_ bv8 11)) ?x6723)))
 (let ((?x7312 (ite (and (distinct ((_ extract 12 12) C) (_ bv0 1)) true) (_ bv12 11) (ite (and (distinct ((_ extract 11 11) C) (_ bv0 1)) true) (_ bv11 11) (_ bv10 11)))))
 (let ((?x7180 (ite (and (distinct ((_ extract 14 13) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 14 14) C) (_ bv0 1)) true) (_ bv14 11) (_ bv13 11)) ?x7312)))
 (let ((?x3658 (ite (and (distinct ((_ extract 18 17) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 18 18) C) (_ bv0 1)) true) (_ bv18 11) (_ bv17 11)) (ite (and (distinct ((_ extract 16 16) C) (_ bv0 1)) true) (_ bv16 11) (_ bv15 11)))))
 (let ((?x6353 (ite (and (distinct ((_ extract 18 10) C) (_ bv0 9)) true) (ite (and (distinct ((_ extract 18 15) C) (_ bv0 4)) true) ?x3658 ?x7180) (ite (and (distinct ((_ extract 9 5) C) (_ bv0 5)) true) ?x5043 ?x3334))))
 (let ((?x6310 (ite (and (distinct ((_ extract 21 21) C) (_ bv0 1)) true) (_ bv21 11) (ite (and (distinct ((_ extract 20 20) C) (_ bv0 1)) true) (_ bv20 11) (_ bv19 11)))))
 (let ((?x5199 (ite (and (distinct ((_ extract 23 22) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 23 23) C) (_ bv0 1)) true) (_ bv23 11) (_ bv22 11)) ?x6310)))
 (let ((?x2337 (ite (and (distinct ((_ extract 26 26) C) (_ bv0 1)) true) (_ bv26 11) (ite (and (distinct ((_ extract 25 25) C) (_ bv0 1)) true) (_ bv25 11) (_ bv24 11)))))
 (let ((?x2250 (ite (and (distinct ((_ extract 28 27) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 28 28) C) (_ bv0 1)) true) (_ bv28 11) (_ bv27 11)) ?x2337)))
 (let ((?x3197 (ite (and (distinct ((_ extract 31 31) C) (_ bv0 1)) true) (_ bv31 11) (ite (and (distinct ((_ extract 30 30) C) (_ bv0 1)) true) (_ bv30 11) (_ bv29 11)))))
 (let ((?x3216 (ite (and (distinct ((_ extract 33 32) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 33 33) C) (_ bv0 1)) true) (_ bv33 11) (_ bv32 11)) ?x3197)))
 (let ((?x4702 (ite (and (distinct ((_ extract 37 36) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 37 37) C) (_ bv0 1)) true) (_ bv37 11) (_ bv36 11)) (ite (and (distinct ((_ extract 35 35) C) (_ bv0 1)) true) (_ bv35 11) (_ bv34 11)))))
 (let ((?x6685 (ite (and (distinct ((_ extract 37 29) C) (_ bv0 9)) true) (ite (and (distinct ((_ extract 37 34) C) (_ bv0 4)) true) ?x4702 ?x3216) (ite (and (distinct ((_ extract 28 24) C) (_ bv0 5)) true) ?x2250 ?x5199))))
 (let ((?x3344 (bvsub (ite (and (distinct ((_ extract 37 19) C) (_ bv0 19)) true) ?x6685 ?x6353) ?x5272)))
 (let ((?x5650 (ite (bvsgt (_ bv0 11) ?x3344) (_ bv0 11) ?x3344)))
 (let ((?x3719 (bvsub ?x5272 (ite (and (distinct ((_ extract 37 19) C) (_ bv0 19)) true) ?x6685 ?x6353))))
 (let ((?x6261 (ite (bvsgt (_ bv0 11) ?x3719) (_ bv0 11) ?x3719)))
 (let ((?x2830 (ite (= (ite (and (distinct (bvand %Op C) (_ bv0 38)) true) (_ bv1 1) (_ bv0 1)) (_ bv1 1)) C2 C3)))
 (let (($x6951 (and (distinct ?x2830 (bvadd (bvlshr (bvshl ((_ extract 10 0) (bvand %Op C)) ?x6261) ?x5650) C3)) true)))
 (let ((?x6239 (ite (and (distinct ((_ extract 2 2) C) (_ bv0 1)) true) (_ bv2 32) (ite (and (distinct ((_ extract 1 1) C) (_ bv0 1)) true) (_ bv1 32) (_ bv0 32)))))
 (let ((?x6104 (ite (and (distinct ((_ extract 4 3) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 4 4) C) (_ bv0 1)) true) (_ bv4 32) (_ bv3 32)) ?x6239)))
 (let ((?x5680 (ite (and (distinct ((_ extract 7 7) C) (_ bv0 1)) true) (_ bv7 32) (ite (and (distinct ((_ extract 6 6) C) (_ bv0 1)) true) (_ bv6 32) (_ bv5 32)))))
 (let ((?x5621 (ite (and (distinct ((_ extract 9 8) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 9 9) C) (_ bv0 1)) true) (_ bv9 32) (_ bv8 32)) ?x5680)))
 (let ((?x4297 (ite (and (distinct ((_ extract 12 12) C) (_ bv0 1)) true) (_ bv12 32) (ite (and (distinct ((_ extract 11 11) C) (_ bv0 1)) true) (_ bv11 32) (_ bv10 32)))))
 (let ((?x4177 (ite (and (distinct ((_ extract 14 13) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 14 14) C) (_ bv0 1)) true) (_ bv14 32) (_ bv13 32)) ?x4297)))
 (let ((?x3457 (ite (and (distinct ((_ extract 18 17) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 18 18) C) (_ bv0 1)) true) (_ bv18 32) (_ bv17 32)) (ite (and (distinct ((_ extract 16 16) C) (_ bv0 1)) true) (_ bv16 32) (_ bv15 32)))))
 (let ((?x6441 (ite (and (distinct ((_ extract 18 10) C) (_ bv0 9)) true) (ite (and (distinct ((_ extract 18 15) C) (_ bv0 4)) true) ?x3457 ?x4177) (ite (and (distinct ((_ extract 9 5) C) (_ bv0 5)) true) ?x5621 ?x6104))))
 (let ((?x2209 (ite (and (distinct ((_ extract 21 21) C) (_ bv0 1)) true) (_ bv21 32) (ite (and (distinct ((_ extract 20 20) C) (_ bv0 1)) true) (_ bv20 32) (_ bv19 32)))))
 (let ((?x2182 (ite (and (distinct ((_ extract 23 22) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 23 23) C) (_ bv0 1)) true) (_ bv23 32) (_ bv22 32)) ?x2209)))
 (let ((?x2343 (ite (and (distinct ((_ extract 26 26) C) (_ bv0 1)) true) (_ bv26 32) (ite (and (distinct ((_ extract 25 25) C) (_ bv0 1)) true) (_ bv25 32) (_ bv24 32)))))
 (let ((?x6502 (ite (and (distinct ((_ extract 28 27) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 28 28) C) (_ bv0 1)) true) (_ bv28 32) (_ bv27 32)) ?x2343)))
 (let ((?x5892 (ite (and (distinct ((_ extract 31 31) C) (_ bv0 1)) true) (_ bv31 32) (ite (and (distinct ((_ extract 30 30) C) (_ bv0 1)) true) (_ bv30 32) (_ bv29 32)))))
 (let ((?x8017 (ite (and (distinct ((_ extract 33 32) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 33 33) C) (_ bv0 1)) true) (_ bv33 32) (_ bv32 32)) ?x5892)))
 (let ((?x7466 (ite (and (distinct ((_ extract 37 36) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 37 37) C) (_ bv0 1)) true) (_ bv37 32) (_ bv36 32)) (ite (and (distinct ((_ extract 35 35) C) (_ bv0 1)) true) (_ bv35 32) (_ bv34 32)))))
 (let ((?x2935 (ite (and (distinct ((_ extract 37 29) C) (_ bv0 9)) true) (ite (and (distinct ((_ extract 37 34) C) (_ bv0 4)) true) ?x7466 ?x8017) (ite (and (distinct ((_ extract 28 24) C) (_ bv0 5)) true) ?x6502 ?x2182))))
 (let (($x7492 (and (and (distinct (bvsub C2 C3) (_ bv0 11)) true) (= (bvand (bvsub C2 C3) (bvsub (bvsub C2 C3) (_ bv1 11))) (_ bv0 11)))))
 (and (and (and (distinct C (_ bv0 38)) true) (= (bvand C (bvsub C (_ bv1 38))) (_ bv0 38))) $x7492 (bvslt (ite (and (distinct ((_ extract 37 19) C) (_ bv0 19)) true) ?x2935 ?x6441) (_ bv11 32)) $x6951))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
