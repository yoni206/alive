(set-info :status unknown)
(declare-fun C2 () (_ BitVec 11))
(declare-fun C3 () (_ BitVec 11))
(declare-fun C () (_ BitVec 8))
(declare-fun %Op () (_ BitVec 8))
(assert
 (let ((?x6482 (bvsub C3 C2)))
 (let ((?x4769 (ite (and (distinct ((_ extract 2 2) ?x6482) (_ bv0 1)) true) (_ bv2 11) (ite (and (distinct ((_ extract 1 1) ?x6482) (_ bv0 1)) true) (_ bv1 11) (_ bv0 11)))))
 (let ((?x5665 (ite (and (distinct ((_ extract 5 5) ?x6482) (_ bv0 1)) true) (_ bv5 11) (ite (and (distinct ((_ extract 4 4) ?x6482) (_ bv0 1)) true) (_ bv4 11) (_ bv3 11)))))
 (let ((?x6559 (ite (and (distinct ((_ extract 8 8) ?x6482) (_ bv0 1)) true) (_ bv8 11) (ite (and (distinct ((_ extract 7 7) ?x6482) (_ bv0 1)) true) (_ bv7 11) (_ bv6 11)))))
 (let ((?x5336 (ite (and (distinct ((_ extract 10 9) ?x6482) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) ?x6482) (_ bv0 1)) true) (_ bv10 11) (_ bv9 11)) ?x6559)))
 (let ((?x1899 (ite (and (distinct ((_ extract 10 6) ?x6482) (_ bv0 5)) true) ?x5336 (ite (and (distinct ((_ extract 5 3) ?x6482) (_ bv0 3)) true) ?x5665 ?x4769))))
 (let ((?x6683 (ite (and (distinct ((_ extract 3 2) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 3 3) C) (_ bv0 1)) true) (_ bv3 11) (_ bv2 11)) (ite (and (distinct ((_ extract 1 1) C) (_ bv0 1)) true) (_ bv1 11) (_ bv0 11)))))
 (let ((?x3248 (ite (and (distinct ((_ extract 7 6) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 7 7) C) (_ bv0 1)) true) (_ bv7 11) (_ bv6 11)) (ite (and (distinct ((_ extract 5 5) C) (_ bv0 1)) true) (_ bv5 11) (_ bv4 11)))))
 (let ((?x8234 (bvsub (ite (and (distinct ((_ extract 7 4) C) (_ bv0 4)) true) ?x3248 ?x6683) ?x1899)))
 (let ((?x4695 (ite (bvsgt (_ bv0 11) ?x8234) (_ bv0 11) ?x8234)))
 (let ((?x6288 (bvsub ?x1899 (ite (and (distinct ((_ extract 7 4) C) (_ bv0 4)) true) ?x3248 ?x6683))))
 (let ((?x4080 (ite (bvsgt (_ bv0 11) ?x6288) (_ bv0 11) ?x6288)))
 (let ((?x3055 (bvxor (bvlshr (bvshl ((_ zero_extend 3) (bvand %Op C)) ?x4080) ?x4695) ?x6482)))
 (let ((?x1771 (ite (= (ite (and (distinct (bvand %Op C) (_ bv0 8)) true) (_ bv1 1) (_ bv0 1)) (_ bv1 1)) C2 C3)))
 (let ((?x1471 (ite (and (distinct ((_ extract 3 2) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 3 3) C) (_ bv0 1)) true) (_ bv3 32) (_ bv2 32)) (ite (and (distinct ((_ extract 1 1) C) (_ bv0 1)) true) (_ bv1 32) (_ bv0 32)))))
 (let ((?x6586 (ite (and (distinct ((_ extract 7 6) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 7 7) C) (_ bv0 1)) true) (_ bv7 32) (_ bv6 32)) (ite (and (distinct ((_ extract 5 5) C) (_ bv0 1)) true) (_ bv5 32) (_ bv4 32)))))
 (and (and (and (distinct C (_ bv0 8)) true) (= (bvand C (bvsub C (_ bv1 8))) (_ bv0 8))) (and (and (distinct ?x6482 (_ bv0 11)) true) (= (bvand ?x6482 (bvsub ?x6482 (_ bv1 11))) (_ bv0 11))) (bvslt (ite (and (distinct ((_ extract 7 4) C) (_ bv0 4)) true) ?x6586 ?x1471) (_ bv11 32)) (and (distinct ?x1771 (bvadd ?x3055 C2)) true)))))))))))))))))))
(check-sat)
