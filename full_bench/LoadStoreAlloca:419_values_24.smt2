(set-info :status unknown)
(declare-fun %x () (_ BitVec 25))
(declare-fun mem0 () (_ BitVec 8))
(declare-fun %p1 () (_ BitVec 64))
(declare-fun %p2 () (_ BitVec 64))
(declare-fun |ana_equivalentAddressValues(%p1, %p2)| () (_ BitVec 1))
(assert
 (let ((?x6231 (concat ((_ extract 7 1) mem0) ((_ extract 0 0) %x))))
 (let ((?x24188 (ite (and (and (distinct %p1 (_ bv0 64)) true) (or true true) (= %p2 %p1)) ?x6231 mem0)))
 (let ((?x6517 ((_ extract 8 1) %x)))
 (let (($x4119 (or true true)))
 (let (($x11105 (and (distinct %p1 (_ bv0 64)) true)))
 (let ((?x3999 (ite (and $x11105 $x4119 (= %p2 (bvadd (bvadd %p1 (_ bv1 64)) (_ bv0 64)))) ?x6517 ?x24188)))
 (let ((?x3169 ((_ extract 16 9) %x)))
 (let ((?x17846 (ite (and $x11105 $x4119 (= %p2 (bvadd (bvadd %p1 (_ bv1 64)) (_ bv1 64)))) ?x3169 ?x3999)))
 (let ((?x1110 ((_ extract 24 17) %x)))
 (let ((?x23666 (ite (and $x11105 $x4119 (= %p2 (bvadd (bvadd %p1 (_ bv1 64)) (_ bv2 64)))) ?x1110 ?x17846)))
 (let ((?x23138 (ite (and $x11105 $x4119 (= (bvadd (bvadd %p2 (_ bv1 64)) (_ bv0 64)) %p1)) ?x6231 mem0)))
 (let (($x8296 (and $x11105 $x4119 (= (bvadd (bvadd %p2 (_ bv1 64)) (_ bv0 64)) (bvadd (bvadd %p1 (_ bv1 64)) (_ bv0 64))))))
 (let (($x2359 (and $x11105 $x4119 (= (bvadd (bvadd %p2 (_ bv1 64)) (_ bv0 64)) (bvadd (bvadd %p1 (_ bv1 64)) (_ bv1 64))))))
 (let (($x15814 (and $x11105 $x4119 (= (bvadd (bvadd %p2 (_ bv1 64)) (_ bv0 64)) (bvadd (bvadd %p1 (_ bv1 64)) (_ bv2 64))))))
 (let ((?x6215 (ite (and $x11105 $x4119 (= (bvadd (bvadd %p2 (_ bv1 64)) (_ bv1 64)) %p1)) ?x6231 mem0)))
 (let (($x12256 (and $x11105 $x4119 (= (bvadd (bvadd %p2 (_ bv1 64)) (_ bv1 64)) (bvadd (bvadd %p1 (_ bv1 64)) (_ bv0 64))))))
 (let (($x18142 (and $x11105 $x4119 (= (bvadd (bvadd %p2 (_ bv1 64)) (_ bv1 64)) (bvadd (bvadd %p1 (_ bv1 64)) (_ bv1 64))))))
 (let (($x17076 (and $x11105 $x4119 (= (bvadd (bvadd %p2 (_ bv1 64)) (_ bv1 64)) (bvadd (bvadd %p1 (_ bv1 64)) (_ bv2 64))))))
 (let ((?x19155 (ite (and $x11105 $x4119 (= (bvadd (bvadd %p2 (_ bv1 64)) (_ bv2 64)) %p1)) ?x6231 mem0)))
 (let (($x7967 (and $x11105 $x4119 (= (bvadd (bvadd %p2 (_ bv1 64)) (_ bv2 64)) (bvadd (bvadd %p1 (_ bv1 64)) (_ bv0 64))))))
 (let (($x7131 (and $x11105 $x4119 (= (bvadd (bvadd %p2 (_ bv1 64)) (_ bv2 64)) (bvadd (bvadd %p1 (_ bv1 64)) (_ bv1 64))))))
 (let (($x13277 (and $x11105 $x4119 (= (bvadd (bvadd %p2 (_ bv1 64)) (_ bv2 64)) (bvadd (bvadd %p1 (_ bv1 64)) (_ bv2 64))))))
 (let ((?x12066 (concat (ite $x13277 ?x1110 (ite $x7131 ?x3169 (ite $x7967 ?x6517 ?x19155))) (ite $x17076 ?x1110 (ite $x18142 ?x3169 (ite $x12256 ?x6517 ?x6215))))))
 (let ((?x5581 (concat (concat ?x12066 (ite $x15814 ?x1110 (ite $x2359 ?x3169 (ite $x8296 ?x6517 ?x23138)))) ((_ extract 0 0) ?x23666))))
 (let (($x21807 (= |ana_equivalentAddressValues(%p1, %p2)| (_ bv1 1))))
 (let (($x13707 (and (distinct %p2 (_ bv0 64)) true)))
 (and $x11105 $x4119 $x13707 $x4119 $x13707 $x4119 (=> $x21807 (= %p1 %p2)) $x21807 (and (distinct ?x5581 %x) true)))))))))))))))))))))))))))))
(check-sat)
