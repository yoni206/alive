(set-info :status unknown)
(declare-fun C3 () (_ BitVec 11))
(declare-fun C2 () (_ BitVec 11))
(declare-fun C () (_ BitVec 39))
(declare-fun %Op () (_ BitVec 39))
(assert
 (let ((?x3471 (bvsub C2 C3)))
 (let ((?x5651 (ite (and (distinct ((_ extract 2 2) ?x3471) (_ bv0 1)) true) (_ bv2 11) (ite (and (distinct ((_ extract 1 1) ?x3471) (_ bv0 1)) true) (_ bv1 11) (_ bv0 11)))))
 (let ((?x4397 (ite (and (distinct ((_ extract 5 5) ?x3471) (_ bv0 1)) true) (_ bv5 11) (ite (and (distinct ((_ extract 4 4) ?x3471) (_ bv0 1)) true) (_ bv4 11) (_ bv3 11)))))
 (let ((?x4323 (ite (and (distinct ((_ extract 8 8) ?x3471) (_ bv0 1)) true) (_ bv8 11) (ite (and (distinct ((_ extract 7 7) ?x3471) (_ bv0 1)) true) (_ bv7 11) (_ bv6 11)))))
 (let ((?x5812 (ite (and (distinct ((_ extract 10 9) ?x3471) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) ?x3471) (_ bv0 1)) true) (_ bv10 11) (_ bv9 11)) ?x4323)))
 (let ((?x6150 (ite (and (distinct ((_ extract 10 6) ?x3471) (_ bv0 5)) true) ?x5812 (ite (and (distinct ((_ extract 5 3) ?x3471) (_ bv0 3)) true) ?x4397 ?x5651))))
 (let ((?x2829 (ite (and (distinct ((_ extract 2 2) C) (_ bv0 1)) true) (_ bv2 11) (ite (and (distinct ((_ extract 1 1) C) (_ bv0 1)) true) (_ bv1 11) (_ bv0 11)))))
 (let ((?x5729 (ite (and (distinct ((_ extract 4 3) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 4 4) C) (_ bv0 1)) true) (_ bv4 11) (_ bv3 11)) ?x2829)))
 (let ((?x2989 (ite (and (distinct ((_ extract 7 7) C) (_ bv0 1)) true) (_ bv7 11) (ite (and (distinct ((_ extract 6 6) C) (_ bv0 1)) true) (_ bv6 11) (_ bv5 11)))))
 (let ((?x6186 (ite (and (distinct ((_ extract 9 8) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 9 9) C) (_ bv0 1)) true) (_ bv9 11) (_ bv8 11)) ?x2989)))
 (let ((?x5713 (ite (and (distinct ((_ extract 12 12) C) (_ bv0 1)) true) (_ bv12 11) (ite (and (distinct ((_ extract 11 11) C) (_ bv0 1)) true) (_ bv11 11) (_ bv10 11)))))
 (let ((?x2020 (ite (and (distinct ((_ extract 14 13) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 14 14) C) (_ bv0 1)) true) (_ bv14 11) (_ bv13 11)) ?x5713)))
 (let ((?x4063 (ite (and (distinct ((_ extract 17 17) C) (_ bv0 1)) true) (_ bv17 11) (ite (and (distinct ((_ extract 16 16) C) (_ bv0 1)) true) (_ bv16 11) (_ bv15 11)))))
 (let ((?x3977 (ite (and (distinct ((_ extract 19 18) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 19 19) C) (_ bv0 1)) true) (_ bv19 11) (_ bv18 11)) ?x4063)))
 (let ((?x5258 (ite (and (distinct ((_ extract 19 10) C) (_ bv0 10)) true) (ite (and (distinct ((_ extract 19 15) C) (_ bv0 5)) true) ?x3977 ?x2020) (ite (and (distinct ((_ extract 9 5) C) (_ bv0 5)) true) ?x6186 ?x5729))))
 (let ((?x3723 (ite (and (distinct ((_ extract 22 22) C) (_ bv0 1)) true) (_ bv22 11) (ite (and (distinct ((_ extract 21 21) C) (_ bv0 1)) true) (_ bv21 11) (_ bv20 11)))))
 (let ((?x6072 (ite (and (distinct ((_ extract 24 23) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 24 24) C) (_ bv0 1)) true) (_ bv24 11) (_ bv23 11)) ?x3723)))
 (let ((?x3654 (ite (and (distinct ((_ extract 27 27) C) (_ bv0 1)) true) (_ bv27 11) (ite (and (distinct ((_ extract 26 26) C) (_ bv0 1)) true) (_ bv26 11) (_ bv25 11)))))
 (let ((?x3632 (ite (and (distinct ((_ extract 29 28) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 29 29) C) (_ bv0 1)) true) (_ bv29 11) (_ bv28 11)) ?x3654)))
 (let ((?x1124 (ite (and (distinct ((_ extract 32 32) C) (_ bv0 1)) true) (_ bv32 11) (ite (and (distinct ((_ extract 31 31) C) (_ bv0 1)) true) (_ bv31 11) (_ bv30 11)))))
 (let ((?x6354 (ite (and (distinct ((_ extract 34 33) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 34 34) C) (_ bv0 1)) true) (_ bv34 11) (_ bv33 11)) ?x1124)))
 (let ((?x1890 (ite (and (distinct ((_ extract 38 37) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 38 38) C) (_ bv0 1)) true) (_ bv38 11) (_ bv37 11)) (ite (and (distinct ((_ extract 36 36) C) (_ bv0 1)) true) (_ bv36 11) (_ bv35 11)))))
 (let ((?x5971 (ite (and (distinct ((_ extract 38 30) C) (_ bv0 9)) true) (ite (and (distinct ((_ extract 38 35) C) (_ bv0 4)) true) ?x1890 ?x6354) (ite (and (distinct ((_ extract 29 25) C) (_ bv0 5)) true) ?x3632 ?x6072))))
 (let ((?x2961 (bvsub (ite (and (distinct ((_ extract 38 20) C) (_ bv0 19)) true) ?x5971 ?x5258) ?x6150)))
 (let ((?x6027 (ite (bvsgt (_ bv0 11) ?x2961) (_ bv0 11) ?x2961)))
 (let ((?x7499 (bvsub ?x6150 (ite (and (distinct ((_ extract 38 20) C) (_ bv0 19)) true) ?x5971 ?x5258))))
 (let ((?x4027 (ite (bvsgt (_ bv0 11) ?x7499) (_ bv0 11) ?x7499)))
 (let ((?x6069 (bvadd (bvxor (bvlshr (bvshl ((_ extract 10 0) (bvand %Op C)) ?x4027) ?x6027) ?x3471) C3)))
 (let (($x6090 (and (distinct (ite (= (ite (= (bvand %Op C) (_ bv0 39)) (_ bv1 1) (_ bv0 1)) (_ bv1 1)) C2 C3) ?x6069) true)))
 (let ((?x5576 (ite (and (distinct ((_ extract 2 2) C) (_ bv0 1)) true) (_ bv2 32) (ite (and (distinct ((_ extract 1 1) C) (_ bv0 1)) true) (_ bv1 32) (_ bv0 32)))))
 (let ((?x5770 (ite (and (distinct ((_ extract 4 3) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 4 4) C) (_ bv0 1)) true) (_ bv4 32) (_ bv3 32)) ?x5576)))
 (let ((?x5024 (ite (and (distinct ((_ extract 7 7) C) (_ bv0 1)) true) (_ bv7 32) (ite (and (distinct ((_ extract 6 6) C) (_ bv0 1)) true) (_ bv6 32) (_ bv5 32)))))
 (let ((?x4918 (ite (and (distinct ((_ extract 9 8) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 9 9) C) (_ bv0 1)) true) (_ bv9 32) (_ bv8 32)) ?x5024)))
 (let ((?x3628 (ite (and (distinct ((_ extract 12 12) C) (_ bv0 1)) true) (_ bv12 32) (ite (and (distinct ((_ extract 11 11) C) (_ bv0 1)) true) (_ bv11 32) (_ bv10 32)))))
 (let ((?x3587 (ite (and (distinct ((_ extract 14 13) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 14 14) C) (_ bv0 1)) true) (_ bv14 32) (_ bv13 32)) ?x3628)))
 (let ((?x2122 (ite (and (distinct ((_ extract 17 17) C) (_ bv0 1)) true) (_ bv17 32) (ite (and (distinct ((_ extract 16 16) C) (_ bv0 1)) true) (_ bv16 32) (_ bv15 32)))))
 (let ((?x2522 (ite (and (distinct ((_ extract 19 18) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 19 19) C) (_ bv0 1)) true) (_ bv19 32) (_ bv18 32)) ?x2122)))
 (let ((?x5925 (ite (and (distinct ((_ extract 19 10) C) (_ bv0 10)) true) (ite (and (distinct ((_ extract 19 15) C) (_ bv0 5)) true) ?x2522 ?x3587) (ite (and (distinct ((_ extract 9 5) C) (_ bv0 5)) true) ?x4918 ?x5770))))
 (let ((?x6862 (ite (and (distinct ((_ extract 22 22) C) (_ bv0 1)) true) (_ bv22 32) (ite (and (distinct ((_ extract 21 21) C) (_ bv0 1)) true) (_ bv21 32) (_ bv20 32)))))
 (let ((?x1695 (ite (and (distinct ((_ extract 24 23) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 24 24) C) (_ bv0 1)) true) (_ bv24 32) (_ bv23 32)) ?x6862)))
 (let ((?x2685 (ite (and (distinct ((_ extract 27 27) C) (_ bv0 1)) true) (_ bv27 32) (ite (and (distinct ((_ extract 26 26) C) (_ bv0 1)) true) (_ bv26 32) (_ bv25 32)))))
 (let ((?x5140 (ite (and (distinct ((_ extract 29 28) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 29 29) C) (_ bv0 1)) true) (_ bv29 32) (_ bv28 32)) ?x2685)))
 (let ((?x1688 (ite (and (distinct ((_ extract 32 32) C) (_ bv0 1)) true) (_ bv32 32) (ite (and (distinct ((_ extract 31 31) C) (_ bv0 1)) true) (_ bv31 32) (_ bv30 32)))))
 (let ((?x1271 (ite (and (distinct ((_ extract 34 33) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 34 34) C) (_ bv0 1)) true) (_ bv34 32) (_ bv33 32)) ?x1688)))
 (let ((?x1206 (ite (and (distinct ((_ extract 38 37) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 38 38) C) (_ bv0 1)) true) (_ bv38 32) (_ bv37 32)) (ite (and (distinct ((_ extract 36 36) C) (_ bv0 1)) true) (_ bv36 32) (_ bv35 32)))))
 (let ((?x2579 (ite (and (distinct ((_ extract 38 30) C) (_ bv0 9)) true) (ite (and (distinct ((_ extract 38 35) C) (_ bv0 4)) true) ?x1206 ?x1271) (ite (and (distinct ((_ extract 29 25) C) (_ bv0 5)) true) ?x5140 ?x1695))))
 (and (and (and (distinct C (_ bv0 39)) true) (= (bvand C (bvsub C (_ bv1 39))) (_ bv0 39))) (and (and (distinct ?x3471 (_ bv0 11)) true) (= (bvand ?x3471 (bvsub ?x3471 (_ bv1 11))) (_ bv0 11))) (bvslt (ite (and (distinct ((_ extract 38 20) C) (_ bv0 19)) true) ?x2579 ?x5925) (_ bv11 32)) $x6090))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
