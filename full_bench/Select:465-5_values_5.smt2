(set-info :status unknown)
(declare-fun %Y () (_ BitVec 11))
(declare-fun C2 () (_ BitVec 11))
(declare-fun C1 () (_ BitVec 13))
(declare-fun %X () (_ BitVec 13))
(assert
 (let ((?x17302 (ite (and (distinct ((_ extract 3 2) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 3 3) C1) (_ bv0 1)) true) (_ bv3 11) (_ bv2 11)) (ite (and (distinct ((_ extract 1 1) C1) (_ bv0 1)) true) (_ bv1 11) (_ bv0 11)))))
 (let ((?x15042 (ite (and (distinct ((_ extract 6 6) C1) (_ bv0 1)) true) (_ bv6 11) (ite (and (distinct ((_ extract 5 5) C1) (_ bv0 1)) true) (_ bv5 11) (_ bv4 11)))))
 (let ((?x10263 (ite (and (distinct ((_ extract 9 9) C1) (_ bv0 1)) true) (_ bv9 11) (ite (and (distinct ((_ extract 8 8) C1) (_ bv0 1)) true) (_ bv8 11) (_ bv7 11)))))
 (let ((?x14472 (ite (and (distinct ((_ extract 12 12) C1) (_ bv0 1)) true) (_ bv12 11) (ite (and (distinct ((_ extract 11 11) C1) (_ bv0 1)) true) (_ bv11 11) (_ bv10 11)))))
 (let ((?x23904 (ite (and (distinct ((_ extract 12 7) C1) (_ bv0 6)) true) (ite (and (distinct ((_ extract 12 10) C1) (_ bv0 3)) true) ?x14472 ?x10263) (ite (and (distinct ((_ extract 6 4) C1) (_ bv0 3)) true) ?x15042 ?x17302))))
 (let ((?x4625 (ite (and (distinct ((_ extract 2 2) C2) (_ bv0 1)) true) (_ bv2 11) (ite (and (distinct ((_ extract 1 1) C2) (_ bv0 1)) true) (_ bv1 11) (_ bv0 11)))))
 (let ((?x6810 (ite (and (distinct ((_ extract 5 5) C2) (_ bv0 1)) true) (_ bv5 11) (ite (and (distinct ((_ extract 4 4) C2) (_ bv0 1)) true) (_ bv4 11) (_ bv3 11)))))
 (let ((?x16882 (ite (and (distinct ((_ extract 8 8) C2) (_ bv0 1)) true) (_ bv8 11) (ite (and (distinct ((_ extract 7 7) C2) (_ bv0 1)) true) (_ bv7 11) (_ bv6 11)))))
 (let ((?x11888 (ite (and (distinct ((_ extract 10 9) C2) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) C2) (_ bv0 1)) true) (_ bv10 11) (_ bv9 11)) ?x16882)))
 (let ((?x5829 (ite (and (distinct ((_ extract 10 6) C2) (_ bv0 5)) true) ?x11888 (ite (and (distinct ((_ extract 5 3) C2) (_ bv0 3)) true) ?x6810 ?x4625))))
 (let ((?x23054 (bvsub ?x5829 ?x23904)))
 (let ((?x20262 (bvor %Y C2)))
 (let (($x12595 (and (distinct (ite (= (ite (= (bvand %X C1) (_ bv0 13)) (_ bv1 1) (_ bv0 1)) (_ bv1 1)) ?x20262 %Y) (bvor (bvxor (bvshl ((_ extract 10 0) (bvand %X C1)) ?x23054) C2) %Y)) true)))
 (let ((?x10444 (ite (and (distinct ((_ extract 3 2) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 3 3) C1) (_ bv0 1)) true) (_ bv3 32) (_ bv2 32)) (ite (and (distinct ((_ extract 1 1) C1) (_ bv0 1)) true) (_ bv1 32) (_ bv0 32)))))
 (let ((?x8633 (ite (and (distinct ((_ extract 6 6) C1) (_ bv0 1)) true) (_ bv6 32) (ite (and (distinct ((_ extract 5 5) C1) (_ bv0 1)) true) (_ bv5 32) (_ bv4 32)))))
 (let ((?x5354 (ite (and (distinct ((_ extract 9 9) C1) (_ bv0 1)) true) (_ bv9 32) (ite (and (distinct ((_ extract 8 8) C1) (_ bv0 1)) true) (_ bv8 32) (_ bv7 32)))))
 (let ((?x7416 (ite (and (distinct ((_ extract 12 12) C1) (_ bv0 1)) true) (_ bv12 32) (ite (and (distinct ((_ extract 11 11) C1) (_ bv0 1)) true) (_ bv11 32) (_ bv10 32)))))
 (let ((?x7378 (ite (and (distinct ((_ extract 12 7) C1) (_ bv0 6)) true) (ite (and (distinct ((_ extract 12 10) C1) (_ bv0 3)) true) ?x7416 ?x5354) (ite (and (distinct ((_ extract 6 4) C1) (_ bv0 3)) true) ?x8633 ?x10444))))
 (let ((?x5795 (ite (and (distinct ((_ extract 2 2) C2) (_ bv0 1)) true) (_ bv2 32) (ite (and (distinct ((_ extract 1 1) C2) (_ bv0 1)) true) (_ bv1 32) (_ bv0 32)))))
 (let ((?x11716 (ite (and (distinct ((_ extract 5 5) C2) (_ bv0 1)) true) (_ bv5 32) (ite (and (distinct ((_ extract 4 4) C2) (_ bv0 1)) true) (_ bv4 32) (_ bv3 32)))))
 (let ((?x9976 (ite (and (distinct ((_ extract 8 8) C2) (_ bv0 1)) true) (_ bv8 32) (ite (and (distinct ((_ extract 7 7) C2) (_ bv0 1)) true) (_ bv7 32) (_ bv6 32)))))
 (let ((?x18297 (ite (and (distinct ((_ extract 10 9) C2) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) C2) (_ bv0 1)) true) (_ bv10 32) (_ bv9 32)) ?x9976)))
 (let ((?x17333 (ite (and (distinct ((_ extract 10 6) C2) (_ bv0 5)) true) ?x18297 (ite (and (distinct ((_ extract 5 3) C2) (_ bv0 3)) true) ?x11716 ?x5795))))
 (and (and (and (distinct C1 (_ bv0 13)) true) (= (bvand C1 (bvsub C1 (_ bv1 13))) (_ bv0 13))) (and (and (distinct C2 (_ bv0 11)) true) (= (bvand C2 (bvsub C2 (_ bv1 11))) (_ bv0 11))) (bvsge ?x17333 ?x7378) $x12595)))))))))))))))))))))))))
(check-sat)
