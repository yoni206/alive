(set-info :status unknown)
(declare-fun C2 () (_ BitVec 11))
(declare-fun C1 () (_ BitVec 8))
(assert
 (let ((?x9174 (ite (and (distinct ((_ extract 2 2) C2) (_ bv0 1)) true) (_ bv2 8) (ite (and (distinct ((_ extract 1 1) C2) (_ bv0 1)) true) (_ bv1 8) (_ bv0 8)))))
 (let ((?x8965 (ite (and (distinct ((_ extract 5 5) C2) (_ bv0 1)) true) (_ bv5 8) (ite (and (distinct ((_ extract 4 4) C2) (_ bv0 1)) true) (_ bv4 8) (_ bv3 8)))))
 (let ((?x12082 (ite (and (distinct ((_ extract 8 8) C2) (_ bv0 1)) true) (_ bv8 8) (ite (and (distinct ((_ extract 7 7) C2) (_ bv0 1)) true) (_ bv7 8) (_ bv6 8)))))
 (let ((?x23388 (ite (and (distinct ((_ extract 10 9) C2) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) C2) (_ bv0 1)) true) (_ bv10 8) (_ bv9 8)) ?x12082)))
 (let ((?x19524 (ite (and (distinct ((_ extract 10 6) C2) (_ bv0 5)) true) ?x23388 (ite (and (distinct ((_ extract 5 3) C2) (_ bv0 3)) true) ?x8965 ?x9174))))
 (let ((?x3105 (ite (and (distinct ((_ extract 3 2) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 3 3) C1) (_ bv0 1)) true) (_ bv3 8) (_ bv2 8)) (ite (and (distinct ((_ extract 1 1) C1) (_ bv0 1)) true) (_ bv1 8) (_ bv0 8)))))
 (let ((?x10165 (ite (and (distinct ((_ extract 7 6) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 7 7) C1) (_ bv0 1)) true) (_ bv7 8) (_ bv6 8)) (ite (and (distinct ((_ extract 5 5) C1) (_ bv0 1)) true) (_ bv5 8) (_ bv4 8)))))
 (let ((?x724 (bvsub (ite (and (distinct ((_ extract 7 4) C1) (_ bv0 4)) true) ?x10165 ?x3105) ?x19524)))
 (let ((?x3762 (ite (and (distinct ((_ extract 3 2) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 3 3) C1) (_ bv0 1)) true) (_ bv3 32) (_ bv2 32)) (ite (and (distinct ((_ extract 1 1) C1) (_ bv0 1)) true) (_ bv1 32) (_ bv0 32)))))
 (let ((?x12022 (ite (and (distinct ((_ extract 7 6) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 7 7) C1) (_ bv0 1)) true) (_ bv7 32) (_ bv6 32)) (ite (and (distinct ((_ extract 5 5) C1) (_ bv0 1)) true) (_ bv5 32) (_ bv4 32)))))
 (let ((?x755 (ite (and (distinct ((_ extract 2 2) C2) (_ bv0 1)) true) (_ bv2 32) (ite (and (distinct ((_ extract 1 1) C2) (_ bv0 1)) true) (_ bv1 32) (_ bv0 32)))))
 (let ((?x5149 (ite (and (distinct ((_ extract 5 5) C2) (_ bv0 1)) true) (_ bv5 32) (ite (and (distinct ((_ extract 4 4) C2) (_ bv0 1)) true) (_ bv4 32) (_ bv3 32)))))
 (let ((?x12903 (ite (and (distinct ((_ extract 8 8) C2) (_ bv0 1)) true) (_ bv8 32) (ite (and (distinct ((_ extract 7 7) C2) (_ bv0 1)) true) (_ bv7 32) (_ bv6 32)))))
 (let ((?x15834 (ite (and (distinct ((_ extract 10 9) C2) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) C2) (_ bv0 1)) true) (_ bv10 32) (_ bv9 32)) ?x12903)))
 (let ((?x7566 (ite (and (distinct ((_ extract 10 6) C2) (_ bv0 5)) true) ?x15834 (ite (and (distinct ((_ extract 5 3) C2) (_ bv0 3)) true) ?x5149 ?x755))))
 (and (and (and (distinct C1 (_ bv0 8)) true) (= (bvand C1 (bvsub C1 (_ bv1 8))) (_ bv0 8))) (and (and (distinct C2 (_ bv0 11)) true) (= (bvand C2 (bvsub C2 (_ bv1 11))) (_ bv0 11))) (bvslt ?x7566 (ite (and (distinct ((_ extract 7 4) C1) (_ bv0 4)) true) ?x12022 ?x3762)) (not (bvult ?x724 (_ bv8 8))))))))))))))))))))
(check-sat)
