(set-info :status unknown)
(declare-fun %Y () (_ BitVec 11))
(declare-fun C2 () (_ BitVec 11))
(declare-fun C1 () (_ BitVec 43))
(declare-fun %X () (_ BitVec 43))
(assert
 (let ((?x3139 (ite (and (distinct ((_ extract 2 2) C2) (_ bv0 1)) true) (_ bv2 43) (ite (and (distinct ((_ extract 1 1) C2) (_ bv0 1)) true) (_ bv1 43) (_ bv0 43)))))
 (let ((?x23528 (ite (and (distinct ((_ extract 5 5) C2) (_ bv0 1)) true) (_ bv5 43) (ite (and (distinct ((_ extract 4 4) C2) (_ bv0 1)) true) (_ bv4 43) (_ bv3 43)))))
 (let ((?x5747 (ite (and (distinct ((_ extract 8 8) C2) (_ bv0 1)) true) (_ bv8 43) (ite (and (distinct ((_ extract 7 7) C2) (_ bv0 1)) true) (_ bv7 43) (_ bv6 43)))))
 (let ((?x4224 (ite (and (distinct ((_ extract 10 9) C2) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) C2) (_ bv0 1)) true) (_ bv10 43) (_ bv9 43)) ?x5747)))
 (let ((?x3881 (ite (and (distinct ((_ extract 10 6) C2) (_ bv0 5)) true) ?x4224 (ite (and (distinct ((_ extract 5 3) C2) (_ bv0 3)) true) ?x23528 ?x3139))))
 (let ((?x6277 (ite (and (distinct ((_ extract 2 2) C1) (_ bv0 1)) true) (_ bv2 43) (ite (and (distinct ((_ extract 1 1) C1) (_ bv0 1)) true) (_ bv1 43) (_ bv0 43)))))
 (let ((?x23217 (ite (and (distinct ((_ extract 5 5) C1) (_ bv0 1)) true) (_ bv5 43) (ite (and (distinct ((_ extract 4 4) C1) (_ bv0 1)) true) (_ bv4 43) (_ bv3 43)))))
 (let ((?x15702 (ite (and (distinct ((_ extract 8 8) C1) (_ bv0 1)) true) (_ bv8 43) (ite (and (distinct ((_ extract 7 7) C1) (_ bv0 1)) true) (_ bv7 43) (_ bv6 43)))))
 (let ((?x17717 (ite (and (distinct ((_ extract 10 9) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) C1) (_ bv0 1)) true) (_ bv10 43) (_ bv9 43)) ?x15702)))
 (let ((?x8051 (ite (and (distinct ((_ extract 10 6) C1) (_ bv0 5)) true) ?x17717 (ite (and (distinct ((_ extract 5 3) C1) (_ bv0 3)) true) ?x23217 ?x6277))))
 (let ((?x13705 (ite (and (distinct ((_ extract 13 13) C1) (_ bv0 1)) true) (_ bv13 43) (ite (and (distinct ((_ extract 12 12) C1) (_ bv0 1)) true) (_ bv12 43) (_ bv11 43)))))
 (let ((?x23506 (ite (and (distinct ((_ extract 16 16) C1) (_ bv0 1)) true) (_ bv16 43) (ite (and (distinct ((_ extract 15 15) C1) (_ bv0 1)) true) (_ bv15 43) (_ bv14 43)))))
 (let ((?x22479 (ite (and (distinct ((_ extract 19 19) C1) (_ bv0 1)) true) (_ bv19 43) (ite (and (distinct ((_ extract 18 18) C1) (_ bv0 1)) true) (_ bv18 43) (_ bv17 43)))))
 (let ((?x5333 (ite (and (distinct ((_ extract 21 20) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 21 21) C1) (_ bv0 1)) true) (_ bv21 43) (_ bv20 43)) ?x22479)))
 (let ((?x3879 (ite (and (distinct ((_ extract 21 17) C1) (_ bv0 5)) true) ?x5333 (ite (and (distinct ((_ extract 16 14) C1) (_ bv0 3)) true) ?x23506 ?x13705))))
 (let ((?x2593 (ite (and (distinct ((_ extract 24 24) C1) (_ bv0 1)) true) (_ bv24 43) (ite (and (distinct ((_ extract 23 23) C1) (_ bv0 1)) true) (_ bv23 43) (_ bv22 43)))))
 (let ((?x20091 (ite (and (distinct ((_ extract 27 27) C1) (_ bv0 1)) true) (_ bv27 43) (ite (and (distinct ((_ extract 26 26) C1) (_ bv0 1)) true) (_ bv26 43) (_ bv25 43)))))
 (let ((?x7386 (ite (and (distinct ((_ extract 30 30) C1) (_ bv0 1)) true) (_ bv30 43) (ite (and (distinct ((_ extract 29 29) C1) (_ bv0 1)) true) (_ bv29 43) (_ bv28 43)))))
 (let ((?x8149 (ite (and (distinct ((_ extract 32 31) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 32 32) C1) (_ bv0 1)) true) (_ bv32 43) (_ bv31 43)) ?x7386)))
 (let ((?x10987 (ite (and (distinct ((_ extract 32 28) C1) (_ bv0 5)) true) ?x8149 (ite (and (distinct ((_ extract 27 25) C1) (_ bv0 3)) true) ?x20091 ?x2593))))
 (let ((?x13723 (ite (and (distinct ((_ extract 35 35) C1) (_ bv0 1)) true) (_ bv35 43) (ite (and (distinct ((_ extract 34 34) C1) (_ bv0 1)) true) (_ bv34 43) (_ bv33 43)))))
 (let ((?x13289 (ite (and (distinct ((_ extract 37 36) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 37 37) C1) (_ bv0 1)) true) (_ bv37 43) (_ bv36 43)) ?x13723)))
 (let ((?x17490 (ite (and (distinct ((_ extract 40 40) C1) (_ bv0 1)) true) (_ bv40 43) (ite (and (distinct ((_ extract 39 39) C1) (_ bv0 1)) true) (_ bv39 43) (_ bv38 43)))))
 (let ((?x10415 (ite (and (distinct ((_ extract 42 41) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 42 42) C1) (_ bv0 1)) true) (_ bv42 43) (_ bv41 43)) ?x17490)))
 (let ((?x21859 (ite (and (distinct ((_ extract 42 33) C1) (_ bv0 10)) true) (ite (and (distinct ((_ extract 42 38) C1) (_ bv0 5)) true) ?x10415 ?x13289) ?x10987)))
 (let ((?x2837 (ite (and (distinct ((_ extract 42 22) C1) (_ bv0 21)) true) ?x21859 (ite (and (distinct ((_ extract 21 11) C1) (_ bv0 11)) true) ?x3879 ?x8051))))
 (let ((?x3025 (bvsub ?x2837 ?x3881)))
 (let ((?x3439 (bvand %X C1)))
 (let ((?x14215 (bvor %Y C2)))
 (let (($x6183 (and (distinct (ite (= (ite (and (distinct ?x3439 (_ bv0 43)) true) (_ bv1 1) (_ bv0 1)) (_ bv1 1)) ?x14215 %Y) (bvor ((_ extract 10 0) (bvlshr ?x3439 ?x3025)) %Y)) true)))
 (let ((?x11383 (ite (and (distinct ((_ extract 2 2) C1) (_ bv0 1)) true) (_ bv2 32) (ite (and (distinct ((_ extract 1 1) C1) (_ bv0 1)) true) (_ bv1 32) (_ bv0 32)))))
 (let ((?x17731 (ite (and (distinct ((_ extract 5 5) C1) (_ bv0 1)) true) (_ bv5 32) (ite (and (distinct ((_ extract 4 4) C1) (_ bv0 1)) true) (_ bv4 32) (_ bv3 32)))))
 (let ((?x7847 (ite (and (distinct ((_ extract 8 8) C1) (_ bv0 1)) true) (_ bv8 32) (ite (and (distinct ((_ extract 7 7) C1) (_ bv0 1)) true) (_ bv7 32) (_ bv6 32)))))
 (let ((?x20558 (ite (and (distinct ((_ extract 10 9) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) C1) (_ bv0 1)) true) (_ bv10 32) (_ bv9 32)) ?x7847)))
 (let ((?x23628 (ite (and (distinct ((_ extract 10 6) C1) (_ bv0 5)) true) ?x20558 (ite (and (distinct ((_ extract 5 3) C1) (_ bv0 3)) true) ?x17731 ?x11383))))
 (let ((?x17213 (ite (and (distinct ((_ extract 13 13) C1) (_ bv0 1)) true) (_ bv13 32) (ite (and (distinct ((_ extract 12 12) C1) (_ bv0 1)) true) (_ bv12 32) (_ bv11 32)))))
 (let ((?x1864 (ite (and (distinct ((_ extract 16 16) C1) (_ bv0 1)) true) (_ bv16 32) (ite (and (distinct ((_ extract 15 15) C1) (_ bv0 1)) true) (_ bv15 32) (_ bv14 32)))))
 (let ((?x17588 (ite (and (distinct ((_ extract 19 19) C1) (_ bv0 1)) true) (_ bv19 32) (ite (and (distinct ((_ extract 18 18) C1) (_ bv0 1)) true) (_ bv18 32) (_ bv17 32)))))
 (let ((?x20367 (ite (and (distinct ((_ extract 21 20) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 21 21) C1) (_ bv0 1)) true) (_ bv21 32) (_ bv20 32)) ?x17588)))
 (let ((?x18337 (ite (and (distinct ((_ extract 21 17) C1) (_ bv0 5)) true) ?x20367 (ite (and (distinct ((_ extract 16 14) C1) (_ bv0 3)) true) ?x1864 ?x17213))))
 (let ((?x14143 (ite (and (distinct ((_ extract 24 24) C1) (_ bv0 1)) true) (_ bv24 32) (ite (and (distinct ((_ extract 23 23) C1) (_ bv0 1)) true) (_ bv23 32) (_ bv22 32)))))
 (let ((?x8546 (ite (and (distinct ((_ extract 27 27) C1) (_ bv0 1)) true) (_ bv27 32) (ite (and (distinct ((_ extract 26 26) C1) (_ bv0 1)) true) (_ bv26 32) (_ bv25 32)))))
 (let ((?x6540 (ite (and (distinct ((_ extract 30 30) C1) (_ bv0 1)) true) (_ bv30 32) (ite (and (distinct ((_ extract 29 29) C1) (_ bv0 1)) true) (_ bv29 32) (_ bv28 32)))))
 (let ((?x9767 (ite (and (distinct ((_ extract 32 31) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 32 32) C1) (_ bv0 1)) true) (_ bv32 32) (_ bv31 32)) ?x6540)))
 (let ((?x13531 (ite (and (distinct ((_ extract 32 28) C1) (_ bv0 5)) true) ?x9767 (ite (and (distinct ((_ extract 27 25) C1) (_ bv0 3)) true) ?x8546 ?x14143))))
 (let ((?x2957 (ite (and (distinct ((_ extract 35 35) C1) (_ bv0 1)) true) (_ bv35 32) (ite (and (distinct ((_ extract 34 34) C1) (_ bv0 1)) true) (_ bv34 32) (_ bv33 32)))))
 (let ((?x8232 (ite (and (distinct ((_ extract 37 36) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 37 37) C1) (_ bv0 1)) true) (_ bv37 32) (_ bv36 32)) ?x2957)))
 (let ((?x16440 (ite (and (distinct ((_ extract 40 40) C1) (_ bv0 1)) true) (_ bv40 32) (ite (and (distinct ((_ extract 39 39) C1) (_ bv0 1)) true) (_ bv39 32) (_ bv38 32)))))
 (let ((?x20601 (ite (and (distinct ((_ extract 42 41) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 42 42) C1) (_ bv0 1)) true) (_ bv42 32) (_ bv41 32)) ?x16440)))
 (let ((?x12032 (ite (and (distinct ((_ extract 42 33) C1) (_ bv0 10)) true) (ite (and (distinct ((_ extract 42 38) C1) (_ bv0 5)) true) ?x20601 ?x8232) ?x13531)))
 (let ((?x17499 (ite (and (distinct ((_ extract 42 22) C1) (_ bv0 21)) true) ?x12032 (ite (and (distinct ((_ extract 21 11) C1) (_ bv0 11)) true) ?x18337 ?x23628))))
 (let ((?x14782 (ite (and (distinct ((_ extract 2 2) C2) (_ bv0 1)) true) (_ bv2 32) (ite (and (distinct ((_ extract 1 1) C2) (_ bv0 1)) true) (_ bv1 32) (_ bv0 32)))))
 (let ((?x14705 (ite (and (distinct ((_ extract 5 5) C2) (_ bv0 1)) true) (_ bv5 32) (ite (and (distinct ((_ extract 4 4) C2) (_ bv0 1)) true) (_ bv4 32) (_ bv3 32)))))
 (let ((?x19206 (ite (and (distinct ((_ extract 8 8) C2) (_ bv0 1)) true) (_ bv8 32) (ite (and (distinct ((_ extract 7 7) C2) (_ bv0 1)) true) (_ bv7 32) (_ bv6 32)))))
 (let ((?x12982 (ite (and (distinct ((_ extract 10 9) C2) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) C2) (_ bv0 1)) true) (_ bv10 32) (_ bv9 32)) ?x19206)))
 (let ((?x5543 (ite (and (distinct ((_ extract 10 6) C2) (_ bv0 5)) true) ?x12982 (ite (and (distinct ((_ extract 5 3) C2) (_ bv0 3)) true) ?x14705 ?x14782))))
 (and (and (and (distinct C1 (_ bv0 43)) true) (= (bvand C1 (bvsub C1 (_ bv1 43))) (_ bv0 43))) (and (and (distinct C2 (_ bv0 11)) true) (= (bvand C2 (bvsub C2 (_ bv1 11))) (_ bv0 11))) (bvslt ?x5543 ?x17499) $x6183))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
