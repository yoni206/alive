(set-info :status unknown)
(declare-fun mem0 () (_ BitVec 8))
(declare-fun %p2 () (_ BitVec 64))
(declare-fun idx () (_ BitVec 64))
(declare-fun %p1 () (_ BitVec 64))
(declare-fun |ana_equivalentAddressValues(%p1, %p2)| () (_ BitVec 1))
(assert
 (let ((?x15463 (concat (concat (concat (concat mem0 mem0) mem0) mem0) ((_ extract 5 0) mem0))))
 (let (($x23211 (or true true)))
 (let (($x18818 (and (distinct %p2 (_ bv0 64)) true)))
 (let (($x5885 (and (distinct %p1 (_ bv0 64)) true)))
 (let ((?x14259 (ite (and $x5885 $x23211 $x5885 $x23211 $x5885 $x23211 $x18818 $x23211 (= idx %p2)) (concat ((_ extract 7 6) mem0) ((_ extract 5 0) ?x15463)) mem0)))
 (let (($x7360 (and $x5885 $x23211 $x5885 $x23211 $x5885 $x23211 $x18818 $x23211 (= idx (bvadd (bvadd %p2 (_ bv1 64)) (_ bv0 64))))))
 (let (($x10689 (and $x5885 $x23211 $x5885 $x23211 $x5885 $x23211 $x18818 $x23211 (= idx (bvadd (bvadd %p2 (_ bv1 64)) (_ bv1 64))))))
 (let (($x1702 (and $x5885 $x23211 $x5885 $x23211 $x5885 $x23211 $x18818 $x23211 (= idx (bvadd (bvadd %p2 (_ bv1 64)) (_ bv2 64))))))
 (let ((?x17826 (ite $x1702 ((_ extract 29 22) ?x15463) (ite $x10689 ((_ extract 21 14) ?x15463) (ite $x7360 ((_ extract 13 6) ?x15463) ?x14259)))))
 (let (($x14986 (and $x5885 $x23211 $x5885 $x23211 $x5885 $x23211 $x18818 $x23211 (= idx (bvadd (bvadd %p2 (_ bv1 64)) (_ bv3 64))))))
 (let ((?x10055 (ite $x14986 ((_ extract 37 30) ?x15463) ?x17826)))
 (let (($x16243 (= |ana_equivalentAddressValues(%p1, %p2)| (_ bv1 1))))
 (and (=> $x16243 (= %p1 %p2)) $x16243 (and (distinct ?x10055 mem0) true)))))))))))))))
(check-sat)
