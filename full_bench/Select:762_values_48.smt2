(set-info :status unknown)
(declare-fun C3 () (_ BitVec 11))
(declare-fun C2 () (_ BitVec 11))
(declare-fun C () (_ BitVec 52))
(declare-fun %Op () (_ BitVec 52))
(assert
 (let ((?x5293 (bvsub C2 C3)))
 (let ((?x3947 (ite (and (distinct ((_ extract 2 2) ?x5293) (_ bv0 1)) true) (_ bv2 11) (ite (and (distinct ((_ extract 1 1) ?x5293) (_ bv0 1)) true) (_ bv1 11) (_ bv0 11)))))
 (let ((?x6622 (ite (and (distinct ((_ extract 5 5) ?x5293) (_ bv0 1)) true) (_ bv5 11) (ite (and (distinct ((_ extract 4 4) ?x5293) (_ bv0 1)) true) (_ bv4 11) (_ bv3 11)))))
 (let ((?x1704 (ite (and (distinct ((_ extract 8 8) ?x5293) (_ bv0 1)) true) (_ bv8 11) (ite (and (distinct ((_ extract 7 7) ?x5293) (_ bv0 1)) true) (_ bv7 11) (_ bv6 11)))))
 (let ((?x4911 (ite (and (distinct ((_ extract 10 9) ?x5293) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) ?x5293) (_ bv0 1)) true) (_ bv10 11) (_ bv9 11)) ?x1704)))
 (let ((?x4885 (ite (and (distinct ((_ extract 10 6) ?x5293) (_ bv0 5)) true) ?x4911 (ite (and (distinct ((_ extract 5 3) ?x5293) (_ bv0 3)) true) ?x6622 ?x3947))))
 (let ((?x8256 (ite (and (distinct ((_ extract 3 2) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 3 3) C) (_ bv0 1)) true) (_ bv3 11) (_ bv2 11)) (ite (and (distinct ((_ extract 1 1) C) (_ bv0 1)) true) (_ bv1 11) (_ bv0 11)))))
 (let ((?x5026 (ite (and (distinct ((_ extract 6 6) C) (_ bv0 1)) true) (_ bv6 11) (ite (and (distinct ((_ extract 5 5) C) (_ bv0 1)) true) (_ bv5 11) (_ bv4 11)))))
 (let ((?x2579 (ite (and (distinct ((_ extract 9 9) C) (_ bv0 1)) true) (_ bv9 11) (ite (and (distinct ((_ extract 8 8) C) (_ bv0 1)) true) (_ bv8 11) (_ bv7 11)))))
 (let ((?x6044 (ite (and (distinct ((_ extract 12 12) C) (_ bv0 1)) true) (_ bv12 11) (ite (and (distinct ((_ extract 11 11) C) (_ bv0 1)) true) (_ bv11 11) (_ bv10 11)))))
 (let ((?x7171 (ite (and (distinct ((_ extract 12 7) C) (_ bv0 6)) true) (ite (and (distinct ((_ extract 12 10) C) (_ bv0 3)) true) ?x6044 ?x2579) (ite (and (distinct ((_ extract 6 4) C) (_ bv0 3)) true) ?x5026 ?x8256))))
 (let ((?x7522 (ite (and (distinct ((_ extract 16 15) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 16 16) C) (_ bv0 1)) true) (_ bv16 11) (_ bv15 11)) (ite (and (distinct ((_ extract 14 14) C) (_ bv0 1)) true) (_ bv14 11) (_ bv13 11)))))
 (let ((?x5376 (ite (and (distinct ((_ extract 19 19) C) (_ bv0 1)) true) (_ bv19 11) (ite (and (distinct ((_ extract 18 18) C) (_ bv0 1)) true) (_ bv18 11) (_ bv17 11)))))
 (let ((?x6545 (ite (and (distinct ((_ extract 22 22) C) (_ bv0 1)) true) (_ bv22 11) (ite (and (distinct ((_ extract 21 21) C) (_ bv0 1)) true) (_ bv21 11) (_ bv20 11)))))
 (let ((?x8566 (ite (and (distinct ((_ extract 25 25) C) (_ bv0 1)) true) (_ bv25 11) (ite (and (distinct ((_ extract 24 24) C) (_ bv0 1)) true) (_ bv24 11) (_ bv23 11)))))
 (let ((?x7646 (ite (and (distinct ((_ extract 25 20) C) (_ bv0 6)) true) (ite (and (distinct ((_ extract 25 23) C) (_ bv0 3)) true) ?x8566 ?x6545) (ite (and (distinct ((_ extract 19 17) C) (_ bv0 3)) true) ?x5376 ?x7522))))
 (let ((?x3861 (ite (and (distinct ((_ extract 29 28) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 29 29) C) (_ bv0 1)) true) (_ bv29 11) (_ bv28 11)) (ite (and (distinct ((_ extract 27 27) C) (_ bv0 1)) true) (_ bv27 11) (_ bv26 11)))))
 (let ((?x4172 (ite (and (distinct ((_ extract 32 32) C) (_ bv0 1)) true) (_ bv32 11) (ite (and (distinct ((_ extract 31 31) C) (_ bv0 1)) true) (_ bv31 11) (_ bv30 11)))))
 (let ((?x3500 (ite (and (distinct ((_ extract 35 35) C) (_ bv0 1)) true) (_ bv35 11) (ite (and (distinct ((_ extract 34 34) C) (_ bv0 1)) true) (_ bv34 11) (_ bv33 11)))))
 (let ((?x4870 (ite (and (distinct ((_ extract 38 38) C) (_ bv0 1)) true) (_ bv38 11) (ite (and (distinct ((_ extract 37 37) C) (_ bv0 1)) true) (_ bv37 11) (_ bv36 11)))))
 (let ((?x7089 (ite (and (distinct ((_ extract 38 33) C) (_ bv0 6)) true) (ite (and (distinct ((_ extract 38 36) C) (_ bv0 3)) true) ?x4870 ?x3500) (ite (and (distinct ((_ extract 32 30) C) (_ bv0 3)) true) ?x4172 ?x3861))))
 (let ((?x1980 (ite (and (distinct ((_ extract 42 41) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 42 42) C) (_ bv0 1)) true) (_ bv42 11) (_ bv41 11)) (ite (and (distinct ((_ extract 40 40) C) (_ bv0 1)) true) (_ bv40 11) (_ bv39 11)))))
 (let ((?x1540 (ite (and (distinct ((_ extract 45 45) C) (_ bv0 1)) true) (_ bv45 11) (ite (and (distinct ((_ extract 44 44) C) (_ bv0 1)) true) (_ bv44 11) (_ bv43 11)))))
 (let ((?x6830 (ite (and (distinct ((_ extract 48 48) C) (_ bv0 1)) true) (_ bv48 11) (ite (and (distinct ((_ extract 47 47) C) (_ bv0 1)) true) (_ bv47 11) (_ bv46 11)))))
 (let ((?x5349 (ite (and (distinct ((_ extract 51 51) C) (_ bv0 1)) true) (_ bv51 11) (ite (and (distinct ((_ extract 50 50) C) (_ bv0 1)) true) (_ bv50 11) (_ bv49 11)))))
 (let ((?x6107 (ite (and (distinct ((_ extract 51 46) C) (_ bv0 6)) true) (ite (and (distinct ((_ extract 51 49) C) (_ bv0 3)) true) ?x5349 ?x6830) (ite (and (distinct ((_ extract 45 43) C) (_ bv0 3)) true) ?x1540 ?x1980))))
 (let ((?x1172 (ite (and (distinct ((_ extract 51 26) C) (_ bv0 26)) true) (ite (and (distinct ((_ extract 51 39) C) (_ bv0 13)) true) ?x6107 ?x7089) (ite (and (distinct ((_ extract 25 13) C) (_ bv0 13)) true) ?x7646 ?x7171))))
 (let ((?x4496 (bvsub ?x1172 ?x4885)))
 (let ((?x1522 (ite (bvsgt (_ bv0 11) ?x4496) (_ bv0 11) ?x4496)))
 (let ((?x5560 (bvsub ?x4885 ?x1172)))
 (let ((?x1720 (ite (bvsgt (_ bv0 11) ?x5560) (_ bv0 11) ?x5560)))
 (let ((?x6331 (bvadd (bvxor (bvlshr (bvshl ((_ extract 10 0) (bvand %Op C)) ?x1720) ?x1522) ?x5293) C3)))
 (let (($x1195 (and (distinct (ite (= (ite (= (bvand %Op C) (_ bv0 52)) (_ bv1 1) (_ bv0 1)) (_ bv1 1)) C2 C3) ?x6331) true)))
 (let ((?x2118 (ite (and (distinct ((_ extract 3 2) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 3 3) C) (_ bv0 1)) true) (_ bv3 32) (_ bv2 32)) (ite (and (distinct ((_ extract 1 1) C) (_ bv0 1)) true) (_ bv1 32) (_ bv0 32)))))
 (let ((?x7110 (ite (and (distinct ((_ extract 6 6) C) (_ bv0 1)) true) (_ bv6 32) (ite (and (distinct ((_ extract 5 5) C) (_ bv0 1)) true) (_ bv5 32) (_ bv4 32)))))
 (let ((?x6854 (ite (and (distinct ((_ extract 9 9) C) (_ bv0 1)) true) (_ bv9 32) (ite (and (distinct ((_ extract 8 8) C) (_ bv0 1)) true) (_ bv8 32) (_ bv7 32)))))
 (let ((?x6138 (ite (and (distinct ((_ extract 12 12) C) (_ bv0 1)) true) (_ bv12 32) (ite (and (distinct ((_ extract 11 11) C) (_ bv0 1)) true) (_ bv11 32) (_ bv10 32)))))
 (let ((?x3471 (ite (and (distinct ((_ extract 12 7) C) (_ bv0 6)) true) (ite (and (distinct ((_ extract 12 10) C) (_ bv0 3)) true) ?x6138 ?x6854) (ite (and (distinct ((_ extract 6 4) C) (_ bv0 3)) true) ?x7110 ?x2118))))
 (let ((?x4824 (ite (and (distinct ((_ extract 16 15) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 16 16) C) (_ bv0 1)) true) (_ bv16 32) (_ bv15 32)) (ite (and (distinct ((_ extract 14 14) C) (_ bv0 1)) true) (_ bv14 32) (_ bv13 32)))))
 (let ((?x4270 (ite (and (distinct ((_ extract 19 19) C) (_ bv0 1)) true) (_ bv19 32) (ite (and (distinct ((_ extract 18 18) C) (_ bv0 1)) true) (_ bv18 32) (_ bv17 32)))))
 (let ((?x1664 (ite (and (distinct ((_ extract 22 22) C) (_ bv0 1)) true) (_ bv22 32) (ite (and (distinct ((_ extract 21 21) C) (_ bv0 1)) true) (_ bv21 32) (_ bv20 32)))))
 (let ((?x3030 (ite (and (distinct ((_ extract 25 25) C) (_ bv0 1)) true) (_ bv25 32) (ite (and (distinct ((_ extract 24 24) C) (_ bv0 1)) true) (_ bv24 32) (_ bv23 32)))))
 (let ((?x5473 (ite (and (distinct ((_ extract 25 20) C) (_ bv0 6)) true) (ite (and (distinct ((_ extract 25 23) C) (_ bv0 3)) true) ?x3030 ?x1664) (ite (and (distinct ((_ extract 19 17) C) (_ bv0 3)) true) ?x4270 ?x4824))))
 (let ((?x2189 (ite (and (distinct ((_ extract 29 28) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 29 29) C) (_ bv0 1)) true) (_ bv29 32) (_ bv28 32)) (ite (and (distinct ((_ extract 27 27) C) (_ bv0 1)) true) (_ bv27 32) (_ bv26 32)))))
 (let ((?x3681 (ite (and (distinct ((_ extract 32 32) C) (_ bv0 1)) true) (_ bv32 32) (ite (and (distinct ((_ extract 31 31) C) (_ bv0 1)) true) (_ bv31 32) (_ bv30 32)))))
 (let ((?x1108 (ite (and (distinct ((_ extract 35 35) C) (_ bv0 1)) true) (_ bv35 32) (ite (and (distinct ((_ extract 34 34) C) (_ bv0 1)) true) (_ bv34 32) (_ bv33 32)))))
 (let ((?x6049 (ite (and (distinct ((_ extract 38 38) C) (_ bv0 1)) true) (_ bv38 32) (ite (and (distinct ((_ extract 37 37) C) (_ bv0 1)) true) (_ bv37 32) (_ bv36 32)))))
 (let ((?x2371 (ite (and (distinct ((_ extract 38 33) C) (_ bv0 6)) true) (ite (and (distinct ((_ extract 38 36) C) (_ bv0 3)) true) ?x6049 ?x1108) (ite (and (distinct ((_ extract 32 30) C) (_ bv0 3)) true) ?x3681 ?x2189))))
 (let ((?x6207 (ite (and (distinct ((_ extract 42 41) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 42 42) C) (_ bv0 1)) true) (_ bv42 32) (_ bv41 32)) (ite (and (distinct ((_ extract 40 40) C) (_ bv0 1)) true) (_ bv40 32) (_ bv39 32)))))
 (let ((?x4795 (ite (and (distinct ((_ extract 45 45) C) (_ bv0 1)) true) (_ bv45 32) (ite (and (distinct ((_ extract 44 44) C) (_ bv0 1)) true) (_ bv44 32) (_ bv43 32)))))
 (let ((?x5937 (ite (and (distinct ((_ extract 48 48) C) (_ bv0 1)) true) (_ bv48 32) (ite (and (distinct ((_ extract 47 47) C) (_ bv0 1)) true) (_ bv47 32) (_ bv46 32)))))
 (let ((?x1782 (ite (and (distinct ((_ extract 51 51) C) (_ bv0 1)) true) (_ bv51 32) (ite (and (distinct ((_ extract 50 50) C) (_ bv0 1)) true) (_ bv50 32) (_ bv49 32)))))
 (let ((?x5934 (ite (and (distinct ((_ extract 51 46) C) (_ bv0 6)) true) (ite (and (distinct ((_ extract 51 49) C) (_ bv0 3)) true) ?x1782 ?x5937) (ite (and (distinct ((_ extract 45 43) C) (_ bv0 3)) true) ?x4795 ?x6207))))
 (let ((?x5518 (ite (and (distinct ((_ extract 51 26) C) (_ bv0 26)) true) (ite (and (distinct ((_ extract 51 39) C) (_ bv0 13)) true) ?x5934 ?x2371) (ite (and (distinct ((_ extract 25 13) C) (_ bv0 13)) true) ?x5473 ?x3471))))
 (and (and (and (distinct C (_ bv0 52)) true) (= (bvand C (bvsub C (_ bv1 52))) (_ bv0 52))) (and (and (distinct ?x5293 (_ bv0 11)) true) (= (bvand ?x5293 (bvsub ?x5293 (_ bv1 11))) (_ bv0 11))) (bvslt ?x5518 (_ bv11 32)) $x1195))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
