(set-info :status unknown)
(declare-fun C3 () (_ BitVec 11))
(declare-fun C2 () (_ BitVec 11))
(declare-fun C () (_ BitVec 52))
(declare-fun %Op () (_ BitVec 52))
(assert
 (let ((?x15008 (bvsub C2 C3)))
 (let ((?x15976 (ite (and (distinct ((_ extract 2 2) ?x15008) (_ bv0 1)) true) (_ bv2 11) (ite (and (distinct ((_ extract 1 1) ?x15008) (_ bv0 1)) true) (_ bv1 11) (_ bv0 11)))))
 (let ((?x6961 (ite (and (distinct ((_ extract 5 5) ?x15008) (_ bv0 1)) true) (_ bv5 11) (ite (and (distinct ((_ extract 4 4) ?x15008) (_ bv0 1)) true) (_ bv4 11) (_ bv3 11)))))
 (let ((?x2120 (ite (and (distinct ((_ extract 8 8) ?x15008) (_ bv0 1)) true) (_ bv8 11) (ite (and (distinct ((_ extract 7 7) ?x15008) (_ bv0 1)) true) (_ bv7 11) (_ bv6 11)))))
 (let ((?x17234 (ite (and (distinct ((_ extract 10 9) ?x15008) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) ?x15008) (_ bv0 1)) true) (_ bv10 11) (_ bv9 11)) ?x2120)))
 (let ((?x14877 (ite (and (distinct ((_ extract 10 6) ?x15008) (_ bv0 5)) true) ?x17234 (ite (and (distinct ((_ extract 5 3) ?x15008) (_ bv0 3)) true) ?x6961 ?x15976))))
 (let ((?x16002 (ite (and (distinct ((_ extract 3 2) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 3 3) C) (_ bv0 1)) true) (_ bv3 11) (_ bv2 11)) (ite (and (distinct ((_ extract 1 1) C) (_ bv0 1)) true) (_ bv1 11) (_ bv0 11)))))
 (let ((?x3343 (ite (and (distinct ((_ extract 6 6) C) (_ bv0 1)) true) (_ bv6 11) (ite (and (distinct ((_ extract 5 5) C) (_ bv0 1)) true) (_ bv5 11) (_ bv4 11)))))
 (let ((?x14761 (ite (and (distinct ((_ extract 9 9) C) (_ bv0 1)) true) (_ bv9 11) (ite (and (distinct ((_ extract 8 8) C) (_ bv0 1)) true) (_ bv8 11) (_ bv7 11)))))
 (let ((?x9506 (ite (and (distinct ((_ extract 12 12) C) (_ bv0 1)) true) (_ bv12 11) (ite (and (distinct ((_ extract 11 11) C) (_ bv0 1)) true) (_ bv11 11) (_ bv10 11)))))
 (let ((?x13108 (ite (and (distinct ((_ extract 12 7) C) (_ bv0 6)) true) (ite (and (distinct ((_ extract 12 10) C) (_ bv0 3)) true) ?x9506 ?x14761) (ite (and (distinct ((_ extract 6 4) C) (_ bv0 3)) true) ?x3343 ?x16002))))
 (let ((?x20220 (ite (and (distinct ((_ extract 16 15) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 16 16) C) (_ bv0 1)) true) (_ bv16 11) (_ bv15 11)) (ite (and (distinct ((_ extract 14 14) C) (_ bv0 1)) true) (_ bv14 11) (_ bv13 11)))))
 (let ((?x9401 (ite (and (distinct ((_ extract 19 19) C) (_ bv0 1)) true) (_ bv19 11) (ite (and (distinct ((_ extract 18 18) C) (_ bv0 1)) true) (_ bv18 11) (_ bv17 11)))))
 (let ((?x21953 (ite (and (distinct ((_ extract 22 22) C) (_ bv0 1)) true) (_ bv22 11) (ite (and (distinct ((_ extract 21 21) C) (_ bv0 1)) true) (_ bv21 11) (_ bv20 11)))))
 (let ((?x21656 (ite (and (distinct ((_ extract 25 25) C) (_ bv0 1)) true) (_ bv25 11) (ite (and (distinct ((_ extract 24 24) C) (_ bv0 1)) true) (_ bv24 11) (_ bv23 11)))))
 (let ((?x22479 (ite (and (distinct ((_ extract 25 20) C) (_ bv0 6)) true) (ite (and (distinct ((_ extract 25 23) C) (_ bv0 3)) true) ?x21656 ?x21953) (ite (and (distinct ((_ extract 19 17) C) (_ bv0 3)) true) ?x9401 ?x20220))))
 (let ((?x14687 (ite (and (distinct ((_ extract 29 28) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 29 29) C) (_ bv0 1)) true) (_ bv29 11) (_ bv28 11)) (ite (and (distinct ((_ extract 27 27) C) (_ bv0 1)) true) (_ bv27 11) (_ bv26 11)))))
 (let ((?x11038 (ite (and (distinct ((_ extract 32 32) C) (_ bv0 1)) true) (_ bv32 11) (ite (and (distinct ((_ extract 31 31) C) (_ bv0 1)) true) (_ bv31 11) (_ bv30 11)))))
 (let ((?x7552 (ite (and (distinct ((_ extract 35 35) C) (_ bv0 1)) true) (_ bv35 11) (ite (and (distinct ((_ extract 34 34) C) (_ bv0 1)) true) (_ bv34 11) (_ bv33 11)))))
 (let ((?x11014 (ite (and (distinct ((_ extract 38 38) C) (_ bv0 1)) true) (_ bv38 11) (ite (and (distinct ((_ extract 37 37) C) (_ bv0 1)) true) (_ bv37 11) (_ bv36 11)))))
 (let ((?x17717 (ite (and (distinct ((_ extract 38 33) C) (_ bv0 6)) true) (ite (and (distinct ((_ extract 38 36) C) (_ bv0 3)) true) ?x11014 ?x7552) (ite (and (distinct ((_ extract 32 30) C) (_ bv0 3)) true) ?x11038 ?x14687))))
 (let ((?x2992 (ite (and (distinct ((_ extract 42 41) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 42 42) C) (_ bv0 1)) true) (_ bv42 11) (_ bv41 11)) (ite (and (distinct ((_ extract 40 40) C) (_ bv0 1)) true) (_ bv40 11) (_ bv39 11)))))
 (let ((?x13233 (ite (and (distinct ((_ extract 45 45) C) (_ bv0 1)) true) (_ bv45 11) (ite (and (distinct ((_ extract 44 44) C) (_ bv0 1)) true) (_ bv44 11) (_ bv43 11)))))
 (let ((?x10839 (ite (and (distinct ((_ extract 48 48) C) (_ bv0 1)) true) (_ bv48 11) (ite (and (distinct ((_ extract 47 47) C) (_ bv0 1)) true) (_ bv47 11) (_ bv46 11)))))
 (let ((?x7776 (ite (and (distinct ((_ extract 51 51) C) (_ bv0 1)) true) (_ bv51 11) (ite (and (distinct ((_ extract 50 50) C) (_ bv0 1)) true) (_ bv50 11) (_ bv49 11)))))
 (let ((?x9660 (ite (and (distinct ((_ extract 51 46) C) (_ bv0 6)) true) (ite (and (distinct ((_ extract 51 49) C) (_ bv0 3)) true) ?x7776 ?x10839) (ite (and (distinct ((_ extract 45 43) C) (_ bv0 3)) true) ?x13233 ?x2992))))
 (let ((?x14147 (ite (and (distinct ((_ extract 51 26) C) (_ bv0 26)) true) (ite (and (distinct ((_ extract 51 39) C) (_ bv0 13)) true) ?x9660 ?x17717) (ite (and (distinct ((_ extract 25 13) C) (_ bv0 13)) true) ?x22479 ?x13108))))
 (let ((?x6509 (bvsub ?x14147 ?x14877)))
 (let ((?x18549 (ite (bvsgt (_ bv0 11) ?x6509) (_ bv0 11) ?x6509)))
 (let ((?x7224 (bvsub ?x14877 ?x14147)))
 (let ((?x3559 (ite (bvsgt (_ bv0 11) ?x7224) (_ bv0 11) ?x7224)))
 (let ((?x14695 (bvadd (bvxor (bvlshr (bvshl ((_ extract 10 0) (bvand %Op C)) ?x3559) ?x18549) ?x15008) C3)))
 (let (($x19078 (and (distinct (ite (= (ite (= (bvand %Op C) (_ bv0 52)) (_ bv1 1) (_ bv0 1)) (_ bv1 1)) C2 C3) ?x14695) true)))
 (let ((?x15676 (ite (and (distinct ((_ extract 3 2) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 3 3) C) (_ bv0 1)) true) (_ bv3 32) (_ bv2 32)) (ite (and (distinct ((_ extract 1 1) C) (_ bv0 1)) true) (_ bv1 32) (_ bv0 32)))))
 (let ((?x20308 (ite (and (distinct ((_ extract 6 6) C) (_ bv0 1)) true) (_ bv6 32) (ite (and (distinct ((_ extract 5 5) C) (_ bv0 1)) true) (_ bv5 32) (_ bv4 32)))))
 (let ((?x18258 (ite (and (distinct ((_ extract 9 9) C) (_ bv0 1)) true) (_ bv9 32) (ite (and (distinct ((_ extract 8 8) C) (_ bv0 1)) true) (_ bv8 32) (_ bv7 32)))))
 (let ((?x17230 (ite (and (distinct ((_ extract 12 12) C) (_ bv0 1)) true) (_ bv12 32) (ite (and (distinct ((_ extract 11 11) C) (_ bv0 1)) true) (_ bv11 32) (_ bv10 32)))))
 (let ((?x9159 (ite (and (distinct ((_ extract 12 7) C) (_ bv0 6)) true) (ite (and (distinct ((_ extract 12 10) C) (_ bv0 3)) true) ?x17230 ?x18258) (ite (and (distinct ((_ extract 6 4) C) (_ bv0 3)) true) ?x20308 ?x15676))))
 (let ((?x13589 (ite (and (distinct ((_ extract 16 15) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 16 16) C) (_ bv0 1)) true) (_ bv16 32) (_ bv15 32)) (ite (and (distinct ((_ extract 14 14) C) (_ bv0 1)) true) (_ bv14 32) (_ bv13 32)))))
 (let ((?x12135 (ite (and (distinct ((_ extract 19 19) C) (_ bv0 1)) true) (_ bv19 32) (ite (and (distinct ((_ extract 18 18) C) (_ bv0 1)) true) (_ bv18 32) (_ bv17 32)))))
 (let ((?x10296 (ite (and (distinct ((_ extract 22 22) C) (_ bv0 1)) true) (_ bv22 32) (ite (and (distinct ((_ extract 21 21) C) (_ bv0 1)) true) (_ bv21 32) (_ bv20 32)))))
 (let ((?x7353 (ite (and (distinct ((_ extract 25 25) C) (_ bv0 1)) true) (_ bv25 32) (ite (and (distinct ((_ extract 24 24) C) (_ bv0 1)) true) (_ bv24 32) (_ bv23 32)))))
 (let ((?x14748 (ite (and (distinct ((_ extract 25 20) C) (_ bv0 6)) true) (ite (and (distinct ((_ extract 25 23) C) (_ bv0 3)) true) ?x7353 ?x10296) (ite (and (distinct ((_ extract 19 17) C) (_ bv0 3)) true) ?x12135 ?x13589))))
 (let ((?x4928 (ite (and (distinct ((_ extract 29 28) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 29 29) C) (_ bv0 1)) true) (_ bv29 32) (_ bv28 32)) (ite (and (distinct ((_ extract 27 27) C) (_ bv0 1)) true) (_ bv27 32) (_ bv26 32)))))
 (let ((?x4755 (ite (and (distinct ((_ extract 32 32) C) (_ bv0 1)) true) (_ bv32 32) (ite (and (distinct ((_ extract 31 31) C) (_ bv0 1)) true) (_ bv31 32) (_ bv30 32)))))
 (let ((?x765 (ite (and (distinct ((_ extract 35 35) C) (_ bv0 1)) true) (_ bv35 32) (ite (and (distinct ((_ extract 34 34) C) (_ bv0 1)) true) (_ bv34 32) (_ bv33 32)))))
 (let ((?x3747 (ite (and (distinct ((_ extract 38 38) C) (_ bv0 1)) true) (_ bv38 32) (ite (and (distinct ((_ extract 37 37) C) (_ bv0 1)) true) (_ bv37 32) (_ bv36 32)))))
 (let ((?x5699 (ite (and (distinct ((_ extract 38 33) C) (_ bv0 6)) true) (ite (and (distinct ((_ extract 38 36) C) (_ bv0 3)) true) ?x3747 ?x765) (ite (and (distinct ((_ extract 32 30) C) (_ bv0 3)) true) ?x4755 ?x4928))))
 (let ((?x9994 (ite (and (distinct ((_ extract 42 41) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 42 42) C) (_ bv0 1)) true) (_ bv42 32) (_ bv41 32)) (ite (and (distinct ((_ extract 40 40) C) (_ bv0 1)) true) (_ bv40 32) (_ bv39 32)))))
 (let ((?x13872 (ite (and (distinct ((_ extract 45 45) C) (_ bv0 1)) true) (_ bv45 32) (ite (and (distinct ((_ extract 44 44) C) (_ bv0 1)) true) (_ bv44 32) (_ bv43 32)))))
 (let ((?x20306 (ite (and (distinct ((_ extract 48 48) C) (_ bv0 1)) true) (_ bv48 32) (ite (and (distinct ((_ extract 47 47) C) (_ bv0 1)) true) (_ bv47 32) (_ bv46 32)))))
 (let ((?x16488 (ite (and (distinct ((_ extract 51 51) C) (_ bv0 1)) true) (_ bv51 32) (ite (and (distinct ((_ extract 50 50) C) (_ bv0 1)) true) (_ bv50 32) (_ bv49 32)))))
 (let ((?x14341 (ite (and (distinct ((_ extract 51 46) C) (_ bv0 6)) true) (ite (and (distinct ((_ extract 51 49) C) (_ bv0 3)) true) ?x16488 ?x20306) (ite (and (distinct ((_ extract 45 43) C) (_ bv0 3)) true) ?x13872 ?x9994))))
 (let ((?x18403 (ite (and (distinct ((_ extract 51 26) C) (_ bv0 26)) true) (ite (and (distinct ((_ extract 51 39) C) (_ bv0 13)) true) ?x14341 ?x5699) (ite (and (distinct ((_ extract 25 13) C) (_ bv0 13)) true) ?x14748 ?x9159))))
 (and (and (and (distinct C (_ bv0 52)) true) (= (bvand C (bvsub C (_ bv1 52))) (_ bv0 52))) (and (and (distinct ?x15008 (_ bv0 11)) true) (= (bvand ?x15008 (bvsub ?x15008 (_ bv1 11))) (_ bv0 11))) (bvslt ?x18403 (_ bv11 32)) $x19078))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
