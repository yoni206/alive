(set-info :source |
 Generated by Alive 0.1
 More info in N. P. Lopes, D. Menendez, S. Nagarakatte, J. Regehr.
 Provably Correct Peephole Optimizations with Alive. In PLDI'15.
|)

(set-info :status unknown)
(declare-fun C () (_ BitVec 44))
(declare-fun %B () (_ BitVec 44))
(declare-fun %A () (_ BitVec 44))
(declare-fun |ana_MaskedValueIsZero(%A, lshr(-1, countLeadingZeros(C)))| () (_ BitVec 1))
(assert
 (let (($x189907 (and (distinct (bvand (bvsub %A %B) C) (bvand (bvsub (_ bv0 44) %B) C)) true)))
 (let (($x186517 (= |ana_MaskedValueIsZero(%A, lshr(-1, countLeadingZeros(C)))| (_ bv1 1))))
 (let ((?x189736 (ite (= ((_ extract 1 1) C) (_ bv1 1)) (_ bv42 44) (ite (= ((_ extract 0 0) C) (_ bv1 1)) (_ bv43 44) (_ bv44 44)))))
 (let ((?x189729 (ite (= ((_ extract 3 3) C) (_ bv1 1)) (_ bv40 44) (ite (= ((_ extract 2 2) C) (_ bv1 1)) (_ bv41 44) ?x189736))))
 (let ((?x189725 (ite (= ((_ extract 5 5) C) (_ bv1 1)) (_ bv38 44) (ite (= ((_ extract 4 4) C) (_ bv1 1)) (_ bv39 44) ?x189729))))
 (let ((?x189721 (ite (= ((_ extract 7 7) C) (_ bv1 1)) (_ bv36 44) (ite (= ((_ extract 6 6) C) (_ bv1 1)) (_ bv37 44) ?x189725))))
 (let ((?x189714 (ite (= ((_ extract 9 9) C) (_ bv1 1)) (_ bv34 44) (ite (= ((_ extract 8 8) C) (_ bv1 1)) (_ bv35 44) ?x189721))))
 (let ((?x189707 (ite (= ((_ extract 11 11) C) (_ bv1 1)) (_ bv32 44) (ite (= ((_ extract 10 10) C) (_ bv1 1)) (_ bv33 44) ?x189714))))
 (let ((?x189703 (ite (= ((_ extract 13 13) C) (_ bv1 1)) (_ bv30 44) (ite (= ((_ extract 12 12) C) (_ bv1 1)) (_ bv31 44) ?x189707))))
 (let ((?x189696 (ite (= ((_ extract 15 15) C) (_ bv1 1)) (_ bv28 44) (ite (= ((_ extract 14 14) C) (_ bv1 1)) (_ bv29 44) ?x189703))))
 (let ((?x189866 (ite (= ((_ extract 17 17) C) (_ bv1 1)) (_ bv26 44) (ite (= ((_ extract 16 16) C) (_ bv1 1)) (_ bv27 44) ?x189696))))
 (let ((?x189868 (ite (= ((_ extract 19 19) C) (_ bv1 1)) (_ bv24 44) (ite (= ((_ extract 18 18) C) (_ bv1 1)) (_ bv25 44) ?x189866))))
 (let ((?x189870 (ite (= ((_ extract 21 21) C) (_ bv1 1)) (_ bv22 44) (ite (= ((_ extract 20 20) C) (_ bv1 1)) (_ bv23 44) ?x189868))))
 (let ((?x189872 (ite (= ((_ extract 23 23) C) (_ bv1 1)) (_ bv20 44) (ite (= ((_ extract 22 22) C) (_ bv1 1)) (_ bv21 44) ?x189870))))
 (let ((?x189874 (ite (= ((_ extract 25 25) C) (_ bv1 1)) (_ bv18 44) (ite (= ((_ extract 24 24) C) (_ bv1 1)) (_ bv19 44) ?x189872))))
 (let ((?x189876 (ite (= ((_ extract 27 27) C) (_ bv1 1)) (_ bv16 44) (ite (= ((_ extract 26 26) C) (_ bv1 1)) (_ bv17 44) ?x189874))))
 (let ((?x189878 (ite (= ((_ extract 29 29) C) (_ bv1 1)) (_ bv14 44) (ite (= ((_ extract 28 28) C) (_ bv1 1)) (_ bv15 44) ?x189876))))
 (let ((?x189880 (ite (= ((_ extract 31 31) C) (_ bv1 1)) (_ bv12 44) (ite (= ((_ extract 30 30) C) (_ bv1 1)) (_ bv13 44) ?x189878))))
 (let ((?x189882 (ite (= ((_ extract 33 33) C) (_ bv1 1)) (_ bv10 44) (ite (= ((_ extract 32 32) C) (_ bv1 1)) (_ bv11 44) ?x189880))))
 (let ((?x189884 (ite (= ((_ extract 35 35) C) (_ bv1 1)) (_ bv8 44) (ite (= ((_ extract 34 34) C) (_ bv1 1)) (_ bv9 44) ?x189882))))
 (let ((?x189886 (ite (= ((_ extract 37 37) C) (_ bv1 1)) (_ bv6 44) (ite (= ((_ extract 36 36) C) (_ bv1 1)) (_ bv7 44) ?x189884))))
 (let ((?x189888 (ite (= ((_ extract 39 39) C) (_ bv1 1)) (_ bv4 44) (ite (= ((_ extract 38 38) C) (_ bv1 1)) (_ bv5 44) ?x189886))))
 (let ((?x189890 (ite (= ((_ extract 41 41) C) (_ bv1 1)) (_ bv2 44) (ite (= ((_ extract 40 40) C) (_ bv1 1)) (_ bv3 44) ?x189888))))
 (let ((?x189892 (ite (= ((_ extract 43 43) C) (_ bv1 1)) (_ bv0 44) (ite (= ((_ extract 42 42) C) (_ bv1 1)) (_ bv1 44) ?x189890))))
 (let (($x189899 (=> $x186517 (= (bvand %A (bvlshr (_ bv17592186044415 44) ?x189892)) (_ bv0 44)))))
 (and $x189899 $x186517 $x189907)))))))))))))))))))))))))))
(check-sat)
