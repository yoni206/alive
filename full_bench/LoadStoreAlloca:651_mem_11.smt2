(set-info :status unknown)
(declare-fun mem0 () (_ BitVec 8))
(declare-fun alloca%a_2977 () (_ BitVec 8))
(declare-fun %a () (_ BitVec 64))
(declare-fun idx () (_ BitVec 64))
(declare-fun %x () (_ BitVec 5))
(declare-fun %idx () (_ BitVec 14))
(declare-fun u_%a () (_ BitVec 8))
(declare-fun u_%ptr () (_ BitVec 8))
(assert
 (forall ((alloca%a_2976 (_ BitVec 8)) (alloca%a_2978 (_ BitVec 8)) )(let (($x13931 (= idx (bvadd %a (_ bv0 64)))))
 (let ((?x1172 (ite $x13931 ((_ extract 7 0) alloca%a_2977) mem0)))
 (let ((?x5626 (ite (= (bvadd %a (bvmul (_ bv1 64) ((_ sign_extend 50) %idx))) (bvadd %a (_ bv0 64))) ((_ extract 7 0) alloca%a_2976) mem0)))
 (let (($x8147 (bvuge (_ bv0 64) (bvsub (bvadd %a (bvmul (_ bv1 64) ((_ sign_extend 50) %idx))) %a))))
 (let (($x5495 (and (distinct %a (_ bv0 64)) true)))
 (let (($x80 (and $x5495 (and (distinct (bvadd %a (bvmul (_ bv1 64) ((_ sign_extend 50) %idx))) (_ bv0 64)) true) (and (bvuge (bvadd %a (bvmul (_ bv1 64) ((_ sign_extend 50) %idx))) %a) $x8147) (= idx (bvadd %a (bvmul (_ bv1 64) ((_ sign_extend 50) %idx)))))))
 (let ((?x284 (ite $x80 (concat ((_ extract 7 5) ?x5626) ((_ extract 4 0) %x)) (ite $x13931 ((_ extract 7 0) alloca%a_2976) mem0))))
 (and $x5495 $x5495 (= u_%ptr (_ bv1 8)) (= u_%a (_ bv1 8)) $x5495 $x5495 $x5495 (and (distinct (ite $x13931 ((_ extract 7 0) alloca%a_2978) ?x284) ?x1172) true))))))))))
 )
(check-sat)
