(set-info :status unknown)
(declare-fun C3 () (_ BitVec 11))
(declare-fun C2 () (_ BitVec 11))
(declare-fun C () (_ BitVec 50))
(declare-fun %Op () (_ BitVec 50))
(assert
 (let ((?x5293 (bvsub C2 C3)))
 (let ((?x1473 (ite (and (distinct ((_ extract 2 2) ?x5293) (_ bv0 1)) true) (_ bv2 11) (ite (and (distinct ((_ extract 1 1) ?x5293) (_ bv0 1)) true) (_ bv1 11) (_ bv0 11)))))
 (let ((?x5669 (ite (and (distinct ((_ extract 5 5) ?x5293) (_ bv0 1)) true) (_ bv5 11) (ite (and (distinct ((_ extract 4 4) ?x5293) (_ bv0 1)) true) (_ bv4 11) (_ bv3 11)))))
 (let ((?x1522 (ite (and (distinct ((_ extract 8 8) ?x5293) (_ bv0 1)) true) (_ bv8 11) (ite (and (distinct ((_ extract 7 7) ?x5293) (_ bv0 1)) true) (_ bv7 11) (_ bv6 11)))))
 (let ((?x1491 (ite (and (distinct ((_ extract 10 9) ?x5293) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) ?x5293) (_ bv0 1)) true) (_ bv10 11) (_ bv9 11)) ?x1522)))
 (let ((?x7757 (ite (and (distinct ((_ extract 10 6) ?x5293) (_ bv0 5)) true) ?x1491 (ite (and (distinct ((_ extract 5 3) ?x5293) (_ bv0 3)) true) ?x5669 ?x1473))))
 (let ((?x8165 (ite (and (distinct ((_ extract 3 2) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 3 3) C) (_ bv0 1)) true) (_ bv3 11) (_ bv2 11)) (ite (and (distinct ((_ extract 1 1) C) (_ bv0 1)) true) (_ bv1 11) (_ bv0 11)))))
 (let ((?x5544 (ite (and (distinct ((_ extract 6 6) C) (_ bv0 1)) true) (_ bv6 11) (ite (and (distinct ((_ extract 5 5) C) (_ bv0 1)) true) (_ bv5 11) (_ bv4 11)))))
 (let ((?x6722 (ite (and (distinct ((_ extract 9 9) C) (_ bv0 1)) true) (_ bv9 11) (ite (and (distinct ((_ extract 8 8) C) (_ bv0 1)) true) (_ bv8 11) (_ bv7 11)))))
 (let ((?x6296 (ite (and (distinct ((_ extract 12 12) C) (_ bv0 1)) true) (_ bv12 11) (ite (and (distinct ((_ extract 11 11) C) (_ bv0 1)) true) (_ bv11 11) (_ bv10 11)))))
 (let ((?x4988 (ite (and (distinct ((_ extract 12 7) C) (_ bv0 6)) true) (ite (and (distinct ((_ extract 12 10) C) (_ bv0 3)) true) ?x6296 ?x6722) (ite (and (distinct ((_ extract 6 4) C) (_ bv0 3)) true) ?x5544 ?x8165))))
 (let ((?x6103 (ite (and (distinct ((_ extract 15 15) C) (_ bv0 1)) true) (_ bv15 11) (ite (and (distinct ((_ extract 14 14) C) (_ bv0 1)) true) (_ bv14 11) (_ bv13 11)))))
 (let ((?x5121 (ite (and (distinct ((_ extract 18 18) C) (_ bv0 1)) true) (_ bv18 11) (ite (and (distinct ((_ extract 17 17) C) (_ bv0 1)) true) (_ bv17 11) (_ bv16 11)))))
 (let ((?x4663 (ite (and (distinct ((_ extract 21 21) C) (_ bv0 1)) true) (_ bv21 11) (ite (and (distinct ((_ extract 20 20) C) (_ bv0 1)) true) (_ bv20 11) (_ bv19 11)))))
 (let ((?x4093 (ite (and (distinct ((_ extract 24 24) C) (_ bv0 1)) true) (_ bv24 11) (ite (and (distinct ((_ extract 23 23) C) (_ bv0 1)) true) (_ bv23 11) (_ bv22 11)))))
 (let ((?x6862 (ite (and (distinct ((_ extract 24 19) C) (_ bv0 6)) true) (ite (and (distinct ((_ extract 24 22) C) (_ bv0 3)) true) ?x4093 ?x4663) (ite (and (distinct ((_ extract 18 16) C) (_ bv0 3)) true) ?x5121 ?x6103))))
 (let ((?x3297 (ite (and (distinct ((_ extract 28 27) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 28 28) C) (_ bv0 1)) true) (_ bv28 11) (_ bv27 11)) (ite (and (distinct ((_ extract 26 26) C) (_ bv0 1)) true) (_ bv26 11) (_ bv25 11)))))
 (let ((?x2619 (ite (and (distinct ((_ extract 31 31) C) (_ bv0 1)) true) (_ bv31 11) (ite (and (distinct ((_ extract 30 30) C) (_ bv0 1)) true) (_ bv30 11) (_ bv29 11)))))
 (let ((?x2651 (ite (and (distinct ((_ extract 34 34) C) (_ bv0 1)) true) (_ bv34 11) (ite (and (distinct ((_ extract 33 33) C) (_ bv0 1)) true) (_ bv33 11) (_ bv32 11)))))
 (let ((?x4474 (ite (and (distinct ((_ extract 37 37) C) (_ bv0 1)) true) (_ bv37 11) (ite (and (distinct ((_ extract 36 36) C) (_ bv0 1)) true) (_ bv36 11) (_ bv35 11)))))
 (let ((?x6603 (ite (and (distinct ((_ extract 37 32) C) (_ bv0 6)) true) (ite (and (distinct ((_ extract 37 35) C) (_ bv0 3)) true) ?x4474 ?x2651) (ite (and (distinct ((_ extract 31 29) C) (_ bv0 3)) true) ?x2619 ?x3297))))
 (let ((?x6101 (ite (and (distinct ((_ extract 40 40) C) (_ bv0 1)) true) (_ bv40 11) (ite (and (distinct ((_ extract 39 39) C) (_ bv0 1)) true) (_ bv39 11) (_ bv38 11)))))
 (let ((?x3030 (ite (and (distinct ((_ extract 43 43) C) (_ bv0 1)) true) (_ bv43 11) (ite (and (distinct ((_ extract 42 42) C) (_ bv0 1)) true) (_ bv42 11) (_ bv41 11)))))
 (let ((?x6788 (ite (and (distinct ((_ extract 46 46) C) (_ bv0 1)) true) (_ bv46 11) (ite (and (distinct ((_ extract 45 45) C) (_ bv0 1)) true) (_ bv45 11) (_ bv44 11)))))
 (let ((?x2209 (ite (and (distinct ((_ extract 49 49) C) (_ bv0 1)) true) (_ bv49 11) (ite (and (distinct ((_ extract 48 48) C) (_ bv0 1)) true) (_ bv48 11) (_ bv47 11)))))
 (let ((?x7530 (ite (and (distinct ((_ extract 49 44) C) (_ bv0 6)) true) (ite (and (distinct ((_ extract 49 47) C) (_ bv0 3)) true) ?x2209 ?x6788) (ite (and (distinct ((_ extract 43 41) C) (_ bv0 3)) true) ?x3030 ?x6101))))
 (let ((?x5766 (ite (and (distinct ((_ extract 49 25) C) (_ bv0 25)) true) (ite (and (distinct ((_ extract 49 38) C) (_ bv0 12)) true) ?x7530 ?x6603) (ite (and (distinct ((_ extract 24 13) C) (_ bv0 12)) true) ?x6862 ?x4988))))
 (let ((?x4122 (bvsub ?x5766 ?x7757)))
 (let ((?x4761 (ite (bvsgt (_ bv0 11) ?x4122) (_ bv0 11) ?x4122)))
 (let ((?x1676 (bvsub ?x7757 ?x5766)))
 (let ((?x2452 (ite (bvsgt (_ bv0 11) ?x1676) (_ bv0 11) ?x1676)))
 (let ((?x2769 (bvadd (bvxor (bvlshr (bvshl ((_ extract 10 0) (bvand %Op C)) ?x2452) ?x4761) ?x5293) C3)))
 (let (($x1188 (and (distinct (ite (= (ite (= (bvand %Op C) (_ bv0 50)) (_ bv1 1) (_ bv0 1)) (_ bv1 1)) C2 C3) ?x2769) true)))
 (let ((?x8276 (ite (and (distinct ((_ extract 3 2) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 3 3) C) (_ bv0 1)) true) (_ bv3 32) (_ bv2 32)) (ite (and (distinct ((_ extract 1 1) C) (_ bv0 1)) true) (_ bv1 32) (_ bv0 32)))))
 (let ((?x6683 (ite (and (distinct ((_ extract 6 6) C) (_ bv0 1)) true) (_ bv6 32) (ite (and (distinct ((_ extract 5 5) C) (_ bv0 1)) true) (_ bv5 32) (_ bv4 32)))))
 (let ((?x6118 (ite (and (distinct ((_ extract 9 9) C) (_ bv0 1)) true) (_ bv9 32) (ite (and (distinct ((_ extract 8 8) C) (_ bv0 1)) true) (_ bv8 32) (_ bv7 32)))))
 (let ((?x5818 (ite (and (distinct ((_ extract 12 12) C) (_ bv0 1)) true) (_ bv12 32) (ite (and (distinct ((_ extract 11 11) C) (_ bv0 1)) true) (_ bv11 32) (_ bv10 32)))))
 (let ((?x8534 (ite (and (distinct ((_ extract 12 7) C) (_ bv0 6)) true) (ite (and (distinct ((_ extract 12 10) C) (_ bv0 3)) true) ?x5818 ?x6118) (ite (and (distinct ((_ extract 6 4) C) (_ bv0 3)) true) ?x6683 ?x8276))))
 (let ((?x5190 (ite (and (distinct ((_ extract 15 15) C) (_ bv0 1)) true) (_ bv15 32) (ite (and (distinct ((_ extract 14 14) C) (_ bv0 1)) true) (_ bv14 32) (_ bv13 32)))))
 (let ((?x3967 (ite (and (distinct ((_ extract 18 18) C) (_ bv0 1)) true) (_ bv18 32) (ite (and (distinct ((_ extract 17 17) C) (_ bv0 1)) true) (_ bv17 32) (_ bv16 32)))))
 (let ((?x1811 (ite (and (distinct ((_ extract 21 21) C) (_ bv0 1)) true) (_ bv21 32) (ite (and (distinct ((_ extract 20 20) C) (_ bv0 1)) true) (_ bv20 32) (_ bv19 32)))))
 (let ((?x3499 (ite (and (distinct ((_ extract 24 24) C) (_ bv0 1)) true) (_ bv24 32) (ite (and (distinct ((_ extract 23 23) C) (_ bv0 1)) true) (_ bv23 32) (_ bv22 32)))))
 (let ((?x5353 (ite (and (distinct ((_ extract 24 19) C) (_ bv0 6)) true) (ite (and (distinct ((_ extract 24 22) C) (_ bv0 3)) true) ?x3499 ?x1811) (ite (and (distinct ((_ extract 18 16) C) (_ bv0 3)) true) ?x3967 ?x5190))))
 (let ((?x2653 (ite (and (distinct ((_ extract 28 27) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 28 28) C) (_ bv0 1)) true) (_ bv28 32) (_ bv27 32)) (ite (and (distinct ((_ extract 26 26) C) (_ bv0 1)) true) (_ bv26 32) (_ bv25 32)))))
 (let ((?x2213 (ite (and (distinct ((_ extract 31 31) C) (_ bv0 1)) true) (_ bv31 32) (ite (and (distinct ((_ extract 30 30) C) (_ bv0 1)) true) (_ bv30 32) (_ bv29 32)))))
 (let ((?x1664 (ite (and (distinct ((_ extract 34 34) C) (_ bv0 1)) true) (_ bv34 32) (ite (and (distinct ((_ extract 33 33) C) (_ bv0 1)) true) (_ bv33 32) (_ bv32 32)))))
 (let ((?x5932 (ite (and (distinct ((_ extract 37 37) C) (_ bv0 1)) true) (_ bv37 32) (ite (and (distinct ((_ extract 36 36) C) (_ bv0 1)) true) (_ bv36 32) (_ bv35 32)))))
 (let ((?x3061 (ite (and (distinct ((_ extract 37 32) C) (_ bv0 6)) true) (ite (and (distinct ((_ extract 37 35) C) (_ bv0 3)) true) ?x5932 ?x1664) (ite (and (distinct ((_ extract 31 29) C) (_ bv0 3)) true) ?x2213 ?x2653))))
 (let ((?x5115 (ite (and (distinct ((_ extract 40 40) C) (_ bv0 1)) true) (_ bv40 32) (ite (and (distinct ((_ extract 39 39) C) (_ bv0 1)) true) (_ bv39 32) (_ bv38 32)))))
 (let ((?x6776 (ite (and (distinct ((_ extract 43 43) C) (_ bv0 1)) true) (_ bv43 32) (ite (and (distinct ((_ extract 42 42) C) (_ bv0 1)) true) (_ bv42 32) (_ bv41 32)))))
 (let ((?x4735 (ite (and (distinct ((_ extract 46 46) C) (_ bv0 1)) true) (_ bv46 32) (ite (and (distinct ((_ extract 45 45) C) (_ bv0 1)) true) (_ bv45 32) (_ bv44 32)))))
 (let ((?x3628 (ite (and (distinct ((_ extract 49 49) C) (_ bv0 1)) true) (_ bv49 32) (ite (and (distinct ((_ extract 48 48) C) (_ bv0 1)) true) (_ bv48 32) (_ bv47 32)))))
 (let ((?x7029 (ite (and (distinct ((_ extract 49 44) C) (_ bv0 6)) true) (ite (and (distinct ((_ extract 49 47) C) (_ bv0 3)) true) ?x3628 ?x4735) (ite (and (distinct ((_ extract 43 41) C) (_ bv0 3)) true) ?x6776 ?x5115))))
 (let ((?x3407 (ite (and (distinct ((_ extract 49 25) C) (_ bv0 25)) true) (ite (and (distinct ((_ extract 49 38) C) (_ bv0 12)) true) ?x7029 ?x3061) (ite (and (distinct ((_ extract 24 13) C) (_ bv0 12)) true) ?x5353 ?x8534))))
 (and (and (and (distinct C (_ bv0 50)) true) (= (bvand C (bvsub C (_ bv1 50))) (_ bv0 50))) (and (and (distinct ?x5293 (_ bv0 11)) true) (= (bvand ?x5293 (bvsub ?x5293 (_ bv1 11))) (_ bv0 11))) (bvslt ?x3407 (_ bv11 32)) $x1188))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
