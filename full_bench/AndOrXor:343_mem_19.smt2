(set-info :source |
 Generated by Alive 0.1
 More info in N. P. Lopes, D. Menendez, S. Nagarakatte, J. Regehr.
 Provably Correct Peephole Optimizations with Alive. In PLDI'15.
|)

(set-info :status unknown)
(declare-fun mem0 () (_ BitVec 8))
(declare-fun |ana_MaskedValueIsZero(%B, ((1 << (width(C2) - countLeadingZeros(((C2 - 1) ^ C2)))) - 1))| () (_ BitVec 1))
(declare-fun C2 () (_ BitVec 21))
(declare-fun C1 () (_ BitVec 21))
(declare-fun %B () (_ BitVec 21))
(assert
 (let (($x927 (and (distinct mem0 mem0) true)))
 (let (($x131713 (= |ana_MaskedValueIsZero(%B, ((1 << (width(C2) - countLeadingZeros(((C2 - 1) ^ C2)))) - 1))| (_ bv1 1))))
 (let ((?x16884 (bvsub C2 (_ bv1 21))))
 (let ((?x145516 (bvor ?x16884 C2)))
 (let (($x137358 (and (and (distinct ?x145516 (_ bv0 21)) true) (= (bvand (bvadd ?x145516 (_ bv1 21)) ?x145516) (_ bv0 21)) $x131713)))
 (let (($x146428 (or (= (bvand (bvadd C2 (_ bv1 21)) (bvsub (bvadd C2 (_ bv1 21)) (_ bv1 21))) (_ bv0 21)) $x137358)))
 (let ((?x129990 (bvand C1 C2)))
 (let (($x141214 (= ?x129990 C2)))
 (let ((?x138964 (ite (= ((_ extract 1 1) (bvxor ?x16884 C2)) (_ bv1 1)) (_ bv19 21) (ite (= ((_ extract 0 0) (bvxor ?x16884 C2)) (_ bv1 1)) (_ bv20 21) (_ bv21 21)))))
 (let ((?x146082 (ite (= ((_ extract 3 3) (bvxor ?x16884 C2)) (_ bv1 1)) (_ bv17 21) (ite (= ((_ extract 2 2) (bvxor ?x16884 C2)) (_ bv1 1)) (_ bv18 21) ?x138964))))
 (let ((?x146922 (ite (= ((_ extract 5 5) (bvxor ?x16884 C2)) (_ bv1 1)) (_ bv15 21) (ite (= ((_ extract 4 4) (bvxor ?x16884 C2)) (_ bv1 1)) (_ bv16 21) ?x146082))))
 (let ((?x141747 (ite (= ((_ extract 7 7) (bvxor ?x16884 C2)) (_ bv1 1)) (_ bv13 21) (ite (= ((_ extract 6 6) (bvxor ?x16884 C2)) (_ bv1 1)) (_ bv14 21) ?x146922))))
 (let ((?x141472 (ite (= ((_ extract 9 9) (bvxor ?x16884 C2)) (_ bv1 1)) (_ bv11 21) (ite (= ((_ extract 8 8) (bvxor ?x16884 C2)) (_ bv1 1)) (_ bv12 21) ?x141747))))
 (let ((?x142759 (ite (= ((_ extract 11 11) (bvxor ?x16884 C2)) (_ bv1 1)) (_ bv9 21) (ite (= ((_ extract 10 10) (bvxor ?x16884 C2)) (_ bv1 1)) (_ bv10 21) ?x141472))))
 (let ((?x145551 (ite (= ((_ extract 13 13) (bvxor ?x16884 C2)) (_ bv1 1)) (_ bv7 21) (ite (= ((_ extract 12 12) (bvxor ?x16884 C2)) (_ bv1 1)) (_ bv8 21) ?x142759))))
 (let ((?x145481 (ite (= ((_ extract 15 15) (bvxor ?x16884 C2)) (_ bv1 1)) (_ bv5 21) (ite (= ((_ extract 14 14) (bvxor ?x16884 C2)) (_ bv1 1)) (_ bv6 21) ?x145551))))
 (let ((?x143808 (ite (= ((_ extract 17 17) (bvxor ?x16884 C2)) (_ bv1 1)) (_ bv3 21) (ite (= ((_ extract 16 16) (bvxor ?x16884 C2)) (_ bv1 1)) (_ bv4 21) ?x145481))))
 (let ((?x143339 (ite (= ((_ extract 19 19) (bvxor ?x16884 C2)) (_ bv1 1)) (_ bv1 21) (ite (= ((_ extract 18 18) (bvxor ?x16884 C2)) (_ bv1 1)) (_ bv2 21) ?x143808))))
 (let ((?x144479 (bvshl (_ bv1 21) (bvsub (_ bv21 21) (ite (= ((_ extract 20 20) (bvxor ?x16884 C2)) (_ bv1 1)) (_ bv0 21) ?x143339)))))
 (let (($x146943 (=> $x131713 (= (bvand %B (bvsub ?x144479 (_ bv1 21))) (_ bv0 21)))))
 (and $x146943 $x141214 $x146428 $x927))))))))))))))))))))))
(check-sat)
