(set-info :status unknown)
(declare-fun mem0 () (_ BitVec 8))
(declare-fun %x () (_ BitVec 44))
(declare-fun %p1 () (_ BitVec 64))
(declare-fun idx () (_ BitVec 64))
(declare-fun |ana_equivalentAddressValues(%p1, %p2)| () (_ BitVec 1))
(declare-fun %p2 () (_ BitVec 64))
(assert
 (let ((?x23953 (concat ((_ extract 7 4) mem0) ((_ extract 3 0) %x))))
 (let ((?x22796 (ite (and (and (distinct %p1 (_ bv0 64)) true) (or true true) (= idx %p1)) ?x23953 mem0)))
 (let ((?x24966 ((_ extract 11 4) %x)))
 (let (($x15927 (or true true)))
 (let (($x8976 (and (distinct %p1 (_ bv0 64)) true)))
 (let ((?x6201 (ite (and $x8976 $x15927 (= idx (bvadd (bvadd %p1 (_ bv1 64)) (_ bv0 64)))) ?x24966 ?x22796)))
 (let ((?x22445 ((_ extract 19 12) %x)))
 (let ((?x5290 (ite (and $x8976 $x15927 (= idx (bvadd (bvadd %p1 (_ bv1 64)) (_ bv1 64)))) ?x22445 ?x6201)))
 (let ((?x1914 ((_ extract 27 20) %x)))
 (let ((?x12432 (ite (and $x8976 $x15927 (= idx (bvadd (bvadd %p1 (_ bv1 64)) (_ bv2 64)))) ?x1914 ?x5290)))
 (let ((?x6091 ((_ extract 35 28) %x)))
 (let ((?x14574 (ite (and $x8976 $x15927 (= idx (bvadd (bvadd %p1 (_ bv1 64)) (_ bv3 64)))) ?x6091 ?x12432)))
 (let ((?x3169 ((_ extract 43 36) %x)))
 (let ((?x21161 (ite (and $x8976 $x15927 (= idx (bvadd (bvadd %p1 (_ bv1 64)) (_ bv4 64)))) ?x3169 ?x14574)))
 (let (($x9814 (= |ana_equivalentAddressValues(%p1, %p2)| (_ bv1 1))))
 (and (=> $x9814 (= %p1 %p2)) $x9814 (and (distinct ?x21161 ?x21161) true))))))))))))))))))
(check-sat)
