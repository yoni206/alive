(set-info :status unknown)
(declare-fun mem0 () (_ BitVec 8))
(declare-fun %p2 () (_ BitVec 64))
(declare-fun idx () (_ BitVec 64))
(declare-fun %p1 () (_ BitVec 64))
(declare-fun |ana_equivalentAddressValues(%p1, %p2)| () (_ BitVec 1))
(assert
 (let ((?x6657 (concat ((_ extract 7 5) mem0) ((_ extract 4 0) (concat (concat mem0 mem0) ((_ extract 4 0) mem0))))))
 (let (($x16437 (or true true)))
 (let (($x18224 (and (distinct %p2 (_ bv0 64)) true)))
 (let (($x17231 (and (distinct %p1 (_ bv0 64)) true)))
 (let ((?x20380 (ite (and $x17231 $x16437 $x17231 $x16437 $x17231 $x16437 $x18224 $x16437 (= idx %p2)) ?x6657 mem0)))
 (let (($x16243 (and $x17231 $x16437 $x17231 $x16437 $x17231 $x16437 $x18224 $x16437 (= idx (bvadd (bvadd %p2 (_ bv1 64)) (_ bv0 64))))))
 (let ((?x15398 (ite $x16243 ((_ extract 12 5) (concat (concat mem0 mem0) ((_ extract 4 0) mem0))) ?x20380)))
 (let (($x5676 (and $x17231 $x16437 $x17231 $x16437 $x17231 $x16437 $x18224 $x16437 (= idx (bvadd (bvadd %p2 (_ bv1 64)) (_ bv1 64))))))
 (let ((?x1124 (ite $x5676 ((_ extract 20 13) (concat (concat mem0 mem0) ((_ extract 4 0) mem0))) ?x15398)))
 (let (($x14577 (= |ana_equivalentAddressValues(%p1, %p2)| (_ bv1 1))))
 (and (=> $x14577 (= %p1 %p2)) $x14577 (and (distinct ?x1124 mem0) true)))))))))))))
(check-sat)
