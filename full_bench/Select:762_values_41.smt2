(set-info :status unknown)
(declare-fun C3 () (_ BitVec 11))
(declare-fun C2 () (_ BitVec 11))
(declare-fun C () (_ BitVec 45))
(declare-fun %Op () (_ BitVec 45))
(assert
 (let ((?x6714 (bvsub C2 C3)))
 (let ((?x6748 (ite (and (distinct ((_ extract 2 2) ?x6714) (_ bv0 1)) true) (_ bv2 11) (ite (and (distinct ((_ extract 1 1) ?x6714) (_ bv0 1)) true) (_ bv1 11) (_ bv0 11)))))
 (let ((?x18403 (ite (and (distinct ((_ extract 5 5) ?x6714) (_ bv0 1)) true) (_ bv5 11) (ite (and (distinct ((_ extract 4 4) ?x6714) (_ bv0 1)) true) (_ bv4 11) (_ bv3 11)))))
 (let ((?x19800 (ite (and (distinct ((_ extract 8 8) ?x6714) (_ bv0 1)) true) (_ bv8 11) (ite (and (distinct ((_ extract 7 7) ?x6714) (_ bv0 1)) true) (_ bv7 11) (_ bv6 11)))))
 (let ((?x8749 (ite (and (distinct ((_ extract 10 9) ?x6714) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) ?x6714) (_ bv0 1)) true) (_ bv10 11) (_ bv9 11)) ?x19800)))
 (let ((?x18277 (ite (and (distinct ((_ extract 10 6) ?x6714) (_ bv0 5)) true) ?x8749 (ite (and (distinct ((_ extract 5 3) ?x6714) (_ bv0 3)) true) ?x18403 ?x6748))))
 (let ((?x12510 (ite (and (distinct ((_ extract 2 2) C) (_ bv0 1)) true) (_ bv2 11) (ite (and (distinct ((_ extract 1 1) C) (_ bv0 1)) true) (_ bv1 11) (_ bv0 11)))))
 (let ((?x6520 (ite (and (distinct ((_ extract 5 5) C) (_ bv0 1)) true) (_ bv5 11) (ite (and (distinct ((_ extract 4 4) C) (_ bv0 1)) true) (_ bv4 11) (_ bv3 11)))))
 (let ((?x17560 (ite (and (distinct ((_ extract 8 8) C) (_ bv0 1)) true) (_ bv8 11) (ite (and (distinct ((_ extract 7 7) C) (_ bv0 1)) true) (_ bv7 11) (_ bv6 11)))))
 (let ((?x5999 (ite (and (distinct ((_ extract 11 11) C) (_ bv0 1)) true) (_ bv11 11) (ite (and (distinct ((_ extract 10 10) C) (_ bv0 1)) true) (_ bv10 11) (_ bv9 11)))))
 (let ((?x22988 (ite (and (distinct ((_ extract 11 6) C) (_ bv0 6)) true) (ite (and (distinct ((_ extract 11 9) C) (_ bv0 3)) true) ?x5999 ?x17560) (ite (and (distinct ((_ extract 5 3) C) (_ bv0 3)) true) ?x6520 ?x12510))))
 (let ((?x11394 (ite (and (distinct ((_ extract 14 14) C) (_ bv0 1)) true) (_ bv14 11) (ite (and (distinct ((_ extract 13 13) C) (_ bv0 1)) true) (_ bv13 11) (_ bv12 11)))))
 (let ((?x389 (ite (and (distinct ((_ extract 17 17) C) (_ bv0 1)) true) (_ bv17 11) (ite (and (distinct ((_ extract 16 16) C) (_ bv0 1)) true) (_ bv16 11) (_ bv15 11)))))
 (let ((?x3012 (ite (and (distinct ((_ extract 20 20) C) (_ bv0 1)) true) (_ bv20 11) (ite (and (distinct ((_ extract 19 19) C) (_ bv0 1)) true) (_ bv19 11) (_ bv18 11)))))
 (let ((?x13644 (ite (and (distinct ((_ extract 22 21) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 22 22) C) (_ bv0 1)) true) (_ bv22 11) (_ bv21 11)) ?x3012)))
 (let ((?x18520 (ite (and (distinct ((_ extract 22 18) C) (_ bv0 5)) true) ?x13644 (ite (and (distinct ((_ extract 17 15) C) (_ bv0 3)) true) ?x389 ?x11394))))
 (let ((?x16227 (ite (and (distinct ((_ extract 25 25) C) (_ bv0 1)) true) (_ bv25 11) (ite (and (distinct ((_ extract 24 24) C) (_ bv0 1)) true) (_ bv24 11) (_ bv23 11)))))
 (let ((?x10731 (ite (and (distinct ((_ extract 28 28) C) (_ bv0 1)) true) (_ bv28 11) (ite (and (distinct ((_ extract 27 27) C) (_ bv0 1)) true) (_ bv27 11) (_ bv26 11)))))
 (let ((?x13294 (ite (and (distinct ((_ extract 31 31) C) (_ bv0 1)) true) (_ bv31 11) (ite (and (distinct ((_ extract 30 30) C) (_ bv0 1)) true) (_ bv30 11) (_ bv29 11)))))
 (let ((?x2364 (ite (and (distinct ((_ extract 33 32) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 33 33) C) (_ bv0 1)) true) (_ bv33 11) (_ bv32 11)) ?x13294)))
 (let ((?x21656 (ite (and (distinct ((_ extract 33 29) C) (_ bv0 5)) true) ?x2364 (ite (and (distinct ((_ extract 28 26) C) (_ bv0 3)) true) ?x10731 ?x16227))))
 (let ((?x7663 (ite (and (distinct ((_ extract 36 36) C) (_ bv0 1)) true) (_ bv36 11) (ite (and (distinct ((_ extract 35 35) C) (_ bv0 1)) true) (_ bv35 11) (_ bv34 11)))))
 (let ((?x22845 (ite (and (distinct ((_ extract 39 39) C) (_ bv0 1)) true) (_ bv39 11) (ite (and (distinct ((_ extract 38 38) C) (_ bv0 1)) true) (_ bv38 11) (_ bv37 11)))))
 (let ((?x4231 (ite (and (distinct ((_ extract 42 42) C) (_ bv0 1)) true) (_ bv42 11) (ite (and (distinct ((_ extract 41 41) C) (_ bv0 1)) true) (_ bv41 11) (_ bv40 11)))))
 (let ((?x13529 (ite (and (distinct ((_ extract 44 43) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 44 44) C) (_ bv0 1)) true) (_ bv44 11) (_ bv43 11)) ?x4231)))
 (let ((?x19116 (ite (and (distinct ((_ extract 44 40) C) (_ bv0 5)) true) ?x13529 (ite (and (distinct ((_ extract 39 37) C) (_ bv0 3)) true) ?x22845 ?x7663))))
 (let ((?x13281 (ite (and (distinct ((_ extract 44 23) C) (_ bv0 22)) true) (ite (and (distinct ((_ extract 44 34) C) (_ bv0 11)) true) ?x19116 ?x21656) (ite (and (distinct ((_ extract 22 12) C) (_ bv0 11)) true) ?x18520 ?x22988))))
 (let ((?x788 (bvsub ?x13281 ?x18277)))
 (let ((?x12643 (ite (bvsgt (_ bv0 11) ?x788) (_ bv0 11) ?x788)))
 (let ((?x23644 (bvsub ?x18277 ?x13281)))
 (let ((?x10833 (ite (bvsgt (_ bv0 11) ?x23644) (_ bv0 11) ?x23644)))
 (let ((?x8998 (bvadd (bvxor (bvlshr (bvshl ((_ extract 10 0) (bvand %Op C)) ?x10833) ?x12643) ?x6714) C3)))
 (let (($x21800 (and (distinct (ite (= (ite (= (bvand %Op C) (_ bv0 45)) (_ bv1 1) (_ bv0 1)) (_ bv1 1)) C2 C3) ?x8998) true)))
 (let ((?x18979 (ite (and (distinct ((_ extract 2 2) C) (_ bv0 1)) true) (_ bv2 32) (ite (and (distinct ((_ extract 1 1) C) (_ bv0 1)) true) (_ bv1 32) (_ bv0 32)))))
 (let ((?x17822 (ite (and (distinct ((_ extract 5 5) C) (_ bv0 1)) true) (_ bv5 32) (ite (and (distinct ((_ extract 4 4) C) (_ bv0 1)) true) (_ bv4 32) (_ bv3 32)))))
 (let ((?x14030 (ite (and (distinct ((_ extract 8 8) C) (_ bv0 1)) true) (_ bv8 32) (ite (and (distinct ((_ extract 7 7) C) (_ bv0 1)) true) (_ bv7 32) (_ bv6 32)))))
 (let ((?x13578 (ite (and (distinct ((_ extract 11 11) C) (_ bv0 1)) true) (_ bv11 32) (ite (and (distinct ((_ extract 10 10) C) (_ bv0 1)) true) (_ bv10 32) (_ bv9 32)))))
 (let ((?x18471 (ite (and (distinct ((_ extract 11 6) C) (_ bv0 6)) true) (ite (and (distinct ((_ extract 11 9) C) (_ bv0 3)) true) ?x13578 ?x14030) (ite (and (distinct ((_ extract 5 3) C) (_ bv0 3)) true) ?x17822 ?x18979))))
 (let ((?x9786 (ite (and (distinct ((_ extract 14 14) C) (_ bv0 1)) true) (_ bv14 32) (ite (and (distinct ((_ extract 13 13) C) (_ bv0 1)) true) (_ bv13 32) (_ bv12 32)))))
 (let ((?x8369 (ite (and (distinct ((_ extract 17 17) C) (_ bv0 1)) true) (_ bv17 32) (ite (and (distinct ((_ extract 16 16) C) (_ bv0 1)) true) (_ bv16 32) (_ bv15 32)))))
 (let ((?x6015 (ite (and (distinct ((_ extract 20 20) C) (_ bv0 1)) true) (_ bv20 32) (ite (and (distinct ((_ extract 19 19) C) (_ bv0 1)) true) (_ bv19 32) (_ bv18 32)))))
 (let ((?x7752 (ite (and (distinct ((_ extract 22 21) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 22 22) C) (_ bv0 1)) true) (_ bv22 32) (_ bv21 32)) ?x6015)))
 (let ((?x11626 (ite (and (distinct ((_ extract 22 18) C) (_ bv0 5)) true) ?x7752 (ite (and (distinct ((_ extract 17 15) C) (_ bv0 3)) true) ?x8369 ?x9786))))
 (let ((?x4163 (ite (and (distinct ((_ extract 25 25) C) (_ bv0 1)) true) (_ bv25 32) (ite (and (distinct ((_ extract 24 24) C) (_ bv0 1)) true) (_ bv24 32) (_ bv23 32)))))
 (let ((?x19270 (ite (and (distinct ((_ extract 28 28) C) (_ bv0 1)) true) (_ bv28 32) (ite (and (distinct ((_ extract 27 27) C) (_ bv0 1)) true) (_ bv27 32) (_ bv26 32)))))
 (let ((?x11423 (ite (and (distinct ((_ extract 31 31) C) (_ bv0 1)) true) (_ bv31 32) (ite (and (distinct ((_ extract 30 30) C) (_ bv0 1)) true) (_ bv30 32) (_ bv29 32)))))
 (let ((?x18552 (ite (and (distinct ((_ extract 33 32) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 33 33) C) (_ bv0 1)) true) (_ bv33 32) (_ bv32 32)) ?x11423)))
 (let ((?x4131 (ite (and (distinct ((_ extract 33 29) C) (_ bv0 5)) true) ?x18552 (ite (and (distinct ((_ extract 28 26) C) (_ bv0 3)) true) ?x19270 ?x4163))))
 (let ((?x3295 (ite (and (distinct ((_ extract 36 36) C) (_ bv0 1)) true) (_ bv36 32) (ite (and (distinct ((_ extract 35 35) C) (_ bv0 1)) true) (_ bv35 32) (_ bv34 32)))))
 (let ((?x7707 (ite (and (distinct ((_ extract 39 39) C) (_ bv0 1)) true) (_ bv39 32) (ite (and (distinct ((_ extract 38 38) C) (_ bv0 1)) true) (_ bv38 32) (_ bv37 32)))))
 (let ((?x18707 (ite (and (distinct ((_ extract 42 42) C) (_ bv0 1)) true) (_ bv42 32) (ite (and (distinct ((_ extract 41 41) C) (_ bv0 1)) true) (_ bv41 32) (_ bv40 32)))))
 (let ((?x10726 (ite (and (distinct ((_ extract 44 43) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 44 44) C) (_ bv0 1)) true) (_ bv44 32) (_ bv43 32)) ?x18707)))
 (let ((?x8936 (ite (and (distinct ((_ extract 44 40) C) (_ bv0 5)) true) ?x10726 (ite (and (distinct ((_ extract 39 37) C) (_ bv0 3)) true) ?x7707 ?x3295))))
 (let ((?x19098 (ite (and (distinct ((_ extract 44 23) C) (_ bv0 22)) true) (ite (and (distinct ((_ extract 44 34) C) (_ bv0 11)) true) ?x8936 ?x4131) (ite (and (distinct ((_ extract 22 12) C) (_ bv0 11)) true) ?x11626 ?x18471))))
 (and (and (and (distinct C (_ bv0 45)) true) (= (bvand C (bvsub C (_ bv1 45))) (_ bv0 45))) (and (and (distinct ?x6714 (_ bv0 11)) true) (= (bvand ?x6714 (bvsub ?x6714 (_ bv1 11))) (_ bv0 11))) (bvslt ?x19098 (_ bv11 32)) $x21800))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
