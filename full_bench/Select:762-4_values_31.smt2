(set-info :status unknown)
(declare-fun C2 () (_ BitVec 11))
(declare-fun C3 () (_ BitVec 11))
(declare-fun C () (_ BitVec 35))
(declare-fun %Op () (_ BitVec 35))
(assert
 (let ((?x1046 (bvsub C3 C2)))
 (let ((?x1613 (ite (and (distinct ((_ extract 2 2) ?x1046) (_ bv0 1)) true) (_ bv2 11) (ite (and (distinct ((_ extract 1 1) ?x1046) (_ bv0 1)) true) (_ bv1 11) (_ bv0 11)))))
 (let ((?x9854 (ite (and (distinct ((_ extract 5 5) ?x1046) (_ bv0 1)) true) (_ bv5 11) (ite (and (distinct ((_ extract 4 4) ?x1046) (_ bv0 1)) true) (_ bv4 11) (_ bv3 11)))))
 (let ((?x12665 (ite (and (distinct ((_ extract 8 8) ?x1046) (_ bv0 1)) true) (_ bv8 11) (ite (and (distinct ((_ extract 7 7) ?x1046) (_ bv0 1)) true) (_ bv7 11) (_ bv6 11)))))
 (let ((?x11076 (ite (and (distinct ((_ extract 10 9) ?x1046) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) ?x1046) (_ bv0 1)) true) (_ bv10 11) (_ bv9 11)) ?x12665)))
 (let ((?x9147 (ite (and (distinct ((_ extract 10 6) ?x1046) (_ bv0 5)) true) ?x11076 (ite (and (distinct ((_ extract 5 3) ?x1046) (_ bv0 3)) true) ?x9854 ?x1613))))
 (let ((?x16205 (ite (and (distinct ((_ extract 2 2) C) (_ bv0 1)) true) (_ bv2 11) (ite (and (distinct ((_ extract 1 1) C) (_ bv0 1)) true) (_ bv1 11) (_ bv0 11)))))
 (let ((?x12470 (ite (and (distinct ((_ extract 4 3) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 4 4) C) (_ bv0 1)) true) (_ bv4 11) (_ bv3 11)) ?x16205)))
 (let ((?x18901 (ite (and (distinct ((_ extract 8 7) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 8 8) C) (_ bv0 1)) true) (_ bv8 11) (_ bv7 11)) (ite (and (distinct ((_ extract 6 6) C) (_ bv0 1)) true) (_ bv6 11) (_ bv5 11)))))
 (let ((?x13768 (ite (and (distinct ((_ extract 11 11) C) (_ bv0 1)) true) (_ bv11 11) (ite (and (distinct ((_ extract 10 10) C) (_ bv0 1)) true) (_ bv10 11) (_ bv9 11)))))
 (let ((?x22924 (ite (and (distinct ((_ extract 13 12) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 13 13) C) (_ bv0 1)) true) (_ bv13 11) (_ bv12 11)) ?x13768)))
 (let ((?x12098 (ite (and (distinct ((_ extract 17 16) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 17 17) C) (_ bv0 1)) true) (_ bv17 11) (_ bv16 11)) (ite (and (distinct ((_ extract 15 15) C) (_ bv0 1)) true) (_ bv15 11) (_ bv14 11)))))
 (let ((?x6319 (ite (and (distinct ((_ extract 17 9) C) (_ bv0 9)) true) (ite (and (distinct ((_ extract 17 14) C) (_ bv0 4)) true) ?x12098 ?x22924) (ite (and (distinct ((_ extract 8 5) C) (_ bv0 4)) true) ?x18901 ?x12470))))
 (let ((?x8381 (ite (and (distinct ((_ extract 20 20) C) (_ bv0 1)) true) (_ bv20 11) (ite (and (distinct ((_ extract 19 19) C) (_ bv0 1)) true) (_ bv19 11) (_ bv18 11)))))
 (let ((?x3089 (ite (and (distinct ((_ extract 22 21) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 22 22) C) (_ bv0 1)) true) (_ bv22 11) (_ bv21 11)) ?x8381)))
 (let ((?x14700 (ite (and (distinct ((_ extract 26 25) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 26 26) C) (_ bv0 1)) true) (_ bv26 11) (_ bv25 11)) (ite (and (distinct ((_ extract 24 24) C) (_ bv0 1)) true) (_ bv24 11) (_ bv23 11)))))
 (let ((?x10862 (ite (and (distinct ((_ extract 30 29) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 30 30) C) (_ bv0 1)) true) (_ bv30 11) (_ bv29 11)) (ite (and (distinct ((_ extract 28 28) C) (_ bv0 1)) true) (_ bv28 11) (_ bv27 11)))))
 (let ((?x6963 (ite (and (distinct ((_ extract 34 33) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 34 34) C) (_ bv0 1)) true) (_ bv34 11) (_ bv33 11)) (ite (and (distinct ((_ extract 32 32) C) (_ bv0 1)) true) (_ bv32 11) (_ bv31 11)))))
 (let ((?x6719 (ite (and (distinct ((_ extract 34 27) C) (_ bv0 8)) true) (ite (and (distinct ((_ extract 34 31) C) (_ bv0 4)) true) ?x6963 ?x10862) (ite (and (distinct ((_ extract 26 23) C) (_ bv0 4)) true) ?x14700 ?x3089))))
 (let ((?x17925 (bvsub (ite (and (distinct ((_ extract 34 18) C) (_ bv0 17)) true) ?x6719 ?x6319) ?x9147)))
 (let ((?x1180 (ite (bvsgt (_ bv0 11) ?x17925) (_ bv0 11) ?x17925)))
 (let ((?x11972 (bvsub ?x9147 (ite (and (distinct ((_ extract 34 18) C) (_ bv0 17)) true) ?x6719 ?x6319))))
 (let ((?x13990 (ite (bvsgt (_ bv0 11) ?x11972) (_ bv0 11) ?x11972)))
 (let ((?x17560 (bvadd (bvxor (bvlshr (bvshl ((_ extract 10 0) (bvand %Op C)) ?x13990) ?x1180) ?x1046) C2)))
 (let ((?x6123 (ite (= (ite (and (distinct (bvand %Op C) (_ bv0 35)) true) (_ bv1 1) (_ bv0 1)) (_ bv1 1)) C2 C3)))
 (let ((?x11308 (ite (and (distinct ((_ extract 2 2) C) (_ bv0 1)) true) (_ bv2 32) (ite (and (distinct ((_ extract 1 1) C) (_ bv0 1)) true) (_ bv1 32) (_ bv0 32)))))
 (let ((?x13982 (ite (and (distinct ((_ extract 4 3) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 4 4) C) (_ bv0 1)) true) (_ bv4 32) (_ bv3 32)) ?x11308)))
 (let ((?x8582 (ite (and (distinct ((_ extract 8 7) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 8 8) C) (_ bv0 1)) true) (_ bv8 32) (_ bv7 32)) (ite (and (distinct ((_ extract 6 6) C) (_ bv0 1)) true) (_ bv6 32) (_ bv5 32)))))
 (let ((?x3140 (ite (and (distinct ((_ extract 11 11) C) (_ bv0 1)) true) (_ bv11 32) (ite (and (distinct ((_ extract 10 10) C) (_ bv0 1)) true) (_ bv10 32) (_ bv9 32)))))
 (let ((?x3845 (ite (and (distinct ((_ extract 13 12) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 13 13) C) (_ bv0 1)) true) (_ bv13 32) (_ bv12 32)) ?x3140)))
 (let ((?x1369 (ite (and (distinct ((_ extract 17 16) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 17 17) C) (_ bv0 1)) true) (_ bv17 32) (_ bv16 32)) (ite (and (distinct ((_ extract 15 15) C) (_ bv0 1)) true) (_ bv15 32) (_ bv14 32)))))
 (let ((?x13535 (ite (and (distinct ((_ extract 17 9) C) (_ bv0 9)) true) (ite (and (distinct ((_ extract 17 14) C) (_ bv0 4)) true) ?x1369 ?x3845) (ite (and (distinct ((_ extract 8 5) C) (_ bv0 4)) true) ?x8582 ?x13982))))
 (let ((?x21381 (ite (and (distinct ((_ extract 20 20) C) (_ bv0 1)) true) (_ bv20 32) (ite (and (distinct ((_ extract 19 19) C) (_ bv0 1)) true) (_ bv19 32) (_ bv18 32)))))
 (let ((?x24264 (ite (and (distinct ((_ extract 22 21) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 22 22) C) (_ bv0 1)) true) (_ bv22 32) (_ bv21 32)) ?x21381)))
 (let ((?x3866 (ite (and (distinct ((_ extract 26 25) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 26 26) C) (_ bv0 1)) true) (_ bv26 32) (_ bv25 32)) (ite (and (distinct ((_ extract 24 24) C) (_ bv0 1)) true) (_ bv24 32) (_ bv23 32)))))
 (let ((?x5689 (ite (and (distinct ((_ extract 30 29) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 30 30) C) (_ bv0 1)) true) (_ bv30 32) (_ bv29 32)) (ite (and (distinct ((_ extract 28 28) C) (_ bv0 1)) true) (_ bv28 32) (_ bv27 32)))))
 (let ((?x12315 (ite (and (distinct ((_ extract 34 33) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 34 34) C) (_ bv0 1)) true) (_ bv34 32) (_ bv33 32)) (ite (and (distinct ((_ extract 32 32) C) (_ bv0 1)) true) (_ bv32 32) (_ bv31 32)))))
 (let ((?x21409 (ite (and (distinct ((_ extract 34 27) C) (_ bv0 8)) true) (ite (and (distinct ((_ extract 34 31) C) (_ bv0 4)) true) ?x12315 ?x5689) (ite (and (distinct ((_ extract 26 23) C) (_ bv0 4)) true) ?x3866 ?x24264))))
 (and (and (and (distinct C (_ bv0 35)) true) (= (bvand C (bvsub C (_ bv1 35))) (_ bv0 35))) (and (and (distinct ?x1046 (_ bv0 11)) true) (= (bvand ?x1046 (bvsub ?x1046 (_ bv1 11))) (_ bv0 11))) (bvslt (ite (and (distinct ((_ extract 34 18) C) (_ bv0 17)) true) ?x21409 ?x13535) (_ bv11 32)) (and (distinct ?x6123 ?x17560) true)))))))))))))))))))))))))))))))))))))))))
(check-sat)
