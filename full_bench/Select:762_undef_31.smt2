(set-info :status unknown)
(declare-fun C3 () (_ BitVec 11))
(declare-fun C2 () (_ BitVec 11))
(declare-fun C () (_ BitVec 35))
(assert
 (let ((?x6748 (ite (and (distinct ((_ extract 2 2) (bvsub C2 C3)) (_ bv0 1)) true) (_ bv2 11) (ite (and (distinct ((_ extract 1 1) (bvsub C2 C3)) (_ bv0 1)) true) (_ bv1 11) (_ bv0 11)))))
 (let ((?x19056 (ite (and (distinct ((_ extract 5 5) (bvsub C2 C3)) (_ bv0 1)) true) (_ bv5 11) (ite (and (distinct ((_ extract 4 4) (bvsub C2 C3)) (_ bv0 1)) true) (_ bv4 11) (_ bv3 11)))))
 (let ((?x15165 (ite (and (distinct ((_ extract 8 8) (bvsub C2 C3)) (_ bv0 1)) true) (_ bv8 11) (ite (and (distinct ((_ extract 7 7) (bvsub C2 C3)) (_ bv0 1)) true) (_ bv7 11) (_ bv6 11)))))
 (let ((?x16191 (ite (and (distinct ((_ extract 10 9) (bvsub C2 C3)) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) (bvsub C2 C3)) (_ bv0 1)) true) (_ bv10 11) (_ bv9 11)) ?x15165)))
 (let ((?x1450 (ite (and (distinct ((_ extract 10 6) (bvsub C2 C3)) (_ bv0 5)) true) ?x16191 (ite (and (distinct ((_ extract 5 3) (bvsub C2 C3)) (_ bv0 3)) true) ?x19056 ?x6748))))
 (let ((?x5336 (ite (and (distinct ((_ extract 2 2) C) (_ bv0 1)) true) (_ bv2 11) (ite (and (distinct ((_ extract 1 1) C) (_ bv0 1)) true) (_ bv1 11) (_ bv0 11)))))
 (let ((?x5552 (ite (and (distinct ((_ extract 4 3) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 4 4) C) (_ bv0 1)) true) (_ bv4 11) (_ bv3 11)) ?x5336)))
 (let ((?x18133 (ite (and (distinct ((_ extract 8 7) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 8 8) C) (_ bv0 1)) true) (_ bv8 11) (_ bv7 11)) (ite (and (distinct ((_ extract 6 6) C) (_ bv0 1)) true) (_ bv6 11) (_ bv5 11)))))
 (let ((?x14875 (ite (and (distinct ((_ extract 11 11) C) (_ bv0 1)) true) (_ bv11 11) (ite (and (distinct ((_ extract 10 10) C) (_ bv0 1)) true) (_ bv10 11) (_ bv9 11)))))
 (let ((?x8278 (ite (and (distinct ((_ extract 13 12) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 13 13) C) (_ bv0 1)) true) (_ bv13 11) (_ bv12 11)) ?x14875)))
 (let ((?x12995 (ite (and (distinct ((_ extract 17 16) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 17 17) C) (_ bv0 1)) true) (_ bv17 11) (_ bv16 11)) (ite (and (distinct ((_ extract 15 15) C) (_ bv0 1)) true) (_ bv15 11) (_ bv14 11)))))
 (let ((?x1514 (ite (and (distinct ((_ extract 17 9) C) (_ bv0 9)) true) (ite (and (distinct ((_ extract 17 14) C) (_ bv0 4)) true) ?x12995 ?x8278) (ite (and (distinct ((_ extract 8 5) C) (_ bv0 4)) true) ?x18133 ?x5552))))
 (let ((?x19800 (ite (and (distinct ((_ extract 20 20) C) (_ bv0 1)) true) (_ bv20 11) (ite (and (distinct ((_ extract 19 19) C) (_ bv0 1)) true) (_ bv19 11) (_ bv18 11)))))
 (let ((?x565 (ite (and (distinct ((_ extract 22 21) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 22 22) C) (_ bv0 1)) true) (_ bv22 11) (_ bv21 11)) ?x19800)))
 (let ((?x13655 (ite (and (distinct ((_ extract 26 25) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 26 26) C) (_ bv0 1)) true) (_ bv26 11) (_ bv25 11)) (ite (and (distinct ((_ extract 24 24) C) (_ bv0 1)) true) (_ bv24 11) (_ bv23 11)))))
 (let ((?x11114 (ite (and (distinct ((_ extract 30 29) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 30 30) C) (_ bv0 1)) true) (_ bv30 11) (_ bv29 11)) (ite (and (distinct ((_ extract 28 28) C) (_ bv0 1)) true) (_ bv28 11) (_ bv27 11)))))
 (let ((?x22763 (ite (and (distinct ((_ extract 34 33) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 34 34) C) (_ bv0 1)) true) (_ bv34 11) (_ bv33 11)) (ite (and (distinct ((_ extract 32 32) C) (_ bv0 1)) true) (_ bv32 11) (_ bv31 11)))))
 (let ((?x8361 (ite (and (distinct ((_ extract 34 27) C) (_ bv0 8)) true) (ite (and (distinct ((_ extract 34 31) C) (_ bv0 4)) true) ?x22763 ?x11114) (ite (and (distinct ((_ extract 26 23) C) (_ bv0 4)) true) ?x13655 ?x565))))
 (let ((?x10320 (bvsub (ite (and (distinct ((_ extract 34 18) C) (_ bv0 17)) true) ?x8361 ?x1514) ?x1450)))
 (let ((?x2364 (ite (bvsgt (_ bv0 11) ?x10320) (_ bv0 11) ?x10320)))
 (let ((?x712 (bvsub ?x1450 (ite (and (distinct ((_ extract 34 18) C) (_ bv0 17)) true) ?x8361 ?x1514))))
 (let ((?x8248 (ite (bvsgt (_ bv0 11) ?x712) (_ bv0 11) ?x712)))
 (let ((?x12162 (ite (and (distinct ((_ extract 2 2) C) (_ bv0 1)) true) (_ bv2 32) (ite (and (distinct ((_ extract 1 1) C) (_ bv0 1)) true) (_ bv1 32) (_ bv0 32)))))
 (let ((?x11814 (ite (and (distinct ((_ extract 4 3) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 4 4) C) (_ bv0 1)) true) (_ bv4 32) (_ bv3 32)) ?x12162)))
 (let ((?x7936 (ite (and (distinct ((_ extract 8 7) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 8 8) C) (_ bv0 1)) true) (_ bv8 32) (_ bv7 32)) (ite (and (distinct ((_ extract 6 6) C) (_ bv0 1)) true) (_ bv6 32) (_ bv5 32)))))
 (let ((?x5204 (ite (and (distinct ((_ extract 11 11) C) (_ bv0 1)) true) (_ bv11 32) (ite (and (distinct ((_ extract 10 10) C) (_ bv0 1)) true) (_ bv10 32) (_ bv9 32)))))
 (let ((?x5119 (ite (and (distinct ((_ extract 13 12) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 13 13) C) (_ bv0 1)) true) (_ bv13 32) (_ bv12 32)) ?x5204)))
 (let ((?x6477 (ite (and (distinct ((_ extract 17 16) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 17 17) C) (_ bv0 1)) true) (_ bv17 32) (_ bv16 32)) (ite (and (distinct ((_ extract 15 15) C) (_ bv0 1)) true) (_ bv15 32) (_ bv14 32)))))
 (let ((?x13098 (ite (and (distinct ((_ extract 17 9) C) (_ bv0 9)) true) (ite (and (distinct ((_ extract 17 14) C) (_ bv0 4)) true) ?x6477 ?x5119) (ite (and (distinct ((_ extract 8 5) C) (_ bv0 4)) true) ?x7936 ?x11814))))
 (let ((?x19098 (ite (and (distinct ((_ extract 20 20) C) (_ bv0 1)) true) (_ bv20 32) (ite (and (distinct ((_ extract 19 19) C) (_ bv0 1)) true) (_ bv19 32) (_ bv18 32)))))
 (let ((?x17421 (ite (and (distinct ((_ extract 22 21) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 22 22) C) (_ bv0 1)) true) (_ bv22 32) (_ bv21 32)) ?x19098)))
 (let ((?x197 (ite (and (distinct ((_ extract 26 25) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 26 26) C) (_ bv0 1)) true) (_ bv26 32) (_ bv25 32)) (ite (and (distinct ((_ extract 24 24) C) (_ bv0 1)) true) (_ bv24 32) (_ bv23 32)))))
 (let ((?x6809 (ite (and (distinct ((_ extract 30 29) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 30 30) C) (_ bv0 1)) true) (_ bv30 32) (_ bv29 32)) (ite (and (distinct ((_ extract 28 28) C) (_ bv0 1)) true) (_ bv28 32) (_ bv27 32)))))
 (let ((?x2761 (ite (and (distinct ((_ extract 34 33) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 34 34) C) (_ bv0 1)) true) (_ bv34 32) (_ bv33 32)) (ite (and (distinct ((_ extract 32 32) C) (_ bv0 1)) true) (_ bv32 32) (_ bv31 32)))))
 (let ((?x534 (ite (and (distinct ((_ extract 34 27) C) (_ bv0 8)) true) (ite (and (distinct ((_ extract 34 31) C) (_ bv0 4)) true) ?x2761 ?x6809) (ite (and (distinct ((_ extract 26 23) C) (_ bv0 4)) true) ?x197 ?x17421))))
 (let (($x9444 (and (and (distinct (bvsub C2 C3) (_ bv0 11)) true) (= (bvand (bvsub C2 C3) (bvsub (bvsub C2 C3) (_ bv1 11))) (_ bv0 11)))))
 (and (and (and (distinct C (_ bv0 35)) true) (= (bvand C (bvsub C (_ bv1 35))) (_ bv0 35))) $x9444 (bvslt (ite (and (distinct ((_ extract 34 18) C) (_ bv0 17)) true) ?x534 ?x13098) (_ bv11 32)) (not (and (bvult ?x8248 (_ bv11 11)) (bvult ?x2364 (_ bv11 11))))))))))))))))))))))))))))))))))))))))))
(check-sat)
