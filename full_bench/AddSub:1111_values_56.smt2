(set-info :status unknown)
(declare-fun C2 () (_ BitVec 62))
(declare-fun %Y () (_ BitVec 62))
(declare-fun C1 () (_ BitVec 62))
(assert
 (let ((?x4264 (ite (and (distinct ((_ extract 3 2) C2) (_ bv0 2)) true) (ite (and (distinct ((_ extract 3 3) C2) (_ bv0 1)) true) (_ bv3 62) (_ bv2 62)) (ite (and (distinct ((_ extract 1 1) C2) (_ bv0 1)) true) (_ bv1 62) (_ bv0 62)))))
 (let ((?x5418 (ite (and (distinct ((_ extract 7 6) C2) (_ bv0 2)) true) (ite (and (distinct ((_ extract 7 7) C2) (_ bv0 1)) true) (_ bv7 62) (_ bv6 62)) (ite (and (distinct ((_ extract 5 5) C2) (_ bv0 1)) true) (_ bv5 62) (_ bv4 62)))))
 (let ((?x5534 (ite (and (distinct ((_ extract 11 10) C2) (_ bv0 2)) true) (ite (and (distinct ((_ extract 11 11) C2) (_ bv0 1)) true) (_ bv11 62) (_ bv10 62)) (ite (and (distinct ((_ extract 9 9) C2) (_ bv0 1)) true) (_ bv9 62) (_ bv8 62)))))
 (let ((?x5869 (ite (and (distinct ((_ extract 15 14) C2) (_ bv0 2)) true) (ite (and (distinct ((_ extract 15 15) C2) (_ bv0 1)) true) (_ bv15 62) (_ bv14 62)) (ite (and (distinct ((_ extract 13 13) C2) (_ bv0 1)) true) (_ bv13 62) (_ bv12 62)))))
 (let ((?x3534 (ite (and (distinct ((_ extract 15 8) C2) (_ bv0 8)) true) (ite (and (distinct ((_ extract 15 12) C2) (_ bv0 4)) true) ?x5869 ?x5534) (ite (and (distinct ((_ extract 7 4) C2) (_ bv0 4)) true) ?x5418 ?x4264))))
 (let ((?x6367 (ite (and (distinct ((_ extract 19 18) C2) (_ bv0 2)) true) (ite (and (distinct ((_ extract 19 19) C2) (_ bv0 1)) true) (_ bv19 62) (_ bv18 62)) (ite (and (distinct ((_ extract 17 17) C2) (_ bv0 1)) true) (_ bv17 62) (_ bv16 62)))))
 (let ((?x6690 (ite (and (distinct ((_ extract 23 22) C2) (_ bv0 2)) true) (ite (and (distinct ((_ extract 23 23) C2) (_ bv0 1)) true) (_ bv23 62) (_ bv22 62)) (ite (and (distinct ((_ extract 21 21) C2) (_ bv0 1)) true) (_ bv21 62) (_ bv20 62)))))
 (let ((?x7024 (ite (and (distinct ((_ extract 27 26) C2) (_ bv0 2)) true) (ite (and (distinct ((_ extract 27 27) C2) (_ bv0 1)) true) (_ bv27 62) (_ bv26 62)) (ite (and (distinct ((_ extract 25 25) C2) (_ bv0 1)) true) (_ bv25 62) (_ bv24 62)))))
 (let ((?x7360 (ite (and (distinct ((_ extract 30 30) C2) (_ bv0 1)) true) (_ bv30 62) (ite (and (distinct ((_ extract 29 29) C2) (_ bv0 1)) true) (_ bv29 62) (_ bv28 62)))))
 (let ((?x6370 (ite (and (distinct ((_ extract 30 24) C2) (_ bv0 7)) true) (ite (and (distinct ((_ extract 30 28) C2) (_ bv0 3)) true) ?x7360 ?x7024) (ite (and (distinct ((_ extract 23 20) C2) (_ bv0 4)) true) ?x6690 ?x6367))))
 (let ((?x4910 (ite (and (distinct ((_ extract 34 33) C2) (_ bv0 2)) true) (ite (and (distinct ((_ extract 34 34) C2) (_ bv0 1)) true) (_ bv34 62) (_ bv33 62)) (ite (and (distinct ((_ extract 32 32) C2) (_ bv0 1)) true) (_ bv32 62) (_ bv31 62)))))
 (let ((?x8033 (ite (and (distinct ((_ extract 38 37) C2) (_ bv0 2)) true) (ite (and (distinct ((_ extract 38 38) C2) (_ bv0 1)) true) (_ bv38 62) (_ bv37 62)) (ite (and (distinct ((_ extract 36 36) C2) (_ bv0 1)) true) (_ bv36 62) (_ bv35 62)))))
 (let ((?x3256 (ite (and (distinct ((_ extract 42 41) C2) (_ bv0 2)) true) (ite (and (distinct ((_ extract 42 42) C2) (_ bv0 1)) true) (_ bv42 62) (_ bv41 62)) (ite (and (distinct ((_ extract 40 40) C2) (_ bv0 1)) true) (_ bv40 62) (_ bv39 62)))))
 (let ((?x8702 (ite (and (distinct ((_ extract 46 45) C2) (_ bv0 2)) true) (ite (and (distinct ((_ extract 46 46) C2) (_ bv0 1)) true) (_ bv46 62) (_ bv45 62)) (ite (and (distinct ((_ extract 44 44) C2) (_ bv0 1)) true) (_ bv44 62) (_ bv43 62)))))
 (let ((?x3987 (ite (and (distinct ((_ extract 46 39) C2) (_ bv0 8)) true) (ite (and (distinct ((_ extract 46 43) C2) (_ bv0 4)) true) ?x8702 ?x3256) (ite (and (distinct ((_ extract 38 35) C2) (_ bv0 4)) true) ?x8033 ?x4910))))
 (let ((?x4036 (ite (and (distinct ((_ extract 50 49) C2) (_ bv0 2)) true) (ite (and (distinct ((_ extract 50 50) C2) (_ bv0 1)) true) (_ bv50 62) (_ bv49 62)) (ite (and (distinct ((_ extract 48 48) C2) (_ bv0 1)) true) (_ bv48 62) (_ bv47 62)))))
 (let ((?x9038 (ite (and (distinct ((_ extract 54 53) C2) (_ bv0 2)) true) (ite (and (distinct ((_ extract 54 54) C2) (_ bv0 1)) true) (_ bv54 62) (_ bv53 62)) (ite (and (distinct ((_ extract 52 52) C2) (_ bv0 1)) true) (_ bv52 62) (_ bv51 62)))))
 (let ((?x9865 (ite (and (distinct ((_ extract 58 57) C2) (_ bv0 2)) true) (ite (and (distinct ((_ extract 58 58) C2) (_ bv0 1)) true) (_ bv58 62) (_ bv57 62)) (ite (and (distinct ((_ extract 56 56) C2) (_ bv0 1)) true) (_ bv56 62) (_ bv55 62)))))
 (let ((?x10210 (ite (and (distinct ((_ extract 61 61) C2) (_ bv0 1)) true) (_ bv61 62) (ite (and (distinct ((_ extract 60 60) C2) (_ bv0 1)) true) (_ bv60 62) (_ bv59 62)))))
 (let ((?x9208 (ite (and (distinct ((_ extract 61 55) C2) (_ bv0 7)) true) (ite (and (distinct ((_ extract 61 59) C2) (_ bv0 3)) true) ?x10210 ?x9865) (ite (and (distinct ((_ extract 54 51) C2) (_ bv0 4)) true) ?x9038 ?x4036))))
 (let ((?x1995 (ite (and (distinct ((_ extract 61 31) C2) (_ bv0 31)) true) (ite (and (distinct ((_ extract 61 47) C2) (_ bv0 15)) true) ?x9208 ?x3987) (ite (and (distinct ((_ extract 30 16) C2) (_ bv0 15)) true) ?x6370 ?x3534))))
 (let ((?x2624 (bvsub (_ bv62 62) (bvsub (bvsub (_ bv62 62) ?x1995) (_ bv1 62)))))
 (let (($x10338 (and (distinct (bvadd (bvxor %Y C2) C1) (bvashr (bvshl %Y ?x2624) ?x2624)) true)))
 (and (= C1 (bvneg C2)) (and (and (distinct C2 (_ bv0 62)) true) (= (bvand C2 (bvsub C2 (_ bv1 62))) (_ bv0 62))) (not (= (bvand C2 (bvshl (_ bv4611686018427387903 62) ?x2624)) (_ bv0 62))) $x10338)))))))))))))))))))))))))
(check-sat)
