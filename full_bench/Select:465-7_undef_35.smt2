(set-info :status unknown)
(declare-fun C2 () (_ BitVec 11))
(declare-fun C1 () (_ BitVec 40))
(assert
 (let ((?x24450 (ite (and (distinct ((_ extract 2 2) C2) (_ bv0 1)) true) (_ bv2 40) (ite (and (distinct ((_ extract 1 1) C2) (_ bv0 1)) true) (_ bv1 40) (_ bv0 40)))))
 (let ((?x16350 (ite (and (distinct ((_ extract 5 5) C2) (_ bv0 1)) true) (_ bv5 40) (ite (and (distinct ((_ extract 4 4) C2) (_ bv0 1)) true) (_ bv4 40) (_ bv3 40)))))
 (let ((?x2812 (ite (and (distinct ((_ extract 8 8) C2) (_ bv0 1)) true) (_ bv8 40) (ite (and (distinct ((_ extract 7 7) C2) (_ bv0 1)) true) (_ bv7 40) (_ bv6 40)))))
 (let ((?x9873 (ite (and (distinct ((_ extract 10 9) C2) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) C2) (_ bv0 1)) true) (_ bv10 40) (_ bv9 40)) ?x2812)))
 (let ((?x9713 (ite (and (distinct ((_ extract 10 6) C2) (_ bv0 5)) true) ?x9873 (ite (and (distinct ((_ extract 5 3) C2) (_ bv0 3)) true) ?x16350 ?x24450))))
 (let ((?x18107 (ite (and (distinct ((_ extract 2 2) C1) (_ bv0 1)) true) (_ bv2 40) (ite (and (distinct ((_ extract 1 1) C1) (_ bv0 1)) true) (_ bv1 40) (_ bv0 40)))))
 (let ((?x4850 (ite (and (distinct ((_ extract 4 3) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 4 4) C1) (_ bv0 1)) true) (_ bv4 40) (_ bv3 40)) ?x18107)))
 (let ((?x7867 (ite (and (distinct ((_ extract 7 7) C1) (_ bv0 1)) true) (_ bv7 40) (ite (and (distinct ((_ extract 6 6) C1) (_ bv0 1)) true) (_ bv6 40) (_ bv5 40)))))
 (let ((?x15632 (ite (and (distinct ((_ extract 9 8) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 9 9) C1) (_ bv0 1)) true) (_ bv9 40) (_ bv8 40)) ?x7867)))
 (let ((?x7055 (ite (and (distinct ((_ extract 12 12) C1) (_ bv0 1)) true) (_ bv12 40) (ite (and (distinct ((_ extract 11 11) C1) (_ bv0 1)) true) (_ bv11 40) (_ bv10 40)))))
 (let ((?x13460 (ite (and (distinct ((_ extract 14 13) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 14 14) C1) (_ bv0 1)) true) (_ bv14 40) (_ bv13 40)) ?x7055)))
 (let ((?x12133 (ite (and (distinct ((_ extract 17 17) C1) (_ bv0 1)) true) (_ bv17 40) (ite (and (distinct ((_ extract 16 16) C1) (_ bv0 1)) true) (_ bv16 40) (_ bv15 40)))))
 (let ((?x5335 (ite (and (distinct ((_ extract 19 18) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 19 19) C1) (_ bv0 1)) true) (_ bv19 40) (_ bv18 40)) ?x12133)))
 (let ((?x19689 (ite (and (distinct ((_ extract 19 10) C1) (_ bv0 10)) true) (ite (and (distinct ((_ extract 19 15) C1) (_ bv0 5)) true) ?x5335 ?x13460) (ite (and (distinct ((_ extract 9 5) C1) (_ bv0 5)) true) ?x15632 ?x4850))))
 (let ((?x10868 (ite (and (distinct ((_ extract 22 22) C1) (_ bv0 1)) true) (_ bv22 40) (ite (and (distinct ((_ extract 21 21) C1) (_ bv0 1)) true) (_ bv21 40) (_ bv20 40)))))
 (let ((?x11484 (ite (and (distinct ((_ extract 24 23) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 24 24) C1) (_ bv0 1)) true) (_ bv24 40) (_ bv23 40)) ?x10868)))
 (let ((?x18304 (ite (and (distinct ((_ extract 27 27) C1) (_ bv0 1)) true) (_ bv27 40) (ite (and (distinct ((_ extract 26 26) C1) (_ bv0 1)) true) (_ bv26 40) (_ bv25 40)))))
 (let ((?x9068 (ite (and (distinct ((_ extract 29 28) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 29 29) C1) (_ bv0 1)) true) (_ bv29 40) (_ bv28 40)) ?x18304)))
 (let ((?x23259 (ite (and (distinct ((_ extract 32 32) C1) (_ bv0 1)) true) (_ bv32 40) (ite (and (distinct ((_ extract 31 31) C1) (_ bv0 1)) true) (_ bv31 40) (_ bv30 40)))))
 (let ((?x12231 (ite (and (distinct ((_ extract 34 33) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 34 34) C1) (_ bv0 1)) true) (_ bv34 40) (_ bv33 40)) ?x23259)))
 (let ((?x12981 (ite (and (distinct ((_ extract 37 37) C1) (_ bv0 1)) true) (_ bv37 40) (ite (and (distinct ((_ extract 36 36) C1) (_ bv0 1)) true) (_ bv36 40) (_ bv35 40)))))
 (let ((?x15099 (ite (and (distinct ((_ extract 39 38) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 39 39) C1) (_ bv0 1)) true) (_ bv39 40) (_ bv38 40)) ?x12981)))
 (let ((?x9824 (ite (and (distinct ((_ extract 39 30) C1) (_ bv0 10)) true) (ite (and (distinct ((_ extract 39 35) C1) (_ bv0 5)) true) ?x15099 ?x12231) (ite (and (distinct ((_ extract 29 25) C1) (_ bv0 5)) true) ?x9068 ?x11484))))
 (let ((?x21264 (bvsub (ite (and (distinct ((_ extract 39 20) C1) (_ bv0 20)) true) ?x9824 ?x19689) ?x9713)))
 (let ((?x23011 (ite (and (distinct ((_ extract 2 2) C1) (_ bv0 1)) true) (_ bv2 32) (ite (and (distinct ((_ extract 1 1) C1) (_ bv0 1)) true) (_ bv1 32) (_ bv0 32)))))
 (let ((?x25092 (ite (and (distinct ((_ extract 4 3) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 4 4) C1) (_ bv0 1)) true) (_ bv4 32) (_ bv3 32)) ?x23011)))
 (let ((?x19453 (ite (and (distinct ((_ extract 7 7) C1) (_ bv0 1)) true) (_ bv7 32) (ite (and (distinct ((_ extract 6 6) C1) (_ bv0 1)) true) (_ bv6 32) (_ bv5 32)))))
 (let ((?x19440 (ite (and (distinct ((_ extract 9 8) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 9 9) C1) (_ bv0 1)) true) (_ bv9 32) (_ bv8 32)) ?x19453)))
 (let ((?x9346 (ite (and (distinct ((_ extract 12 12) C1) (_ bv0 1)) true) (_ bv12 32) (ite (and (distinct ((_ extract 11 11) C1) (_ bv0 1)) true) (_ bv11 32) (_ bv10 32)))))
 (let ((?x22439 (ite (and (distinct ((_ extract 14 13) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 14 14) C1) (_ bv0 1)) true) (_ bv14 32) (_ bv13 32)) ?x9346)))
 (let ((?x51 (ite (and (distinct ((_ extract 17 17) C1) (_ bv0 1)) true) (_ bv17 32) (ite (and (distinct ((_ extract 16 16) C1) (_ bv0 1)) true) (_ bv16 32) (_ bv15 32)))))
 (let ((?x17590 (ite (and (distinct ((_ extract 19 18) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 19 19) C1) (_ bv0 1)) true) (_ bv19 32) (_ bv18 32)) ?x51)))
 (let ((?x23536 (ite (and (distinct ((_ extract 19 10) C1) (_ bv0 10)) true) (ite (and (distinct ((_ extract 19 15) C1) (_ bv0 5)) true) ?x17590 ?x22439) (ite (and (distinct ((_ extract 9 5) C1) (_ bv0 5)) true) ?x19440 ?x25092))))
 (let ((?x11313 (ite (and (distinct ((_ extract 22 22) C1) (_ bv0 1)) true) (_ bv22 32) (ite (and (distinct ((_ extract 21 21) C1) (_ bv0 1)) true) (_ bv21 32) (_ bv20 32)))))
 (let ((?x11016 (ite (and (distinct ((_ extract 24 23) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 24 24) C1) (_ bv0 1)) true) (_ bv24 32) (_ bv23 32)) ?x11313)))
 (let ((?x5105 (ite (and (distinct ((_ extract 27 27) C1) (_ bv0 1)) true) (_ bv27 32) (ite (and (distinct ((_ extract 26 26) C1) (_ bv0 1)) true) (_ bv26 32) (_ bv25 32)))))
 (let ((?x4928 (ite (and (distinct ((_ extract 29 28) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 29 29) C1) (_ bv0 1)) true) (_ bv29 32) (_ bv28 32)) ?x5105)))
 (let ((?x13270 (ite (and (distinct ((_ extract 32 32) C1) (_ bv0 1)) true) (_ bv32 32) (ite (and (distinct ((_ extract 31 31) C1) (_ bv0 1)) true) (_ bv31 32) (_ bv30 32)))))
 (let ((?x3701 (ite (and (distinct ((_ extract 34 33) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 34 34) C1) (_ bv0 1)) true) (_ bv34 32) (_ bv33 32)) ?x13270)))
 (let ((?x224 (ite (and (distinct ((_ extract 37 37) C1) (_ bv0 1)) true) (_ bv37 32) (ite (and (distinct ((_ extract 36 36) C1) (_ bv0 1)) true) (_ bv36 32) (_ bv35 32)))))
 (let ((?x14500 (ite (and (distinct ((_ extract 39 38) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 39 39) C1) (_ bv0 1)) true) (_ bv39 32) (_ bv38 32)) ?x224)))
 (let ((?x10681 (ite (and (distinct ((_ extract 39 30) C1) (_ bv0 10)) true) (ite (and (distinct ((_ extract 39 35) C1) (_ bv0 5)) true) ?x14500 ?x3701) (ite (and (distinct ((_ extract 29 25) C1) (_ bv0 5)) true) ?x4928 ?x11016))))
 (let ((?x20064 (ite (and (distinct ((_ extract 2 2) C2) (_ bv0 1)) true) (_ bv2 32) (ite (and (distinct ((_ extract 1 1) C2) (_ bv0 1)) true) (_ bv1 32) (_ bv0 32)))))
 (let ((?x15702 (ite (and (distinct ((_ extract 5 5) C2) (_ bv0 1)) true) (_ bv5 32) (ite (and (distinct ((_ extract 4 4) C2) (_ bv0 1)) true) (_ bv4 32) (_ bv3 32)))))
 (let ((?x15082 (ite (and (distinct ((_ extract 8 8) C2) (_ bv0 1)) true) (_ bv8 32) (ite (and (distinct ((_ extract 7 7) C2) (_ bv0 1)) true) (_ bv7 32) (_ bv6 32)))))
 (let ((?x23404 (ite (and (distinct ((_ extract 10 9) C2) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) C2) (_ bv0 1)) true) (_ bv10 32) (_ bv9 32)) ?x15082)))
 (let ((?x11523 (ite (and (distinct ((_ extract 10 6) C2) (_ bv0 5)) true) ?x23404 (ite (and (distinct ((_ extract 5 3) C2) (_ bv0 3)) true) ?x15702 ?x20064))))
 (and (and (and (distinct C1 (_ bv0 40)) true) (= (bvand C1 (bvsub C1 (_ bv1 40))) (_ bv0 40))) (and (and (distinct C2 (_ bv0 11)) true) (= (bvand C2 (bvsub C2 (_ bv1 11))) (_ bv0 11))) (bvslt ?x11523 (ite (and (distinct ((_ extract 39 20) C1) (_ bv0 20)) true) ?x10681 ?x23536)) (not (bvult ?x21264 (_ bv40 40))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
