(set-info :status unknown)
(declare-fun C2 () (_ BitVec 11))
(declare-fun C1 () (_ BitVec 43))
(assert
 (let ((?x6600 (ite (and (distinct ((_ extract 2 2) C2) (_ bv0 1)) true) (_ bv2 43) (ite (and (distinct ((_ extract 1 1) C2) (_ bv0 1)) true) (_ bv1 43) (_ bv0 43)))))
 (let ((?x4805 (ite (and (distinct ((_ extract 5 5) C2) (_ bv0 1)) true) (_ bv5 43) (ite (and (distinct ((_ extract 4 4) C2) (_ bv0 1)) true) (_ bv4 43) (_ bv3 43)))))
 (let ((?x1615 (ite (and (distinct ((_ extract 8 8) C2) (_ bv0 1)) true) (_ bv8 43) (ite (and (distinct ((_ extract 7 7) C2) (_ bv0 1)) true) (_ bv7 43) (_ bv6 43)))))
 (let ((?x1584 (ite (and (distinct ((_ extract 10 9) C2) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) C2) (_ bv0 1)) true) (_ bv10 43) (_ bv9 43)) ?x1615)))
 (let ((?x6279 (ite (and (distinct ((_ extract 10 6) C2) (_ bv0 5)) true) ?x1584 (ite (and (distinct ((_ extract 5 3) C2) (_ bv0 3)) true) ?x4805 ?x6600))))
 (let ((?x6490 (ite (and (distinct ((_ extract 2 2) C1) (_ bv0 1)) true) (_ bv2 43) (ite (and (distinct ((_ extract 1 1) C1) (_ bv0 1)) true) (_ bv1 43) (_ bv0 43)))))
 (let ((?x5504 (ite (and (distinct ((_ extract 5 5) C1) (_ bv0 1)) true) (_ bv5 43) (ite (and (distinct ((_ extract 4 4) C1) (_ bv0 1)) true) (_ bv4 43) (_ bv3 43)))))
 (let ((?x4681 (ite (and (distinct ((_ extract 8 8) C1) (_ bv0 1)) true) (_ bv8 43) (ite (and (distinct ((_ extract 7 7) C1) (_ bv0 1)) true) (_ bv7 43) (_ bv6 43)))))
 (let ((?x6262 (ite (and (distinct ((_ extract 10 9) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) C1) (_ bv0 1)) true) (_ bv10 43) (_ bv9 43)) ?x4681)))
 (let ((?x1230 (ite (and (distinct ((_ extract 10 6) C1) (_ bv0 5)) true) ?x6262 (ite (and (distinct ((_ extract 5 3) C1) (_ bv0 3)) true) ?x5504 ?x6490))))
 (let ((?x3639 (ite (and (distinct ((_ extract 13 13) C1) (_ bv0 1)) true) (_ bv13 43) (ite (and (distinct ((_ extract 12 12) C1) (_ bv0 1)) true) (_ bv12 43) (_ bv11 43)))))
 (let ((?x1136 (ite (and (distinct ((_ extract 16 16) C1) (_ bv0 1)) true) (_ bv16 43) (ite (and (distinct ((_ extract 15 15) C1) (_ bv0 1)) true) (_ bv15 43) (_ bv14 43)))))
 (let ((?x2014 (ite (and (distinct ((_ extract 19 19) C1) (_ bv0 1)) true) (_ bv19 43) (ite (and (distinct ((_ extract 18 18) C1) (_ bv0 1)) true) (_ bv18 43) (_ bv17 43)))))
 (let ((?x2310 (ite (and (distinct ((_ extract 21 20) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 21 21) C1) (_ bv0 1)) true) (_ bv21 43) (_ bv20 43)) ?x2014)))
 (let ((?x1452 (ite (and (distinct ((_ extract 21 17) C1) (_ bv0 5)) true) ?x2310 (ite (and (distinct ((_ extract 16 14) C1) (_ bv0 3)) true) ?x1136 ?x3639))))
 (let ((?x4766 (ite (and (distinct ((_ extract 24 24) C1) (_ bv0 1)) true) (_ bv24 43) (ite (and (distinct ((_ extract 23 23) C1) (_ bv0 1)) true) (_ bv23 43) (_ bv22 43)))))
 (let ((?x2478 (ite (and (distinct ((_ extract 27 27) C1) (_ bv0 1)) true) (_ bv27 43) (ite (and (distinct ((_ extract 26 26) C1) (_ bv0 1)) true) (_ bv26 43) (_ bv25 43)))))
 (let ((?x4151 (ite (and (distinct ((_ extract 30 30) C1) (_ bv0 1)) true) (_ bv30 43) (ite (and (distinct ((_ extract 29 29) C1) (_ bv0 1)) true) (_ bv29 43) (_ bv28 43)))))
 (let ((?x6065 (ite (and (distinct ((_ extract 32 31) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 32 32) C1) (_ bv0 1)) true) (_ bv32 43) (_ bv31 43)) ?x4151)))
 (let ((?x1748 (ite (and (distinct ((_ extract 32 28) C1) (_ bv0 5)) true) ?x6065 (ite (and (distinct ((_ extract 27 25) C1) (_ bv0 3)) true) ?x2478 ?x4766))))
 (let ((?x3488 (ite (and (distinct ((_ extract 35 35) C1) (_ bv0 1)) true) (_ bv35 43) (ite (and (distinct ((_ extract 34 34) C1) (_ bv0 1)) true) (_ bv34 43) (_ bv33 43)))))
 (let ((?x3623 (ite (and (distinct ((_ extract 37 36) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 37 37) C1) (_ bv0 1)) true) (_ bv37 43) (_ bv36 43)) ?x3488)))
 (let ((?x4848 (ite (and (distinct ((_ extract 40 40) C1) (_ bv0 1)) true) (_ bv40 43) (ite (and (distinct ((_ extract 39 39) C1) (_ bv0 1)) true) (_ bv39 43) (_ bv38 43)))))
 (let ((?x4911 (ite (and (distinct ((_ extract 42 41) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 42 42) C1) (_ bv0 1)) true) (_ bv42 43) (_ bv41 43)) ?x4848)))
 (let ((?x1348 (ite (and (distinct ((_ extract 42 33) C1) (_ bv0 10)) true) (ite (and (distinct ((_ extract 42 38) C1) (_ bv0 5)) true) ?x4911 ?x3623) ?x1748)))
 (let ((?x3266 (ite (and (distinct ((_ extract 42 22) C1) (_ bv0 21)) true) ?x1348 (ite (and (distinct ((_ extract 21 11) C1) (_ bv0 11)) true) ?x1452 ?x1230))))
 (let ((?x4618 (bvsub ?x3266 ?x6279)))
 (let ((?x5694 (ite (and (distinct ((_ extract 2 2) C1) (_ bv0 1)) true) (_ bv2 32) (ite (and (distinct ((_ extract 1 1) C1) (_ bv0 1)) true) (_ bv1 32) (_ bv0 32)))))
 (let ((?x1601 (ite (and (distinct ((_ extract 5 5) C1) (_ bv0 1)) true) (_ bv5 32) (ite (and (distinct ((_ extract 4 4) C1) (_ bv0 1)) true) (_ bv4 32) (_ bv3 32)))))
 (let ((?x3206 (ite (and (distinct ((_ extract 8 8) C1) (_ bv0 1)) true) (_ bv8 32) (ite (and (distinct ((_ extract 7 7) C1) (_ bv0 1)) true) (_ bv7 32) (_ bv6 32)))))
 (let ((?x4744 (ite (and (distinct ((_ extract 10 9) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) C1) (_ bv0 1)) true) (_ bv10 32) (_ bv9 32)) ?x3206)))
 (let ((?x2255 (ite (and (distinct ((_ extract 10 6) C1) (_ bv0 5)) true) ?x4744 (ite (and (distinct ((_ extract 5 3) C1) (_ bv0 3)) true) ?x1601 ?x5694))))
 (let ((?x6718 (ite (and (distinct ((_ extract 13 13) C1) (_ bv0 1)) true) (_ bv13 32) (ite (and (distinct ((_ extract 12 12) C1) (_ bv0 1)) true) (_ bv12 32) (_ bv11 32)))))
 (let ((?x5143 (ite (and (distinct ((_ extract 16 16) C1) (_ bv0 1)) true) (_ bv16 32) (ite (and (distinct ((_ extract 15 15) C1) (_ bv0 1)) true) (_ bv15 32) (_ bv14 32)))))
 (let ((?x5106 (ite (and (distinct ((_ extract 19 19) C1) (_ bv0 1)) true) (_ bv19 32) (ite (and (distinct ((_ extract 18 18) C1) (_ bv0 1)) true) (_ bv18 32) (_ bv17 32)))))
 (let ((?x4839 (ite (and (distinct ((_ extract 21 20) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 21 21) C1) (_ bv0 1)) true) (_ bv21 32) (_ bv20 32)) ?x5106)))
 (let ((?x6427 (ite (and (distinct ((_ extract 21 17) C1) (_ bv0 5)) true) ?x4839 (ite (and (distinct ((_ extract 16 14) C1) (_ bv0 3)) true) ?x5143 ?x6718))))
 (let ((?x3582 (ite (and (distinct ((_ extract 24 24) C1) (_ bv0 1)) true) (_ bv24 32) (ite (and (distinct ((_ extract 23 23) C1) (_ bv0 1)) true) (_ bv23 32) (_ bv22 32)))))
 (let ((?x2397 (ite (and (distinct ((_ extract 27 27) C1) (_ bv0 1)) true) (_ bv27 32) (ite (and (distinct ((_ extract 26 26) C1) (_ bv0 1)) true) (_ bv26 32) (_ bv25 32)))))
 (let ((?x1652 (ite (and (distinct ((_ extract 30 30) C1) (_ bv0 1)) true) (_ bv30 32) (ite (and (distinct ((_ extract 29 29) C1) (_ bv0 1)) true) (_ bv29 32) (_ bv28 32)))))
 (let ((?x3092 (ite (and (distinct ((_ extract 32 31) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 32 32) C1) (_ bv0 1)) true) (_ bv32 32) (_ bv31 32)) ?x1652)))
 (let ((?x3518 (ite (and (distinct ((_ extract 32 28) C1) (_ bv0 5)) true) ?x3092 (ite (and (distinct ((_ extract 27 25) C1) (_ bv0 3)) true) ?x2397 ?x3582))))
 (let ((?x1624 (ite (and (distinct ((_ extract 35 35) C1) (_ bv0 1)) true) (_ bv35 32) (ite (and (distinct ((_ extract 34 34) C1) (_ bv0 1)) true) (_ bv34 32) (_ bv33 32)))))
 (let ((?x1162 (ite (and (distinct ((_ extract 37 36) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 37 37) C1) (_ bv0 1)) true) (_ bv37 32) (_ bv36 32)) ?x1624)))
 (let ((?x6110 (ite (and (distinct ((_ extract 40 40) C1) (_ bv0 1)) true) (_ bv40 32) (ite (and (distinct ((_ extract 39 39) C1) (_ bv0 1)) true) (_ bv39 32) (_ bv38 32)))))
 (let ((?x5073 (ite (and (distinct ((_ extract 42 41) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 42 42) C1) (_ bv0 1)) true) (_ bv42 32) (_ bv41 32)) ?x6110)))
 (let ((?x3497 (ite (and (distinct ((_ extract 42 33) C1) (_ bv0 10)) true) (ite (and (distinct ((_ extract 42 38) C1) (_ bv0 5)) true) ?x5073 ?x1162) ?x3518)))
 (let ((?x3063 (ite (and (distinct ((_ extract 42 22) C1) (_ bv0 21)) true) ?x3497 (ite (and (distinct ((_ extract 21 11) C1) (_ bv0 11)) true) ?x6427 ?x2255))))
 (let ((?x2093 (ite (and (distinct ((_ extract 2 2) C2) (_ bv0 1)) true) (_ bv2 32) (ite (and (distinct ((_ extract 1 1) C2) (_ bv0 1)) true) (_ bv1 32) (_ bv0 32)))))
 (let ((?x1487 (ite (and (distinct ((_ extract 5 5) C2) (_ bv0 1)) true) (_ bv5 32) (ite (and (distinct ((_ extract 4 4) C2) (_ bv0 1)) true) (_ bv4 32) (_ bv3 32)))))
 (let ((?x4361 (ite (and (distinct ((_ extract 8 8) C2) (_ bv0 1)) true) (_ bv8 32) (ite (and (distinct ((_ extract 7 7) C2) (_ bv0 1)) true) (_ bv7 32) (_ bv6 32)))))
 (let ((?x6555 (ite (and (distinct ((_ extract 10 9) C2) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) C2) (_ bv0 1)) true) (_ bv10 32) (_ bv9 32)) ?x4361)))
 (let ((?x6692 (ite (and (distinct ((_ extract 10 6) C2) (_ bv0 5)) true) ?x6555 (ite (and (distinct ((_ extract 5 3) C2) (_ bv0 3)) true) ?x1487 ?x2093))))
 (and (and (and (distinct C1 (_ bv0 43)) true) (= (bvand C1 (bvsub C1 (_ bv1 43))) (_ bv0 43))) (and (and (distinct C2 (_ bv0 11)) true) (= (bvand C2 (bvsub C2 (_ bv1 11))) (_ bv0 11))) (bvslt ?x6692 ?x3063) (not (bvult ?x4618 (_ bv43 43))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
