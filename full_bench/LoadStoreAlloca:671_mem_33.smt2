(set-info :status unknown)
(declare-fun mem0 () (_ BitVec 8))
(declare-fun %y () (_ BitVec 35))
(declare-fun %p2 () (_ BitVec 64))
(declare-fun idx () (_ BitVec 64))
(declare-fun %x () (_ BitVec 35))
(declare-fun %p1 () (_ BitVec 64))
(declare-fun |ana_equivalentAddressValues(%p1, %p2)| () (_ BitVec 1))
(assert
 (let ((?x6453 (ite (and (and (distinct %p2 (_ bv0 64)) true) (or true true) (= idx %p2)) (concat ((_ extract 7 3) mem0) ((_ extract 2 0) %y)) mem0)))
 (let (($x6308 (or true true)))
 (let (($x13552 (and (distinct %p2 (_ bv0 64)) true)))
 (let ((?x6572 (ite (and $x13552 $x6308 (= idx (bvadd (bvadd %p2 (_ bv1 64)) (_ bv0 64)))) ((_ extract 10 3) %y) ?x6453)))
 (let ((?x9066 (ite (and $x13552 $x6308 (= idx (bvadd (bvadd %p2 (_ bv1 64)) (_ bv1 64)))) ((_ extract 18 11) %y) ?x6572)))
 (let ((?x13774 (ite (and $x13552 $x6308 (= idx (bvadd (bvadd %p2 (_ bv1 64)) (_ bv2 64)))) ((_ extract 26 19) %y) ?x9066)))
 (let ((?x4692 (ite (and $x13552 $x6308 (= idx (bvadd (bvadd %p2 (_ bv1 64)) (_ bv3 64)))) ((_ extract 34 27) %y) ?x13774)))
 (let ((?x7397 (ite (and (and (distinct %p1 (_ bv0 64)) true) $x6308 (= idx %p1)) (concat ((_ extract 7 3) mem0) ((_ extract 2 0) %x)) mem0)))
 (let (($x17212 (and (distinct %p1 (_ bv0 64)) true)))
 (let ((?x2401 (ite (and $x17212 $x6308 (= idx (bvadd (bvadd %p1 (_ bv1 64)) (_ bv0 64)))) ((_ extract 10 3) %x) ?x7397)))
 (let ((?x1014 (ite (and $x17212 $x6308 (= idx (bvadd (bvadd %p1 (_ bv1 64)) (_ bv1 64)))) ((_ extract 18 11) %x) ?x2401)))
 (let ((?x23767 (ite (and $x17212 $x6308 (= idx (bvadd (bvadd %p1 (_ bv1 64)) (_ bv2 64)))) ((_ extract 26 19) %x) ?x1014)))
 (let ((?x24067 (ite (and $x17212 $x6308 (= idx (bvadd (bvadd %p1 (_ bv1 64)) (_ bv3 64)))) ((_ extract 34 27) %x) ?x23767)))
 (let ((?x5713 (ite (and $x17212 $x6308 (= %p2 %p1)) (concat ((_ extract 7 3) mem0) ((_ extract 2 0) %x)) mem0)))
 (let ((?x11570 (ite (and $x17212 $x6308 (= %p2 (bvadd (bvadd %p1 (_ bv1 64)) (_ bv0 64)))) ((_ extract 10 3) %x) ?x5713)))
 (let ((?x9734 (ite (and $x17212 $x6308 (= %p2 (bvadd (bvadd %p1 (_ bv1 64)) (_ bv1 64)))) ((_ extract 18 11) %x) ?x11570)))
 (let ((?x13454 (ite (and $x17212 $x6308 (= %p2 (bvadd (bvadd %p1 (_ bv1 64)) (_ bv2 64)))) ((_ extract 26 19) %x) ?x9734)))
 (let ((?x3641 (ite (and $x17212 $x6308 (= %p2 (bvadd (bvadd %p1 (_ bv1 64)) (_ bv3 64)))) ((_ extract 34 27) %x) ?x13454)))
 (let ((?x13334 (ite (and $x17212 $x6308 $x13552 $x6308 (= idx %p2)) (concat ((_ extract 7 3) ?x3641) ((_ extract 2 0) %y)) ?x24067)))
 (let ((?x3794 (ite (and $x17212 $x6308 $x13552 $x6308 (= idx (bvadd (bvadd %p2 (_ bv1 64)) (_ bv0 64)))) ((_ extract 10 3) %y) ?x13334)))
 (let ((?x1304 (ite (and $x17212 $x6308 $x13552 $x6308 (= idx (bvadd (bvadd %p2 (_ bv1 64)) (_ bv1 64)))) ((_ extract 18 11) %y) ?x3794)))
 (let ((?x6060 (ite (and $x17212 $x6308 $x13552 $x6308 (= idx (bvadd (bvadd %p2 (_ bv1 64)) (_ bv2 64)))) ((_ extract 26 19) %y) ?x1304)))
 (let ((?x17912 (ite (and $x17212 $x6308 $x13552 $x6308 (= idx (bvadd (bvadd %p2 (_ bv1 64)) (_ bv3 64)))) ((_ extract 34 27) %y) ?x6060)))
 (let (($x8802 (= |ana_equivalentAddressValues(%p1, %p2)| (_ bv1 1))))
 (and (=> $x8802 (= %p1 %p2)) $x8802 (and (distinct ?x17912 ?x4692) true)))))))))))))))))))))))))))
(check-sat)
