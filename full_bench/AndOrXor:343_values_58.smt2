(set-info :source |
 Generated by Alive 0.1
 More info in N. P. Lopes, D. Menendez, S. Nagarakatte, J. Regehr.
 Provably Correct Peephole Optimizations with Alive. In PLDI'15.
|)

(set-info :status unknown)
(declare-fun C2 () (_ BitVec 60))
(declare-fun %B () (_ BitVec 60))
(declare-fun %A () (_ BitVec 60))
(declare-fun C1 () (_ BitVec 60))
(declare-fun |ana_MaskedValueIsZero(%B, ((1 << (width(C2) - countLeadingZeros(((C2 - 1) ^ C2)))) - 1))| () (_ BitVec 1))
(assert
 (let (($x157918 (and (distinct (bvand (bvadd (bvand %A C1) %B) C2) (bvand (bvadd %A %B) C2)) true)))
 (let (($x131713 (= |ana_MaskedValueIsZero(%B, ((1 << (width(C2) - countLeadingZeros(((C2 - 1) ^ C2)))) - 1))| (_ bv1 1))))
 (let ((?x31151 (bvsub C2 (_ bv1 60))))
 (let ((?x157984 (bvor ?x31151 C2)))
 (let (($x157956 (and (and (distinct ?x157984 (_ bv0 60)) true) (= (bvand (bvadd ?x157984 (_ bv1 60)) ?x157984) (_ bv0 60)) $x131713)))
 (let (($x157951 (or (= (bvand (bvadd C2 (_ bv1 60)) (bvsub (bvadd C2 (_ bv1 60)) (_ bv1 60))) (_ bv0 60)) $x157956)))
 (let ((?x132297 (bvand C1 C2)))
 (let (($x157983 (= ?x132297 C2)))
 (let ((?x157954 (ite (= ((_ extract 1 1) (bvxor ?x31151 C2)) (_ bv1 1)) (_ bv58 60) (ite (= ((_ extract 0 0) (bvxor ?x31151 C2)) (_ bv1 1)) (_ bv59 60) (_ bv60 60)))))
 (let ((?x157944 (ite (= ((_ extract 3 3) (bvxor ?x31151 C2)) (_ bv1 1)) (_ bv56 60) (ite (= ((_ extract 2 2) (bvxor ?x31151 C2)) (_ bv1 1)) (_ bv57 60) ?x157954))))
 (let ((?x157933 (ite (= ((_ extract 5 5) (bvxor ?x31151 C2)) (_ bv1 1)) (_ bv54 60) (ite (= ((_ extract 4 4) (bvxor ?x31151 C2)) (_ bv1 1)) (_ bv55 60) ?x157944))))
 (let ((?x157922 (ite (= ((_ extract 7 7) (bvxor ?x31151 C2)) (_ bv1 1)) (_ bv52 60) (ite (= ((_ extract 6 6) (bvxor ?x31151 C2)) (_ bv1 1)) (_ bv53 60) ?x157933))))
 (let ((?x157907 (ite (= ((_ extract 9 9) (bvxor ?x31151 C2)) (_ bv1 1)) (_ bv50 60) (ite (= ((_ extract 8 8) (bvxor ?x31151 C2)) (_ bv1 1)) (_ bv51 60) ?x157922))))
 (let ((?x156546 (ite (= ((_ extract 11 11) (bvxor ?x31151 C2)) (_ bv1 1)) (_ bv48 60) (ite (= ((_ extract 10 10) (bvxor ?x31151 C2)) (_ bv1 1)) (_ bv49 60) ?x157907))))
 (let ((?x158131 (ite (= ((_ extract 13 13) (bvxor ?x31151 C2)) (_ bv1 1)) (_ bv46 60) (ite (= ((_ extract 12 12) (bvxor ?x31151 C2)) (_ bv1 1)) (_ bv47 60) ?x156546))))
 (let ((?x158127 (ite (= ((_ extract 15 15) (bvxor ?x31151 C2)) (_ bv1 1)) (_ bv44 60) (ite (= ((_ extract 14 14) (bvxor ?x31151 C2)) (_ bv1 1)) (_ bv45 60) ?x158131))))
 (let ((?x158123 (ite (= ((_ extract 17 17) (bvxor ?x31151 C2)) (_ bv1 1)) (_ bv42 60) (ite (= ((_ extract 16 16) (bvxor ?x31151 C2)) (_ bv1 1)) (_ bv43 60) ?x158127))))
 (let ((?x158119 (ite (= ((_ extract 19 19) (bvxor ?x31151 C2)) (_ bv1 1)) (_ bv40 60) (ite (= ((_ extract 18 18) (bvxor ?x31151 C2)) (_ bv1 1)) (_ bv41 60) ?x158123))))
 (let ((?x158115 (ite (= ((_ extract 21 21) (bvxor ?x31151 C2)) (_ bv1 1)) (_ bv38 60) (ite (= ((_ extract 20 20) (bvxor ?x31151 C2)) (_ bv1 1)) (_ bv39 60) ?x158119))))
 (let ((?x158108 (ite (= ((_ extract 23 23) (bvxor ?x31151 C2)) (_ bv1 1)) (_ bv36 60) (ite (= ((_ extract 22 22) (bvxor ?x31151 C2)) (_ bv1 1)) (_ bv37 60) ?x158115))))
 (let ((?x158101 (ite (= ((_ extract 25 25) (bvxor ?x31151 C2)) (_ bv1 1)) (_ bv34 60) (ite (= ((_ extract 24 24) (bvxor ?x31151 C2)) (_ bv1 1)) (_ bv35 60) ?x158108))))
 (let ((?x158094 (ite (= ((_ extract 27 27) (bvxor ?x31151 C2)) (_ bv1 1)) (_ bv32 60) (ite (= ((_ extract 26 26) (bvxor ?x31151 C2)) (_ bv1 1)) (_ bv33 60) ?x158101))))
 (let ((?x158090 (ite (= ((_ extract 29 29) (bvxor ?x31151 C2)) (_ bv1 1)) (_ bv30 60) (ite (= ((_ extract 28 28) (bvxor ?x31151 C2)) (_ bv1 1)) (_ bv31 60) ?x158094))))
 (let ((?x158086 (ite (= ((_ extract 31 31) (bvxor ?x31151 C2)) (_ bv1 1)) (_ bv28 60) (ite (= ((_ extract 30 30) (bvxor ?x31151 C2)) (_ bv1 1)) (_ bv29 60) ?x158090))))
 (let ((?x158082 (ite (= ((_ extract 33 33) (bvxor ?x31151 C2)) (_ bv1 1)) (_ bv26 60) (ite (= ((_ extract 32 32) (bvxor ?x31151 C2)) (_ bv1 1)) (_ bv27 60) ?x158086))))
 (let ((?x158075 (ite (= ((_ extract 35 35) (bvxor ?x31151 C2)) (_ bv1 1)) (_ bv24 60) (ite (= ((_ extract 34 34) (bvxor ?x31151 C2)) (_ bv1 1)) (_ bv25 60) ?x158082))))
 (let ((?x158068 (ite (= ((_ extract 37 37) (bvxor ?x31151 C2)) (_ bv1 1)) (_ bv22 60) (ite (= ((_ extract 36 36) (bvxor ?x31151 C2)) (_ bv1 1)) (_ bv23 60) ?x158075))))
 (let ((?x158061 (ite (= ((_ extract 39 39) (bvxor ?x31151 C2)) (_ bv1 1)) (_ bv20 60) (ite (= ((_ extract 38 38) (bvxor ?x31151 C2)) (_ bv1 1)) (_ bv21 60) ?x158068))))
 (let ((?x158054 (ite (= ((_ extract 41 41) (bvxor ?x31151 C2)) (_ bv1 1)) (_ bv18 60) (ite (= ((_ extract 40 40) (bvxor ?x31151 C2)) (_ bv1 1)) (_ bv19 60) ?x158061))))
 (let ((?x158050 (ite (= ((_ extract 43 43) (bvxor ?x31151 C2)) (_ bv1 1)) (_ bv16 60) (ite (= ((_ extract 42 42) (bvxor ?x31151 C2)) (_ bv1 1)) (_ bv17 60) ?x158054))))
 (let ((?x158046 (ite (= ((_ extract 45 45) (bvxor ?x31151 C2)) (_ bv1 1)) (_ bv14 60) (ite (= ((_ extract 44 44) (bvxor ?x31151 C2)) (_ bv1 1)) (_ bv15 60) ?x158050))))
 (let ((?x158039 (ite (= ((_ extract 47 47) (bvxor ?x31151 C2)) (_ bv1 1)) (_ bv12 60) (ite (= ((_ extract 46 46) (bvxor ?x31151 C2)) (_ bv1 1)) (_ bv13 60) ?x158046))))
 (let ((?x158032 (ite (= ((_ extract 49 49) (bvxor ?x31151 C2)) (_ bv1 1)) (_ bv10 60) (ite (= ((_ extract 48 48) (bvxor ?x31151 C2)) (_ bv1 1)) (_ bv11 60) ?x158039))))
 (let ((?x158028 (ite (= ((_ extract 51 51) (bvxor ?x31151 C2)) (_ bv1 1)) (_ bv8 60) (ite (= ((_ extract 50 50) (bvxor ?x31151 C2)) (_ bv1 1)) (_ bv9 60) ?x158032))))
 (let ((?x158024 (ite (= ((_ extract 53 53) (bvxor ?x31151 C2)) (_ bv1 1)) (_ bv6 60) (ite (= ((_ extract 52 52) (bvxor ?x31151 C2)) (_ bv1 1)) (_ bv7 60) ?x158028))))
 (let ((?x158020 (ite (= ((_ extract 55 55) (bvxor ?x31151 C2)) (_ bv1 1)) (_ bv4 60) (ite (= ((_ extract 54 54) (bvxor ?x31151 C2)) (_ bv1 1)) (_ bv5 60) ?x158024))))
 (let ((?x158016 (ite (= ((_ extract 57 57) (bvxor ?x31151 C2)) (_ bv1 1)) (_ bv2 60) (ite (= ((_ extract 56 56) (bvxor ?x31151 C2)) (_ bv1 1)) (_ bv3 60) ?x158020))))
 (let ((?x158012 (ite (= ((_ extract 59 59) (bvxor ?x31151 C2)) (_ bv1 1)) (_ bv0 60) (ite (= ((_ extract 58 58) (bvxor ?x31151 C2)) (_ bv1 1)) (_ bv1 60) ?x158016))))
 (let (($x157955 (=> $x131713 (= (bvand %B (bvsub (bvshl (_ bv1 60) (bvsub (_ bv60 60) ?x158012)) (_ bv1 60))) (_ bv0 60)))))
 (and $x157955 $x157983 $x157951 $x157918)))))))))))))))))))))))))))))))))))))))))
(check-sat)
