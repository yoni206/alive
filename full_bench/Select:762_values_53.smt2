(set-info :status unknown)
(declare-fun C3 () (_ BitVec 11))
(declare-fun C2 () (_ BitVec 11))
(declare-fun C () (_ BitVec 57))
(declare-fun %Op () (_ BitVec 57))
(assert
 (let ((?x1210 (bvsub C2 C3)))
 (let ((?x2995 (ite (and (distinct ((_ extract 2 2) ?x1210) (_ bv0 1)) true) (_ bv2 11) (ite (and (distinct ((_ extract 1 1) ?x1210) (_ bv0 1)) true) (_ bv1 11) (_ bv0 11)))))
 (let ((?x3430 (ite (and (distinct ((_ extract 5 5) ?x1210) (_ bv0 1)) true) (_ bv5 11) (ite (and (distinct ((_ extract 4 4) ?x1210) (_ bv0 1)) true) (_ bv4 11) (_ bv3 11)))))
 (let ((?x1231 (ite (and (distinct ((_ extract 8 8) ?x1210) (_ bv0 1)) true) (_ bv8 11) (ite (and (distinct ((_ extract 7 7) ?x1210) (_ bv0 1)) true) (_ bv7 11) (_ bv6 11)))))
 (let ((?x1124 (ite (and (distinct ((_ extract 10 9) ?x1210) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) ?x1210) (_ bv0 1)) true) (_ bv10 11) (_ bv9 11)) ?x1231)))
 (let ((?x6725 (ite (and (distinct ((_ extract 10 6) ?x1210) (_ bv0 5)) true) ?x1124 (ite (and (distinct ((_ extract 5 3) ?x1210) (_ bv0 3)) true) ?x3430 ?x2995))))
 (let ((?x5123 (ite (and (distinct ((_ extract 3 2) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 3 3) C) (_ bv0 1)) true) (_ bv3 11) (_ bv2 11)) (ite (and (distinct ((_ extract 1 1) C) (_ bv0 1)) true) (_ bv1 11) (_ bv0 11)))))
 (let ((?x2936 (ite (and (distinct ((_ extract 7 6) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 7 7) C) (_ bv0 1)) true) (_ bv7 11) (_ bv6 11)) (ite (and (distinct ((_ extract 5 5) C) (_ bv0 1)) true) (_ bv5 11) (_ bv4 11)))))
 (let ((?x6695 (ite (and (distinct ((_ extract 11 10) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 11 11) C) (_ bv0 1)) true) (_ bv11 11) (_ bv10 11)) (ite (and (distinct ((_ extract 9 9) C) (_ bv0 1)) true) (_ bv9 11) (_ bv8 11)))))
 (let ((?x5177 (ite (and (distinct ((_ extract 14 14) C) (_ bv0 1)) true) (_ bv14 11) (ite (and (distinct ((_ extract 13 13) C) (_ bv0 1)) true) (_ bv13 11) (_ bv12 11)))))
 (let ((?x7671 (ite (and (distinct ((_ extract 14 8) C) (_ bv0 7)) true) (ite (and (distinct ((_ extract 14 12) C) (_ bv0 3)) true) ?x5177 ?x6695) (ite (and (distinct ((_ extract 7 4) C) (_ bv0 4)) true) ?x2936 ?x5123))))
 (let ((?x8380 (ite (and (distinct ((_ extract 18 17) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 18 18) C) (_ bv0 1)) true) (_ bv18 11) (_ bv17 11)) (ite (and (distinct ((_ extract 16 16) C) (_ bv0 1)) true) (_ bv16 11) (_ bv15 11)))))
 (let ((?x7244 (ite (and (distinct ((_ extract 21 21) C) (_ bv0 1)) true) (_ bv21 11) (ite (and (distinct ((_ extract 20 20) C) (_ bv0 1)) true) (_ bv20 11) (_ bv19 11)))))
 (let ((?x6700 (ite (and (distinct ((_ extract 25 24) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 25 25) C) (_ bv0 1)) true) (_ bv25 11) (_ bv24 11)) (ite (and (distinct ((_ extract 23 23) C) (_ bv0 1)) true) (_ bv23 11) (_ bv22 11)))))
 (let ((?x6256 (ite (and (distinct ((_ extract 28 28) C) (_ bv0 1)) true) (_ bv28 11) (ite (and (distinct ((_ extract 27 27) C) (_ bv0 1)) true) (_ bv27 11) (_ bv26 11)))))
 (let ((?x8098 (ite (and (distinct ((_ extract 28 22) C) (_ bv0 7)) true) (ite (and (distinct ((_ extract 28 26) C) (_ bv0 3)) true) ?x6256 ?x6700) (ite (and (distinct ((_ extract 21 19) C) (_ bv0 3)) true) ?x7244 ?x8380))))
 (let ((?x7211 (ite (and (distinct ((_ extract 32 31) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 32 32) C) (_ bv0 1)) true) (_ bv32 11) (_ bv31 11)) (ite (and (distinct ((_ extract 30 30) C) (_ bv0 1)) true) (_ bv30 11) (_ bv29 11)))))
 (let ((?x4474 (ite (and (distinct ((_ extract 35 35) C) (_ bv0 1)) true) (_ bv35 11) (ite (and (distinct ((_ extract 34 34) C) (_ bv0 1)) true) (_ bv34 11) (_ bv33 11)))))
 (let ((?x7339 (ite (and (distinct ((_ extract 39 38) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 39 39) C) (_ bv0 1)) true) (_ bv39 11) (_ bv38 11)) (ite (and (distinct ((_ extract 37 37) C) (_ bv0 1)) true) (_ bv37 11) (_ bv36 11)))))
 (let ((?x2445 (ite (and (distinct ((_ extract 42 42) C) (_ bv0 1)) true) (_ bv42 11) (ite (and (distinct ((_ extract 41 41) C) (_ bv0 1)) true) (_ bv41 11) (_ bv40 11)))))
 (let ((?x4184 (ite (and (distinct ((_ extract 42 36) C) (_ bv0 7)) true) (ite (and (distinct ((_ extract 42 40) C) (_ bv0 3)) true) ?x2445 ?x7339) (ite (and (distinct ((_ extract 35 33) C) (_ bv0 3)) true) ?x4474 ?x7211))))
 (let ((?x5729 (ite (and (distinct ((_ extract 46 45) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 46 46) C) (_ bv0 1)) true) (_ bv46 11) (_ bv45 11)) (ite (and (distinct ((_ extract 44 44) C) (_ bv0 1)) true) (_ bv44 11) (_ bv43 11)))))
 (let ((?x1220 (ite (and (distinct ((_ extract 49 49) C) (_ bv0 1)) true) (_ bv49 11) (ite (and (distinct ((_ extract 48 48) C) (_ bv0 1)) true) (_ bv48 11) (_ bv47 11)))))
 (let ((?x4301 (ite (and (distinct ((_ extract 53 52) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 53 53) C) (_ bv0 1)) true) (_ bv53 11) (_ bv52 11)) (ite (and (distinct ((_ extract 51 51) C) (_ bv0 1)) true) (_ bv51 11) (_ bv50 11)))))
 (let ((?x6375 (ite (and (distinct ((_ extract 56 56) C) (_ bv0 1)) true) (_ bv56 11) (ite (and (distinct ((_ extract 55 55) C) (_ bv0 1)) true) (_ bv55 11) (_ bv54 11)))))
 (let ((?x1664 (ite (and (distinct ((_ extract 56 50) C) (_ bv0 7)) true) (ite (and (distinct ((_ extract 56 54) C) (_ bv0 3)) true) ?x6375 ?x4301) (ite (and (distinct ((_ extract 49 47) C) (_ bv0 3)) true) ?x1220 ?x5729))))
 (let ((?x5107 (ite (and (distinct ((_ extract 56 29) C) (_ bv0 28)) true) (ite (and (distinct ((_ extract 56 43) C) (_ bv0 14)) true) ?x1664 ?x4184) (ite (and (distinct ((_ extract 28 15) C) (_ bv0 14)) true) ?x8098 ?x7671))))
 (let ((?x8529 (bvsub ?x5107 ?x6725)))
 (let ((?x1744 (ite (bvsgt (_ bv0 11) ?x8529) (_ bv0 11) ?x8529)))
 (let ((?x3005 (bvsub ?x6725 ?x5107)))
 (let ((?x1189 (ite (bvsgt (_ bv0 11) ?x3005) (_ bv0 11) ?x3005)))
 (let ((?x7089 (bvadd (bvxor (bvlshr (bvshl ((_ extract 10 0) (bvand %Op C)) ?x1189) ?x1744) ?x1210) C3)))
 (let (($x2234 (and (distinct (ite (= (ite (= (bvand %Op C) (_ bv0 57)) (_ bv1 1) (_ bv0 1)) (_ bv1 1)) C2 C3) ?x7089) true)))
 (let ((?x8326 (ite (and (distinct ((_ extract 3 2) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 3 3) C) (_ bv0 1)) true) (_ bv3 32) (_ bv2 32)) (ite (and (distinct ((_ extract 1 1) C) (_ bv0 1)) true) (_ bv1 32) (_ bv0 32)))))
 (let ((?x2213 (ite (and (distinct ((_ extract 7 6) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 7 7) C) (_ bv0 1)) true) (_ bv7 32) (_ bv6 32)) (ite (and (distinct ((_ extract 5 5) C) (_ bv0 1)) true) (_ bv5 32) (_ bv4 32)))))
 (let ((?x8371 (ite (and (distinct ((_ extract 11 10) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 11 11) C) (_ bv0 1)) true) (_ bv11 32) (_ bv10 32)) (ite (and (distinct ((_ extract 9 9) C) (_ bv0 1)) true) (_ bv9 32) (_ bv8 32)))))
 (let ((?x6945 (ite (and (distinct ((_ extract 14 14) C) (_ bv0 1)) true) (_ bv14 32) (ite (and (distinct ((_ extract 13 13) C) (_ bv0 1)) true) (_ bv13 32) (_ bv12 32)))))
 (let ((?x4961 (ite (and (distinct ((_ extract 14 8) C) (_ bv0 7)) true) (ite (and (distinct ((_ extract 14 12) C) (_ bv0 3)) true) ?x6945 ?x8371) (ite (and (distinct ((_ extract 7 4) C) (_ bv0 4)) true) ?x2213 ?x8326))))
 (let ((?x6295 (ite (and (distinct ((_ extract 18 17) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 18 18) C) (_ bv0 1)) true) (_ bv18 32) (_ bv17 32)) (ite (and (distinct ((_ extract 16 16) C) (_ bv0 1)) true) (_ bv16 32) (_ bv15 32)))))
 (let ((?x5292 (ite (and (distinct ((_ extract 21 21) C) (_ bv0 1)) true) (_ bv21 32) (ite (and (distinct ((_ extract 20 20) C) (_ bv0 1)) true) (_ bv20 32) (_ bv19 32)))))
 (let ((?x4894 (ite (and (distinct ((_ extract 25 24) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 25 25) C) (_ bv0 1)) true) (_ bv25 32) (_ bv24 32)) (ite (and (distinct ((_ extract 23 23) C) (_ bv0 1)) true) (_ bv23 32) (_ bv22 32)))))
 (let ((?x4284 (ite (and (distinct ((_ extract 28 28) C) (_ bv0 1)) true) (_ bv28 32) (ite (and (distinct ((_ extract 27 27) C) (_ bv0 1)) true) (_ bv27 32) (_ bv26 32)))))
 (let ((?x6545 (ite (and (distinct ((_ extract 28 22) C) (_ bv0 7)) true) (ite (and (distinct ((_ extract 28 26) C) (_ bv0 3)) true) ?x4284 ?x4894) (ite (and (distinct ((_ extract 21 19) C) (_ bv0 3)) true) ?x5292 ?x6295))))
 (let ((?x3061 (ite (and (distinct ((_ extract 32 31) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 32 32) C) (_ bv0 1)) true) (_ bv32 32) (_ bv31 32)) (ite (and (distinct ((_ extract 30 30) C) (_ bv0 1)) true) (_ bv30 32) (_ bv29 32)))))
 (let ((?x2465 (ite (and (distinct ((_ extract 35 35) C) (_ bv0 1)) true) (_ bv35 32) (ite (and (distinct ((_ extract 34 34) C) (_ bv0 1)) true) (_ bv34 32) (_ bv33 32)))))
 (let ((?x5026 (ite (and (distinct ((_ extract 39 38) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 39 39) C) (_ bv0 1)) true) (_ bv39 32) (_ bv38 32)) (ite (and (distinct ((_ extract 37 37) C) (_ bv0 1)) true) (_ bv37 32) (_ bv36 32)))))
 (let ((?x1370 (ite (and (distinct ((_ extract 42 42) C) (_ bv0 1)) true) (_ bv42 32) (ite (and (distinct ((_ extract 41 41) C) (_ bv0 1)) true) (_ bv41 32) (_ bv40 32)))))
 (let ((?x3910 (ite (and (distinct ((_ extract 42 36) C) (_ bv0 7)) true) (ite (and (distinct ((_ extract 42 40) C) (_ bv0 3)) true) ?x1370 ?x5026) (ite (and (distinct ((_ extract 35 33) C) (_ bv0 3)) true) ?x2465 ?x3061))))
 (let ((?x8411 (ite (and (distinct ((_ extract 46 45) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 46 46) C) (_ bv0 1)) true) (_ bv46 32) (_ bv45 32)) (ite (and (distinct ((_ extract 44 44) C) (_ bv0 1)) true) (_ bv44 32) (_ bv43 32)))))
 (let ((?x6728 (ite (and (distinct ((_ extract 49 49) C) (_ bv0 1)) true) (_ bv49 32) (ite (and (distinct ((_ extract 48 48) C) (_ bv0 1)) true) (_ bv48 32) (_ bv47 32)))))
 (let ((?x5570 (ite (and (distinct ((_ extract 53 52) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 53 53) C) (_ bv0 1)) true) (_ bv53 32) (_ bv52 32)) (ite (and (distinct ((_ extract 51 51) C) (_ bv0 1)) true) (_ bv51 32) (_ bv50 32)))))
 (let ((?x3671 (ite (and (distinct ((_ extract 56 56) C) (_ bv0 1)) true) (_ bv56 32) (ite (and (distinct ((_ extract 55 55) C) (_ bv0 1)) true) (_ bv55 32) (_ bv54 32)))))
 (let ((?x4917 (ite (and (distinct ((_ extract 56 50) C) (_ bv0 7)) true) (ite (and (distinct ((_ extract 56 54) C) (_ bv0 3)) true) ?x3671 ?x5570) (ite (and (distinct ((_ extract 49 47) C) (_ bv0 3)) true) ?x6728 ?x8411))))
 (let ((?x4973 (ite (and (distinct ((_ extract 56 29) C) (_ bv0 28)) true) (ite (and (distinct ((_ extract 56 43) C) (_ bv0 14)) true) ?x4917 ?x3910) (ite (and (distinct ((_ extract 28 15) C) (_ bv0 14)) true) ?x6545 ?x4961))))
 (and (and (and (distinct C (_ bv0 57)) true) (= (bvand C (bvsub C (_ bv1 57))) (_ bv0 57))) (and (and (distinct ?x1210 (_ bv0 11)) true) (= (bvand ?x1210 (bvsub ?x1210 (_ bv1 11))) (_ bv0 11))) (bvslt ?x4973 (_ bv11 32)) $x2234))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
