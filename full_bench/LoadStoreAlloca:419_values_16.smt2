(set-info :status unknown)
(declare-fun %x () (_ BitVec 17))
(declare-fun mem0 () (_ BitVec 8))
(declare-fun %p1 () (_ BitVec 64))
(declare-fun %p2 () (_ BitVec 64))
(declare-fun |ana_equivalentAddressValues(%p1, %p2)| () (_ BitVec 1))
(assert
 (let ((?x14815 (concat ((_ extract 7 1) mem0) ((_ extract 0 0) %x))))
 (let ((?x8254 (ite (and (and (distinct %p1 (_ bv0 64)) true) (or true true) (= %p2 %p1)) ?x14815 mem0)))
 (let ((?x12216 ((_ extract 8 1) %x)))
 (let (($x3677 (or true true)))
 (let (($x9014 (and (distinct %p1 (_ bv0 64)) true)))
 (let ((?x9109 (ite (and $x9014 $x3677 (= %p2 (bvadd (bvadd %p1 (_ bv1 64)) (_ bv0 64)))) ?x12216 ?x8254)))
 (let ((?x13453 ((_ extract 16 9) %x)))
 (let ((?x11782 (ite (and $x9014 $x3677 (= %p2 (bvadd (bvadd %p1 (_ bv1 64)) (_ bv1 64)))) ?x13453 ?x9109)))
 (let ((?x23274 (ite (and $x9014 $x3677 (= (bvadd (bvadd %p2 (_ bv1 64)) (_ bv0 64)) %p1)) ?x14815 mem0)))
 (let (($x6807 (and $x9014 $x3677 (= (bvadd (bvadd %p2 (_ bv1 64)) (_ bv0 64)) (bvadd (bvadd %p1 (_ bv1 64)) (_ bv0 64))))))
 (let (($x13484 (and $x9014 $x3677 (= (bvadd (bvadd %p2 (_ bv1 64)) (_ bv0 64)) (bvadd (bvadd %p1 (_ bv1 64)) (_ bv1 64))))))
 (let ((?x5129 (ite (and $x9014 $x3677 (= (bvadd (bvadd %p2 (_ bv1 64)) (_ bv1 64)) %p1)) ?x14815 mem0)))
 (let (($x10734 (and $x9014 $x3677 (= (bvadd (bvadd %p2 (_ bv1 64)) (_ bv1 64)) (bvadd (bvadd %p1 (_ bv1 64)) (_ bv0 64))))))
 (let (($x1386 (and $x9014 $x3677 (= (bvadd (bvadd %p2 (_ bv1 64)) (_ bv1 64)) (bvadd (bvadd %p1 (_ bv1 64)) (_ bv1 64))))))
 (let ((?x4291 (concat (ite $x1386 ?x13453 (ite $x10734 ?x12216 ?x5129)) (ite $x13484 ?x13453 (ite $x6807 ?x12216 ?x23274)))))
 (let (($x17196 (= |ana_equivalentAddressValues(%p1, %p2)| (_ bv1 1))))
 (let (($x13463 (and (distinct %p2 (_ bv0 64)) true)))
 (and $x9014 $x3677 $x13463 $x3677 $x13463 $x3677 (=> $x17196 (= %p1 %p2)) $x17196 (and (distinct (concat ?x4291 ((_ extract 0 0) ?x11782)) %x) true))))))))))))))))))))
(check-sat)
