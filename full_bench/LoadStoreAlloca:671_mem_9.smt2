(set-info :status unknown)
(declare-fun mem0 () (_ BitVec 8))
(declare-fun %y () (_ BitVec 11))
(declare-fun %p2 () (_ BitVec 64))
(declare-fun idx () (_ BitVec 64))
(declare-fun %x () (_ BitVec 11))
(declare-fun %p1 () (_ BitVec 64))
(declare-fun |ana_equivalentAddressValues(%p1, %p2)| () (_ BitVec 1))
(assert
 (let ((?x9066 (ite (and (and (distinct %p2 (_ bv0 64)) true) (or true true) (= idx %p2)) (concat ((_ extract 7 3) mem0) ((_ extract 2 0) %y)) mem0)))
 (let (($x284 (or true true)))
 (let (($x14457 (and (distinct %p2 (_ bv0 64)) true)))
 (let ((?x10461 (ite (and $x14457 $x284 (= idx (bvadd (bvadd %p2 (_ bv1 64)) (_ bv0 64)))) ((_ extract 10 3) %y) ?x9066)))
 (let ((?x7172 (ite (and (and (distinct %p1 (_ bv0 64)) true) $x284 (= idx %p1)) (concat ((_ extract 7 3) mem0) ((_ extract 2 0) %x)) mem0)))
 (let (($x17212 (and (distinct %p1 (_ bv0 64)) true)))
 (let ((?x18561 (ite (and $x17212 $x284 (= idx (bvadd (bvadd %p1 (_ bv1 64)) (_ bv0 64)))) ((_ extract 10 3) %x) ?x7172)))
 (let ((?x16072 (ite (and $x17212 $x284 (= %p2 %p1)) (concat ((_ extract 7 3) mem0) ((_ extract 2 0) %x)) mem0)))
 (let ((?x11484 (ite (and $x17212 $x284 (= %p2 (bvadd (bvadd %p1 (_ bv1 64)) (_ bv0 64)))) ((_ extract 10 3) %x) ?x16072)))
 (let ((?x8029 (ite (and $x17212 $x284 $x14457 $x284 (= idx %p2)) (concat ((_ extract 7 3) ?x11484) ((_ extract 2 0) %y)) ?x18561)))
 (let ((?x4916 (ite (and $x17212 $x284 $x14457 $x284 (= idx (bvadd (bvadd %p2 (_ bv1 64)) (_ bv0 64)))) ((_ extract 10 3) %y) ?x8029)))
 (let (($x16308 (= |ana_equivalentAddressValues(%p1, %p2)| (_ bv1 1))))
 (and (=> $x16308 (= %p1 %p2)) $x16308 (and (distinct ?x4916 ?x10461) true)))))))))))))))
(check-sat)
