(set-info :source |
 Generated by Alive 0.1
 More info in N. P. Lopes, D. Menendez, S. Nagarakatte, J. Regehr.
 Provably Correct Peephole Optimizations with Alive. In PLDI'15.
|)

(set-info :status unknown)
(declare-fun mem0 () (_ BitVec 8))
(declare-fun |ana_MaskedValueIsZero(%B, ((1 << (width(C2) - countLeadingZeros(((C2 - 1) ^ C2)))) - 1))| () (_ BitVec 1))
(declare-fun C2 () (_ BitVec 25))
(declare-fun C1 () (_ BitVec 25))
(declare-fun %B () (_ BitVec 25))
(assert
 (let (($x927 (and (distinct mem0 mem0) true)))
 (let (($x131713 (= |ana_MaskedValueIsZero(%B, ((1 << (width(C2) - countLeadingZeros(((C2 - 1) ^ C2)))) - 1))| (_ bv1 1))))
 (let ((?x18311 (bvsub C2 (_ bv1 25))))
 (let ((?x144873 (bvor ?x18311 C2)))
 (let (($x146614 (and (and (distinct ?x144873 (_ bv0 25)) true) (= (bvand (bvadd ?x144873 (_ bv1 25)) ?x144873) (_ bv0 25)) $x131713)))
 (let (($x144286 (or (= (bvand (bvadd C2 (_ bv1 25)) (bvsub (bvadd C2 (_ bv1 25)) (_ bv1 25))) (_ bv0 25)) $x146614)))
 (let ((?x130232 (bvand C1 C2)))
 (let (($x145013 (= ?x130232 C2)))
 (let ((?x139873 (ite (= ((_ extract 1 1) (bvxor ?x18311 C2)) (_ bv1 1)) (_ bv23 25) (ite (= ((_ extract 0 0) (bvxor ?x18311 C2)) (_ bv1 1)) (_ bv24 25) (_ bv25 25)))))
 (let ((?x141471 (ite (= ((_ extract 3 3) (bvxor ?x18311 C2)) (_ bv1 1)) (_ bv21 25) (ite (= ((_ extract 2 2) (bvxor ?x18311 C2)) (_ bv1 1)) (_ bv22 25) ?x139873))))
 (let ((?x145334 (ite (= ((_ extract 5 5) (bvxor ?x18311 C2)) (_ bv1 1)) (_ bv19 25) (ite (= ((_ extract 4 4) (bvxor ?x18311 C2)) (_ bv1 1)) (_ bv20 25) ?x141471))))
 (let ((?x144448 (ite (= ((_ extract 7 7) (bvxor ?x18311 C2)) (_ bv1 1)) (_ bv17 25) (ite (= ((_ extract 6 6) (bvxor ?x18311 C2)) (_ bv1 1)) (_ bv18 25) ?x145334))))
 (let ((?x142505 (ite (= ((_ extract 9 9) (bvxor ?x18311 C2)) (_ bv1 1)) (_ bv15 25) (ite (= ((_ extract 8 8) (bvxor ?x18311 C2)) (_ bv1 1)) (_ bv16 25) ?x144448))))
 (let ((?x142163 (ite (= ((_ extract 11 11) (bvxor ?x18311 C2)) (_ bv1 1)) (_ bv13 25) (ite (= ((_ extract 10 10) (bvxor ?x18311 C2)) (_ bv1 1)) (_ bv14 25) ?x142505))))
 (let ((?x143264 (ite (= ((_ extract 13 13) (bvxor ?x18311 C2)) (_ bv1 1)) (_ bv11 25) (ite (= ((_ extract 12 12) (bvxor ?x18311 C2)) (_ bv1 1)) (_ bv12 25) ?x142163))))
 (let ((?x136990 (ite (= ((_ extract 15 15) (bvxor ?x18311 C2)) (_ bv1 1)) (_ bv9 25) (ite (= ((_ extract 14 14) (bvxor ?x18311 C2)) (_ bv1 1)) (_ bv10 25) ?x143264))))
 (let ((?x146938 (ite (= ((_ extract 17 17) (bvxor ?x18311 C2)) (_ bv1 1)) (_ bv7 25) (ite (= ((_ extract 16 16) (bvxor ?x18311 C2)) (_ bv1 1)) (_ bv8 25) ?x136990))))
 (let ((?x143942 (ite (= ((_ extract 19 19) (bvxor ?x18311 C2)) (_ bv1 1)) (_ bv5 25) (ite (= ((_ extract 18 18) (bvxor ?x18311 C2)) (_ bv1 1)) (_ bv6 25) ?x146938))))
 (let ((?x143662 (ite (= ((_ extract 21 21) (bvxor ?x18311 C2)) (_ bv1 1)) (_ bv3 25) (ite (= ((_ extract 20 20) (bvxor ?x18311 C2)) (_ bv1 1)) (_ bv4 25) ?x143942))))
 (let ((?x144852 (ite (= ((_ extract 23 23) (bvxor ?x18311 C2)) (_ bv1 1)) (_ bv1 25) (ite (= ((_ extract 22 22) (bvxor ?x18311 C2)) (_ bv1 1)) (_ bv2 25) ?x143662))))
 (let ((?x144748 (bvshl (_ bv1 25) (bvsub (_ bv25 25) (ite (= ((_ extract 24 24) (bvxor ?x18311 C2)) (_ bv1 1)) (_ bv0 25) ?x144852)))))
 (let (($x146723 (=> $x131713 (= (bvand %B (bvsub ?x144748 (_ bv1 25))) (_ bv0 25)))))
 (and $x146723 $x145013 $x144286 $x927))))))))))))))))))))))))
(check-sat)
