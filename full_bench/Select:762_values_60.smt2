(set-info :status unknown)
(declare-fun C3 () (_ BitVec 11))
(declare-fun C2 () (_ BitVec 11))
(declare-fun C () (_ BitVec 64))
(declare-fun %Op () (_ BitVec 64))
(assert
 (let ((?x1188 (bvsub C2 C3)))
 (let ((?x4928 (ite (and (distinct ((_ extract 2 2) ?x1188) (_ bv0 1)) true) (_ bv2 11) (ite (and (distinct ((_ extract 1 1) ?x1188) (_ bv0 1)) true) (_ bv1 11) (_ bv0 11)))))
 (let ((?x6710 (ite (and (distinct ((_ extract 5 5) ?x1188) (_ bv0 1)) true) (_ bv5 11) (ite (and (distinct ((_ extract 4 4) ?x1188) (_ bv0 1)) true) (_ bv4 11) (_ bv3 11)))))
 (let ((?x1752 (ite (and (distinct ((_ extract 8 8) ?x1188) (_ bv0 1)) true) (_ bv8 11) (ite (and (distinct ((_ extract 7 7) ?x1188) (_ bv0 1)) true) (_ bv7 11) (_ bv6 11)))))
 (let ((?x1708 (ite (and (distinct ((_ extract 10 9) ?x1188) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) ?x1188) (_ bv0 1)) true) (_ bv10 11) (_ bv9 11)) ?x1752)))
 (let ((?x5098 (ite (and (distinct ((_ extract 10 6) ?x1188) (_ bv0 5)) true) ?x1708 (ite (and (distinct ((_ extract 5 3) ?x1188) (_ bv0 3)) true) ?x6710 ?x4928))))
 (let ((?x6359 (ite (and (distinct ((_ extract 3 2) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 3 3) C) (_ bv0 1)) true) (_ bv3 11) (_ bv2 11)) (ite (and (distinct ((_ extract 1 1) C) (_ bv0 1)) true) (_ bv1 11) (_ bv0 11)))))
 (let ((?x2546 (ite (and (distinct ((_ extract 7 6) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 7 7) C) (_ bv0 1)) true) (_ bv7 11) (_ bv6 11)) (ite (and (distinct ((_ extract 5 5) C) (_ bv0 1)) true) (_ bv5 11) (_ bv4 11)))))
 (let ((?x7230 (ite (and (distinct ((_ extract 11 10) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 11 11) C) (_ bv0 1)) true) (_ bv11 11) (_ bv10 11)) (ite (and (distinct ((_ extract 9 9) C) (_ bv0 1)) true) (_ bv9 11) (_ bv8 11)))))
 (let ((?x7098 (ite (and (distinct ((_ extract 15 14) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 15 15) C) (_ bv0 1)) true) (_ bv15 11) (_ bv14 11)) (ite (and (distinct ((_ extract 13 13) C) (_ bv0 1)) true) (_ bv13 11) (_ bv12 11)))))
 (let ((?x2749 (ite (and (distinct ((_ extract 15 8) C) (_ bv0 8)) true) (ite (and (distinct ((_ extract 15 12) C) (_ bv0 4)) true) ?x7098 ?x7230) (ite (and (distinct ((_ extract 7 4) C) (_ bv0 4)) true) ?x2546 ?x6359))))
 (let ((?x2591 (ite (and (distinct ((_ extract 19 18) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 19 19) C) (_ bv0 1)) true) (_ bv19 11) (_ bv18 11)) (ite (and (distinct ((_ extract 17 17) C) (_ bv0 1)) true) (_ bv17 11) (_ bv16 11)))))
 (let ((?x2118 (ite (and (distinct ((_ extract 23 22) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 23 23) C) (_ bv0 1)) true) (_ bv23 11) (_ bv22 11)) (ite (and (distinct ((_ extract 21 21) C) (_ bv0 1)) true) (_ bv21 11) (_ bv20 11)))))
 (let ((?x7646 (ite (and (distinct ((_ extract 27 26) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 27 27) C) (_ bv0 1)) true) (_ bv27 11) (_ bv26 11)) (ite (and (distinct ((_ extract 25 25) C) (_ bv0 1)) true) (_ bv25 11) (_ bv24 11)))))
 (let ((?x6694 (ite (and (distinct ((_ extract 31 30) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 31 31) C) (_ bv0 1)) true) (_ bv31 11) (_ bv30 11)) (ite (and (distinct ((_ extract 29 29) C) (_ bv0 1)) true) (_ bv29 11) (_ bv28 11)))))
 (let ((?x2189 (ite (and (distinct ((_ extract 31 24) C) (_ bv0 8)) true) (ite (and (distinct ((_ extract 31 28) C) (_ bv0 4)) true) ?x6694 ?x7646) (ite (and (distinct ((_ extract 23 20) C) (_ bv0 4)) true) ?x2118 ?x2591))))
 (let ((?x8528 (ite (and (distinct ((_ extract 35 34) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 35 35) C) (_ bv0 1)) true) (_ bv35 11) (_ bv34 11)) (ite (and (distinct ((_ extract 33 33) C) (_ bv0 1)) true) (_ bv33 11) (_ bv32 11)))))
 (let ((?x5637 (ite (and (distinct ((_ extract 39 38) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 39 39) C) (_ bv0 1)) true) (_ bv39 11) (_ bv38 11)) (ite (and (distinct ((_ extract 37 37) C) (_ bv0 1)) true) (_ bv37 11) (_ bv36 11)))))
 (let ((?x5441 (ite (and (distinct ((_ extract 43 42) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 43 43) C) (_ bv0 1)) true) (_ bv43 11) (_ bv42 11)) (ite (and (distinct ((_ extract 41 41) C) (_ bv0 1)) true) (_ bv41 11) (_ bv40 11)))))
 (let ((?x4612 (ite (and (distinct ((_ extract 47 46) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 47 47) C) (_ bv0 1)) true) (_ bv47 11) (_ bv46 11)) (ite (and (distinct ((_ extract 45 45) C) (_ bv0 1)) true) (_ bv45 11) (_ bv44 11)))))
 (let ((?x2651 (ite (and (distinct ((_ extract 47 40) C) (_ bv0 8)) true) (ite (and (distinct ((_ extract 47 44) C) (_ bv0 4)) true) ?x4612 ?x5441) (ite (and (distinct ((_ extract 39 36) C) (_ bv0 4)) true) ?x5637 ?x8528))))
 (let ((?x2726 (ite (and (distinct ((_ extract 51 50) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 51 51) C) (_ bv0 1)) true) (_ bv51 11) (_ bv50 11)) (ite (and (distinct ((_ extract 49 49) C) (_ bv0 1)) true) (_ bv49 11) (_ bv48 11)))))
 (let ((?x6208 (ite (and (distinct ((_ extract 55 54) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 55 55) C) (_ bv0 1)) true) (_ bv55 11) (_ bv54 11)) (ite (and (distinct ((_ extract 53 53) C) (_ bv0 1)) true) (_ bv53 11) (_ bv52 11)))))
 (let ((?x5577 (ite (and (distinct ((_ extract 59 58) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 59 59) C) (_ bv0 1)) true) (_ bv59 11) (_ bv58 11)) (ite (and (distinct ((_ extract 57 57) C) (_ bv0 1)) true) (_ bv57 11) (_ bv56 11)))))
 (let ((?x1739 (ite (and (distinct ((_ extract 63 62) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 63 63) C) (_ bv0 1)) true) (_ bv63 11) (_ bv62 11)) (ite (and (distinct ((_ extract 61 61) C) (_ bv0 1)) true) (_ bv61 11) (_ bv60 11)))))
 (let ((?x6622 (ite (and (distinct ((_ extract 63 56) C) (_ bv0 8)) true) (ite (and (distinct ((_ extract 63 60) C) (_ bv0 4)) true) ?x1739 ?x5577) (ite (and (distinct ((_ extract 55 52) C) (_ bv0 4)) true) ?x6208 ?x2726))))
 (let ((?x4623 (ite (and (distinct ((_ extract 63 32) C) (_ bv0 32)) true) (ite (and (distinct ((_ extract 63 48) C) (_ bv0 16)) true) ?x6622 ?x2651) (ite (and (distinct ((_ extract 31 16) C) (_ bv0 16)) true) ?x2189 ?x2749))))
 (let ((?x7821 (bvsub ?x4623 ?x5098)))
 (let ((?x1783 (ite (bvsgt (_ bv0 11) ?x7821) (_ bv0 11) ?x7821)))
 (let ((?x1459 (bvsub ?x5098 ?x4623)))
 (let ((?x8174 (ite (bvsgt (_ bv0 11) ?x1459) (_ bv0 11) ?x1459)))
 (let ((?x4522 (bvadd (bvxor (bvlshr (bvshl ((_ extract 10 0) (bvand %Op C)) ?x8174) ?x1783) ?x1188) C3)))
 (let (($x4156 (and (distinct (ite (= (ite (= (bvand %Op C) (_ bv0 64)) (_ bv1 1) (_ bv0 1)) (_ bv1 1)) C2 C3) ?x4522) true)))
 (let ((?x7978 (ite (and (distinct ((_ extract 3 2) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 3 3) C) (_ bv0 1)) true) (_ bv3 32) (_ bv2 32)) (ite (and (distinct ((_ extract 1 1) C) (_ bv0 1)) true) (_ bv1 32) (_ bv0 32)))))
 (let ((?x5309 (ite (and (distinct ((_ extract 7 6) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 7 7) C) (_ bv0 1)) true) (_ bv7 32) (_ bv6 32)) (ite (and (distinct ((_ extract 5 5) C) (_ bv0 1)) true) (_ bv5 32) (_ bv4 32)))))
 (let ((?x2472 (ite (and (distinct ((_ extract 11 10) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 11 11) C) (_ bv0 1)) true) (_ bv11 32) (_ bv10 32)) (ite (and (distinct ((_ extract 9 9) C) (_ bv0 1)) true) (_ bv9 32) (_ bv8 32)))))
 (let ((?x4605 (ite (and (distinct ((_ extract 15 14) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 15 15) C) (_ bv0 1)) true) (_ bv15 32) (_ bv14 32)) (ite (and (distinct ((_ extract 13 13) C) (_ bv0 1)) true) (_ bv13 32) (_ bv12 32)))))
 (let ((?x2825 (ite (and (distinct ((_ extract 15 8) C) (_ bv0 8)) true) (ite (and (distinct ((_ extract 15 12) C) (_ bv0 4)) true) ?x4605 ?x2472) (ite (and (distinct ((_ extract 7 4) C) (_ bv0 4)) true) ?x5309 ?x7978))))
 (let ((?x7088 (ite (and (distinct ((_ extract 19 18) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 19 19) C) (_ bv0 1)) true) (_ bv19 32) (_ bv18 32)) (ite (and (distinct ((_ extract 17 17) C) (_ bv0 1)) true) (_ bv17 32) (_ bv16 32)))))
 (let ((?x6720 (ite (and (distinct ((_ extract 23 22) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 23 23) C) (_ bv0 1)) true) (_ bv23 32) (_ bv22 32)) (ite (and (distinct ((_ extract 21 21) C) (_ bv0 1)) true) (_ bv21 32) (_ bv20 32)))))
 (let ((?x5639 (ite (and (distinct ((_ extract 27 26) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 27 27) C) (_ bv0 1)) true) (_ bv27 32) (_ bv26 32)) (ite (and (distinct ((_ extract 25 25) C) (_ bv0 1)) true) (_ bv25 32) (_ bv24 32)))))
 (let ((?x4663 (ite (and (distinct ((_ extract 31 30) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 31 31) C) (_ bv0 1)) true) (_ bv31 32) (_ bv30 32)) (ite (and (distinct ((_ extract 29 29) C) (_ bv0 1)) true) (_ bv29 32) (_ bv28 32)))))
 (let ((?x7547 (ite (and (distinct ((_ extract 31 24) C) (_ bv0 8)) true) (ite (and (distinct ((_ extract 31 28) C) (_ bv0 4)) true) ?x4663 ?x5639) (ite (and (distinct ((_ extract 23 20) C) (_ bv0 4)) true) ?x6720 ?x7088))))
 (let ((?x3681 (ite (and (distinct ((_ extract 35 34) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 35 35) C) (_ bv0 1)) true) (_ bv35 32) (_ bv34 32)) (ite (and (distinct ((_ extract 33 33) C) (_ bv0 1)) true) (_ bv33 32) (_ bv32 32)))))
 (let ((?x3061 (ite (and (distinct ((_ extract 39 38) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 39 39) C) (_ bv0 1)) true) (_ bv39 32) (_ bv38 32)) (ite (and (distinct ((_ extract 37 37) C) (_ bv0 1)) true) (_ bv37 32) (_ bv36 32)))))
 (let ((?x2091 (ite (and (distinct ((_ extract 43 42) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 43 43) C) (_ bv0 1)) true) (_ bv43 32) (_ bv42 32)) (ite (and (distinct ((_ extract 41 41) C) (_ bv0 1)) true) (_ bv41 32) (_ bv40 32)))))
 (let ((?x3136 (ite (and (distinct ((_ extract 47 46) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 47 47) C) (_ bv0 1)) true) (_ bv47 32) (_ bv46 32)) (ite (and (distinct ((_ extract 45 45) C) (_ bv0 1)) true) (_ bv45 32) (_ bv44 32)))))
 (let ((?x4526 (ite (and (distinct ((_ extract 47 40) C) (_ bv0 8)) true) (ite (and (distinct ((_ extract 47 44) C) (_ bv0 4)) true) ?x3136 ?x2091) (ite (and (distinct ((_ extract 39 36) C) (_ bv0 4)) true) ?x3061 ?x3681))))
 (let ((?x7322 (ite (and (distinct ((_ extract 51 50) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 51 51) C) (_ bv0 1)) true) (_ bv51 32) (_ bv50 32)) (ite (and (distinct ((_ extract 49 49) C) (_ bv0 1)) true) (_ bv49 32) (_ bv48 32)))))
 (let ((?x5854 (ite (and (distinct ((_ extract 55 54) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 55 55) C) (_ bv0 1)) true) (_ bv55 32) (_ bv54 32)) (ite (and (distinct ((_ extract 53 53) C) (_ bv0 1)) true) (_ bv53 32) (_ bv52 32)))))
 (let ((?x6129 (ite (and (distinct ((_ extract 59 58) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 59 59) C) (_ bv0 1)) true) (_ bv59 32) (_ bv58 32)) (ite (and (distinct ((_ extract 57 57) C) (_ bv0 1)) true) (_ bv57 32) (_ bv56 32)))))
 (let ((?x6063 (ite (and (distinct ((_ extract 63 62) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 63 63) C) (_ bv0 1)) true) (_ bv63 32) (_ bv62 32)) (ite (and (distinct ((_ extract 61 61) C) (_ bv0 1)) true) (_ bv61 32) (_ bv60 32)))))
 (let ((?x5578 (ite (and (distinct ((_ extract 63 56) C) (_ bv0 8)) true) (ite (and (distinct ((_ extract 63 60) C) (_ bv0 4)) true) ?x6063 ?x6129) (ite (and (distinct ((_ extract 55 52) C) (_ bv0 4)) true) ?x5854 ?x7322))))
 (let ((?x8523 (ite (and (distinct ((_ extract 63 32) C) (_ bv0 32)) true) (ite (and (distinct ((_ extract 63 48) C) (_ bv0 16)) true) ?x5578 ?x4526) (ite (and (distinct ((_ extract 31 16) C) (_ bv0 16)) true) ?x7547 ?x2825))))
 (and (and (and (distinct C (_ bv0 64)) true) (= (bvand C (bvsub C (_ bv1 64))) (_ bv0 64))) (and (and (distinct ?x1188 (_ bv0 11)) true) (= (bvand ?x1188 (bvsub ?x1188 (_ bv1 11))) (_ bv0 11))) (bvslt ?x8523 (_ bv11 32)) $x4156))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
