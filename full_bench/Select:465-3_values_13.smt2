(set-info :status unknown)
(declare-fun %Y () (_ BitVec 11))
(declare-fun C2 () (_ BitVec 11))
(declare-fun C1 () (_ BitVec 15))
(declare-fun %X () (_ BitVec 15))
(assert
 (let ((?x5593 (ite (and (distinct ((_ extract 2 2) C2) (_ bv0 1)) true) (_ bv2 15) (ite (and (distinct ((_ extract 1 1) C2) (_ bv0 1)) true) (_ bv1 15) (_ bv0 15)))))
 (let ((?x20742 (ite (and (distinct ((_ extract 5 5) C2) (_ bv0 1)) true) (_ bv5 15) (ite (and (distinct ((_ extract 4 4) C2) (_ bv0 1)) true) (_ bv4 15) (_ bv3 15)))))
 (let ((?x6721 (ite (and (distinct ((_ extract 8 8) C2) (_ bv0 1)) true) (_ bv8 15) (ite (and (distinct ((_ extract 7 7) C2) (_ bv0 1)) true) (_ bv7 15) (_ bv6 15)))))
 (let ((?x16915 (ite (and (distinct ((_ extract 10 9) C2) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) C2) (_ bv0 1)) true) (_ bv10 15) (_ bv9 15)) ?x6721)))
 (let ((?x18571 (ite (and (distinct ((_ extract 10 6) C2) (_ bv0 5)) true) ?x16915 (ite (and (distinct ((_ extract 5 3) C2) (_ bv0 3)) true) ?x20742 ?x5593))))
 (let ((?x10544 (ite (and (distinct ((_ extract 3 2) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 3 3) C1) (_ bv0 1)) true) (_ bv3 15) (_ bv2 15)) (ite (and (distinct ((_ extract 1 1) C1) (_ bv0 1)) true) (_ bv1 15) (_ bv0 15)))))
 (let ((?x20270 (ite (and (distinct ((_ extract 7 6) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 7 7) C1) (_ bv0 1)) true) (_ bv7 15) (_ bv6 15)) (ite (and (distinct ((_ extract 5 5) C1) (_ bv0 1)) true) (_ bv5 15) (_ bv4 15)))))
 (let ((?x12318 (ite (and (distinct ((_ extract 11 10) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 11 11) C1) (_ bv0 1)) true) (_ bv11 15) (_ bv10 15)) (ite (and (distinct ((_ extract 9 9) C1) (_ bv0 1)) true) (_ bv9 15) (_ bv8 15)))))
 (let ((?x5996 (ite (and (distinct ((_ extract 14 14) C1) (_ bv0 1)) true) (_ bv14 15) (ite (and (distinct ((_ extract 13 13) C1) (_ bv0 1)) true) (_ bv13 15) (_ bv12 15)))))
 (let ((?x6197 (ite (and (distinct ((_ extract 14 8) C1) (_ bv0 7)) true) (ite (and (distinct ((_ extract 14 12) C1) (_ bv0 3)) true) ?x5996 ?x12318) (ite (and (distinct ((_ extract 7 4) C1) (_ bv0 4)) true) ?x20270 ?x10544))))
 (let ((?x2403 (bvsub ?x6197 ?x18571)))
 (let ((?x12267 (bvand %X C1)))
 (let (($x8142 (and (distinct (ite (= (ite (= ?x12267 (_ bv0 15)) (_ bv1 1) (_ bv0 1)) (_ bv1 1)) %Y (bvor %Y C2)) (bvor ((_ extract 10 0) (bvlshr ?x12267 ?x2403)) %Y)) true)))
 (let ((?x963 (ite (and (distinct ((_ extract 3 2) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 3 3) C1) (_ bv0 1)) true) (_ bv3 32) (_ bv2 32)) (ite (and (distinct ((_ extract 1 1) C1) (_ bv0 1)) true) (_ bv1 32) (_ bv0 32)))))
 (let ((?x24 (ite (and (distinct ((_ extract 7 6) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 7 7) C1) (_ bv0 1)) true) (_ bv7 32) (_ bv6 32)) (ite (and (distinct ((_ extract 5 5) C1) (_ bv0 1)) true) (_ bv5 32) (_ bv4 32)))))
 (let ((?x11059 (ite (and (distinct ((_ extract 11 10) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 11 11) C1) (_ bv0 1)) true) (_ bv11 32) (_ bv10 32)) (ite (and (distinct ((_ extract 9 9) C1) (_ bv0 1)) true) (_ bv9 32) (_ bv8 32)))))
 (let ((?x22170 (ite (and (distinct ((_ extract 14 14) C1) (_ bv0 1)) true) (_ bv14 32) (ite (and (distinct ((_ extract 13 13) C1) (_ bv0 1)) true) (_ bv13 32) (_ bv12 32)))))
 (let ((?x228 (ite (and (distinct ((_ extract 14 8) C1) (_ bv0 7)) true) (ite (and (distinct ((_ extract 14 12) C1) (_ bv0 3)) true) ?x22170 ?x11059) (ite (and (distinct ((_ extract 7 4) C1) (_ bv0 4)) true) ?x24 ?x963))))
 (let ((?x8601 (ite (and (distinct ((_ extract 2 2) C2) (_ bv0 1)) true) (_ bv2 32) (ite (and (distinct ((_ extract 1 1) C2) (_ bv0 1)) true) (_ bv1 32) (_ bv0 32)))))
 (let ((?x8646 (ite (and (distinct ((_ extract 5 5) C2) (_ bv0 1)) true) (_ bv5 32) (ite (and (distinct ((_ extract 4 4) C2) (_ bv0 1)) true) (_ bv4 32) (_ bv3 32)))))
 (let ((?x267 (ite (and (distinct ((_ extract 8 8) C2) (_ bv0 1)) true) (_ bv8 32) (ite (and (distinct ((_ extract 7 7) C2) (_ bv0 1)) true) (_ bv7 32) (_ bv6 32)))))
 (let ((?x21957 (ite (and (distinct ((_ extract 10 9) C2) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) C2) (_ bv0 1)) true) (_ bv10 32) (_ bv9 32)) ?x267)))
 (let ((?x17709 (ite (and (distinct ((_ extract 10 6) C2) (_ bv0 5)) true) ?x21957 (ite (and (distinct ((_ extract 5 3) C2) (_ bv0 3)) true) ?x8646 ?x8601))))
 (and (and (and (distinct C1 (_ bv0 15)) true) (= (bvand C1 (bvsub C1 (_ bv1 15))) (_ bv0 15))) (and (and (distinct C2 (_ bv0 11)) true) (= (bvand C2 (bvsub C2 (_ bv1 11))) (_ bv0 11))) (bvslt ?x17709 ?x228) $x8142)))))))))))))))))))))))))
(check-sat)
