(set-info :status unknown)
(declare-fun %Y () (_ BitVec 11))
(declare-fun C1 () (_ BitVec 58))
(declare-fun C2 () (_ BitVec 11))
(declare-fun %X () (_ BitVec 58))
(assert
 (let ((?x6851 (ite (and (distinct ((_ extract 3 2) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 3 3) C1) (_ bv0 1)) true) (_ bv3 11) (_ bv2 11)) (ite (and (distinct ((_ extract 1 1) C1) (_ bv0 1)) true) (_ bv1 11) (_ bv0 11)))))
 (let ((?x4990 (ite (and (distinct ((_ extract 7 6) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 7 7) C1) (_ bv0 1)) true) (_ bv7 11) (_ bv6 11)) (ite (and (distinct ((_ extract 5 5) C1) (_ bv0 1)) true) (_ bv5 11) (_ bv4 11)))))
 (let ((?x1792 (ite (and (distinct ((_ extract 11 10) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 11 11) C1) (_ bv0 1)) true) (_ bv11 11) (_ bv10 11)) (ite (and (distinct ((_ extract 9 9) C1) (_ bv0 1)) true) (_ bv9 11) (_ bv8 11)))))
 (let ((?x2559 (ite (and (distinct ((_ extract 14 14) C1) (_ bv0 1)) true) (_ bv14 11) (ite (and (distinct ((_ extract 13 13) C1) (_ bv0 1)) true) (_ bv13 11) (_ bv12 11)))))
 (let ((?x5244 (ite (and (distinct ((_ extract 14 8) C1) (_ bv0 7)) true) (ite (and (distinct ((_ extract 14 12) C1) (_ bv0 3)) true) ?x2559 ?x1792) (ite (and (distinct ((_ extract 7 4) C1) (_ bv0 4)) true) ?x4990 ?x6851))))
 (let ((?x2321 (ite (and (distinct ((_ extract 18 17) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 18 18) C1) (_ bv0 1)) true) (_ bv18 11) (_ bv17 11)) (ite (and (distinct ((_ extract 16 16) C1) (_ bv0 1)) true) (_ bv16 11) (_ bv15 11)))))
 (let ((?x5701 (ite (and (distinct ((_ extract 21 21) C1) (_ bv0 1)) true) (_ bv21 11) (ite (and (distinct ((_ extract 20 20) C1) (_ bv0 1)) true) (_ bv20 11) (_ bv19 11)))))
 (let ((?x1919 (ite (and (distinct ((_ extract 25 24) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 25 25) C1) (_ bv0 1)) true) (_ bv25 11) (_ bv24 11)) (ite (and (distinct ((_ extract 23 23) C1) (_ bv0 1)) true) (_ bv23 11) (_ bv22 11)))))
 (let ((?x6859 (ite (and (distinct ((_ extract 28 28) C1) (_ bv0 1)) true) (_ bv28 11) (ite (and (distinct ((_ extract 27 27) C1) (_ bv0 1)) true) (_ bv27 11) (_ bv26 11)))))
 (let ((?x5491 (ite (and (distinct ((_ extract 28 22) C1) (_ bv0 7)) true) (ite (and (distinct ((_ extract 28 26) C1) (_ bv0 3)) true) ?x6859 ?x1919) (ite (and (distinct ((_ extract 21 19) C1) (_ bv0 3)) true) ?x5701 ?x2321))))
 (let ((?x5901 (ite (and (distinct ((_ extract 32 31) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 32 32) C1) (_ bv0 1)) true) (_ bv32 11) (_ bv31 11)) (ite (and (distinct ((_ extract 30 30) C1) (_ bv0 1)) true) (_ bv30 11) (_ bv29 11)))))
 (let ((?x4076 (ite (and (distinct ((_ extract 36 35) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 36 36) C1) (_ bv0 1)) true) (_ bv36 11) (_ bv35 11)) (ite (and (distinct ((_ extract 34 34) C1) (_ bv0 1)) true) (_ bv34 11) (_ bv33 11)))))
 (let ((?x4019 (ite (and (distinct ((_ extract 40 39) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 40 40) C1) (_ bv0 1)) true) (_ bv40 11) (_ bv39 11)) (ite (and (distinct ((_ extract 38 38) C1) (_ bv0 1)) true) (_ bv38 11) (_ bv37 11)))))
 (let ((?x2136 (ite (and (distinct ((_ extract 43 43) C1) (_ bv0 1)) true) (_ bv43 11) (ite (and (distinct ((_ extract 42 42) C1) (_ bv0 1)) true) (_ bv42 11) (_ bv41 11)))))
 (let ((?x5730 (ite (and (distinct ((_ extract 43 37) C1) (_ bv0 7)) true) (ite (and (distinct ((_ extract 43 41) C1) (_ bv0 3)) true) ?x2136 ?x4019) (ite (and (distinct ((_ extract 36 33) C1) (_ bv0 4)) true) ?x4076 ?x5901))))
 (let ((?x1964 (ite (and (distinct ((_ extract 47 46) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 47 47) C1) (_ bv0 1)) true) (_ bv47 11) (_ bv46 11)) (ite (and (distinct ((_ extract 45 45) C1) (_ bv0 1)) true) (_ bv45 11) (_ bv44 11)))))
 (let ((?x4773 (ite (and (distinct ((_ extract 50 50) C1) (_ bv0 1)) true) (_ bv50 11) (ite (and (distinct ((_ extract 49 49) C1) (_ bv0 1)) true) (_ bv49 11) (_ bv48 11)))))
 (let ((?x4736 (ite (and (distinct ((_ extract 54 53) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 54 54) C1) (_ bv0 1)) true) (_ bv54 11) (_ bv53 11)) (ite (and (distinct ((_ extract 52 52) C1) (_ bv0 1)) true) (_ bv52 11) (_ bv51 11)))))
 (let ((?x1399 (ite (and (distinct ((_ extract 57 57) C1) (_ bv0 1)) true) (_ bv57 11) (ite (and (distinct ((_ extract 56 56) C1) (_ bv0 1)) true) (_ bv56 11) (_ bv55 11)))))
 (let ((?x1222 (ite (and (distinct ((_ extract 57 51) C1) (_ bv0 7)) true) (ite (and (distinct ((_ extract 57 55) C1) (_ bv0 3)) true) ?x1399 ?x4736) (ite (and (distinct ((_ extract 50 48) C1) (_ bv0 3)) true) ?x4773 ?x1964))))
 (let ((?x5582 (ite (and (distinct ((_ extract 57 29) C1) (_ bv0 29)) true) (ite (and (distinct ((_ extract 57 44) C1) (_ bv0 14)) true) ?x1222 ?x5730) (ite (and (distinct ((_ extract 28 15) C1) (_ bv0 14)) true) ?x5491 ?x5244))))
 (let ((?x2157 (ite (and (distinct ((_ extract 2 2) C2) (_ bv0 1)) true) (_ bv2 11) (ite (and (distinct ((_ extract 1 1) C2) (_ bv0 1)) true) (_ bv1 11) (_ bv0 11)))))
 (let ((?x5131 (ite (and (distinct ((_ extract 5 5) C2) (_ bv0 1)) true) (_ bv5 11) (ite (and (distinct ((_ extract 4 4) C2) (_ bv0 1)) true) (_ bv4 11) (_ bv3 11)))))
 (let ((?x5176 (ite (and (distinct ((_ extract 8 8) C2) (_ bv0 1)) true) (_ bv8 11) (ite (and (distinct ((_ extract 7 7) C2) (_ bv0 1)) true) (_ bv7 11) (_ bv6 11)))))
 (let ((?x1358 (ite (and (distinct ((_ extract 10 9) C2) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) C2) (_ bv0 1)) true) (_ bv10 11) (_ bv9 11)) ?x5176)))
 (let ((?x5078 (ite (and (distinct ((_ extract 10 6) C2) (_ bv0 5)) true) ?x1358 (ite (and (distinct ((_ extract 5 3) C2) (_ bv0 3)) true) ?x5131 ?x2157))))
 (let ((?x6320 (bvsub ?x5078 ?x5582)))
 (let ((?x2362 (bvor %Y C2)))
 (let ((?x5572 (ite (= (ite (and (distinct (bvand %X C1) (_ bv0 58)) true) (_ bv1 1) (_ bv0 1)) (_ bv1 1)) ?x2362 %Y)))
 (let ((?x4886 (ite (and (distinct ((_ extract 3 2) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 3 3) C1) (_ bv0 1)) true) (_ bv3 32) (_ bv2 32)) (ite (and (distinct ((_ extract 1 1) C1) (_ bv0 1)) true) (_ bv1 32) (_ bv0 32)))))
 (let ((?x4237 (ite (and (distinct ((_ extract 7 6) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 7 7) C1) (_ bv0 1)) true) (_ bv7 32) (_ bv6 32)) (ite (and (distinct ((_ extract 5 5) C1) (_ bv0 1)) true) (_ bv5 32) (_ bv4 32)))))
 (let ((?x1886 (ite (and (distinct ((_ extract 11 10) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 11 11) C1) (_ bv0 1)) true) (_ bv11 32) (_ bv10 32)) (ite (and (distinct ((_ extract 9 9) C1) (_ bv0 1)) true) (_ bv9 32) (_ bv8 32)))))
 (let ((?x5248 (ite (and (distinct ((_ extract 14 14) C1) (_ bv0 1)) true) (_ bv14 32) (ite (and (distinct ((_ extract 13 13) C1) (_ bv0 1)) true) (_ bv13 32) (_ bv12 32)))))
 (let ((?x5859 (ite (and (distinct ((_ extract 14 8) C1) (_ bv0 7)) true) (ite (and (distinct ((_ extract 14 12) C1) (_ bv0 3)) true) ?x5248 ?x1886) (ite (and (distinct ((_ extract 7 4) C1) (_ bv0 4)) true) ?x4237 ?x4886))))
 (let ((?x5245 (ite (and (distinct ((_ extract 18 17) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 18 18) C1) (_ bv0 1)) true) (_ bv18 32) (_ bv17 32)) (ite (and (distinct ((_ extract 16 16) C1) (_ bv0 1)) true) (_ bv16 32) (_ bv15 32)))))
 (let ((?x5169 (ite (and (distinct ((_ extract 21 21) C1) (_ bv0 1)) true) (_ bv21 32) (ite (and (distinct ((_ extract 20 20) C1) (_ bv0 1)) true) (_ bv20 32) (_ bv19 32)))))
 (let ((?x3901 (ite (and (distinct ((_ extract 25 24) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 25 25) C1) (_ bv0 1)) true) (_ bv25 32) (_ bv24 32)) (ite (and (distinct ((_ extract 23 23) C1) (_ bv0 1)) true) (_ bv23 32) (_ bv22 32)))))
 (let ((?x5839 (ite (and (distinct ((_ extract 28 28) C1) (_ bv0 1)) true) (_ bv28 32) (ite (and (distinct ((_ extract 27 27) C1) (_ bv0 1)) true) (_ bv27 32) (_ bv26 32)))))
 (let ((?x3043 (ite (and (distinct ((_ extract 28 22) C1) (_ bv0 7)) true) (ite (and (distinct ((_ extract 28 26) C1) (_ bv0 3)) true) ?x5839 ?x3901) (ite (and (distinct ((_ extract 21 19) C1) (_ bv0 3)) true) ?x5169 ?x5245))))
 (let ((?x5175 (ite (and (distinct ((_ extract 32 31) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 32 32) C1) (_ bv0 1)) true) (_ bv32 32) (_ bv31 32)) (ite (and (distinct ((_ extract 30 30) C1) (_ bv0 1)) true) (_ bv30 32) (_ bv29 32)))))
 (let ((?x5045 (ite (and (distinct ((_ extract 36 35) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 36 36) C1) (_ bv0 1)) true) (_ bv36 32) (_ bv35 32)) (ite (and (distinct ((_ extract 34 34) C1) (_ bv0 1)) true) (_ bv34 32) (_ bv33 32)))))
 (let ((?x3306 (ite (and (distinct ((_ extract 40 39) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 40 40) C1) (_ bv0 1)) true) (_ bv40 32) (_ bv39 32)) (ite (and (distinct ((_ extract 38 38) C1) (_ bv0 1)) true) (_ bv38 32) (_ bv37 32)))))
 (let ((?x3104 (ite (and (distinct ((_ extract 43 43) C1) (_ bv0 1)) true) (_ bv43 32) (ite (and (distinct ((_ extract 42 42) C1) (_ bv0 1)) true) (_ bv42 32) (_ bv41 32)))))
 (let ((?x6464 (ite (and (distinct ((_ extract 43 37) C1) (_ bv0 7)) true) (ite (and (distinct ((_ extract 43 41) C1) (_ bv0 3)) true) ?x3104 ?x3306) (ite (and (distinct ((_ extract 36 33) C1) (_ bv0 4)) true) ?x5045 ?x5175))))
 (let ((?x1341 (ite (and (distinct ((_ extract 47 46) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 47 47) C1) (_ bv0 1)) true) (_ bv47 32) (_ bv46 32)) (ite (and (distinct ((_ extract 45 45) C1) (_ bv0 1)) true) (_ bv45 32) (_ bv44 32)))))
 (let ((?x4259 (ite (and (distinct ((_ extract 50 50) C1) (_ bv0 1)) true) (_ bv50 32) (ite (and (distinct ((_ extract 49 49) C1) (_ bv0 1)) true) (_ bv49 32) (_ bv48 32)))))
 (let ((?x1349 (ite (and (distinct ((_ extract 54 53) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 54 54) C1) (_ bv0 1)) true) (_ bv54 32) (_ bv53 32)) (ite (and (distinct ((_ extract 52 52) C1) (_ bv0 1)) true) (_ bv52 32) (_ bv51 32)))))
 (let ((?x4335 (ite (and (distinct ((_ extract 57 57) C1) (_ bv0 1)) true) (_ bv57 32) (ite (and (distinct ((_ extract 56 56) C1) (_ bv0 1)) true) (_ bv56 32) (_ bv55 32)))))
 (let ((?x2717 (ite (and (distinct ((_ extract 57 51) C1) (_ bv0 7)) true) (ite (and (distinct ((_ extract 57 55) C1) (_ bv0 3)) true) ?x4335 ?x1349) (ite (and (distinct ((_ extract 50 48) C1) (_ bv0 3)) true) ?x4259 ?x1341))))
 (let ((?x5276 (ite (and (distinct ((_ extract 57 29) C1) (_ bv0 29)) true) (ite (and (distinct ((_ extract 57 44) C1) (_ bv0 14)) true) ?x2717 ?x6464) (ite (and (distinct ((_ extract 28 15) C1) (_ bv0 14)) true) ?x3043 ?x5859))))
 (let ((?x5577 (ite (and (distinct ((_ extract 2 2) C2) (_ bv0 1)) true) (_ bv2 32) (ite (and (distinct ((_ extract 1 1) C2) (_ bv0 1)) true) (_ bv1 32) (_ bv0 32)))))
 (let ((?x2974 (ite (and (distinct ((_ extract 5 5) C2) (_ bv0 1)) true) (_ bv5 32) (ite (and (distinct ((_ extract 4 4) C2) (_ bv0 1)) true) (_ bv4 32) (_ bv3 32)))))
 (let ((?x5588 (ite (and (distinct ((_ extract 8 8) C2) (_ bv0 1)) true) (_ bv8 32) (ite (and (distinct ((_ extract 7 7) C2) (_ bv0 1)) true) (_ bv7 32) (_ bv6 32)))))
 (let ((?x6289 (ite (and (distinct ((_ extract 10 9) C2) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) C2) (_ bv0 1)) true) (_ bv10 32) (_ bv9 32)) ?x5588)))
 (let ((?x2569 (ite (and (distinct ((_ extract 10 6) C2) (_ bv0 5)) true) ?x6289 (ite (and (distinct ((_ extract 5 3) C2) (_ bv0 3)) true) ?x2974 ?x5577))))
 (and (and (and (distinct C1 (_ bv0 58)) true) (= (bvand C1 (bvsub C1 (_ bv1 58))) (_ bv0 58))) (and (and (distinct C2 (_ bv0 11)) true) (= (bvand C2 (bvsub C2 (_ bv1 11))) (_ bv0 11))) (bvsge ?x2569 ?x5276) (and (distinct ?x5572 (bvor (bvshl ((_ extract 10 0) (bvand %X C1)) ?x6320) %Y)) true))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
