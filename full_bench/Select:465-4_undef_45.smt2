(set-info :status unknown)
(declare-fun C2 () (_ BitVec 11))
(declare-fun C1 () (_ BitVec 53))
(assert
 (let ((?x2700 (ite (and (distinct ((_ extract 2 2) C2) (_ bv0 1)) true) (_ bv2 53) (ite (and (distinct ((_ extract 1 1) C2) (_ bv0 1)) true) (_ bv1 53) (_ bv0 53)))))
 (let ((?x2607 (ite (and (distinct ((_ extract 5 5) C2) (_ bv0 1)) true) (_ bv5 53) (ite (and (distinct ((_ extract 4 4) C2) (_ bv0 1)) true) (_ bv4 53) (_ bv3 53)))))
 (let ((?x4359 (ite (and (distinct ((_ extract 8 8) C2) (_ bv0 1)) true) (_ bv8 53) (ite (and (distinct ((_ extract 7 7) C2) (_ bv0 1)) true) (_ bv7 53) (_ bv6 53)))))
 (let ((?x2588 (ite (and (distinct ((_ extract 10 9) C2) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) C2) (_ bv0 1)) true) (_ bv10 53) (_ bv9 53)) ?x4359)))
 (let ((?x2165 (ite (and (distinct ((_ extract 10 6) C2) (_ bv0 5)) true) ?x2588 (ite (and (distinct ((_ extract 5 3) C2) (_ bv0 3)) true) ?x2607 ?x2700))))
 (let ((?x3154 (ite (and (distinct ((_ extract 3 2) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 3 3) C1) (_ bv0 1)) true) (_ bv3 53) (_ bv2 53)) (ite (and (distinct ((_ extract 1 1) C1) (_ bv0 1)) true) (_ bv1 53) (_ bv0 53)))))
 (let ((?x2491 (ite (and (distinct ((_ extract 6 6) C1) (_ bv0 1)) true) (_ bv6 53) (ite (and (distinct ((_ extract 5 5) C1) (_ bv0 1)) true) (_ bv5 53) (_ bv4 53)))))
 (let ((?x1994 (ite (and (distinct ((_ extract 10 9) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) C1) (_ bv0 1)) true) (_ bv10 53) (_ bv9 53)) (ite (and (distinct ((_ extract 8 8) C1) (_ bv0 1)) true) (_ bv8 53) (_ bv7 53)))))
 (let ((?x6466 (ite (and (distinct ((_ extract 13 13) C1) (_ bv0 1)) true) (_ bv13 53) (ite (and (distinct ((_ extract 12 12) C1) (_ bv0 1)) true) (_ bv12 53) (_ bv11 53)))))
 (let ((?x2906 (ite (and (distinct ((_ extract 13 7) C1) (_ bv0 7)) true) (ite (and (distinct ((_ extract 13 11) C1) (_ bv0 3)) true) ?x6466 ?x1994) (ite (and (distinct ((_ extract 6 4) C1) (_ bv0 3)) true) ?x2491 ?x3154))))
 (let ((?x3008 (ite (and (distinct ((_ extract 17 16) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 17 17) C1) (_ bv0 1)) true) (_ bv17 53) (_ bv16 53)) (ite (and (distinct ((_ extract 15 15) C1) (_ bv0 1)) true) (_ bv15 53) (_ bv14 53)))))
 (let ((?x5522 (ite (and (distinct ((_ extract 20 20) C1) (_ bv0 1)) true) (_ bv20 53) (ite (and (distinct ((_ extract 19 19) C1) (_ bv0 1)) true) (_ bv19 53) (_ bv18 53)))))
 (let ((?x4565 (ite (and (distinct ((_ extract 23 23) C1) (_ bv0 1)) true) (_ bv23 53) (ite (and (distinct ((_ extract 22 22) C1) (_ bv0 1)) true) (_ bv22 53) (_ bv21 53)))))
 (let ((?x3172 (ite (and (distinct ((_ extract 26 26) C1) (_ bv0 1)) true) (_ bv26 53) (ite (and (distinct ((_ extract 25 25) C1) (_ bv0 1)) true) (_ bv25 53) (_ bv24 53)))))
 (let ((?x3870 (ite (and (distinct ((_ extract 26 21) C1) (_ bv0 6)) true) (ite (and (distinct ((_ extract 26 24) C1) (_ bv0 3)) true) ?x3172 ?x4565) (ite (and (distinct ((_ extract 20 18) C1) (_ bv0 3)) true) ?x5522 ?x3008))))
 (let ((?x2944 (ite (and (distinct ((_ extract 30 29) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 30 30) C1) (_ bv0 1)) true) (_ bv30 53) (_ bv29 53)) (ite (and (distinct ((_ extract 28 28) C1) (_ bv0 1)) true) (_ bv28 53) (_ bv27 53)))))
 (let ((?x1549 (ite (and (distinct ((_ extract 33 33) C1) (_ bv0 1)) true) (_ bv33 53) (ite (and (distinct ((_ extract 32 32) C1) (_ bv0 1)) true) (_ bv32 53) (_ bv31 53)))))
 (let ((?x6256 (ite (and (distinct ((_ extract 36 36) C1) (_ bv0 1)) true) (_ bv36 53) (ite (and (distinct ((_ extract 35 35) C1) (_ bv0 1)) true) (_ bv35 53) (_ bv34 53)))))
 (let ((?x5465 (ite (and (distinct ((_ extract 39 39) C1) (_ bv0 1)) true) (_ bv39 53) (ite (and (distinct ((_ extract 38 38) C1) (_ bv0 1)) true) (_ bv38 53) (_ bv37 53)))))
 (let ((?x2396 (ite (and (distinct ((_ extract 39 34) C1) (_ bv0 6)) true) (ite (and (distinct ((_ extract 39 37) C1) (_ bv0 3)) true) ?x5465 ?x6256) (ite (and (distinct ((_ extract 33 31) C1) (_ bv0 3)) true) ?x1549 ?x2944))))
 (let ((?x2323 (ite (and (distinct ((_ extract 43 42) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 43 43) C1) (_ bv0 1)) true) (_ bv43 53) (_ bv42 53)) (ite (and (distinct ((_ extract 41 41) C1) (_ bv0 1)) true) (_ bv41 53) (_ bv40 53)))))
 (let ((?x6071 (ite (and (distinct ((_ extract 46 46) C1) (_ bv0 1)) true) (_ bv46 53) (ite (and (distinct ((_ extract 45 45) C1) (_ bv0 1)) true) (_ bv45 53) (_ bv44 53)))))
 (let ((?x6478 (ite (and (distinct ((_ extract 49 49) C1) (_ bv0 1)) true) (_ bv49 53) (ite (and (distinct ((_ extract 48 48) C1) (_ bv0 1)) true) (_ bv48 53) (_ bv47 53)))))
 (let ((?x4500 (ite (and (distinct ((_ extract 52 52) C1) (_ bv0 1)) true) (_ bv52 53) (ite (and (distinct ((_ extract 51 51) C1) (_ bv0 1)) true) (_ bv51 53) (_ bv50 53)))))
 (let ((?x4245 (ite (and (distinct ((_ extract 52 47) C1) (_ bv0 6)) true) (ite (and (distinct ((_ extract 52 50) C1) (_ bv0 3)) true) ?x4500 ?x6478) (ite (and (distinct ((_ extract 46 44) C1) (_ bv0 3)) true) ?x6071 ?x2323))))
 (let ((?x6247 (ite (and (distinct ((_ extract 52 27) C1) (_ bv0 26)) true) (ite (and (distinct ((_ extract 52 40) C1) (_ bv0 13)) true) ?x4245 ?x2396) (ite (and (distinct ((_ extract 26 14) C1) (_ bv0 13)) true) ?x3870 ?x2906))))
 (let ((?x3774 (bvsub ?x6247 ?x2165)))
 (let ((?x2812 (ite (and (distinct ((_ extract 3 2) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 3 3) C1) (_ bv0 1)) true) (_ bv3 32) (_ bv2 32)) (ite (and (distinct ((_ extract 1 1) C1) (_ bv0 1)) true) (_ bv1 32) (_ bv0 32)))))
 (let ((?x4517 (ite (and (distinct ((_ extract 6 6) C1) (_ bv0 1)) true) (_ bv6 32) (ite (and (distinct ((_ extract 5 5) C1) (_ bv0 1)) true) (_ bv5 32) (_ bv4 32)))))
 (let ((?x3011 (ite (and (distinct ((_ extract 10 9) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) C1) (_ bv0 1)) true) (_ bv10 32) (_ bv9 32)) (ite (and (distinct ((_ extract 8 8) C1) (_ bv0 1)) true) (_ bv8 32) (_ bv7 32)))))
 (let ((?x4472 (ite (and (distinct ((_ extract 13 13) C1) (_ bv0 1)) true) (_ bv13 32) (ite (and (distinct ((_ extract 12 12) C1) (_ bv0 1)) true) (_ bv12 32) (_ bv11 32)))))
 (let ((?x3048 (ite (and (distinct ((_ extract 13 7) C1) (_ bv0 7)) true) (ite (and (distinct ((_ extract 13 11) C1) (_ bv0 3)) true) ?x4472 ?x3011) (ite (and (distinct ((_ extract 6 4) C1) (_ bv0 3)) true) ?x4517 ?x2812))))
 (let ((?x2346 (ite (and (distinct ((_ extract 17 16) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 17 17) C1) (_ bv0 1)) true) (_ bv17 32) (_ bv16 32)) (ite (and (distinct ((_ extract 15 15) C1) (_ bv0 1)) true) (_ bv15 32) (_ bv14 32)))))
 (let ((?x3960 (ite (and (distinct ((_ extract 20 20) C1) (_ bv0 1)) true) (_ bv20 32) (ite (and (distinct ((_ extract 19 19) C1) (_ bv0 1)) true) (_ bv19 32) (_ bv18 32)))))
 (let ((?x6260 (ite (and (distinct ((_ extract 23 23) C1) (_ bv0 1)) true) (_ bv23 32) (ite (and (distinct ((_ extract 22 22) C1) (_ bv0 1)) true) (_ bv22 32) (_ bv21 32)))))
 (let ((?x6235 (ite (and (distinct ((_ extract 26 26) C1) (_ bv0 1)) true) (_ bv26 32) (ite (and (distinct ((_ extract 25 25) C1) (_ bv0 1)) true) (_ bv25 32) (_ bv24 32)))))
 (let ((?x2852 (ite (and (distinct ((_ extract 26 21) C1) (_ bv0 6)) true) (ite (and (distinct ((_ extract 26 24) C1) (_ bv0 3)) true) ?x6235 ?x6260) (ite (and (distinct ((_ extract 20 18) C1) (_ bv0 3)) true) ?x3960 ?x2346))))
 (let ((?x5028 (ite (and (distinct ((_ extract 30 29) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 30 30) C1) (_ bv0 1)) true) (_ bv30 32) (_ bv29 32)) (ite (and (distinct ((_ extract 28 28) C1) (_ bv0 1)) true) (_ bv28 32) (_ bv27 32)))))
 (let ((?x4591 (ite (and (distinct ((_ extract 33 33) C1) (_ bv0 1)) true) (_ bv33 32) (ite (and (distinct ((_ extract 32 32) C1) (_ bv0 1)) true) (_ bv32 32) (_ bv31 32)))))
 (let ((?x3884 (ite (and (distinct ((_ extract 36 36) C1) (_ bv0 1)) true) (_ bv36 32) (ite (and (distinct ((_ extract 35 35) C1) (_ bv0 1)) true) (_ bv35 32) (_ bv34 32)))))
 (let ((?x2373 (ite (and (distinct ((_ extract 39 39) C1) (_ bv0 1)) true) (_ bv39 32) (ite (and (distinct ((_ extract 38 38) C1) (_ bv0 1)) true) (_ bv38 32) (_ bv37 32)))))
 (let ((?x5630 (ite (and (distinct ((_ extract 39 34) C1) (_ bv0 6)) true) (ite (and (distinct ((_ extract 39 37) C1) (_ bv0 3)) true) ?x2373 ?x3884) (ite (and (distinct ((_ extract 33 31) C1) (_ bv0 3)) true) ?x4591 ?x5028))))
 (let ((?x1850 (ite (and (distinct ((_ extract 43 42) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 43 43) C1) (_ bv0 1)) true) (_ bv43 32) (_ bv42 32)) (ite (and (distinct ((_ extract 41 41) C1) (_ bv0 1)) true) (_ bv41 32) (_ bv40 32)))))
 (let ((?x6069 (ite (and (distinct ((_ extract 46 46) C1) (_ bv0 1)) true) (_ bv46 32) (ite (and (distinct ((_ extract 45 45) C1) (_ bv0 1)) true) (_ bv45 32) (_ bv44 32)))))
 (let ((?x3405 (ite (and (distinct ((_ extract 49 49) C1) (_ bv0 1)) true) (_ bv49 32) (ite (and (distinct ((_ extract 48 48) C1) (_ bv0 1)) true) (_ bv48 32) (_ bv47 32)))))
 (let ((?x1545 (ite (and (distinct ((_ extract 52 52) C1) (_ bv0 1)) true) (_ bv52 32) (ite (and (distinct ((_ extract 51 51) C1) (_ bv0 1)) true) (_ bv51 32) (_ bv50 32)))))
 (let ((?x2725 (ite (and (distinct ((_ extract 52 47) C1) (_ bv0 6)) true) (ite (and (distinct ((_ extract 52 50) C1) (_ bv0 3)) true) ?x1545 ?x3405) (ite (and (distinct ((_ extract 46 44) C1) (_ bv0 3)) true) ?x6069 ?x1850))))
 (let ((?x1971 (ite (and (distinct ((_ extract 52 27) C1) (_ bv0 26)) true) (ite (and (distinct ((_ extract 52 40) C1) (_ bv0 13)) true) ?x2725 ?x5630) (ite (and (distinct ((_ extract 26 14) C1) (_ bv0 13)) true) ?x2852 ?x3048))))
 (let ((?x1960 (ite (and (distinct ((_ extract 2 2) C2) (_ bv0 1)) true) (_ bv2 32) (ite (and (distinct ((_ extract 1 1) C2) (_ bv0 1)) true) (_ bv1 32) (_ bv0 32)))))
 (let ((?x4348 (ite (and (distinct ((_ extract 5 5) C2) (_ bv0 1)) true) (_ bv5 32) (ite (and (distinct ((_ extract 4 4) C2) (_ bv0 1)) true) (_ bv4 32) (_ bv3 32)))))
 (let ((?x2851 (ite (and (distinct ((_ extract 8 8) C2) (_ bv0 1)) true) (_ bv8 32) (ite (and (distinct ((_ extract 7 7) C2) (_ bv0 1)) true) (_ bv7 32) (_ bv6 32)))))
 (let ((?x4454 (ite (and (distinct ((_ extract 10 9) C2) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) C2) (_ bv0 1)) true) (_ bv10 32) (_ bv9 32)) ?x2851)))
 (let ((?x4326 (ite (and (distinct ((_ extract 10 6) C2) (_ bv0 5)) true) ?x4454 (ite (and (distinct ((_ extract 5 3) C2) (_ bv0 3)) true) ?x4348 ?x1960))))
 (and (and (and (distinct C1 (_ bv0 53)) true) (= (bvand C1 (bvsub C1 (_ bv1 53))) (_ bv0 53))) (and (and (distinct C2 (_ bv0 11)) true) (= (bvand C2 (bvsub C2 (_ bv1 11))) (_ bv0 11))) (bvslt ?x4326 ?x1971) (not (bvult ?x3774 (_ bv53 53))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
