(set-info :status unknown)
(declare-fun C2 () (_ BitVec 11))
(declare-fun C1 () (_ BitVec 50))
(assert
 (let ((?x13877 (ite (and (distinct ((_ extract 2 2) C2) (_ bv0 1)) true) (_ bv2 50) (ite (and (distinct ((_ extract 1 1) C2) (_ bv0 1)) true) (_ bv1 50) (_ bv0 50)))))
 (let ((?x1630 (ite (and (distinct ((_ extract 5 5) C2) (_ bv0 1)) true) (_ bv5 50) (ite (and (distinct ((_ extract 4 4) C2) (_ bv0 1)) true) (_ bv4 50) (_ bv3 50)))))
 (let ((?x19292 (ite (and (distinct ((_ extract 8 8) C2) (_ bv0 1)) true) (_ bv8 50) (ite (and (distinct ((_ extract 7 7) C2) (_ bv0 1)) true) (_ bv7 50) (_ bv6 50)))))
 (let ((?x18637 (ite (and (distinct ((_ extract 10 9) C2) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) C2) (_ bv0 1)) true) (_ bv10 50) (_ bv9 50)) ?x19292)))
 (let ((?x9417 (ite (and (distinct ((_ extract 10 6) C2) (_ bv0 5)) true) ?x18637 (ite (and (distinct ((_ extract 5 3) C2) (_ bv0 3)) true) ?x1630 ?x13877))))
 (let ((?x7663 (ite (and (distinct ((_ extract 3 2) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 3 3) C1) (_ bv0 1)) true) (_ bv3 50) (_ bv2 50)) (ite (and (distinct ((_ extract 1 1) C1) (_ bv0 1)) true) (_ bv1 50) (_ bv0 50)))))
 (let ((?x9111 (ite (and (distinct ((_ extract 6 6) C1) (_ bv0 1)) true) (_ bv6 50) (ite (and (distinct ((_ extract 5 5) C1) (_ bv0 1)) true) (_ bv5 50) (_ bv4 50)))))
 (let ((?x13083 (ite (and (distinct ((_ extract 9 9) C1) (_ bv0 1)) true) (_ bv9 50) (ite (and (distinct ((_ extract 8 8) C1) (_ bv0 1)) true) (_ bv8 50) (_ bv7 50)))))
 (let ((?x6445 (ite (and (distinct ((_ extract 12 12) C1) (_ bv0 1)) true) (_ bv12 50) (ite (and (distinct ((_ extract 11 11) C1) (_ bv0 1)) true) (_ bv11 50) (_ bv10 50)))))
 (let ((?x7832 (ite (and (distinct ((_ extract 12 7) C1) (_ bv0 6)) true) (ite (and (distinct ((_ extract 12 10) C1) (_ bv0 3)) true) ?x6445 ?x13083) (ite (and (distinct ((_ extract 6 4) C1) (_ bv0 3)) true) ?x9111 ?x7663))))
 (let ((?x4020 (ite (and (distinct ((_ extract 15 15) C1) (_ bv0 1)) true) (_ bv15 50) (ite (and (distinct ((_ extract 14 14) C1) (_ bv0 1)) true) (_ bv14 50) (_ bv13 50)))))
 (let ((?x13184 (ite (and (distinct ((_ extract 18 18) C1) (_ bv0 1)) true) (_ bv18 50) (ite (and (distinct ((_ extract 17 17) C1) (_ bv0 1)) true) (_ bv17 50) (_ bv16 50)))))
 (let ((?x22695 (ite (and (distinct ((_ extract 21 21) C1) (_ bv0 1)) true) (_ bv21 50) (ite (and (distinct ((_ extract 20 20) C1) (_ bv0 1)) true) (_ bv20 50) (_ bv19 50)))))
 (let ((?x8636 (ite (and (distinct ((_ extract 24 24) C1) (_ bv0 1)) true) (_ bv24 50) (ite (and (distinct ((_ extract 23 23) C1) (_ bv0 1)) true) (_ bv23 50) (_ bv22 50)))))
 (let ((?x4170 (ite (and (distinct ((_ extract 24 19) C1) (_ bv0 6)) true) (ite (and (distinct ((_ extract 24 22) C1) (_ bv0 3)) true) ?x8636 ?x22695) (ite (and (distinct ((_ extract 18 16) C1) (_ bv0 3)) true) ?x13184 ?x4020))))
 (let ((?x21352 (ite (and (distinct ((_ extract 28 27) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 28 28) C1) (_ bv0 1)) true) (_ bv28 50) (_ bv27 50)) (ite (and (distinct ((_ extract 26 26) C1) (_ bv0 1)) true) (_ bv26 50) (_ bv25 50)))))
 (let ((?x9950 (ite (and (distinct ((_ extract 31 31) C1) (_ bv0 1)) true) (_ bv31 50) (ite (and (distinct ((_ extract 30 30) C1) (_ bv0 1)) true) (_ bv30 50) (_ bv29 50)))))
 (let ((?x12982 (ite (and (distinct ((_ extract 34 34) C1) (_ bv0 1)) true) (_ bv34 50) (ite (and (distinct ((_ extract 33 33) C1) (_ bv0 1)) true) (_ bv33 50) (_ bv32 50)))))
 (let ((?x19378 (ite (and (distinct ((_ extract 37 37) C1) (_ bv0 1)) true) (_ bv37 50) (ite (and (distinct ((_ extract 36 36) C1) (_ bv0 1)) true) (_ bv36 50) (_ bv35 50)))))
 (let ((?x8861 (ite (and (distinct ((_ extract 37 32) C1) (_ bv0 6)) true) (ite (and (distinct ((_ extract 37 35) C1) (_ bv0 3)) true) ?x19378 ?x12982) (ite (and (distinct ((_ extract 31 29) C1) (_ bv0 3)) true) ?x9950 ?x21352))))
 (let ((?x9569 (ite (and (distinct ((_ extract 40 40) C1) (_ bv0 1)) true) (_ bv40 50) (ite (and (distinct ((_ extract 39 39) C1) (_ bv0 1)) true) (_ bv39 50) (_ bv38 50)))))
 (let ((?x5997 (ite (and (distinct ((_ extract 43 43) C1) (_ bv0 1)) true) (_ bv43 50) (ite (and (distinct ((_ extract 42 42) C1) (_ bv0 1)) true) (_ bv42 50) (_ bv41 50)))))
 (let ((?x19515 (ite (and (distinct ((_ extract 46 46) C1) (_ bv0 1)) true) (_ bv46 50) (ite (and (distinct ((_ extract 45 45) C1) (_ bv0 1)) true) (_ bv45 50) (_ bv44 50)))))
 (let ((?x787 (ite (and (distinct ((_ extract 49 49) C1) (_ bv0 1)) true) (_ bv49 50) (ite (and (distinct ((_ extract 48 48) C1) (_ bv0 1)) true) (_ bv48 50) (_ bv47 50)))))
 (let ((?x18167 (ite (and (distinct ((_ extract 49 44) C1) (_ bv0 6)) true) (ite (and (distinct ((_ extract 49 47) C1) (_ bv0 3)) true) ?x787 ?x19515) (ite (and (distinct ((_ extract 43 41) C1) (_ bv0 3)) true) ?x5997 ?x9569))))
 (let ((?x15834 (ite (and (distinct ((_ extract 49 25) C1) (_ bv0 25)) true) (ite (and (distinct ((_ extract 49 38) C1) (_ bv0 12)) true) ?x18167 ?x8861) (ite (and (distinct ((_ extract 24 13) C1) (_ bv0 12)) true) ?x4170 ?x7832))))
 (let ((?x5279 (bvsub ?x15834 ?x9417)))
 (let ((?x23606 (ite (and (distinct ((_ extract 3 2) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 3 3) C1) (_ bv0 1)) true) (_ bv3 32) (_ bv2 32)) (ite (and (distinct ((_ extract 1 1) C1) (_ bv0 1)) true) (_ bv1 32) (_ bv0 32)))))
 (let ((?x14500 (ite (and (distinct ((_ extract 6 6) C1) (_ bv0 1)) true) (_ bv6 32) (ite (and (distinct ((_ extract 5 5) C1) (_ bv0 1)) true) (_ bv5 32) (_ bv4 32)))))
 (let ((?x13850 (ite (and (distinct ((_ extract 9 9) C1) (_ bv0 1)) true) (_ bv9 32) (ite (and (distinct ((_ extract 8 8) C1) (_ bv0 1)) true) (_ bv8 32) (_ bv7 32)))))
 (let ((?x12949 (ite (and (distinct ((_ extract 12 12) C1) (_ bv0 1)) true) (_ bv12 32) (ite (and (distinct ((_ extract 11 11) C1) (_ bv0 1)) true) (_ bv11 32) (_ bv10 32)))))
 (let ((?x1668 (ite (and (distinct ((_ extract 12 7) C1) (_ bv0 6)) true) (ite (and (distinct ((_ extract 12 10) C1) (_ bv0 3)) true) ?x12949 ?x13850) (ite (and (distinct ((_ extract 6 4) C1) (_ bv0 3)) true) ?x14500 ?x23606))))
 (let ((?x3346 (ite (and (distinct ((_ extract 15 15) C1) (_ bv0 1)) true) (_ bv15 32) (ite (and (distinct ((_ extract 14 14) C1) (_ bv0 1)) true) (_ bv14 32) (_ bv13 32)))))
 (let ((?x21499 (ite (and (distinct ((_ extract 18 18) C1) (_ bv0 1)) true) (_ bv18 32) (ite (and (distinct ((_ extract 17 17) C1) (_ bv0 1)) true) (_ bv17 32) (_ bv16 32)))))
 (let ((?x23811 (ite (and (distinct ((_ extract 21 21) C1) (_ bv0 1)) true) (_ bv21 32) (ite (and (distinct ((_ extract 20 20) C1) (_ bv0 1)) true) (_ bv20 32) (_ bv19 32)))))
 (let ((?x18825 (ite (and (distinct ((_ extract 24 24) C1) (_ bv0 1)) true) (_ bv24 32) (ite (and (distinct ((_ extract 23 23) C1) (_ bv0 1)) true) (_ bv23 32) (_ bv22 32)))))
 (let ((?x5829 (ite (and (distinct ((_ extract 24 19) C1) (_ bv0 6)) true) (ite (and (distinct ((_ extract 24 22) C1) (_ bv0 3)) true) ?x18825 ?x23811) (ite (and (distinct ((_ extract 18 16) C1) (_ bv0 3)) true) ?x21499 ?x3346))))
 (let ((?x18004 (ite (and (distinct ((_ extract 28 27) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 28 28) C1) (_ bv0 1)) true) (_ bv28 32) (_ bv27 32)) (ite (and (distinct ((_ extract 26 26) C1) (_ bv0 1)) true) (_ bv26 32) (_ bv25 32)))))
 (let ((?x6342 (ite (and (distinct ((_ extract 31 31) C1) (_ bv0 1)) true) (_ bv31 32) (ite (and (distinct ((_ extract 30 30) C1) (_ bv0 1)) true) (_ bv30 32) (_ bv29 32)))))
 (let ((?x10272 (ite (and (distinct ((_ extract 34 34) C1) (_ bv0 1)) true) (_ bv34 32) (ite (and (distinct ((_ extract 33 33) C1) (_ bv0 1)) true) (_ bv33 32) (_ bv32 32)))))
 (let ((?x7136 (ite (and (distinct ((_ extract 37 37) C1) (_ bv0 1)) true) (_ bv37 32) (ite (and (distinct ((_ extract 36 36) C1) (_ bv0 1)) true) (_ bv36 32) (_ bv35 32)))))
 (let ((?x3410 (ite (and (distinct ((_ extract 37 32) C1) (_ bv0 6)) true) (ite (and (distinct ((_ extract 37 35) C1) (_ bv0 3)) true) ?x7136 ?x10272) (ite (and (distinct ((_ extract 31 29) C1) (_ bv0 3)) true) ?x6342 ?x18004))))
 (let ((?x3918 (ite (and (distinct ((_ extract 40 40) C1) (_ bv0 1)) true) (_ bv40 32) (ite (and (distinct ((_ extract 39 39) C1) (_ bv0 1)) true) (_ bv39 32) (_ bv38 32)))))
 (let ((?x1131 (ite (and (distinct ((_ extract 43 43) C1) (_ bv0 1)) true) (_ bv43 32) (ite (and (distinct ((_ extract 42 42) C1) (_ bv0 1)) true) (_ bv42 32) (_ bv41 32)))))
 (let ((?x12595 (ite (and (distinct ((_ extract 46 46) C1) (_ bv0 1)) true) (_ bv46 32) (ite (and (distinct ((_ extract 45 45) C1) (_ bv0 1)) true) (_ bv45 32) (_ bv44 32)))))
 (let ((?x16971 (ite (and (distinct ((_ extract 49 49) C1) (_ bv0 1)) true) (_ bv49 32) (ite (and (distinct ((_ extract 48 48) C1) (_ bv0 1)) true) (_ bv48 32) (_ bv47 32)))))
 (let ((?x1625 (ite (and (distinct ((_ extract 49 44) C1) (_ bv0 6)) true) (ite (and (distinct ((_ extract 49 47) C1) (_ bv0 3)) true) ?x16971 ?x12595) (ite (and (distinct ((_ extract 43 41) C1) (_ bv0 3)) true) ?x1131 ?x3918))))
 (let ((?x3149 (ite (and (distinct ((_ extract 49 25) C1) (_ bv0 25)) true) (ite (and (distinct ((_ extract 49 38) C1) (_ bv0 12)) true) ?x1625 ?x3410) (ite (and (distinct ((_ extract 24 13) C1) (_ bv0 12)) true) ?x5829 ?x1668))))
 (let ((?x1961 (ite (and (distinct ((_ extract 2 2) C2) (_ bv0 1)) true) (_ bv2 32) (ite (and (distinct ((_ extract 1 1) C2) (_ bv0 1)) true) (_ bv1 32) (_ bv0 32)))))
 (let ((?x15927 (ite (and (distinct ((_ extract 5 5) C2) (_ bv0 1)) true) (_ bv5 32) (ite (and (distinct ((_ extract 4 4) C2) (_ bv0 1)) true) (_ bv4 32) (_ bv3 32)))))
 (let ((?x16551 (ite (and (distinct ((_ extract 8 8) C2) (_ bv0 1)) true) (_ bv8 32) (ite (and (distinct ((_ extract 7 7) C2) (_ bv0 1)) true) (_ bv7 32) (_ bv6 32)))))
 (let ((?x8304 (ite (and (distinct ((_ extract 10 9) C2) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) C2) (_ bv0 1)) true) (_ bv10 32) (_ bv9 32)) ?x16551)))
 (let ((?x18337 (ite (and (distinct ((_ extract 10 6) C2) (_ bv0 5)) true) ?x8304 (ite (and (distinct ((_ extract 5 3) C2) (_ bv0 3)) true) ?x15927 ?x1961))))
 (and (and (and (distinct C1 (_ bv0 50)) true) (= (bvand C1 (bvsub C1 (_ bv1 50))) (_ bv0 50))) (and (and (distinct C2 (_ bv0 11)) true) (= (bvand C2 (bvsub C2 (_ bv1 11))) (_ bv0 11))) (bvslt ?x18337 ?x3149) (not (bvult ?x5279 (_ bv50 50))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
