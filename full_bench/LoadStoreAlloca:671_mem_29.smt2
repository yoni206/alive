(set-info :status unknown)
(declare-fun mem0 () (_ BitVec 8))
(declare-fun %y () (_ BitVec 31))
(declare-fun %p2 () (_ BitVec 64))
(declare-fun idx () (_ BitVec 64))
(declare-fun %x () (_ BitVec 31))
(declare-fun %p1 () (_ BitVec 64))
(declare-fun |ana_equivalentAddressValues(%p1, %p2)| () (_ BitVec 1))
(assert
 (let ((?x5441 (ite (and (and (distinct %p2 (_ bv0 64)) true) (or true true) (= idx %p2)) (concat ((_ extract 7 7) mem0) ((_ extract 6 0) %y)) mem0)))
 (let (($x1668 (or true true)))
 (let (($x18598 (and (distinct %p2 (_ bv0 64)) true)))
 (let ((?x5036 (ite (and $x18598 $x1668 (= idx (bvadd (bvadd %p2 (_ bv1 64)) (_ bv0 64)))) ((_ extract 14 7) %y) ?x5441)))
 (let ((?x12694 (ite (and $x18598 $x1668 (= idx (bvadd (bvadd %p2 (_ bv1 64)) (_ bv1 64)))) ((_ extract 22 15) %y) ?x5036)))
 (let ((?x11981 (ite (and $x18598 $x1668 (= idx (bvadd (bvadd %p2 (_ bv1 64)) (_ bv2 64)))) ((_ extract 30 23) %y) ?x12694)))
 (let ((?x3641 (ite (and (and (distinct %p1 (_ bv0 64)) true) $x1668 (= idx %p1)) (concat ((_ extract 7 7) mem0) ((_ extract 6 0) %x)) mem0)))
 (let (($x17212 (and (distinct %p1 (_ bv0 64)) true)))
 (let ((?x22023 (ite (and $x17212 $x1668 (= idx (bvadd (bvadd %p1 (_ bv1 64)) (_ bv0 64)))) ((_ extract 14 7) %x) ?x3641)))
 (let ((?x10121 (ite (and $x17212 $x1668 (= idx (bvadd (bvadd %p1 (_ bv1 64)) (_ bv1 64)))) ((_ extract 22 15) %x) ?x22023)))
 (let ((?x2123 (ite (and $x17212 $x1668 (= idx (bvadd (bvadd %p1 (_ bv1 64)) (_ bv2 64)))) ((_ extract 30 23) %x) ?x10121)))
 (let ((?x10971 (ite (and $x17212 $x1668 (= %p2 %p1)) (concat ((_ extract 7 7) mem0) ((_ extract 6 0) %x)) mem0)))
 (let ((?x10012 (ite (and $x17212 $x1668 (= %p2 (bvadd (bvadd %p1 (_ bv1 64)) (_ bv0 64)))) ((_ extract 14 7) %x) ?x10971)))
 (let ((?x11363 (ite (and $x17212 $x1668 (= %p2 (bvadd (bvadd %p1 (_ bv1 64)) (_ bv1 64)))) ((_ extract 22 15) %x) ?x10012)))
 (let ((?x17144 (ite (and $x17212 $x1668 (= %p2 (bvadd (bvadd %p1 (_ bv1 64)) (_ bv2 64)))) ((_ extract 30 23) %x) ?x11363)))
 (let ((?x6453 (ite (and $x17212 $x1668 $x18598 $x1668 (= idx %p2)) (concat ((_ extract 7 7) ?x17144) ((_ extract 6 0) %y)) ?x2123)))
 (let ((?x4895 (ite (and $x17212 $x1668 $x18598 $x1668 (= idx (bvadd (bvadd %p2 (_ bv1 64)) (_ bv0 64)))) ((_ extract 14 7) %y) ?x6453)))
 (let ((?x814 (ite (and $x17212 $x1668 $x18598 $x1668 (= idx (bvadd (bvadd %p2 (_ bv1 64)) (_ bv1 64)))) ((_ extract 22 15) %y) ?x4895)))
 (let ((?x15905 (ite (and $x17212 $x1668 $x18598 $x1668 (= idx (bvadd (bvadd %p2 (_ bv1 64)) (_ bv2 64)))) ((_ extract 30 23) %y) ?x814)))
 (let (($x16781 (= |ana_equivalentAddressValues(%p1, %p2)| (_ bv1 1))))
 (and (=> $x16781 (= %p1 %p2)) $x16781 (and (distinct ?x15905 ?x11981) true)))))))))))))))))))))))
(check-sat)
