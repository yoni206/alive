(set-info :status unknown)
(declare-fun %Y () (_ BitVec 11))
(declare-fun C2 () (_ BitVec 11))
(declare-fun C1 () (_ BitVec 47))
(declare-fun %X () (_ BitVec 47))
(assert
 (let ((?x4242 (ite (and (distinct ((_ extract 2 2) C2) (_ bv0 1)) true) (_ bv2 47) (ite (and (distinct ((_ extract 1 1) C2) (_ bv0 1)) true) (_ bv1 47) (_ bv0 47)))))
 (let ((?x5306 (ite (and (distinct ((_ extract 5 5) C2) (_ bv0 1)) true) (_ bv5 47) (ite (and (distinct ((_ extract 4 4) C2) (_ bv0 1)) true) (_ bv4 47) (_ bv3 47)))))
 (let ((?x3714 (ite (and (distinct ((_ extract 8 8) C2) (_ bv0 1)) true) (_ bv8 47) (ite (and (distinct ((_ extract 7 7) C2) (_ bv0 1)) true) (_ bv7 47) (_ bv6 47)))))
 (let ((?x5942 (ite (and (distinct ((_ extract 10 9) C2) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) C2) (_ bv0 1)) true) (_ bv10 47) (_ bv9 47)) ?x3714)))
 (let ((?x2756 (ite (and (distinct ((_ extract 10 6) C2) (_ bv0 5)) true) ?x5942 (ite (and (distinct ((_ extract 5 3) C2) (_ bv0 3)) true) ?x5306 ?x4242))))
 (let ((?x5289 (ite (and (distinct ((_ extract 2 2) C1) (_ bv0 1)) true) (_ bv2 47) (ite (and (distinct ((_ extract 1 1) C1) (_ bv0 1)) true) (_ bv1 47) (_ bv0 47)))))
 (let ((?x5370 (ite (and (distinct ((_ extract 5 5) C1) (_ bv0 1)) true) (_ bv5 47) (ite (and (distinct ((_ extract 4 4) C1) (_ bv0 1)) true) (_ bv4 47) (_ bv3 47)))))
 (let ((?x3010 (ite (and (distinct ((_ extract 8 8) C1) (_ bv0 1)) true) (_ bv8 47) (ite (and (distinct ((_ extract 7 7) C1) (_ bv0 1)) true) (_ bv7 47) (_ bv6 47)))))
 (let ((?x5390 (ite (and (distinct ((_ extract 11 11) C1) (_ bv0 1)) true) (_ bv11 47) (ite (and (distinct ((_ extract 10 10) C1) (_ bv0 1)) true) (_ bv10 47) (_ bv9 47)))))
 (let ((?x3664 (ite (and (distinct ((_ extract 11 6) C1) (_ bv0 6)) true) (ite (and (distinct ((_ extract 11 9) C1) (_ bv0 3)) true) ?x5390 ?x3010) (ite (and (distinct ((_ extract 5 3) C1) (_ bv0 3)) true) ?x5370 ?x5289))))
 (let ((?x1175 (ite (and (distinct ((_ extract 14 14) C1) (_ bv0 1)) true) (_ bv14 47) (ite (and (distinct ((_ extract 13 13) C1) (_ bv0 1)) true) (_ bv13 47) (_ bv12 47)))))
 (let ((?x3040 (ite (and (distinct ((_ extract 17 17) C1) (_ bv0 1)) true) (_ bv17 47) (ite (and (distinct ((_ extract 16 16) C1) (_ bv0 1)) true) (_ bv16 47) (_ bv15 47)))))
 (let ((?x4759 (ite (and (distinct ((_ extract 20 20) C1) (_ bv0 1)) true) (_ bv20 47) (ite (and (distinct ((_ extract 19 19) C1) (_ bv0 1)) true) (_ bv19 47) (_ bv18 47)))))
 (let ((?x2366 (ite (and (distinct ((_ extract 23 23) C1) (_ bv0 1)) true) (_ bv23 47) (ite (and (distinct ((_ extract 22 22) C1) (_ bv0 1)) true) (_ bv22 47) (_ bv21 47)))))
 (let ((?x3560 (ite (and (distinct ((_ extract 23 18) C1) (_ bv0 6)) true) (ite (and (distinct ((_ extract 23 21) C1) (_ bv0 3)) true) ?x2366 ?x4759) (ite (and (distinct ((_ extract 17 15) C1) (_ bv0 3)) true) ?x3040 ?x1175))))
 (let ((?x4902 (ite (and (distinct ((_ extract 26 26) C1) (_ bv0 1)) true) (_ bv26 47) (ite (and (distinct ((_ extract 25 25) C1) (_ bv0 1)) true) (_ bv25 47) (_ bv24 47)))))
 (let ((?x2951 (ite (and (distinct ((_ extract 29 29) C1) (_ bv0 1)) true) (_ bv29 47) (ite (and (distinct ((_ extract 28 28) C1) (_ bv0 1)) true) (_ bv28 47) (_ bv27 47)))))
 (let ((?x5628 (ite (and (distinct ((_ extract 32 32) C1) (_ bv0 1)) true) (_ bv32 47) (ite (and (distinct ((_ extract 31 31) C1) (_ bv0 1)) true) (_ bv31 47) (_ bv30 47)))))
 (let ((?x6262 (ite (and (distinct ((_ extract 35 35) C1) (_ bv0 1)) true) (_ bv35 47) (ite (and (distinct ((_ extract 34 34) C1) (_ bv0 1)) true) (_ bv34 47) (_ bv33 47)))))
 (let ((?x2867 (ite (and (distinct ((_ extract 35 30) C1) (_ bv0 6)) true) (ite (and (distinct ((_ extract 35 33) C1) (_ bv0 3)) true) ?x6262 ?x5628) (ite (and (distinct ((_ extract 29 27) C1) (_ bv0 3)) true) ?x2951 ?x4902))))
 (let ((?x6246 (ite (and (distinct ((_ extract 38 38) C1) (_ bv0 1)) true) (_ bv38 47) (ite (and (distinct ((_ extract 37 37) C1) (_ bv0 1)) true) (_ bv37 47) (_ bv36 47)))))
 (let ((?x3329 (ite (and (distinct ((_ extract 41 41) C1) (_ bv0 1)) true) (_ bv41 47) (ite (and (distinct ((_ extract 40 40) C1) (_ bv0 1)) true) (_ bv40 47) (_ bv39 47)))))
 (let ((?x4732 (ite (and (distinct ((_ extract 44 44) C1) (_ bv0 1)) true) (_ bv44 47) (ite (and (distinct ((_ extract 43 43) C1) (_ bv0 1)) true) (_ bv43 47) (_ bv42 47)))))
 (let ((?x3823 (ite (and (distinct ((_ extract 46 45) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 46 46) C1) (_ bv0 1)) true) (_ bv46 47) (_ bv45 47)) ?x4732)))
 (let ((?x6803 (ite (and (distinct ((_ extract 46 42) C1) (_ bv0 5)) true) ?x3823 (ite (and (distinct ((_ extract 41 39) C1) (_ bv0 3)) true) ?x3329 ?x6246))))
 (let ((?x1317 (ite (and (distinct ((_ extract 46 24) C1) (_ bv0 23)) true) (ite (and (distinct ((_ extract 46 36) C1) (_ bv0 11)) true) ?x6803 ?x2867) (ite (and (distinct ((_ extract 23 12) C1) (_ bv0 12)) true) ?x3560 ?x3664))))
 (let ((?x5760 (bvsub ?x1317 ?x2756)))
 (let ((?x1672 (bvand %X C1)))
 (let ((?x5387 (bvor %Y C2)))
 (let (($x5490 (and (distinct (ite (= (ite (and (distinct ?x1672 (_ bv0 47)) true) (_ bv1 1) (_ bv0 1)) (_ bv1 1)) %Y ?x5387) (bvor (bvxor ((_ extract 10 0) (bvlshr ?x1672 ?x5760)) C2) %Y)) true)))
 (let ((?x6241 (ite (and (distinct ((_ extract 2 2) C1) (_ bv0 1)) true) (_ bv2 32) (ite (and (distinct ((_ extract 1 1) C1) (_ bv0 1)) true) (_ bv1 32) (_ bv0 32)))))
 (let ((?x2607 (ite (and (distinct ((_ extract 5 5) C1) (_ bv0 1)) true) (_ bv5 32) (ite (and (distinct ((_ extract 4 4) C1) (_ bv0 1)) true) (_ bv4 32) (_ bv3 32)))))
 (let ((?x3712 (ite (and (distinct ((_ extract 8 8) C1) (_ bv0 1)) true) (_ bv8 32) (ite (and (distinct ((_ extract 7 7) C1) (_ bv0 1)) true) (_ bv7 32) (_ bv6 32)))))
 (let ((?x3405 (ite (and (distinct ((_ extract 11 11) C1) (_ bv0 1)) true) (_ bv11 32) (ite (and (distinct ((_ extract 10 10) C1) (_ bv0 1)) true) (_ bv10 32) (_ bv9 32)))))
 (let ((?x4910 (ite (and (distinct ((_ extract 11 6) C1) (_ bv0 6)) true) (ite (and (distinct ((_ extract 11 9) C1) (_ bv0 3)) true) ?x3405 ?x3712) (ite (and (distinct ((_ extract 5 3) C1) (_ bv0 3)) true) ?x2607 ?x6241))))
 (let ((?x1349 (ite (and (distinct ((_ extract 14 14) C1) (_ bv0 1)) true) (_ bv14 32) (ite (and (distinct ((_ extract 13 13) C1) (_ bv0 1)) true) (_ bv13 32) (_ bv12 32)))))
 (let ((?x6297 (ite (and (distinct ((_ extract 17 17) C1) (_ bv0 1)) true) (_ bv17 32) (ite (and (distinct ((_ extract 16 16) C1) (_ bv0 1)) true) (_ bv16 32) (_ bv15 32)))))
 (let ((?x4791 (ite (and (distinct ((_ extract 20 20) C1) (_ bv0 1)) true) (_ bv20 32) (ite (and (distinct ((_ extract 19 19) C1) (_ bv0 1)) true) (_ bv19 32) (_ bv18 32)))))
 (let ((?x5598 (ite (and (distinct ((_ extract 23 23) C1) (_ bv0 1)) true) (_ bv23 32) (ite (and (distinct ((_ extract 22 22) C1) (_ bv0 1)) true) (_ bv22 32) (_ bv21 32)))))
 (let ((?x2755 (ite (and (distinct ((_ extract 23 18) C1) (_ bv0 6)) true) (ite (and (distinct ((_ extract 23 21) C1) (_ bv0 3)) true) ?x5598 ?x4791) (ite (and (distinct ((_ extract 17 15) C1) (_ bv0 3)) true) ?x6297 ?x1349))))
 (let ((?x3061 (ite (and (distinct ((_ extract 26 26) C1) (_ bv0 1)) true) (_ bv26 32) (ite (and (distinct ((_ extract 25 25) C1) (_ bv0 1)) true) (_ bv25 32) (_ bv24 32)))))
 (let ((?x5021 (ite (and (distinct ((_ extract 29 29) C1) (_ bv0 1)) true) (_ bv29 32) (ite (and (distinct ((_ extract 28 28) C1) (_ bv0 1)) true) (_ bv28 32) (_ bv27 32)))))
 (let ((?x2637 (ite (and (distinct ((_ extract 32 32) C1) (_ bv0 1)) true) (_ bv32 32) (ite (and (distinct ((_ extract 31 31) C1) (_ bv0 1)) true) (_ bv31 32) (_ bv30 32)))))
 (let ((?x2075 (ite (and (distinct ((_ extract 35 35) C1) (_ bv0 1)) true) (_ bv35 32) (ite (and (distinct ((_ extract 34 34) C1) (_ bv0 1)) true) (_ bv34 32) (_ bv33 32)))))
 (let ((?x4274 (ite (and (distinct ((_ extract 35 30) C1) (_ bv0 6)) true) (ite (and (distinct ((_ extract 35 33) C1) (_ bv0 3)) true) ?x2075 ?x2637) (ite (and (distinct ((_ extract 29 27) C1) (_ bv0 3)) true) ?x5021 ?x3061))))
 (let ((?x2854 (ite (and (distinct ((_ extract 38 38) C1) (_ bv0 1)) true) (_ bv38 32) (ite (and (distinct ((_ extract 37 37) C1) (_ bv0 1)) true) (_ bv37 32) (_ bv36 32)))))
 (let ((?x4630 (ite (and (distinct ((_ extract 41 41) C1) (_ bv0 1)) true) (_ bv41 32) (ite (and (distinct ((_ extract 40 40) C1) (_ bv0 1)) true) (_ bv40 32) (_ bv39 32)))))
 (let ((?x5630 (ite (and (distinct ((_ extract 44 44) C1) (_ bv0 1)) true) (_ bv44 32) (ite (and (distinct ((_ extract 43 43) C1) (_ bv0 1)) true) (_ bv43 32) (_ bv42 32)))))
 (let ((?x2046 (ite (and (distinct ((_ extract 46 45) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 46 46) C1) (_ bv0 1)) true) (_ bv46 32) (_ bv45 32)) ?x5630)))
 (let ((?x1877 (ite (and (distinct ((_ extract 46 42) C1) (_ bv0 5)) true) ?x2046 (ite (and (distinct ((_ extract 41 39) C1) (_ bv0 3)) true) ?x4630 ?x2854))))
 (let ((?x5194 (ite (and (distinct ((_ extract 46 24) C1) (_ bv0 23)) true) (ite (and (distinct ((_ extract 46 36) C1) (_ bv0 11)) true) ?x1877 ?x4274) (ite (and (distinct ((_ extract 23 12) C1) (_ bv0 12)) true) ?x2755 ?x4910))))
 (let ((?x4115 (ite (and (distinct ((_ extract 2 2) C2) (_ bv0 1)) true) (_ bv2 32) (ite (and (distinct ((_ extract 1 1) C2) (_ bv0 1)) true) (_ bv1 32) (_ bv0 32)))))
 (let ((?x2598 (ite (and (distinct ((_ extract 5 5) C2) (_ bv0 1)) true) (_ bv5 32) (ite (and (distinct ((_ extract 4 4) C2) (_ bv0 1)) true) (_ bv4 32) (_ bv3 32)))))
 (let ((?x2929 (ite (and (distinct ((_ extract 8 8) C2) (_ bv0 1)) true) (_ bv8 32) (ite (and (distinct ((_ extract 7 7) C2) (_ bv0 1)) true) (_ bv7 32) (_ bv6 32)))))
 (let ((?x4172 (ite (and (distinct ((_ extract 10 9) C2) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) C2) (_ bv0 1)) true) (_ bv10 32) (_ bv9 32)) ?x2929)))
 (let ((?x5222 (ite (and (distinct ((_ extract 10 6) C2) (_ bv0 5)) true) ?x4172 (ite (and (distinct ((_ extract 5 3) C2) (_ bv0 3)) true) ?x2598 ?x4115))))
 (and (and (and (distinct C1 (_ bv0 47)) true) (= (bvand C1 (bvsub C1 (_ bv1 47))) (_ bv0 47))) (and (and (distinct C2 (_ bv0 11)) true) (= (bvand C2 (bvsub C2 (_ bv1 11))) (_ bv0 11))) (bvslt ?x5222 ?x5194) $x5490))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
