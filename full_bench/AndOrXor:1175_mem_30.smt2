(set-info :source |
 Generated by Alive 0.1
 More info in N. P. Lopes, D. Menendez, S. Nagarakatte, J. Regehr.
 Provably Correct Peephole Optimizations with Alive. In PLDI'15.
|)

(set-info :status unknown)
(declare-fun mem0 () (_ BitVec 8))
(declare-fun |ana_MaskedValueIsZero(%A, lshr(-1, countLeadingZeros(C)))| () (_ BitVec 1))
(declare-fun C () (_ BitVec 34))
(declare-fun %A () (_ BitVec 34))
(assert
 (let (($x927 (and (distinct mem0 mem0) true)))
 (let (($x186517 (= |ana_MaskedValueIsZero(%A, lshr(-1, countLeadingZeros(C)))| (_ bv1 1))))
 (let ((?x187766 (ite (= ((_ extract 1 1) C) (_ bv1 1)) (_ bv32 34) (ite (= ((_ extract 0 0) C) (_ bv1 1)) (_ bv33 34) (_ bv34 34)))))
 (let ((?x187759 (ite (= ((_ extract 3 3) C) (_ bv1 1)) (_ bv30 34) (ite (= ((_ extract 2 2) C) (_ bv1 1)) (_ bv31 34) ?x187766))))
 (let ((?x187752 (ite (= ((_ extract 5 5) C) (_ bv1 1)) (_ bv28 34) (ite (= ((_ extract 4 4) C) (_ bv1 1)) (_ bv29 34) ?x187759))))
 (let ((?x187748 (ite (= ((_ extract 7 7) C) (_ bv1 1)) (_ bv26 34) (ite (= ((_ extract 6 6) C) (_ bv1 1)) (_ bv27 34) ?x187752))))
 (let ((?x187744 (ite (= ((_ extract 9 9) C) (_ bv1 1)) (_ bv24 34) (ite (= ((_ extract 8 8) C) (_ bv1 1)) (_ bv25 34) ?x187748))))
 (let ((?x187737 (ite (= ((_ extract 11 11) C) (_ bv1 1)) (_ bv22 34) (ite (= ((_ extract 10 10) C) (_ bv1 1)) (_ bv23 34) ?x187744))))
 (let ((?x187733 (ite (= ((_ extract 13 13) C) (_ bv1 1)) (_ bv20 34) (ite (= ((_ extract 12 12) C) (_ bv1 1)) (_ bv21 34) ?x187737))))
 (let ((?x187729 (ite (= ((_ extract 15 15) C) (_ bv1 1)) (_ bv18 34) (ite (= ((_ extract 14 14) C) (_ bv1 1)) (_ bv19 34) ?x187733))))
 (let ((?x187722 (ite (= ((_ extract 17 17) C) (_ bv1 1)) (_ bv16 34) (ite (= ((_ extract 16 16) C) (_ bv1 1)) (_ bv17 34) ?x187729))))
 (let ((?x187715 (ite (= ((_ extract 19 19) C) (_ bv1 1)) (_ bv14 34) (ite (= ((_ extract 18 18) C) (_ bv1 1)) (_ bv15 34) ?x187722))))
 (let ((?x187711 (ite (= ((_ extract 21 21) C) (_ bv1 1)) (_ bv12 34) (ite (= ((_ extract 20 20) C) (_ bv1 1)) (_ bv13 34) ?x187715))))
 (let ((?x187704 (ite (= ((_ extract 23 23) C) (_ bv1 1)) (_ bv10 34) (ite (= ((_ extract 22 22) C) (_ bv1 1)) (_ bv11 34) ?x187711))))
 (let ((?x187700 (ite (= ((_ extract 25 25) C) (_ bv1 1)) (_ bv8 34) (ite (= ((_ extract 24 24) C) (_ bv1 1)) (_ bv9 34) ?x187704))))
 (let ((?x187696 (ite (= ((_ extract 27 27) C) (_ bv1 1)) (_ bv6 34) (ite (= ((_ extract 26 26) C) (_ bv1 1)) (_ bv7 34) ?x187700))))
 (let ((?x187689 (ite (= ((_ extract 29 29) C) (_ bv1 1)) (_ bv4 34) (ite (= ((_ extract 28 28) C) (_ bv1 1)) (_ bv5 34) ?x187696))))
 (let ((?x187682 (ite (= ((_ extract 31 31) C) (_ bv1 1)) (_ bv2 34) (ite (= ((_ extract 30 30) C) (_ bv1 1)) (_ bv3 34) ?x187689))))
 (let ((?x187678 (ite (= ((_ extract 33 33) C) (_ bv1 1)) (_ bv0 34) (ite (= ((_ extract 32 32) C) (_ bv1 1)) (_ bv1 34) ?x187682))))
 (let (($x187844 (=> $x186517 (= (bvand %A (bvlshr (_ bv17179869183 34) ?x187678)) (_ bv0 34)))))
 (and $x187844 $x186517 $x927))))))))))))))))))))))
(check-sat)
