(set-info :status unknown)
(declare-fun %Y () (_ BitVec 11))
(declare-fun C2 () (_ BitVec 11))
(declare-fun C1 () (_ BitVec 5))
(declare-fun %X () (_ BitVec 5))
(assert
 (let ((?x15902 (ite (and (distinct ((_ extract 2 2) C2) (_ bv0 1)) true) (_ bv2 5) (ite (and (distinct ((_ extract 1 1) C2) (_ bv0 1)) true) (_ bv1 5) (_ bv0 5)))))
 (let ((?x20045 (ite (and (distinct ((_ extract 5 5) C2) (_ bv0 1)) true) (_ bv5 5) (ite (and (distinct ((_ extract 4 4) C2) (_ bv0 1)) true) (_ bv4 5) (_ bv3 5)))))
 (let ((?x20214 (ite (and (distinct ((_ extract 8 8) C2) (_ bv0 1)) true) (_ bv8 5) (ite (and (distinct ((_ extract 7 7) C2) (_ bv0 1)) true) (_ bv7 5) (_ bv6 5)))))
 (let ((?x6507 (ite (and (distinct ((_ extract 10 9) C2) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) C2) (_ bv0 1)) true) (_ bv10 5) (_ bv9 5)) ?x20214)))
 (let ((?x16965 (ite (and (distinct ((_ extract 10 6) C2) (_ bv0 5)) true) ?x6507 (ite (and (distinct ((_ extract 5 3) C2) (_ bv0 3)) true) ?x20045 ?x15902))))
 (let ((?x22787 (ite (and (distinct ((_ extract 2 2) C1) (_ bv0 1)) true) (_ bv2 5) (ite (and (distinct ((_ extract 1 1) C1) (_ bv0 1)) true) (_ bv1 5) (_ bv0 5)))))
 (let ((?x15209 (ite (and (distinct ((_ extract 4 3) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 4 4) C1) (_ bv0 1)) true) (_ bv4 5) (_ bv3 5)) ?x22787)))
 (let ((?x11162 (bvsub ?x15209 ?x16965)))
 (let ((?x23713 (bvand %X C1)))
 (let ((?x2007 (bvor %Y C2)))
 (let (($x4625 (and (distinct (ite (= (ite (and (distinct ?x23713 (_ bv0 5)) true) (_ bv1 1) (_ bv0 1)) (_ bv1 1)) %Y ?x2007) (bvor (bvxor ((_ zero_extend 6) (bvlshr ?x23713 ?x11162)) C2) %Y)) true)))
 (let ((?x10690 (ite (and (distinct ((_ extract 2 2) C1) (_ bv0 1)) true) (_ bv2 32) (ite (and (distinct ((_ extract 1 1) C1) (_ bv0 1)) true) (_ bv1 32) (_ bv0 32)))))
 (let ((?x7989 (ite (and (distinct ((_ extract 4 3) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 4 4) C1) (_ bv0 1)) true) (_ bv4 32) (_ bv3 32)) ?x10690)))
 (let ((?x21255 (ite (and (distinct ((_ extract 2 2) C2) (_ bv0 1)) true) (_ bv2 32) (ite (and (distinct ((_ extract 1 1) C2) (_ bv0 1)) true) (_ bv1 32) (_ bv0 32)))))
 (let ((?x10330 (ite (and (distinct ((_ extract 5 5) C2) (_ bv0 1)) true) (_ bv5 32) (ite (and (distinct ((_ extract 4 4) C2) (_ bv0 1)) true) (_ bv4 32) (_ bv3 32)))))
 (let ((?x12261 (ite (and (distinct ((_ extract 8 8) C2) (_ bv0 1)) true) (_ bv8 32) (ite (and (distinct ((_ extract 7 7) C2) (_ bv0 1)) true) (_ bv7 32) (_ bv6 32)))))
 (let ((?x857 (ite (and (distinct ((_ extract 10 9) C2) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) C2) (_ bv0 1)) true) (_ bv10 32) (_ bv9 32)) ?x12261)))
 (let ((?x10112 (ite (and (distinct ((_ extract 10 6) C2) (_ bv0 5)) true) ?x857 (ite (and (distinct ((_ extract 5 3) C2) (_ bv0 3)) true) ?x10330 ?x21255))))
 (and (and (and (distinct C1 (_ bv0 5)) true) (= (bvand C1 (bvsub C1 (_ bv1 5))) (_ bv0 5))) (and (and (distinct C2 (_ bv0 11)) true) (= (bvand C2 (bvsub C2 (_ bv1 11))) (_ bv0 11))) (bvslt ?x10112 ?x7989) $x4625))))))))))))))))))))
(check-sat)
