(set-info :status unknown)
(declare-fun mem0 () (_ BitVec 8))
(declare-fun C1 () (_ BitVec 55))
(declare-fun C2 () (_ BitVec 11))
(assert
 (let ((?x4800 (ite (and (distinct ((_ extract 3 2) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 3 3) C1) (_ bv0 1)) true) (_ bv3 32) (_ bv2 32)) (ite (and (distinct ((_ extract 1 1) C1) (_ bv0 1)) true) (_ bv1 32) (_ bv0 32)))))
 (let ((?x2054 (ite (and (distinct ((_ extract 6 6) C1) (_ bv0 1)) true) (_ bv6 32) (ite (and (distinct ((_ extract 5 5) C1) (_ bv0 1)) true) (_ bv5 32) (_ bv4 32)))))
 (let ((?x4369 (ite (and (distinct ((_ extract 10 9) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) C1) (_ bv0 1)) true) (_ bv10 32) (_ bv9 32)) (ite (and (distinct ((_ extract 8 8) C1) (_ bv0 1)) true) (_ bv8 32) (_ bv7 32)))))
 (let ((?x5544 (ite (and (distinct ((_ extract 13 13) C1) (_ bv0 1)) true) (_ bv13 32) (ite (and (distinct ((_ extract 12 12) C1) (_ bv0 1)) true) (_ bv12 32) (_ bv11 32)))))
 (let ((?x3646 (ite (and (distinct ((_ extract 13 7) C1) (_ bv0 7)) true) (ite (and (distinct ((_ extract 13 11) C1) (_ bv0 3)) true) ?x5544 ?x4369) (ite (and (distinct ((_ extract 6 4) C1) (_ bv0 3)) true) ?x2054 ?x4800))))
 (let ((?x4438 (ite (and (distinct ((_ extract 17 16) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 17 17) C1) (_ bv0 1)) true) (_ bv17 32) (_ bv16 32)) (ite (and (distinct ((_ extract 15 15) C1) (_ bv0 1)) true) (_ bv15 32) (_ bv14 32)))))
 (let ((?x3566 (ite (and (distinct ((_ extract 20 20) C1) (_ bv0 1)) true) (_ bv20 32) (ite (and (distinct ((_ extract 19 19) C1) (_ bv0 1)) true) (_ bv19 32) (_ bv18 32)))))
 (let ((?x3776 (ite (and (distinct ((_ extract 24 23) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 24 24) C1) (_ bv0 1)) true) (_ bv24 32) (_ bv23 32)) (ite (and (distinct ((_ extract 22 22) C1) (_ bv0 1)) true) (_ bv22 32) (_ bv21 32)))))
 (let ((?x4815 (ite (and (distinct ((_ extract 27 27) C1) (_ bv0 1)) true) (_ bv27 32) (ite (and (distinct ((_ extract 26 26) C1) (_ bv0 1)) true) (_ bv26 32) (_ bv25 32)))))
 (let ((?x2195 (ite (and (distinct ((_ extract 27 21) C1) (_ bv0 7)) true) (ite (and (distinct ((_ extract 27 25) C1) (_ bv0 3)) true) ?x4815 ?x3776) (ite (and (distinct ((_ extract 20 18) C1) (_ bv0 3)) true) ?x3566 ?x4438))))
 (let ((?x1784 (ite (and (distinct ((_ extract 31 30) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 31 31) C1) (_ bv0 1)) true) (_ bv31 32) (_ bv30 32)) (ite (and (distinct ((_ extract 29 29) C1) (_ bv0 1)) true) (_ bv29 32) (_ bv28 32)))))
 (let ((?x3500 (ite (and (distinct ((_ extract 34 34) C1) (_ bv0 1)) true) (_ bv34 32) (ite (and (distinct ((_ extract 33 33) C1) (_ bv0 1)) true) (_ bv33 32) (_ bv32 32)))))
 (let ((?x2491 (ite (and (distinct ((_ extract 38 37) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 38 38) C1) (_ bv0 1)) true) (_ bv38 32) (_ bv37 32)) (ite (and (distinct ((_ extract 36 36) C1) (_ bv0 1)) true) (_ bv36 32) (_ bv35 32)))))
 (let ((?x2968 (ite (and (distinct ((_ extract 41 41) C1) (_ bv0 1)) true) (_ bv41 32) (ite (and (distinct ((_ extract 40 40) C1) (_ bv0 1)) true) (_ bv40 32) (_ bv39 32)))))
 (let ((?x4366 (ite (and (distinct ((_ extract 41 35) C1) (_ bv0 7)) true) (ite (and (distinct ((_ extract 41 39) C1) (_ bv0 3)) true) ?x2968 ?x2491) (ite (and (distinct ((_ extract 34 32) C1) (_ bv0 3)) true) ?x3500 ?x1784))))
 (let ((?x1341 (ite (and (distinct ((_ extract 45 44) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 45 45) C1) (_ bv0 1)) true) (_ bv45 32) (_ bv44 32)) (ite (and (distinct ((_ extract 43 43) C1) (_ bv0 1)) true) (_ bv43 32) (_ bv42 32)))))
 (let ((?x3324 (ite (and (distinct ((_ extract 48 48) C1) (_ bv0 1)) true) (_ bv48 32) (ite (and (distinct ((_ extract 47 47) C1) (_ bv0 1)) true) (_ bv47 32) (_ bv46 32)))))
 (let ((?x3722 (ite (and (distinct ((_ extract 51 51) C1) (_ bv0 1)) true) (_ bv51 32) (ite (and (distinct ((_ extract 50 50) C1) (_ bv0 1)) true) (_ bv50 32) (_ bv49 32)))))
 (let ((?x4821 (ite (and (distinct ((_ extract 54 54) C1) (_ bv0 1)) true) (_ bv54 32) (ite (and (distinct ((_ extract 53 53) C1) (_ bv0 1)) true) (_ bv53 32) (_ bv52 32)))))
 (let ((?x1884 (ite (and (distinct ((_ extract 54 49) C1) (_ bv0 6)) true) (ite (and (distinct ((_ extract 54 52) C1) (_ bv0 3)) true) ?x4821 ?x3722) (ite (and (distinct ((_ extract 48 46) C1) (_ bv0 3)) true) ?x3324 ?x1341))))
 (let ((?x1248 (ite (and (distinct ((_ extract 54 28) C1) (_ bv0 27)) true) (ite (and (distinct ((_ extract 54 42) C1) (_ bv0 13)) true) ?x1884 ?x4366) (ite (and (distinct ((_ extract 27 14) C1) (_ bv0 14)) true) ?x2195 ?x3646))))
 (let ((?x1732 (ite (and (distinct ((_ extract 2 2) C2) (_ bv0 1)) true) (_ bv2 32) (ite (and (distinct ((_ extract 1 1) C2) (_ bv0 1)) true) (_ bv1 32) (_ bv0 32)))))
 (let ((?x1856 (ite (and (distinct ((_ extract 5 5) C2) (_ bv0 1)) true) (_ bv5 32) (ite (and (distinct ((_ extract 4 4) C2) (_ bv0 1)) true) (_ bv4 32) (_ bv3 32)))))
 (let ((?x4570 (ite (and (distinct ((_ extract 8 8) C2) (_ bv0 1)) true) (_ bv8 32) (ite (and (distinct ((_ extract 7 7) C2) (_ bv0 1)) true) (_ bv7 32) (_ bv6 32)))))
 (let ((?x5128 (ite (and (distinct ((_ extract 10 9) C2) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) C2) (_ bv0 1)) true) (_ bv10 32) (_ bv9 32)) ?x4570)))
 (let ((?x4592 (ite (and (distinct ((_ extract 10 6) C2) (_ bv0 5)) true) ?x5128 (ite (and (distinct ((_ extract 5 3) C2) (_ bv0 3)) true) ?x1856 ?x1732))))
 (and (and (and (distinct C1 (_ bv0 55)) true) (= (bvand C1 (bvsub C1 (_ bv1 55))) (_ bv0 55))) (and (and (distinct C2 (_ bv0 11)) true) (= (bvand C2 (bvsub C2 (_ bv1 11))) (_ bv0 11))) (bvsge ?x4592 ?x1248) (and (distinct mem0 mem0) true)))))))))))))))))))))))))))))
(check-sat)
