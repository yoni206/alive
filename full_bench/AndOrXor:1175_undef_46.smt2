(set-info :source |
 Generated by Alive 0.1
 More info in N. P. Lopes, D. Menendez, S. Nagarakatte, J. Regehr.
 Provably Correct Peephole Optimizations with Alive. In PLDI'15.
|)

(set-info :status unknown)
(declare-fun |ana_MaskedValueIsZero(%A, lshr(-1, countLeadingZeros(C)))| () (_ BitVec 1))
(declare-fun C () (_ BitVec 50))
(declare-fun %A () (_ BitVec 50))
(assert
 (let (($x186517 (= |ana_MaskedValueIsZero(%A, lshr(-1, countLeadingZeros(C)))| (_ bv1 1))))
 (let ((?x191062 (ite (= ((_ extract 1 1) C) (_ bv1 1)) (_ bv48 50) (ite (= ((_ extract 0 0) C) (_ bv1 1)) (_ bv49 50) (_ bv50 50)))))
 (let ((?x191055 (ite (= ((_ extract 3 3) C) (_ bv1 1)) (_ bv46 50) (ite (= ((_ extract 2 2) C) (_ bv1 1)) (_ bv47 50) ?x191062))))
 (let ((?x191225 (ite (= ((_ extract 5 5) C) (_ bv1 1)) (_ bv44 50) (ite (= ((_ extract 4 4) C) (_ bv1 1)) (_ bv45 50) ?x191055))))
 (let ((?x191227 (ite (= ((_ extract 7 7) C) (_ bv1 1)) (_ bv42 50) (ite (= ((_ extract 6 6) C) (_ bv1 1)) (_ bv43 50) ?x191225))))
 (let ((?x191229 (ite (= ((_ extract 9 9) C) (_ bv1 1)) (_ bv40 50) (ite (= ((_ extract 8 8) C) (_ bv1 1)) (_ bv41 50) ?x191227))))
 (let ((?x191231 (ite (= ((_ extract 11 11) C) (_ bv1 1)) (_ bv38 50) (ite (= ((_ extract 10 10) C) (_ bv1 1)) (_ bv39 50) ?x191229))))
 (let ((?x191233 (ite (= ((_ extract 13 13) C) (_ bv1 1)) (_ bv36 50) (ite (= ((_ extract 12 12) C) (_ bv1 1)) (_ bv37 50) ?x191231))))
 (let ((?x191235 (ite (= ((_ extract 15 15) C) (_ bv1 1)) (_ bv34 50) (ite (= ((_ extract 14 14) C) (_ bv1 1)) (_ bv35 50) ?x191233))))
 (let ((?x191237 (ite (= ((_ extract 17 17) C) (_ bv1 1)) (_ bv32 50) (ite (= ((_ extract 16 16) C) (_ bv1 1)) (_ bv33 50) ?x191235))))
 (let ((?x191239 (ite (= ((_ extract 19 19) C) (_ bv1 1)) (_ bv30 50) (ite (= ((_ extract 18 18) C) (_ bv1 1)) (_ bv31 50) ?x191237))))
 (let ((?x191241 (ite (= ((_ extract 21 21) C) (_ bv1 1)) (_ bv28 50) (ite (= ((_ extract 20 20) C) (_ bv1 1)) (_ bv29 50) ?x191239))))
 (let ((?x191243 (ite (= ((_ extract 23 23) C) (_ bv1 1)) (_ bv26 50) (ite (= ((_ extract 22 22) C) (_ bv1 1)) (_ bv27 50) ?x191241))))
 (let ((?x191245 (ite (= ((_ extract 25 25) C) (_ bv1 1)) (_ bv24 50) (ite (= ((_ extract 24 24) C) (_ bv1 1)) (_ bv25 50) ?x191243))))
 (let ((?x191247 (ite (= ((_ extract 27 27) C) (_ bv1 1)) (_ bv22 50) (ite (= ((_ extract 26 26) C) (_ bv1 1)) (_ bv23 50) ?x191245))))
 (let ((?x191249 (ite (= ((_ extract 29 29) C) (_ bv1 1)) (_ bv20 50) (ite (= ((_ extract 28 28) C) (_ bv1 1)) (_ bv21 50) ?x191247))))
 (let ((?x191251 (ite (= ((_ extract 31 31) C) (_ bv1 1)) (_ bv18 50) (ite (= ((_ extract 30 30) C) (_ bv1 1)) (_ bv19 50) ?x191249))))
 (let ((?x191253 (ite (= ((_ extract 33 33) C) (_ bv1 1)) (_ bv16 50) (ite (= ((_ extract 32 32) C) (_ bv1 1)) (_ bv17 50) ?x191251))))
 (let ((?x191255 (ite (= ((_ extract 35 35) C) (_ bv1 1)) (_ bv14 50) (ite (= ((_ extract 34 34) C) (_ bv1 1)) (_ bv15 50) ?x191253))))
 (let ((?x191257 (ite (= ((_ extract 37 37) C) (_ bv1 1)) (_ bv12 50) (ite (= ((_ extract 36 36) C) (_ bv1 1)) (_ bv13 50) ?x191255))))
 (let ((?x191259 (ite (= ((_ extract 39 39) C) (_ bv1 1)) (_ bv10 50) (ite (= ((_ extract 38 38) C) (_ bv1 1)) (_ bv11 50) ?x191257))))
 (let ((?x191261 (ite (= ((_ extract 41 41) C) (_ bv1 1)) (_ bv8 50) (ite (= ((_ extract 40 40) C) (_ bv1 1)) (_ bv9 50) ?x191259))))
 (let ((?x191263 (ite (= ((_ extract 43 43) C) (_ bv1 1)) (_ bv6 50) (ite (= ((_ extract 42 42) C) (_ bv1 1)) (_ bv7 50) ?x191261))))
 (let ((?x191265 (ite (= ((_ extract 45 45) C) (_ bv1 1)) (_ bv4 50) (ite (= ((_ extract 44 44) C) (_ bv1 1)) (_ bv5 50) ?x191263))))
 (let ((?x191267 (ite (= ((_ extract 47 47) C) (_ bv1 1)) (_ bv2 50) (ite (= ((_ extract 46 46) C) (_ bv1 1)) (_ bv3 50) ?x191265))))
 (let ((?x191269 (ite (= ((_ extract 49 49) C) (_ bv1 1)) (_ bv0 50) (ite (= ((_ extract 48 48) C) (_ bv1 1)) (_ bv1 50) ?x191267))))
 (let (($x191276 (=> $x186517 (= (bvand %A (bvlshr (_ bv1125899906842623 50) ?x191269)) (_ bv0 50)))))
 (and $x191276 $x186517 false)))))))))))))))))))))))))))))
(check-sat)
