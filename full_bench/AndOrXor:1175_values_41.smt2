(set-info :source |
 Generated by Alive 0.1
 More info in N. P. Lopes, D. Menendez, S. Nagarakatte, J. Regehr.
 Provably Correct Peephole Optimizations with Alive. In PLDI'15.
|)

(set-info :status unknown)
(declare-fun C () (_ BitVec 45))
(declare-fun %B () (_ BitVec 45))
(declare-fun %A () (_ BitVec 45))
(declare-fun |ana_MaskedValueIsZero(%A, lshr(-1, countLeadingZeros(C)))| () (_ BitVec 1))
(assert
 (let (($x190129 (and (distinct (bvand (bvsub %A %B) C) (bvand (bvsub (_ bv0 45) %B) C)) true)))
 (let (($x186517 (= |ana_MaskedValueIsZero(%A, lshr(-1, countLeadingZeros(C)))| (_ bv1 1))))
 (let ((?x189948 (ite (= ((_ extract 1 1) C) (_ bv1 1)) (_ bv43 45) (ite (= ((_ extract 0 0) C) (_ bv1 1)) (_ bv44 45) (_ bv45 45)))))
 (let ((?x189944 (ite (= ((_ extract 3 3) C) (_ bv1 1)) (_ bv41 45) (ite (= ((_ extract 2 2) C) (_ bv1 1)) (_ bv42 45) ?x189948))))
 (let ((?x189940 (ite (= ((_ extract 5 5) C) (_ bv1 1)) (_ bv39 45) (ite (= ((_ extract 4 4) C) (_ bv1 1)) (_ bv40 45) ?x189944))))
 (let ((?x189933 (ite (= ((_ extract 7 7) C) (_ bv1 1)) (_ bv37 45) (ite (= ((_ extract 6 6) C) (_ bv1 1)) (_ bv38 45) ?x189940))))
 (let ((?x189926 (ite (= ((_ extract 9 9) C) (_ bv1 1)) (_ bv35 45) (ite (= ((_ extract 8 8) C) (_ bv1 1)) (_ bv36 45) ?x189933))))
 (let ((?x189922 (ite (= ((_ extract 11 11) C) (_ bv1 1)) (_ bv33 45) (ite (= ((_ extract 10 10) C) (_ bv1 1)) (_ bv34 45) ?x189926))))
 (let ((?x189915 (ite (= ((_ extract 13 13) C) (_ bv1 1)) (_ bv31 45) (ite (= ((_ extract 12 12) C) (_ bv1 1)) (_ bv32 45) ?x189922))))
 (let ((?x190085 (ite (= ((_ extract 15 15) C) (_ bv1 1)) (_ bv29 45) (ite (= ((_ extract 14 14) C) (_ bv1 1)) (_ bv30 45) ?x189915))))
 (let ((?x190087 (ite (= ((_ extract 17 17) C) (_ bv1 1)) (_ bv27 45) (ite (= ((_ extract 16 16) C) (_ bv1 1)) (_ bv28 45) ?x190085))))
 (let ((?x190089 (ite (= ((_ extract 19 19) C) (_ bv1 1)) (_ bv25 45) (ite (= ((_ extract 18 18) C) (_ bv1 1)) (_ bv26 45) ?x190087))))
 (let ((?x190091 (ite (= ((_ extract 21 21) C) (_ bv1 1)) (_ bv23 45) (ite (= ((_ extract 20 20) C) (_ bv1 1)) (_ bv24 45) ?x190089))))
 (let ((?x190093 (ite (= ((_ extract 23 23) C) (_ bv1 1)) (_ bv21 45) (ite (= ((_ extract 22 22) C) (_ bv1 1)) (_ bv22 45) ?x190091))))
 (let ((?x190095 (ite (= ((_ extract 25 25) C) (_ bv1 1)) (_ bv19 45) (ite (= ((_ extract 24 24) C) (_ bv1 1)) (_ bv20 45) ?x190093))))
 (let ((?x190097 (ite (= ((_ extract 27 27) C) (_ bv1 1)) (_ bv17 45) (ite (= ((_ extract 26 26) C) (_ bv1 1)) (_ bv18 45) ?x190095))))
 (let ((?x190099 (ite (= ((_ extract 29 29) C) (_ bv1 1)) (_ bv15 45) (ite (= ((_ extract 28 28) C) (_ bv1 1)) (_ bv16 45) ?x190097))))
 (let ((?x190101 (ite (= ((_ extract 31 31) C) (_ bv1 1)) (_ bv13 45) (ite (= ((_ extract 30 30) C) (_ bv1 1)) (_ bv14 45) ?x190099))))
 (let ((?x190103 (ite (= ((_ extract 33 33) C) (_ bv1 1)) (_ bv11 45) (ite (= ((_ extract 32 32) C) (_ bv1 1)) (_ bv12 45) ?x190101))))
 (let ((?x190105 (ite (= ((_ extract 35 35) C) (_ bv1 1)) (_ bv9 45) (ite (= ((_ extract 34 34) C) (_ bv1 1)) (_ bv10 45) ?x190103))))
 (let ((?x190107 (ite (= ((_ extract 37 37) C) (_ bv1 1)) (_ bv7 45) (ite (= ((_ extract 36 36) C) (_ bv1 1)) (_ bv8 45) ?x190105))))
 (let ((?x190109 (ite (= ((_ extract 39 39) C) (_ bv1 1)) (_ bv5 45) (ite (= ((_ extract 38 38) C) (_ bv1 1)) (_ bv6 45) ?x190107))))
 (let ((?x190111 (ite (= ((_ extract 41 41) C) (_ bv1 1)) (_ bv3 45) (ite (= ((_ extract 40 40) C) (_ bv1 1)) (_ bv4 45) ?x190109))))
 (let ((?x190113 (ite (= ((_ extract 43 43) C) (_ bv1 1)) (_ bv1 45) (ite (= ((_ extract 42 42) C) (_ bv1 1)) (_ bv2 45) ?x190111))))
 (let (($x190120 (= (bvand %A (bvlshr (_ bv35184372088831 45) (ite (= ((_ extract 44 44) C) (_ bv1 1)) (_ bv0 45) ?x190113))) (_ bv0 45))))
 (let (($x190121 (=> $x186517 $x190120)))
 (and $x190121 $x186517 $x190129))))))))))))))))))))))))))))
(check-sat)
