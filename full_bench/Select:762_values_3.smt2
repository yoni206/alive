(set-info :status unknown)
(declare-fun C3 () (_ BitVec 11))
(declare-fun C2 () (_ BitVec 11))
(declare-fun C () (_ BitVec 7))
(declare-fun %Op () (_ BitVec 7))
(assert
 (let ((?x12878 (bvsub C2 C3)))
 (let ((?x5676 (ite (and (distinct ((_ extract 2 2) ?x12878) (_ bv0 1)) true) (_ bv2 11) (ite (and (distinct ((_ extract 1 1) ?x12878) (_ bv0 1)) true) (_ bv1 11) (_ bv0 11)))))
 (let ((?x6652 (ite (and (distinct ((_ extract 5 5) ?x12878) (_ bv0 1)) true) (_ bv5 11) (ite (and (distinct ((_ extract 4 4) ?x12878) (_ bv0 1)) true) (_ bv4 11) (_ bv3 11)))))
 (let ((?x13095 (ite (and (distinct ((_ extract 8 8) ?x12878) (_ bv0 1)) true) (_ bv8 11) (ite (and (distinct ((_ extract 7 7) ?x12878) (_ bv0 1)) true) (_ bv7 11) (_ bv6 11)))))
 (let ((?x13102 (ite (and (distinct ((_ extract 10 9) ?x12878) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) ?x12878) (_ bv0 1)) true) (_ bv10 11) (_ bv9 11)) ?x13095)))
 (let ((?x9866 (ite (and (distinct ((_ extract 10 6) ?x12878) (_ bv0 5)) true) ?x13102 (ite (and (distinct ((_ extract 5 3) ?x12878) (_ bv0 3)) true) ?x6652 ?x5676))))
 (let ((?x11652 (ite (and (distinct ((_ extract 3 2) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 3 3) C) (_ bv0 1)) true) (_ bv3 11) (_ bv2 11)) (ite (and (distinct ((_ extract 1 1) C) (_ bv0 1)) true) (_ bv1 11) (_ bv0 11)))))
 (let ((?x4269 (ite (and (distinct ((_ extract 6 6) C) (_ bv0 1)) true) (_ bv6 11) (ite (and (distinct ((_ extract 5 5) C) (_ bv0 1)) true) (_ bv5 11) (_ bv4 11)))))
 (let ((?x6265 (bvsub (ite (and (distinct ((_ extract 6 4) C) (_ bv0 3)) true) ?x4269 ?x11652) ?x9866)))
 (let ((?x21707 (ite (bvsgt (_ bv0 11) ?x6265) (_ bv0 11) ?x6265)))
 (let ((?x10620 (bvsub ?x9866 (ite (and (distinct ((_ extract 6 4) C) (_ bv0 3)) true) ?x4269 ?x11652))))
 (let ((?x19791 (ite (bvsgt (_ bv0 11) ?x10620) (_ bv0 11) ?x10620)))
 (let ((?x20291 (bvxor (bvlshr (bvshl ((_ zero_extend 4) (bvand %Op C)) ?x19791) ?x21707) ?x12878)))
 (let (($x5888 (and (distinct (ite (= (ite (= (bvand %Op C) (_ bv0 7)) (_ bv1 1) (_ bv0 1)) (_ bv1 1)) C2 C3) (bvadd ?x20291 C3)) true)))
 (let ((?x11158 (ite (and (distinct ((_ extract 3 2) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 3 3) C) (_ bv0 1)) true) (_ bv3 32) (_ bv2 32)) (ite (and (distinct ((_ extract 1 1) C) (_ bv0 1)) true) (_ bv1 32) (_ bv0 32)))))
 (let ((?x20901 (ite (and (distinct ((_ extract 6 6) C) (_ bv0 1)) true) (_ bv6 32) (ite (and (distinct ((_ extract 5 5) C) (_ bv0 1)) true) (_ bv5 32) (_ bv4 32)))))
 (and (and (and (distinct C (_ bv0 7)) true) (= (bvand C (bvsub C (_ bv1 7))) (_ bv0 7))) (and (and (distinct ?x12878 (_ bv0 11)) true) (= (bvand ?x12878 (bvsub ?x12878 (_ bv1 11))) (_ bv0 11))) (bvslt (ite (and (distinct ((_ extract 6 4) C) (_ bv0 3)) true) ?x20901 ?x11158) (_ bv11 32)) $x5888))))))))))))))))))
(check-sat)
