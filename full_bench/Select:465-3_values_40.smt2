(set-info :status unknown)
(declare-fun %Y () (_ BitVec 11))
(declare-fun C2 () (_ BitVec 11))
(declare-fun C1 () (_ BitVec 41))
(declare-fun %X () (_ BitVec 41))
(assert
 (let ((?x4719 (ite (and (distinct ((_ extract 2 2) C2) (_ bv0 1)) true) (_ bv2 41) (ite (and (distinct ((_ extract 1 1) C2) (_ bv0 1)) true) (_ bv1 41) (_ bv0 41)))))
 (let ((?x4044 (ite (and (distinct ((_ extract 5 5) C2) (_ bv0 1)) true) (_ bv5 41) (ite (and (distinct ((_ extract 4 4) C2) (_ bv0 1)) true) (_ bv4 41) (_ bv3 41)))))
 (let ((?x5134 (ite (and (distinct ((_ extract 8 8) C2) (_ bv0 1)) true) (_ bv8 41) (ite (and (distinct ((_ extract 7 7) C2) (_ bv0 1)) true) (_ bv7 41) (_ bv6 41)))))
 (let ((?x5071 (ite (and (distinct ((_ extract 10 9) C2) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) C2) (_ bv0 1)) true) (_ bv10 41) (_ bv9 41)) ?x5134)))
 (let ((?x3342 (ite (and (distinct ((_ extract 10 6) C2) (_ bv0 5)) true) ?x5071 (ite (and (distinct ((_ extract 5 3) C2) (_ bv0 3)) true) ?x4044 ?x4719))))
 (let ((?x4463 (ite (and (distinct ((_ extract 2 2) C1) (_ bv0 1)) true) (_ bv2 41) (ite (and (distinct ((_ extract 1 1) C1) (_ bv0 1)) true) (_ bv1 41) (_ bv0 41)))))
 (let ((?x3923 (ite (and (distinct ((_ extract 5 5) C1) (_ bv0 1)) true) (_ bv5 41) (ite (and (distinct ((_ extract 4 4) C1) (_ bv0 1)) true) (_ bv4 41) (_ bv3 41)))))
 (let ((?x4671 (ite (and (distinct ((_ extract 8 8) C1) (_ bv0 1)) true) (_ bv8 41) (ite (and (distinct ((_ extract 7 7) C1) (_ bv0 1)) true) (_ bv7 41) (_ bv6 41)))))
 (let ((?x3421 (ite (and (distinct ((_ extract 10 9) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) C1) (_ bv0 1)) true) (_ bv10 41) (_ bv9 41)) ?x4671)))
 (let ((?x4440 (ite (and (distinct ((_ extract 10 6) C1) (_ bv0 5)) true) ?x3421 (ite (and (distinct ((_ extract 5 3) C1) (_ bv0 3)) true) ?x3923 ?x4463))))
 (let ((?x1725 (ite (and (distinct ((_ extract 13 13) C1) (_ bv0 1)) true) (_ bv13 41) (ite (and (distinct ((_ extract 12 12) C1) (_ bv0 1)) true) (_ bv12 41) (_ bv11 41)))))
 (let ((?x4931 (ite (and (distinct ((_ extract 15 14) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 15 15) C1) (_ bv0 1)) true) (_ bv15 41) (_ bv14 41)) ?x1725)))
 (let ((?x4891 (ite (and (distinct ((_ extract 18 18) C1) (_ bv0 1)) true) (_ bv18 41) (ite (and (distinct ((_ extract 17 17) C1) (_ bv0 1)) true) (_ bv17 41) (_ bv16 41)))))
 (let ((?x1606 (ite (and (distinct ((_ extract 20 19) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 20 20) C1) (_ bv0 1)) true) (_ bv20 41) (_ bv19 41)) ?x4891)))
 (let ((?x4420 (ite (and (distinct ((_ extract 20 11) C1) (_ bv0 10)) true) (ite (and (distinct ((_ extract 20 16) C1) (_ bv0 5)) true) ?x1606 ?x4931) ?x4440)))
 (let ((?x5079 (ite (and (distinct ((_ extract 23 23) C1) (_ bv0 1)) true) (_ bv23 41) (ite (and (distinct ((_ extract 22 22) C1) (_ bv0 1)) true) (_ bv22 41) (_ bv21 41)))))
 (let ((?x5635 (ite (and (distinct ((_ extract 25 24) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 25 25) C1) (_ bv0 1)) true) (_ bv25 41) (_ bv24 41)) ?x5079)))
 (let ((?x3960 (ite (and (distinct ((_ extract 28 28) C1) (_ bv0 1)) true) (_ bv28 41) (ite (and (distinct ((_ extract 27 27) C1) (_ bv0 1)) true) (_ bv27 41) (_ bv26 41)))))
 (let ((?x2382 (ite (and (distinct ((_ extract 30 29) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 30 30) C1) (_ bv0 1)) true) (_ bv30 41) (_ bv29 41)) ?x3960)))
 (let ((?x3088 (ite (and (distinct ((_ extract 33 33) C1) (_ bv0 1)) true) (_ bv33 41) (ite (and (distinct ((_ extract 32 32) C1) (_ bv0 1)) true) (_ bv32 41) (_ bv31 41)))))
 (let ((?x3112 (ite (and (distinct ((_ extract 35 34) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 35 35) C1) (_ bv0 1)) true) (_ bv35 41) (_ bv34 41)) ?x3088)))
 (let ((?x4084 (ite (and (distinct ((_ extract 38 38) C1) (_ bv0 1)) true) (_ bv38 41) (ite (and (distinct ((_ extract 37 37) C1) (_ bv0 1)) true) (_ bv37 41) (_ bv36 41)))))
 (let ((?x1209 (ite (and (distinct ((_ extract 40 39) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 40 40) C1) (_ bv0 1)) true) (_ bv40 41) (_ bv39 41)) ?x4084)))
 (let ((?x2235 (ite (and (distinct ((_ extract 40 31) C1) (_ bv0 10)) true) (ite (and (distinct ((_ extract 40 36) C1) (_ bv0 5)) true) ?x1209 ?x3112) (ite (and (distinct ((_ extract 30 26) C1) (_ bv0 5)) true) ?x2382 ?x5635))))
 (let ((?x2772 (bvsub (ite (and (distinct ((_ extract 40 21) C1) (_ bv0 20)) true) ?x2235 ?x4420) ?x3342)))
 (let ((?x1494 (bvand %X C1)))
 (let (($x1896 (and (distinct (ite (= (ite (= ?x1494 (_ bv0 41)) (_ bv1 1) (_ bv0 1)) (_ bv1 1)) %Y (bvor %Y C2)) (bvor ((_ extract 10 0) (bvlshr ?x1494 ?x2772)) %Y)) true)))
 (let ((?x4854 (ite (and (distinct ((_ extract 2 2) C1) (_ bv0 1)) true) (_ bv2 32) (ite (and (distinct ((_ extract 1 1) C1) (_ bv0 1)) true) (_ bv1 32) (_ bv0 32)))))
 (let ((?x2449 (ite (and (distinct ((_ extract 5 5) C1) (_ bv0 1)) true) (_ bv5 32) (ite (and (distinct ((_ extract 4 4) C1) (_ bv0 1)) true) (_ bv4 32) (_ bv3 32)))))
 (let ((?x4476 (ite (and (distinct ((_ extract 8 8) C1) (_ bv0 1)) true) (_ bv8 32) (ite (and (distinct ((_ extract 7 7) C1) (_ bv0 1)) true) (_ bv7 32) (_ bv6 32)))))
 (let ((?x1858 (ite (and (distinct ((_ extract 10 9) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) C1) (_ bv0 1)) true) (_ bv10 32) (_ bv9 32)) ?x4476)))
 (let ((?x1655 (ite (and (distinct ((_ extract 10 6) C1) (_ bv0 5)) true) ?x1858 (ite (and (distinct ((_ extract 5 3) C1) (_ bv0 3)) true) ?x2449 ?x4854))))
 (let ((?x4355 (ite (and (distinct ((_ extract 13 13) C1) (_ bv0 1)) true) (_ bv13 32) (ite (and (distinct ((_ extract 12 12) C1) (_ bv0 1)) true) (_ bv12 32) (_ bv11 32)))))
 (let ((?x5334 (ite (and (distinct ((_ extract 15 14) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 15 15) C1) (_ bv0 1)) true) (_ bv15 32) (_ bv14 32)) ?x4355)))
 (let ((?x3955 (ite (and (distinct ((_ extract 18 18) C1) (_ bv0 1)) true) (_ bv18 32) (ite (and (distinct ((_ extract 17 17) C1) (_ bv0 1)) true) (_ bv17 32) (_ bv16 32)))))
 (let ((?x3759 (ite (and (distinct ((_ extract 20 19) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 20 20) C1) (_ bv0 1)) true) (_ bv20 32) (_ bv19 32)) ?x3955)))
 (let ((?x1680 (ite (and (distinct ((_ extract 20 11) C1) (_ bv0 10)) true) (ite (and (distinct ((_ extract 20 16) C1) (_ bv0 5)) true) ?x3759 ?x5334) ?x1655)))
 (let ((?x1389 (ite (and (distinct ((_ extract 23 23) C1) (_ bv0 1)) true) (_ bv23 32) (ite (and (distinct ((_ extract 22 22) C1) (_ bv0 1)) true) (_ bv22 32) (_ bv21 32)))))
 (let ((?x3494 (ite (and (distinct ((_ extract 25 24) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 25 25) C1) (_ bv0 1)) true) (_ bv25 32) (_ bv24 32)) ?x1389)))
 (let ((?x1918 (ite (and (distinct ((_ extract 28 28) C1) (_ bv0 1)) true) (_ bv28 32) (ite (and (distinct ((_ extract 27 27) C1) (_ bv0 1)) true) (_ bv27 32) (_ bv26 32)))))
 (let ((?x1821 (ite (and (distinct ((_ extract 30 29) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 30 30) C1) (_ bv0 1)) true) (_ bv30 32) (_ bv29 32)) ?x1918)))
 (let ((?x1373 (ite (and (distinct ((_ extract 33 33) C1) (_ bv0 1)) true) (_ bv33 32) (ite (and (distinct ((_ extract 32 32) C1) (_ bv0 1)) true) (_ bv32 32) (_ bv31 32)))))
 (let ((?x1141 (ite (and (distinct ((_ extract 35 34) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 35 35) C1) (_ bv0 1)) true) (_ bv35 32) (_ bv34 32)) ?x1373)))
 (let ((?x3132 (ite (and (distinct ((_ extract 38 38) C1) (_ bv0 1)) true) (_ bv38 32) (ite (and (distinct ((_ extract 37 37) C1) (_ bv0 1)) true) (_ bv37 32) (_ bv36 32)))))
 (let ((?x1630 (ite (and (distinct ((_ extract 40 39) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 40 40) C1) (_ bv0 1)) true) (_ bv40 32) (_ bv39 32)) ?x3132)))
 (let ((?x3262 (ite (and (distinct ((_ extract 40 31) C1) (_ bv0 10)) true) (ite (and (distinct ((_ extract 40 36) C1) (_ bv0 5)) true) ?x1630 ?x1141) (ite (and (distinct ((_ extract 30 26) C1) (_ bv0 5)) true) ?x1821 ?x3494))))
 (let ((?x5383 (ite (and (distinct ((_ extract 2 2) C2) (_ bv0 1)) true) (_ bv2 32) (ite (and (distinct ((_ extract 1 1) C2) (_ bv0 1)) true) (_ bv1 32) (_ bv0 32)))))
 (let ((?x2764 (ite (and (distinct ((_ extract 5 5) C2) (_ bv0 1)) true) (_ bv5 32) (ite (and (distinct ((_ extract 4 4) C2) (_ bv0 1)) true) (_ bv4 32) (_ bv3 32)))))
 (let ((?x2812 (ite (and (distinct ((_ extract 8 8) C2) (_ bv0 1)) true) (_ bv8 32) (ite (and (distinct ((_ extract 7 7) C2) (_ bv0 1)) true) (_ bv7 32) (_ bv6 32)))))
 (let ((?x3215 (ite (and (distinct ((_ extract 10 9) C2) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) C2) (_ bv0 1)) true) (_ bv10 32) (_ bv9 32)) ?x2812)))
 (let ((?x2648 (ite (and (distinct ((_ extract 10 6) C2) (_ bv0 5)) true) ?x3215 (ite (and (distinct ((_ extract 5 3) C2) (_ bv0 3)) true) ?x2764 ?x5383))))
 (and (and (and (distinct C1 (_ bv0 41)) true) (= (bvand C1 (bvsub C1 (_ bv1 41))) (_ bv0 41))) (and (and (distinct C2 (_ bv0 11)) true) (= (bvand C2 (bvsub C2 (_ bv1 11))) (_ bv0 11))) (bvslt ?x2648 (ite (and (distinct ((_ extract 40 21) C1) (_ bv0 20)) true) ?x3262 ?x1680)) $x1896)))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
