(set-info :status unknown)
(declare-fun C2 () (_ BitVec 11))
(declare-fun C1 () (_ BitVec 54))
(assert
 (let ((?x4510 (ite (and (distinct ((_ extract 2 2) C2) (_ bv0 1)) true) (_ bv2 54) (ite (and (distinct ((_ extract 1 1) C2) (_ bv0 1)) true) (_ bv1 54) (_ bv0 54)))))
 (let ((?x3089 (ite (and (distinct ((_ extract 5 5) C2) (_ bv0 1)) true) (_ bv5 54) (ite (and (distinct ((_ extract 4 4) C2) (_ bv0 1)) true) (_ bv4 54) (_ bv3 54)))))
 (let ((?x2292 (ite (and (distinct ((_ extract 8 8) C2) (_ bv0 1)) true) (_ bv8 54) (ite (and (distinct ((_ extract 7 7) C2) (_ bv0 1)) true) (_ bv7 54) (_ bv6 54)))))
 (let ((?x4982 (ite (and (distinct ((_ extract 10 9) C2) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) C2) (_ bv0 1)) true) (_ bv10 54) (_ bv9 54)) ?x2292)))
 (let ((?x2933 (ite (and (distinct ((_ extract 10 6) C2) (_ bv0 5)) true) ?x4982 (ite (and (distinct ((_ extract 5 3) C2) (_ bv0 3)) true) ?x3089 ?x4510))))
 (let ((?x3221 (ite (and (distinct ((_ extract 3 2) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 3 3) C1) (_ bv0 1)) true) (_ bv3 54) (_ bv2 54)) (ite (and (distinct ((_ extract 1 1) C1) (_ bv0 1)) true) (_ bv1 54) (_ bv0 54)))))
 (let ((?x1943 (ite (and (distinct ((_ extract 6 6) C1) (_ bv0 1)) true) (_ bv6 54) (ite (and (distinct ((_ extract 5 5) C1) (_ bv0 1)) true) (_ bv5 54) (_ bv4 54)))))
 (let ((?x5658 (ite (and (distinct ((_ extract 10 9) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) C1) (_ bv0 1)) true) (_ bv10 54) (_ bv9 54)) (ite (and (distinct ((_ extract 8 8) C1) (_ bv0 1)) true) (_ bv8 54) (_ bv7 54)))))
 (let ((?x2439 (ite (and (distinct ((_ extract 13 13) C1) (_ bv0 1)) true) (_ bv13 54) (ite (and (distinct ((_ extract 12 12) C1) (_ bv0 1)) true) (_ bv12 54) (_ bv11 54)))))
 (let ((?x4686 (ite (and (distinct ((_ extract 13 7) C1) (_ bv0 7)) true) (ite (and (distinct ((_ extract 13 11) C1) (_ bv0 3)) true) ?x2439 ?x5658) (ite (and (distinct ((_ extract 6 4) C1) (_ bv0 3)) true) ?x1943 ?x3221))))
 (let ((?x3605 (ite (and (distinct ((_ extract 17 16) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 17 17) C1) (_ bv0 1)) true) (_ bv17 54) (_ bv16 54)) (ite (and (distinct ((_ extract 15 15) C1) (_ bv0 1)) true) (_ bv15 54) (_ bv14 54)))))
 (let ((?x4393 (ite (and (distinct ((_ extract 20 20) C1) (_ bv0 1)) true) (_ bv20 54) (ite (and (distinct ((_ extract 19 19) C1) (_ bv0 1)) true) (_ bv19 54) (_ bv18 54)))))
 (let ((?x1790 (ite (and (distinct ((_ extract 23 23) C1) (_ bv0 1)) true) (_ bv23 54) (ite (and (distinct ((_ extract 22 22) C1) (_ bv0 1)) true) (_ bv22 54) (_ bv21 54)))))
 (let ((?x5453 (ite (and (distinct ((_ extract 26 26) C1) (_ bv0 1)) true) (_ bv26 54) (ite (and (distinct ((_ extract 25 25) C1) (_ bv0 1)) true) (_ bv25 54) (_ bv24 54)))))
 (let ((?x6757 (ite (and (distinct ((_ extract 26 21) C1) (_ bv0 6)) true) (ite (and (distinct ((_ extract 26 24) C1) (_ bv0 3)) true) ?x5453 ?x1790) (ite (and (distinct ((_ extract 20 18) C1) (_ bv0 3)) true) ?x4393 ?x3605))))
 (let ((?x4445 (ite (and (distinct ((_ extract 30 29) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 30 30) C1) (_ bv0 1)) true) (_ bv30 54) (_ bv29 54)) (ite (and (distinct ((_ extract 28 28) C1) (_ bv0 1)) true) (_ bv28 54) (_ bv27 54)))))
 (let ((?x1649 (ite (and (distinct ((_ extract 33 33) C1) (_ bv0 1)) true) (_ bv33 54) (ite (and (distinct ((_ extract 32 32) C1) (_ bv0 1)) true) (_ bv32 54) (_ bv31 54)))))
 (let ((?x2997 (ite (and (distinct ((_ extract 37 36) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 37 37) C1) (_ bv0 1)) true) (_ bv37 54) (_ bv36 54)) (ite (and (distinct ((_ extract 35 35) C1) (_ bv0 1)) true) (_ bv35 54) (_ bv34 54)))))
 (let ((?x1206 (ite (and (distinct ((_ extract 40 40) C1) (_ bv0 1)) true) (_ bv40 54) (ite (and (distinct ((_ extract 39 39) C1) (_ bv0 1)) true) (_ bv39 54) (_ bv38 54)))))
 (let ((?x2682 (ite (and (distinct ((_ extract 40 34) C1) (_ bv0 7)) true) (ite (and (distinct ((_ extract 40 38) C1) (_ bv0 3)) true) ?x1206 ?x2997) (ite (and (distinct ((_ extract 33 31) C1) (_ bv0 3)) true) ?x1649 ?x4445))))
 (let ((?x5456 (ite (and (distinct ((_ extract 44 43) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 44 44) C1) (_ bv0 1)) true) (_ bv44 54) (_ bv43 54)) (ite (and (distinct ((_ extract 42 42) C1) (_ bv0 1)) true) (_ bv42 54) (_ bv41 54)))))
 (let ((?x6021 (ite (and (distinct ((_ extract 47 47) C1) (_ bv0 1)) true) (_ bv47 54) (ite (and (distinct ((_ extract 46 46) C1) (_ bv0 1)) true) (_ bv46 54) (_ bv45 54)))))
 (let ((?x4693 (ite (and (distinct ((_ extract 50 50) C1) (_ bv0 1)) true) (_ bv50 54) (ite (and (distinct ((_ extract 49 49) C1) (_ bv0 1)) true) (_ bv49 54) (_ bv48 54)))))
 (let ((?x1873 (ite (and (distinct ((_ extract 53 53) C1) (_ bv0 1)) true) (_ bv53 54) (ite (and (distinct ((_ extract 52 52) C1) (_ bv0 1)) true) (_ bv52 54) (_ bv51 54)))))
 (let ((?x4980 (ite (and (distinct ((_ extract 53 48) C1) (_ bv0 6)) true) (ite (and (distinct ((_ extract 53 51) C1) (_ bv0 3)) true) ?x1873 ?x4693) (ite (and (distinct ((_ extract 47 45) C1) (_ bv0 3)) true) ?x6021 ?x5456))))
 (let ((?x6414 (ite (and (distinct ((_ extract 53 27) C1) (_ bv0 27)) true) (ite (and (distinct ((_ extract 53 41) C1) (_ bv0 13)) true) ?x4980 ?x2682) (ite (and (distinct ((_ extract 26 14) C1) (_ bv0 13)) true) ?x6757 ?x4686))))
 (let ((?x3670 (bvsub ?x6414 ?x2933)))
 (let ((?x6716 (ite (and (distinct ((_ extract 3 2) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 3 3) C1) (_ bv0 1)) true) (_ bv3 32) (_ bv2 32)) (ite (and (distinct ((_ extract 1 1) C1) (_ bv0 1)) true) (_ bv1 32) (_ bv0 32)))))
 (let ((?x2392 (ite (and (distinct ((_ extract 6 6) C1) (_ bv0 1)) true) (_ bv6 32) (ite (and (distinct ((_ extract 5 5) C1) (_ bv0 1)) true) (_ bv5 32) (_ bv4 32)))))
 (let ((?x1239 (ite (and (distinct ((_ extract 10 9) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) C1) (_ bv0 1)) true) (_ bv10 32) (_ bv9 32)) (ite (and (distinct ((_ extract 8 8) C1) (_ bv0 1)) true) (_ bv8 32) (_ bv7 32)))))
 (let ((?x5295 (ite (and (distinct ((_ extract 13 13) C1) (_ bv0 1)) true) (_ bv13 32) (ite (and (distinct ((_ extract 12 12) C1) (_ bv0 1)) true) (_ bv12 32) (_ bv11 32)))))
 (let ((?x1185 (ite (and (distinct ((_ extract 13 7) C1) (_ bv0 7)) true) (ite (and (distinct ((_ extract 13 11) C1) (_ bv0 3)) true) ?x5295 ?x1239) (ite (and (distinct ((_ extract 6 4) C1) (_ bv0 3)) true) ?x2392 ?x6716))))
 (let ((?x5553 (ite (and (distinct ((_ extract 17 16) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 17 17) C1) (_ bv0 1)) true) (_ bv17 32) (_ bv16 32)) (ite (and (distinct ((_ extract 15 15) C1) (_ bv0 1)) true) (_ bv15 32) (_ bv14 32)))))
 (let ((?x3386 (ite (and (distinct ((_ extract 20 20) C1) (_ bv0 1)) true) (_ bv20 32) (ite (and (distinct ((_ extract 19 19) C1) (_ bv0 1)) true) (_ bv19 32) (_ bv18 32)))))
 (let ((?x4411 (ite (and (distinct ((_ extract 23 23) C1) (_ bv0 1)) true) (_ bv23 32) (ite (and (distinct ((_ extract 22 22) C1) (_ bv0 1)) true) (_ bv22 32) (_ bv21 32)))))
 (let ((?x6061 (ite (and (distinct ((_ extract 26 26) C1) (_ bv0 1)) true) (_ bv26 32) (ite (and (distinct ((_ extract 25 25) C1) (_ bv0 1)) true) (_ bv25 32) (_ bv24 32)))))
 (let ((?x1877 (ite (and (distinct ((_ extract 26 21) C1) (_ bv0 6)) true) (ite (and (distinct ((_ extract 26 24) C1) (_ bv0 3)) true) ?x6061 ?x4411) (ite (and (distinct ((_ extract 20 18) C1) (_ bv0 3)) true) ?x3386 ?x5553))))
 (let ((?x5870 (ite (and (distinct ((_ extract 30 29) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 30 30) C1) (_ bv0 1)) true) (_ bv30 32) (_ bv29 32)) (ite (and (distinct ((_ extract 28 28) C1) (_ bv0 1)) true) (_ bv28 32) (_ bv27 32)))))
 (let ((?x5328 (ite (and (distinct ((_ extract 33 33) C1) (_ bv0 1)) true) (_ bv33 32) (ite (and (distinct ((_ extract 32 32) C1) (_ bv0 1)) true) (_ bv32 32) (_ bv31 32)))))
 (let ((?x6250 (ite (and (distinct ((_ extract 37 36) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 37 37) C1) (_ bv0 1)) true) (_ bv37 32) (_ bv36 32)) (ite (and (distinct ((_ extract 35 35) C1) (_ bv0 1)) true) (_ bv35 32) (_ bv34 32)))))
 (let ((?x3406 (ite (and (distinct ((_ extract 40 40) C1) (_ bv0 1)) true) (_ bv40 32) (ite (and (distinct ((_ extract 39 39) C1) (_ bv0 1)) true) (_ bv39 32) (_ bv38 32)))))
 (let ((?x5582 (ite (and (distinct ((_ extract 40 34) C1) (_ bv0 7)) true) (ite (and (distinct ((_ extract 40 38) C1) (_ bv0 3)) true) ?x3406 ?x6250) (ite (and (distinct ((_ extract 33 31) C1) (_ bv0 3)) true) ?x5328 ?x5870))))
 (let ((?x2969 (ite (and (distinct ((_ extract 44 43) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 44 44) C1) (_ bv0 1)) true) (_ bv44 32) (_ bv43 32)) (ite (and (distinct ((_ extract 42 42) C1) (_ bv0 1)) true) (_ bv42 32) (_ bv41 32)))))
 (let ((?x6450 (ite (and (distinct ((_ extract 47 47) C1) (_ bv0 1)) true) (_ bv47 32) (ite (and (distinct ((_ extract 46 46) C1) (_ bv0 1)) true) (_ bv46 32) (_ bv45 32)))))
 (let ((?x2187 (ite (and (distinct ((_ extract 50 50) C1) (_ bv0 1)) true) (_ bv50 32) (ite (and (distinct ((_ extract 49 49) C1) (_ bv0 1)) true) (_ bv49 32) (_ bv48 32)))))
 (let ((?x1253 (ite (and (distinct ((_ extract 53 53) C1) (_ bv0 1)) true) (_ bv53 32) (ite (and (distinct ((_ extract 52 52) C1) (_ bv0 1)) true) (_ bv52 32) (_ bv51 32)))))
 (let ((?x2299 (ite (and (distinct ((_ extract 53 48) C1) (_ bv0 6)) true) (ite (and (distinct ((_ extract 53 51) C1) (_ bv0 3)) true) ?x1253 ?x2187) (ite (and (distinct ((_ extract 47 45) C1) (_ bv0 3)) true) ?x6450 ?x2969))))
 (let ((?x4902 (ite (and (distinct ((_ extract 53 27) C1) (_ bv0 27)) true) (ite (and (distinct ((_ extract 53 41) C1) (_ bv0 13)) true) ?x2299 ?x5582) (ite (and (distinct ((_ extract 26 14) C1) (_ bv0 13)) true) ?x1877 ?x1185))))
 (let ((?x6712 (ite (and (distinct ((_ extract 2 2) C2) (_ bv0 1)) true) (_ bv2 32) (ite (and (distinct ((_ extract 1 1) C2) (_ bv0 1)) true) (_ bv1 32) (_ bv0 32)))))
 (let ((?x5002 (ite (and (distinct ((_ extract 5 5) C2) (_ bv0 1)) true) (_ bv5 32) (ite (and (distinct ((_ extract 4 4) C2) (_ bv0 1)) true) (_ bv4 32) (_ bv3 32)))))
 (let ((?x6079 (ite (and (distinct ((_ extract 8 8) C2) (_ bv0 1)) true) (_ bv8 32) (ite (and (distinct ((_ extract 7 7) C2) (_ bv0 1)) true) (_ bv7 32) (_ bv6 32)))))
 (let ((?x4450 (ite (and (distinct ((_ extract 10 9) C2) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) C2) (_ bv0 1)) true) (_ bv10 32) (_ bv9 32)) ?x6079)))
 (let ((?x1216 (ite (and (distinct ((_ extract 10 6) C2) (_ bv0 5)) true) ?x4450 (ite (and (distinct ((_ extract 5 3) C2) (_ bv0 3)) true) ?x5002 ?x6712))))
 (and (and (and (distinct C1 (_ bv0 54)) true) (= (bvand C1 (bvsub C1 (_ bv1 54))) (_ bv0 54))) (and (and (distinct C2 (_ bv0 11)) true) (= (bvand C2 (bvsub C2 (_ bv1 11))) (_ bv0 11))) (bvslt ?x1216 ?x4902) (not (bvult ?x3670 (_ bv54 54))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
