(set-info :status unknown)
(declare-fun C2 () (_ BitVec 11))
(declare-fun C3 () (_ BitVec 11))
(declare-fun C () (_ BitVec 37))
(assert
 (let ((?x4341 (ite (and (distinct ((_ extract 2 2) (bvsub C3 C2)) (_ bv0 1)) true) (_ bv2 11) (ite (and (distinct ((_ extract 1 1) (bvsub C3 C2)) (_ bv0 1)) true) (_ bv1 11) (_ bv0 11)))))
 (let ((?x1466 (ite (and (distinct ((_ extract 5 5) (bvsub C3 C2)) (_ bv0 1)) true) (_ bv5 11) (ite (and (distinct ((_ extract 4 4) (bvsub C3 C2)) (_ bv0 1)) true) (_ bv4 11) (_ bv3 11)))))
 (let ((?x2691 (ite (and (distinct ((_ extract 8 8) (bvsub C3 C2)) (_ bv0 1)) true) (_ bv8 11) (ite (and (distinct ((_ extract 7 7) (bvsub C3 C2)) (_ bv0 1)) true) (_ bv7 11) (_ bv6 11)))))
 (let ((?x1395 (ite (and (distinct ((_ extract 10 9) (bvsub C3 C2)) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) (bvsub C3 C2)) (_ bv0 1)) true) (_ bv10 11) (_ bv9 11)) ?x2691)))
 (let ((?x1190 (ite (and (distinct ((_ extract 10 6) (bvsub C3 C2)) (_ bv0 5)) true) ?x1395 (ite (and (distinct ((_ extract 5 3) (bvsub C3 C2)) (_ bv0 3)) true) ?x1466 ?x4341))))
 (let ((?x2671 (ite (and (distinct ((_ extract 2 2) C) (_ bv0 1)) true) (_ bv2 11) (ite (and (distinct ((_ extract 1 1) C) (_ bv0 1)) true) (_ bv1 11) (_ bv0 11)))))
 (let ((?x6796 (ite (and (distinct ((_ extract 4 3) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 4 4) C) (_ bv0 1)) true) (_ bv4 11) (_ bv3 11)) ?x2671)))
 (let ((?x1169 (ite (and (distinct ((_ extract 7 7) C) (_ bv0 1)) true) (_ bv7 11) (ite (and (distinct ((_ extract 6 6) C) (_ bv0 1)) true) (_ bv6 11) (_ bv5 11)))))
 (let ((?x5001 (ite (and (distinct ((_ extract 9 8) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 9 9) C) (_ bv0 1)) true) (_ bv9 11) (_ bv8 11)) ?x1169)))
 (let ((?x5914 (ite (and (distinct ((_ extract 12 12) C) (_ bv0 1)) true) (_ bv12 11) (ite (and (distinct ((_ extract 11 11) C) (_ bv0 1)) true) (_ bv11 11) (_ bv10 11)))))
 (let ((?x5142 (ite (and (distinct ((_ extract 14 13) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 14 14) C) (_ bv0 1)) true) (_ bv14 11) (_ bv13 11)) ?x5914)))
 (let ((?x3434 (ite (and (distinct ((_ extract 18 17) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 18 18) C) (_ bv0 1)) true) (_ bv18 11) (_ bv17 11)) (ite (and (distinct ((_ extract 16 16) C) (_ bv0 1)) true) (_ bv16 11) (_ bv15 11)))))
 (let ((?x5542 (ite (and (distinct ((_ extract 18 10) C) (_ bv0 9)) true) (ite (and (distinct ((_ extract 18 15) C) (_ bv0 4)) true) ?x3434 ?x5142) (ite (and (distinct ((_ extract 9 5) C) (_ bv0 5)) true) ?x5001 ?x6796))))
 (let ((?x7833 (ite (and (distinct ((_ extract 21 21) C) (_ bv0 1)) true) (_ bv21 11) (ite (and (distinct ((_ extract 20 20) C) (_ bv0 1)) true) (_ bv20 11) (_ bv19 11)))))
 (let ((?x4375 (ite (and (distinct ((_ extract 23 22) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 23 23) C) (_ bv0 1)) true) (_ bv23 11) (_ bv22 11)) ?x7833)))
 (let ((?x1280 (ite (and (distinct ((_ extract 27 26) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 27 27) C) (_ bv0 1)) true) (_ bv27 11) (_ bv26 11)) (ite (and (distinct ((_ extract 25 25) C) (_ bv0 1)) true) (_ bv25 11) (_ bv24 11)))))
 (let ((?x3692 (ite (and (distinct ((_ extract 30 30) C) (_ bv0 1)) true) (_ bv30 11) (ite (and (distinct ((_ extract 29 29) C) (_ bv0 1)) true) (_ bv29 11) (_ bv28 11)))))
 (let ((?x4765 (ite (and (distinct ((_ extract 32 31) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 32 32) C) (_ bv0 1)) true) (_ bv32 11) (_ bv31 11)) ?x3692)))
 (let ((?x5577 (ite (and (distinct ((_ extract 36 35) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 36 36) C) (_ bv0 1)) true) (_ bv36 11) (_ bv35 11)) (ite (and (distinct ((_ extract 34 34) C) (_ bv0 1)) true) (_ bv34 11) (_ bv33 11)))))
 (let ((?x8575 (ite (and (distinct ((_ extract 36 28) C) (_ bv0 9)) true) (ite (and (distinct ((_ extract 36 33) C) (_ bv0 4)) true) ?x5577 ?x4765) (ite (and (distinct ((_ extract 27 24) C) (_ bv0 4)) true) ?x1280 ?x4375))))
 (let ((?x6794 (bvsub (ite (and (distinct ((_ extract 36 19) C) (_ bv0 18)) true) ?x8575 ?x5542) ?x1190)))
 (let ((?x4613 (ite (bvsgt (_ bv0 11) ?x6794) (_ bv0 11) ?x6794)))
 (let ((?x3574 (bvsub ?x1190 (ite (and (distinct ((_ extract 36 19) C) (_ bv0 18)) true) ?x8575 ?x5542))))
 (let ((?x6741 (ite (bvsgt (_ bv0 11) ?x3574) (_ bv0 11) ?x3574)))
 (let ((?x5985 (ite (and (distinct ((_ extract 2 2) C) (_ bv0 1)) true) (_ bv2 32) (ite (and (distinct ((_ extract 1 1) C) (_ bv0 1)) true) (_ bv1 32) (_ bv0 32)))))
 (let ((?x6679 (ite (and (distinct ((_ extract 4 3) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 4 4) C) (_ bv0 1)) true) (_ bv4 32) (_ bv3 32)) ?x5985)))
 (let ((?x4776 (ite (and (distinct ((_ extract 7 7) C) (_ bv0 1)) true) (_ bv7 32) (ite (and (distinct ((_ extract 6 6) C) (_ bv0 1)) true) (_ bv6 32) (_ bv5 32)))))
 (let ((?x5207 (ite (and (distinct ((_ extract 9 8) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 9 9) C) (_ bv0 1)) true) (_ bv9 32) (_ bv8 32)) ?x4776)))
 (let ((?x3006 (ite (and (distinct ((_ extract 12 12) C) (_ bv0 1)) true) (_ bv12 32) (ite (and (distinct ((_ extract 11 11) C) (_ bv0 1)) true) (_ bv11 32) (_ bv10 32)))))
 (let ((?x2963 (ite (and (distinct ((_ extract 14 13) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 14 14) C) (_ bv0 1)) true) (_ bv14 32) (_ bv13 32)) ?x3006)))
 (let ((?x1455 (ite (and (distinct ((_ extract 18 17) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 18 18) C) (_ bv0 1)) true) (_ bv18 32) (_ bv17 32)) (ite (and (distinct ((_ extract 16 16) C) (_ bv0 1)) true) (_ bv16 32) (_ bv15 32)))))
 (let ((?x6394 (ite (and (distinct ((_ extract 18 10) C) (_ bv0 9)) true) (ite (and (distinct ((_ extract 18 15) C) (_ bv0 4)) true) ?x1455 ?x2963) (ite (and (distinct ((_ extract 9 5) C) (_ bv0 5)) true) ?x5207 ?x6679))))
 (let ((?x1375 (ite (and (distinct ((_ extract 21 21) C) (_ bv0 1)) true) (_ bv21 32) (ite (and (distinct ((_ extract 20 20) C) (_ bv0 1)) true) (_ bv20 32) (_ bv19 32)))))
 (let ((?x7852 (ite (and (distinct ((_ extract 23 22) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 23 23) C) (_ bv0 1)) true) (_ bv23 32) (_ bv22 32)) ?x1375)))
 (let ((?x4319 (ite (and (distinct ((_ extract 27 26) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 27 27) C) (_ bv0 1)) true) (_ bv27 32) (_ bv26 32)) (ite (and (distinct ((_ extract 25 25) C) (_ bv0 1)) true) (_ bv25 32) (_ bv24 32)))))
 (let ((?x7602 (ite (and (distinct ((_ extract 30 30) C) (_ bv0 1)) true) (_ bv30 32) (ite (and (distinct ((_ extract 29 29) C) (_ bv0 1)) true) (_ bv29 32) (_ bv28 32)))))
 (let ((?x7152 (ite (and (distinct ((_ extract 32 31) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 32 32) C) (_ bv0 1)) true) (_ bv32 32) (_ bv31 32)) ?x7602)))
 (let ((?x4591 (ite (and (distinct ((_ extract 36 35) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 36 36) C) (_ bv0 1)) true) (_ bv36 32) (_ bv35 32)) (ite (and (distinct ((_ extract 34 34) C) (_ bv0 1)) true) (_ bv34 32) (_ bv33 32)))))
 (let ((?x7828 (ite (and (distinct ((_ extract 36 28) C) (_ bv0 9)) true) (ite (and (distinct ((_ extract 36 33) C) (_ bv0 4)) true) ?x4591 ?x7152) (ite (and (distinct ((_ extract 27 24) C) (_ bv0 4)) true) ?x4319 ?x7852))))
 (let (($x4193 (and (and (distinct (bvsub C3 C2) (_ bv0 11)) true) (= (bvand (bvsub C3 C2) (bvsub (bvsub C3 C2) (_ bv1 11))) (_ bv0 11)))))
 (and (and (and (distinct C (_ bv0 37)) true) (= (bvand C (bvsub C (_ bv1 37))) (_ bv0 37))) $x4193 (bvslt (ite (and (distinct ((_ extract 36 19) C) (_ bv0 18)) true) ?x7828 ?x6394) (_ bv11 32)) (not (and (bvult ?x6741 (_ bv11 11)) (bvult ?x4613 (_ bv11 11))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
