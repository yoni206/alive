(set-info :status unknown)
(declare-fun C2 () (_ BitVec 11))
(declare-fun C3 () (_ BitVec 11))
(declare-fun C () (_ BitVec 43))
(declare-fun %Op () (_ BitVec 43))
(assert
 (let ((?x8041 (ite (and (distinct ((_ extract 2 2) (bvsub C3 C2)) (_ bv0 1)) true) (_ bv2 11) (ite (and (distinct ((_ extract 1 1) (bvsub C3 C2)) (_ bv0 1)) true) (_ bv1 11) (_ bv0 11)))))
 (let ((?x3876 (ite (and (distinct ((_ extract 5 5) (bvsub C3 C2)) (_ bv0 1)) true) (_ bv5 11) (ite (and (distinct ((_ extract 4 4) (bvsub C3 C2)) (_ bv0 1)) true) (_ bv4 11) (_ bv3 11)))))
 (let ((?x2341 (ite (and (distinct ((_ extract 8 8) (bvsub C3 C2)) (_ bv0 1)) true) (_ bv8 11) (ite (and (distinct ((_ extract 7 7) (bvsub C3 C2)) (_ bv0 1)) true) (_ bv7 11) (_ bv6 11)))))
 (let ((?x3804 (ite (and (distinct ((_ extract 10 9) (bvsub C3 C2)) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) (bvsub C3 C2)) (_ bv0 1)) true) (_ bv10 11) (_ bv9 11)) ?x2341)))
 (let ((?x6396 (ite (and (distinct ((_ extract 10 6) (bvsub C3 C2)) (_ bv0 5)) true) ?x3804 (ite (and (distinct ((_ extract 5 3) (bvsub C3 C2)) (_ bv0 3)) true) ?x3876 ?x8041))))
 (let ((?x6680 (ite (and (distinct ((_ extract 2 2) C) (_ bv0 1)) true) (_ bv2 11) (ite (and (distinct ((_ extract 1 1) C) (_ bv0 1)) true) (_ bv1 11) (_ bv0 11)))))
 (let ((?x2518 (ite (and (distinct ((_ extract 5 5) C) (_ bv0 1)) true) (_ bv5 11) (ite (and (distinct ((_ extract 4 4) C) (_ bv0 1)) true) (_ bv4 11) (_ bv3 11)))))
 (let ((?x5079 (ite (and (distinct ((_ extract 8 8) C) (_ bv0 1)) true) (_ bv8 11) (ite (and (distinct ((_ extract 7 7) C) (_ bv0 1)) true) (_ bv7 11) (_ bv6 11)))))
 (let ((?x6735 (ite (and (distinct ((_ extract 10 9) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) C) (_ bv0 1)) true) (_ bv10 11) (_ bv9 11)) ?x5079)))
 (let ((?x8460 (ite (and (distinct ((_ extract 10 6) C) (_ bv0 5)) true) ?x6735 (ite (and (distinct ((_ extract 5 3) C) (_ bv0 3)) true) ?x2518 ?x6680))))
 (let ((?x6829 (ite (and (distinct ((_ extract 13 13) C) (_ bv0 1)) true) (_ bv13 11) (ite (and (distinct ((_ extract 12 12) C) (_ bv0 1)) true) (_ bv12 11) (_ bv11 11)))))
 (let ((?x6266 (ite (and (distinct ((_ extract 16 16) C) (_ bv0 1)) true) (_ bv16 11) (ite (and (distinct ((_ extract 15 15) C) (_ bv0 1)) true) (_ bv15 11) (_ bv14 11)))))
 (let ((?x5722 (ite (and (distinct ((_ extract 19 19) C) (_ bv0 1)) true) (_ bv19 11) (ite (and (distinct ((_ extract 18 18) C) (_ bv0 1)) true) (_ bv18 11) (_ bv17 11)))))
 (let ((?x5620 (ite (and (distinct ((_ extract 21 20) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 21 21) C) (_ bv0 1)) true) (_ bv21 11) (_ bv20 11)) ?x5722)))
 (let ((?x7008 (ite (and (distinct ((_ extract 21 17) C) (_ bv0 5)) true) ?x5620 (ite (and (distinct ((_ extract 16 14) C) (_ bv0 3)) true) ?x6266 ?x6829))))
 (let ((?x4098 (ite (and (distinct ((_ extract 24 24) C) (_ bv0 1)) true) (_ bv24 11) (ite (and (distinct ((_ extract 23 23) C) (_ bv0 1)) true) (_ bv23 11) (_ bv22 11)))))
 (let ((?x5738 (ite (and (distinct ((_ extract 27 27) C) (_ bv0 1)) true) (_ bv27 11) (ite (and (distinct ((_ extract 26 26) C) (_ bv0 1)) true) (_ bv26 11) (_ bv25 11)))))
 (let ((?x4787 (ite (and (distinct ((_ extract 30 30) C) (_ bv0 1)) true) (_ bv30 11) (ite (and (distinct ((_ extract 29 29) C) (_ bv0 1)) true) (_ bv29 11) (_ bv28 11)))))
 (let ((?x3247 (ite (and (distinct ((_ extract 32 31) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 32 32) C) (_ bv0 1)) true) (_ bv32 11) (_ bv31 11)) ?x4787)))
 (let ((?x4917 (ite (and (distinct ((_ extract 32 28) C) (_ bv0 5)) true) ?x3247 (ite (and (distinct ((_ extract 27 25) C) (_ bv0 3)) true) ?x5738 ?x4098))))
 (let ((?x4248 (ite (and (distinct ((_ extract 35 35) C) (_ bv0 1)) true) (_ bv35 11) (ite (and (distinct ((_ extract 34 34) C) (_ bv0 1)) true) (_ bv34 11) (_ bv33 11)))))
 (let ((?x2342 (ite (and (distinct ((_ extract 37 36) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 37 37) C) (_ bv0 1)) true) (_ bv37 11) (_ bv36 11)) ?x4248)))
 (let ((?x4684 (ite (and (distinct ((_ extract 40 40) C) (_ bv0 1)) true) (_ bv40 11) (ite (and (distinct ((_ extract 39 39) C) (_ bv0 1)) true) (_ bv39 11) (_ bv38 11)))))
 (let ((?x3751 (ite (and (distinct ((_ extract 42 41) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 42 42) C) (_ bv0 1)) true) (_ bv42 11) (_ bv41 11)) ?x4684)))
 (let ((?x4507 (ite (and (distinct ((_ extract 42 33) C) (_ bv0 10)) true) (ite (and (distinct ((_ extract 42 38) C) (_ bv0 5)) true) ?x3751 ?x2342) ?x4917)))
 (let ((?x4914 (ite (and (distinct ((_ extract 42 22) C) (_ bv0 21)) true) ?x4507 (ite (and (distinct ((_ extract 21 11) C) (_ bv0 11)) true) ?x7008 ?x8460))))
 (let ((?x2446 (bvsub ?x4914 ?x6396)))
 (let ((?x7208 (ite (bvsgt (_ bv0 11) ?x2446) (_ bv0 11) ?x2446)))
 (let ((?x4044 (bvsub ?x6396 ?x4914)))
 (let ((?x4825 (ite (bvsgt (_ bv0 11) ?x4044) (_ bv0 11) ?x4044)))
 (let (($x8191 (and (distinct (ite (= (ite (= (bvand %Op C) (_ bv0 43)) (_ bv1 1) (_ bv0 1)) (_ bv1 1)) C2 C3) (bvadd (bvlshr (bvshl ((_ extract 10 0) (bvand %Op C)) ?x4825) ?x7208) C2)) true)))
 (let ((?x6602 (ite (and (distinct ((_ extract 2 2) C) (_ bv0 1)) true) (_ bv2 32) (ite (and (distinct ((_ extract 1 1) C) (_ bv0 1)) true) (_ bv1 32) (_ bv0 32)))))
 (let ((?x5471 (ite (and (distinct ((_ extract 5 5) C) (_ bv0 1)) true) (_ bv5 32) (ite (and (distinct ((_ extract 4 4) C) (_ bv0 1)) true) (_ bv4 32) (_ bv3 32)))))
 (let ((?x5269 (ite (and (distinct ((_ extract 8 8) C) (_ bv0 1)) true) (_ bv8 32) (ite (and (distinct ((_ extract 7 7) C) (_ bv0 1)) true) (_ bv7 32) (_ bv6 32)))))
 (let ((?x5194 (ite (and (distinct ((_ extract 10 9) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) C) (_ bv0 1)) true) (_ bv10 32) (_ bv9 32)) ?x5269)))
 (let ((?x7492 (ite (and (distinct ((_ extract 10 6) C) (_ bv0 5)) true) ?x5194 (ite (and (distinct ((_ extract 5 3) C) (_ bv0 3)) true) ?x5471 ?x6602))))
 (let ((?x3976 (ite (and (distinct ((_ extract 13 13) C) (_ bv0 1)) true) (_ bv13 32) (ite (and (distinct ((_ extract 12 12) C) (_ bv0 1)) true) (_ bv12 32) (_ bv11 32)))))
 (let ((?x3272 (ite (and (distinct ((_ extract 16 16) C) (_ bv0 1)) true) (_ bv16 32) (ite (and (distinct ((_ extract 15 15) C) (_ bv0 1)) true) (_ bv15 32) (_ bv14 32)))))
 (let ((?x1612 (ite (and (distinct ((_ extract 19 19) C) (_ bv0 1)) true) (_ bv19 32) (ite (and (distinct ((_ extract 18 18) C) (_ bv0 1)) true) (_ bv18 32) (_ bv17 32)))))
 (let ((?x2960 (ite (and (distinct ((_ extract 21 20) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 21 21) C) (_ bv0 1)) true) (_ bv21 32) (_ bv20 32)) ?x1612)))
 (let ((?x3760 (ite (and (distinct ((_ extract 21 17) C) (_ bv0 5)) true) ?x2960 (ite (and (distinct ((_ extract 16 14) C) (_ bv0 3)) true) ?x3272 ?x3976))))
 (let ((?x7895 (ite (and (distinct ((_ extract 24 24) C) (_ bv0 1)) true) (_ bv24 32) (ite (and (distinct ((_ extract 23 23) C) (_ bv0 1)) true) (_ bv23 32) (_ bv22 32)))))
 (let ((?x1714 (ite (and (distinct ((_ extract 27 27) C) (_ bv0 1)) true) (_ bv27 32) (ite (and (distinct ((_ extract 26 26) C) (_ bv0 1)) true) (_ bv26 32) (_ bv25 32)))))
 (let ((?x1582 (ite (and (distinct ((_ extract 30 30) C) (_ bv0 1)) true) (_ bv30 32) (ite (and (distinct ((_ extract 29 29) C) (_ bv0 1)) true) (_ bv29 32) (_ bv28 32)))))
 (let ((?x3828 (ite (and (distinct ((_ extract 32 31) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 32 32) C) (_ bv0 1)) true) (_ bv32 32) (_ bv31 32)) ?x1582)))
 (let ((?x2916 (ite (and (distinct ((_ extract 32 28) C) (_ bv0 5)) true) ?x3828 (ite (and (distinct ((_ extract 27 25) C) (_ bv0 3)) true) ?x1714 ?x7895))))
 (let ((?x6119 (ite (and (distinct ((_ extract 35 35) C) (_ bv0 1)) true) (_ bv35 32) (ite (and (distinct ((_ extract 34 34) C) (_ bv0 1)) true) (_ bv34 32) (_ bv33 32)))))
 (let ((?x5627 (ite (and (distinct ((_ extract 37 36) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 37 37) C) (_ bv0 1)) true) (_ bv37 32) (_ bv36 32)) ?x6119)))
 (let ((?x6044 (ite (and (distinct ((_ extract 40 40) C) (_ bv0 1)) true) (_ bv40 32) (ite (and (distinct ((_ extract 39 39) C) (_ bv0 1)) true) (_ bv39 32) (_ bv38 32)))))
 (let ((?x6030 (ite (and (distinct ((_ extract 42 41) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 42 42) C) (_ bv0 1)) true) (_ bv42 32) (_ bv41 32)) ?x6044)))
 (let ((?x2320 (ite (and (distinct ((_ extract 42 33) C) (_ bv0 10)) true) (ite (and (distinct ((_ extract 42 38) C) (_ bv0 5)) true) ?x6030 ?x5627) ?x2916)))
 (let ((?x7849 (ite (and (distinct ((_ extract 42 22) C) (_ bv0 21)) true) ?x2320 (ite (and (distinct ((_ extract 21 11) C) (_ bv0 11)) true) ?x3760 ?x7492))))
 (let (($x2851 (and (and (distinct (bvsub C3 C2) (_ bv0 11)) true) (= (bvand (bvsub C3 C2) (bvsub (bvsub C3 C2) (_ bv1 11))) (_ bv0 11)))))
 (and (and (and (distinct C (_ bv0 43)) true) (= (bvand C (bvsub C (_ bv1 43))) (_ bv0 43))) $x2851 (bvslt ?x7849 (_ bv11 32)) $x8191)))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
