(set-info :status unknown)
(declare-fun %Y () (_ BitVec 11))
(declare-fun C2 () (_ BitVec 11))
(declare-fun C1 () (_ BitVec 57))
(declare-fun %X () (_ BitVec 57))
(assert
 (let ((?x4518 (ite (and (distinct ((_ extract 2 2) C2) (_ bv0 1)) true) (_ bv2 57) (ite (and (distinct ((_ extract 1 1) C2) (_ bv0 1)) true) (_ bv1 57) (_ bv0 57)))))
 (let ((?x3237 (ite (and (distinct ((_ extract 5 5) C2) (_ bv0 1)) true) (_ bv5 57) (ite (and (distinct ((_ extract 4 4) C2) (_ bv0 1)) true) (_ bv4 57) (_ bv3 57)))))
 (let ((?x4481 (ite (and (distinct ((_ extract 8 8) C2) (_ bv0 1)) true) (_ bv8 57) (ite (and (distinct ((_ extract 7 7) C2) (_ bv0 1)) true) (_ bv7 57) (_ bv6 57)))))
 (let ((?x4489 (ite (and (distinct ((_ extract 10 9) C2) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) C2) (_ bv0 1)) true) (_ bv10 57) (_ bv9 57)) ?x4481)))
 (let ((?x4488 (ite (and (distinct ((_ extract 10 6) C2) (_ bv0 5)) true) ?x4489 (ite (and (distinct ((_ extract 5 3) C2) (_ bv0 3)) true) ?x3237 ?x4518))))
 (let ((?x5499 (ite (and (distinct ((_ extract 3 2) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 3 3) C1) (_ bv0 1)) true) (_ bv3 57) (_ bv2 57)) (ite (and (distinct ((_ extract 1 1) C1) (_ bv0 1)) true) (_ bv1 57) (_ bv0 57)))))
 (let ((?x3712 (ite (and (distinct ((_ extract 7 6) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 7 7) C1) (_ bv0 1)) true) (_ bv7 57) (_ bv6 57)) (ite (and (distinct ((_ extract 5 5) C1) (_ bv0 1)) true) (_ bv5 57) (_ bv4 57)))))
 (let ((?x5035 (ite (and (distinct ((_ extract 11 10) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 11 11) C1) (_ bv0 1)) true) (_ bv11 57) (_ bv10 57)) (ite (and (distinct ((_ extract 9 9) C1) (_ bv0 1)) true) (_ bv9 57) (_ bv8 57)))))
 (let ((?x3357 (ite (and (distinct ((_ extract 14 14) C1) (_ bv0 1)) true) (_ bv14 57) (ite (and (distinct ((_ extract 13 13) C1) (_ bv0 1)) true) (_ bv13 57) (_ bv12 57)))))
 (let ((?x5842 (ite (and (distinct ((_ extract 14 8) C1) (_ bv0 7)) true) (ite (and (distinct ((_ extract 14 12) C1) (_ bv0 3)) true) ?x3357 ?x5035) (ite (and (distinct ((_ extract 7 4) C1) (_ bv0 4)) true) ?x3712 ?x5499))))
 (let ((?x5121 (ite (and (distinct ((_ extract 18 17) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 18 18) C1) (_ bv0 1)) true) (_ bv18 57) (_ bv17 57)) (ite (and (distinct ((_ extract 16 16) C1) (_ bv0 1)) true) (_ bv16 57) (_ bv15 57)))))
 (let ((?x4628 (ite (and (distinct ((_ extract 21 21) C1) (_ bv0 1)) true) (_ bv21 57) (ite (and (distinct ((_ extract 20 20) C1) (_ bv0 1)) true) (_ bv20 57) (_ bv19 57)))))
 (let ((?x3791 (ite (and (distinct ((_ extract 25 24) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 25 25) C1) (_ bv0 1)) true) (_ bv25 57) (_ bv24 57)) (ite (and (distinct ((_ extract 23 23) C1) (_ bv0 1)) true) (_ bv23 57) (_ bv22 57)))))
 (let ((?x3449 (ite (and (distinct ((_ extract 28 28) C1) (_ bv0 1)) true) (_ bv28 57) (ite (and (distinct ((_ extract 27 27) C1) (_ bv0 1)) true) (_ bv27 57) (_ bv26 57)))))
 (let ((?x3250 (ite (and (distinct ((_ extract 28 22) C1) (_ bv0 7)) true) (ite (and (distinct ((_ extract 28 26) C1) (_ bv0 3)) true) ?x3449 ?x3791) (ite (and (distinct ((_ extract 21 19) C1) (_ bv0 3)) true) ?x4628 ?x5121))))
 (let ((?x2873 (ite (and (distinct ((_ extract 32 31) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 32 32) C1) (_ bv0 1)) true) (_ bv32 57) (_ bv31 57)) (ite (and (distinct ((_ extract 30 30) C1) (_ bv0 1)) true) (_ bv30 57) (_ bv29 57)))))
 (let ((?x6241 (ite (and (distinct ((_ extract 35 35) C1) (_ bv0 1)) true) (_ bv35 57) (ite (and (distinct ((_ extract 34 34) C1) (_ bv0 1)) true) (_ bv34 57) (_ bv33 57)))))
 (let ((?x3117 (ite (and (distinct ((_ extract 39 38) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 39 39) C1) (_ bv0 1)) true) (_ bv39 57) (_ bv38 57)) (ite (and (distinct ((_ extract 37 37) C1) (_ bv0 1)) true) (_ bv37 57) (_ bv36 57)))))
 (let ((?x3742 (ite (and (distinct ((_ extract 42 42) C1) (_ bv0 1)) true) (_ bv42 57) (ite (and (distinct ((_ extract 41 41) C1) (_ bv0 1)) true) (_ bv41 57) (_ bv40 57)))))
 (let ((?x4517 (ite (and (distinct ((_ extract 42 36) C1) (_ bv0 7)) true) (ite (and (distinct ((_ extract 42 40) C1) (_ bv0 3)) true) ?x3742 ?x3117) (ite (and (distinct ((_ extract 35 33) C1) (_ bv0 3)) true) ?x6241 ?x2873))))
 (let ((?x3490 (ite (and (distinct ((_ extract 46 45) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 46 46) C1) (_ bv0 1)) true) (_ bv46 57) (_ bv45 57)) (ite (and (distinct ((_ extract 44 44) C1) (_ bv0 1)) true) (_ bv44 57) (_ bv43 57)))))
 (let ((?x4292 (ite (and (distinct ((_ extract 49 49) C1) (_ bv0 1)) true) (_ bv49 57) (ite (and (distinct ((_ extract 48 48) C1) (_ bv0 1)) true) (_ bv48 57) (_ bv47 57)))))
 (let ((?x2038 (ite (and (distinct ((_ extract 53 52) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 53 53) C1) (_ bv0 1)) true) (_ bv53 57) (_ bv52 57)) (ite (and (distinct ((_ extract 51 51) C1) (_ bv0 1)) true) (_ bv51 57) (_ bv50 57)))))
 (let ((?x2184 (ite (and (distinct ((_ extract 56 56) C1) (_ bv0 1)) true) (_ bv56 57) (ite (and (distinct ((_ extract 55 55) C1) (_ bv0 1)) true) (_ bv55 57) (_ bv54 57)))))
 (let ((?x4100 (ite (and (distinct ((_ extract 56 50) C1) (_ bv0 7)) true) (ite (and (distinct ((_ extract 56 54) C1) (_ bv0 3)) true) ?x2184 ?x2038) (ite (and (distinct ((_ extract 49 47) C1) (_ bv0 3)) true) ?x4292 ?x3490))))
 (let ((?x1827 (ite (and (distinct ((_ extract 56 29) C1) (_ bv0 28)) true) (ite (and (distinct ((_ extract 56 43) C1) (_ bv0 14)) true) ?x4100 ?x4517) (ite (and (distinct ((_ extract 28 15) C1) (_ bv0 14)) true) ?x3250 ?x5842))))
 (let ((?x5565 (bvsub ?x1827 ?x4488)))
 (let ((?x3180 (bvand %X C1)))
 (let ((?x2592 (bvor %Y C2)))
 (let (($x4583 (and (distinct (ite (= (ite (and (distinct ?x3180 (_ bv0 57)) true) (_ bv1 1) (_ bv0 1)) (_ bv1 1)) %Y ?x2592) (bvor (bvxor ((_ extract 10 0) (bvlshr ?x3180 ?x5565)) C2) %Y)) true)))
 (let ((?x4500 (ite (and (distinct ((_ extract 3 2) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 3 3) C1) (_ bv0 1)) true) (_ bv3 32) (_ bv2 32)) (ite (and (distinct ((_ extract 1 1) C1) (_ bv0 1)) true) (_ bv1 32) (_ bv0 32)))))
 (let ((?x5465 (ite (and (distinct ((_ extract 7 6) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 7 7) C1) (_ bv0 1)) true) (_ bv7 32) (_ bv6 32)) (ite (and (distinct ((_ extract 5 5) C1) (_ bv0 1)) true) (_ bv5 32) (_ bv4 32)))))
 (let ((?x5168 (ite (and (distinct ((_ extract 11 10) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 11 11) C1) (_ bv0 1)) true) (_ bv11 32) (_ bv10 32)) (ite (and (distinct ((_ extract 9 9) C1) (_ bv0 1)) true) (_ bv9 32) (_ bv8 32)))))
 (let ((?x3579 (ite (and (distinct ((_ extract 14 14) C1) (_ bv0 1)) true) (_ bv14 32) (ite (and (distinct ((_ extract 13 13) C1) (_ bv0 1)) true) (_ bv13 32) (_ bv12 32)))))
 (let ((?x3126 (ite (and (distinct ((_ extract 14 8) C1) (_ bv0 7)) true) (ite (and (distinct ((_ extract 14 12) C1) (_ bv0 3)) true) ?x3579 ?x5168) (ite (and (distinct ((_ extract 7 4) C1) (_ bv0 4)) true) ?x5465 ?x4500))))
 (let ((?x2015 (ite (and (distinct ((_ extract 18 17) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 18 18) C1) (_ bv0 1)) true) (_ bv18 32) (_ bv17 32)) (ite (and (distinct ((_ extract 16 16) C1) (_ bv0 1)) true) (_ bv16 32) (_ bv15 32)))))
 (let ((?x3325 (ite (and (distinct ((_ extract 21 21) C1) (_ bv0 1)) true) (_ bv21 32) (ite (and (distinct ((_ extract 20 20) C1) (_ bv0 1)) true) (_ bv20 32) (_ bv19 32)))))
 (let ((?x3774 (ite (and (distinct ((_ extract 25 24) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 25 25) C1) (_ bv0 1)) true) (_ bv25 32) (_ bv24 32)) (ite (and (distinct ((_ extract 23 23) C1) (_ bv0 1)) true) (_ bv23 32) (_ bv22 32)))))
 (let ((?x5552 (ite (and (distinct ((_ extract 28 28) C1) (_ bv0 1)) true) (_ bv28 32) (ite (and (distinct ((_ extract 27 27) C1) (_ bv0 1)) true) (_ bv27 32) (_ bv26 32)))))
 (let ((?x2849 (ite (and (distinct ((_ extract 28 22) C1) (_ bv0 7)) true) (ite (and (distinct ((_ extract 28 26) C1) (_ bv0 3)) true) ?x5552 ?x3774) (ite (and (distinct ((_ extract 21 19) C1) (_ bv0 3)) true) ?x3325 ?x2015))))
 (let ((?x4950 (ite (and (distinct ((_ extract 32 31) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 32 32) C1) (_ bv0 1)) true) (_ bv32 32) (_ bv31 32)) (ite (and (distinct ((_ extract 30 30) C1) (_ bv0 1)) true) (_ bv30 32) (_ bv29 32)))))
 (let ((?x3233 (ite (and (distinct ((_ extract 35 35) C1) (_ bv0 1)) true) (_ bv35 32) (ite (and (distinct ((_ extract 34 34) C1) (_ bv0 1)) true) (_ bv34 32) (_ bv33 32)))))
 (let ((?x2870 (ite (and (distinct ((_ extract 39 38) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 39 39) C1) (_ bv0 1)) true) (_ bv39 32) (_ bv38 32)) (ite (and (distinct ((_ extract 37 37) C1) (_ bv0 1)) true) (_ bv37 32) (_ bv36 32)))))
 (let ((?x2718 (ite (and (distinct ((_ extract 42 42) C1) (_ bv0 1)) true) (_ bv42 32) (ite (and (distinct ((_ extract 41 41) C1) (_ bv0 1)) true) (_ bv41 32) (_ bv40 32)))))
 (let ((?x4759 (ite (and (distinct ((_ extract 42 36) C1) (_ bv0 7)) true) (ite (and (distinct ((_ extract 42 40) C1) (_ bv0 3)) true) ?x2718 ?x2870) (ite (and (distinct ((_ extract 35 33) C1) (_ bv0 3)) true) ?x3233 ?x4950))))
 (let ((?x2527 (ite (and (distinct ((_ extract 46 45) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 46 46) C1) (_ bv0 1)) true) (_ bv46 32) (_ bv45 32)) (ite (and (distinct ((_ extract 44 44) C1) (_ bv0 1)) true) (_ bv44 32) (_ bv43 32)))))
 (let ((?x1175 (ite (and (distinct ((_ extract 49 49) C1) (_ bv0 1)) true) (_ bv49 32) (ite (and (distinct ((_ extract 48 48) C1) (_ bv0 1)) true) (_ bv48 32) (_ bv47 32)))))
 (let ((?x4630 (ite (and (distinct ((_ extract 53 52) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 53 53) C1) (_ bv0 1)) true) (_ bv53 32) (_ bv52 32)) (ite (and (distinct ((_ extract 51 51) C1) (_ bv0 1)) true) (_ bv51 32) (_ bv50 32)))))
 (let ((?x6173 (ite (and (distinct ((_ extract 56 56) C1) (_ bv0 1)) true) (_ bv56 32) (ite (and (distinct ((_ extract 55 55) C1) (_ bv0 1)) true) (_ bv55 32) (_ bv54 32)))))
 (let ((?x2373 (ite (and (distinct ((_ extract 56 50) C1) (_ bv0 7)) true) (ite (and (distinct ((_ extract 56 54) C1) (_ bv0 3)) true) ?x6173 ?x4630) (ite (and (distinct ((_ extract 49 47) C1) (_ bv0 3)) true) ?x1175 ?x2527))))
 (let ((?x5025 (ite (and (distinct ((_ extract 56 29) C1) (_ bv0 28)) true) (ite (and (distinct ((_ extract 56 43) C1) (_ bv0 14)) true) ?x2373 ?x4759) (ite (and (distinct ((_ extract 28 15) C1) (_ bv0 14)) true) ?x2849 ?x3126))))
 (let ((?x5158 (ite (and (distinct ((_ extract 2 2) C2) (_ bv0 1)) true) (_ bv2 32) (ite (and (distinct ((_ extract 1 1) C2) (_ bv0 1)) true) (_ bv1 32) (_ bv0 32)))))
 (let ((?x4610 (ite (and (distinct ((_ extract 5 5) C2) (_ bv0 1)) true) (_ bv5 32) (ite (and (distinct ((_ extract 4 4) C2) (_ bv0 1)) true) (_ bv4 32) (_ bv3 32)))))
 (let ((?x4212 (ite (and (distinct ((_ extract 8 8) C2) (_ bv0 1)) true) (_ bv8 32) (ite (and (distinct ((_ extract 7 7) C2) (_ bv0 1)) true) (_ bv7 32) (_ bv6 32)))))
 (let ((?x1842 (ite (and (distinct ((_ extract 10 9) C2) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) C2) (_ bv0 1)) true) (_ bv10 32) (_ bv9 32)) ?x4212)))
 (let ((?x5561 (ite (and (distinct ((_ extract 10 6) C2) (_ bv0 5)) true) ?x1842 (ite (and (distinct ((_ extract 5 3) C2) (_ bv0 3)) true) ?x4610 ?x5158))))
 (and (and (and (distinct C1 (_ bv0 57)) true) (= (bvand C1 (bvsub C1 (_ bv1 57))) (_ bv0 57))) (and (and (distinct C2 (_ bv0 11)) true) (= (bvand C2 (bvsub C2 (_ bv1 11))) (_ bv0 11))) (bvslt ?x5561 ?x5025) $x4583))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
