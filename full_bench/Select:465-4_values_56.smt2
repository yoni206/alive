(set-info :status unknown)
(declare-fun %Y () (_ BitVec 11))
(declare-fun C2 () (_ BitVec 11))
(declare-fun C1 () (_ BitVec 61))
(declare-fun %X () (_ BitVec 61))
(assert
 (let ((?x19361 (ite (and (distinct ((_ extract 2 2) C2) (_ bv0 1)) true) (_ bv2 61) (ite (and (distinct ((_ extract 1 1) C2) (_ bv0 1)) true) (_ bv1 61) (_ bv0 61)))))
 (let ((?x25143 (ite (and (distinct ((_ extract 5 5) C2) (_ bv0 1)) true) (_ bv5 61) (ite (and (distinct ((_ extract 4 4) C2) (_ bv0 1)) true) (_ bv4 61) (_ bv3 61)))))
 (let ((?x25001 (ite (and (distinct ((_ extract 8 8) C2) (_ bv0 1)) true) (_ bv8 61) (ite (and (distinct ((_ extract 7 7) C2) (_ bv0 1)) true) (_ bv7 61) (_ bv6 61)))))
 (let ((?x8129 (ite (and (distinct ((_ extract 10 9) C2) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) C2) (_ bv0 1)) true) (_ bv10 61) (_ bv9 61)) ?x25001)))
 (let ((?x12907 (ite (and (distinct ((_ extract 10 6) C2) (_ bv0 5)) true) ?x8129 (ite (and (distinct ((_ extract 5 3) C2) (_ bv0 3)) true) ?x25143 ?x19361))))
 (let ((?x17566 (ite (and (distinct ((_ extract 3 2) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 3 3) C1) (_ bv0 1)) true) (_ bv3 61) (_ bv2 61)) (ite (and (distinct ((_ extract 1 1) C1) (_ bv0 1)) true) (_ bv1 61) (_ bv0 61)))))
 (let ((?x16346 (ite (and (distinct ((_ extract 7 6) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 7 7) C1) (_ bv0 1)) true) (_ bv7 61) (_ bv6 61)) (ite (and (distinct ((_ extract 5 5) C1) (_ bv0 1)) true) (_ bv5 61) (_ bv4 61)))))
 (let ((?x5430 (ite (and (distinct ((_ extract 11 10) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 11 11) C1) (_ bv0 1)) true) (_ bv11 61) (_ bv10 61)) (ite (and (distinct ((_ extract 9 9) C1) (_ bv0 1)) true) (_ bv9 61) (_ bv8 61)))))
 (let ((?x10862 (ite (and (distinct ((_ extract 15 14) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 15 15) C1) (_ bv0 1)) true) (_ bv15 61) (_ bv14 61)) (ite (and (distinct ((_ extract 13 13) C1) (_ bv0 1)) true) (_ bv13 61) (_ bv12 61)))))
 (let ((?x9488 (ite (and (distinct ((_ extract 15 8) C1) (_ bv0 8)) true) (ite (and (distinct ((_ extract 15 12) C1) (_ bv0 4)) true) ?x10862 ?x5430) (ite (and (distinct ((_ extract 7 4) C1) (_ bv0 4)) true) ?x16346 ?x17566))))
 (let ((?x21399 (ite (and (distinct ((_ extract 19 18) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 19 19) C1) (_ bv0 1)) true) (_ bv19 61) (_ bv18 61)) (ite (and (distinct ((_ extract 17 17) C1) (_ bv0 1)) true) (_ bv17 61) (_ bv16 61)))))
 (let ((?x5448 (ite (and (distinct ((_ extract 23 22) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 23 23) C1) (_ bv0 1)) true) (_ bv23 61) (_ bv22 61)) (ite (and (distinct ((_ extract 21 21) C1) (_ bv0 1)) true) (_ bv21 61) (_ bv20 61)))))
 (let ((?x14420 (ite (and (distinct ((_ extract 27 26) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 27 27) C1) (_ bv0 1)) true) (_ bv27 61) (_ bv26 61)) (ite (and (distinct ((_ extract 25 25) C1) (_ bv0 1)) true) (_ bv25 61) (_ bv24 61)))))
 (let ((?x22695 (ite (and (distinct ((_ extract 30 30) C1) (_ bv0 1)) true) (_ bv30 61) (ite (and (distinct ((_ extract 29 29) C1) (_ bv0 1)) true) (_ bv29 61) (_ bv28 61)))))
 (let ((?x18337 (ite (and (distinct ((_ extract 30 24) C1) (_ bv0 7)) true) (ite (and (distinct ((_ extract 30 28) C1) (_ bv0 3)) true) ?x22695 ?x14420) (ite (and (distinct ((_ extract 23 20) C1) (_ bv0 4)) true) ?x5448 ?x21399))))
 (let ((?x8833 (ite (and (distinct ((_ extract 34 33) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 34 34) C1) (_ bv0 1)) true) (_ bv34 61) (_ bv33 61)) (ite (and (distinct ((_ extract 32 32) C1) (_ bv0 1)) true) (_ bv32 61) (_ bv31 61)))))
 (let ((?x6671 (ite (and (distinct ((_ extract 38 37) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 38 38) C1) (_ bv0 1)) true) (_ bv38 61) (_ bv37 61)) (ite (and (distinct ((_ extract 36 36) C1) (_ bv0 1)) true) (_ bv36 61) (_ bv35 61)))))
 (let ((?x1702 (ite (and (distinct ((_ extract 42 41) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 42 42) C1) (_ bv0 1)) true) (_ bv42 61) (_ bv41 61)) (ite (and (distinct ((_ extract 40 40) C1) (_ bv0 1)) true) (_ bv40 61) (_ bv39 61)))))
 (let ((?x2610 (ite (and (distinct ((_ extract 45 45) C1) (_ bv0 1)) true) (_ bv45 61) (ite (and (distinct ((_ extract 44 44) C1) (_ bv0 1)) true) (_ bv44 61) (_ bv43 61)))))
 (let ((?x10444 (ite (and (distinct ((_ extract 45 39) C1) (_ bv0 7)) true) (ite (and (distinct ((_ extract 45 43) C1) (_ bv0 3)) true) ?x2610 ?x1702) (ite (and (distinct ((_ extract 38 35) C1) (_ bv0 4)) true) ?x6671 ?x8833))))
 (let ((?x9522 (ite (and (distinct ((_ extract 49 48) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 49 49) C1) (_ bv0 1)) true) (_ bv49 61) (_ bv48 61)) (ite (and (distinct ((_ extract 47 47) C1) (_ bv0 1)) true) (_ bv47 61) (_ bv46 61)))))
 (let ((?x7846 (ite (and (distinct ((_ extract 53 52) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 53 53) C1) (_ bv0 1)) true) (_ bv53 61) (_ bv52 61)) (ite (and (distinct ((_ extract 51 51) C1) (_ bv0 1)) true) (_ bv51 61) (_ bv50 61)))))
 (let ((?x2233 (ite (and (distinct ((_ extract 57 56) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 57 57) C1) (_ bv0 1)) true) (_ bv57 61) (_ bv56 61)) (ite (and (distinct ((_ extract 55 55) C1) (_ bv0 1)) true) (_ bv55 61) (_ bv54 61)))))
 (let ((?x16792 (ite (and (distinct ((_ extract 60 60) C1) (_ bv0 1)) true) (_ bv60 61) (ite (and (distinct ((_ extract 59 59) C1) (_ bv0 1)) true) (_ bv59 61) (_ bv58 61)))))
 (let ((?x580 (ite (and (distinct ((_ extract 60 54) C1) (_ bv0 7)) true) (ite (and (distinct ((_ extract 60 58) C1) (_ bv0 3)) true) ?x16792 ?x2233) (ite (and (distinct ((_ extract 53 50) C1) (_ bv0 4)) true) ?x7846 ?x9522))))
 (let ((?x1691 (ite (and (distinct ((_ extract 60 31) C1) (_ bv0 30)) true) (ite (and (distinct ((_ extract 60 46) C1) (_ bv0 15)) true) ?x580 ?x10444) (ite (and (distinct ((_ extract 30 16) C1) (_ bv0 15)) true) ?x18337 ?x9488))))
 (let ((?x643 (bvsub ?x1691 ?x12907)))
 (let ((?x22752 (bvand %X C1)))
 (let ((?x16611 (bvor %Y C2)))
 (let (($x13850 (and (distinct (ite (= (ite (and (distinct ?x22752 (_ bv0 61)) true) (_ bv1 1) (_ bv0 1)) (_ bv1 1)) %Y ?x16611) (bvor (bvxor ((_ extract 10 0) (bvlshr ?x22752 ?x643)) C2) %Y)) true)))
 (let ((?x13982 (ite (and (distinct ((_ extract 3 2) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 3 3) C1) (_ bv0 1)) true) (_ bv3 32) (_ bv2 32)) (ite (and (distinct ((_ extract 1 1) C1) (_ bv0 1)) true) (_ bv1 32) (_ bv0 32)))))
 (let ((?x8238 (ite (and (distinct ((_ extract 7 6) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 7 7) C1) (_ bv0 1)) true) (_ bv7 32) (_ bv6 32)) (ite (and (distinct ((_ extract 5 5) C1) (_ bv0 1)) true) (_ bv5 32) (_ bv4 32)))))
 (let ((?x15451 (ite (and (distinct ((_ extract 11 10) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 11 11) C1) (_ bv0 1)) true) (_ bv11 32) (_ bv10 32)) (ite (and (distinct ((_ extract 9 9) C1) (_ bv0 1)) true) (_ bv9 32) (_ bv8 32)))))
 (let ((?x1131 (ite (and (distinct ((_ extract 15 14) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 15 15) C1) (_ bv0 1)) true) (_ bv15 32) (_ bv14 32)) (ite (and (distinct ((_ extract 13 13) C1) (_ bv0 1)) true) (_ bv13 32) (_ bv12 32)))))
 (let ((?x20359 (ite (and (distinct ((_ extract 15 8) C1) (_ bv0 8)) true) (ite (and (distinct ((_ extract 15 12) C1) (_ bv0 4)) true) ?x1131 ?x15451) (ite (and (distinct ((_ extract 7 4) C1) (_ bv0 4)) true) ?x8238 ?x13982))))
 (let ((?x7936 (ite (and (distinct ((_ extract 19 18) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 19 19) C1) (_ bv0 1)) true) (_ bv19 32) (_ bv18 32)) (ite (and (distinct ((_ extract 17 17) C1) (_ bv0 1)) true) (_ bv17 32) (_ bv16 32)))))
 (let ((?x12162 (ite (and (distinct ((_ extract 23 22) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 23 23) C1) (_ bv0 1)) true) (_ bv23 32) (_ bv22 32)) (ite (and (distinct ((_ extract 21 21) C1) (_ bv0 1)) true) (_ bv21 32) (_ bv20 32)))))
 (let ((?x15698 (ite (and (distinct ((_ extract 27 26) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 27 27) C1) (_ bv0 1)) true) (_ bv27 32) (_ bv26 32)) (ite (and (distinct ((_ extract 25 25) C1) (_ bv0 1)) true) (_ bv25 32) (_ bv24 32)))))
 (let ((?x13378 (ite (and (distinct ((_ extract 30 30) C1) (_ bv0 1)) true) (_ bv30 32) (ite (and (distinct ((_ extract 29 29) C1) (_ bv0 1)) true) (_ bv29 32) (_ bv28 32)))))
 (let ((?x511 (ite (and (distinct ((_ extract 30 24) C1) (_ bv0 7)) true) (ite (and (distinct ((_ extract 30 28) C1) (_ bv0 3)) true) ?x13378 ?x15698) (ite (and (distinct ((_ extract 23 20) C1) (_ bv0 4)) true) ?x12162 ?x7936))))
 (let ((?x25100 (ite (and (distinct ((_ extract 34 33) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 34 34) C1) (_ bv0 1)) true) (_ bv34 32) (_ bv33 32)) (ite (and (distinct ((_ extract 32 32) C1) (_ bv0 1)) true) (_ bv32 32) (_ bv31 32)))))
 (let ((?x17445 (ite (and (distinct ((_ extract 38 37) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 38 38) C1) (_ bv0 1)) true) (_ bv38 32) (_ bv37 32)) (ite (and (distinct ((_ extract 36 36) C1) (_ bv0 1)) true) (_ bv36 32) (_ bv35 32)))))
 (let ((?x13862 (ite (and (distinct ((_ extract 42 41) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 42 42) C1) (_ bv0 1)) true) (_ bv42 32) (_ bv41 32)) (ite (and (distinct ((_ extract 40 40) C1) (_ bv0 1)) true) (_ bv40 32) (_ bv39 32)))))
 (let ((?x7960 (ite (and (distinct ((_ extract 45 45) C1) (_ bv0 1)) true) (_ bv45 32) (ite (and (distinct ((_ extract 44 44) C1) (_ bv0 1)) true) (_ bv44 32) (_ bv43 32)))))
 (let ((?x24188 (ite (and (distinct ((_ extract 45 39) C1) (_ bv0 7)) true) (ite (and (distinct ((_ extract 45 43) C1) (_ bv0 3)) true) ?x7960 ?x13862) (ite (and (distinct ((_ extract 38 35) C1) (_ bv0 4)) true) ?x17445 ?x25100))))
 (let ((?x5496 (ite (and (distinct ((_ extract 49 48) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 49 49) C1) (_ bv0 1)) true) (_ bv49 32) (_ bv48 32)) (ite (and (distinct ((_ extract 47 47) C1) (_ bv0 1)) true) (_ bv47 32) (_ bv46 32)))))
 (let ((?x2520 (ite (and (distinct ((_ extract 53 52) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 53 53) C1) (_ bv0 1)) true) (_ bv53 32) (_ bv52 32)) (ite (and (distinct ((_ extract 51 51) C1) (_ bv0 1)) true) (_ bv51 32) (_ bv50 32)))))
 (let ((?x6185 (ite (and (distinct ((_ extract 57 56) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 57 57) C1) (_ bv0 1)) true) (_ bv57 32) (_ bv56 32)) (ite (and (distinct ((_ extract 55 55) C1) (_ bv0 1)) true) (_ bv55 32) (_ bv54 32)))))
 (let ((?x9111 (ite (and (distinct ((_ extract 60 60) C1) (_ bv0 1)) true) (_ bv60 32) (ite (and (distinct ((_ extract 59 59) C1) (_ bv0 1)) true) (_ bv59 32) (_ bv58 32)))))
 (let ((?x6034 (ite (and (distinct ((_ extract 60 54) C1) (_ bv0 7)) true) (ite (and (distinct ((_ extract 60 58) C1) (_ bv0 3)) true) ?x9111 ?x6185) (ite (and (distinct ((_ extract 53 50) C1) (_ bv0 4)) true) ?x2520 ?x5496))))
 (let ((?x1668 (ite (and (distinct ((_ extract 60 31) C1) (_ bv0 30)) true) (ite (and (distinct ((_ extract 60 46) C1) (_ bv0 15)) true) ?x6034 ?x24188) (ite (and (distinct ((_ extract 30 16) C1) (_ bv0 15)) true) ?x511 ?x20359))))
 (let ((?x9744 (ite (and (distinct ((_ extract 2 2) C2) (_ bv0 1)) true) (_ bv2 32) (ite (and (distinct ((_ extract 1 1) C2) (_ bv0 1)) true) (_ bv1 32) (_ bv0 32)))))
 (let ((?x4660 (ite (and (distinct ((_ extract 5 5) C2) (_ bv0 1)) true) (_ bv5 32) (ite (and (distinct ((_ extract 4 4) C2) (_ bv0 1)) true) (_ bv4 32) (_ bv3 32)))))
 (let ((?x2141 (ite (and (distinct ((_ extract 8 8) C2) (_ bv0 1)) true) (_ bv8 32) (ite (and (distinct ((_ extract 7 7) C2) (_ bv0 1)) true) (_ bv7 32) (_ bv6 32)))))
 (let ((?x2282 (ite (and (distinct ((_ extract 10 9) C2) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) C2) (_ bv0 1)) true) (_ bv10 32) (_ bv9 32)) ?x2141)))
 (let ((?x7851 (ite (and (distinct ((_ extract 10 6) C2) (_ bv0 5)) true) ?x2282 (ite (and (distinct ((_ extract 5 3) C2) (_ bv0 3)) true) ?x4660 ?x9744))))
 (and (and (and (distinct C1 (_ bv0 61)) true) (= (bvand C1 (bvsub C1 (_ bv1 61))) (_ bv0 61))) (and (and (distinct C2 (_ bv0 11)) true) (= (bvand C2 (bvsub C2 (_ bv1 11))) (_ bv0 11))) (bvslt ?x7851 ?x1668) $x13850))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
