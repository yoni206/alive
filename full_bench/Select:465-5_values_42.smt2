(set-info :status unknown)
(declare-fun %Y () (_ BitVec 11))
(declare-fun C2 () (_ BitVec 11))
(declare-fun C1 () (_ BitVec 46))
(declare-fun %X () (_ BitVec 46))
(assert
 (let ((?x5420 (ite (and (distinct ((_ extract 2 2) C1) (_ bv0 1)) true) (_ bv2 11) (ite (and (distinct ((_ extract 1 1) C1) (_ bv0 1)) true) (_ bv1 11) (_ bv0 11)))))
 (let ((?x4303 (ite (and (distinct ((_ extract 5 5) C1) (_ bv0 1)) true) (_ bv5 11) (ite (and (distinct ((_ extract 4 4) C1) (_ bv0 1)) true) (_ bv4 11) (_ bv3 11)))))
 (let ((?x3593 (ite (and (distinct ((_ extract 8 8) C1) (_ bv0 1)) true) (_ bv8 11) (ite (and (distinct ((_ extract 7 7) C1) (_ bv0 1)) true) (_ bv7 11) (_ bv6 11)))))
 (let ((?x6713 (ite (and (distinct ((_ extract 11 11) C1) (_ bv0 1)) true) (_ bv11 11) (ite (and (distinct ((_ extract 10 10) C1) (_ bv0 1)) true) (_ bv10 11) (_ bv9 11)))))
 (let ((?x3315 (ite (and (distinct ((_ extract 11 6) C1) (_ bv0 6)) true) (ite (and (distinct ((_ extract 11 9) C1) (_ bv0 3)) true) ?x6713 ?x3593) (ite (and (distinct ((_ extract 5 3) C1) (_ bv0 3)) true) ?x4303 ?x5420))))
 (let ((?x6135 (ite (and (distinct ((_ extract 14 14) C1) (_ bv0 1)) true) (_ bv14 11) (ite (and (distinct ((_ extract 13 13) C1) (_ bv0 1)) true) (_ bv13 11) (_ bv12 11)))))
 (let ((?x5954 (ite (and (distinct ((_ extract 17 17) C1) (_ bv0 1)) true) (_ bv17 11) (ite (and (distinct ((_ extract 16 16) C1) (_ bv0 1)) true) (_ bv16 11) (_ bv15 11)))))
 (let ((?x3911 (ite (and (distinct ((_ extract 20 20) C1) (_ bv0 1)) true) (_ bv20 11) (ite (and (distinct ((_ extract 19 19) C1) (_ bv0 1)) true) (_ bv19 11) (_ bv18 11)))))
 (let ((?x4211 (ite (and (distinct ((_ extract 22 21) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 22 22) C1) (_ bv0 1)) true) (_ bv22 11) (_ bv21 11)) ?x3911)))
 (let ((?x5945 (ite (and (distinct ((_ extract 22 18) C1) (_ bv0 5)) true) ?x4211 (ite (and (distinct ((_ extract 17 15) C1) (_ bv0 3)) true) ?x5954 ?x6135))))
 (let ((?x4217 (ite (and (distinct ((_ extract 25 25) C1) (_ bv0 1)) true) (_ bv25 11) (ite (and (distinct ((_ extract 24 24) C1) (_ bv0 1)) true) (_ bv24 11) (_ bv23 11)))))
 (let ((?x4067 (ite (and (distinct ((_ extract 28 28) C1) (_ bv0 1)) true) (_ bv28 11) (ite (and (distinct ((_ extract 27 27) C1) (_ bv0 1)) true) (_ bv27 11) (_ bv26 11)))))
 (let ((?x1636 (ite (and (distinct ((_ extract 31 31) C1) (_ bv0 1)) true) (_ bv31 11) (ite (and (distinct ((_ extract 30 30) C1) (_ bv0 1)) true) (_ bv30 11) (_ bv29 11)))))
 (let ((?x1124 (ite (and (distinct ((_ extract 34 34) C1) (_ bv0 1)) true) (_ bv34 11) (ite (and (distinct ((_ extract 33 33) C1) (_ bv0 1)) true) (_ bv33 11) (_ bv32 11)))))
 (let ((?x3528 (ite (and (distinct ((_ extract 34 29) C1) (_ bv0 6)) true) (ite (and (distinct ((_ extract 34 32) C1) (_ bv0 3)) true) ?x1124 ?x1636) (ite (and (distinct ((_ extract 28 26) C1) (_ bv0 3)) true) ?x4067 ?x4217))))
 (let ((?x2670 (ite (and (distinct ((_ extract 37 37) C1) (_ bv0 1)) true) (_ bv37 11) (ite (and (distinct ((_ extract 36 36) C1) (_ bv0 1)) true) (_ bv36 11) (_ bv35 11)))))
 (let ((?x5731 (ite (and (distinct ((_ extract 40 40) C1) (_ bv0 1)) true) (_ bv40 11) (ite (and (distinct ((_ extract 39 39) C1) (_ bv0 1)) true) (_ bv39 11) (_ bv38 11)))))
 (let ((?x2803 (ite (and (distinct ((_ extract 43 43) C1) (_ bv0 1)) true) (_ bv43 11) (ite (and (distinct ((_ extract 42 42) C1) (_ bv0 1)) true) (_ bv42 11) (_ bv41 11)))))
 (let ((?x2699 (ite (and (distinct ((_ extract 45 44) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 45 45) C1) (_ bv0 1)) true) (_ bv45 11) (_ bv44 11)) ?x2803)))
 (let ((?x1818 (ite (and (distinct ((_ extract 45 41) C1) (_ bv0 5)) true) ?x2699 (ite (and (distinct ((_ extract 40 38) C1) (_ bv0 3)) true) ?x5731 ?x2670))))
 (let ((?x3941 (ite (and (distinct ((_ extract 45 23) C1) (_ bv0 23)) true) (ite (and (distinct ((_ extract 45 35) C1) (_ bv0 11)) true) ?x1818 ?x3528) (ite (and (distinct ((_ extract 22 12) C1) (_ bv0 11)) true) ?x5945 ?x3315))))
 (let ((?x3169 (ite (and (distinct ((_ extract 2 2) C2) (_ bv0 1)) true) (_ bv2 11) (ite (and (distinct ((_ extract 1 1) C2) (_ bv0 1)) true) (_ bv1 11) (_ bv0 11)))))
 (let ((?x3229 (ite (and (distinct ((_ extract 5 5) C2) (_ bv0 1)) true) (_ bv5 11) (ite (and (distinct ((_ extract 4 4) C2) (_ bv0 1)) true) (_ bv4 11) (_ bv3 11)))))
 (let ((?x4389 (ite (and (distinct ((_ extract 8 8) C2) (_ bv0 1)) true) (_ bv8 11) (ite (and (distinct ((_ extract 7 7) C2) (_ bv0 1)) true) (_ bv7 11) (_ bv6 11)))))
 (let ((?x3270 (ite (and (distinct ((_ extract 10 9) C2) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) C2) (_ bv0 1)) true) (_ bv10 11) (_ bv9 11)) ?x4389)))
 (let ((?x4990 (ite (and (distinct ((_ extract 10 6) C2) (_ bv0 5)) true) ?x3270 (ite (and (distinct ((_ extract 5 3) C2) (_ bv0 3)) true) ?x3229 ?x3169))))
 (let ((?x3071 (bvsub ?x4990 ?x3941)))
 (let ((?x1681 (bvor %Y C2)))
 (let (($x3814 (and (distinct (ite (= (ite (= (bvand %X C1) (_ bv0 46)) (_ bv1 1) (_ bv0 1)) (_ bv1 1)) ?x1681 %Y) (bvor (bvxor (bvshl ((_ extract 10 0) (bvand %X C1)) ?x3071) C2) %Y)) true)))
 (let ((?x2389 (ite (and (distinct ((_ extract 2 2) C1) (_ bv0 1)) true) (_ bv2 32) (ite (and (distinct ((_ extract 1 1) C1) (_ bv0 1)) true) (_ bv1 32) (_ bv0 32)))))
 (let ((?x5714 (ite (and (distinct ((_ extract 5 5) C1) (_ bv0 1)) true) (_ bv5 32) (ite (and (distinct ((_ extract 4 4) C1) (_ bv0 1)) true) (_ bv4 32) (_ bv3 32)))))
 (let ((?x3716 (ite (and (distinct ((_ extract 8 8) C1) (_ bv0 1)) true) (_ bv8 32) (ite (and (distinct ((_ extract 7 7) C1) (_ bv0 1)) true) (_ bv7 32) (_ bv6 32)))))
 (let ((?x1744 (ite (and (distinct ((_ extract 11 11) C1) (_ bv0 1)) true) (_ bv11 32) (ite (and (distinct ((_ extract 10 10) C1) (_ bv0 1)) true) (_ bv10 32) (_ bv9 32)))))
 (let ((?x4189 (ite (and (distinct ((_ extract 11 6) C1) (_ bv0 6)) true) (ite (and (distinct ((_ extract 11 9) C1) (_ bv0 3)) true) ?x1744 ?x3716) (ite (and (distinct ((_ extract 5 3) C1) (_ bv0 3)) true) ?x5714 ?x2389))))
 (let ((?x6729 (ite (and (distinct ((_ extract 14 14) C1) (_ bv0 1)) true) (_ bv14 32) (ite (and (distinct ((_ extract 13 13) C1) (_ bv0 1)) true) (_ bv13 32) (_ bv12 32)))))
 (let ((?x5182 (ite (and (distinct ((_ extract 17 17) C1) (_ bv0 1)) true) (_ bv17 32) (ite (and (distinct ((_ extract 16 16) C1) (_ bv0 1)) true) (_ bv16 32) (_ bv15 32)))))
 (let ((?x4563 (ite (and (distinct ((_ extract 20 20) C1) (_ bv0 1)) true) (_ bv20 32) (ite (and (distinct ((_ extract 19 19) C1) (_ bv0 1)) true) (_ bv19 32) (_ bv18 32)))))
 (let ((?x4070 (ite (and (distinct ((_ extract 22 21) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 22 22) C1) (_ bv0 1)) true) (_ bv22 32) (_ bv21 32)) ?x4563)))
 (let ((?x1903 (ite (and (distinct ((_ extract 22 18) C1) (_ bv0 5)) true) ?x4070 (ite (and (distinct ((_ extract 17 15) C1) (_ bv0 3)) true) ?x5182 ?x6729))))
 (let ((?x3574 (ite (and (distinct ((_ extract 25 25) C1) (_ bv0 1)) true) (_ bv25 32) (ite (and (distinct ((_ extract 24 24) C1) (_ bv0 1)) true) (_ bv24 32) (_ bv23 32)))))
 (let ((?x3325 (ite (and (distinct ((_ extract 28 28) C1) (_ bv0 1)) true) (_ bv28 32) (ite (and (distinct ((_ extract 27 27) C1) (_ bv0 1)) true) (_ bv27 32) (_ bv26 32)))))
 (let ((?x3096 (ite (and (distinct ((_ extract 31 31) C1) (_ bv0 1)) true) (_ bv31 32) (ite (and (distinct ((_ extract 30 30) C1) (_ bv0 1)) true) (_ bv30 32) (_ bv29 32)))))
 (let ((?x1757 (ite (and (distinct ((_ extract 34 34) C1) (_ bv0 1)) true) (_ bv34 32) (ite (and (distinct ((_ extract 33 33) C1) (_ bv0 1)) true) (_ bv33 32) (_ bv32 32)))))
 (let ((?x3499 (ite (and (distinct ((_ extract 34 29) C1) (_ bv0 6)) true) (ite (and (distinct ((_ extract 34 32) C1) (_ bv0 3)) true) ?x1757 ?x3096) (ite (and (distinct ((_ extract 28 26) C1) (_ bv0 3)) true) ?x3325 ?x3574))))
 (let ((?x1637 (ite (and (distinct ((_ extract 37 37) C1) (_ bv0 1)) true) (_ bv37 32) (ite (and (distinct ((_ extract 36 36) C1) (_ bv0 1)) true) (_ bv36 32) (_ bv35 32)))))
 (let ((?x3769 (ite (and (distinct ((_ extract 40 40) C1) (_ bv0 1)) true) (_ bv40 32) (ite (and (distinct ((_ extract 39 39) C1) (_ bv0 1)) true) (_ bv39 32) (_ bv38 32)))))
 (let ((?x1227 (ite (and (distinct ((_ extract 43 43) C1) (_ bv0 1)) true) (_ bv43 32) (ite (and (distinct ((_ extract 42 42) C1) (_ bv0 1)) true) (_ bv42 32) (_ bv41 32)))))
 (let ((?x3687 (ite (and (distinct ((_ extract 45 44) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 45 45) C1) (_ bv0 1)) true) (_ bv45 32) (_ bv44 32)) ?x1227)))
 (let ((?x1550 (ite (and (distinct ((_ extract 45 41) C1) (_ bv0 5)) true) ?x3687 (ite (and (distinct ((_ extract 40 38) C1) (_ bv0 3)) true) ?x3769 ?x1637))))
 (let ((?x1718 (ite (and (distinct ((_ extract 45 23) C1) (_ bv0 23)) true) (ite (and (distinct ((_ extract 45 35) C1) (_ bv0 11)) true) ?x1550 ?x3499) (ite (and (distinct ((_ extract 22 12) C1) (_ bv0 11)) true) ?x1903 ?x4189))))
 (let ((?x2399 (ite (and (distinct ((_ extract 2 2) C2) (_ bv0 1)) true) (_ bv2 32) (ite (and (distinct ((_ extract 1 1) C2) (_ bv0 1)) true) (_ bv1 32) (_ bv0 32)))))
 (let ((?x1375 (ite (and (distinct ((_ extract 5 5) C2) (_ bv0 1)) true) (_ bv5 32) (ite (and (distinct ((_ extract 4 4) C2) (_ bv0 1)) true) (_ bv4 32) (_ bv3 32)))))
 (let ((?x5050 (ite (and (distinct ((_ extract 8 8) C2) (_ bv0 1)) true) (_ bv8 32) (ite (and (distinct ((_ extract 7 7) C2) (_ bv0 1)) true) (_ bv7 32) (_ bv6 32)))))
 (let ((?x4309 (ite (and (distinct ((_ extract 10 9) C2) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) C2) (_ bv0 1)) true) (_ bv10 32) (_ bv9 32)) ?x5050)))
 (let ((?x1809 (ite (and (distinct ((_ extract 10 6) C2) (_ bv0 5)) true) ?x4309 (ite (and (distinct ((_ extract 5 3) C2) (_ bv0 3)) true) ?x1375 ?x2399))))
 (and (and (and (distinct C1 (_ bv0 46)) true) (= (bvand C1 (bvsub C1 (_ bv1 46))) (_ bv0 46))) (and (and (distinct C2 (_ bv0 11)) true) (= (bvand C2 (bvsub C2 (_ bv1 11))) (_ bv0 11))) (bvsge ?x1809 ?x1718) $x3814)))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
