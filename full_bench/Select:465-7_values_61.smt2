(set-info :status unknown)
(declare-fun %Y () (_ BitVec 11))
(declare-fun C2 () (_ BitVec 11))
(declare-fun C1 () (_ BitVec 5))
(declare-fun %X () (_ BitVec 5))
(assert
 (let ((?x4197 (ite (and (distinct ((_ extract 2 2) C2) (_ bv0 1)) true) (_ bv2 5) (ite (and (distinct ((_ extract 1 1) C2) (_ bv0 1)) true) (_ bv1 5) (_ bv0 5)))))
 (let ((?x1919 (ite (and (distinct ((_ extract 5 5) C2) (_ bv0 1)) true) (_ bv5 5) (ite (and (distinct ((_ extract 4 4) C2) (_ bv0 1)) true) (_ bv4 5) (_ bv3 5)))))
 (let ((?x2959 (ite (and (distinct ((_ extract 8 8) C2) (_ bv0 1)) true) (_ bv8 5) (ite (and (distinct ((_ extract 7 7) C2) (_ bv0 1)) true) (_ bv7 5) (_ bv6 5)))))
 (let ((?x4305 (ite (and (distinct ((_ extract 10 9) C2) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) C2) (_ bv0 1)) true) (_ bv10 5) (_ bv9 5)) ?x2959)))
 (let ((?x6501 (ite (and (distinct ((_ extract 10 6) C2) (_ bv0 5)) true) ?x4305 (ite (and (distinct ((_ extract 5 3) C2) (_ bv0 3)) true) ?x1919 ?x4197))))
 (let ((?x5516 (ite (and (distinct ((_ extract 2 2) C1) (_ bv0 1)) true) (_ bv2 5) (ite (and (distinct ((_ extract 1 1) C1) (_ bv0 1)) true) (_ bv1 5) (_ bv0 5)))))
 (let ((?x4597 (ite (and (distinct ((_ extract 4 3) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 4 4) C1) (_ bv0 1)) true) (_ bv4 5) (_ bv3 5)) ?x5516)))
 (let ((?x1660 (bvsub ?x4597 ?x6501)))
 (let ((?x3171 (bvand %X C1)))
 (let (($x3084 (and (distinct (ite (= (ite (= ?x3171 (_ bv0 5)) (_ bv1 1) (_ bv0 1)) (_ bv1 1)) (bvor %Y C2) %Y) (bvor (bvxor ((_ zero_extend 6) (bvlshr ?x3171 ?x1660)) C2) %Y)) true)))
 (let ((?x2660 (ite (and (distinct ((_ extract 2 2) C1) (_ bv0 1)) true) (_ bv2 32) (ite (and (distinct ((_ extract 1 1) C1) (_ bv0 1)) true) (_ bv1 32) (_ bv0 32)))))
 (let ((?x3715 (ite (and (distinct ((_ extract 4 3) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 4 4) C1) (_ bv0 1)) true) (_ bv4 32) (_ bv3 32)) ?x2660)))
 (let ((?x2992 (ite (and (distinct ((_ extract 2 2) C2) (_ bv0 1)) true) (_ bv2 32) (ite (and (distinct ((_ extract 1 1) C2) (_ bv0 1)) true) (_ bv1 32) (_ bv0 32)))))
 (let ((?x2570 (ite (and (distinct ((_ extract 5 5) C2) (_ bv0 1)) true) (_ bv5 32) (ite (and (distinct ((_ extract 4 4) C2) (_ bv0 1)) true) (_ bv4 32) (_ bv3 32)))))
 (let ((?x4759 (ite (and (distinct ((_ extract 8 8) C2) (_ bv0 1)) true) (_ bv8 32) (ite (and (distinct ((_ extract 7 7) C2) (_ bv0 1)) true) (_ bv7 32) (_ bv6 32)))))
 (let ((?x2101 (ite (and (distinct ((_ extract 10 9) C2) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) C2) (_ bv0 1)) true) (_ bv10 32) (_ bv9 32)) ?x4759)))
 (let ((?x3685 (ite (and (distinct ((_ extract 10 6) C2) (_ bv0 5)) true) ?x2101 (ite (and (distinct ((_ extract 5 3) C2) (_ bv0 3)) true) ?x2570 ?x2992))))
 (and (and (and (distinct C1 (_ bv0 5)) true) (= (bvand C1 (bvsub C1 (_ bv1 5))) (_ bv0 5))) (and (and (distinct C2 (_ bv0 11)) true) (= (bvand C2 (bvsub C2 (_ bv1 11))) (_ bv0 11))) (bvslt ?x3685 ?x3715) $x3084)))))))))))))))))))
(check-sat)
