(set-info :status unknown)
(declare-fun %K2 () (_ BitVec 2))
(declare-fun %K1 () (_ BitVec 2))
(declare-fun %A () (_ BitVec 2))
(declare-fun |ana_isPowerOf2(%K2)| () (_ BitVec 1))
(declare-fun |ana_isPowerOf2(%K1)| () (_ BitVec 1))
(assert
 (let ((?x12518 (ite (and (distinct (bvand %A (bvor %K1 %K2)) (bvor %K1 %K2)) true) (_ bv1 1) (_ bv0 1))))
 (let ((?x4518 (ite (= (bvand %A %K2) (_ bv0 2)) (_ bv1 1) (_ bv0 1))))
 (let ((?x12107 (ite (= (bvand %A %K1) (_ bv0 2)) (_ bv1 1) (_ bv0 1))))
 (let (($x21049 (= |ana_isPowerOf2(%K2)| (_ bv1 1))))
 (let (($x9686 (= |ana_isPowerOf2(%K1)| (_ bv1 1))))
 (let (($x4780 (=> $x21049 (and (and (distinct %K2 (_ bv0 2)) true) (= (bvand %K2 (bvsub %K2 (_ bv1 2))) (_ bv0 2))))))
 (let (($x5541 (=> $x9686 (and (and (distinct %K1 (_ bv0 2)) true) (= (bvand %K1 (bvsub %K1 (_ bv1 2))) (_ bv0 2))))))
 (and $x5541 $x4780 $x9686 $x21049 (and (distinct (bvor ?x12107 ?x4518) ?x12518) true))))))))))
(check-sat)
