(set-info :source |
 Generated by Alive 0.1
 More info in N. P. Lopes, D. Menendez, S. Nagarakatte, J. Regehr.
 Provably Correct Peephole Optimizations with Alive. In PLDI'15.
|)

(set-info :status unknown)
(declare-fun C () (_ BitVec 33))
(declare-fun %Op0 () (_ BitVec 33))
(assert
 (let ((?x431971 (ite (and (distinct ((_ extract 2 2) C) (_ bv0 1)) true) (_ bv2 33) (ite (and (distinct ((_ extract 1 1) C) (_ bv0 1)) true) (_ bv1 33) (_ bv0 33)))))
 (let ((?x434926 (ite (and (distinct ((_ extract 4 3) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 4 4) C) (_ bv0 1)) true) (_ bv4 33) (_ bv3 33)) ?x431971)))
 (let ((?x393996 (ite (and (distinct ((_ extract 8 7) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 8 8) C) (_ bv0 1)) true) (_ bv8 33) (_ bv7 33)) (ite (and (distinct ((_ extract 6 6) C) (_ bv0 1)) true) (_ bv6 33) (_ bv5 33)))))
 (let ((?x426650 (ite (and (distinct ((_ extract 12 11) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 12 12) C) (_ bv0 1)) true) (_ bv12 33) (_ bv11 33)) (ite (and (distinct ((_ extract 10 10) C) (_ bv0 1)) true) (_ bv10 33) (_ bv9 33)))))
 (let ((?x407311 (ite (and (distinct ((_ extract 16 15) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 16 16) C) (_ bv0 1)) true) (_ bv16 33) (_ bv15 33)) (ite (and (distinct ((_ extract 14 14) C) (_ bv0 1)) true) (_ bv14 33) (_ bv13 33)))))
 (let ((?x433084 (ite (and (distinct ((_ extract 16 9) C) (_ bv0 8)) true) (ite (and (distinct ((_ extract 16 13) C) (_ bv0 4)) true) ?x407311 ?x426650) (ite (and (distinct ((_ extract 8 5) C) (_ bv0 4)) true) ?x393996 ?x434926))))
 (let ((?x434593 (ite (and (distinct ((_ extract 20 19) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 20 20) C) (_ bv0 1)) true) (_ bv20 33) (_ bv19 33)) (ite (and (distinct ((_ extract 18 18) C) (_ bv0 1)) true) (_ bv18 33) (_ bv17 33)))))
 (let ((?x435375 (ite (and (distinct ((_ extract 24 23) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 24 24) C) (_ bv0 1)) true) (_ bv24 33) (_ bv23 33)) (ite (and (distinct ((_ extract 22 22) C) (_ bv0 1)) true) (_ bv22 33) (_ bv21 33)))))
 (let ((?x431863 (ite (and (distinct ((_ extract 28 27) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 28 28) C) (_ bv0 1)) true) (_ bv28 33) (_ bv27 33)) (ite (and (distinct ((_ extract 26 26) C) (_ bv0 1)) true) (_ bv26 33) (_ bv25 33)))))
 (let ((?x420653 (ite (and (distinct ((_ extract 32 31) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 32 32) C) (_ bv0 1)) true) (_ bv32 33) (_ bv31 33)) (ite (and (distinct ((_ extract 30 30) C) (_ bv0 1)) true) (_ bv30 33) (_ bv29 33)))))
 (let ((?x434195 (ite (and (distinct ((_ extract 32 25) C) (_ bv0 8)) true) (ite (and (distinct ((_ extract 32 29) C) (_ bv0 4)) true) ?x420653 ?x431863) (ite (and (distinct ((_ extract 24 21) C) (_ bv0 4)) true) ?x435375 ?x434593))))
 (let ((?x416699 (ite (and (distinct ((_ extract 32 17) C) (_ bv0 16)) true) ?x434195 ?x433084)))
 (let (($x157550 (and (distinct C (_ bv0 33)) true)))
 (let (($x158941 (and $x157550 (= (bvand C (bvsub C (_ bv1 33))) (_ bv0 33)))))
 (let (($x378397 (bvsge C (_ bv0 33))))
 (and $x157550 (or (and (distinct %Op0 (_ bv4294967296 33)) true) (and (distinct C (_ bv8589934591 33)) true)) (= (bvmul (bvsdiv %Op0 C) C) %Op0) $x378397 $x158941 (not (bvult ?x416699 (_ bv33 33))))))))))))))))))))
(check-sat)
