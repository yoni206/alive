(set-info :status unknown)
(declare-fun C2 () (_ BitVec 11))
(declare-fun C1 () (_ BitVec 14))
(assert
 (let ((?x22478 (ite (and (distinct ((_ extract 2 2) C2) (_ bv0 1)) true) (_ bv2 14) (ite (and (distinct ((_ extract 1 1) C2) (_ bv0 1)) true) (_ bv1 14) (_ bv0 14)))))
 (let ((?x2475 (ite (and (distinct ((_ extract 5 5) C2) (_ bv0 1)) true) (_ bv5 14) (ite (and (distinct ((_ extract 4 4) C2) (_ bv0 1)) true) (_ bv4 14) (_ bv3 14)))))
 (let ((?x6640 (ite (and (distinct ((_ extract 8 8) C2) (_ bv0 1)) true) (_ bv8 14) (ite (and (distinct ((_ extract 7 7) C2) (_ bv0 1)) true) (_ bv7 14) (_ bv6 14)))))
 (let ((?x3208 (ite (and (distinct ((_ extract 10 9) C2) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) C2) (_ bv0 1)) true) (_ bv10 14) (_ bv9 14)) ?x6640)))
 (let ((?x13613 (ite (and (distinct ((_ extract 10 6) C2) (_ bv0 5)) true) ?x3208 (ite (and (distinct ((_ extract 5 3) C2) (_ bv0 3)) true) ?x2475 ?x22478))))
 (let ((?x16061 (ite (and (distinct ((_ extract 3 2) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 3 3) C1) (_ bv0 1)) true) (_ bv3 14) (_ bv2 14)) (ite (and (distinct ((_ extract 1 1) C1) (_ bv0 1)) true) (_ bv1 14) (_ bv0 14)))))
 (let ((?x6609 (ite (and (distinct ((_ extract 6 6) C1) (_ bv0 1)) true) (_ bv6 14) (ite (and (distinct ((_ extract 5 5) C1) (_ bv0 1)) true) (_ bv5 14) (_ bv4 14)))))
 (let ((?x5114 (ite (and (distinct ((_ extract 10 9) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) C1) (_ bv0 1)) true) (_ bv10 14) (_ bv9 14)) (ite (and (distinct ((_ extract 8 8) C1) (_ bv0 1)) true) (_ bv8 14) (_ bv7 14)))))
 (let ((?x24895 (ite (and (distinct ((_ extract 13 13) C1) (_ bv0 1)) true) (_ bv13 14) (ite (and (distinct ((_ extract 12 12) C1) (_ bv0 1)) true) (_ bv12 14) (_ bv11 14)))))
 (let ((?x13675 (ite (and (distinct ((_ extract 13 7) C1) (_ bv0 7)) true) (ite (and (distinct ((_ extract 13 11) C1) (_ bv0 3)) true) ?x24895 ?x5114) (ite (and (distinct ((_ extract 6 4) C1) (_ bv0 3)) true) ?x6609 ?x16061))))
 (let ((?x19758 (bvsub ?x13675 ?x13613)))
 (let ((?x244 (ite (and (distinct ((_ extract 3 2) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 3 3) C1) (_ bv0 1)) true) (_ bv3 32) (_ bv2 32)) (ite (and (distinct ((_ extract 1 1) C1) (_ bv0 1)) true) (_ bv1 32) (_ bv0 32)))))
 (let ((?x10146 (ite (and (distinct ((_ extract 6 6) C1) (_ bv0 1)) true) (_ bv6 32) (ite (and (distinct ((_ extract 5 5) C1) (_ bv0 1)) true) (_ bv5 32) (_ bv4 32)))))
 (let ((?x8008 (ite (and (distinct ((_ extract 10 9) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) C1) (_ bv0 1)) true) (_ bv10 32) (_ bv9 32)) (ite (and (distinct ((_ extract 8 8) C1) (_ bv0 1)) true) (_ bv8 32) (_ bv7 32)))))
 (let ((?x6197 (ite (and (distinct ((_ extract 13 13) C1) (_ bv0 1)) true) (_ bv13 32) (ite (and (distinct ((_ extract 12 12) C1) (_ bv0 1)) true) (_ bv12 32) (_ bv11 32)))))
 (let ((?x5593 (ite (and (distinct ((_ extract 13 7) C1) (_ bv0 7)) true) (ite (and (distinct ((_ extract 13 11) C1) (_ bv0 3)) true) ?x6197 ?x8008) (ite (and (distinct ((_ extract 6 4) C1) (_ bv0 3)) true) ?x10146 ?x244))))
 (let ((?x1215 (ite (and (distinct ((_ extract 2 2) C2) (_ bv0 1)) true) (_ bv2 32) (ite (and (distinct ((_ extract 1 1) C2) (_ bv0 1)) true) (_ bv1 32) (_ bv0 32)))))
 (let ((?x3539 (ite (and (distinct ((_ extract 5 5) C2) (_ bv0 1)) true) (_ bv5 32) (ite (and (distinct ((_ extract 4 4) C2) (_ bv0 1)) true) (_ bv4 32) (_ bv3 32)))))
 (let ((?x3500 (ite (and (distinct ((_ extract 8 8) C2) (_ bv0 1)) true) (_ bv8 32) (ite (and (distinct ((_ extract 7 7) C2) (_ bv0 1)) true) (_ bv7 32) (_ bv6 32)))))
 (let ((?x21217 (ite (and (distinct ((_ extract 10 9) C2) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) C2) (_ bv0 1)) true) (_ bv10 32) (_ bv9 32)) ?x3500)))
 (let ((?x20270 (ite (and (distinct ((_ extract 10 6) C2) (_ bv0 5)) true) ?x21217 (ite (and (distinct ((_ extract 5 3) C2) (_ bv0 3)) true) ?x3539 ?x1215))))
 (and (and (and (distinct C1 (_ bv0 14)) true) (= (bvand C1 (bvsub C1 (_ bv1 14))) (_ bv0 14))) (and (and (distinct C2 (_ bv0 11)) true) (= (bvand C2 (bvsub C2 (_ bv1 11))) (_ bv0 11))) (bvslt ?x20270 ?x5593) (not (bvult ?x19758 (_ bv14 14))))))))))))))))))))))))))
(check-sat)
