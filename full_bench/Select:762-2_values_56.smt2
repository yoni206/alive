(set-info :status unknown)
(declare-fun C3 () (_ BitVec 11))
(declare-fun C2 () (_ BitVec 11))
(declare-fun C () (_ BitVec 60))
(declare-fun %Op () (_ BitVec 60))
(assert
 (let ((?x1260 (ite (and (distinct ((_ extract 2 2) (bvsub C2 C3)) (_ bv0 1)) true) (_ bv2 11) (ite (and (distinct ((_ extract 1 1) (bvsub C2 C3)) (_ bv0 1)) true) (_ bv1 11) (_ bv0 11)))))
 (let ((?x2622 (ite (and (distinct ((_ extract 5 5) (bvsub C2 C3)) (_ bv0 1)) true) (_ bv5 11) (ite (and (distinct ((_ extract 4 4) (bvsub C2 C3)) (_ bv0 1)) true) (_ bv4 11) (_ bv3 11)))))
 (let ((?x4040 (ite (and (distinct ((_ extract 8 8) (bvsub C2 C3)) (_ bv0 1)) true) (_ bv8 11) (ite (and (distinct ((_ extract 7 7) (bvsub C2 C3)) (_ bv0 1)) true) (_ bv7 11) (_ bv6 11)))))
 (let ((?x6456 (ite (and (distinct ((_ extract 10 9) (bvsub C2 C3)) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) (bvsub C2 C3)) (_ bv0 1)) true) (_ bv10 11) (_ bv9 11)) ?x4040)))
 (let ((?x5737 (ite (and (distinct ((_ extract 10 6) (bvsub C2 C3)) (_ bv0 5)) true) ?x6456 (ite (and (distinct ((_ extract 5 3) (bvsub C2 C3)) (_ bv0 3)) true) ?x2622 ?x1260))))
 (let ((?x3012 (ite (and (distinct ((_ extract 3 2) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 3 3) C) (_ bv0 1)) true) (_ bv3 11) (_ bv2 11)) (ite (and (distinct ((_ extract 1 1) C) (_ bv0 1)) true) (_ bv1 11) (_ bv0 11)))))
 (let ((?x3505 (ite (and (distinct ((_ extract 7 6) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 7 7) C) (_ bv0 1)) true) (_ bv7 11) (_ bv6 11)) (ite (and (distinct ((_ extract 5 5) C) (_ bv0 1)) true) (_ bv5 11) (_ bv4 11)))))
 (let ((?x4033 (ite (and (distinct ((_ extract 11 10) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 11 11) C) (_ bv0 1)) true) (_ bv11 11) (_ bv10 11)) (ite (and (distinct ((_ extract 9 9) C) (_ bv0 1)) true) (_ bv9 11) (_ bv8 11)))))
 (let ((?x4994 (ite (and (distinct ((_ extract 14 14) C) (_ bv0 1)) true) (_ bv14 11) (ite (and (distinct ((_ extract 13 13) C) (_ bv0 1)) true) (_ bv13 11) (_ bv12 11)))))
 (let ((?x7808 (ite (and (distinct ((_ extract 14 8) C) (_ bv0 7)) true) (ite (and (distinct ((_ extract 14 12) C) (_ bv0 3)) true) ?x4994 ?x4033) (ite (and (distinct ((_ extract 7 4) C) (_ bv0 4)) true) ?x3505 ?x3012))))
 (let ((?x2512 (ite (and (distinct ((_ extract 18 17) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 18 18) C) (_ bv0 1)) true) (_ bv18 11) (_ bv17 11)) (ite (and (distinct ((_ extract 16 16) C) (_ bv0 1)) true) (_ bv16 11) (_ bv15 11)))))
 (let ((?x3414 (ite (and (distinct ((_ extract 22 21) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 22 22) C) (_ bv0 1)) true) (_ bv22 11) (_ bv21 11)) (ite (and (distinct ((_ extract 20 20) C) (_ bv0 1)) true) (_ bv20 11) (_ bv19 11)))))
 (let ((?x8379 (ite (and (distinct ((_ extract 26 25) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 26 26) C) (_ bv0 1)) true) (_ bv26 11) (_ bv25 11)) (ite (and (distinct ((_ extract 24 24) C) (_ bv0 1)) true) (_ bv24 11) (_ bv23 11)))))
 (let ((?x7775 (ite (and (distinct ((_ extract 29 29) C) (_ bv0 1)) true) (_ bv29 11) (ite (and (distinct ((_ extract 28 28) C) (_ bv0 1)) true) (_ bv28 11) (_ bv27 11)))))
 (let ((?x1733 (ite (and (distinct ((_ extract 29 23) C) (_ bv0 7)) true) (ite (and (distinct ((_ extract 29 27) C) (_ bv0 3)) true) ?x7775 ?x8379) (ite (and (distinct ((_ extract 22 19) C) (_ bv0 4)) true) ?x3414 ?x2512))))
 (let ((?x6756 (ite (and (distinct ((_ extract 33 32) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 33 33) C) (_ bv0 1)) true) (_ bv33 11) (_ bv32 11)) (ite (and (distinct ((_ extract 31 31) C) (_ bv0 1)) true) (_ bv31 11) (_ bv30 11)))))
 (let ((?x5207 (ite (and (distinct ((_ extract 37 36) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 37 37) C) (_ bv0 1)) true) (_ bv37 11) (_ bv36 11)) (ite (and (distinct ((_ extract 35 35) C) (_ bv0 1)) true) (_ bv35 11) (_ bv34 11)))))
 (let ((?x4437 (ite (and (distinct ((_ extract 41 40) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 41 41) C) (_ bv0 1)) true) (_ bv41 11) (_ bv40 11)) (ite (and (distinct ((_ extract 39 39) C) (_ bv0 1)) true) (_ bv39 11) (_ bv38 11)))))
 (let ((?x3584 (ite (and (distinct ((_ extract 44 44) C) (_ bv0 1)) true) (_ bv44 11) (ite (and (distinct ((_ extract 43 43) C) (_ bv0 1)) true) (_ bv43 11) (_ bv42 11)))))
 (let ((?x4325 (ite (and (distinct ((_ extract 44 38) C) (_ bv0 7)) true) (ite (and (distinct ((_ extract 44 42) C) (_ bv0 3)) true) ?x3584 ?x4437) (ite (and (distinct ((_ extract 37 34) C) (_ bv0 4)) true) ?x5207 ?x6756))))
 (let ((?x2760 (ite (and (distinct ((_ extract 48 47) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 48 48) C) (_ bv0 1)) true) (_ bv48 11) (_ bv47 11)) (ite (and (distinct ((_ extract 46 46) C) (_ bv0 1)) true) (_ bv46 11) (_ bv45 11)))))
 (let ((?x5369 (ite (and (distinct ((_ extract 52 51) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 52 52) C) (_ bv0 1)) true) (_ bv52 11) (_ bv51 11)) (ite (and (distinct ((_ extract 50 50) C) (_ bv0 1)) true) (_ bv50 11) (_ bv49 11)))))
 (let ((?x1249 (ite (and (distinct ((_ extract 56 55) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 56 56) C) (_ bv0 1)) true) (_ bv56 11) (_ bv55 11)) (ite (and (distinct ((_ extract 54 54) C) (_ bv0 1)) true) (_ bv54 11) (_ bv53 11)))))
 (let ((?x7541 (ite (and (distinct ((_ extract 59 59) C) (_ bv0 1)) true) (_ bv59 11) (ite (and (distinct ((_ extract 58 58) C) (_ bv0 1)) true) (_ bv58 11) (_ bv57 11)))))
 (let ((?x3318 (ite (and (distinct ((_ extract 59 53) C) (_ bv0 7)) true) (ite (and (distinct ((_ extract 59 57) C) (_ bv0 3)) true) ?x7541 ?x1249) (ite (and (distinct ((_ extract 52 49) C) (_ bv0 4)) true) ?x5369 ?x2760))))
 (let ((?x1567 (ite (and (distinct ((_ extract 59 30) C) (_ bv0 30)) true) (ite (and (distinct ((_ extract 59 45) C) (_ bv0 15)) true) ?x3318 ?x4325) (ite (and (distinct ((_ extract 29 15) C) (_ bv0 15)) true) ?x1733 ?x7808))))
 (let ((?x3543 (bvsub ?x1567 ?x5737)))
 (let ((?x5532 (ite (bvsgt (_ bv0 11) ?x3543) (_ bv0 11) ?x3543)))
 (let ((?x4201 (bvsub ?x5737 ?x1567)))
 (let ((?x4345 (ite (bvsgt (_ bv0 11) ?x4201) (_ bv0 11) ?x4201)))
 (let ((?x6685 (ite (= (ite (and (distinct (bvand %Op C) (_ bv0 60)) true) (_ bv1 1) (_ bv0 1)) (_ bv1 1)) C2 C3)))
 (let (($x8248 (and (distinct ?x6685 (bvadd (bvlshr (bvshl ((_ extract 10 0) (bvand %Op C)) ?x4345) ?x5532) C3)) true)))
 (let ((?x1907 (ite (and (distinct ((_ extract 3 2) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 3 3) C) (_ bv0 1)) true) (_ bv3 32) (_ bv2 32)) (ite (and (distinct ((_ extract 1 1) C) (_ bv0 1)) true) (_ bv1 32) (_ bv0 32)))))
 (let ((?x3387 (ite (and (distinct ((_ extract 7 6) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 7 7) C) (_ bv0 1)) true) (_ bv7 32) (_ bv6 32)) (ite (and (distinct ((_ extract 5 5) C) (_ bv0 1)) true) (_ bv5 32) (_ bv4 32)))))
 (let ((?x5202 (ite (and (distinct ((_ extract 11 10) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 11 11) C) (_ bv0 1)) true) (_ bv11 32) (_ bv10 32)) (ite (and (distinct ((_ extract 9 9) C) (_ bv0 1)) true) (_ bv9 32) (_ bv8 32)))))
 (let ((?x7996 (ite (and (distinct ((_ extract 14 14) C) (_ bv0 1)) true) (_ bv14 32) (ite (and (distinct ((_ extract 13 13) C) (_ bv0 1)) true) (_ bv13 32) (_ bv12 32)))))
 (let ((?x6379 (ite (and (distinct ((_ extract 14 8) C) (_ bv0 7)) true) (ite (and (distinct ((_ extract 14 12) C) (_ bv0 3)) true) ?x7996 ?x5202) (ite (and (distinct ((_ extract 7 4) C) (_ bv0 4)) true) ?x3387 ?x1907))))
 (let ((?x8021 (ite (and (distinct ((_ extract 18 17) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 18 18) C) (_ bv0 1)) true) (_ bv18 32) (_ bv17 32)) (ite (and (distinct ((_ extract 16 16) C) (_ bv0 1)) true) (_ bv16 32) (_ bv15 32)))))
 (let ((?x7180 (ite (and (distinct ((_ extract 22 21) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 22 22) C) (_ bv0 1)) true) (_ bv22 32) (_ bv21 32)) (ite (and (distinct ((_ extract 20 20) C) (_ bv0 1)) true) (_ bv20 32) (_ bv19 32)))))
 (let ((?x6004 (ite (and (distinct ((_ extract 26 25) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 26 26) C) (_ bv0 1)) true) (_ bv26 32) (_ bv25 32)) (ite (and (distinct ((_ extract 24 24) C) (_ bv0 1)) true) (_ bv24 32) (_ bv23 32)))))
 (let ((?x4548 (ite (and (distinct ((_ extract 29 29) C) (_ bv0 1)) true) (_ bv29 32) (ite (and (distinct ((_ extract 28 28) C) (_ bv0 1)) true) (_ bv28 32) (_ bv27 32)))))
 (let ((?x7818 (ite (and (distinct ((_ extract 29 23) C) (_ bv0 7)) true) (ite (and (distinct ((_ extract 29 27) C) (_ bv0 3)) true) ?x4548 ?x6004) (ite (and (distinct ((_ extract 22 19) C) (_ bv0 4)) true) ?x7180 ?x8021))))
 (let ((?x7922 (ite (and (distinct ((_ extract 33 32) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 33 33) C) (_ bv0 1)) true) (_ bv33 32) (_ bv32 32)) (ite (and (distinct ((_ extract 31 31) C) (_ bv0 1)) true) (_ bv31 32) (_ bv30 32)))))
 (let ((?x1669 (ite (and (distinct ((_ extract 37 36) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 37 37) C) (_ bv0 1)) true) (_ bv37 32) (_ bv36 32)) (ite (and (distinct ((_ extract 35 35) C) (_ bv0 1)) true) (_ bv35 32) (_ bv34 32)))))
 (let ((?x2975 (ite (and (distinct ((_ extract 41 40) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 41 41) C) (_ bv0 1)) true) (_ bv41 32) (_ bv40 32)) (ite (and (distinct ((_ extract 39 39) C) (_ bv0 1)) true) (_ bv39 32) (_ bv38 32)))))
 (let ((?x1812 (ite (and (distinct ((_ extract 44 44) C) (_ bv0 1)) true) (_ bv44 32) (ite (and (distinct ((_ extract 43 43) C) (_ bv0 1)) true) (_ bv43 32) (_ bv42 32)))))
 (let ((?x4183 (ite (and (distinct ((_ extract 44 38) C) (_ bv0 7)) true) (ite (and (distinct ((_ extract 44 42) C) (_ bv0 3)) true) ?x1812 ?x2975) (ite (and (distinct ((_ extract 37 34) C) (_ bv0 4)) true) ?x1669 ?x7922))))
 (let ((?x8385 (ite (and (distinct ((_ extract 48 47) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 48 48) C) (_ bv0 1)) true) (_ bv48 32) (_ bv47 32)) (ite (and (distinct ((_ extract 46 46) C) (_ bv0 1)) true) (_ bv46 32) (_ bv45 32)))))
 (let ((?x1846 (ite (and (distinct ((_ extract 52 51) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 52 52) C) (_ bv0 1)) true) (_ bv52 32) (_ bv51 32)) (ite (and (distinct ((_ extract 50 50) C) (_ bv0 1)) true) (_ bv50 32) (_ bv49 32)))))
 (let ((?x3627 (ite (and (distinct ((_ extract 56 55) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 56 56) C) (_ bv0 1)) true) (_ bv56 32) (_ bv55 32)) (ite (and (distinct ((_ extract 54 54) C) (_ bv0 1)) true) (_ bv54 32) (_ bv53 32)))))
 (let ((?x3199 (ite (and (distinct ((_ extract 59 59) C) (_ bv0 1)) true) (_ bv59 32) (ite (and (distinct ((_ extract 58 58) C) (_ bv0 1)) true) (_ bv58 32) (_ bv57 32)))))
 (let ((?x3958 (ite (and (distinct ((_ extract 59 53) C) (_ bv0 7)) true) (ite (and (distinct ((_ extract 59 57) C) (_ bv0 3)) true) ?x3199 ?x3627) (ite (and (distinct ((_ extract 52 49) C) (_ bv0 4)) true) ?x1846 ?x8385))))
 (let ((?x1308 (ite (and (distinct ((_ extract 59 30) C) (_ bv0 30)) true) (ite (and (distinct ((_ extract 59 45) C) (_ bv0 15)) true) ?x3958 ?x4183) (ite (and (distinct ((_ extract 29 15) C) (_ bv0 15)) true) ?x7818 ?x6379))))
 (let (($x5691 (and (and (distinct (bvsub C2 C3) (_ bv0 11)) true) (= (bvand (bvsub C2 C3) (bvsub (bvsub C2 C3) (_ bv1 11))) (_ bv0 11)))))
 (and (and (and (distinct C (_ bv0 60)) true) (= (bvand C (bvsub C (_ bv1 60))) (_ bv0 60))) $x5691 (bvslt ?x1308 (_ bv11 32)) $x8248))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
