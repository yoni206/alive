(set-info :status unknown)
(declare-fun mem0 () (_ BitVec 8))
(declare-fun %x () (_ BitVec 49))
(declare-fun %p1 () (_ BitVec 64))
(declare-fun idx () (_ BitVec 64))
(declare-fun |ana_equivalentAddressValues(%p1, %p2)| () (_ BitVec 1))
(declare-fun %p2 () (_ BitVec 64))
(assert
 (let ((?x19806 (concat ((_ extract 7 1) mem0) ((_ extract 0 0) %x))))
 (let ((?x21475 (ite (and (and (distinct %p1 (_ bv0 64)) true) (or true true) (= idx %p1)) ?x19806 mem0)))
 (let ((?x15971 ((_ extract 8 1) %x)))
 (let (($x20396 (or true true)))
 (let (($x18741 (and (distinct %p1 (_ bv0 64)) true)))
 (let ((?x6193 (ite (and $x18741 $x20396 (= idx (bvadd (bvadd %p1 (_ bv1 64)) (_ bv0 64)))) ?x15971 ?x21475)))
 (let ((?x1914 ((_ extract 16 9) %x)))
 (let ((?x23214 (ite (and $x18741 $x20396 (= idx (bvadd (bvadd %p1 (_ bv1 64)) (_ bv1 64)))) ?x1914 ?x6193)))
 (let ((?x2976 ((_ extract 24 17) %x)))
 (let ((?x10613 (ite (and $x18741 $x20396 (= idx (bvadd (bvadd %p1 (_ bv1 64)) (_ bv2 64)))) ?x2976 ?x23214)))
 (let ((?x7035 ((_ extract 32 25) %x)))
 (let ((?x10284 (ite (and $x18741 $x20396 (= idx (bvadd (bvadd %p1 (_ bv1 64)) (_ bv3 64)))) ?x7035 ?x10613)))
 (let ((?x8352 ((_ extract 40 33) %x)))
 (let ((?x19414 (ite (and $x18741 $x20396 (= idx (bvadd (bvadd %p1 (_ bv1 64)) (_ bv4 64)))) ?x8352 ?x10284)))
 (let ((?x17826 ((_ extract 48 41) %x)))
 (let ((?x3560 (ite (and $x18741 $x20396 (= idx (bvadd (bvadd %p1 (_ bv1 64)) (_ bv5 64)))) ?x17826 ?x19414)))
 (let (($x12461 (= |ana_equivalentAddressValues(%p1, %p2)| (_ bv1 1))))
 (and (=> $x12461 (= %p1 %p2)) $x12461 (and (distinct ?x3560 ?x3560) true))))))))))))))))))))
(check-sat)
