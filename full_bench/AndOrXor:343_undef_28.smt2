(set-info :source |
 Generated by Alive 0.1
 More info in N. P. Lopes, D. Menendez, S. Nagarakatte, J. Regehr.
 Provably Correct Peephole Optimizations with Alive. In PLDI'15.
|)

(set-info :status unknown)
(declare-fun |ana_MaskedValueIsZero(%B, ((1 << (width(C2) - countLeadingZeros(((C2 - 1) ^ C2)))) - 1))| () (_ BitVec 1))
(declare-fun C2 () (_ BitVec 30))
(declare-fun C1 () (_ BitVec 30))
(declare-fun %B () (_ BitVec 30))
(assert
 (let (($x131713 (= |ana_MaskedValueIsZero(%B, ((1 << (width(C2) - countLeadingZeros(((C2 - 1) ^ C2)))) - 1))| (_ bv1 1))))
 (let ((?x19262 (bvsub C2 (_ bv1 30))))
 (let ((?x148789 (bvor ?x19262 C2)))
 (let (($x148744 (and (and (distinct ?x148789 (_ bv0 30)) true) (= (bvand (bvadd ?x148789 (_ bv1 30)) ?x148789) (_ bv0 30)) $x131713)))
 (let (($x148740 (or (= (bvand (bvadd C2 (_ bv1 30)) (bvsub (bvadd C2 (_ bv1 30)) (_ bv1 30))) (_ bv0 30)) $x148744)))
 (let ((?x130513 (bvand C1 C2)))
 (let (($x148796 (= ?x130513 C2)))
 (let ((?x148296 (ite (= ((_ extract 1 1) (bvxor ?x19262 C2)) (_ bv1 1)) (_ bv28 30) (ite (= ((_ extract 0 0) (bvxor ?x19262 C2)) (_ bv1 1)) (_ bv29 30) (_ bv30 30)))))
 (let ((?x148476 (ite (= ((_ extract 3 3) (bvxor ?x19262 C2)) (_ bv1 1)) (_ bv26 30) (ite (= ((_ extract 2 2) (bvxor ?x19262 C2)) (_ bv1 1)) (_ bv27 30) ?x148296))))
 (let ((?x148556 (ite (= ((_ extract 5 5) (bvxor ?x19262 C2)) (_ bv1 1)) (_ bv24 30) (ite (= ((_ extract 4 4) (bvxor ?x19262 C2)) (_ bv1 1)) (_ bv25 30) ?x148476))))
 (let ((?x148555 (ite (= ((_ extract 7 7) (bvxor ?x19262 C2)) (_ bv1 1)) (_ bv22 30) (ite (= ((_ extract 6 6) (bvxor ?x19262 C2)) (_ bv1 1)) (_ bv23 30) ?x148556))))
 (let ((?x148495 (ite (= ((_ extract 9 9) (bvxor ?x19262 C2)) (_ bv1 1)) (_ bv20 30) (ite (= ((_ extract 8 8) (bvxor ?x19262 C2)) (_ bv1 1)) (_ bv21 30) ?x148555))))
 (let ((?x148484 (ite (= ((_ extract 11 11) (bvxor ?x19262 C2)) (_ bv1 1)) (_ bv18 30) (ite (= ((_ extract 10 10) (bvxor ?x19262 C2)) (_ bv1 1)) (_ bv19 30) ?x148495))))
 (let ((?x148538 (ite (= ((_ extract 13 13) (bvxor ?x19262 C2)) (_ bv1 1)) (_ bv16 30) (ite (= ((_ extract 12 12) (bvxor ?x19262 C2)) (_ bv1 1)) (_ bv17 30) ?x148484))))
 (let ((?x148531 (ite (= ((_ extract 15 15) (bvxor ?x19262 C2)) (_ bv1 1)) (_ bv14 30) (ite (= ((_ extract 14 14) (bvxor ?x19262 C2)) (_ bv1 1)) (_ bv15 30) ?x148538))))
 (let ((?x148517 (ite (= ((_ extract 17 17) (bvxor ?x19262 C2)) (_ bv1 1)) (_ bv12 30) (ite (= ((_ extract 16 16) (bvxor ?x19262 C2)) (_ bv1 1)) (_ bv13 30) ?x148531))))
 (let ((?x146218 (ite (= ((_ extract 19 19) (bvxor ?x19262 C2)) (_ bv1 1)) (_ bv10 30) (ite (= ((_ extract 18 18) (bvxor ?x19262 C2)) (_ bv1 1)) (_ bv11 30) ?x148517))))
 (let ((?x147947 (ite (= ((_ extract 21 21) (bvxor ?x19262 C2)) (_ bv1 1)) (_ bv8 30) (ite (= ((_ extract 20 20) (bvxor ?x19262 C2)) (_ bv1 1)) (_ bv9 30) ?x146218))))
 (let ((?x148550 (ite (= ((_ extract 23 23) (bvxor ?x19262 C2)) (_ bv1 1)) (_ bv6 30) (ite (= ((_ extract 22 22) (bvxor ?x19262 C2)) (_ bv1 1)) (_ bv7 30) ?x147947))))
 (let ((?x148542 (ite (= ((_ extract 25 25) (bvxor ?x19262 C2)) (_ bv1 1)) (_ bv4 30) (ite (= ((_ extract 24 24) (bvxor ?x19262 C2)) (_ bv1 1)) (_ bv5 30) ?x148550))))
 (let ((?x148583 (ite (= ((_ extract 27 27) (bvxor ?x19262 C2)) (_ bv1 1)) (_ bv2 30) (ite (= ((_ extract 26 26) (bvxor ?x19262 C2)) (_ bv1 1)) (_ bv3 30) ?x148542))))
 (let ((?x148575 (ite (= ((_ extract 29 29) (bvxor ?x19262 C2)) (_ bv1 1)) (_ bv0 30) (ite (= ((_ extract 28 28) (bvxor ?x19262 C2)) (_ bv1 1)) (_ bv1 30) ?x148583))))
 (let (($x148748 (=> $x131713 (= (bvand %B (bvsub (bvshl (_ bv1 30) (bvsub (_ bv30 30) ?x148575)) (_ bv1 30))) (_ bv0 30)))))
 (and $x148748 $x148796 $x148740 false)))))))))))))))))))))))))
(check-sat)
