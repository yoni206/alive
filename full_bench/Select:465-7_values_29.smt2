(set-info :status unknown)
(declare-fun %Y () (_ BitVec 11))
(declare-fun C2 () (_ BitVec 11))
(declare-fun C1 () (_ BitVec 34))
(declare-fun %X () (_ BitVec 34))
(assert
 (let ((?x19160 (ite (and (distinct ((_ extract 2 2) C2) (_ bv0 1)) true) (_ bv2 34) (ite (and (distinct ((_ extract 1 1) C2) (_ bv0 1)) true) (_ bv1 34) (_ bv0 34)))))
 (let ((?x1063 (ite (and (distinct ((_ extract 5 5) C2) (_ bv0 1)) true) (_ bv5 34) (ite (and (distinct ((_ extract 4 4) C2) (_ bv0 1)) true) (_ bv4 34) (_ bv3 34)))))
 (let ((?x11484 (ite (and (distinct ((_ extract 8 8) C2) (_ bv0 1)) true) (_ bv8 34) (ite (and (distinct ((_ extract 7 7) C2) (_ bv0 1)) true) (_ bv7 34) (_ bv6 34)))))
 (let ((?x16266 (ite (and (distinct ((_ extract 10 9) C2) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) C2) (_ bv0 1)) true) (_ bv10 34) (_ bv9 34)) ?x11484)))
 (let ((?x19081 (ite (and (distinct ((_ extract 10 6) C2) (_ bv0 5)) true) ?x16266 (ite (and (distinct ((_ extract 5 3) C2) (_ bv0 3)) true) ?x1063 ?x19160))))
 (let ((?x5441 (ite (and (distinct ((_ extract 2 2) C1) (_ bv0 1)) true) (_ bv2 34) (ite (and (distinct ((_ extract 1 1) C1) (_ bv0 1)) true) (_ bv1 34) (_ bv0 34)))))
 (let ((?x911 (ite (and (distinct ((_ extract 4 3) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 4 4) C1) (_ bv0 1)) true) (_ bv4 34) (_ bv3 34)) ?x5441)))
 (let ((?x8193 (ite (and (distinct ((_ extract 8 7) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 8 8) C1) (_ bv0 1)) true) (_ bv8 34) (_ bv7 34)) (ite (and (distinct ((_ extract 6 6) C1) (_ bv0 1)) true) (_ bv6 34) (_ bv5 34)))))
 (let ((?x18331 (ite (and (distinct ((_ extract 12 11) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 12 12) C1) (_ bv0 1)) true) (_ bv12 34) (_ bv11 34)) (ite (and (distinct ((_ extract 10 10) C1) (_ bv0 1)) true) (_ bv10 34) (_ bv9 34)))))
 (let ((?x15653 (ite (and (distinct ((_ extract 16 15) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 16 16) C1) (_ bv0 1)) true) (_ bv16 34) (_ bv15 34)) (ite (and (distinct ((_ extract 14 14) C1) (_ bv0 1)) true) (_ bv14 34) (_ bv13 34)))))
 (let ((?x14725 (ite (and (distinct ((_ extract 16 9) C1) (_ bv0 8)) true) (ite (and (distinct ((_ extract 16 13) C1) (_ bv0 4)) true) ?x15653 ?x18331) (ite (and (distinct ((_ extract 8 5) C1) (_ bv0 4)) true) ?x8193 ?x911))))
 (let ((?x18152 (ite (and (distinct ((_ extract 19 19) C1) (_ bv0 1)) true) (_ bv19 34) (ite (and (distinct ((_ extract 18 18) C1) (_ bv0 1)) true) (_ bv18 34) (_ bv17 34)))))
 (let ((?x15299 (ite (and (distinct ((_ extract 21 20) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 21 21) C1) (_ bv0 1)) true) (_ bv21 34) (_ bv20 34)) ?x18152)))
 (let ((?x10232 (ite (and (distinct ((_ extract 25 24) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 25 25) C1) (_ bv0 1)) true) (_ bv25 34) (_ bv24 34)) (ite (and (distinct ((_ extract 23 23) C1) (_ bv0 1)) true) (_ bv23 34) (_ bv22 34)))))
 (let ((?x13008 (ite (and (distinct ((_ extract 29 28) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 29 29) C1) (_ bv0 1)) true) (_ bv29 34) (_ bv28 34)) (ite (and (distinct ((_ extract 27 27) C1) (_ bv0 1)) true) (_ bv27 34) (_ bv26 34)))))
 (let ((?x5323 (ite (and (distinct ((_ extract 33 32) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 33 33) C1) (_ bv0 1)) true) (_ bv33 34) (_ bv32 34)) (ite (and (distinct ((_ extract 31 31) C1) (_ bv0 1)) true) (_ bv31 34) (_ bv30 34)))))
 (let ((?x4211 (ite (and (distinct ((_ extract 33 26) C1) (_ bv0 8)) true) (ite (and (distinct ((_ extract 33 30) C1) (_ bv0 4)) true) ?x5323 ?x13008) (ite (and (distinct ((_ extract 25 22) C1) (_ bv0 4)) true) ?x10232 ?x15299))))
 (let ((?x17943 (bvsub (ite (and (distinct ((_ extract 33 17) C1) (_ bv0 17)) true) ?x4211 ?x14725) ?x19081)))
 (let ((?x13993 (bvand %X C1)))
 (let (($x20987 (and (distinct (ite (= (ite (= ?x13993 (_ bv0 34)) (_ bv1 1) (_ bv0 1)) (_ bv1 1)) (bvor %Y C2) %Y) (bvor (bvxor ((_ extract 10 0) (bvlshr ?x13993 ?x17943)) C2) %Y)) true)))
 (let ((?x19466 (ite (and (distinct ((_ extract 2 2) C1) (_ bv0 1)) true) (_ bv2 32) (ite (and (distinct ((_ extract 1 1) C1) (_ bv0 1)) true) (_ bv1 32) (_ bv0 32)))))
 (let ((?x16556 (ite (and (distinct ((_ extract 4 3) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 4 4) C1) (_ bv0 1)) true) (_ bv4 32) (_ bv3 32)) ?x19466)))
 (let ((?x18390 (ite (and (distinct ((_ extract 8 7) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 8 8) C1) (_ bv0 1)) true) (_ bv8 32) (_ bv7 32)) (ite (and (distinct ((_ extract 6 6) C1) (_ bv0 1)) true) (_ bv6 32) (_ bv5 32)))))
 (let ((?x10681 (ite (and (distinct ((_ extract 12 11) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 12 12) C1) (_ bv0 1)) true) (_ bv12 32) (_ bv11 32)) (ite (and (distinct ((_ extract 10 10) C1) (_ bv0 1)) true) (_ bv10 32) (_ bv9 32)))))
 (let ((?x15914 (ite (and (distinct ((_ extract 16 15) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 16 16) C1) (_ bv0 1)) true) (_ bv16 32) (_ bv15 32)) (ite (and (distinct ((_ extract 14 14) C1) (_ bv0 1)) true) (_ bv14 32) (_ bv13 32)))))
 (let ((?x7736 (ite (and (distinct ((_ extract 16 9) C1) (_ bv0 8)) true) (ite (and (distinct ((_ extract 16 13) C1) (_ bv0 4)) true) ?x15914 ?x10681) (ite (and (distinct ((_ extract 8 5) C1) (_ bv0 4)) true) ?x18390 ?x16556))))
 (let ((?x9034 (ite (and (distinct ((_ extract 19 19) C1) (_ bv0 1)) true) (_ bv19 32) (ite (and (distinct ((_ extract 18 18) C1) (_ bv0 1)) true) (_ bv18 32) (_ bv17 32)))))
 (let ((?x11558 (ite (and (distinct ((_ extract 21 20) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 21 21) C1) (_ bv0 1)) true) (_ bv21 32) (_ bv20 32)) ?x9034)))
 (let ((?x161 (ite (and (distinct ((_ extract 25 24) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 25 25) C1) (_ bv0 1)) true) (_ bv25 32) (_ bv24 32)) (ite (and (distinct ((_ extract 23 23) C1) (_ bv0 1)) true) (_ bv23 32) (_ bv22 32)))))
 (let ((?x14387 (ite (and (distinct ((_ extract 29 28) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 29 29) C1) (_ bv0 1)) true) (_ bv29 32) (_ bv28 32)) (ite (and (distinct ((_ extract 27 27) C1) (_ bv0 1)) true) (_ bv27 32) (_ bv26 32)))))
 (let ((?x2221 (ite (and (distinct ((_ extract 33 32) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 33 33) C1) (_ bv0 1)) true) (_ bv33 32) (_ bv32 32)) (ite (and (distinct ((_ extract 31 31) C1) (_ bv0 1)) true) (_ bv31 32) (_ bv30 32)))))
 (let ((?x11069 (ite (and (distinct ((_ extract 33 26) C1) (_ bv0 8)) true) (ite (and (distinct ((_ extract 33 30) C1) (_ bv0 4)) true) ?x2221 ?x14387) (ite (and (distinct ((_ extract 25 22) C1) (_ bv0 4)) true) ?x161 ?x11558))))
 (let ((?x18118 (ite (and (distinct ((_ extract 2 2) C2) (_ bv0 1)) true) (_ bv2 32) (ite (and (distinct ((_ extract 1 1) C2) (_ bv0 1)) true) (_ bv1 32) (_ bv0 32)))))
 (let ((?x16872 (ite (and (distinct ((_ extract 5 5) C2) (_ bv0 1)) true) (_ bv5 32) (ite (and (distinct ((_ extract 4 4) C2) (_ bv0 1)) true) (_ bv4 32) (_ bv3 32)))))
 (let ((?x15099 (ite (and (distinct ((_ extract 8 8) C2) (_ bv0 1)) true) (_ bv8 32) (ite (and (distinct ((_ extract 7 7) C2) (_ bv0 1)) true) (_ bv7 32) (_ bv6 32)))))
 (let ((?x23613 (ite (and (distinct ((_ extract 10 9) C2) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) C2) (_ bv0 1)) true) (_ bv10 32) (_ bv9 32)) ?x15099)))
 (let ((?x10022 (ite (and (distinct ((_ extract 10 6) C2) (_ bv0 5)) true) ?x23613 (ite (and (distinct ((_ extract 5 3) C2) (_ bv0 3)) true) ?x16872 ?x18118))))
 (and (and (and (distinct C1 (_ bv0 34)) true) (= (bvand C1 (bvsub C1 (_ bv1 34))) (_ bv0 34))) (and (and (distinct C2 (_ bv0 11)) true) (= (bvand C2 (bvsub C2 (_ bv1 11))) (_ bv0 11))) (bvslt ?x10022 (ite (and (distinct ((_ extract 33 17) C1) (_ bv0 17)) true) ?x11069 ?x7736)) $x20987)))))))))))))))))))))))))))))))))))))))
(check-sat)
