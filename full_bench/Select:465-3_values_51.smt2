(set-info :status unknown)
(declare-fun %Y () (_ BitVec 11))
(declare-fun C2 () (_ BitVec 11))
(declare-fun C1 () (_ BitVec 52))
(declare-fun %X () (_ BitVec 52))
(assert
 (let ((?x1490 (ite (and (distinct ((_ extract 2 2) C2) (_ bv0 1)) true) (_ bv2 52) (ite (and (distinct ((_ extract 1 1) C2) (_ bv0 1)) true) (_ bv1 52) (_ bv0 52)))))
 (let ((?x3050 (ite (and (distinct ((_ extract 5 5) C2) (_ bv0 1)) true) (_ bv5 52) (ite (and (distinct ((_ extract 4 4) C2) (_ bv0 1)) true) (_ bv4 52) (_ bv3 52)))))
 (let ((?x5434 (ite (and (distinct ((_ extract 8 8) C2) (_ bv0 1)) true) (_ bv8 52) (ite (and (distinct ((_ extract 7 7) C2) (_ bv0 1)) true) (_ bv7 52) (_ bv6 52)))))
 (let ((?x4508 (ite (and (distinct ((_ extract 10 9) C2) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) C2) (_ bv0 1)) true) (_ bv10 52) (_ bv9 52)) ?x5434)))
 (let ((?x1861 (ite (and (distinct ((_ extract 10 6) C2) (_ bv0 5)) true) ?x4508 (ite (and (distinct ((_ extract 5 3) C2) (_ bv0 3)) true) ?x3050 ?x1490))))
 (let ((?x5151 (ite (and (distinct ((_ extract 3 2) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 3 3) C1) (_ bv0 1)) true) (_ bv3 52) (_ bv2 52)) (ite (and (distinct ((_ extract 1 1) C1) (_ bv0 1)) true) (_ bv1 52) (_ bv0 52)))))
 (let ((?x4179 (ite (and (distinct ((_ extract 6 6) C1) (_ bv0 1)) true) (_ bv6 52) (ite (and (distinct ((_ extract 5 5) C1) (_ bv0 1)) true) (_ bv5 52) (_ bv4 52)))))
 (let ((?x5038 (ite (and (distinct ((_ extract 9 9) C1) (_ bv0 1)) true) (_ bv9 52) (ite (and (distinct ((_ extract 8 8) C1) (_ bv0 1)) true) (_ bv8 52) (_ bv7 52)))))
 (let ((?x5573 (ite (and (distinct ((_ extract 12 12) C1) (_ bv0 1)) true) (_ bv12 52) (ite (and (distinct ((_ extract 11 11) C1) (_ bv0 1)) true) (_ bv11 52) (_ bv10 52)))))
 (let ((?x3788 (ite (and (distinct ((_ extract 12 7) C1) (_ bv0 6)) true) (ite (and (distinct ((_ extract 12 10) C1) (_ bv0 3)) true) ?x5573 ?x5038) (ite (and (distinct ((_ extract 6 4) C1) (_ bv0 3)) true) ?x4179 ?x5151))))
 (let ((?x5361 (ite (and (distinct ((_ extract 16 15) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 16 16) C1) (_ bv0 1)) true) (_ bv16 52) (_ bv15 52)) (ite (and (distinct ((_ extract 14 14) C1) (_ bv0 1)) true) (_ bv14 52) (_ bv13 52)))))
 (let ((?x4355 (ite (and (distinct ((_ extract 19 19) C1) (_ bv0 1)) true) (_ bv19 52) (ite (and (distinct ((_ extract 18 18) C1) (_ bv0 1)) true) (_ bv18 52) (_ bv17 52)))))
 (let ((?x4449 (ite (and (distinct ((_ extract 22 22) C1) (_ bv0 1)) true) (_ bv22 52) (ite (and (distinct ((_ extract 21 21) C1) (_ bv0 1)) true) (_ bv21 52) (_ bv20 52)))))
 (let ((?x5590 (ite (and (distinct ((_ extract 25 25) C1) (_ bv0 1)) true) (_ bv25 52) (ite (and (distinct ((_ extract 24 24) C1) (_ bv0 1)) true) (_ bv24 52) (_ bv23 52)))))
 (let ((?x3241 (ite (and (distinct ((_ extract 25 20) C1) (_ bv0 6)) true) (ite (and (distinct ((_ extract 25 23) C1) (_ bv0 3)) true) ?x5590 ?x4449) (ite (and (distinct ((_ extract 19 17) C1) (_ bv0 3)) true) ?x4355 ?x5361))))
 (let ((?x2561 (ite (and (distinct ((_ extract 29 28) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 29 29) C1) (_ bv0 1)) true) (_ bv29 52) (_ bv28 52)) (ite (and (distinct ((_ extract 27 27) C1) (_ bv0 1)) true) (_ bv27 52) (_ bv26 52)))))
 (let ((?x4178 (ite (and (distinct ((_ extract 32 32) C1) (_ bv0 1)) true) (_ bv32 52) (ite (and (distinct ((_ extract 31 31) C1) (_ bv0 1)) true) (_ bv31 52) (_ bv30 52)))))
 (let ((?x5581 (ite (and (distinct ((_ extract 35 35) C1) (_ bv0 1)) true) (_ bv35 52) (ite (and (distinct ((_ extract 34 34) C1) (_ bv0 1)) true) (_ bv34 52) (_ bv33 52)))))
 (let ((?x5658 (ite (and (distinct ((_ extract 38 38) C1) (_ bv0 1)) true) (_ bv38 52) (ite (and (distinct ((_ extract 37 37) C1) (_ bv0 1)) true) (_ bv37 52) (_ bv36 52)))))
 (let ((?x5669 (ite (and (distinct ((_ extract 38 33) C1) (_ bv0 6)) true) (ite (and (distinct ((_ extract 38 36) C1) (_ bv0 3)) true) ?x5658 ?x5581) (ite (and (distinct ((_ extract 32 30) C1) (_ bv0 3)) true) ?x4178 ?x2561))))
 (let ((?x4344 (ite (and (distinct ((_ extract 42 41) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 42 42) C1) (_ bv0 1)) true) (_ bv42 52) (_ bv41 52)) (ite (and (distinct ((_ extract 40 40) C1) (_ bv0 1)) true) (_ bv40 52) (_ bv39 52)))))
 (let ((?x5619 (ite (and (distinct ((_ extract 45 45) C1) (_ bv0 1)) true) (_ bv45 52) (ite (and (distinct ((_ extract 44 44) C1) (_ bv0 1)) true) (_ bv44 52) (_ bv43 52)))))
 (let ((?x1575 (ite (and (distinct ((_ extract 48 48) C1) (_ bv0 1)) true) (_ bv48 52) (ite (and (distinct ((_ extract 47 47) C1) (_ bv0 1)) true) (_ bv47 52) (_ bv46 52)))))
 (let ((?x5734 (ite (and (distinct ((_ extract 51 51) C1) (_ bv0 1)) true) (_ bv51 52) (ite (and (distinct ((_ extract 50 50) C1) (_ bv0 1)) true) (_ bv50 52) (_ bv49 52)))))
 (let ((?x4951 (ite (and (distinct ((_ extract 51 46) C1) (_ bv0 6)) true) (ite (and (distinct ((_ extract 51 49) C1) (_ bv0 3)) true) ?x5734 ?x1575) (ite (and (distinct ((_ extract 45 43) C1) (_ bv0 3)) true) ?x5619 ?x4344))))
 (let ((?x2801 (ite (and (distinct ((_ extract 51 26) C1) (_ bv0 26)) true) (ite (and (distinct ((_ extract 51 39) C1) (_ bv0 13)) true) ?x4951 ?x5669) (ite (and (distinct ((_ extract 25 13) C1) (_ bv0 13)) true) ?x3241 ?x3788))))
 (let ((?x1996 (bvsub ?x2801 ?x1861)))
 (let ((?x5741 (bvand %X C1)))
 (let (($x4446 (and (distinct (ite (= (ite (= ?x5741 (_ bv0 52)) (_ bv1 1) (_ bv0 1)) (_ bv1 1)) %Y (bvor %Y C2)) (bvor ((_ extract 10 0) (bvlshr ?x5741 ?x1996)) %Y)) true)))
 (let ((?x2232 (ite (and (distinct ((_ extract 3 2) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 3 3) C1) (_ bv0 1)) true) (_ bv3 32) (_ bv2 32)) (ite (and (distinct ((_ extract 1 1) C1) (_ bv0 1)) true) (_ bv1 32) (_ bv0 32)))))
 (let ((?x3597 (ite (and (distinct ((_ extract 6 6) C1) (_ bv0 1)) true) (_ bv6 32) (ite (and (distinct ((_ extract 5 5) C1) (_ bv0 1)) true) (_ bv5 32) (_ bv4 32)))))
 (let ((?x5102 (ite (and (distinct ((_ extract 9 9) C1) (_ bv0 1)) true) (_ bv9 32) (ite (and (distinct ((_ extract 8 8) C1) (_ bv0 1)) true) (_ bv8 32) (_ bv7 32)))))
 (let ((?x5569 (ite (and (distinct ((_ extract 12 12) C1) (_ bv0 1)) true) (_ bv12 32) (ite (and (distinct ((_ extract 11 11) C1) (_ bv0 1)) true) (_ bv11 32) (_ bv10 32)))))
 (let ((?x1591 (ite (and (distinct ((_ extract 12 7) C1) (_ bv0 6)) true) (ite (and (distinct ((_ extract 12 10) C1) (_ bv0 3)) true) ?x5569 ?x5102) (ite (and (distinct ((_ extract 6 4) C1) (_ bv0 3)) true) ?x3597 ?x2232))))
 (let ((?x4159 (ite (and (distinct ((_ extract 16 15) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 16 16) C1) (_ bv0 1)) true) (_ bv16 32) (_ bv15 32)) (ite (and (distinct ((_ extract 14 14) C1) (_ bv0 1)) true) (_ bv14 32) (_ bv13 32)))))
 (let ((?x3739 (ite (and (distinct ((_ extract 19 19) C1) (_ bv0 1)) true) (_ bv19 32) (ite (and (distinct ((_ extract 18 18) C1) (_ bv0 1)) true) (_ bv18 32) (_ bv17 32)))))
 (let ((?x2098 (ite (and (distinct ((_ extract 22 22) C1) (_ bv0 1)) true) (_ bv22 32) (ite (and (distinct ((_ extract 21 21) C1) (_ bv0 1)) true) (_ bv21 32) (_ bv20 32)))))
 (let ((?x5072 (ite (and (distinct ((_ extract 25 25) C1) (_ bv0 1)) true) (_ bv25 32) (ite (and (distinct ((_ extract 24 24) C1) (_ bv0 1)) true) (_ bv24 32) (_ bv23 32)))))
 (let ((?x5010 (ite (and (distinct ((_ extract 25 20) C1) (_ bv0 6)) true) (ite (and (distinct ((_ extract 25 23) C1) (_ bv0 3)) true) ?x5072 ?x2098) (ite (and (distinct ((_ extract 19 17) C1) (_ bv0 3)) true) ?x3739 ?x4159))))
 (let ((?x4719 (ite (and (distinct ((_ extract 29 28) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 29 29) C1) (_ bv0 1)) true) (_ bv29 32) (_ bv28 32)) (ite (and (distinct ((_ extract 27 27) C1) (_ bv0 1)) true) (_ bv27 32) (_ bv26 32)))))
 (let ((?x4503 (ite (and (distinct ((_ extract 32 32) C1) (_ bv0 1)) true) (_ bv32 32) (ite (and (distinct ((_ extract 31 31) C1) (_ bv0 1)) true) (_ bv31 32) (_ bv30 32)))))
 (let ((?x2855 (ite (and (distinct ((_ extract 35 35) C1) (_ bv0 1)) true) (_ bv35 32) (ite (and (distinct ((_ extract 34 34) C1) (_ bv0 1)) true) (_ bv34 32) (_ bv33 32)))))
 (let ((?x5492 (ite (and (distinct ((_ extract 38 38) C1) (_ bv0 1)) true) (_ bv38 32) (ite (and (distinct ((_ extract 37 37) C1) (_ bv0 1)) true) (_ bv37 32) (_ bv36 32)))))
 (let ((?x4715 (ite (and (distinct ((_ extract 38 33) C1) (_ bv0 6)) true) (ite (and (distinct ((_ extract 38 36) C1) (_ bv0 3)) true) ?x5492 ?x2855) (ite (and (distinct ((_ extract 32 30) C1) (_ bv0 3)) true) ?x4503 ?x4719))))
 (let ((?x1908 (ite (and (distinct ((_ extract 42 41) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 42 42) C1) (_ bv0 1)) true) (_ bv42 32) (_ bv41 32)) (ite (and (distinct ((_ extract 40 40) C1) (_ bv0 1)) true) (_ bv40 32) (_ bv39 32)))))
 (let ((?x1643 (ite (and (distinct ((_ extract 45 45) C1) (_ bv0 1)) true) (_ bv45 32) (ite (and (distinct ((_ extract 44 44) C1) (_ bv0 1)) true) (_ bv44 32) (_ bv43 32)))))
 (let ((?x1302 (ite (and (distinct ((_ extract 48 48) C1) (_ bv0 1)) true) (_ bv48 32) (ite (and (distinct ((_ extract 47 47) C1) (_ bv0 1)) true) (_ bv47 32) (_ bv46 32)))))
 (let ((?x5262 (ite (and (distinct ((_ extract 51 51) C1) (_ bv0 1)) true) (_ bv51 32) (ite (and (distinct ((_ extract 50 50) C1) (_ bv0 1)) true) (_ bv50 32) (_ bv49 32)))))
 (let ((?x2104 (ite (and (distinct ((_ extract 51 46) C1) (_ bv0 6)) true) (ite (and (distinct ((_ extract 51 49) C1) (_ bv0 3)) true) ?x5262 ?x1302) (ite (and (distinct ((_ extract 45 43) C1) (_ bv0 3)) true) ?x1643 ?x1908))))
 (let ((?x5667 (ite (and (distinct ((_ extract 51 26) C1) (_ bv0 26)) true) (ite (and (distinct ((_ extract 51 39) C1) (_ bv0 13)) true) ?x2104 ?x4715) (ite (and (distinct ((_ extract 25 13) C1) (_ bv0 13)) true) ?x5010 ?x1591))))
 (let ((?x1268 (ite (and (distinct ((_ extract 2 2) C2) (_ bv0 1)) true) (_ bv2 32) (ite (and (distinct ((_ extract 1 1) C2) (_ bv0 1)) true) (_ bv1 32) (_ bv0 32)))))
 (let ((?x5804 (ite (and (distinct ((_ extract 5 5) C2) (_ bv0 1)) true) (_ bv5 32) (ite (and (distinct ((_ extract 4 4) C2) (_ bv0 1)) true) (_ bv4 32) (_ bv3 32)))))
 (let ((?x5812 (ite (and (distinct ((_ extract 8 8) C2) (_ bv0 1)) true) (_ bv8 32) (ite (and (distinct ((_ extract 7 7) C2) (_ bv0 1)) true) (_ bv7 32) (_ bv6 32)))))
 (let ((?x5813 (ite (and (distinct ((_ extract 10 9) C2) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) C2) (_ bv0 1)) true) (_ bv10 32) (_ bv9 32)) ?x5812)))
 (let ((?x5681 (ite (and (distinct ((_ extract 10 6) C2) (_ bv0 5)) true) ?x5813 (ite (and (distinct ((_ extract 5 3) C2) (_ bv0 3)) true) ?x5804 ?x1268))))
 (and (and (and (distinct C1 (_ bv0 52)) true) (= (bvand C1 (bvsub C1 (_ bv1 52))) (_ bv0 52))) (and (and (distinct C2 (_ bv0 11)) true) (= (bvand C2 (bvsub C2 (_ bv1 11))) (_ bv0 11))) (bvslt ?x5681 ?x5667) $x4446)))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
