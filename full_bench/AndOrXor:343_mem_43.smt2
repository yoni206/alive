(set-info :source |
 Generated by Alive 0.1
 More info in N. P. Lopes, D. Menendez, S. Nagarakatte, J. Regehr.
 Provably Correct Peephole Optimizations with Alive. In PLDI'15.
|)

(set-info :status unknown)
(declare-fun mem0 () (_ BitVec 8))
(declare-fun |ana_MaskedValueIsZero(%B, ((1 << (width(C2) - countLeadingZeros(((C2 - 1) ^ C2)))) - 1))| () (_ BitVec 1))
(declare-fun C2 () (_ BitVec 45))
(declare-fun C1 () (_ BitVec 45))
(declare-fun %B () (_ BitVec 45))
(assert
 (let (($x927 (and (distinct mem0 mem0) true)))
 (let (($x131713 (= |ana_MaskedValueIsZero(%B, ((1 << (width(C2) - countLeadingZeros(((C2 - 1) ^ C2)))) - 1))| (_ bv1 1))))
 (let ((?x24865 (bvsub C2 (_ bv1 45))))
 (let ((?x153121 (bvor ?x24865 C2)))
 (let (($x153102 (and (and (distinct ?x153121 (_ bv0 45)) true) (= (bvand (bvadd ?x153121 (_ bv1 45)) ?x153121) (_ bv0 45)) $x131713)))
 (let (($x153103 (or (= (bvand (bvadd C2 (_ bv1 45)) (bvsub (bvadd C2 (_ bv1 45)) (_ bv1 45))) (_ bv0 45)) $x153102)))
 (let ((?x131405 (bvand C1 C2)))
 (let (($x153129 (= ?x131405 C2)))
 (let ((?x153142 (ite (= ((_ extract 1 1) (bvxor ?x24865 C2)) (_ bv1 1)) (_ bv43 45) (ite (= ((_ extract 0 0) (bvxor ?x24865 C2)) (_ bv1 1)) (_ bv44 45) (_ bv45 45)))))
 (let ((?x153132 (ite (= ((_ extract 3 3) (bvxor ?x24865 C2)) (_ bv1 1)) (_ bv41 45) (ite (= ((_ extract 2 2) (bvxor ?x24865 C2)) (_ bv1 1)) (_ bv42 45) ?x153142))))
 (let ((?x153118 (ite (= ((_ extract 5 5) (bvxor ?x24865 C2)) (_ bv1 1)) (_ bv39 45) (ite (= ((_ extract 4 4) (bvxor ?x24865 C2)) (_ bv1 1)) (_ bv40 45) ?x153132))))
 (let ((?x153109 (ite (= ((_ extract 7 7) (bvxor ?x24865 C2)) (_ bv1 1)) (_ bv37 45) (ite (= ((_ extract 6 6) (bvxor ?x24865 C2)) (_ bv1 1)) (_ bv38 45) ?x153118))))
 (let ((?x153099 (ite (= ((_ extract 9 9) (bvxor ?x24865 C2)) (_ bv1 1)) (_ bv35 45) (ite (= ((_ extract 8 8) (bvxor ?x24865 C2)) (_ bv1 1)) (_ bv36 45) ?x153109))))
 (let ((?x153085 (ite (= ((_ extract 11 11) (bvxor ?x24865 C2)) (_ bv1 1)) (_ bv33 45) (ite (= ((_ extract 10 10) (bvxor ?x24865 C2)) (_ bv1 1)) (_ bv34 45) ?x153099))))
 (let ((?x153073 (ite (= ((_ extract 13 13) (bvxor ?x24865 C2)) (_ bv1 1)) (_ bv31 45) (ite (= ((_ extract 12 12) (bvxor ?x24865 C2)) (_ bv1 1)) (_ bv32 45) ?x153085))))
 (let ((?x153063 (ite (= ((_ extract 15 15) (bvxor ?x24865 C2)) (_ bv1 1)) (_ bv29 45) (ite (= ((_ extract 14 14) (bvxor ?x24865 C2)) (_ bv1 1)) (_ bv30 45) ?x153073))))
 (let ((?x153051 (ite (= ((_ extract 17 17) (bvxor ?x24865 C2)) (_ bv1 1)) (_ bv27 45) (ite (= ((_ extract 16 16) (bvxor ?x24865 C2)) (_ bv1 1)) (_ bv28 45) ?x153063))))
 (let ((?x153043 (ite (= ((_ extract 19 19) (bvxor ?x24865 C2)) (_ bv1 1)) (_ bv25 45) (ite (= ((_ extract 18 18) (bvxor ?x24865 C2)) (_ bv1 1)) (_ bv26 45) ?x153051))))
 (let ((?x153035 (ite (= ((_ extract 21 21) (bvxor ?x24865 C2)) (_ bv1 1)) (_ bv23 45) (ite (= ((_ extract 20 20) (bvxor ?x24865 C2)) (_ bv1 1)) (_ bv24 45) ?x153043))))
 (let ((?x153022 (ite (= ((_ extract 23 23) (bvxor ?x24865 C2)) (_ bv1 1)) (_ bv21 45) (ite (= ((_ extract 22 22) (bvxor ?x24865 C2)) (_ bv1 1)) (_ bv22 45) ?x153035))))
 (let ((?x153013 (ite (= ((_ extract 25 25) (bvxor ?x24865 C2)) (_ bv1 1)) (_ bv19 45) (ite (= ((_ extract 24 24) (bvxor ?x24865 C2)) (_ bv1 1)) (_ bv20 45) ?x153022))))
 (let ((?x153000 (ite (= ((_ extract 27 27) (bvxor ?x24865 C2)) (_ bv1 1)) (_ bv17 45) (ite (= ((_ extract 26 26) (bvxor ?x24865 C2)) (_ bv1 1)) (_ bv18 45) ?x153013))))
 (let ((?x152986 (ite (= ((_ extract 29 29) (bvxor ?x24865 C2)) (_ bv1 1)) (_ bv15 45) (ite (= ((_ extract 28 28) (bvxor ?x24865 C2)) (_ bv1 1)) (_ bv16 45) ?x153000))))
 (let ((?x152974 (ite (= ((_ extract 31 31) (bvxor ?x24865 C2)) (_ bv1 1)) (_ bv13 45) (ite (= ((_ extract 30 30) (bvxor ?x24865 C2)) (_ bv1 1)) (_ bv14 45) ?x152986))))
 (let ((?x152413 (ite (= ((_ extract 33 33) (bvxor ?x24865 C2)) (_ bv1 1)) (_ bv11 45) (ite (= ((_ extract 32 32) (bvxor ?x24865 C2)) (_ bv1 1)) (_ bv12 45) ?x152974))))
 (let ((?x152152 (ite (= ((_ extract 35 35) (bvxor ?x24865 C2)) (_ bv1 1)) (_ bv9 45) (ite (= ((_ extract 34 34) (bvxor ?x24865 C2)) (_ bv1 1)) (_ bv10 45) ?x152413))))
 (let ((?x152695 (ite (= ((_ extract 37 37) (bvxor ?x24865 C2)) (_ bv1 1)) (_ bv7 45) (ite (= ((_ extract 36 36) (bvxor ?x24865 C2)) (_ bv1 1)) (_ bv8 45) ?x152152))))
 (let ((?x152737 (ite (= ((_ extract 39 39) (bvxor ?x24865 C2)) (_ bv1 1)) (_ bv5 45) (ite (= ((_ extract 38 38) (bvxor ?x24865 C2)) (_ bv1 1)) (_ bv6 45) ?x152695))))
 (let ((?x152745 (ite (= ((_ extract 41 41) (bvxor ?x24865 C2)) (_ bv1 1)) (_ bv3 45) (ite (= ((_ extract 40 40) (bvxor ?x24865 C2)) (_ bv1 1)) (_ bv4 45) ?x152737))))
 (let ((?x153151 (ite (= ((_ extract 43 43) (bvxor ?x24865 C2)) (_ bv1 1)) (_ bv1 45) (ite (= ((_ extract 42 42) (bvxor ?x24865 C2)) (_ bv1 1)) (_ bv2 45) ?x152745))))
 (let ((?x153148 (bvshl (_ bv1 45) (bvsub (_ bv45 45) (ite (= ((_ extract 44 44) (bvxor ?x24865 C2)) (_ bv1 1)) (_ bv0 45) ?x153151)))))
 (let (($x153107 (=> $x131713 (= (bvand %B (bvsub ?x153148 (_ bv1 45))) (_ bv0 45)))))
 (and $x153107 $x153129 $x153103 $x927))))))))))))))))))))))))))))))))))
(check-sat)
