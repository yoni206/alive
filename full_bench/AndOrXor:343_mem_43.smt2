(set-info :status unknown)
(declare-fun mem0 () (_ BitVec 8))
(declare-fun |ana_MaskedValueIsZero(%B, ((1 << (width(C2) - countLeadingZeros(((C2 - 1) ^ C2)))) - 1))| () (_ BitVec 1))
(declare-fun C2 () (_ BitVec 49))
(declare-fun C1 () (_ BitVec 49))
(declare-fun %B () (_ BitVec 49))
(assert
 (let (($x2686 (= |ana_MaskedValueIsZero(%B, ((1 << (width(C2) - countLeadingZeros(((C2 - 1) ^ C2)))) - 1))| (_ bv1 1))))
 (let ((?x6995 (bvor (bvsub C2 (_ bv1 49)) C2)))
 (let (($x13561 (and (and (distinct ?x6995 (_ bv0 49)) true) (= (bvand (bvadd ?x6995 (_ bv1 49)) ?x6995) (_ bv0 49)) $x2686)))
 (let (($x8418 (or (= (bvand (bvadd C2 (_ bv1 49)) (bvsub (bvadd C2 (_ bv1 49)) (_ bv1 49))) (_ bv0 49)) $x13561)))
 (let ((?x12993 (ite (= ((_ extract 1 1) (bvxor (bvsub C2 (_ bv1 49)) C2)) (_ bv1 1)) (_ bv47 49) (ite (= ((_ extract 0 0) (bvxor (bvsub C2 (_ bv1 49)) C2)) (_ bv1 1)) (_ bv48 49) (_ bv49 49)))))
 (let ((?x9789 (ite (= ((_ extract 3 3) (bvxor (bvsub C2 (_ bv1 49)) C2)) (_ bv1 1)) (_ bv45 49) (ite (= ((_ extract 2 2) (bvxor (bvsub C2 (_ bv1 49)) C2)) (_ bv1 1)) (_ bv46 49) ?x12993))))
 (let ((?x15637 (ite (= ((_ extract 5 5) (bvxor (bvsub C2 (_ bv1 49)) C2)) (_ bv1 1)) (_ bv43 49) (ite (= ((_ extract 4 4) (bvxor (bvsub C2 (_ bv1 49)) C2)) (_ bv1 1)) (_ bv44 49) ?x9789))))
 (let ((?x17935 (ite (= ((_ extract 7 7) (bvxor (bvsub C2 (_ bv1 49)) C2)) (_ bv1 1)) (_ bv41 49) (ite (= ((_ extract 6 6) (bvxor (bvsub C2 (_ bv1 49)) C2)) (_ bv1 1)) (_ bv42 49) ?x15637))))
 (let ((?x6858 (ite (= ((_ extract 9 9) (bvxor (bvsub C2 (_ bv1 49)) C2)) (_ bv1 1)) (_ bv39 49) (ite (= ((_ extract 8 8) (bvxor (bvsub C2 (_ bv1 49)) C2)) (_ bv1 1)) (_ bv40 49) ?x17935))))
 (let ((?x16316 (ite (= ((_ extract 11 11) (bvxor (bvsub C2 (_ bv1 49)) C2)) (_ bv1 1)) (_ bv37 49) (ite (= ((_ extract 10 10) (bvxor (bvsub C2 (_ bv1 49)) C2)) (_ bv1 1)) (_ bv38 49) ?x6858))))
 (let ((?x812 (ite (= ((_ extract 13 13) (bvxor (bvsub C2 (_ bv1 49)) C2)) (_ bv1 1)) (_ bv35 49) (ite (= ((_ extract 12 12) (bvxor (bvsub C2 (_ bv1 49)) C2)) (_ bv1 1)) (_ bv36 49) ?x16316))))
 (let ((?x7601 (ite (= ((_ extract 15 15) (bvxor (bvsub C2 (_ bv1 49)) C2)) (_ bv1 1)) (_ bv33 49) (ite (= ((_ extract 14 14) (bvxor (bvsub C2 (_ bv1 49)) C2)) (_ bv1 1)) (_ bv34 49) ?x812))))
 (let ((?x16420 (ite (= ((_ extract 17 17) (bvxor (bvsub C2 (_ bv1 49)) C2)) (_ bv1 1)) (_ bv31 49) (ite (= ((_ extract 16 16) (bvxor (bvsub C2 (_ bv1 49)) C2)) (_ bv1 1)) (_ bv32 49) ?x7601))))
 (let ((?x9128 (ite (= ((_ extract 19 19) (bvxor (bvsub C2 (_ bv1 49)) C2)) (_ bv1 1)) (_ bv29 49) (ite (= ((_ extract 18 18) (bvxor (bvsub C2 (_ bv1 49)) C2)) (_ bv1 1)) (_ bv30 49) ?x16420))))
 (let ((?x22775 (ite (= ((_ extract 21 21) (bvxor (bvsub C2 (_ bv1 49)) C2)) (_ bv1 1)) (_ bv27 49) (ite (= ((_ extract 20 20) (bvxor (bvsub C2 (_ bv1 49)) C2)) (_ bv1 1)) (_ bv28 49) ?x9128))))
 (let ((?x15912 (ite (= ((_ extract 23 23) (bvxor (bvsub C2 (_ bv1 49)) C2)) (_ bv1 1)) (_ bv25 49) (ite (= ((_ extract 22 22) (bvxor (bvsub C2 (_ bv1 49)) C2)) (_ bv1 1)) (_ bv26 49) ?x22775))))
 (let ((?x4706 (ite (= ((_ extract 25 25) (bvxor (bvsub C2 (_ bv1 49)) C2)) (_ bv1 1)) (_ bv23 49) (ite (= ((_ extract 24 24) (bvxor (bvsub C2 (_ bv1 49)) C2)) (_ bv1 1)) (_ bv24 49) ?x15912))))
 (let ((?x16900 (ite (= ((_ extract 27 27) (bvxor (bvsub C2 (_ bv1 49)) C2)) (_ bv1 1)) (_ bv21 49) (ite (= ((_ extract 26 26) (bvxor (bvsub C2 (_ bv1 49)) C2)) (_ bv1 1)) (_ bv22 49) ?x4706))))
 (let ((?x10631 (ite (= ((_ extract 29 29) (bvxor (bvsub C2 (_ bv1 49)) C2)) (_ bv1 1)) (_ bv19 49) (ite (= ((_ extract 28 28) (bvxor (bvsub C2 (_ bv1 49)) C2)) (_ bv1 1)) (_ bv20 49) ?x16900))))
 (let ((?x603 (ite (= ((_ extract 31 31) (bvxor (bvsub C2 (_ bv1 49)) C2)) (_ bv1 1)) (_ bv17 49) (ite (= ((_ extract 30 30) (bvxor (bvsub C2 (_ bv1 49)) C2)) (_ bv1 1)) (_ bv18 49) ?x10631))))
 (let ((?x4396 (ite (= ((_ extract 33 33) (bvxor (bvsub C2 (_ bv1 49)) C2)) (_ bv1 1)) (_ bv15 49) (ite (= ((_ extract 32 32) (bvxor (bvsub C2 (_ bv1 49)) C2)) (_ bv1 1)) (_ bv16 49) ?x603))))
 (let ((?x2374 (ite (= ((_ extract 35 35) (bvxor (bvsub C2 (_ bv1 49)) C2)) (_ bv1 1)) (_ bv13 49) (ite (= ((_ extract 34 34) (bvxor (bvsub C2 (_ bv1 49)) C2)) (_ bv1 1)) (_ bv14 49) ?x4396))))
 (let ((?x2303 (ite (= ((_ extract 37 37) (bvxor (bvsub C2 (_ bv1 49)) C2)) (_ bv1 1)) (_ bv11 49) (ite (= ((_ extract 36 36) (bvxor (bvsub C2 (_ bv1 49)) C2)) (_ bv1 1)) (_ bv12 49) ?x2374))))
 (let ((?x11405 (ite (= ((_ extract 39 39) (bvxor (bvsub C2 (_ bv1 49)) C2)) (_ bv1 1)) (_ bv9 49) (ite (= ((_ extract 38 38) (bvxor (bvsub C2 (_ bv1 49)) C2)) (_ bv1 1)) (_ bv10 49) ?x2303))))
 (let ((?x22625 (ite (= ((_ extract 41 41) (bvxor (bvsub C2 (_ bv1 49)) C2)) (_ bv1 1)) (_ bv7 49) (ite (= ((_ extract 40 40) (bvxor (bvsub C2 (_ bv1 49)) C2)) (_ bv1 1)) (_ bv8 49) ?x11405))))
 (let ((?x7422 (ite (= ((_ extract 43 43) (bvxor (bvsub C2 (_ bv1 49)) C2)) (_ bv1 1)) (_ bv5 49) (ite (= ((_ extract 42 42) (bvxor (bvsub C2 (_ bv1 49)) C2)) (_ bv1 1)) (_ bv6 49) ?x22625))))
 (let ((?x8146 (ite (= ((_ extract 45 45) (bvxor (bvsub C2 (_ bv1 49)) C2)) (_ bv1 1)) (_ bv3 49) (ite (= ((_ extract 44 44) (bvxor (bvsub C2 (_ bv1 49)) C2)) (_ bv1 1)) (_ bv4 49) ?x7422))))
 (let ((?x21184 (ite (= ((_ extract 47 47) (bvxor (bvsub C2 (_ bv1 49)) C2)) (_ bv1 1)) (_ bv1 49) (ite (= ((_ extract 46 46) (bvxor (bvsub C2 (_ bv1 49)) C2)) (_ bv1 1)) (_ bv2 49) ?x8146))))
 (let ((?x6118 (bvsub (_ bv49 49) (ite (= ((_ extract 48 48) (bvxor (bvsub C2 (_ bv1 49)) C2)) (_ bv1 1)) (_ bv0 49) ?x21184))))
 (and (=> $x2686 (= (bvand %B (bvsub (bvshl (_ bv1 49) ?x6118) (_ bv1 49))) (_ bv0 49))) (= (bvand C1 C2) C2) $x8418 (and (distinct mem0 mem0) true))))))))))))))))))))))))))))))))
(check-sat)
