(set-info :status unknown)
(declare-fun C2 () (_ BitVec 10))
(declare-fun %B () (_ BitVec 10))
(declare-fun %A () (_ BitVec 10))
(declare-fun C1 () (_ BitVec 10))
(declare-fun |ana_MaskedValueIsZero(%B, ((1 << (width(C2) - countLeadingZeros(((C2 - 1) ^ C2)))) - 1))| () (_ BitVec 1))
(assert
 (let (($x19705 (and (distinct (bvand (bvadd (bvand %A C1) %B) C2) (bvand (bvadd %A %B) C2)) true)))
 (let (($x10420 (= |ana_MaskedValueIsZero(%B, ((1 << (width(C2) - countLeadingZeros(((C2 - 1) ^ C2)))) - 1))| (_ bv1 1))))
 (let ((?x12375 (bvor (bvsub C2 (_ bv1 10)) C2)))
 (let (($x19050 (and (and (distinct ?x12375 (_ bv0 10)) true) (= (bvand (bvadd ?x12375 (_ bv1 10)) ?x12375) (_ bv0 10)) $x10420)))
 (let (($x9354 (or (= (bvand (bvadd C2 (_ bv1 10)) (bvsub (bvadd C2 (_ bv1 10)) (_ bv1 10))) (_ bv0 10)) $x19050)))
 (let ((?x2923 (ite (= ((_ extract 1 1) (bvxor (bvsub C2 (_ bv1 10)) C2)) (_ bv1 1)) (_ bv8 10) (ite (= ((_ extract 0 0) (bvxor (bvsub C2 (_ bv1 10)) C2)) (_ bv1 1)) (_ bv9 10) (_ bv10 10)))))
 (let ((?x1608 (ite (= ((_ extract 3 3) (bvxor (bvsub C2 (_ bv1 10)) C2)) (_ bv1 1)) (_ bv6 10) (ite (= ((_ extract 2 2) (bvxor (bvsub C2 (_ bv1 10)) C2)) (_ bv1 1)) (_ bv7 10) ?x2923))))
 (let ((?x22019 (ite (= ((_ extract 5 5) (bvxor (bvsub C2 (_ bv1 10)) C2)) (_ bv1 1)) (_ bv4 10) (ite (= ((_ extract 4 4) (bvxor (bvsub C2 (_ bv1 10)) C2)) (_ bv1 1)) (_ bv5 10) ?x1608))))
 (let ((?x8016 (ite (= ((_ extract 7 7) (bvxor (bvsub C2 (_ bv1 10)) C2)) (_ bv1 1)) (_ bv2 10) (ite (= ((_ extract 6 6) (bvxor (bvsub C2 (_ bv1 10)) C2)) (_ bv1 1)) (_ bv3 10) ?x22019))))
 (let ((?x7675 (ite (= ((_ extract 9 9) (bvxor (bvsub C2 (_ bv1 10)) C2)) (_ bv1 1)) (_ bv0 10) (ite (= ((_ extract 8 8) (bvxor (bvsub C2 (_ bv1 10)) C2)) (_ bv1 1)) (_ bv1 10) ?x8016))))
 (let (($x23435 (=> $x10420 (= (bvand %B (bvsub (bvshl (_ bv1 10) (bvsub (_ bv10 10) ?x7675)) (_ bv1 10))) (_ bv0 10)))))
 (and $x23435 (= (bvand C1 C2) C2) $x9354 $x19705)))))))))))))
(check-sat)
