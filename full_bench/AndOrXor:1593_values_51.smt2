(set-info :status unknown)
(declare-fun %K2 () (_ BitVec 59))
(declare-fun %K1 () (_ BitVec 59))
(declare-fun %A () (_ BitVec 59))
(declare-fun |ana_isPowerOf2(%K2)| () (_ BitVec 1))
(declare-fun |ana_isPowerOf2(%K1)| () (_ BitVec 1))
(assert
 (let ((?x12345 (ite (and (distinct (bvand %A (bvor %K1 %K2)) (bvor %K1 %K2)) true) (_ bv1 1) (_ bv0 1))))
 (let ((?x11254 (ite (= (bvand %A %K2) (_ bv0 59)) (_ bv1 1) (_ bv0 1))))
 (let ((?x13315 (ite (= (bvand %A %K1) (_ bv0 59)) (_ bv1 1) (_ bv0 1))))
 (let (($x10202 (= |ana_isPowerOf2(%K2)| (_ bv1 1))))
 (let (($x12708 (= |ana_isPowerOf2(%K1)| (_ bv1 1))))
 (let (($x18843 (=> $x10202 (and (and (distinct %K2 (_ bv0 59)) true) (= (bvand %K2 (bvsub %K2 (_ bv1 59))) (_ bv0 59))))))
 (let (($x14055 (=> $x12708 (and (and (distinct %K1 (_ bv0 59)) true) (= (bvand %K1 (bvsub %K1 (_ bv1 59))) (_ bv0 59))))))
 (and $x14055 $x18843 $x12708 $x10202 (and (distinct (bvor ?x13315 ?x11254) ?x12345) true))))))))))
(check-sat)
