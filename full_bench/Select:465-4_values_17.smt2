(set-info :status unknown)
(declare-fun %Y () (_ BitVec 11))
(declare-fun C2 () (_ BitVec 11))
(declare-fun C1 () (_ BitVec 22))
(declare-fun %X () (_ BitVec 22))
(assert
 (let ((?x7577 (ite (and (distinct ((_ extract 2 2) C2) (_ bv0 1)) true) (_ bv2 22) (ite (and (distinct ((_ extract 1 1) C2) (_ bv0 1)) true) (_ bv1 22) (_ bv0 22)))))
 (let ((?x1131 (ite (and (distinct ((_ extract 5 5) C2) (_ bv0 1)) true) (_ bv5 22) (ite (and (distinct ((_ extract 4 4) C2) (_ bv0 1)) true) (_ bv4 22) (_ bv3 22)))))
 (let ((?x15472 (ite (and (distinct ((_ extract 8 8) C2) (_ bv0 1)) true) (_ bv8 22) (ite (and (distinct ((_ extract 7 7) C2) (_ bv0 1)) true) (_ bv7 22) (_ bv6 22)))))
 (let ((?x5278 (ite (and (distinct ((_ extract 10 9) C2) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) C2) (_ bv0 1)) true) (_ bv10 22) (_ bv9 22)) ?x15472)))
 (let ((?x11558 (ite (and (distinct ((_ extract 10 6) C2) (_ bv0 5)) true) ?x5278 (ite (and (distinct ((_ extract 5 3) C2) (_ bv0 3)) true) ?x1131 ?x7577))))
 (let ((?x3149 (ite (and (distinct ((_ extract 2 2) C1) (_ bv0 1)) true) (_ bv2 22) (ite (and (distinct ((_ extract 1 1) C1) (_ bv0 1)) true) (_ bv1 22) (_ bv0 22)))))
 (let ((?x23019 (ite (and (distinct ((_ extract 5 5) C1) (_ bv0 1)) true) (_ bv5 22) (ite (and (distinct ((_ extract 4 4) C1) (_ bv0 1)) true) (_ bv4 22) (_ bv3 22)))))
 (let ((?x7886 (ite (and (distinct ((_ extract 8 8) C1) (_ bv0 1)) true) (_ bv8 22) (ite (and (distinct ((_ extract 7 7) C1) (_ bv0 1)) true) (_ bv7 22) (_ bv6 22)))))
 (let ((?x13285 (ite (and (distinct ((_ extract 10 9) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) C1) (_ bv0 1)) true) (_ bv10 22) (_ bv9 22)) ?x7886)))
 (let ((?x24816 (ite (and (distinct ((_ extract 10 6) C1) (_ bv0 5)) true) ?x13285 (ite (and (distinct ((_ extract 5 3) C1) (_ bv0 3)) true) ?x23019 ?x3149))))
 (let ((?x547 (ite (and (distinct ((_ extract 13 13) C1) (_ bv0 1)) true) (_ bv13 22) (ite (and (distinct ((_ extract 12 12) C1) (_ bv0 1)) true) (_ bv12 22) (_ bv11 22)))))
 (let ((?x14806 (ite (and (distinct ((_ extract 16 16) C1) (_ bv0 1)) true) (_ bv16 22) (ite (and (distinct ((_ extract 15 15) C1) (_ bv0 1)) true) (_ bv15 22) (_ bv14 22)))))
 (let ((?x24589 (ite (and (distinct ((_ extract 19 19) C1) (_ bv0 1)) true) (_ bv19 22) (ite (and (distinct ((_ extract 18 18) C1) (_ bv0 1)) true) (_ bv18 22) (_ bv17 22)))))
 (let ((?x2232 (ite (and (distinct ((_ extract 21 20) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 21 21) C1) (_ bv0 1)) true) (_ bv21 22) (_ bv20 22)) ?x24589)))
 (let ((?x19006 (ite (and (distinct ((_ extract 21 17) C1) (_ bv0 5)) true) ?x2232 (ite (and (distinct ((_ extract 16 14) C1) (_ bv0 3)) true) ?x14806 ?x547))))
 (let ((?x4070 (bvsub (ite (and (distinct ((_ extract 21 11) C1) (_ bv0 11)) true) ?x19006 ?x24816) ?x11558)))
 (let ((?x12920 (bvand %X C1)))
 (let ((?x20522 (bvor %Y C2)))
 (let (($x10378 (and (distinct (ite (= (ite (and (distinct ?x12920 (_ bv0 22)) true) (_ bv1 1) (_ bv0 1)) (_ bv1 1)) %Y ?x20522) (bvor (bvxor ((_ extract 10 0) (bvlshr ?x12920 ?x4070)) C2) %Y)) true)))
 (let ((?x6818 (ite (and (distinct ((_ extract 2 2) C1) (_ bv0 1)) true) (_ bv2 32) (ite (and (distinct ((_ extract 1 1) C1) (_ bv0 1)) true) (_ bv1 32) (_ bv0 32)))))
 (let ((?x4475 (ite (and (distinct ((_ extract 5 5) C1) (_ bv0 1)) true) (_ bv5 32) (ite (and (distinct ((_ extract 4 4) C1) (_ bv0 1)) true) (_ bv4 32) (_ bv3 32)))))
 (let ((?x1625 (ite (and (distinct ((_ extract 8 8) C1) (_ bv0 1)) true) (_ bv8 32) (ite (and (distinct ((_ extract 7 7) C1) (_ bv0 1)) true) (_ bv7 32) (_ bv6 32)))))
 (let ((?x5615 (ite (and (distinct ((_ extract 10 9) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) C1) (_ bv0 1)) true) (_ bv10 32) (_ bv9 32)) ?x1625)))
 (let ((?x8769 (ite (and (distinct ((_ extract 10 6) C1) (_ bv0 5)) true) ?x5615 (ite (and (distinct ((_ extract 5 3) C1) (_ bv0 3)) true) ?x4475 ?x6818))))
 (let ((?x7851 (ite (and (distinct ((_ extract 13 13) C1) (_ bv0 1)) true) (_ bv13 32) (ite (and (distinct ((_ extract 12 12) C1) (_ bv0 1)) true) (_ bv12 32) (_ bv11 32)))))
 (let ((?x4430 (ite (and (distinct ((_ extract 16 16) C1) (_ bv0 1)) true) (_ bv16 32) (ite (and (distinct ((_ extract 15 15) C1) (_ bv0 1)) true) (_ bv15 32) (_ bv14 32)))))
 (let ((?x511 (ite (and (distinct ((_ extract 19 19) C1) (_ bv0 1)) true) (_ bv19 32) (ite (and (distinct ((_ extract 18 18) C1) (_ bv0 1)) true) (_ bv18 32) (_ bv17 32)))))
 (let ((?x7841 (ite (and (distinct ((_ extract 21 20) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 21 21) C1) (_ bv0 1)) true) (_ bv21 32) (_ bv20 32)) ?x511)))
 (let ((?x4850 (ite (and (distinct ((_ extract 21 17) C1) (_ bv0 5)) true) ?x7841 (ite (and (distinct ((_ extract 16 14) C1) (_ bv0 3)) true) ?x4430 ?x7851))))
 (let ((?x3632 (ite (and (distinct ((_ extract 2 2) C2) (_ bv0 1)) true) (_ bv2 32) (ite (and (distinct ((_ extract 1 1) C2) (_ bv0 1)) true) (_ bv1 32) (_ bv0 32)))))
 (let ((?x10213 (ite (and (distinct ((_ extract 5 5) C2) (_ bv0 1)) true) (_ bv5 32) (ite (and (distinct ((_ extract 4 4) C2) (_ bv0 1)) true) (_ bv4 32) (_ bv3 32)))))
 (let ((?x7964 (ite (and (distinct ((_ extract 8 8) C2) (_ bv0 1)) true) (_ bv8 32) (ite (and (distinct ((_ extract 7 7) C2) (_ bv0 1)) true) (_ bv7 32) (_ bv6 32)))))
 (let ((?x17833 (ite (and (distinct ((_ extract 10 9) C2) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) C2) (_ bv0 1)) true) (_ bv10 32) (_ bv9 32)) ?x7964)))
 (let ((?x8738 (ite (and (distinct ((_ extract 10 6) C2) (_ bv0 5)) true) ?x17833 (ite (and (distinct ((_ extract 5 3) C2) (_ bv0 3)) true) ?x10213 ?x3632))))
 (and (and (and (distinct C1 (_ bv0 22)) true) (= (bvand C1 (bvsub C1 (_ bv1 22))) (_ bv0 22))) (and (and (distinct C2 (_ bv0 11)) true) (= (bvand C2 (bvsub C2 (_ bv1 11))) (_ bv0 11))) (bvslt ?x8738 (ite (and (distinct ((_ extract 21 11) C1) (_ bv0 11)) true) ?x4850 ?x8769)) $x10378))))))))))))))))))))))))))))))))))))
(check-sat)
