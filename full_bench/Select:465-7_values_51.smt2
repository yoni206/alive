(set-info :status unknown)
(declare-fun %Y () (_ BitVec 11))
(declare-fun C2 () (_ BitVec 11))
(declare-fun C1 () (_ BitVec 56))
(declare-fun %X () (_ BitVec 56))
(assert
 (let ((?x16018 (ite (and (distinct ((_ extract 2 2) C2) (_ bv0 1)) true) (_ bv2 56) (ite (and (distinct ((_ extract 1 1) C2) (_ bv0 1)) true) (_ bv1 56) (_ bv0 56)))))
 (let ((?x19739 (ite (and (distinct ((_ extract 5 5) C2) (_ bv0 1)) true) (_ bv5 56) (ite (and (distinct ((_ extract 4 4) C2) (_ bv0 1)) true) (_ bv4 56) (_ bv3 56)))))
 (let ((?x24535 (ite (and (distinct ((_ extract 8 8) C2) (_ bv0 1)) true) (_ bv8 56) (ite (and (distinct ((_ extract 7 7) C2) (_ bv0 1)) true) (_ bv7 56) (_ bv6 56)))))
 (let ((?x14500 (ite (and (distinct ((_ extract 10 9) C2) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) C2) (_ bv0 1)) true) (_ bv10 56) (_ bv9 56)) ?x24535)))
 (let ((?x3239 (ite (and (distinct ((_ extract 10 6) C2) (_ bv0 5)) true) ?x14500 (ite (and (distinct ((_ extract 5 3) C2) (_ bv0 3)) true) ?x19739 ?x16018))))
 (let ((?x12766 (ite (and (distinct ((_ extract 3 2) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 3 3) C1) (_ bv0 1)) true) (_ bv3 56) (_ bv2 56)) (ite (and (distinct ((_ extract 1 1) C1) (_ bv0 1)) true) (_ bv1 56) (_ bv0 56)))))
 (let ((?x16448 (ite (and (distinct ((_ extract 6 6) C1) (_ bv0 1)) true) (_ bv6 56) (ite (and (distinct ((_ extract 5 5) C1) (_ bv0 1)) true) (_ bv5 56) (_ bv4 56)))))
 (let ((?x9407 (ite (and (distinct ((_ extract 10 9) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) C1) (_ bv0 1)) true) (_ bv10 56) (_ bv9 56)) (ite (and (distinct ((_ extract 8 8) C1) (_ bv0 1)) true) (_ bv8 56) (_ bv7 56)))))
 (let ((?x19879 (ite (and (distinct ((_ extract 13 13) C1) (_ bv0 1)) true) (_ bv13 56) (ite (and (distinct ((_ extract 12 12) C1) (_ bv0 1)) true) (_ bv12 56) (_ bv11 56)))))
 (let ((?x18331 (ite (and (distinct ((_ extract 13 7) C1) (_ bv0 7)) true) (ite (and (distinct ((_ extract 13 11) C1) (_ bv0 3)) true) ?x19879 ?x9407) (ite (and (distinct ((_ extract 6 4) C1) (_ bv0 3)) true) ?x16448 ?x12766))))
 (let ((?x7963 (ite (and (distinct ((_ extract 17 16) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 17 17) C1) (_ bv0 1)) true) (_ bv17 56) (_ bv16 56)) (ite (and (distinct ((_ extract 15 15) C1) (_ bv0 1)) true) (_ bv15 56) (_ bv14 56)))))
 (let ((?x22897 (ite (and (distinct ((_ extract 20 20) C1) (_ bv0 1)) true) (_ bv20 56) (ite (and (distinct ((_ extract 19 19) C1) (_ bv0 1)) true) (_ bv19 56) (_ bv18 56)))))
 (let ((?x323 (ite (and (distinct ((_ extract 24 23) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 24 24) C1) (_ bv0 1)) true) (_ bv24 56) (_ bv23 56)) (ite (and (distinct ((_ extract 22 22) C1) (_ bv0 1)) true) (_ bv22 56) (_ bv21 56)))))
 (let ((?x17977 (ite (and (distinct ((_ extract 27 27) C1) (_ bv0 1)) true) (_ bv27 56) (ite (and (distinct ((_ extract 26 26) C1) (_ bv0 1)) true) (_ bv26 56) (_ bv25 56)))))
 (let ((?x16150 (ite (and (distinct ((_ extract 27 21) C1) (_ bv0 7)) true) (ite (and (distinct ((_ extract 27 25) C1) (_ bv0 3)) true) ?x17977 ?x323) (ite (and (distinct ((_ extract 20 18) C1) (_ bv0 3)) true) ?x22897 ?x7963))))
 (let ((?x4716 (ite (and (distinct ((_ extract 31 30) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 31 31) C1) (_ bv0 1)) true) (_ bv31 56) (_ bv30 56)) (ite (and (distinct ((_ extract 29 29) C1) (_ bv0 1)) true) (_ bv29 56) (_ bv28 56)))))
 (let ((?x16065 (ite (and (distinct ((_ extract 34 34) C1) (_ bv0 1)) true) (_ bv34 56) (ite (and (distinct ((_ extract 33 33) C1) (_ bv0 1)) true) (_ bv33 56) (_ bv32 56)))))
 (let ((?x3839 (ite (and (distinct ((_ extract 38 37) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 38 38) C1) (_ bv0 1)) true) (_ bv38 56) (_ bv37 56)) (ite (and (distinct ((_ extract 36 36) C1) (_ bv0 1)) true) (_ bv36 56) (_ bv35 56)))))
 (let ((?x13938 (ite (and (distinct ((_ extract 41 41) C1) (_ bv0 1)) true) (_ bv41 56) (ite (and (distinct ((_ extract 40 40) C1) (_ bv0 1)) true) (_ bv40 56) (_ bv39 56)))))
 (let ((?x3092 (ite (and (distinct ((_ extract 41 35) C1) (_ bv0 7)) true) (ite (and (distinct ((_ extract 41 39) C1) (_ bv0 3)) true) ?x13938 ?x3839) (ite (and (distinct ((_ extract 34 32) C1) (_ bv0 3)) true) ?x16065 ?x4716))))
 (let ((?x7685 (ite (and (distinct ((_ extract 45 44) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 45 45) C1) (_ bv0 1)) true) (_ bv45 56) (_ bv44 56)) (ite (and (distinct ((_ extract 43 43) C1) (_ bv0 1)) true) (_ bv43 56) (_ bv42 56)))))
 (let ((?x14138 (ite (and (distinct ((_ extract 48 48) C1) (_ bv0 1)) true) (_ bv48 56) (ite (and (distinct ((_ extract 47 47) C1) (_ bv0 1)) true) (_ bv47 56) (_ bv46 56)))))
 (let ((?x5753 (ite (and (distinct ((_ extract 52 51) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 52 52) C1) (_ bv0 1)) true) (_ bv52 56) (_ bv51 56)) (ite (and (distinct ((_ extract 50 50) C1) (_ bv0 1)) true) (_ bv50 56) (_ bv49 56)))))
 (let ((?x18707 (ite (and (distinct ((_ extract 55 55) C1) (_ bv0 1)) true) (_ bv55 56) (ite (and (distinct ((_ extract 54 54) C1) (_ bv0 1)) true) (_ bv54 56) (_ bv53 56)))))
 (let ((?x2593 (ite (and (distinct ((_ extract 55 49) C1) (_ bv0 7)) true) (ite (and (distinct ((_ extract 55 53) C1) (_ bv0 3)) true) ?x18707 ?x5753) (ite (and (distinct ((_ extract 48 46) C1) (_ bv0 3)) true) ?x14138 ?x7685))))
 (let ((?x21919 (ite (and (distinct ((_ extract 55 28) C1) (_ bv0 28)) true) (ite (and (distinct ((_ extract 55 42) C1) (_ bv0 14)) true) ?x2593 ?x3092) (ite (and (distinct ((_ extract 27 14) C1) (_ bv0 14)) true) ?x16150 ?x18331))))
 (let ((?x5556 (bvsub ?x21919 ?x3239)))
 (let ((?x11185 (bvand %X C1)))
 (let (($x13290 (and (distinct (ite (= (ite (= ?x11185 (_ bv0 56)) (_ bv1 1) (_ bv0 1)) (_ bv1 1)) (bvor %Y C2) %Y) (bvor (bvxor ((_ extract 10 0) (bvlshr ?x11185 ?x5556)) C2) %Y)) true)))
 (let ((?x3595 (ite (and (distinct ((_ extract 3 2) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 3 3) C1) (_ bv0 1)) true) (_ bv3 32) (_ bv2 32)) (ite (and (distinct ((_ extract 1 1) C1) (_ bv0 1)) true) (_ bv1 32) (_ bv0 32)))))
 (let ((?x2401 (ite (and (distinct ((_ extract 6 6) C1) (_ bv0 1)) true) (_ bv6 32) (ite (and (distinct ((_ extract 5 5) C1) (_ bv0 1)) true) (_ bv5 32) (_ bv4 32)))))
 (let ((?x7817 (ite (and (distinct ((_ extract 10 9) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) C1) (_ bv0 1)) true) (_ bv10 32) (_ bv9 32)) (ite (and (distinct ((_ extract 8 8) C1) (_ bv0 1)) true) (_ bv8 32) (_ bv7 32)))))
 (let ((?x15264 (ite (and (distinct ((_ extract 13 13) C1) (_ bv0 1)) true) (_ bv13 32) (ite (and (distinct ((_ extract 12 12) C1) (_ bv0 1)) true) (_ bv12 32) (_ bv11 32)))))
 (let ((?x2802 (ite (and (distinct ((_ extract 13 7) C1) (_ bv0 7)) true) (ite (and (distinct ((_ extract 13 11) C1) (_ bv0 3)) true) ?x15264 ?x7817) (ite (and (distinct ((_ extract 6 4) C1) (_ bv0 3)) true) ?x2401 ?x3595))))
 (let ((?x1025 (ite (and (distinct ((_ extract 17 16) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 17 17) C1) (_ bv0 1)) true) (_ bv17 32) (_ bv16 32)) (ite (and (distinct ((_ extract 15 15) C1) (_ bv0 1)) true) (_ bv15 32) (_ bv14 32)))))
 (let ((?x8749 (ite (and (distinct ((_ extract 20 20) C1) (_ bv0 1)) true) (_ bv20 32) (ite (and (distinct ((_ extract 19 19) C1) (_ bv0 1)) true) (_ bv19 32) (_ bv18 32)))))
 (let ((?x17293 (ite (and (distinct ((_ extract 24 23) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 24 24) C1) (_ bv0 1)) true) (_ bv24 32) (_ bv23 32)) (ite (and (distinct ((_ extract 22 22) C1) (_ bv0 1)) true) (_ bv22 32) (_ bv21 32)))))
 (let ((?x17590 (ite (and (distinct ((_ extract 27 27) C1) (_ bv0 1)) true) (_ bv27 32) (ite (and (distinct ((_ extract 26 26) C1) (_ bv0 1)) true) (_ bv26 32) (_ bv25 32)))))
 (let ((?x18355 (ite (and (distinct ((_ extract 27 21) C1) (_ bv0 7)) true) (ite (and (distinct ((_ extract 27 25) C1) (_ bv0 3)) true) ?x17590 ?x17293) (ite (and (distinct ((_ extract 20 18) C1) (_ bv0 3)) true) ?x8749 ?x1025))))
 (let ((?x17582 (ite (and (distinct ((_ extract 31 30) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 31 31) C1) (_ bv0 1)) true) (_ bv31 32) (_ bv30 32)) (ite (and (distinct ((_ extract 29 29) C1) (_ bv0 1)) true) (_ bv29 32) (_ bv28 32)))))
 (let ((?x12257 (ite (and (distinct ((_ extract 34 34) C1) (_ bv0 1)) true) (_ bv34 32) (ite (and (distinct ((_ extract 33 33) C1) (_ bv0 1)) true) (_ bv33 32) (_ bv32 32)))))
 (let ((?x9303 (ite (and (distinct ((_ extract 38 37) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 38 38) C1) (_ bv0 1)) true) (_ bv38 32) (_ bv37 32)) (ite (and (distinct ((_ extract 36 36) C1) (_ bv0 1)) true) (_ bv36 32) (_ bv35 32)))))
 (let ((?x9229 (ite (and (distinct ((_ extract 41 41) C1) (_ bv0 1)) true) (_ bv41 32) (ite (and (distinct ((_ extract 40 40) C1) (_ bv0 1)) true) (_ bv40 32) (_ bv39 32)))))
 (let ((?x12632 (ite (and (distinct ((_ extract 41 35) C1) (_ bv0 7)) true) (ite (and (distinct ((_ extract 41 39) C1) (_ bv0 3)) true) ?x9229 ?x9303) (ite (and (distinct ((_ extract 34 32) C1) (_ bv0 3)) true) ?x12257 ?x17582))))
 (let ((?x8793 (ite (and (distinct ((_ extract 45 44) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 45 45) C1) (_ bv0 1)) true) (_ bv45 32) (_ bv44 32)) (ite (and (distinct ((_ extract 43 43) C1) (_ bv0 1)) true) (_ bv43 32) (_ bv42 32)))))
 (let ((?x4744 (ite (and (distinct ((_ extract 48 48) C1) (_ bv0 1)) true) (_ bv48 32) (ite (and (distinct ((_ extract 47 47) C1) (_ bv0 1)) true) (_ bv47 32) (_ bv46 32)))))
 (let ((?x16855 (ite (and (distinct ((_ extract 52 51) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 52 52) C1) (_ bv0 1)) true) (_ bv52 32) (_ bv51 32)) (ite (and (distinct ((_ extract 50 50) C1) (_ bv0 1)) true) (_ bv50 32) (_ bv49 32)))))
 (let ((?x9222 (ite (and (distinct ((_ extract 55 55) C1) (_ bv0 1)) true) (_ bv55 32) (ite (and (distinct ((_ extract 54 54) C1) (_ bv0 1)) true) (_ bv54 32) (_ bv53 32)))))
 (let ((?x4516 (ite (and (distinct ((_ extract 55 49) C1) (_ bv0 7)) true) (ite (and (distinct ((_ extract 55 53) C1) (_ bv0 3)) true) ?x9222 ?x16855) (ite (and (distinct ((_ extract 48 46) C1) (_ bv0 3)) true) ?x4744 ?x8793))))
 (let ((?x2575 (ite (and (distinct ((_ extract 55 28) C1) (_ bv0 28)) true) (ite (and (distinct ((_ extract 55 42) C1) (_ bv0 14)) true) ?x4516 ?x12632) (ite (and (distinct ((_ extract 27 14) C1) (_ bv0 14)) true) ?x18355 ?x2802))))
 (let ((?x14234 (ite (and (distinct ((_ extract 2 2) C2) (_ bv0 1)) true) (_ bv2 32) (ite (and (distinct ((_ extract 1 1) C2) (_ bv0 1)) true) (_ bv1 32) (_ bv0 32)))))
 (let ((?x13277 (ite (and (distinct ((_ extract 5 5) C2) (_ bv0 1)) true) (_ bv5 32) (ite (and (distinct ((_ extract 4 4) C2) (_ bv0 1)) true) (_ bv4 32) (_ bv3 32)))))
 (let ((?x7552 (ite (and (distinct ((_ extract 8 8) C2) (_ bv0 1)) true) (_ bv8 32) (ite (and (distinct ((_ extract 7 7) C2) (_ bv0 1)) true) (_ bv7 32) (_ bv6 32)))))
 (let ((?x7110 (ite (and (distinct ((_ extract 10 9) C2) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) C2) (_ bv0 1)) true) (_ bv10 32) (_ bv9 32)) ?x7552)))
 (let ((?x10566 (ite (and (distinct ((_ extract 10 6) C2) (_ bv0 5)) true) ?x7110 (ite (and (distinct ((_ extract 5 3) C2) (_ bv0 3)) true) ?x13277 ?x14234))))
 (and (and (and (distinct C1 (_ bv0 56)) true) (= (bvand C1 (bvsub C1 (_ bv1 56))) (_ bv0 56))) (and (and (distinct C2 (_ bv0 11)) true) (= (bvand C2 (bvsub C2 (_ bv1 11))) (_ bv0 11))) (bvslt ?x10566 ?x2575) $x13290)))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
