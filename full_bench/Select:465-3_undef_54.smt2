(set-info :status unknown)
(declare-fun C2 () (_ BitVec 11))
(declare-fun C1 () (_ BitVec 56))
(assert
 (let ((?x8028 (ite (and (distinct ((_ extract 2 2) C2) (_ bv0 1)) true) (_ bv2 56) (ite (and (distinct ((_ extract 1 1) C2) (_ bv0 1)) true) (_ bv1 56) (_ bv0 56)))))
 (let ((?x21255 (ite (and (distinct ((_ extract 5 5) C2) (_ bv0 1)) true) (_ bv5 56) (ite (and (distinct ((_ extract 4 4) C2) (_ bv0 1)) true) (_ bv4 56) (_ bv3 56)))))
 (let ((?x3294 (ite (and (distinct ((_ extract 8 8) C2) (_ bv0 1)) true) (_ bv8 56) (ite (and (distinct ((_ extract 7 7) C2) (_ bv0 1)) true) (_ bv7 56) (_ bv6 56)))))
 (let ((?x1257 (ite (and (distinct ((_ extract 10 9) C2) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) C2) (_ bv0 1)) true) (_ bv10 56) (_ bv9 56)) ?x3294)))
 (let ((?x1445 (ite (and (distinct ((_ extract 10 6) C2) (_ bv0 5)) true) ?x1257 (ite (and (distinct ((_ extract 5 3) C2) (_ bv0 3)) true) ?x21255 ?x8028))))
 (let ((?x10205 (ite (and (distinct ((_ extract 3 2) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 3 3) C1) (_ bv0 1)) true) (_ bv3 56) (_ bv2 56)) (ite (and (distinct ((_ extract 1 1) C1) (_ bv0 1)) true) (_ bv1 56) (_ bv0 56)))))
 (let ((?x7786 (ite (and (distinct ((_ extract 6 6) C1) (_ bv0 1)) true) (_ bv6 56) (ite (and (distinct ((_ extract 5 5) C1) (_ bv0 1)) true) (_ bv5 56) (_ bv4 56)))))
 (let ((?x13281 (ite (and (distinct ((_ extract 10 9) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) C1) (_ bv0 1)) true) (_ bv10 56) (_ bv9 56)) (ite (and (distinct ((_ extract 8 8) C1) (_ bv0 1)) true) (_ bv8 56) (_ bv7 56)))))
 (let ((?x15658 (ite (and (distinct ((_ extract 13 13) C1) (_ bv0 1)) true) (_ bv13 56) (ite (and (distinct ((_ extract 12 12) C1) (_ bv0 1)) true) (_ bv12 56) (_ bv11 56)))))
 (let ((?x18373 (ite (and (distinct ((_ extract 13 7) C1) (_ bv0 7)) true) (ite (and (distinct ((_ extract 13 11) C1) (_ bv0 3)) true) ?x15658 ?x13281) (ite (and (distinct ((_ extract 6 4) C1) (_ bv0 3)) true) ?x7786 ?x10205))))
 (let ((?x11895 (ite (and (distinct ((_ extract 17 16) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 17 17) C1) (_ bv0 1)) true) (_ bv17 56) (_ bv16 56)) (ite (and (distinct ((_ extract 15 15) C1) (_ bv0 1)) true) (_ bv15 56) (_ bv14 56)))))
 (let ((?x11439 (ite (and (distinct ((_ extract 20 20) C1) (_ bv0 1)) true) (_ bv20 56) (ite (and (distinct ((_ extract 19 19) C1) (_ bv0 1)) true) (_ bv19 56) (_ bv18 56)))))
 (let ((?x4230 (ite (and (distinct ((_ extract 24 23) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 24 24) C1) (_ bv0 1)) true) (_ bv24 56) (_ bv23 56)) (ite (and (distinct ((_ extract 22 22) C1) (_ bv0 1)) true) (_ bv22 56) (_ bv21 56)))))
 (let ((?x3932 (ite (and (distinct ((_ extract 27 27) C1) (_ bv0 1)) true) (_ bv27 56) (ite (and (distinct ((_ extract 26 26) C1) (_ bv0 1)) true) (_ bv26 56) (_ bv25 56)))))
 (let ((?x22407 (ite (and (distinct ((_ extract 27 21) C1) (_ bv0 7)) true) (ite (and (distinct ((_ extract 27 25) C1) (_ bv0 3)) true) ?x3932 ?x4230) (ite (and (distinct ((_ extract 20 18) C1) (_ bv0 3)) true) ?x11439 ?x11895))))
 (let ((?x10815 (ite (and (distinct ((_ extract 31 30) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 31 31) C1) (_ bv0 1)) true) (_ bv31 56) (_ bv30 56)) (ite (and (distinct ((_ extract 29 29) C1) (_ bv0 1)) true) (_ bv29 56) (_ bv28 56)))))
 (let ((?x6935 (ite (and (distinct ((_ extract 34 34) C1) (_ bv0 1)) true) (_ bv34 56) (ite (and (distinct ((_ extract 33 33) C1) (_ bv0 1)) true) (_ bv33 56) (_ bv32 56)))))
 (let ((?x4872 (ite (and (distinct ((_ extract 38 37) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 38 38) C1) (_ bv0 1)) true) (_ bv38 56) (_ bv37 56)) (ite (and (distinct ((_ extract 36 36) C1) (_ bv0 1)) true) (_ bv36 56) (_ bv35 56)))))
 (let ((?x737 (ite (and (distinct ((_ extract 41 41) C1) (_ bv0 1)) true) (_ bv41 56) (ite (and (distinct ((_ extract 40 40) C1) (_ bv0 1)) true) (_ bv40 56) (_ bv39 56)))))
 (let ((?x10300 (ite (and (distinct ((_ extract 41 35) C1) (_ bv0 7)) true) (ite (and (distinct ((_ extract 41 39) C1) (_ bv0 3)) true) ?x737 ?x4872) (ite (and (distinct ((_ extract 34 32) C1) (_ bv0 3)) true) ?x6935 ?x10815))))
 (let ((?x22348 (ite (and (distinct ((_ extract 45 44) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 45 45) C1) (_ bv0 1)) true) (_ bv45 56) (_ bv44 56)) (ite (and (distinct ((_ extract 43 43) C1) (_ bv0 1)) true) (_ bv43 56) (_ bv42 56)))))
 (let ((?x13669 (ite (and (distinct ((_ extract 48 48) C1) (_ bv0 1)) true) (_ bv48 56) (ite (and (distinct ((_ extract 47 47) C1) (_ bv0 1)) true) (_ bv47 56) (_ bv46 56)))))
 (let ((?x24480 (ite (and (distinct ((_ extract 52 51) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 52 52) C1) (_ bv0 1)) true) (_ bv52 56) (_ bv51 56)) (ite (and (distinct ((_ extract 50 50) C1) (_ bv0 1)) true) (_ bv50 56) (_ bv49 56)))))
 (let ((?x5337 (ite (and (distinct ((_ extract 55 55) C1) (_ bv0 1)) true) (_ bv55 56) (ite (and (distinct ((_ extract 54 54) C1) (_ bv0 1)) true) (_ bv54 56) (_ bv53 56)))))
 (let ((?x10825 (ite (and (distinct ((_ extract 55 49) C1) (_ bv0 7)) true) (ite (and (distinct ((_ extract 55 53) C1) (_ bv0 3)) true) ?x5337 ?x24480) (ite (and (distinct ((_ extract 48 46) C1) (_ bv0 3)) true) ?x13669 ?x22348))))
 (let ((?x3638 (ite (and (distinct ((_ extract 55 28) C1) (_ bv0 28)) true) (ite (and (distinct ((_ extract 55 42) C1) (_ bv0 14)) true) ?x10825 ?x10300) (ite (and (distinct ((_ extract 27 14) C1) (_ bv0 14)) true) ?x22407 ?x18373))))
 (let ((?x7257 (bvsub ?x3638 ?x1445)))
 (let ((?x6895 (ite (and (distinct ((_ extract 3 2) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 3 3) C1) (_ bv0 1)) true) (_ bv3 32) (_ bv2 32)) (ite (and (distinct ((_ extract 1 1) C1) (_ bv0 1)) true) (_ bv1 32) (_ bv0 32)))))
 (let ((?x17354 (ite (and (distinct ((_ extract 6 6) C1) (_ bv0 1)) true) (_ bv6 32) (ite (and (distinct ((_ extract 5 5) C1) (_ bv0 1)) true) (_ bv5 32) (_ bv4 32)))))
 (let ((?x16644 (ite (and (distinct ((_ extract 10 9) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) C1) (_ bv0 1)) true) (_ bv10 32) (_ bv9 32)) (ite (and (distinct ((_ extract 8 8) C1) (_ bv0 1)) true) (_ bv8 32) (_ bv7 32)))))
 (let ((?x9296 (ite (and (distinct ((_ extract 13 13) C1) (_ bv0 1)) true) (_ bv13 32) (ite (and (distinct ((_ extract 12 12) C1) (_ bv0 1)) true) (_ bv12 32) (_ bv11 32)))))
 (let ((?x15406 (ite (and (distinct ((_ extract 13 7) C1) (_ bv0 7)) true) (ite (and (distinct ((_ extract 13 11) C1) (_ bv0 3)) true) ?x9296 ?x16644) (ite (and (distinct ((_ extract 6 4) C1) (_ bv0 3)) true) ?x17354 ?x6895))))
 (let ((?x9124 (ite (and (distinct ((_ extract 17 16) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 17 17) C1) (_ bv0 1)) true) (_ bv17 32) (_ bv16 32)) (ite (and (distinct ((_ extract 15 15) C1) (_ bv0 1)) true) (_ bv15 32) (_ bv14 32)))))
 (let ((?x8222 (ite (and (distinct ((_ extract 20 20) C1) (_ bv0 1)) true) (_ bv20 32) (ite (and (distinct ((_ extract 19 19) C1) (_ bv0 1)) true) (_ bv19 32) (_ bv18 32)))))
 (let ((?x4874 (ite (and (distinct ((_ extract 24 23) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 24 24) C1) (_ bv0 1)) true) (_ bv24 32) (_ bv23 32)) (ite (and (distinct ((_ extract 22 22) C1) (_ bv0 1)) true) (_ bv22 32) (_ bv21 32)))))
 (let ((?x19988 (ite (and (distinct ((_ extract 27 27) C1) (_ bv0 1)) true) (_ bv27 32) (ite (and (distinct ((_ extract 26 26) C1) (_ bv0 1)) true) (_ bv26 32) (_ bv25 32)))))
 (let ((?x24806 (ite (and (distinct ((_ extract 27 21) C1) (_ bv0 7)) true) (ite (and (distinct ((_ extract 27 25) C1) (_ bv0 3)) true) ?x19988 ?x4874) (ite (and (distinct ((_ extract 20 18) C1) (_ bv0 3)) true) ?x8222 ?x9124))))
 (let ((?x19177 (ite (and (distinct ((_ extract 31 30) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 31 31) C1) (_ bv0 1)) true) (_ bv31 32) (_ bv30 32)) (ite (and (distinct ((_ extract 29 29) C1) (_ bv0 1)) true) (_ bv29 32) (_ bv28 32)))))
 (let ((?x17334 (ite (and (distinct ((_ extract 34 34) C1) (_ bv0 1)) true) (_ bv34 32) (ite (and (distinct ((_ extract 33 33) C1) (_ bv0 1)) true) (_ bv33 32) (_ bv32 32)))))
 (let ((?x13271 (ite (and (distinct ((_ extract 38 37) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 38 38) C1) (_ bv0 1)) true) (_ bv38 32) (_ bv37 32)) (ite (and (distinct ((_ extract 36 36) C1) (_ bv0 1)) true) (_ bv36 32) (_ bv35 32)))))
 (let ((?x9910 (ite (and (distinct ((_ extract 41 41) C1) (_ bv0 1)) true) (_ bv41 32) (ite (and (distinct ((_ extract 40 40) C1) (_ bv0 1)) true) (_ bv40 32) (_ bv39 32)))))
 (let ((?x18792 (ite (and (distinct ((_ extract 41 35) C1) (_ bv0 7)) true) (ite (and (distinct ((_ extract 41 39) C1) (_ bv0 3)) true) ?x9910 ?x13271) (ite (and (distinct ((_ extract 34 32) C1) (_ bv0 3)) true) ?x17334 ?x19177))))
 (let ((?x7501 (ite (and (distinct ((_ extract 45 44) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 45 45) C1) (_ bv0 1)) true) (_ bv45 32) (_ bv44 32)) (ite (and (distinct ((_ extract 43 43) C1) (_ bv0 1)) true) (_ bv43 32) (_ bv42 32)))))
 (let ((?x5252 (ite (and (distinct ((_ extract 48 48) C1) (_ bv0 1)) true) (_ bv48 32) (ite (and (distinct ((_ extract 47 47) C1) (_ bv0 1)) true) (_ bv47 32) (_ bv46 32)))))
 (let ((?x8498 (ite (and (distinct ((_ extract 52 51) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 52 52) C1) (_ bv0 1)) true) (_ bv52 32) (_ bv51 32)) (ite (and (distinct ((_ extract 50 50) C1) (_ bv0 1)) true) (_ bv50 32) (_ bv49 32)))))
 (let ((?x5409 (ite (and (distinct ((_ extract 55 55) C1) (_ bv0 1)) true) (_ bv55 32) (ite (and (distinct ((_ extract 54 54) C1) (_ bv0 1)) true) (_ bv54 32) (_ bv53 32)))))
 (let ((?x6371 (ite (and (distinct ((_ extract 55 49) C1) (_ bv0 7)) true) (ite (and (distinct ((_ extract 55 53) C1) (_ bv0 3)) true) ?x5409 ?x8498) (ite (and (distinct ((_ extract 48 46) C1) (_ bv0 3)) true) ?x5252 ?x7501))))
 (let ((?x11027 (ite (and (distinct ((_ extract 55 28) C1) (_ bv0 28)) true) (ite (and (distinct ((_ extract 55 42) C1) (_ bv0 14)) true) ?x6371 ?x18792) (ite (and (distinct ((_ extract 27 14) C1) (_ bv0 14)) true) ?x24806 ?x15406))))
 (let ((?x7457 (ite (and (distinct ((_ extract 2 2) C2) (_ bv0 1)) true) (_ bv2 32) (ite (and (distinct ((_ extract 1 1) C2) (_ bv0 1)) true) (_ bv1 32) (_ bv0 32)))))
 (let ((?x15875 (ite (and (distinct ((_ extract 5 5) C2) (_ bv0 1)) true) (_ bv5 32) (ite (and (distinct ((_ extract 4 4) C2) (_ bv0 1)) true) (_ bv4 32) (_ bv3 32)))))
 (let ((?x1195 (ite (and (distinct ((_ extract 8 8) C2) (_ bv0 1)) true) (_ bv8 32) (ite (and (distinct ((_ extract 7 7) C2) (_ bv0 1)) true) (_ bv7 32) (_ bv6 32)))))
 (let ((?x12902 (ite (and (distinct ((_ extract 10 9) C2) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) C2) (_ bv0 1)) true) (_ bv10 32) (_ bv9 32)) ?x1195)))
 (let ((?x23773 (ite (and (distinct ((_ extract 10 6) C2) (_ bv0 5)) true) ?x12902 (ite (and (distinct ((_ extract 5 3) C2) (_ bv0 3)) true) ?x15875 ?x7457))))
 (and (and (and (distinct C1 (_ bv0 56)) true) (= (bvand C1 (bvsub C1 (_ bv1 56))) (_ bv0 56))) (and (and (distinct C2 (_ bv0 11)) true) (= (bvand C2 (bvsub C2 (_ bv1 11))) (_ bv0 11))) (bvslt ?x23773 ?x11027) (not (bvult ?x7257 (_ bv56 56))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
