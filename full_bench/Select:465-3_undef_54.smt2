(set-info :status unknown)
(declare-fun C2 () (_ BitVec 11))
(declare-fun C1 () (_ BitVec 55))
(assert
 (let ((?x5810 (ite (and (distinct ((_ extract 2 2) C2) (_ bv0 1)) true) (_ bv2 55) (ite (and (distinct ((_ extract 1 1) C2) (_ bv0 1)) true) (_ bv1 55) (_ bv0 55)))))
 (let ((?x3688 (ite (and (distinct ((_ extract 5 5) C2) (_ bv0 1)) true) (_ bv5 55) (ite (and (distinct ((_ extract 4 4) C2) (_ bv0 1)) true) (_ bv4 55) (_ bv3 55)))))
 (let ((?x5357 (ite (and (distinct ((_ extract 8 8) C2) (_ bv0 1)) true) (_ bv8 55) (ite (and (distinct ((_ extract 7 7) C2) (_ bv0 1)) true) (_ bv7 55) (_ bv6 55)))))
 (let ((?x3286 (ite (and (distinct ((_ extract 10 9) C2) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) C2) (_ bv0 1)) true) (_ bv10 55) (_ bv9 55)) ?x5357)))
 (let ((?x5900 (ite (and (distinct ((_ extract 10 6) C2) (_ bv0 5)) true) ?x3286 (ite (and (distinct ((_ extract 5 3) C2) (_ bv0 3)) true) ?x3688 ?x5810))))
 (let ((?x4827 (ite (and (distinct ((_ extract 3 2) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 3 3) C1) (_ bv0 1)) true) (_ bv3 55) (_ bv2 55)) (ite (and (distinct ((_ extract 1 1) C1) (_ bv0 1)) true) (_ bv1 55) (_ bv0 55)))))
 (let ((?x4723 (ite (and (distinct ((_ extract 6 6) C1) (_ bv0 1)) true) (_ bv6 55) (ite (and (distinct ((_ extract 5 5) C1) (_ bv0 1)) true) (_ bv5 55) (_ bv4 55)))))
 (let ((?x5516 (ite (and (distinct ((_ extract 10 9) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) C1) (_ bv0 1)) true) (_ bv10 55) (_ bv9 55)) (ite (and (distinct ((_ extract 8 8) C1) (_ bv0 1)) true) (_ bv8 55) (_ bv7 55)))))
 (let ((?x5829 (ite (and (distinct ((_ extract 13 13) C1) (_ bv0 1)) true) (_ bv13 55) (ite (and (distinct ((_ extract 12 12) C1) (_ bv0 1)) true) (_ bv12 55) (_ bv11 55)))))
 (let ((?x5099 (ite (and (distinct ((_ extract 13 7) C1) (_ bv0 7)) true) (ite (and (distinct ((_ extract 13 11) C1) (_ bv0 3)) true) ?x5829 ?x5516) (ite (and (distinct ((_ extract 6 4) C1) (_ bv0 3)) true) ?x4723 ?x4827))))
 (let ((?x2648 (ite (and (distinct ((_ extract 17 16) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 17 17) C1) (_ bv0 1)) true) (_ bv17 55) (_ bv16 55)) (ite (and (distinct ((_ extract 15 15) C1) (_ bv0 1)) true) (_ bv15 55) (_ bv14 55)))))
 (let ((?x4708 (ite (and (distinct ((_ extract 20 20) C1) (_ bv0 1)) true) (_ bv20 55) (ite (and (distinct ((_ extract 19 19) C1) (_ bv0 1)) true) (_ bv19 55) (_ bv18 55)))))
 (let ((?x1476 (ite (and (distinct ((_ extract 24 23) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 24 24) C1) (_ bv0 1)) true) (_ bv24 55) (_ bv23 55)) (ite (and (distinct ((_ extract 22 22) C1) (_ bv0 1)) true) (_ bv22 55) (_ bv21 55)))))
 (let ((?x5108 (ite (and (distinct ((_ extract 27 27) C1) (_ bv0 1)) true) (_ bv27 55) (ite (and (distinct ((_ extract 26 26) C1) (_ bv0 1)) true) (_ bv26 55) (_ bv25 55)))))
 (let ((?x5585 (ite (and (distinct ((_ extract 27 21) C1) (_ bv0 7)) true) (ite (and (distinct ((_ extract 27 25) C1) (_ bv0 3)) true) ?x5108 ?x1476) (ite (and (distinct ((_ extract 20 18) C1) (_ bv0 3)) true) ?x4708 ?x2648))))
 (let ((?x3450 (ite (and (distinct ((_ extract 31 30) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 31 31) C1) (_ bv0 1)) true) (_ bv31 55) (_ bv30 55)) (ite (and (distinct ((_ extract 29 29) C1) (_ bv0 1)) true) (_ bv29 55) (_ bv28 55)))))
 (let ((?x2094 (ite (and (distinct ((_ extract 34 34) C1) (_ bv0 1)) true) (_ bv34 55) (ite (and (distinct ((_ extract 33 33) C1) (_ bv0 1)) true) (_ bv33 55) (_ bv32 55)))))
 (let ((?x5098 (ite (and (distinct ((_ extract 38 37) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 38 38) C1) (_ bv0 1)) true) (_ bv38 55) (_ bv37 55)) (ite (and (distinct ((_ extract 36 36) C1) (_ bv0 1)) true) (_ bv36 55) (_ bv35 55)))))
 (let ((?x5215 (ite (and (distinct ((_ extract 41 41) C1) (_ bv0 1)) true) (_ bv41 55) (ite (and (distinct ((_ extract 40 40) C1) (_ bv0 1)) true) (_ bv40 55) (_ bv39 55)))))
 (let ((?x5813 (ite (and (distinct ((_ extract 41 35) C1) (_ bv0 7)) true) (ite (and (distinct ((_ extract 41 39) C1) (_ bv0 3)) true) ?x5215 ?x5098) (ite (and (distinct ((_ extract 34 32) C1) (_ bv0 3)) true) ?x2094 ?x3450))))
 (let ((?x5102 (ite (and (distinct ((_ extract 45 44) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 45 45) C1) (_ bv0 1)) true) (_ bv45 55) (_ bv44 55)) (ite (and (distinct ((_ extract 43 43) C1) (_ bv0 1)) true) (_ bv43 55) (_ bv42 55)))))
 (let ((?x5958 (ite (and (distinct ((_ extract 48 48) C1) (_ bv0 1)) true) (_ bv48 55) (ite (and (distinct ((_ extract 47 47) C1) (_ bv0 1)) true) (_ bv47 55) (_ bv46 55)))))
 (let ((?x4159 (ite (and (distinct ((_ extract 51 51) C1) (_ bv0 1)) true) (_ bv51 55) (ite (and (distinct ((_ extract 50 50) C1) (_ bv0 1)) true) (_ bv50 55) (_ bv49 55)))))
 (let ((?x5968 (ite (and (distinct ((_ extract 54 54) C1) (_ bv0 1)) true) (_ bv54 55) (ite (and (distinct ((_ extract 53 53) C1) (_ bv0 1)) true) (_ bv53 55) (_ bv52 55)))))
 (let ((?x5886 (ite (and (distinct ((_ extract 54 49) C1) (_ bv0 6)) true) (ite (and (distinct ((_ extract 54 52) C1) (_ bv0 3)) true) ?x5968 ?x4159) (ite (and (distinct ((_ extract 48 46) C1) (_ bv0 3)) true) ?x5958 ?x5102))))
 (let ((?x4689 (ite (and (distinct ((_ extract 54 28) C1) (_ bv0 27)) true) (ite (and (distinct ((_ extract 54 42) C1) (_ bv0 13)) true) ?x5886 ?x5813) (ite (and (distinct ((_ extract 27 14) C1) (_ bv0 14)) true) ?x5585 ?x5099))))
 (let ((?x2561 (bvsub ?x4689 ?x5900)))
 (let ((?x5292 (ite (and (distinct ((_ extract 3 2) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 3 3) C1) (_ bv0 1)) true) (_ bv3 32) (_ bv2 32)) (ite (and (distinct ((_ extract 1 1) C1) (_ bv0 1)) true) (_ bv1 32) (_ bv0 32)))))
 (let ((?x5807 (ite (and (distinct ((_ extract 6 6) C1) (_ bv0 1)) true) (_ bv6 32) (ite (and (distinct ((_ extract 5 5) C1) (_ bv0 1)) true) (_ bv5 32) (_ bv4 32)))))
 (let ((?x1523 (ite (and (distinct ((_ extract 10 9) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) C1) (_ bv0 1)) true) (_ bv10 32) (_ bv9 32)) (ite (and (distinct ((_ extract 8 8) C1) (_ bv0 1)) true) (_ bv8 32) (_ bv7 32)))))
 (let ((?x4297 (ite (and (distinct ((_ extract 13 13) C1) (_ bv0 1)) true) (_ bv13 32) (ite (and (distinct ((_ extract 12 12) C1) (_ bv0 1)) true) (_ bv12 32) (_ bv11 32)))))
 (let ((?x4706 (ite (and (distinct ((_ extract 13 7) C1) (_ bv0 7)) true) (ite (and (distinct ((_ extract 13 11) C1) (_ bv0 3)) true) ?x4297 ?x1523) (ite (and (distinct ((_ extract 6 4) C1) (_ bv0 3)) true) ?x5807 ?x5292))))
 (let ((?x4164 (ite (and (distinct ((_ extract 17 16) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 17 17) C1) (_ bv0 1)) true) (_ bv17 32) (_ bv16 32)) (ite (and (distinct ((_ extract 15 15) C1) (_ bv0 1)) true) (_ bv15 32) (_ bv14 32)))))
 (let ((?x5410 (ite (and (distinct ((_ extract 20 20) C1) (_ bv0 1)) true) (_ bv20 32) (ite (and (distinct ((_ extract 19 19) C1) (_ bv0 1)) true) (_ bv19 32) (_ bv18 32)))))
 (let ((?x4710 (ite (and (distinct ((_ extract 24 23) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 24 24) C1) (_ bv0 1)) true) (_ bv24 32) (_ bv23 32)) (ite (and (distinct ((_ extract 22 22) C1) (_ bv0 1)) true) (_ bv22 32) (_ bv21 32)))))
 (let ((?x5825 (ite (and (distinct ((_ extract 27 27) C1) (_ bv0 1)) true) (_ bv27 32) (ite (and (distinct ((_ extract 26 26) C1) (_ bv0 1)) true) (_ bv26 32) (_ bv25 32)))))
 (let ((?x5383 (ite (and (distinct ((_ extract 27 21) C1) (_ bv0 7)) true) (ite (and (distinct ((_ extract 27 25) C1) (_ bv0 3)) true) ?x5825 ?x4710) (ite (and (distinct ((_ extract 20 18) C1) (_ bv0 3)) true) ?x5410 ?x4164))))
 (let ((?x5806 (ite (and (distinct ((_ extract 31 30) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 31 31) C1) (_ bv0 1)) true) (_ bv31 32) (_ bv30 32)) (ite (and (distinct ((_ extract 29 29) C1) (_ bv0 1)) true) (_ bv29 32) (_ bv28 32)))))
 (let ((?x5359 (ite (and (distinct ((_ extract 34 34) C1) (_ bv0 1)) true) (_ bv34 32) (ite (and (distinct ((_ extract 33 33) C1) (_ bv0 1)) true) (_ bv33 32) (_ bv32 32)))))
 (let ((?x4705 (ite (and (distinct ((_ extract 38 37) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 38 38) C1) (_ bv0 1)) true) (_ bv38 32) (_ bv37 32)) (ite (and (distinct ((_ extract 36 36) C1) (_ bv0 1)) true) (_ bv36 32) (_ bv35 32)))))
 (let ((?x2735 (ite (and (distinct ((_ extract 41 41) C1) (_ bv0 1)) true) (_ bv41 32) (ite (and (distinct ((_ extract 40 40) C1) (_ bv0 1)) true) (_ bv40 32) (_ bv39 32)))))
 (let ((?x5801 (ite (and (distinct ((_ extract 41 35) C1) (_ bv0 7)) true) (ite (and (distinct ((_ extract 41 39) C1) (_ bv0 3)) true) ?x2735 ?x4705) (ite (and (distinct ((_ extract 34 32) C1) (_ bv0 3)) true) ?x5359 ?x5806))))
 (let ((?x2641 (ite (and (distinct ((_ extract 45 44) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 45 45) C1) (_ bv0 1)) true) (_ bv45 32) (_ bv44 32)) (ite (and (distinct ((_ extract 43 43) C1) (_ bv0 1)) true) (_ bv43 32) (_ bv42 32)))))
 (let ((?x1454 (ite (and (distinct ((_ extract 48 48) C1) (_ bv0 1)) true) (_ bv48 32) (ite (and (distinct ((_ extract 47 47) C1) (_ bv0 1)) true) (_ bv47 32) (_ bv46 32)))))
 (let ((?x2261 (ite (and (distinct ((_ extract 51 51) C1) (_ bv0 1)) true) (_ bv51 32) (ite (and (distinct ((_ extract 50 50) C1) (_ bv0 1)) true) (_ bv50 32) (_ bv49 32)))))
 (let ((?x3280 (ite (and (distinct ((_ extract 54 54) C1) (_ bv0 1)) true) (_ bv54 32) (ite (and (distinct ((_ extract 53 53) C1) (_ bv0 1)) true) (_ bv53 32) (_ bv52 32)))))
 (let ((?x3255 (ite (and (distinct ((_ extract 54 49) C1) (_ bv0 6)) true) (ite (and (distinct ((_ extract 54 52) C1) (_ bv0 3)) true) ?x3280 ?x2261) (ite (and (distinct ((_ extract 48 46) C1) (_ bv0 3)) true) ?x1454 ?x2641))))
 (let ((?x5146 (ite (and (distinct ((_ extract 54 28) C1) (_ bv0 27)) true) (ite (and (distinct ((_ extract 54 42) C1) (_ bv0 13)) true) ?x3255 ?x5801) (ite (and (distinct ((_ extract 27 14) C1) (_ bv0 14)) true) ?x5383 ?x4706))))
 (let ((?x5828 (ite (and (distinct ((_ extract 2 2) C2) (_ bv0 1)) true) (_ bv2 32) (ite (and (distinct ((_ extract 1 1) C2) (_ bv0 1)) true) (_ bv1 32) (_ bv0 32)))))
 (let ((?x4829 (ite (and (distinct ((_ extract 5 5) C2) (_ bv0 1)) true) (_ bv5 32) (ite (and (distinct ((_ extract 4 4) C2) (_ bv0 1)) true) (_ bv4 32) (_ bv3 32)))))
 (let ((?x6040 (ite (and (distinct ((_ extract 8 8) C2) (_ bv0 1)) true) (_ bv8 32) (ite (and (distinct ((_ extract 7 7) C2) (_ bv0 1)) true) (_ bv7 32) (_ bv6 32)))))
 (let ((?x6041 (ite (and (distinct ((_ extract 10 9) C2) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) C2) (_ bv0 1)) true) (_ bv10 32) (_ bv9 32)) ?x6040)))
 (let ((?x5040 (ite (and (distinct ((_ extract 10 6) C2) (_ bv0 5)) true) ?x6041 (ite (and (distinct ((_ extract 5 3) C2) (_ bv0 3)) true) ?x4829 ?x5828))))
 (and (and (and (distinct C1 (_ bv0 55)) true) (= (bvand C1 (bvsub C1 (_ bv1 55))) (_ bv0 55))) (and (and (distinct C2 (_ bv0 11)) true) (= (bvand C2 (bvsub C2 (_ bv1 11))) (_ bv0 11))) (bvslt ?x5040 ?x5146) (not (bvult ?x2561 (_ bv55 55))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
