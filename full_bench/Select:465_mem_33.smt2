(set-info :status unknown)
(declare-fun mem0 () (_ BitVec 8))
(declare-fun C1 () (_ BitVec 41))
(declare-fun C2 () (_ BitVec 11))
(assert
 (let ((?x2021 (ite (and (distinct ((_ extract 2 2) C1) (_ bv0 1)) true) (_ bv2 32) (ite (and (distinct ((_ extract 1 1) C1) (_ bv0 1)) true) (_ bv1 32) (_ bv0 32)))))
 (let ((?x4038 (ite (and (distinct ((_ extract 5 5) C1) (_ bv0 1)) true) (_ bv5 32) (ite (and (distinct ((_ extract 4 4) C1) (_ bv0 1)) true) (_ bv4 32) (_ bv3 32)))))
 (let ((?x2759 (ite (and (distinct ((_ extract 8 8) C1) (_ bv0 1)) true) (_ bv8 32) (ite (and (distinct ((_ extract 7 7) C1) (_ bv0 1)) true) (_ bv7 32) (_ bv6 32)))))
 (let ((?x5045 (ite (and (distinct ((_ extract 10 9) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) C1) (_ bv0 1)) true) (_ bv10 32) (_ bv9 32)) ?x2759)))
 (let ((?x3812 (ite (and (distinct ((_ extract 10 6) C1) (_ bv0 5)) true) ?x5045 (ite (and (distinct ((_ extract 5 3) C1) (_ bv0 3)) true) ?x4038 ?x2021))))
 (let ((?x4253 (ite (and (distinct ((_ extract 13 13) C1) (_ bv0 1)) true) (_ bv13 32) (ite (and (distinct ((_ extract 12 12) C1) (_ bv0 1)) true) (_ bv12 32) (_ bv11 32)))))
 (let ((?x4154 (ite (and (distinct ((_ extract 15 14) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 15 15) C1) (_ bv0 1)) true) (_ bv15 32) (_ bv14 32)) ?x4253)))
 (let ((?x3766 (ite (and (distinct ((_ extract 18 18) C1) (_ bv0 1)) true) (_ bv18 32) (ite (and (distinct ((_ extract 17 17) C1) (_ bv0 1)) true) (_ bv17 32) (_ bv16 32)))))
 (let ((?x4074 (ite (and (distinct ((_ extract 20 19) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 20 20) C1) (_ bv0 1)) true) (_ bv20 32) (_ bv19 32)) ?x3766)))
 (let ((?x4928 (ite (and (distinct ((_ extract 20 11) C1) (_ bv0 10)) true) (ite (and (distinct ((_ extract 20 16) C1) (_ bv0 5)) true) ?x4074 ?x4154) ?x3812)))
 (let ((?x2818 (ite (and (distinct ((_ extract 23 23) C1) (_ bv0 1)) true) (_ bv23 32) (ite (and (distinct ((_ extract 22 22) C1) (_ bv0 1)) true) (_ bv22 32) (_ bv21 32)))))
 (let ((?x2786 (ite (and (distinct ((_ extract 25 24) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 25 25) C1) (_ bv0 1)) true) (_ bv25 32) (_ bv24 32)) ?x2818)))
 (let ((?x1962 (ite (and (distinct ((_ extract 28 28) C1) (_ bv0 1)) true) (_ bv28 32) (ite (and (distinct ((_ extract 27 27) C1) (_ bv0 1)) true) (_ bv27 32) (_ bv26 32)))))
 (let ((?x1900 (ite (and (distinct ((_ extract 30 29) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 30 30) C1) (_ bv0 1)) true) (_ bv30 32) (_ bv29 32)) ?x1962)))
 (let ((?x3479 (ite (and (distinct ((_ extract 33 33) C1) (_ bv0 1)) true) (_ bv33 32) (ite (and (distinct ((_ extract 32 32) C1) (_ bv0 1)) true) (_ bv32 32) (_ bv31 32)))))
 (let ((?x2846 (ite (and (distinct ((_ extract 35 34) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 35 35) C1) (_ bv0 1)) true) (_ bv35 32) (_ bv34 32)) ?x3479)))
 (let ((?x1146 (ite (and (distinct ((_ extract 38 38) C1) (_ bv0 1)) true) (_ bv38 32) (ite (and (distinct ((_ extract 37 37) C1) (_ bv0 1)) true) (_ bv37 32) (_ bv36 32)))))
 (let ((?x3082 (ite (and (distinct ((_ extract 40 39) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 40 40) C1) (_ bv0 1)) true) (_ bv40 32) (_ bv39 32)) ?x1146)))
 (let ((?x3209 (ite (and (distinct ((_ extract 40 31) C1) (_ bv0 10)) true) (ite (and (distinct ((_ extract 40 36) C1) (_ bv0 5)) true) ?x3082 ?x2846) (ite (and (distinct ((_ extract 30 26) C1) (_ bv0 5)) true) ?x1900 ?x2786))))
 (let ((?x1325 (ite (and (distinct ((_ extract 2 2) C2) (_ bv0 1)) true) (_ bv2 32) (ite (and (distinct ((_ extract 1 1) C2) (_ bv0 1)) true) (_ bv1 32) (_ bv0 32)))))
 (let ((?x5615 (ite (and (distinct ((_ extract 5 5) C2) (_ bv0 1)) true) (_ bv5 32) (ite (and (distinct ((_ extract 4 4) C2) (_ bv0 1)) true) (_ bv4 32) (_ bv3 32)))))
 (let ((?x2761 (ite (and (distinct ((_ extract 8 8) C2) (_ bv0 1)) true) (_ bv8 32) (ite (and (distinct ((_ extract 7 7) C2) (_ bv0 1)) true) (_ bv7 32) (_ bv6 32)))))
 (let ((?x3675 (ite (and (distinct ((_ extract 10 9) C2) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) C2) (_ bv0 1)) true) (_ bv10 32) (_ bv9 32)) ?x2761)))
 (let ((?x5254 (ite (and (distinct ((_ extract 10 6) C2) (_ bv0 5)) true) ?x3675 (ite (and (distinct ((_ extract 5 3) C2) (_ bv0 3)) true) ?x5615 ?x1325))))
 (and (and (and (distinct C1 (_ bv0 41)) true) (= (bvand C1 (bvsub C1 (_ bv1 41))) (_ bv0 41))) (and (and (distinct C2 (_ bv0 11)) true) (= (bvand C2 (bvsub C2 (_ bv1 11))) (_ bv0 11))) (bvsge ?x5254 (ite (and (distinct ((_ extract 40 21) C1) (_ bv0 20)) true) ?x3209 ?x4928)) (and (distinct mem0 mem0) true)))))))))))))))))))))))))))
(check-sat)
