(set-info :status unknown)
(declare-fun C2 () (_ BitVec 11))
(declare-fun C3 () (_ BitVec 11))
(declare-fun C () (_ BitVec 10))
(declare-fun %Op () (_ BitVec 10))
(assert
 (let ((?x4302 (bvsub C3 C2)))
 (let ((?x18279 (ite (and (distinct ((_ extract 2 2) ?x4302) (_ bv0 1)) true) (_ bv2 11) (ite (and (distinct ((_ extract 1 1) ?x4302) (_ bv0 1)) true) (_ bv1 11) (_ bv0 11)))))
 (let ((?x24431 (ite (and (distinct ((_ extract 5 5) ?x4302) (_ bv0 1)) true) (_ bv5 11) (ite (and (distinct ((_ extract 4 4) ?x4302) (_ bv0 1)) true) (_ bv4 11) (_ bv3 11)))))
 (let ((?x23054 (ite (and (distinct ((_ extract 8 8) ?x4302) (_ bv0 1)) true) (_ bv8 11) (ite (and (distinct ((_ extract 7 7) ?x4302) (_ bv0 1)) true) (_ bv7 11) (_ bv6 11)))))
 (let ((?x11146 (ite (and (distinct ((_ extract 10 9) ?x4302) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) ?x4302) (_ bv0 1)) true) (_ bv10 11) (_ bv9 11)) ?x23054)))
 (let ((?x12587 (ite (and (distinct ((_ extract 10 6) ?x4302) (_ bv0 5)) true) ?x11146 (ite (and (distinct ((_ extract 5 3) ?x4302) (_ bv0 3)) true) ?x24431 ?x18279))))
 (let ((?x20069 (ite (and (distinct ((_ extract 2 2) C) (_ bv0 1)) true) (_ bv2 11) (ite (and (distinct ((_ extract 1 1) C) (_ bv0 1)) true) (_ bv1 11) (_ bv0 11)))))
 (let ((?x4272 (ite (and (distinct ((_ extract 4 3) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 4 4) C) (_ bv0 1)) true) (_ bv4 11) (_ bv3 11)) ?x20069)))
 (let ((?x20966 (ite (and (distinct ((_ extract 7 7) C) (_ bv0 1)) true) (_ bv7 11) (ite (and (distinct ((_ extract 6 6) C) (_ bv0 1)) true) (_ bv6 11) (_ bv5 11)))))
 (let ((?x11131 (ite (and (distinct ((_ extract 9 8) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 9 9) C) (_ bv0 1)) true) (_ bv9 11) (_ bv8 11)) ?x20966)))
 (let ((?x11094 (bvsub (ite (and (distinct ((_ extract 9 5) C) (_ bv0 5)) true) ?x11131 ?x4272) ?x12587)))
 (let ((?x15078 (ite (bvsgt (_ bv0 11) ?x11094) (_ bv0 11) ?x11094)))
 (let ((?x6961 (bvsub ?x12587 (ite (and (distinct ((_ extract 9 5) C) (_ bv0 5)) true) ?x11131 ?x4272))))
 (let ((?x11542 (ite (bvsgt (_ bv0 11) ?x6961) (_ bv0 11) ?x6961)))
 (let ((?x12981 (bvxor (bvlshr (bvshl ((_ zero_extend 1) (bvand %Op C)) ?x11542) ?x15078) ?x4302)))
 (let ((?x6357 (ite (= (ite (and (distinct (bvand %Op C) (_ bv0 10)) true) (_ bv1 1) (_ bv0 1)) (_ bv1 1)) C2 C3)))
 (let ((?x16155 (ite (and (distinct ((_ extract 2 2) C) (_ bv0 1)) true) (_ bv2 32) (ite (and (distinct ((_ extract 1 1) C) (_ bv0 1)) true) (_ bv1 32) (_ bv0 32)))))
 (let ((?x869 (ite (and (distinct ((_ extract 4 3) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 4 4) C) (_ bv0 1)) true) (_ bv4 32) (_ bv3 32)) ?x16155)))
 (let ((?x19488 (ite (and (distinct ((_ extract 7 7) C) (_ bv0 1)) true) (_ bv7 32) (ite (and (distinct ((_ extract 6 6) C) (_ bv0 1)) true) (_ bv6 32) (_ bv5 32)))))
 (let ((?x2546 (ite (and (distinct ((_ extract 9 8) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 9 9) C) (_ bv0 1)) true) (_ bv9 32) (_ bv8 32)) ?x19488)))
 (and (and (and (distinct C (_ bv0 10)) true) (= (bvand C (bvsub C (_ bv1 10))) (_ bv0 10))) (and (and (distinct ?x4302 (_ bv0 11)) true) (= (bvand ?x4302 (bvsub ?x4302 (_ bv1 11))) (_ bv0 11))) (bvslt (ite (and (distinct ((_ extract 9 5) C) (_ bv0 5)) true) ?x2546 ?x869) (_ bv11 32)) (and (distinct ?x6357 (bvadd ?x12981 C2)) true)))))))))))))))))))))))
(check-sat)
