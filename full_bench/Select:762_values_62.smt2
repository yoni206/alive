(set-info :status unknown)
(declare-fun C3 () (_ BitVec 11))
(declare-fun C2 () (_ BitVec 11))
(declare-fun C () (_ BitVec 2))
(declare-fun %Op () (_ BitVec 2))
(assert
 (let ((?x4582 (bvsub C2 C3)))
 (let ((?x4388 (ite (and (distinct ((_ extract 2 2) ?x4582) (_ bv0 1)) true) (_ bv2 11) (ite (and (distinct ((_ extract 1 1) ?x4582) (_ bv0 1)) true) (_ bv1 11) (_ bv0 11)))))
 (let ((?x1627 (ite (and (distinct ((_ extract 5 5) ?x4582) (_ bv0 1)) true) (_ bv5 11) (ite (and (distinct ((_ extract 4 4) ?x4582) (_ bv0 1)) true) (_ bv4 11) (_ bv3 11)))))
 (let ((?x5435 (ite (and (distinct ((_ extract 8 8) ?x4582) (_ bv0 1)) true) (_ bv8 11) (ite (and (distinct ((_ extract 7 7) ?x4582) (_ bv0 1)) true) (_ bv7 11) (_ bv6 11)))))
 (let ((?x3355 (ite (and (distinct ((_ extract 10 9) ?x4582) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) ?x4582) (_ bv0 1)) true) (_ bv10 11) (_ bv9 11)) ?x5435)))
 (let ((?x2563 (ite (and (distinct ((_ extract 10 6) ?x4582) (_ bv0 5)) true) ?x3355 (ite (and (distinct ((_ extract 5 3) ?x4582) (_ bv0 3)) true) ?x1627 ?x4388))))
 (let ((?x4369 (bvsub (ite (and (distinct ((_ extract 1 1) C) (_ bv0 1)) true) (_ bv1 11) (_ bv0 11)) ?x2563)))
 (let ((?x8296 (ite (bvsgt (_ bv0 11) ?x4369) (_ bv0 11) ?x4369)))
 (let ((?x1837 (bvsub ?x2563 (ite (and (distinct ((_ extract 1 1) C) (_ bv0 1)) true) (_ bv1 11) (_ bv0 11)))))
 (let ((?x1957 (ite (bvsgt (_ bv0 11) ?x1837) (_ bv0 11) ?x1837)))
 (let ((?x7757 (bvxor (bvlshr (bvshl ((_ zero_extend 9) (bvand %Op C)) ?x1957) ?x8296) ?x4582)))
 (let (($x5638 (and (distinct (ite (= (ite (= (bvand %Op C) (_ bv0 2)) (_ bv1 1) (_ bv0 1)) (_ bv1 1)) C2 C3) (bvadd ?x7757 C3)) true)))
 (and (and (and (distinct C (_ bv0 2)) true) (= (bvand C (bvsub C (_ bv1 2))) (_ bv0 2))) (and (and (distinct ?x4582 (_ bv0 11)) true) (= (bvand ?x4582 (bvsub ?x4582 (_ bv1 11))) (_ bv0 11))) (bvslt (ite (and (distinct ((_ extract 1 1) C) (_ bv0 1)) true) (_ bv1 32) (_ bv0 32)) (_ bv11 32)) $x5638))))))))))))))
(check-sat)
