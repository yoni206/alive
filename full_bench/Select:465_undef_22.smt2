(set-info :status unknown)
(declare-fun C1 () (_ BitVec 23))
(declare-fun C2 () (_ BitVec 11))
(assert
 (let ((?x7785 (ite (and (distinct ((_ extract 2 2) C1) (_ bv0 1)) true) (_ bv2 11) (ite (and (distinct ((_ extract 1 1) C1) (_ bv0 1)) true) (_ bv1 11) (_ bv0 11)))))
 (let ((?x2070 (ite (and (distinct ((_ extract 5 5) C1) (_ bv0 1)) true) (_ bv5 11) (ite (and (distinct ((_ extract 4 4) C1) (_ bv0 1)) true) (_ bv4 11) (_ bv3 11)))))
 (let ((?x4692 (ite (and (distinct ((_ extract 8 8) C1) (_ bv0 1)) true) (_ bv8 11) (ite (and (distinct ((_ extract 7 7) C1) (_ bv0 1)) true) (_ bv7 11) (_ bv6 11)))))
 (let ((?x7378 (ite (and (distinct ((_ extract 11 11) C1) (_ bv0 1)) true) (_ bv11 11) (ite (and (distinct ((_ extract 10 10) C1) (_ bv0 1)) true) (_ bv10 11) (_ bv9 11)))))
 (let ((?x4578 (ite (and (distinct ((_ extract 11 6) C1) (_ bv0 6)) true) (ite (and (distinct ((_ extract 11 9) C1) (_ bv0 3)) true) ?x7378 ?x4692) (ite (and (distinct ((_ extract 5 3) C1) (_ bv0 3)) true) ?x2070 ?x7785))))
 (let ((?x9632 (ite (and (distinct ((_ extract 14 14) C1) (_ bv0 1)) true) (_ bv14 11) (ite (and (distinct ((_ extract 13 13) C1) (_ bv0 1)) true) (_ bv13 11) (_ bv12 11)))))
 (let ((?x10047 (ite (and (distinct ((_ extract 17 17) C1) (_ bv0 1)) true) (_ bv17 11) (ite (and (distinct ((_ extract 16 16) C1) (_ bv0 1)) true) (_ bv16 11) (_ bv15 11)))))
 (let ((?x15720 (ite (and (distinct ((_ extract 20 20) C1) (_ bv0 1)) true) (_ bv20 11) (ite (and (distinct ((_ extract 19 19) C1) (_ bv0 1)) true) (_ bv19 11) (_ bv18 11)))))
 (let ((?x14822 (ite (and (distinct ((_ extract 22 21) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 22 22) C1) (_ bv0 1)) true) (_ bv22 11) (_ bv21 11)) ?x15720)))
 (let ((?x11956 (ite (and (distinct ((_ extract 22 18) C1) (_ bv0 5)) true) ?x14822 (ite (and (distinct ((_ extract 17 15) C1) (_ bv0 3)) true) ?x10047 ?x9632))))
 (let ((?x4181 (ite (and (distinct ((_ extract 2 2) C2) (_ bv0 1)) true) (_ bv2 11) (ite (and (distinct ((_ extract 1 1) C2) (_ bv0 1)) true) (_ bv1 11) (_ bv0 11)))))
 (let ((?x1668 (ite (and (distinct ((_ extract 5 5) C2) (_ bv0 1)) true) (_ bv5 11) (ite (and (distinct ((_ extract 4 4) C2) (_ bv0 1)) true) (_ bv4 11) (_ bv3 11)))))
 (let ((?x19448 (ite (and (distinct ((_ extract 8 8) C2) (_ bv0 1)) true) (_ bv8 11) (ite (and (distinct ((_ extract 7 7) C2) (_ bv0 1)) true) (_ bv7 11) (_ bv6 11)))))
 (let ((?x24098 (ite (and (distinct ((_ extract 10 9) C2) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) C2) (_ bv0 1)) true) (_ bv10 11) (_ bv9 11)) ?x19448)))
 (let ((?x17577 (ite (and (distinct ((_ extract 10 6) C2) (_ bv0 5)) true) ?x24098 (ite (and (distinct ((_ extract 5 3) C2) (_ bv0 3)) true) ?x1668 ?x4181))))
 (let ((?x9536 (bvsub ?x17577 (ite (and (distinct ((_ extract 22 12) C1) (_ bv0 11)) true) ?x11956 ?x4578))))
 (let ((?x7817 (ite (and (distinct ((_ extract 2 2) C1) (_ bv0 1)) true) (_ bv2 32) (ite (and (distinct ((_ extract 1 1) C1) (_ bv0 1)) true) (_ bv1 32) (_ bv0 32)))))
 (let ((?x4344 (ite (and (distinct ((_ extract 5 5) C1) (_ bv0 1)) true) (_ bv5 32) (ite (and (distinct ((_ extract 4 4) C1) (_ bv0 1)) true) (_ bv4 32) (_ bv3 32)))))
 (let ((?x5529 (ite (and (distinct ((_ extract 8 8) C1) (_ bv0 1)) true) (_ bv8 32) (ite (and (distinct ((_ extract 7 7) C1) (_ bv0 1)) true) (_ bv7 32) (_ bv6 32)))))
 (let ((?x7142 (ite (and (distinct ((_ extract 11 11) C1) (_ bv0 1)) true) (_ bv11 32) (ite (and (distinct ((_ extract 10 10) C1) (_ bv0 1)) true) (_ bv10 32) (_ bv9 32)))))
 (let ((?x7326 (ite (and (distinct ((_ extract 11 6) C1) (_ bv0 6)) true) (ite (and (distinct ((_ extract 11 9) C1) (_ bv0 3)) true) ?x7142 ?x5529) (ite (and (distinct ((_ extract 5 3) C1) (_ bv0 3)) true) ?x4344 ?x7817))))
 (let ((?x5338 (ite (and (distinct ((_ extract 14 14) C1) (_ bv0 1)) true) (_ bv14 32) (ite (and (distinct ((_ extract 13 13) C1) (_ bv0 1)) true) (_ bv13 32) (_ bv12 32)))))
 (let ((?x14215 (ite (and (distinct ((_ extract 17 17) C1) (_ bv0 1)) true) (_ bv17 32) (ite (and (distinct ((_ extract 16 16) C1) (_ bv0 1)) true) (_ bv16 32) (_ bv15 32)))))
 (let ((?x18499 (ite (and (distinct ((_ extract 20 20) C1) (_ bv0 1)) true) (_ bv20 32) (ite (and (distinct ((_ extract 19 19) C1) (_ bv0 1)) true) (_ bv19 32) (_ bv18 32)))))
 (let ((?x10218 (ite (and (distinct ((_ extract 22 21) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 22 22) C1) (_ bv0 1)) true) (_ bv22 32) (_ bv21 32)) ?x18499)))
 (let ((?x2398 (ite (and (distinct ((_ extract 22 18) C1) (_ bv0 5)) true) ?x10218 (ite (and (distinct ((_ extract 17 15) C1) (_ bv0 3)) true) ?x14215 ?x5338))))
 (let ((?x19906 (ite (and (distinct ((_ extract 2 2) C2) (_ bv0 1)) true) (_ bv2 32) (ite (and (distinct ((_ extract 1 1) C2) (_ bv0 1)) true) (_ bv1 32) (_ bv0 32)))))
 (let ((?x6536 (ite (and (distinct ((_ extract 5 5) C2) (_ bv0 1)) true) (_ bv5 32) (ite (and (distinct ((_ extract 4 4) C2) (_ bv0 1)) true) (_ bv4 32) (_ bv3 32)))))
 (let ((?x10868 (ite (and (distinct ((_ extract 8 8) C2) (_ bv0 1)) true) (_ bv8 32) (ite (and (distinct ((_ extract 7 7) C2) (_ bv0 1)) true) (_ bv7 32) (_ bv6 32)))))
 (let ((?x18153 (ite (and (distinct ((_ extract 10 9) C2) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) C2) (_ bv0 1)) true) (_ bv10 32) (_ bv9 32)) ?x10868)))
 (let ((?x15791 (ite (and (distinct ((_ extract 10 6) C2) (_ bv0 5)) true) ?x18153 (ite (and (distinct ((_ extract 5 3) C2) (_ bv0 3)) true) ?x6536 ?x19906))))
 (and (and (and (distinct C1 (_ bv0 23)) true) (= (bvand C1 (bvsub C1 (_ bv1 23))) (_ bv0 23))) (and (and (distinct C2 (_ bv0 11)) true) (= (bvand C2 (bvsub C2 (_ bv1 11))) (_ bv0 11))) (bvsge ?x15791 (ite (and (distinct ((_ extract 22 12) C1) (_ bv0 11)) true) ?x2398 ?x7326)) (not (bvult ?x9536 (_ bv11 11))))))))))))))))))))))))))))))))))))
(check-sat)
