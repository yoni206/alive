(set-info :status unknown)
(declare-fun C2 () (_ BitVec 11))
(declare-fun C1 () (_ BitVec 39))
(assert
 (let ((?x4255 (ite (and (distinct ((_ extract 2 2) C2) (_ bv0 1)) true) (_ bv2 39) (ite (and (distinct ((_ extract 1 1) C2) (_ bv0 1)) true) (_ bv1 39) (_ bv0 39)))))
 (let ((?x2056 (ite (and (distinct ((_ extract 5 5) C2) (_ bv0 1)) true) (_ bv5 39) (ite (and (distinct ((_ extract 4 4) C2) (_ bv0 1)) true) (_ bv4 39) (_ bv3 39)))))
 (let ((?x4355 (ite (and (distinct ((_ extract 8 8) C2) (_ bv0 1)) true) (_ bv8 39) (ite (and (distinct ((_ extract 7 7) C2) (_ bv0 1)) true) (_ bv7 39) (_ bv6 39)))))
 (let ((?x5379 (ite (and (distinct ((_ extract 10 9) C2) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) C2) (_ bv0 1)) true) (_ bv10 39) (_ bv9 39)) ?x4355)))
 (let ((?x2791 (ite (and (distinct ((_ extract 10 6) C2) (_ bv0 5)) true) ?x5379 (ite (and (distinct ((_ extract 5 3) C2) (_ bv0 3)) true) ?x2056 ?x4255))))
 (let ((?x3577 (ite (and (distinct ((_ extract 2 2) C1) (_ bv0 1)) true) (_ bv2 39) (ite (and (distinct ((_ extract 1 1) C1) (_ bv0 1)) true) (_ bv1 39) (_ bv0 39)))))
 (let ((?x2817 (ite (and (distinct ((_ extract 4 3) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 4 4) C1) (_ bv0 1)) true) (_ bv4 39) (_ bv3 39)) ?x3577)))
 (let ((?x2516 (ite (and (distinct ((_ extract 7 7) C1) (_ bv0 1)) true) (_ bv7 39) (ite (and (distinct ((_ extract 6 6) C1) (_ bv0 1)) true) (_ bv6 39) (_ bv5 39)))))
 (let ((?x2355 (ite (and (distinct ((_ extract 9 8) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 9 9) C1) (_ bv0 1)) true) (_ bv9 39) (_ bv8 39)) ?x2516)))
 (let ((?x4830 (ite (and (distinct ((_ extract 12 12) C1) (_ bv0 1)) true) (_ bv12 39) (ite (and (distinct ((_ extract 11 11) C1) (_ bv0 1)) true) (_ bv11 39) (_ bv10 39)))))
 (let ((?x2096 (ite (and (distinct ((_ extract 14 13) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 14 14) C1) (_ bv0 1)) true) (_ bv14 39) (_ bv13 39)) ?x4830)))
 (let ((?x1414 (ite (and (distinct ((_ extract 17 17) C1) (_ bv0 1)) true) (_ bv17 39) (ite (and (distinct ((_ extract 16 16) C1) (_ bv0 1)) true) (_ bv16 39) (_ bv15 39)))))
 (let ((?x1677 (ite (and (distinct ((_ extract 19 18) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 19 19) C1) (_ bv0 1)) true) (_ bv19 39) (_ bv18 39)) ?x1414)))
 (let ((?x3021 (ite (and (distinct ((_ extract 19 10) C1) (_ bv0 10)) true) (ite (and (distinct ((_ extract 19 15) C1) (_ bv0 5)) true) ?x1677 ?x2096) (ite (and (distinct ((_ extract 9 5) C1) (_ bv0 5)) true) ?x2355 ?x2817))))
 (let ((?x1379 (ite (and (distinct ((_ extract 22 22) C1) (_ bv0 1)) true) (_ bv22 39) (ite (and (distinct ((_ extract 21 21) C1) (_ bv0 1)) true) (_ bv21 39) (_ bv20 39)))))
 (let ((?x5135 (ite (and (distinct ((_ extract 24 23) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 24 24) C1) (_ bv0 1)) true) (_ bv24 39) (_ bv23 39)) ?x1379)))
 (let ((?x1721 (ite (and (distinct ((_ extract 27 27) C1) (_ bv0 1)) true) (_ bv27 39) (ite (and (distinct ((_ extract 26 26) C1) (_ bv0 1)) true) (_ bv26 39) (_ bv25 39)))))
 (let ((?x4931 (ite (and (distinct ((_ extract 29 28) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 29 29) C1) (_ bv0 1)) true) (_ bv29 39) (_ bv28 39)) ?x1721)))
 (let ((?x5383 (ite (and (distinct ((_ extract 32 32) C1) (_ bv0 1)) true) (_ bv32 39) (ite (and (distinct ((_ extract 31 31) C1) (_ bv0 1)) true) (_ bv31 39) (_ bv30 39)))))
 (let ((?x5197 (ite (and (distinct ((_ extract 34 33) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 34 34) C1) (_ bv0 1)) true) (_ bv34 39) (_ bv33 39)) ?x5383)))
 (let ((?x3820 (ite (and (distinct ((_ extract 38 37) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 38 38) C1) (_ bv0 1)) true) (_ bv38 39) (_ bv37 39)) (ite (and (distinct ((_ extract 36 36) C1) (_ bv0 1)) true) (_ bv36 39) (_ bv35 39)))))
 (let ((?x3132 (ite (and (distinct ((_ extract 38 30) C1) (_ bv0 9)) true) (ite (and (distinct ((_ extract 38 35) C1) (_ bv0 4)) true) ?x3820 ?x5197) (ite (and (distinct ((_ extract 29 25) C1) (_ bv0 5)) true) ?x4931 ?x5135))))
 (let ((?x4476 (bvsub (ite (and (distinct ((_ extract 38 20) C1) (_ bv0 19)) true) ?x3132 ?x3021) ?x2791)))
 (let ((?x3508 (ite (and (distinct ((_ extract 2 2) C1) (_ bv0 1)) true) (_ bv2 32) (ite (and (distinct ((_ extract 1 1) C1) (_ bv0 1)) true) (_ bv1 32) (_ bv0 32)))))
 (let ((?x1931 (ite (and (distinct ((_ extract 4 3) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 4 4) C1) (_ bv0 1)) true) (_ bv4 32) (_ bv3 32)) ?x3508)))
 (let ((?x5492 (ite (and (distinct ((_ extract 7 7) C1) (_ bv0 1)) true) (_ bv7 32) (ite (and (distinct ((_ extract 6 6) C1) (_ bv0 1)) true) (_ bv6 32) (_ bv5 32)))))
 (let ((?x4084 (ite (and (distinct ((_ extract 9 8) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 9 9) C1) (_ bv0 1)) true) (_ bv9 32) (_ bv8 32)) ?x5492)))
 (let ((?x4878 (ite (and (distinct ((_ extract 12 12) C1) (_ bv0 1)) true) (_ bv12 32) (ite (and (distinct ((_ extract 11 11) C1) (_ bv0 1)) true) (_ bv11 32) (_ bv10 32)))))
 (let ((?x4695 (ite (and (distinct ((_ extract 14 13) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 14 14) C1) (_ bv0 1)) true) (_ bv14 32) (_ bv13 32)) ?x4878)))
 (let ((?x4222 (ite (and (distinct ((_ extract 17 17) C1) (_ bv0 1)) true) (_ bv17 32) (ite (and (distinct ((_ extract 16 16) C1) (_ bv0 1)) true) (_ bv16 32) (_ bv15 32)))))
 (let ((?x4168 (ite (and (distinct ((_ extract 19 18) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 19 19) C1) (_ bv0 1)) true) (_ bv19 32) (_ bv18 32)) ?x4222)))
 (let ((?x4331 (ite (and (distinct ((_ extract 19 10) C1) (_ bv0 10)) true) (ite (and (distinct ((_ extract 19 15) C1) (_ bv0 5)) true) ?x4168 ?x4695) (ite (and (distinct ((_ extract 9 5) C1) (_ bv0 5)) true) ?x4084 ?x1931))))
 (let ((?x2543 (ite (and (distinct ((_ extract 22 22) C1) (_ bv0 1)) true) (_ bv22 32) (ite (and (distinct ((_ extract 21 21) C1) (_ bv0 1)) true) (_ bv21 32) (_ bv20 32)))))
 (let ((?x4602 (ite (and (distinct ((_ extract 24 23) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 24 24) C1) (_ bv0 1)) true) (_ bv24 32) (_ bv23 32)) ?x2543)))
 (let ((?x2383 (ite (and (distinct ((_ extract 27 27) C1) (_ bv0 1)) true) (_ bv27 32) (ite (and (distinct ((_ extract 26 26) C1) (_ bv0 1)) true) (_ bv26 32) (_ bv25 32)))))
 (let ((?x2379 (ite (and (distinct ((_ extract 29 28) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 29 29) C1) (_ bv0 1)) true) (_ bv29 32) (_ bv28 32)) ?x2383)))
 (let ((?x1477 (ite (and (distinct ((_ extract 32 32) C1) (_ bv0 1)) true) (_ bv32 32) (ite (and (distinct ((_ extract 31 31) C1) (_ bv0 1)) true) (_ bv31 32) (_ bv30 32)))))
 (let ((?x1466 (ite (and (distinct ((_ extract 34 33) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 34 34) C1) (_ bv0 1)) true) (_ bv34 32) (_ bv33 32)) ?x1477)))
 (let ((?x2326 (ite (and (distinct ((_ extract 38 37) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 38 38) C1) (_ bv0 1)) true) (_ bv38 32) (_ bv37 32)) (ite (and (distinct ((_ extract 36 36) C1) (_ bv0 1)) true) (_ bv36 32) (_ bv35 32)))))
 (let ((?x1241 (ite (and (distinct ((_ extract 38 30) C1) (_ bv0 9)) true) (ite (and (distinct ((_ extract 38 35) C1) (_ bv0 4)) true) ?x2326 ?x1466) (ite (and (distinct ((_ extract 29 25) C1) (_ bv0 5)) true) ?x2379 ?x4602))))
 (let ((?x3372 (ite (and (distinct ((_ extract 2 2) C2) (_ bv0 1)) true) (_ bv2 32) (ite (and (distinct ((_ extract 1 1) C2) (_ bv0 1)) true) (_ bv1 32) (_ bv0 32)))))
 (let ((?x2641 (ite (and (distinct ((_ extract 5 5) C2) (_ bv0 1)) true) (_ bv5 32) (ite (and (distinct ((_ extract 4 4) C2) (_ bv0 1)) true) (_ bv4 32) (_ bv3 32)))))
 (let ((?x2863 (ite (and (distinct ((_ extract 8 8) C2) (_ bv0 1)) true) (_ bv8 32) (ite (and (distinct ((_ extract 7 7) C2) (_ bv0 1)) true) (_ bv7 32) (_ bv6 32)))))
 (let ((?x2694 (ite (and (distinct ((_ extract 10 9) C2) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) C2) (_ bv0 1)) true) (_ bv10 32) (_ bv9 32)) ?x2863)))
 (let ((?x1861 (ite (and (distinct ((_ extract 10 6) C2) (_ bv0 5)) true) ?x2694 (ite (and (distinct ((_ extract 5 3) C2) (_ bv0 3)) true) ?x2641 ?x3372))))
 (and (and (and (distinct C1 (_ bv0 39)) true) (= (bvand C1 (bvsub C1 (_ bv1 39))) (_ bv0 39))) (and (and (distinct C2 (_ bv0 11)) true) (= (bvand C2 (bvsub C2 (_ bv1 11))) (_ bv0 11))) (bvslt ?x1861 (ite (and (distinct ((_ extract 38 20) C1) (_ bv0 19)) true) ?x1241 ?x4331)) (not (bvult ?x4476 (_ bv39 39))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
