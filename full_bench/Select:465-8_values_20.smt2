(set-info :status unknown)
(declare-fun %Y () (_ BitVec 11))
(declare-fun C2 () (_ BitVec 11))
(declare-fun C1 () (_ BitVec 22))
(declare-fun %X () (_ BitVec 22))
(assert
 (let ((?x19996 (ite (and (distinct ((_ extract 2 2) C2) (_ bv0 1)) true) (_ bv2 22) (ite (and (distinct ((_ extract 1 1) C2) (_ bv0 1)) true) (_ bv1 22) (_ bv0 22)))))
 (let ((?x4519 (ite (and (distinct ((_ extract 5 5) C2) (_ bv0 1)) true) (_ bv5 22) (ite (and (distinct ((_ extract 4 4) C2) (_ bv0 1)) true) (_ bv4 22) (_ bv3 22)))))
 (let ((?x3358 (ite (and (distinct ((_ extract 8 8) C2) (_ bv0 1)) true) (_ bv8 22) (ite (and (distinct ((_ extract 7 7) C2) (_ bv0 1)) true) (_ bv7 22) (_ bv6 22)))))
 (let ((?x23786 (ite (and (distinct ((_ extract 10 9) C2) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) C2) (_ bv0 1)) true) (_ bv10 22) (_ bv9 22)) ?x3358)))
 (let ((?x19738 (ite (and (distinct ((_ extract 10 6) C2) (_ bv0 5)) true) ?x23786 (ite (and (distinct ((_ extract 5 3) C2) (_ bv0 3)) true) ?x4519 ?x19996))))
 (let ((?x23404 (ite (and (distinct ((_ extract 2 2) C1) (_ bv0 1)) true) (_ bv2 22) (ite (and (distinct ((_ extract 1 1) C1) (_ bv0 1)) true) (_ bv1 22) (_ bv0 22)))))
 (let ((?x17245 (ite (and (distinct ((_ extract 5 5) C1) (_ bv0 1)) true) (_ bv5 22) (ite (and (distinct ((_ extract 4 4) C1) (_ bv0 1)) true) (_ bv4 22) (_ bv3 22)))))
 (let ((?x2057 (ite (and (distinct ((_ extract 8 8) C1) (_ bv0 1)) true) (_ bv8 22) (ite (and (distinct ((_ extract 7 7) C1) (_ bv0 1)) true) (_ bv7 22) (_ bv6 22)))))
 (let ((?x2051 (ite (and (distinct ((_ extract 10 9) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) C1) (_ bv0 1)) true) (_ bv10 22) (_ bv9 22)) ?x2057)))
 (let ((?x2304 (ite (and (distinct ((_ extract 10 6) C1) (_ bv0 5)) true) ?x2051 (ite (and (distinct ((_ extract 5 3) C1) (_ bv0 3)) true) ?x17245 ?x23404))))
 (let ((?x3060 (ite (and (distinct ((_ extract 13 13) C1) (_ bv0 1)) true) (_ bv13 22) (ite (and (distinct ((_ extract 12 12) C1) (_ bv0 1)) true) (_ bv12 22) (_ bv11 22)))))
 (let ((?x11184 (ite (and (distinct ((_ extract 16 16) C1) (_ bv0 1)) true) (_ bv16 22) (ite (and (distinct ((_ extract 15 15) C1) (_ bv0 1)) true) (_ bv15 22) (_ bv14 22)))))
 (let ((?x14461 (ite (and (distinct ((_ extract 19 19) C1) (_ bv0 1)) true) (_ bv19 22) (ite (and (distinct ((_ extract 18 18) C1) (_ bv0 1)) true) (_ bv18 22) (_ bv17 22)))))
 (let ((?x3837 (ite (and (distinct ((_ extract 21 20) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 21 21) C1) (_ bv0 1)) true) (_ bv21 22) (_ bv20 22)) ?x14461)))
 (let ((?x7121 (ite (and (distinct ((_ extract 21 17) C1) (_ bv0 5)) true) ?x3837 (ite (and (distinct ((_ extract 16 14) C1) (_ bv0 3)) true) ?x11184 ?x3060))))
 (let ((?x7042 (bvsub (ite (and (distinct ((_ extract 21 11) C1) (_ bv0 11)) true) ?x7121 ?x2304) ?x19738)))
 (let ((?x3747 (bvand %X C1)))
 (let ((?x5776 (bvor %Y C2)))
 (let (($x13378 (and (distinct (ite (= (ite (and (distinct ?x3747 (_ bv0 22)) true) (_ bv1 1) (_ bv0 1)) (_ bv1 1)) ?x5776 %Y) (bvor ((_ extract 10 0) (bvlshr ?x3747 ?x7042)) %Y)) true)))
 (let ((?x8850 (ite (and (distinct ((_ extract 2 2) C1) (_ bv0 1)) true) (_ bv2 32) (ite (and (distinct ((_ extract 1 1) C1) (_ bv0 1)) true) (_ bv1 32) (_ bv0 32)))))
 (let ((?x10417 (ite (and (distinct ((_ extract 5 5) C1) (_ bv0 1)) true) (_ bv5 32) (ite (and (distinct ((_ extract 4 4) C1) (_ bv0 1)) true) (_ bv4 32) (_ bv3 32)))))
 (let ((?x8066 (ite (and (distinct ((_ extract 8 8) C1) (_ bv0 1)) true) (_ bv8 32) (ite (and (distinct ((_ extract 7 7) C1) (_ bv0 1)) true) (_ bv7 32) (_ bv6 32)))))
 (let ((?x7288 (ite (and (distinct ((_ extract 10 9) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) C1) (_ bv0 1)) true) (_ bv10 32) (_ bv9 32)) ?x8066)))
 (let ((?x13928 (ite (and (distinct ((_ extract 10 6) C1) (_ bv0 5)) true) ?x7288 (ite (and (distinct ((_ extract 5 3) C1) (_ bv0 3)) true) ?x10417 ?x8850))))
 (let ((?x18337 (ite (and (distinct ((_ extract 13 13) C1) (_ bv0 1)) true) (_ bv13 32) (ite (and (distinct ((_ extract 12 12) C1) (_ bv0 1)) true) (_ bv12 32) (_ bv11 32)))))
 (let ((?x11806 (ite (and (distinct ((_ extract 16 16) C1) (_ bv0 1)) true) (_ bv16 32) (ite (and (distinct ((_ extract 15 15) C1) (_ bv0 1)) true) (_ bv15 32) (_ bv14 32)))))
 (let ((?x4170 (ite (and (distinct ((_ extract 19 19) C1) (_ bv0 1)) true) (_ bv19 32) (ite (and (distinct ((_ extract 18 18) C1) (_ bv0 1)) true) (_ bv18 32) (_ bv17 32)))))
 (let ((?x5523 (ite (and (distinct ((_ extract 21 20) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 21 21) C1) (_ bv0 1)) true) (_ bv21 32) (_ bv20 32)) ?x4170)))
 (let ((?x5747 (ite (and (distinct ((_ extract 21 17) C1) (_ bv0 5)) true) ?x5523 (ite (and (distinct ((_ extract 16 14) C1) (_ bv0 3)) true) ?x11806 ?x18337))))
 (let ((?x23458 (ite (and (distinct ((_ extract 2 2) C2) (_ bv0 1)) true) (_ bv2 32) (ite (and (distinct ((_ extract 1 1) C2) (_ bv0 1)) true) (_ bv1 32) (_ bv0 32)))))
 (let ((?x18306 (ite (and (distinct ((_ extract 5 5) C2) (_ bv0 1)) true) (_ bv5 32) (ite (and (distinct ((_ extract 4 4) C2) (_ bv0 1)) true) (_ bv4 32) (_ bv3 32)))))
 (let ((?x13190 (ite (and (distinct ((_ extract 8 8) C2) (_ bv0 1)) true) (_ bv8 32) (ite (and (distinct ((_ extract 7 7) C2) (_ bv0 1)) true) (_ bv7 32) (_ bv6 32)))))
 (let ((?x23273 (ite (and (distinct ((_ extract 10 9) C2) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) C2) (_ bv0 1)) true) (_ bv10 32) (_ bv9 32)) ?x13190)))
 (let ((?x9017 (ite (and (distinct ((_ extract 10 6) C2) (_ bv0 5)) true) ?x23273 (ite (and (distinct ((_ extract 5 3) C2) (_ bv0 3)) true) ?x18306 ?x23458))))
 (and (and (and (distinct C1 (_ bv0 22)) true) (= (bvand C1 (bvsub C1 (_ bv1 22))) (_ bv0 22))) (and (and (distinct C2 (_ bv0 11)) true) (= (bvand C2 (bvsub C2 (_ bv1 11))) (_ bv0 11))) (bvslt ?x9017 (ite (and (distinct ((_ extract 21 11) C1) (_ bv0 11)) true) ?x5747 ?x13928)) $x13378))))))))))))))))))))))))))))))))))))
(check-sat)
