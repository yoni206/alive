(set-info :source |
 Generated by Alive 0.1
 More info in N. P. Lopes, D. Menendez, S. Nagarakatte, J. Regehr.
 Provably Correct Peephole Optimizations with Alive. In PLDI'15.
|)

(set-info :status unknown)
(declare-fun C () (_ BitVec 42))
(declare-fun %Op0 () (_ BitVec 42))
(declare-fun |ana_ComputeNumSignBits(%Op0)| () (_ BitVec 42))
(assert
 (let ((?x451602 (bvshl %Op0 C)))
 (let (($x448439 (and (distinct ?x451602 ?x451602) true)))
 (let ((?x482488 ((_ extract 41 41) |ana_ComputeNumSignBits(%Op0)|)))
 (let ((?x482611 (ite (= ((_ extract 1 1) |ana_ComputeNumSignBits(%Op0)|) ?x482488) (ite (= ((_ extract 0 0) |ana_ComputeNumSignBits(%Op0)|) ?x482488) (_ bv42 42) (_ bv41 42)) (_ bv40 42))))
 (let ((?x482298 (ite (= ((_ extract 3 3) |ana_ComputeNumSignBits(%Op0)|) ?x482488) (ite (= ((_ extract 2 2) |ana_ComputeNumSignBits(%Op0)|) ?x482488) ?x482611 (_ bv39 42)) (_ bv38 42))))
 (let ((?x482628 (ite (= ((_ extract 5 5) |ana_ComputeNumSignBits(%Op0)|) ?x482488) (ite (= ((_ extract 4 4) |ana_ComputeNumSignBits(%Op0)|) ?x482488) ?x482298 (_ bv37 42)) (_ bv36 42))))
 (let ((?x482624 (ite (= ((_ extract 7 7) |ana_ComputeNumSignBits(%Op0)|) ?x482488) (ite (= ((_ extract 6 6) |ana_ComputeNumSignBits(%Op0)|) ?x482488) ?x482628 (_ bv35 42)) (_ bv34 42))))
 (let ((?x482271 (ite (= ((_ extract 9 9) |ana_ComputeNumSignBits(%Op0)|) ?x482488) (ite (= ((_ extract 8 8) |ana_ComputeNumSignBits(%Op0)|) ?x482488) ?x482624 (_ bv33 42)) (_ bv32 42))))
 (let ((?x482637 (ite (= ((_ extract 11 11) |ana_ComputeNumSignBits(%Op0)|) ?x482488) (ite (= ((_ extract 10 10) |ana_ComputeNumSignBits(%Op0)|) ?x482488) ?x482271 (_ bv31 42)) (_ bv30 42))))
 (let ((?x482644 (ite (= ((_ extract 13 13) |ana_ComputeNumSignBits(%Op0)|) ?x482488) (ite (= ((_ extract 12 12) |ana_ComputeNumSignBits(%Op0)|) ?x482488) ?x482637 (_ bv29 42)) (_ bv28 42))))
 (let ((?x482261 (ite (= ((_ extract 15 15) |ana_ComputeNumSignBits(%Op0)|) ?x482488) (ite (= ((_ extract 14 14) |ana_ComputeNumSignBits(%Op0)|) ?x482488) ?x482644 (_ bv27 42)) (_ bv26 42))))
 (let ((?x482654 (ite (= ((_ extract 17 17) |ana_ComputeNumSignBits(%Op0)|) ?x482488) (ite (= ((_ extract 16 16) |ana_ComputeNumSignBits(%Op0)|) ?x482488) ?x482261 (_ bv25 42)) (_ bv24 42))))
 (let ((?x482650 (ite (= ((_ extract 19 19) |ana_ComputeNumSignBits(%Op0)|) ?x482488) (ite (= ((_ extract 18 18) |ana_ComputeNumSignBits(%Op0)|) ?x482488) ?x482654 (_ bv23 42)) (_ bv22 42))))
 (let ((?x482343 (ite (= ((_ extract 21 21) |ana_ComputeNumSignBits(%Op0)|) ?x482488) (ite (= ((_ extract 20 20) |ana_ComputeNumSignBits(%Op0)|) ?x482488) ?x482650 (_ bv21 42)) (_ bv20 42))))
 (let ((?x482667 (ite (= ((_ extract 23 23) |ana_ComputeNumSignBits(%Op0)|) ?x482488) (ite (= ((_ extract 22 22) |ana_ComputeNumSignBits(%Op0)|) ?x482488) ?x482343 (_ bv19 42)) (_ bv18 42))))
 (let ((?x482643 (ite (= ((_ extract 25 25) |ana_ComputeNumSignBits(%Op0)|) ?x482488) (ite (= ((_ extract 24 24) |ana_ComputeNumSignBits(%Op0)|) ?x482488) ?x482667 (_ bv17 42)) (_ bv16 42))))
 (let ((?x482325 (ite (= ((_ extract 27 27) |ana_ComputeNumSignBits(%Op0)|) ?x482488) (ite (= ((_ extract 26 26) |ana_ComputeNumSignBits(%Op0)|) ?x482488) ?x482643 (_ bv15 42)) (_ bv14 42))))
 (let ((?x482683 (ite (= ((_ extract 29 29) |ana_ComputeNumSignBits(%Op0)|) ?x482488) (ite (= ((_ extract 28 28) |ana_ComputeNumSignBits(%Op0)|) ?x482488) ?x482325 (_ bv13 42)) (_ bv12 42))))
 (let ((?x482625 (ite (= ((_ extract 31 31) |ana_ComputeNumSignBits(%Op0)|) ?x482488) (ite (= ((_ extract 30 30) |ana_ComputeNumSignBits(%Op0)|) ?x482488) ?x482683 (_ bv11 42)) (_ bv10 42))))
 (let ((?x482320 (ite (= ((_ extract 33 33) |ana_ComputeNumSignBits(%Op0)|) ?x482488) (ite (= ((_ extract 32 32) |ana_ComputeNumSignBits(%Op0)|) ?x482488) ?x482625 (_ bv9 42)) (_ bv8 42))))
 (let ((?x482689 (ite (= ((_ extract 35 35) |ana_ComputeNumSignBits(%Op0)|) ?x482488) (ite (= ((_ extract 34 34) |ana_ComputeNumSignBits(%Op0)|) ?x482488) ?x482320 (_ bv7 42)) (_ bv6 42))))
 (let ((?x482696 (ite (= ((_ extract 37 37) |ana_ComputeNumSignBits(%Op0)|) ?x482488) (ite (= ((_ extract 36 36) |ana_ComputeNumSignBits(%Op0)|) ?x482488) ?x482689 (_ bv5 42)) (_ bv4 42))))
 (let ((?x482351 (ite (= ((_ extract 39 39) |ana_ComputeNumSignBits(%Op0)|) ?x482488) (ite (= ((_ extract 38 38) |ana_ComputeNumSignBits(%Op0)|) ?x482488) ?x482696 (_ bv3 42)) (_ bv2 42))))
 (let (($x482529 (bvsgt (ite (= ((_ extract 40 40) |ana_ComputeNumSignBits(%Op0)|) ?x482488) ?x482351 (_ bv1 42)) C)))
 (let ((?x482714 (ite (= ((_ extract 1 1) %Op0) ((_ extract 41 41) %Op0)) (ite (= ((_ extract 0 0) %Op0) ((_ extract 41 41) %Op0)) (_ bv42 42) (_ bv41 42)) (_ bv40 42))))
 (let ((?x482888 (ite (= ((_ extract 3 3) %Op0) ((_ extract 41 41) %Op0)) (ite (= ((_ extract 2 2) %Op0) ((_ extract 41 41) %Op0)) ?x482714 (_ bv39 42)) (_ bv38 42))))
 (let ((?x482519 (ite (= ((_ extract 5 5) %Op0) ((_ extract 41 41) %Op0)) (ite (= ((_ extract 4 4) %Op0) ((_ extract 41 41) %Op0)) ?x482888 (_ bv37 42)) (_ bv36 42))))
 (let ((?x482743 (ite (= ((_ extract 7 7) %Op0) ((_ extract 41 41) %Op0)) (ite (= ((_ extract 6 6) %Op0) ((_ extract 41 41) %Op0)) ?x482519 (_ bv35 42)) (_ bv34 42))))
 (let ((?x482901 (ite (= ((_ extract 9 9) %Op0) ((_ extract 41 41) %Op0)) (ite (= ((_ extract 8 8) %Op0) ((_ extract 41 41) %Op0)) ?x482743 (_ bv33 42)) (_ bv32 42))))
 (let ((?x482573 (ite (= ((_ extract 11 11) %Op0) ((_ extract 41 41) %Op0)) (ite (= ((_ extract 10 10) %Op0) ((_ extract 41 41) %Op0)) ?x482901 (_ bv31 42)) (_ bv30 42))))
 (let ((?x482767 (ite (= ((_ extract 13 13) %Op0) ((_ extract 41 41) %Op0)) (ite (= ((_ extract 12 12) %Op0) ((_ extract 41 41) %Op0)) ?x482573 (_ bv29 42)) (_ bv28 42))))
 (let ((?x482914 (ite (= ((_ extract 15 15) %Op0) ((_ extract 41 41) %Op0)) (ite (= ((_ extract 14 14) %Op0) ((_ extract 41 41) %Op0)) ?x482767 (_ bv27 42)) (_ bv26 42))))
 (let ((?x482698 (ite (= ((_ extract 17 17) %Op0) ((_ extract 41 41) %Op0)) (ite (= ((_ extract 16 16) %Op0) ((_ extract 41 41) %Op0)) ?x482914 (_ bv25 42)) (_ bv24 42))))
 (let ((?x482931 (ite (= ((_ extract 19 19) %Op0) ((_ extract 41 41) %Op0)) (ite (= ((_ extract 18 18) %Op0) ((_ extract 41 41) %Op0)) ?x482698 (_ bv23 42)) (_ bv22 42))))
 (let ((?x482704 (ite (= ((_ extract 21 21) %Op0) ((_ extract 41 41) %Op0)) (ite (= ((_ extract 20 20) %Op0) ((_ extract 41 41) %Op0)) ?x482931 (_ bv21 42)) (_ bv20 42))))
 (let ((?x482917 (ite (= ((_ extract 23 23) %Op0) ((_ extract 41 41) %Op0)) (ite (= ((_ extract 22 22) %Op0) ((_ extract 41 41) %Op0)) ?x482704 (_ bv19 42)) (_ bv18 42))))
 (let ((?x482944 (ite (= ((_ extract 25 25) %Op0) ((_ extract 41 41) %Op0)) (ite (= ((_ extract 24 24) %Op0) ((_ extract 41 41) %Op0)) ?x482917 (_ bv17 42)) (_ bv16 42))))
 (let ((?x482555 (ite (= ((_ extract 27 27) %Op0) ((_ extract 41 41) %Op0)) (ite (= ((_ extract 26 26) %Op0) ((_ extract 41 41) %Op0)) ?x482944 (_ bv15 42)) (_ bv14 42))))
 (let ((?x482952 (ite (= ((_ extract 29 29) %Op0) ((_ extract 41 41) %Op0)) (ite (= ((_ extract 28 28) %Op0) ((_ extract 41 41) %Op0)) ?x482555 (_ bv13 42)) (_ bv12 42))))
 (let ((?x482960 (ite (= ((_ extract 31 31) %Op0) ((_ extract 41 41) %Op0)) (ite (= ((_ extract 30 30) %Op0) ((_ extract 41 41) %Op0)) ?x482952 (_ bv11 42)) (_ bv10 42))))
 (let ((?x482749 (ite (= ((_ extract 33 33) %Op0) ((_ extract 41 41) %Op0)) (ite (= ((_ extract 32 32) %Op0) ((_ extract 41 41) %Op0)) ?x482960 (_ bv9 42)) (_ bv8 42))))
 (let ((?x482965 (ite (= ((_ extract 35 35) %Op0) ((_ extract 41 41) %Op0)) (ite (= ((_ extract 34 34) %Op0) ((_ extract 41 41) %Op0)) ?x482749 (_ bv7 42)) (_ bv6 42))))
 (let ((?x482973 (ite (= ((_ extract 37 37) %Op0) ((_ extract 41 41) %Op0)) (ite (= ((_ extract 36 36) %Op0) ((_ extract 41 41) %Op0)) ?x482965 (_ bv5 42)) (_ bv4 42))))
 (let ((?x482769 (ite (= ((_ extract 39 39) %Op0) ((_ extract 41 41) %Op0)) (ite (= ((_ extract 38 38) %Op0) ((_ extract 41 41) %Op0)) ?x482973 (_ bv3 42)) (_ bv2 42))))
 (let (($x482983 (bvule (ite (= ((_ extract 40 40) |ana_ComputeNumSignBits(%Op0)|) ?x482488) ?x482351 (_ bv1 42)) (ite (= ((_ extract 40 40) %Op0) ((_ extract 41 41) %Op0)) ?x482769 (_ bv1 42)))))
 (let (($x91921 (bvult C (_ bv42 42))))
 (and $x91921 $x482983 $x482529 $x448439))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
