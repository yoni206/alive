(set-info :status unknown)
(declare-fun mem0 () (_ BitVec 8))
(declare-fun %y () (_ BitVec 9))
(declare-fun %p2 () (_ BitVec 64))
(declare-fun idx () (_ BitVec 64))
(declare-fun %x () (_ BitVec 9))
(declare-fun %p1 () (_ BitVec 64))
(declare-fun |ana_equivalentAddressValues(%p1, %p2)| () (_ BitVec 1))
(assert
 (let ((?x6727 (ite (and (and (distinct %p2 (_ bv0 64)) true) (or true true) (= idx %p2)) (concat ((_ extract 7 1) mem0) ((_ extract 0 0) %y)) mem0)))
 (let (($x22023 (or true true)))
 (let (($x7172 (and (distinct %p2 (_ bv0 64)) true)))
 (let ((?x10461 (ite (and $x7172 $x22023 (= idx (bvadd (bvadd %p2 (_ bv1 64)) (_ bv0 64)))) ((_ extract 8 1) %y) ?x6727)))
 (let ((?x16205 (ite (and (and (distinct %p1 (_ bv0 64)) true) $x22023 (= idx %p1)) (concat ((_ extract 7 1) mem0) ((_ extract 0 0) %x)) mem0)))
 (let (($x17212 (and (distinct %p1 (_ bv0 64)) true)))
 (let ((?x14160 (ite (and $x17212 $x22023 (= idx (bvadd (bvadd %p1 (_ bv1 64)) (_ bv0 64)))) ((_ extract 8 1) %x) ?x16205)))
 (let ((?x2377 (ite (and $x17212 $x22023 (= %p2 %p1)) (concat ((_ extract 7 1) mem0) ((_ extract 0 0) %x)) mem0)))
 (let ((?x5408 (ite (and $x17212 $x22023 (= %p2 (bvadd (bvadd %p1 (_ bv1 64)) (_ bv0 64)))) ((_ extract 8 1) %x) ?x2377)))
 (let ((?x23767 (ite (and $x17212 $x22023 $x7172 $x22023 (= idx %p2)) (concat ((_ extract 7 1) ?x5408) ((_ extract 0 0) %y)) ?x14160)))
 (let ((?x12067 (ite (and $x17212 $x22023 $x7172 $x22023 (= idx (bvadd (bvadd %p2 (_ bv1 64)) (_ bv0 64)))) ((_ extract 8 1) %y) ?x23767)))
 (let (($x6308 (= |ana_equivalentAddressValues(%p1, %p2)| (_ bv1 1))))
 (and (=> $x6308 (= %p1 %p2)) $x6308 (and (distinct ?x12067 ?x10461) true)))))))))))))))
(check-sat)
