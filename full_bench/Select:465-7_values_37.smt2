(set-info :status unknown)
(declare-fun %Y () (_ BitVec 11))
(declare-fun C2 () (_ BitVec 11))
(declare-fun C1 () (_ BitVec 45))
(declare-fun %X () (_ BitVec 45))
(assert
 (let ((?x2692 (ite (and (distinct ((_ extract 2 2) C2) (_ bv0 1)) true) (_ bv2 45) (ite (and (distinct ((_ extract 1 1) C2) (_ bv0 1)) true) (_ bv1 45) (_ bv0 45)))))
 (let ((?x4173 (ite (and (distinct ((_ extract 5 5) C2) (_ bv0 1)) true) (_ bv5 45) (ite (and (distinct ((_ extract 4 4) C2) (_ bv0 1)) true) (_ bv4 45) (_ bv3 45)))))
 (let ((?x2564 (ite (and (distinct ((_ extract 8 8) C2) (_ bv0 1)) true) (_ bv8 45) (ite (and (distinct ((_ extract 7 7) C2) (_ bv0 1)) true) (_ bv7 45) (_ bv6 45)))))
 (let ((?x4717 (ite (and (distinct ((_ extract 10 9) C2) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) C2) (_ bv0 1)) true) (_ bv10 45) (_ bv9 45)) ?x2564)))
 (let ((?x4657 (ite (and (distinct ((_ extract 10 6) C2) (_ bv0 5)) true) ?x4717 (ite (and (distinct ((_ extract 5 3) C2) (_ bv0 3)) true) ?x4173 ?x2692))))
 (let ((?x5841 (ite (and (distinct ((_ extract 2 2) C1) (_ bv0 1)) true) (_ bv2 45) (ite (and (distinct ((_ extract 1 1) C1) (_ bv0 1)) true) (_ bv1 45) (_ bv0 45)))))
 (let ((?x3582 (ite (and (distinct ((_ extract 5 5) C1) (_ bv0 1)) true) (_ bv5 45) (ite (and (distinct ((_ extract 4 4) C1) (_ bv0 1)) true) (_ bv4 45) (_ bv3 45)))))
 (let ((?x3047 (ite (and (distinct ((_ extract 8 8) C1) (_ bv0 1)) true) (_ bv8 45) (ite (and (distinct ((_ extract 7 7) C1) (_ bv0 1)) true) (_ bv7 45) (_ bv6 45)))))
 (let ((?x1652 (ite (and (distinct ((_ extract 11 11) C1) (_ bv0 1)) true) (_ bv11 45) (ite (and (distinct ((_ extract 10 10) C1) (_ bv0 1)) true) (_ bv10 45) (_ bv9 45)))))
 (let ((?x2630 (ite (and (distinct ((_ extract 11 6) C1) (_ bv0 6)) true) (ite (and (distinct ((_ extract 11 9) C1) (_ bv0 3)) true) ?x1652 ?x3047) (ite (and (distinct ((_ extract 5 3) C1) (_ bv0 3)) true) ?x3582 ?x5841))))
 (let ((?x3800 (ite (and (distinct ((_ extract 14 14) C1) (_ bv0 1)) true) (_ bv14 45) (ite (and (distinct ((_ extract 13 13) C1) (_ bv0 1)) true) (_ bv13 45) (_ bv12 45)))))
 (let ((?x4310 (ite (and (distinct ((_ extract 17 17) C1) (_ bv0 1)) true) (_ bv17 45) (ite (and (distinct ((_ extract 16 16) C1) (_ bv0 1)) true) (_ bv16 45) (_ bv15 45)))))
 (let ((?x6110 (ite (and (distinct ((_ extract 20 20) C1) (_ bv0 1)) true) (_ bv20 45) (ite (and (distinct ((_ extract 19 19) C1) (_ bv0 1)) true) (_ bv19 45) (_ bv18 45)))))
 (let ((?x5073 (ite (and (distinct ((_ extract 22 21) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 22 22) C1) (_ bv0 1)) true) (_ bv22 45) (_ bv21 45)) ?x6110)))
 (let ((?x5878 (ite (and (distinct ((_ extract 22 18) C1) (_ bv0 5)) true) ?x5073 (ite (and (distinct ((_ extract 17 15) C1) (_ bv0 3)) true) ?x4310 ?x3800))))
 (let ((?x2061 (ite (and (distinct ((_ extract 25 25) C1) (_ bv0 1)) true) (_ bv25 45) (ite (and (distinct ((_ extract 24 24) C1) (_ bv0 1)) true) (_ bv24 45) (_ bv23 45)))))
 (let ((?x6579 (ite (and (distinct ((_ extract 28 28) C1) (_ bv0 1)) true) (_ bv28 45) (ite (and (distinct ((_ extract 27 27) C1) (_ bv0 1)) true) (_ bv27 45) (_ bv26 45)))))
 (let ((?x3425 (ite (and (distinct ((_ extract 31 31) C1) (_ bv0 1)) true) (_ bv31 45) (ite (and (distinct ((_ extract 30 30) C1) (_ bv0 1)) true) (_ bv30 45) (_ bv29 45)))))
 (let ((?x3635 (ite (and (distinct ((_ extract 33 32) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 33 33) C1) (_ bv0 1)) true) (_ bv33 45) (_ bv32 45)) ?x3425)))
 (let ((?x1236 (ite (and (distinct ((_ extract 33 29) C1) (_ bv0 5)) true) ?x3635 (ite (and (distinct ((_ extract 28 26) C1) (_ bv0 3)) true) ?x6579 ?x2061))))
 (let ((?x5541 (ite (and (distinct ((_ extract 36 36) C1) (_ bv0 1)) true) (_ bv36 45) (ite (and (distinct ((_ extract 35 35) C1) (_ bv0 1)) true) (_ bv35 45) (_ bv34 45)))))
 (let ((?x5694 (ite (and (distinct ((_ extract 39 39) C1) (_ bv0 1)) true) (_ bv39 45) (ite (and (distinct ((_ extract 38 38) C1) (_ bv0 1)) true) (_ bv38 45) (_ bv37 45)))))
 (let ((?x4635 (ite (and (distinct ((_ extract 42 42) C1) (_ bv0 1)) true) (_ bv42 45) (ite (and (distinct ((_ extract 41 41) C1) (_ bv0 1)) true) (_ bv41 45) (_ bv40 45)))))
 (let ((?x4126 (ite (and (distinct ((_ extract 44 43) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 44 44) C1) (_ bv0 1)) true) (_ bv44 45) (_ bv43 45)) ?x4635)))
 (let ((?x5843 (ite (and (distinct ((_ extract 44 40) C1) (_ bv0 5)) true) ?x4126 (ite (and (distinct ((_ extract 39 37) C1) (_ bv0 3)) true) ?x5694 ?x5541))))
 (let ((?x3451 (ite (and (distinct ((_ extract 44 23) C1) (_ bv0 22)) true) (ite (and (distinct ((_ extract 44 34) C1) (_ bv0 11)) true) ?x5843 ?x1236) (ite (and (distinct ((_ extract 22 12) C1) (_ bv0 11)) true) ?x5878 ?x2630))))
 (let ((?x5017 (bvsub ?x3451 ?x4657)))
 (let ((?x3876 (bvand %X C1)))
 (let (($x4683 (and (distinct (ite (= (ite (= ?x3876 (_ bv0 45)) (_ bv1 1) (_ bv0 1)) (_ bv1 1)) (bvor %Y C2) %Y) (bvor (bvxor ((_ extract 10 0) (bvlshr ?x3876 ?x5017)) C2) %Y)) true)))
 (let ((?x3623 (ite (and (distinct ((_ extract 2 2) C1) (_ bv0 1)) true) (_ bv2 32) (ite (and (distinct ((_ extract 1 1) C1) (_ bv0 1)) true) (_ bv1 32) (_ bv0 32)))))
 (let ((?x5501 (ite (and (distinct ((_ extract 5 5) C1) (_ bv0 1)) true) (_ bv5 32) (ite (and (distinct ((_ extract 4 4) C1) (_ bv0 1)) true) (_ bv4 32) (_ bv3 32)))))
 (let ((?x6595 (ite (and (distinct ((_ extract 8 8) C1) (_ bv0 1)) true) (_ bv8 32) (ite (and (distinct ((_ extract 7 7) C1) (_ bv0 1)) true) (_ bv7 32) (_ bv6 32)))))
 (let ((?x3036 (ite (and (distinct ((_ extract 11 11) C1) (_ bv0 1)) true) (_ bv11 32) (ite (and (distinct ((_ extract 10 10) C1) (_ bv0 1)) true) (_ bv10 32) (_ bv9 32)))))
 (let ((?x6490 (ite (and (distinct ((_ extract 11 6) C1) (_ bv0 6)) true) (ite (and (distinct ((_ extract 11 9) C1) (_ bv0 3)) true) ?x3036 ?x6595) (ite (and (distinct ((_ extract 5 3) C1) (_ bv0 3)) true) ?x5501 ?x3623))))
 (let ((?x3952 (ite (and (distinct ((_ extract 14 14) C1) (_ bv0 1)) true) (_ bv14 32) (ite (and (distinct ((_ extract 13 13) C1) (_ bv0 1)) true) (_ bv13 32) (_ bv12 32)))))
 (let ((?x5973 (ite (and (distinct ((_ extract 17 17) C1) (_ bv0 1)) true) (_ bv17 32) (ite (and (distinct ((_ extract 16 16) C1) (_ bv0 1)) true) (_ bv16 32) (_ bv15 32)))))
 (let ((?x4364 (ite (and (distinct ((_ extract 20 20) C1) (_ bv0 1)) true) (_ bv20 32) (ite (and (distinct ((_ extract 19 19) C1) (_ bv0 1)) true) (_ bv19 32) (_ bv18 32)))))
 (let ((?x4184 (ite (and (distinct ((_ extract 22 21) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 22 22) C1) (_ bv0 1)) true) (_ bv22 32) (_ bv21 32)) ?x4364)))
 (let ((?x4633 (ite (and (distinct ((_ extract 22 18) C1) (_ bv0 5)) true) ?x4184 (ite (and (distinct ((_ extract 17 15) C1) (_ bv0 3)) true) ?x5973 ?x3952))))
 (let ((?x2828 (ite (and (distinct ((_ extract 25 25) C1) (_ bv0 1)) true) (_ bv25 32) (ite (and (distinct ((_ extract 24 24) C1) (_ bv0 1)) true) (_ bv24 32) (_ bv23 32)))))
 (let ((?x2517 (ite (and (distinct ((_ extract 28 28) C1) (_ bv0 1)) true) (_ bv28 32) (ite (and (distinct ((_ extract 27 27) C1) (_ bv0 1)) true) (_ bv27 32) (_ bv26 32)))))
 (let ((?x2288 (ite (and (distinct ((_ extract 31 31) C1) (_ bv0 1)) true) (_ bv31 32) (ite (and (distinct ((_ extract 30 30) C1) (_ bv0 1)) true) (_ bv30 32) (_ bv29 32)))))
 (let ((?x2269 (ite (and (distinct ((_ extract 33 32) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 33 33) C1) (_ bv0 1)) true) (_ bv33 32) (_ bv32 32)) ?x2288)))
 (let ((?x2612 (ite (and (distinct ((_ extract 33 29) C1) (_ bv0 5)) true) ?x2269 (ite (and (distinct ((_ extract 28 26) C1) (_ bv0 3)) true) ?x2517 ?x2828))))
 (let ((?x2310 (ite (and (distinct ((_ extract 36 36) C1) (_ bv0 1)) true) (_ bv36 32) (ite (and (distinct ((_ extract 35 35) C1) (_ bv0 1)) true) (_ bv35 32) (_ bv34 32)))))
 (let ((?x5405 (ite (and (distinct ((_ extract 39 39) C1) (_ bv0 1)) true) (_ bv39 32) (ite (and (distinct ((_ extract 38 38) C1) (_ bv0 1)) true) (_ bv38 32) (_ bv37 32)))))
 (let ((?x2281 (ite (and (distinct ((_ extract 42 42) C1) (_ bv0 1)) true) (_ bv42 32) (ite (and (distinct ((_ extract 41 41) C1) (_ bv0 1)) true) (_ bv41 32) (_ bv40 32)))))
 (let ((?x1440 (ite (and (distinct ((_ extract 44 43) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 44 44) C1) (_ bv0 1)) true) (_ bv44 32) (_ bv43 32)) ?x2281)))
 (let ((?x1235 (ite (and (distinct ((_ extract 44 40) C1) (_ bv0 5)) true) ?x1440 (ite (and (distinct ((_ extract 39 37) C1) (_ bv0 3)) true) ?x5405 ?x2310))))
 (let ((?x5516 (ite (and (distinct ((_ extract 44 23) C1) (_ bv0 22)) true) (ite (and (distinct ((_ extract 44 34) C1) (_ bv0 11)) true) ?x1235 ?x2612) (ite (and (distinct ((_ extract 22 12) C1) (_ bv0 11)) true) ?x4633 ?x6490))))
 (let ((?x2899 (ite (and (distinct ((_ extract 2 2) C2) (_ bv0 1)) true) (_ bv2 32) (ite (and (distinct ((_ extract 1 1) C2) (_ bv0 1)) true) (_ bv1 32) (_ bv0 32)))))
 (let ((?x5832 (ite (and (distinct ((_ extract 5 5) C2) (_ bv0 1)) true) (_ bv5 32) (ite (and (distinct ((_ extract 4 4) C2) (_ bv0 1)) true) (_ bv4 32) (_ bv3 32)))))
 (let ((?x5983 (ite (and (distinct ((_ extract 8 8) C2) (_ bv0 1)) true) (_ bv8 32) (ite (and (distinct ((_ extract 7 7) C2) (_ bv0 1)) true) (_ bv7 32) (_ bv6 32)))))
 (let ((?x2544 (ite (and (distinct ((_ extract 10 9) C2) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) C2) (_ bv0 1)) true) (_ bv10 32) (_ bv9 32)) ?x5983)))
 (let ((?x3890 (ite (and (distinct ((_ extract 10 6) C2) (_ bv0 5)) true) ?x2544 (ite (and (distinct ((_ extract 5 3) C2) (_ bv0 3)) true) ?x5832 ?x2899))))
 (and (and (and (distinct C1 (_ bv0 45)) true) (= (bvand C1 (bvsub C1 (_ bv1 45))) (_ bv0 45))) (and (and (distinct C2 (_ bv0 11)) true) (= (bvand C2 (bvsub C2 (_ bv1 11))) (_ bv0 11))) (bvslt ?x3890 ?x5516) $x4683)))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
