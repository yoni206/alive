(set-info :status unknown)
(declare-fun %Y () (_ BitVec 11))
(declare-fun C2 () (_ BitVec 11))
(declare-fun C1 () (_ BitVec 44))
(declare-fun %X () (_ BitVec 44))
(assert
 (let ((?x1753 (ite (and (distinct ((_ extract 2 2) C1) (_ bv0 1)) true) (_ bv2 11) (ite (and (distinct ((_ extract 1 1) C1) (_ bv0 1)) true) (_ bv1 11) (_ bv0 11)))))
 (let ((?x15289 (ite (and (distinct ((_ extract 5 5) C1) (_ bv0 1)) true) (_ bv5 11) (ite (and (distinct ((_ extract 4 4) C1) (_ bv0 1)) true) (_ bv4 11) (_ bv3 11)))))
 (let ((?x14409 (ite (and (distinct ((_ extract 8 8) C1) (_ bv0 1)) true) (_ bv8 11) (ite (and (distinct ((_ extract 7 7) C1) (_ bv0 1)) true) (_ bv7 11) (_ bv6 11)))))
 (let ((?x16930 (ite (and (distinct ((_ extract 10 9) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) C1) (_ bv0 1)) true) (_ bv10 11) (_ bv9 11)) ?x14409)))
 (let ((?x23536 (ite (and (distinct ((_ extract 10 6) C1) (_ bv0 5)) true) ?x16930 (ite (and (distinct ((_ extract 5 3) C1) (_ bv0 3)) true) ?x15289 ?x1753))))
 (let ((?x21470 (ite (and (distinct ((_ extract 13 13) C1) (_ bv0 1)) true) (_ bv13 11) (ite (and (distinct ((_ extract 12 12) C1) (_ bv0 1)) true) (_ bv12 11) (_ bv11 11)))))
 (let ((?x17253 (ite (and (distinct ((_ extract 16 16) C1) (_ bv0 1)) true) (_ bv16 11) (ite (and (distinct ((_ extract 15 15) C1) (_ bv0 1)) true) (_ bv15 11) (_ bv14 11)))))
 (let ((?x6852 (ite (and (distinct ((_ extract 19 19) C1) (_ bv0 1)) true) (_ bv19 11) (ite (and (distinct ((_ extract 18 18) C1) (_ bv0 1)) true) (_ bv18 11) (_ bv17 11)))))
 (let ((?x18304 (ite (and (distinct ((_ extract 21 20) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 21 21) C1) (_ bv0 1)) true) (_ bv21 11) (_ bv20 11)) ?x6852)))
 (let ((?x25018 (ite (and (distinct ((_ extract 21 17) C1) (_ bv0 5)) true) ?x18304 (ite (and (distinct ((_ extract 16 14) C1) (_ bv0 3)) true) ?x17253 ?x21470))))
 (let ((?x13116 (ite (and (distinct ((_ extract 24 24) C1) (_ bv0 1)) true) (_ bv24 11) (ite (and (distinct ((_ extract 23 23) C1) (_ bv0 1)) true) (_ bv23 11) (_ bv22 11)))))
 (let ((?x8011 (ite (and (distinct ((_ extract 27 27) C1) (_ bv0 1)) true) (_ bv27 11) (ite (and (distinct ((_ extract 26 26) C1) (_ bv0 1)) true) (_ bv26 11) (_ bv25 11)))))
 (let ((?x9728 (ite (and (distinct ((_ extract 30 30) C1) (_ bv0 1)) true) (_ bv30 11) (ite (and (distinct ((_ extract 29 29) C1) (_ bv0 1)) true) (_ bv29 11) (_ bv28 11)))))
 (let ((?x10373 (ite (and (distinct ((_ extract 32 31) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 32 32) C1) (_ bv0 1)) true) (_ bv32 11) (_ bv31 11)) ?x9728)))
 (let ((?x14016 (ite (and (distinct ((_ extract 32 28) C1) (_ bv0 5)) true) ?x10373 (ite (and (distinct ((_ extract 27 25) C1) (_ bv0 3)) true) ?x8011 ?x13116))))
 (let ((?x19506 (ite (and (distinct ((_ extract 35 35) C1) (_ bv0 1)) true) (_ bv35 11) (ite (and (distinct ((_ extract 34 34) C1) (_ bv0 1)) true) (_ bv34 11) (_ bv33 11)))))
 (let ((?x9391 (ite (and (distinct ((_ extract 38 38) C1) (_ bv0 1)) true) (_ bv38 11) (ite (and (distinct ((_ extract 37 37) C1) (_ bv0 1)) true) (_ bv37 11) (_ bv36 11)))))
 (let ((?x1398 (ite (and (distinct ((_ extract 41 41) C1) (_ bv0 1)) true) (_ bv41 11) (ite (and (distinct ((_ extract 40 40) C1) (_ bv0 1)) true) (_ bv40 11) (_ bv39 11)))))
 (let ((?x13171 (ite (and (distinct ((_ extract 43 42) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 43 43) C1) (_ bv0 1)) true) (_ bv43 11) (_ bv42 11)) ?x1398)))
 (let ((?x4425 (ite (and (distinct ((_ extract 43 39) C1) (_ bv0 5)) true) ?x13171 (ite (and (distinct ((_ extract 38 36) C1) (_ bv0 3)) true) ?x9391 ?x19506))))
 (let ((?x10345 (ite (and (distinct ((_ extract 43 22) C1) (_ bv0 22)) true) (ite (and (distinct ((_ extract 43 33) C1) (_ bv0 11)) true) ?x4425 ?x14016) (ite (and (distinct ((_ extract 21 11) C1) (_ bv0 11)) true) ?x25018 ?x23536))))
 (let ((?x15450 (ite (and (distinct ((_ extract 2 2) C2) (_ bv0 1)) true) (_ bv2 11) (ite (and (distinct ((_ extract 1 1) C2) (_ bv0 1)) true) (_ bv1 11) (_ bv0 11)))))
 (let ((?x16787 (ite (and (distinct ((_ extract 5 5) C2) (_ bv0 1)) true) (_ bv5 11) (ite (and (distinct ((_ extract 4 4) C2) (_ bv0 1)) true) (_ bv4 11) (_ bv3 11)))))
 (let ((?x19564 (ite (and (distinct ((_ extract 8 8) C2) (_ bv0 1)) true) (_ bv8 11) (ite (and (distinct ((_ extract 7 7) C2) (_ bv0 1)) true) (_ bv7 11) (_ bv6 11)))))
 (let ((?x18608 (ite (and (distinct ((_ extract 10 9) C2) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) C2) (_ bv0 1)) true) (_ bv10 11) (_ bv9 11)) ?x19564)))
 (let ((?x4562 (ite (and (distinct ((_ extract 10 6) C2) (_ bv0 5)) true) ?x18608 (ite (and (distinct ((_ extract 5 3) C2) (_ bv0 3)) true) ?x16787 ?x15450))))
 (let ((?x2750 (bvsub ?x4562 ?x10345)))
 (let ((?x20715 (bvor %Y C2)))
 (let (($x13551 (and (distinct (ite (= (ite (= (bvand %X C1) (_ bv0 44)) (_ bv1 1) (_ bv0 1)) (_ bv1 1)) ?x20715 %Y) (bvor (bvxor (bvshl ((_ extract 10 0) (bvand %X C1)) ?x2750) C2) %Y)) true)))
 (let ((?x21536 (ite (and (distinct ((_ extract 2 2) C1) (_ bv0 1)) true) (_ bv2 32) (ite (and (distinct ((_ extract 1 1) C1) (_ bv0 1)) true) (_ bv1 32) (_ bv0 32)))))
 (let ((?x6655 (ite (and (distinct ((_ extract 5 5) C1) (_ bv0 1)) true) (_ bv5 32) (ite (and (distinct ((_ extract 4 4) C1) (_ bv0 1)) true) (_ bv4 32) (_ bv3 32)))))
 (let ((?x19803 (ite (and (distinct ((_ extract 8 8) C1) (_ bv0 1)) true) (_ bv8 32) (ite (and (distinct ((_ extract 7 7) C1) (_ bv0 1)) true) (_ bv7 32) (_ bv6 32)))))
 (let ((?x23209 (ite (and (distinct ((_ extract 10 9) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) C1) (_ bv0 1)) true) (_ bv10 32) (_ bv9 32)) ?x19803)))
 (let ((?x10261 (ite (and (distinct ((_ extract 10 6) C1) (_ bv0 5)) true) ?x23209 (ite (and (distinct ((_ extract 5 3) C1) (_ bv0 3)) true) ?x6655 ?x21536))))
 (let ((?x18078 (ite (and (distinct ((_ extract 13 13) C1) (_ bv0 1)) true) (_ bv13 32) (ite (and (distinct ((_ extract 12 12) C1) (_ bv0 1)) true) (_ bv12 32) (_ bv11 32)))))
 (let ((?x13105 (ite (and (distinct ((_ extract 16 16) C1) (_ bv0 1)) true) (_ bv16 32) (ite (and (distinct ((_ extract 15 15) C1) (_ bv0 1)) true) (_ bv15 32) (_ bv14 32)))))
 (let ((?x5529 (ite (and (distinct ((_ extract 19 19) C1) (_ bv0 1)) true) (_ bv19 32) (ite (and (distinct ((_ extract 18 18) C1) (_ bv0 1)) true) (_ bv18 32) (_ bv17 32)))))
 (let ((?x13864 (ite (and (distinct ((_ extract 21 20) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 21 21) C1) (_ bv0 1)) true) (_ bv21 32) (_ bv20 32)) ?x5529)))
 (let ((?x22929 (ite (and (distinct ((_ extract 21 17) C1) (_ bv0 5)) true) ?x13864 (ite (and (distinct ((_ extract 16 14) C1) (_ bv0 3)) true) ?x13105 ?x18078))))
 (let ((?x10725 (ite (and (distinct ((_ extract 24 24) C1) (_ bv0 1)) true) (_ bv24 32) (ite (and (distinct ((_ extract 23 23) C1) (_ bv0 1)) true) (_ bv23 32) (_ bv22 32)))))
 (let ((?x6215 (ite (and (distinct ((_ extract 27 27) C1) (_ bv0 1)) true) (_ bv27 32) (ite (and (distinct ((_ extract 26 26) C1) (_ bv0 1)) true) (_ bv26 32) (_ bv25 32)))))
 (let ((?x1207 (ite (and (distinct ((_ extract 30 30) C1) (_ bv0 1)) true) (_ bv30 32) (ite (and (distinct ((_ extract 29 29) C1) (_ bv0 1)) true) (_ bv29 32) (_ bv28 32)))))
 (let ((?x7692 (ite (and (distinct ((_ extract 32 31) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 32 32) C1) (_ bv0 1)) true) (_ bv32 32) (_ bv31 32)) ?x1207)))
 (let ((?x11268 (ite (and (distinct ((_ extract 32 28) C1) (_ bv0 5)) true) ?x7692 (ite (and (distinct ((_ extract 27 25) C1) (_ bv0 3)) true) ?x6215 ?x10725))))
 (let ((?x17570 (ite (and (distinct ((_ extract 35 35) C1) (_ bv0 1)) true) (_ bv35 32) (ite (and (distinct ((_ extract 34 34) C1) (_ bv0 1)) true) (_ bv34 32) (_ bv33 32)))))
 (let ((?x17399 (ite (and (distinct ((_ extract 38 38) C1) (_ bv0 1)) true) (_ bv38 32) (ite (and (distinct ((_ extract 37 37) C1) (_ bv0 1)) true) (_ bv37 32) (_ bv36 32)))))
 (let ((?x11998 (ite (and (distinct ((_ extract 41 41) C1) (_ bv0 1)) true) (_ bv41 32) (ite (and (distinct ((_ extract 40 40) C1) (_ bv0 1)) true) (_ bv40 32) (_ bv39 32)))))
 (let ((?x17837 (ite (and (distinct ((_ extract 43 42) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 43 43) C1) (_ bv0 1)) true) (_ bv43 32) (_ bv42 32)) ?x11998)))
 (let ((?x4539 (ite (and (distinct ((_ extract 43 39) C1) (_ bv0 5)) true) ?x17837 (ite (and (distinct ((_ extract 38 36) C1) (_ bv0 3)) true) ?x17399 ?x17570))))
 (let ((?x23490 (ite (and (distinct ((_ extract 43 22) C1) (_ bv0 22)) true) (ite (and (distinct ((_ extract 43 33) C1) (_ bv0 11)) true) ?x4539 ?x11268) (ite (and (distinct ((_ extract 21 11) C1) (_ bv0 11)) true) ?x22929 ?x10261))))
 (let ((?x286 (ite (and (distinct ((_ extract 2 2) C2) (_ bv0 1)) true) (_ bv2 32) (ite (and (distinct ((_ extract 1 1) C2) (_ bv0 1)) true) (_ bv1 32) (_ bv0 32)))))
 (let ((?x14528 (ite (and (distinct ((_ extract 5 5) C2) (_ bv0 1)) true) (_ bv5 32) (ite (and (distinct ((_ extract 4 4) C2) (_ bv0 1)) true) (_ bv4 32) (_ bv3 32)))))
 (let ((?x4959 (ite (and (distinct ((_ extract 8 8) C2) (_ bv0 1)) true) (_ bv8 32) (ite (and (distinct ((_ extract 7 7) C2) (_ bv0 1)) true) (_ bv7 32) (_ bv6 32)))))
 (let ((?x13529 (ite (and (distinct ((_ extract 10 9) C2) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) C2) (_ bv0 1)) true) (_ bv10 32) (_ bv9 32)) ?x4959)))
 (let ((?x11016 (ite (and (distinct ((_ extract 10 6) C2) (_ bv0 5)) true) ?x13529 (ite (and (distinct ((_ extract 5 3) C2) (_ bv0 3)) true) ?x14528 ?x286))))
 (and (and (and (distinct C1 (_ bv0 44)) true) (= (bvand C1 (bvsub C1 (_ bv1 44))) (_ bv0 44))) (and (and (distinct C2 (_ bv0 11)) true) (= (bvand C2 (bvsub C2 (_ bv1 11))) (_ bv0 11))) (bvsge ?x11016 ?x23490) $x13551)))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
