(set-info :status unknown)
(declare-fun C2 () (_ BitVec 11))
(declare-fun C3 () (_ BitVec 11))
(declare-fun C () (_ BitVec 61))
(declare-fun %Op () (_ BitVec 61))
(assert
 (let ((?x3054 (ite (and (distinct ((_ extract 2 2) (bvsub C3 C2)) (_ bv0 1)) true) (_ bv2 11) (ite (and (distinct ((_ extract 1 1) (bvsub C3 C2)) (_ bv0 1)) true) (_ bv1 11) (_ bv0 11)))))
 (let ((?x5588 (ite (and (distinct ((_ extract 5 5) (bvsub C3 C2)) (_ bv0 1)) true) (_ bv5 11) (ite (and (distinct ((_ extract 4 4) (bvsub C3 C2)) (_ bv0 1)) true) (_ bv4 11) (_ bv3 11)))))
 (let ((?x10629 (ite (and (distinct ((_ extract 8 8) (bvsub C3 C2)) (_ bv0 1)) true) (_ bv8 11) (ite (and (distinct ((_ extract 7 7) (bvsub C3 C2)) (_ bv0 1)) true) (_ bv7 11) (_ bv6 11)))))
 (let ((?x2707 (ite (and (distinct ((_ extract 10 9) (bvsub C3 C2)) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) (bvsub C3 C2)) (_ bv0 1)) true) (_ bv10 11) (_ bv9 11)) ?x10629)))
 (let ((?x5818 (ite (and (distinct ((_ extract 10 6) (bvsub C3 C2)) (_ bv0 5)) true) ?x2707 (ite (and (distinct ((_ extract 5 3) (bvsub C3 C2)) (_ bv0 3)) true) ?x5588 ?x3054))))
 (let ((?x15542 (ite (and (distinct ((_ extract 3 2) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 3 3) C) (_ bv0 1)) true) (_ bv3 11) (_ bv2 11)) (ite (and (distinct ((_ extract 1 1) C) (_ bv0 1)) true) (_ bv1 11) (_ bv0 11)))))
 (let ((?x6939 (ite (and (distinct ((_ extract 7 6) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 7 7) C) (_ bv0 1)) true) (_ bv7 11) (_ bv6 11)) (ite (and (distinct ((_ extract 5 5) C) (_ bv0 1)) true) (_ bv5 11) (_ bv4 11)))))
 (let ((?x14563 (ite (and (distinct ((_ extract 11 10) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 11 11) C) (_ bv0 1)) true) (_ bv11 11) (_ bv10 11)) (ite (and (distinct ((_ extract 9 9) C) (_ bv0 1)) true) (_ bv9 11) (_ bv8 11)))))
 (let ((?x12053 (ite (and (distinct ((_ extract 15 14) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 15 15) C) (_ bv0 1)) true) (_ bv15 11) (_ bv14 11)) (ite (and (distinct ((_ extract 13 13) C) (_ bv0 1)) true) (_ bv13 11) (_ bv12 11)))))
 (let ((?x12958 (ite (and (distinct ((_ extract 15 8) C) (_ bv0 8)) true) (ite (and (distinct ((_ extract 15 12) C) (_ bv0 4)) true) ?x12053 ?x14563) (ite (and (distinct ((_ extract 7 4) C) (_ bv0 4)) true) ?x6939 ?x15542))))
 (let ((?x23425 (ite (and (distinct ((_ extract 19 18) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 19 19) C) (_ bv0 1)) true) (_ bv19 11) (_ bv18 11)) (ite (and (distinct ((_ extract 17 17) C) (_ bv0 1)) true) (_ bv17 11) (_ bv16 11)))))
 (let ((?x5506 (ite (and (distinct ((_ extract 23 22) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 23 23) C) (_ bv0 1)) true) (_ bv23 11) (_ bv22 11)) (ite (and (distinct ((_ extract 21 21) C) (_ bv0 1)) true) (_ bv21 11) (_ bv20 11)))))
 (let ((?x21013 (ite (and (distinct ((_ extract 27 26) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 27 27) C) (_ bv0 1)) true) (_ bv27 11) (_ bv26 11)) (ite (and (distinct ((_ extract 25 25) C) (_ bv0 1)) true) (_ bv25 11) (_ bv24 11)))))
 (let ((?x22742 (ite (and (distinct ((_ extract 30 30) C) (_ bv0 1)) true) (_ bv30 11) (ite (and (distinct ((_ extract 29 29) C) (_ bv0 1)) true) (_ bv29 11) (_ bv28 11)))))
 (let ((?x15595 (ite (and (distinct ((_ extract 30 24) C) (_ bv0 7)) true) (ite (and (distinct ((_ extract 30 28) C) (_ bv0 3)) true) ?x22742 ?x21013) (ite (and (distinct ((_ extract 23 20) C) (_ bv0 4)) true) ?x5506 ?x23425))))
 (let ((?x7461 (ite (and (distinct ((_ extract 34 33) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 34 34) C) (_ bv0 1)) true) (_ bv34 11) (_ bv33 11)) (ite (and (distinct ((_ extract 32 32) C) (_ bv0 1)) true) (_ bv32 11) (_ bv31 11)))))
 (let ((?x11472 (ite (and (distinct ((_ extract 38 37) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 38 38) C) (_ bv0 1)) true) (_ bv38 11) (_ bv37 11)) (ite (and (distinct ((_ extract 36 36) C) (_ bv0 1)) true) (_ bv36 11) (_ bv35 11)))))
 (let ((?x12298 (ite (and (distinct ((_ extract 42 41) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 42 42) C) (_ bv0 1)) true) (_ bv42 11) (_ bv41 11)) (ite (and (distinct ((_ extract 40 40) C) (_ bv0 1)) true) (_ bv40 11) (_ bv39 11)))))
 (let ((?x19882 (ite (and (distinct ((_ extract 45 45) C) (_ bv0 1)) true) (_ bv45 11) (ite (and (distinct ((_ extract 44 44) C) (_ bv0 1)) true) (_ bv44 11) (_ bv43 11)))))
 (let ((?x13517 (ite (and (distinct ((_ extract 45 39) C) (_ bv0 7)) true) (ite (and (distinct ((_ extract 45 43) C) (_ bv0 3)) true) ?x19882 ?x12298) (ite (and (distinct ((_ extract 38 35) C) (_ bv0 4)) true) ?x11472 ?x7461))))
 (let ((?x3178 (ite (and (distinct ((_ extract 49 48) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 49 49) C) (_ bv0 1)) true) (_ bv49 11) (_ bv48 11)) (ite (and (distinct ((_ extract 47 47) C) (_ bv0 1)) true) (_ bv47 11) (_ bv46 11)))))
 (let ((?x2712 (ite (and (distinct ((_ extract 53 52) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 53 53) C) (_ bv0 1)) true) (_ bv53 11) (_ bv52 11)) (ite (and (distinct ((_ extract 51 51) C) (_ bv0 1)) true) (_ bv51 11) (_ bv50 11)))))
 (let ((?x8266 (ite (and (distinct ((_ extract 57 56) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 57 57) C) (_ bv0 1)) true) (_ bv57 11) (_ bv56 11)) (ite (and (distinct ((_ extract 55 55) C) (_ bv0 1)) true) (_ bv55 11) (_ bv54 11)))))
 (let ((?x2831 (ite (and (distinct ((_ extract 60 60) C) (_ bv0 1)) true) (_ bv60 11) (ite (and (distinct ((_ extract 59 59) C) (_ bv0 1)) true) (_ bv59 11) (_ bv58 11)))))
 (let ((?x13329 (ite (and (distinct ((_ extract 60 54) C) (_ bv0 7)) true) (ite (and (distinct ((_ extract 60 58) C) (_ bv0 3)) true) ?x2831 ?x8266) (ite (and (distinct ((_ extract 53 50) C) (_ bv0 4)) true) ?x2712 ?x3178))))
 (let ((?x4828 (ite (and (distinct ((_ extract 60 31) C) (_ bv0 30)) true) (ite (and (distinct ((_ extract 60 46) C) (_ bv0 15)) true) ?x13329 ?x13517) (ite (and (distinct ((_ extract 30 16) C) (_ bv0 15)) true) ?x15595 ?x12958))))
 (let ((?x12937 (bvsub ?x4828 ?x5818)))
 (let ((?x5867 (ite (bvsgt (_ bv0 11) ?x12937) (_ bv0 11) ?x12937)))
 (let ((?x11802 (bvsub ?x5818 ?x4828)))
 (let ((?x14642 (ite (bvsgt (_ bv0 11) ?x11802) (_ bv0 11) ?x11802)))
 (let (($x20021 (and (distinct (ite (= (ite (= (bvand %Op C) (_ bv0 61)) (_ bv1 1) (_ bv0 1)) (_ bv1 1)) C2 C3) (bvadd (bvlshr (bvshl ((_ extract 10 0) (bvand %Op C)) ?x14642) ?x5867) C2)) true)))
 (let ((?x19206 (ite (and (distinct ((_ extract 3 2) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 3 3) C) (_ bv0 1)) true) (_ bv3 32) (_ bv2 32)) (ite (and (distinct ((_ extract 1 1) C) (_ bv0 1)) true) (_ bv1 32) (_ bv0 32)))))
 (let ((?x9232 (ite (and (distinct ((_ extract 7 6) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 7 7) C) (_ bv0 1)) true) (_ bv7 32) (_ bv6 32)) (ite (and (distinct ((_ extract 5 5) C) (_ bv0 1)) true) (_ bv5 32) (_ bv4 32)))))
 (let ((?x7908 (ite (and (distinct ((_ extract 11 10) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 11 11) C) (_ bv0 1)) true) (_ bv11 32) (_ bv10 32)) (ite (and (distinct ((_ extract 9 9) C) (_ bv0 1)) true) (_ bv9 32) (_ bv8 32)))))
 (let ((?x13636 (ite (and (distinct ((_ extract 15 14) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 15 15) C) (_ bv0 1)) true) (_ bv15 32) (_ bv14 32)) (ite (and (distinct ((_ extract 13 13) C) (_ bv0 1)) true) (_ bv13 32) (_ bv12 32)))))
 (let ((?x397 (ite (and (distinct ((_ extract 15 8) C) (_ bv0 8)) true) (ite (and (distinct ((_ extract 15 12) C) (_ bv0 4)) true) ?x13636 ?x7908) (ite (and (distinct ((_ extract 7 4) C) (_ bv0 4)) true) ?x9232 ?x19206))))
 (let ((?x21210 (ite (and (distinct ((_ extract 19 18) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 19 19) C) (_ bv0 1)) true) (_ bv19 32) (_ bv18 32)) (ite (and (distinct ((_ extract 17 17) C) (_ bv0 1)) true) (_ bv17 32) (_ bv16 32)))))
 (let ((?x17610 (ite (and (distinct ((_ extract 23 22) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 23 23) C) (_ bv0 1)) true) (_ bv23 32) (_ bv22 32)) (ite (and (distinct ((_ extract 21 21) C) (_ bv0 1)) true) (_ bv21 32) (_ bv20 32)))))
 (let ((?x15287 (ite (and (distinct ((_ extract 27 26) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 27 27) C) (_ bv0 1)) true) (_ bv27 32) (_ bv26 32)) (ite (and (distinct ((_ extract 25 25) C) (_ bv0 1)) true) (_ bv25 32) (_ bv24 32)))))
 (let ((?x12022 (ite (and (distinct ((_ extract 30 30) C) (_ bv0 1)) true) (_ bv30 32) (ite (and (distinct ((_ extract 29 29) C) (_ bv0 1)) true) (_ bv29 32) (_ bv28 32)))))
 (let ((?x23613 (ite (and (distinct ((_ extract 30 24) C) (_ bv0 7)) true) (ite (and (distinct ((_ extract 30 28) C) (_ bv0 3)) true) ?x12022 ?x15287) (ite (and (distinct ((_ extract 23 20) C) (_ bv0 4)) true) ?x17610 ?x21210))))
 (let ((?x9502 (ite (and (distinct ((_ extract 34 33) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 34 34) C) (_ bv0 1)) true) (_ bv34 32) (_ bv33 32)) (ite (and (distinct ((_ extract 32 32) C) (_ bv0 1)) true) (_ bv32 32) (_ bv31 32)))))
 (let ((?x8724 (ite (and (distinct ((_ extract 38 37) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 38 38) C) (_ bv0 1)) true) (_ bv38 32) (_ bv37 32)) (ite (and (distinct ((_ extract 36 36) C) (_ bv0 1)) true) (_ bv36 32) (_ bv35 32)))))
 (let ((?x2565 (ite (and (distinct ((_ extract 42 41) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 42 42) C) (_ bv0 1)) true) (_ bv42 32) (_ bv41 32)) (ite (and (distinct ((_ extract 40 40) C) (_ bv0 1)) true) (_ bv40 32) (_ bv39 32)))))
 (let ((?x1595 (ite (and (distinct ((_ extract 45 45) C) (_ bv0 1)) true) (_ bv45 32) (ite (and (distinct ((_ extract 44 44) C) (_ bv0 1)) true) (_ bv44 32) (_ bv43 32)))))
 (let ((?x10051 (ite (and (distinct ((_ extract 45 39) C) (_ bv0 7)) true) (ite (and (distinct ((_ extract 45 43) C) (_ bv0 3)) true) ?x1595 ?x2565) (ite (and (distinct ((_ extract 38 35) C) (_ bv0 4)) true) ?x8724 ?x9502))))
 (let ((?x3265 (ite (and (distinct ((_ extract 49 48) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 49 49) C) (_ bv0 1)) true) (_ bv49 32) (_ bv48 32)) (ite (and (distinct ((_ extract 47 47) C) (_ bv0 1)) true) (_ bv47 32) (_ bv46 32)))))
 (let ((?x21979 (ite (and (distinct ((_ extract 53 52) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 53 53) C) (_ bv0 1)) true) (_ bv53 32) (_ bv52 32)) (ite (and (distinct ((_ extract 51 51) C) (_ bv0 1)) true) (_ bv51 32) (_ bv50 32)))))
 (let ((?x10501 (ite (and (distinct ((_ extract 57 56) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 57 57) C) (_ bv0 1)) true) (_ bv57 32) (_ bv56 32)) (ite (and (distinct ((_ extract 55 55) C) (_ bv0 1)) true) (_ bv55 32) (_ bv54 32)))))
 (let ((?x4269 (ite (and (distinct ((_ extract 60 60) C) (_ bv0 1)) true) (_ bv60 32) (ite (and (distinct ((_ extract 59 59) C) (_ bv0 1)) true) (_ bv59 32) (_ bv58 32)))))
 (let ((?x11117 (ite (and (distinct ((_ extract 60 54) C) (_ bv0 7)) true) (ite (and (distinct ((_ extract 60 58) C) (_ bv0 3)) true) ?x4269 ?x10501) (ite (and (distinct ((_ extract 53 50) C) (_ bv0 4)) true) ?x21979 ?x3265))))
 (let ((?x9495 (ite (and (distinct ((_ extract 60 31) C) (_ bv0 30)) true) (ite (and (distinct ((_ extract 60 46) C) (_ bv0 15)) true) ?x11117 ?x10051) (ite (and (distinct ((_ extract 30 16) C) (_ bv0 15)) true) ?x23613 ?x397))))
 (let (($x15773 (and (and (distinct (bvsub C3 C2) (_ bv0 11)) true) (= (bvand (bvsub C3 C2) (bvsub (bvsub C3 C2) (_ bv1 11))) (_ bv0 11)))))
 (and (and (and (distinct C (_ bv0 61)) true) (= (bvand C (bvsub C (_ bv1 61))) (_ bv0 61))) $x15773 (bvslt ?x9495 (_ bv11 32)) $x20021)))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
