(set-info :status unknown)
(declare-fun C3 () (_ BitVec 11))
(declare-fun C2 () (_ BitVec 11))
(declare-fun C () (_ BitVec 32))
(declare-fun %Op () (_ BitVec 32))
(assert
 (let ((?x19303 (bvsub C2 C3)))
 (let ((?x16227 (ite (and (distinct ((_ extract 2 2) ?x19303) (_ bv0 1)) true) (_ bv2 11) (ite (and (distinct ((_ extract 1 1) ?x19303) (_ bv0 1)) true) (_ bv1 11) (_ bv0 11)))))
 (let ((?x7288 (ite (and (distinct ((_ extract 5 5) ?x19303) (_ bv0 1)) true) (_ bv5 11) (ite (and (distinct ((_ extract 4 4) ?x19303) (_ bv0 1)) true) (_ bv4 11) (_ bv3 11)))))
 (let ((?x2831 (ite (and (distinct ((_ extract 8 8) ?x19303) (_ bv0 1)) true) (_ bv8 11) (ite (and (distinct ((_ extract 7 7) ?x19303) (_ bv0 1)) true) (_ bv7 11) (_ bv6 11)))))
 (let ((?x19116 (ite (and (distinct ((_ extract 10 9) ?x19303) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) ?x19303) (_ bv0 1)) true) (_ bv10 11) (_ bv9 11)) ?x2831)))
 (let ((?x1415 (ite (and (distinct ((_ extract 10 6) ?x19303) (_ bv0 5)) true) ?x19116 (ite (and (distinct ((_ extract 5 3) ?x19303) (_ bv0 3)) true) ?x7288 ?x16227))))
 (let ((?x7229 (ite (and (distinct ((_ extract 3 2) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 3 3) C) (_ bv0 1)) true) (_ bv3 11) (_ bv2 11)) (ite (and (distinct ((_ extract 1 1) C) (_ bv0 1)) true) (_ bv1 11) (_ bv0 11)))))
 (let ((?x1906 (ite (and (distinct ((_ extract 7 6) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 7 7) C) (_ bv0 1)) true) (_ bv7 11) (_ bv6 11)) (ite (and (distinct ((_ extract 5 5) C) (_ bv0 1)) true) (_ bv5 11) (_ bv4 11)))))
 (let ((?x13143 (ite (and (distinct ((_ extract 11 10) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 11 11) C) (_ bv0 1)) true) (_ bv11 11) (_ bv10 11)) (ite (and (distinct ((_ extract 9 9) C) (_ bv0 1)) true) (_ bv9 11) (_ bv8 11)))))
 (let ((?x6724 (ite (and (distinct ((_ extract 15 14) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 15 15) C) (_ bv0 1)) true) (_ bv15 11) (_ bv14 11)) (ite (and (distinct ((_ extract 13 13) C) (_ bv0 1)) true) (_ bv13 11) (_ bv12 11)))))
 (let ((?x19595 (ite (and (distinct ((_ extract 15 8) C) (_ bv0 8)) true) (ite (and (distinct ((_ extract 15 12) C) (_ bv0 4)) true) ?x6724 ?x13143) (ite (and (distinct ((_ extract 7 4) C) (_ bv0 4)) true) ?x1906 ?x7229))))
 (let ((?x3600 (ite (and (distinct ((_ extract 19 18) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 19 19) C) (_ bv0 1)) true) (_ bv19 11) (_ bv18 11)) (ite (and (distinct ((_ extract 17 17) C) (_ bv0 1)) true) (_ bv17 11) (_ bv16 11)))))
 (let ((?x13784 (ite (and (distinct ((_ extract 23 22) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 23 23) C) (_ bv0 1)) true) (_ bv23 11) (_ bv22 11)) (ite (and (distinct ((_ extract 21 21) C) (_ bv0 1)) true) (_ bv21 11) (_ bv20 11)))))
 (let ((?x17179 (ite (and (distinct ((_ extract 27 26) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 27 27) C) (_ bv0 1)) true) (_ bv27 11) (_ bv26 11)) (ite (and (distinct ((_ extract 25 25) C) (_ bv0 1)) true) (_ bv25 11) (_ bv24 11)))))
 (let ((?x14999 (ite (and (distinct ((_ extract 31 30) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 31 31) C) (_ bv0 1)) true) (_ bv31 11) (_ bv30 11)) (ite (and (distinct ((_ extract 29 29) C) (_ bv0 1)) true) (_ bv29 11) (_ bv28 11)))))
 (let ((?x3092 (ite (and (distinct ((_ extract 31 24) C) (_ bv0 8)) true) (ite (and (distinct ((_ extract 31 28) C) (_ bv0 4)) true) ?x14999 ?x17179) (ite (and (distinct ((_ extract 23 20) C) (_ bv0 4)) true) ?x13784 ?x3600))))
 (let ((?x23143 (bvsub (ite (and (distinct ((_ extract 31 16) C) (_ bv0 16)) true) ?x3092 ?x19595) ?x1415)))
 (let ((?x18076 (ite (bvsgt (_ bv0 11) ?x23143) (_ bv0 11) ?x23143)))
 (let ((?x10839 (bvsub ?x1415 (ite (and (distinct ((_ extract 31 16) C) (_ bv0 16)) true) ?x3092 ?x19595))))
 (let ((?x12711 (ite (bvsgt (_ bv0 11) ?x10839) (_ bv0 11) ?x10839)))
 (let ((?x6660 (bvadd (bvxor (bvlshr (bvshl ((_ extract 10 0) (bvand %Op C)) ?x12711) ?x18076) ?x19303) C3)))
 (let (($x13062 (and (distinct (ite (= (ite (= (bvand %Op C) (_ bv0 32)) (_ bv1 1) (_ bv0 1)) (_ bv1 1)) C2 C3) ?x6660) true)))
 (let ((?x9994 (ite (and (distinct ((_ extract 3 2) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 3 3) C) (_ bv0 1)) true) (_ bv3 32) (_ bv2 32)) (ite (and (distinct ((_ extract 1 1) C) (_ bv0 1)) true) (_ bv1 32) (_ bv0 32)))))
 (let ((?x7945 (ite (and (distinct ((_ extract 7 6) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 7 7) C) (_ bv0 1)) true) (_ bv7 32) (_ bv6 32)) (ite (and (distinct ((_ extract 5 5) C) (_ bv0 1)) true) (_ bv5 32) (_ bv4 32)))))
 (let ((?x3354 (ite (and (distinct ((_ extract 11 10) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 11 11) C) (_ bv0 1)) true) (_ bv11 32) (_ bv10 32)) (ite (and (distinct ((_ extract 9 9) C) (_ bv0 1)) true) (_ bv9 32) (_ bv8 32)))))
 (let ((?x18863 (ite (and (distinct ((_ extract 15 14) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 15 15) C) (_ bv0 1)) true) (_ bv15 32) (_ bv14 32)) (ite (and (distinct ((_ extract 13 13) C) (_ bv0 1)) true) (_ bv13 32) (_ bv12 32)))))
 (let ((?x9271 (ite (and (distinct ((_ extract 15 8) C) (_ bv0 8)) true) (ite (and (distinct ((_ extract 15 12) C) (_ bv0 4)) true) ?x18863 ?x3354) (ite (and (distinct ((_ extract 7 4) C) (_ bv0 4)) true) ?x7945 ?x9994))))
 (let ((?x12818 (ite (and (distinct ((_ extract 19 18) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 19 19) C) (_ bv0 1)) true) (_ bv19 32) (_ bv18 32)) (ite (and (distinct ((_ extract 17 17) C) (_ bv0 1)) true) (_ bv17 32) (_ bv16 32)))))
 (let ((?x12671 (ite (and (distinct ((_ extract 23 22) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 23 23) C) (_ bv0 1)) true) (_ bv23 32) (_ bv22 32)) (ite (and (distinct ((_ extract 21 21) C) (_ bv0 1)) true) (_ bv21 32) (_ bv20 32)))))
 (let ((?x8238 (ite (and (distinct ((_ extract 27 26) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 27 27) C) (_ bv0 1)) true) (_ bv27 32) (_ bv26 32)) (ite (and (distinct ((_ extract 25 25) C) (_ bv0 1)) true) (_ bv25 32) (_ bv24 32)))))
 (let ((?x5204 (ite (and (distinct ((_ extract 31 30) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 31 31) C) (_ bv0 1)) true) (_ bv31 32) (_ bv30 32)) (ite (and (distinct ((_ extract 29 29) C) (_ bv0 1)) true) (_ bv29 32) (_ bv28 32)))))
 (let ((?x15855 (ite (and (distinct ((_ extract 31 24) C) (_ bv0 8)) true) (ite (and (distinct ((_ extract 31 28) C) (_ bv0 4)) true) ?x5204 ?x8238) (ite (and (distinct ((_ extract 23 20) C) (_ bv0 4)) true) ?x12671 ?x12818))))
 (and (and (and (distinct C (_ bv0 32)) true) (= (bvand C (bvsub C (_ bv1 32))) (_ bv0 32))) (and (and (distinct ?x19303 (_ bv0 11)) true) (= (bvand ?x19303 (bvsub ?x19303 (_ bv1 11))) (_ bv0 11))) (bvslt (ite (and (distinct ((_ extract 31 16) C) (_ bv0 16)) true) ?x15855 ?x9271) (_ bv11 32)) $x13062))))))))))))))))))))))))))))))))))
(check-sat)
