(set-info :status unknown)
(declare-fun mem0 () (_ BitVec 8))
(declare-fun alloca%a_2968 () (_ BitVec 8))
(declare-fun %a () (_ BitVec 64))
(declare-fun idx () (_ BitVec 64))
(declare-fun %x () (_ BitVec 5))
(declare-fun %idx () (_ BitVec 11))
(declare-fun u_%a () (_ BitVec 8))
(declare-fun u_%ptr () (_ BitVec 8))
(assert
 (forall ((alloca%a_2967 (_ BitVec 8)) (alloca%a_2969 (_ BitVec 8)) )(let (($x2278 (= idx (bvadd %a (_ bv0 64)))))
 (let ((?x11747 (ite $x2278 ((_ extract 7 0) alloca%a_2968) mem0)))
 (let ((?x3231 (ite (= (bvadd %a (bvmul (_ bv1 64) ((_ sign_extend 53) %idx))) (bvadd %a (_ bv0 64))) ((_ extract 7 0) alloca%a_2967) mem0)))
 (let (($x13800 (bvuge (_ bv0 64) (bvsub (bvadd %a (bvmul (_ bv1 64) ((_ sign_extend 53) %idx))) %a))))
 (let (($x4527 (and (distinct %a (_ bv0 64)) true)))
 (let (($x5495 (and $x4527 (and (distinct (bvadd %a (bvmul (_ bv1 64) ((_ sign_extend 53) %idx))) (_ bv0 64)) true) (and (bvuge (bvadd %a (bvmul (_ bv1 64) ((_ sign_extend 53) %idx))) %a) $x13800) (= idx (bvadd %a (bvmul (_ bv1 64) ((_ sign_extend 53) %idx)))))))
 (let ((?x2291 (ite $x5495 (concat ((_ extract 7 5) ?x3231) ((_ extract 4 0) %x)) (ite $x2278 ((_ extract 7 0) alloca%a_2967) mem0))))
 (and $x4527 $x4527 (= u_%ptr (_ bv1 8)) (= u_%a (_ bv1 8)) $x4527 $x4527 $x4527 (and (distinct (ite $x2278 ((_ extract 7 0) alloca%a_2969) ?x2291) ?x11747) true))))))))))
 )
(check-sat)
