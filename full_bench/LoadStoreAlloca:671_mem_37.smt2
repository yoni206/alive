(set-info :status unknown)
(declare-fun mem0 () (_ BitVec 8))
(declare-fun %y () (_ BitVec 39))
(declare-fun %p2 () (_ BitVec 64))
(declare-fun idx () (_ BitVec 64))
(declare-fun %x () (_ BitVec 39))
(declare-fun %p1 () (_ BitVec 64))
(declare-fun |ana_equivalentAddressValues(%p1, %p2)| () (_ BitVec 1))
(assert
 (let ((?x5049 (ite (and (and (distinct %p2 (_ bv0 64)) true) (or true true) (= idx %p2)) (concat ((_ extract 7 7) mem0) ((_ extract 6 0) %y)) mem0)))
 (let (($x11371 (or true true)))
 (let (($x4757 (and (distinct %p2 (_ bv0 64)) true)))
 (let ((?x6308 (ite (and $x4757 $x11371 (= idx (bvadd (bvadd %p2 (_ bv1 64)) (_ bv0 64)))) ((_ extract 14 7) %y) ?x5049)))
 (let ((?x17144 (ite (and $x4757 $x11371 (= idx (bvadd (bvadd %p2 (_ bv1 64)) (_ bv1 64)))) ((_ extract 22 15) %y) ?x6308)))
 (let ((?x17912 (ite (and $x4757 $x11371 (= idx (bvadd (bvadd %p2 (_ bv1 64)) (_ bv2 64)))) ((_ extract 30 23) %y) ?x17144)))
 (let ((?x11219 (ite (and $x4757 $x11371 (= idx (bvadd (bvadd %p2 (_ bv1 64)) (_ bv3 64)))) ((_ extract 38 31) %y) ?x17912)))
 (let ((?x7848 (ite (and (and (distinct %p1 (_ bv0 64)) true) $x11371 (= idx %p1)) (concat ((_ extract 7 7) mem0) ((_ extract 6 0) %x)) mem0)))
 (let (($x17212 (and (distinct %p1 (_ bv0 64)) true)))
 (let ((?x23767 (ite (and $x17212 $x11371 (= idx (bvadd (bvadd %p1 (_ bv1 64)) (_ bv0 64)))) ((_ extract 14 7) %x) ?x7848)))
 (let ((?x8696 (ite (and $x17212 $x11371 (= idx (bvadd (bvadd %p1 (_ bv1 64)) (_ bv1 64)))) ((_ extract 22 15) %x) ?x23767)))
 (let ((?x22068 (ite (and $x17212 $x11371 (= idx (bvadd (bvadd %p1 (_ bv1 64)) (_ bv2 64)))) ((_ extract 30 23) %x) ?x8696)))
 (let ((?x1304 (ite (and $x17212 $x11371 (= idx (bvadd (bvadd %p1 (_ bv1 64)) (_ bv3 64)))) ((_ extract 38 31) %x) ?x22068)))
 (let ((?x17538 (ite (and $x17212 $x11371 (= %p2 %p1)) (concat ((_ extract 7 7) mem0) ((_ extract 6 0) %x)) mem0)))
 (let ((?x14160 (ite (and $x17212 $x11371 (= %p2 (bvadd (bvadd %p1 (_ bv1 64)) (_ bv0 64)))) ((_ extract 14 7) %x) ?x17538)))
 (let ((?x10015 (ite (and $x17212 $x11371 (= %p2 (bvadd (bvadd %p1 (_ bv1 64)) (_ bv1 64)))) ((_ extract 22 15) %x) ?x14160)))
 (let ((?x3698 (ite (and $x17212 $x11371 (= %p2 (bvadd (bvadd %p1 (_ bv1 64)) (_ bv2 64)))) ((_ extract 30 23) %x) ?x10015)))
 (let ((?x4692 (ite (and $x17212 $x11371 (= %p2 (bvadd (bvadd %p1 (_ bv1 64)) (_ bv3 64)))) ((_ extract 38 31) %x) ?x3698)))
 (let ((?x17704 (ite (and $x17212 $x11371 $x4757 $x11371 (= idx %p2)) (concat ((_ extract 7 7) ?x4692) ((_ extract 6 0) %y)) ?x1304)))
 (let ((?x4370 (ite (and $x17212 $x11371 $x4757 $x11371 (= idx (bvadd (bvadd %p2 (_ bv1 64)) (_ bv0 64)))) ((_ extract 14 7) %y) ?x17704)))
 (let ((?x10012 (ite (and $x17212 $x11371 $x4757 $x11371 (= idx (bvadd (bvadd %p2 (_ bv1 64)) (_ bv1 64)))) ((_ extract 22 15) %y) ?x4370)))
 (let ((?x6283 (ite (and $x17212 $x11371 $x4757 $x11371 (= idx (bvadd (bvadd %p2 (_ bv1 64)) (_ bv2 64)))) ((_ extract 30 23) %y) ?x10012)))
 (let ((?x7164 (ite (and $x17212 $x11371 $x4757 $x11371 (= idx (bvadd (bvadd %p2 (_ bv1 64)) (_ bv3 64)))) ((_ extract 38 31) %y) ?x6283)))
 (let (($x1219 (= |ana_equivalentAddressValues(%p1, %p2)| (_ bv1 1))))
 (and (=> $x1219 (= %p1 %p2)) $x1219 (and (distinct ?x7164 ?x11219) true)))))))))))))))))))))))))))
(check-sat)
