(set-info :status unknown)
(declare-fun mem0 () (_ BitVec 8))
(declare-fun alloca%a_2980 () (_ BitVec 8))
(declare-fun %a () (_ BitVec 64))
(declare-fun idx () (_ BitVec 64))
(declare-fun %x () (_ BitVec 5))
(declare-fun %idx () (_ BitVec 15))
(declare-fun u_%a () (_ BitVec 8))
(declare-fun u_%ptr () (_ BitVec 8))
(assert
 (forall ((alloca%a_2979 (_ BitVec 8)) (alloca%a_2981 (_ BitVec 8)) )(let (($x12507 (= idx (bvadd %a (_ bv0 64)))))
 (let ((?x284 (ite $x12507 ((_ extract 7 0) alloca%a_2980) mem0)))
 (let ((?x12673 (ite (= (bvadd %a (bvmul (_ bv1 64) ((_ sign_extend 49) %idx))) (bvadd %a (_ bv0 64))) ((_ extract 7 0) alloca%a_2979) mem0)))
 (let (($x2377 (bvuge (_ bv0 64) (bvsub (bvadd %a (bvmul (_ bv1 64) ((_ sign_extend 49) %idx))) %a))))
 (let (($x14186 (and (distinct %a (_ bv0 64)) true)))
 (let (($x5810 (and $x14186 (and (distinct (bvadd %a (bvmul (_ bv1 64) ((_ sign_extend 49) %idx))) (_ bv0 64)) true) (and (bvuge (bvadd %a (bvmul (_ bv1 64) ((_ sign_extend 49) %idx))) %a) $x2377) (= idx (bvadd %a (bvmul (_ bv1 64) ((_ sign_extend 49) %idx)))))))
 (let ((?x1440 (ite $x5810 (concat ((_ extract 7 5) ?x12673) ((_ extract 4 0) %x)) (ite $x12507 ((_ extract 7 0) alloca%a_2979) mem0))))
 (and $x14186 $x14186 (= u_%ptr (_ bv1 8)) (= u_%a (_ bv1 8)) $x14186 $x14186 $x14186 (and (distinct (ite $x12507 ((_ extract 7 0) alloca%a_2981) ?x1440) ?x284) true))))))))))
 )
(check-sat)
