(set-info :source |
 Generated by Alive 0.1
 More info in N. P. Lopes, D. Menendez, S. Nagarakatte, J. Regehr.
 Provably Correct Peephole Optimizations with Alive. In PLDI'15.
|)

(set-info :status unknown)
(declare-fun |ana_MaskedValueIsZero(%B, ((1 << (width(C2) - countLeadingZeros(((C2 - 1) ^ C2)))) - 1))| () (_ BitVec 1))
(declare-fun C2 () (_ BitVec 62))
(declare-fun C1 () (_ BitVec 62))
(declare-fun %B () (_ BitVec 62))
(assert
 (let (($x131713 (= |ana_MaskedValueIsZero(%B, ((1 << (width(C2) - countLeadingZeros(((C2 - 1) ^ C2)))) - 1))| (_ bv1 1))))
 (let ((?x32031 (bvsub C2 (_ bv1 62))))
 (let ((?x158678 (bvor ?x32031 C2)))
 (let (($x158656 (and (and (distinct ?x158678 (_ bv0 62)) true) (= (bvand (bvadd ?x158678 (_ bv1 62)) ?x158678) (_ bv0 62)) $x131713)))
 (let (($x158651 (or (= (bvand (bvadd C2 (_ bv1 62)) (bvsub (bvadd C2 (_ bv1 62)) (_ bv1 62))) (_ bv0 62)) $x158656)))
 (let ((?x132400 (bvand C1 C2)))
 (let (($x158677 (= ?x132400 C2)))
 (let ((?x158648 (ite (= ((_ extract 1 1) (bvxor ?x32031 C2)) (_ bv1 1)) (_ bv60 62) (ite (= ((_ extract 0 0) (bvxor ?x32031 C2)) (_ bv1 1)) (_ bv61 62) (_ bv62 62)))))
 (let ((?x158637 (ite (= ((_ extract 3 3) (bvxor ?x32031 C2)) (_ bv1 1)) (_ bv58 62) (ite (= ((_ extract 2 2) (bvxor ?x32031 C2)) (_ bv1 1)) (_ bv59 62) ?x158648))))
 (let ((?x158622 (ite (= ((_ extract 5 5) (bvxor ?x32031 C2)) (_ bv1 1)) (_ bv56 62) (ite (= ((_ extract 4 4) (bvxor ?x32031 C2)) (_ bv1 1)) (_ bv57 62) ?x158637))))
 (let ((?x158618 (ite (= ((_ extract 7 7) (bvxor ?x32031 C2)) (_ bv1 1)) (_ bv54 62) (ite (= ((_ extract 6 6) (bvxor ?x32031 C2)) (_ bv1 1)) (_ bv55 62) ?x158622))))
 (let ((?x158847 (ite (= ((_ extract 9 9) (bvxor ?x32031 C2)) (_ bv1 1)) (_ bv52 62) (ite (= ((_ extract 8 8) (bvxor ?x32031 C2)) (_ bv1 1)) (_ bv53 62) ?x158618))))
 (let ((?x158842 (ite (= ((_ extract 11 11) (bvxor ?x32031 C2)) (_ bv1 1)) (_ bv50 62) (ite (= ((_ extract 10 10) (bvxor ?x32031 C2)) (_ bv1 1)) (_ bv51 62) ?x158847))))
 (let ((?x158838 (ite (= ((_ extract 13 13) (bvxor ?x32031 C2)) (_ bv1 1)) (_ bv48 62) (ite (= ((_ extract 12 12) (bvxor ?x32031 C2)) (_ bv1 1)) (_ bv49 62) ?x158842))))
 (let ((?x158834 (ite (= ((_ extract 15 15) (bvxor ?x32031 C2)) (_ bv1 1)) (_ bv46 62) (ite (= ((_ extract 14 14) (bvxor ?x32031 C2)) (_ bv1 1)) (_ bv47 62) ?x158838))))
 (let ((?x158830 (ite (= ((_ extract 17 17) (bvxor ?x32031 C2)) (_ bv1 1)) (_ bv44 62) (ite (= ((_ extract 16 16) (bvxor ?x32031 C2)) (_ bv1 1)) (_ bv45 62) ?x158834))))
 (let ((?x158823 (ite (= ((_ extract 19 19) (bvxor ?x32031 C2)) (_ bv1 1)) (_ bv42 62) (ite (= ((_ extract 18 18) (bvxor ?x32031 C2)) (_ bv1 1)) (_ bv43 62) ?x158830))))
 (let ((?x158816 (ite (= ((_ extract 21 21) (bvxor ?x32031 C2)) (_ bv1 1)) (_ bv40 62) (ite (= ((_ extract 20 20) (bvxor ?x32031 C2)) (_ bv1 1)) (_ bv41 62) ?x158823))))
 (let ((?x158809 (ite (= ((_ extract 23 23) (bvxor ?x32031 C2)) (_ bv1 1)) (_ bv38 62) (ite (= ((_ extract 22 22) (bvxor ?x32031 C2)) (_ bv1 1)) (_ bv39 62) ?x158816))))
 (let ((?x158805 (ite (= ((_ extract 25 25) (bvxor ?x32031 C2)) (_ bv1 1)) (_ bv36 62) (ite (= ((_ extract 24 24) (bvxor ?x32031 C2)) (_ bv1 1)) (_ bv37 62) ?x158809))))
 (let ((?x158801 (ite (= ((_ extract 27 27) (bvxor ?x32031 C2)) (_ bv1 1)) (_ bv34 62) (ite (= ((_ extract 26 26) (bvxor ?x32031 C2)) (_ bv1 1)) (_ bv35 62) ?x158805))))
 (let ((?x158797 (ite (= ((_ extract 29 29) (bvxor ?x32031 C2)) (_ bv1 1)) (_ bv32 62) (ite (= ((_ extract 28 28) (bvxor ?x32031 C2)) (_ bv1 1)) (_ bv33 62) ?x158801))))
 (let ((?x158790 (ite (= ((_ extract 31 31) (bvxor ?x32031 C2)) (_ bv1 1)) (_ bv30 62) (ite (= ((_ extract 30 30) (bvxor ?x32031 C2)) (_ bv1 1)) (_ bv31 62) ?x158797))))
 (let ((?x158783 (ite (= ((_ extract 33 33) (bvxor ?x32031 C2)) (_ bv1 1)) (_ bv28 62) (ite (= ((_ extract 32 32) (bvxor ?x32031 C2)) (_ bv1 1)) (_ bv29 62) ?x158790))))
 (let ((?x158776 (ite (= ((_ extract 35 35) (bvxor ?x32031 C2)) (_ bv1 1)) (_ bv26 62) (ite (= ((_ extract 34 34) (bvxor ?x32031 C2)) (_ bv1 1)) (_ bv27 62) ?x158783))))
 (let ((?x158769 (ite (= ((_ extract 37 37) (bvxor ?x32031 C2)) (_ bv1 1)) (_ bv24 62) (ite (= ((_ extract 36 36) (bvxor ?x32031 C2)) (_ bv1 1)) (_ bv25 62) ?x158776))))
 (let ((?x158765 (ite (= ((_ extract 39 39) (bvxor ?x32031 C2)) (_ bv1 1)) (_ bv22 62) (ite (= ((_ extract 38 38) (bvxor ?x32031 C2)) (_ bv1 1)) (_ bv23 62) ?x158769))))
 (let ((?x158761 (ite (= ((_ extract 41 41) (bvxor ?x32031 C2)) (_ bv1 1)) (_ bv20 62) (ite (= ((_ extract 40 40) (bvxor ?x32031 C2)) (_ bv1 1)) (_ bv21 62) ?x158765))))
 (let ((?x158754 (ite (= ((_ extract 43 43) (bvxor ?x32031 C2)) (_ bv1 1)) (_ bv18 62) (ite (= ((_ extract 42 42) (bvxor ?x32031 C2)) (_ bv1 1)) (_ bv19 62) ?x158761))))
 (let ((?x158747 (ite (= ((_ extract 45 45) (bvxor ?x32031 C2)) (_ bv1 1)) (_ bv16 62) (ite (= ((_ extract 44 44) (bvxor ?x32031 C2)) (_ bv1 1)) (_ bv17 62) ?x158754))))
 (let ((?x158743 (ite (= ((_ extract 47 47) (bvxor ?x32031 C2)) (_ bv1 1)) (_ bv14 62) (ite (= ((_ extract 46 46) (bvxor ?x32031 C2)) (_ bv1 1)) (_ bv15 62) ?x158747))))
 (let ((?x158739 (ite (= ((_ extract 49 49) (bvxor ?x32031 C2)) (_ bv1 1)) (_ bv12 62) (ite (= ((_ extract 48 48) (bvxor ?x32031 C2)) (_ bv1 1)) (_ bv13 62) ?x158743))))
 (let ((?x158735 (ite (= ((_ extract 51 51) (bvxor ?x32031 C2)) (_ bv1 1)) (_ bv10 62) (ite (= ((_ extract 50 50) (bvxor ?x32031 C2)) (_ bv1 1)) (_ bv11 62) ?x158739))))
 (let ((?x158731 (ite (= ((_ extract 53 53) (bvxor ?x32031 C2)) (_ bv1 1)) (_ bv8 62) (ite (= ((_ extract 52 52) (bvxor ?x32031 C2)) (_ bv1 1)) (_ bv9 62) ?x158735))))
 (let ((?x158727 (ite (= ((_ extract 55 55) (bvxor ?x32031 C2)) (_ bv1 1)) (_ bv6 62) (ite (= ((_ extract 54 54) (bvxor ?x32031 C2)) (_ bv1 1)) (_ bv7 62) ?x158731))))
 (let ((?x158720 (ite (= ((_ extract 57 57) (bvxor ?x32031 C2)) (_ bv1 1)) (_ bv4 62) (ite (= ((_ extract 56 56) (bvxor ?x32031 C2)) (_ bv1 1)) (_ bv5 62) ?x158727))))
 (let ((?x158713 (ite (= ((_ extract 59 59) (bvxor ?x32031 C2)) (_ bv1 1)) (_ bv2 62) (ite (= ((_ extract 58 58) (bvxor ?x32031 C2)) (_ bv1 1)) (_ bv3 62) ?x158720))))
 (let ((?x158709 (ite (= ((_ extract 61 61) (bvxor ?x32031 C2)) (_ bv1 1)) (_ bv0 62) (ite (= ((_ extract 60 60) (bvxor ?x32031 C2)) (_ bv1 1)) (_ bv1 62) ?x158713))))
 (let (($x158655 (=> $x131713 (= (bvand %B (bvsub (bvshl (_ bv1 62) (bvsub (_ bv62 62) ?x158709)) (_ bv1 62))) (_ bv0 62)))))
 (and $x158655 $x158677 $x158651 false)))))))))))))))))))))))))))))))))))))))))
(check-sat)
