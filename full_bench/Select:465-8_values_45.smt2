(set-info :status unknown)
(declare-fun %Y () (_ BitVec 11))
(declare-fun C2 () (_ BitVec 11))
(declare-fun C1 () (_ BitVec 47))
(declare-fun %X () (_ BitVec 47))
(assert
 (let ((?x25001 (ite (and (distinct ((_ extract 2 2) C2) (_ bv0 1)) true) (_ bv2 47) (ite (and (distinct ((_ extract 1 1) C2) (_ bv0 1)) true) (_ bv1 47) (_ bv0 47)))))
 (let ((?x144 (ite (and (distinct ((_ extract 5 5) C2) (_ bv0 1)) true) (_ bv5 47) (ite (and (distinct ((_ extract 4 4) C2) (_ bv0 1)) true) (_ bv4 47) (_ bv3 47)))))
 (let ((?x10994 (ite (and (distinct ((_ extract 8 8) C2) (_ bv0 1)) true) (_ bv8 47) (ite (and (distinct ((_ extract 7 7) C2) (_ bv0 1)) true) (_ bv7 47) (_ bv6 47)))))
 (let ((?x19522 (ite (and (distinct ((_ extract 10 9) C2) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) C2) (_ bv0 1)) true) (_ bv10 47) (_ bv9 47)) ?x10994)))
 (let ((?x8331 (ite (and (distinct ((_ extract 10 6) C2) (_ bv0 5)) true) ?x19522 (ite (and (distinct ((_ extract 5 3) C2) (_ bv0 3)) true) ?x144 ?x25001))))
 (let ((?x14461 (ite (and (distinct ((_ extract 2 2) C1) (_ bv0 1)) true) (_ bv2 47) (ite (and (distinct ((_ extract 1 1) C1) (_ bv0 1)) true) (_ bv1 47) (_ bv0 47)))))
 (let ((?x15273 (ite (and (distinct ((_ extract 5 5) C1) (_ bv0 1)) true) (_ bv5 47) (ite (and (distinct ((_ extract 4 4) C1) (_ bv0 1)) true) (_ bv4 47) (_ bv3 47)))))
 (let ((?x19006 (ite (and (distinct ((_ extract 8 8) C1) (_ bv0 1)) true) (_ bv8 47) (ite (and (distinct ((_ extract 7 7) C1) (_ bv0 1)) true) (_ bv7 47) (_ bv6 47)))))
 (let ((?x16409 (ite (and (distinct ((_ extract 11 11) C1) (_ bv0 1)) true) (_ bv11 47) (ite (and (distinct ((_ extract 10 10) C1) (_ bv0 1)) true) (_ bv10 47) (_ bv9 47)))))
 (let ((?x20045 (ite (and (distinct ((_ extract 11 6) C1) (_ bv0 6)) true) (ite (and (distinct ((_ extract 11 9) C1) (_ bv0 3)) true) ?x16409 ?x19006) (ite (and (distinct ((_ extract 5 3) C1) (_ bv0 3)) true) ?x15273 ?x14461))))
 (let ((?x6081 (ite (and (distinct ((_ extract 14 14) C1) (_ bv0 1)) true) (_ bv14 47) (ite (and (distinct ((_ extract 13 13) C1) (_ bv0 1)) true) (_ bv13 47) (_ bv12 47)))))
 (let ((?x10767 (ite (and (distinct ((_ extract 17 17) C1) (_ bv0 1)) true) (_ bv17 47) (ite (and (distinct ((_ extract 16 16) C1) (_ bv0 1)) true) (_ bv16 47) (_ bv15 47)))))
 (let ((?x3025 (ite (and (distinct ((_ extract 20 20) C1) (_ bv0 1)) true) (_ bv20 47) (ite (and (distinct ((_ extract 19 19) C1) (_ bv0 1)) true) (_ bv19 47) (_ bv18 47)))))
 (let ((?x10571 (ite (and (distinct ((_ extract 23 23) C1) (_ bv0 1)) true) (_ bv23 47) (ite (and (distinct ((_ extract 22 22) C1) (_ bv0 1)) true) (_ bv22 47) (_ bv21 47)))))
 (let ((?x14531 (ite (and (distinct ((_ extract 23 18) C1) (_ bv0 6)) true) (ite (and (distinct ((_ extract 23 21) C1) (_ bv0 3)) true) ?x10571 ?x3025) (ite (and (distinct ((_ extract 17 15) C1) (_ bv0 3)) true) ?x10767 ?x6081))))
 (let ((?x17730 (ite (and (distinct ((_ extract 26 26) C1) (_ bv0 1)) true) (_ bv26 47) (ite (and (distinct ((_ extract 25 25) C1) (_ bv0 1)) true) (_ bv25 47) (_ bv24 47)))))
 (let ((?x17490 (ite (and (distinct ((_ extract 29 29) C1) (_ bv0 1)) true) (_ bv29 47) (ite (and (distinct ((_ extract 28 28) C1) (_ bv0 1)) true) (_ bv28 47) (_ bv27 47)))))
 (let ((?x23614 (ite (and (distinct ((_ extract 32 32) C1) (_ bv0 1)) true) (_ bv32 47) (ite (and (distinct ((_ extract 31 31) C1) (_ bv0 1)) true) (_ bv31 47) (_ bv30 47)))))
 (let ((?x19412 (ite (and (distinct ((_ extract 35 35) C1) (_ bv0 1)) true) (_ bv35 47) (ite (and (distinct ((_ extract 34 34) C1) (_ bv0 1)) true) (_ bv34 47) (_ bv33 47)))))
 (let ((?x5963 (ite (and (distinct ((_ extract 35 30) C1) (_ bv0 6)) true) (ite (and (distinct ((_ extract 35 33) C1) (_ bv0 3)) true) ?x19412 ?x23614) (ite (and (distinct ((_ extract 29 27) C1) (_ bv0 3)) true) ?x17490 ?x17730))))
 (let ((?x6999 (ite (and (distinct ((_ extract 38 38) C1) (_ bv0 1)) true) (_ bv38 47) (ite (and (distinct ((_ extract 37 37) C1) (_ bv0 1)) true) (_ bv37 47) (_ bv36 47)))))
 (let ((?x18861 (ite (and (distinct ((_ extract 41 41) C1) (_ bv0 1)) true) (_ bv41 47) (ite (and (distinct ((_ extract 40 40) C1) (_ bv0 1)) true) (_ bv40 47) (_ bv39 47)))))
 (let ((?x23437 (ite (and (distinct ((_ extract 44 44) C1) (_ bv0 1)) true) (_ bv44 47) (ite (and (distinct ((_ extract 43 43) C1) (_ bv0 1)) true) (_ bv43 47) (_ bv42 47)))))
 (let ((?x7261 (ite (and (distinct ((_ extract 46 45) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 46 46) C1) (_ bv0 1)) true) (_ bv46 47) (_ bv45 47)) ?x23437)))
 (let ((?x23197 (ite (and (distinct ((_ extract 46 42) C1) (_ bv0 5)) true) ?x7261 (ite (and (distinct ((_ extract 41 39) C1) (_ bv0 3)) true) ?x18861 ?x6999))))
 (let ((?x5840 (ite (and (distinct ((_ extract 46 24) C1) (_ bv0 23)) true) (ite (and (distinct ((_ extract 46 36) C1) (_ bv0 11)) true) ?x23197 ?x5963) (ite (and (distinct ((_ extract 23 12) C1) (_ bv0 12)) true) ?x14531 ?x20045))))
 (let ((?x13723 (bvsub ?x5840 ?x8331)))
 (let ((?x9759 (bvand %X C1)))
 (let ((?x10352 (bvor %Y C2)))
 (let (($x12267 (and (distinct (ite (= (ite (and (distinct ?x9759 (_ bv0 47)) true) (_ bv1 1) (_ bv0 1)) (_ bv1 1)) ?x10352 %Y) (bvor ((_ extract 10 0) (bvlshr ?x9759 ?x13723)) %Y)) true)))
 (let ((?x11675 (ite (and (distinct ((_ extract 2 2) C1) (_ bv0 1)) true) (_ bv2 32) (ite (and (distinct ((_ extract 1 1) C1) (_ bv0 1)) true) (_ bv1 32) (_ bv0 32)))))
 (let ((?x22634 (ite (and (distinct ((_ extract 5 5) C1) (_ bv0 1)) true) (_ bv5 32) (ite (and (distinct ((_ extract 4 4) C1) (_ bv0 1)) true) (_ bv4 32) (_ bv3 32)))))
 (let ((?x11647 (ite (and (distinct ((_ extract 8 8) C1) (_ bv0 1)) true) (_ bv8 32) (ite (and (distinct ((_ extract 7 7) C1) (_ bv0 1)) true) (_ bv7 32) (_ bv6 32)))))
 (let ((?x429 (ite (and (distinct ((_ extract 11 11) C1) (_ bv0 1)) true) (_ bv11 32) (ite (and (distinct ((_ extract 10 10) C1) (_ bv0 1)) true) (_ bv10 32) (_ bv9 32)))))
 (let ((?x7263 (ite (and (distinct ((_ extract 11 6) C1) (_ bv0 6)) true) (ite (and (distinct ((_ extract 11 9) C1) (_ bv0 3)) true) ?x429 ?x11647) (ite (and (distinct ((_ extract 5 3) C1) (_ bv0 3)) true) ?x22634 ?x11675))))
 (let ((?x6910 (ite (and (distinct ((_ extract 14 14) C1) (_ bv0 1)) true) (_ bv14 32) (ite (and (distinct ((_ extract 13 13) C1) (_ bv0 1)) true) (_ bv13 32) (_ bv12 32)))))
 (let ((?x23976 (ite (and (distinct ((_ extract 17 17) C1) (_ bv0 1)) true) (_ bv17 32) (ite (and (distinct ((_ extract 16 16) C1) (_ bv0 1)) true) (_ bv16 32) (_ bv15 32)))))
 (let ((?x22792 (ite (and (distinct ((_ extract 20 20) C1) (_ bv0 1)) true) (_ bv20 32) (ite (and (distinct ((_ extract 19 19) C1) (_ bv0 1)) true) (_ bv19 32) (_ bv18 32)))))
 (let ((?x15835 (ite (and (distinct ((_ extract 23 23) C1) (_ bv0 1)) true) (_ bv23 32) (ite (and (distinct ((_ extract 22 22) C1) (_ bv0 1)) true) (_ bv22 32) (_ bv21 32)))))
 (let ((?x23628 (ite (and (distinct ((_ extract 23 18) C1) (_ bv0 6)) true) (ite (and (distinct ((_ extract 23 21) C1) (_ bv0 3)) true) ?x15835 ?x22792) (ite (and (distinct ((_ extract 17 15) C1) (_ bv0 3)) true) ?x23976 ?x6910))))
 (let ((?x14208 (ite (and (distinct ((_ extract 26 26) C1) (_ bv0 1)) true) (_ bv26 32) (ite (and (distinct ((_ extract 25 25) C1) (_ bv0 1)) true) (_ bv25 32) (_ bv24 32)))))
 (let ((?x9428 (ite (and (distinct ((_ extract 29 29) C1) (_ bv0 1)) true) (_ bv29 32) (ite (and (distinct ((_ extract 28 28) C1) (_ bv0 1)) true) (_ bv28 32) (_ bv27 32)))))
 (let ((?x7380 (ite (and (distinct ((_ extract 32 32) C1) (_ bv0 1)) true) (_ bv32 32) (ite (and (distinct ((_ extract 31 31) C1) (_ bv0 1)) true) (_ bv31 32) (_ bv30 32)))))
 (let ((?x5284 (ite (and (distinct ((_ extract 35 35) C1) (_ bv0 1)) true) (_ bv35 32) (ite (and (distinct ((_ extract 34 34) C1) (_ bv0 1)) true) (_ bv34 32) (_ bv33 32)))))
 (let ((?x14143 (ite (and (distinct ((_ extract 35 30) C1) (_ bv0 6)) true) (ite (and (distinct ((_ extract 35 33) C1) (_ bv0 3)) true) ?x5284 ?x7380) (ite (and (distinct ((_ extract 29 27) C1) (_ bv0 3)) true) ?x9428 ?x14208))))
 (let ((?x3139 (ite (and (distinct ((_ extract 38 38) C1) (_ bv0 1)) true) (_ bv38 32) (ite (and (distinct ((_ extract 37 37) C1) (_ bv0 1)) true) (_ bv37 32) (_ bv36 32)))))
 (let ((?x1696 (ite (and (distinct ((_ extract 41 41) C1) (_ bv0 1)) true) (_ bv41 32) (ite (and (distinct ((_ extract 40 40) C1) (_ bv0 1)) true) (_ bv40 32) (_ bv39 32)))))
 (let ((?x17222 (ite (and (distinct ((_ extract 44 44) C1) (_ bv0 1)) true) (_ bv44 32) (ite (and (distinct ((_ extract 43 43) C1) (_ bv0 1)) true) (_ bv43 32) (_ bv42 32)))))
 (let ((?x14782 (ite (and (distinct ((_ extract 46 45) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 46 46) C1) (_ bv0 1)) true) (_ bv46 32) (_ bv45 32)) ?x17222)))
 (let ((?x3638 (ite (and (distinct ((_ extract 46 42) C1) (_ bv0 5)) true) ?x14782 (ite (and (distinct ((_ extract 41 39) C1) (_ bv0 3)) true) ?x1696 ?x3139))))
 (let ((?x1691 (ite (and (distinct ((_ extract 46 24) C1) (_ bv0 23)) true) (ite (and (distinct ((_ extract 46 36) C1) (_ bv0 11)) true) ?x3638 ?x14143) (ite (and (distinct ((_ extract 23 12) C1) (_ bv0 12)) true) ?x23628 ?x7263))))
 (let ((?x21217 (ite (and (distinct ((_ extract 2 2) C2) (_ bv0 1)) true) (_ bv2 32) (ite (and (distinct ((_ extract 1 1) C2) (_ bv0 1)) true) (_ bv1 32) (_ bv0 32)))))
 (let ((?x11424 (ite (and (distinct ((_ extract 5 5) C2) (_ bv0 1)) true) (_ bv5 32) (ite (and (distinct ((_ extract 4 4) C2) (_ bv0 1)) true) (_ bv4 32) (_ bv3 32)))))
 (let ((?x20073 (ite (and (distinct ((_ extract 8 8) C2) (_ bv0 1)) true) (_ bv8 32) (ite (and (distinct ((_ extract 7 7) C2) (_ bv0 1)) true) (_ bv7 32) (_ bv6 32)))))
 (let ((?x12101 (ite (and (distinct ((_ extract 10 9) C2) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) C2) (_ bv0 1)) true) (_ bv10 32) (_ bv9 32)) ?x20073)))
 (let ((?x9829 (ite (and (distinct ((_ extract 10 6) C2) (_ bv0 5)) true) ?x12101 (ite (and (distinct ((_ extract 5 3) C2) (_ bv0 3)) true) ?x11424 ?x21217))))
 (and (and (and (distinct C1 (_ bv0 47)) true) (= (bvand C1 (bvsub C1 (_ bv1 47))) (_ bv0 47))) (and (and (distinct C2 (_ bv0 11)) true) (= (bvand C2 (bvsub C2 (_ bv1 11))) (_ bv0 11))) (bvslt ?x9829 ?x1691) $x12267))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
