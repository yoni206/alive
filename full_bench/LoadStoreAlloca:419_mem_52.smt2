(set-info :status unknown)
(declare-fun mem0 () (_ BitVec 8))
(declare-fun %x () (_ BitVec 53))
(declare-fun %p1 () (_ BitVec 64))
(declare-fun idx () (_ BitVec 64))
(declare-fun |ana_equivalentAddressValues(%p1, %p2)| () (_ BitVec 1))
(declare-fun %p2 () (_ BitVec 64))
(assert
 (let ((?x4356 (concat ((_ extract 7 5) mem0) ((_ extract 4 0) %x))))
 (let ((?x22608 (ite (and (and (distinct %p1 (_ bv0 64)) true) (or true true) (= idx %p1)) ?x4356 mem0)))
 (let ((?x4086 ((_ extract 12 5) %x)))
 (let (($x10245 (or true true)))
 (let (($x15865 (and (distinct %p1 (_ bv0 64)) true)))
 (let ((?x21475 (ite (and $x15865 $x10245 (= idx (bvadd (bvadd %p1 (_ bv1 64)) (_ bv0 64)))) ?x4086 ?x22608)))
 (let ((?x19806 ((_ extract 20 13) %x)))
 (let ((?x7186 (ite (and $x15865 $x10245 (= idx (bvadd (bvadd %p1 (_ bv1 64)) (_ bv1 64)))) ?x19806 ?x21475)))
 (let ((?x8352 ((_ extract 28 21) %x)))
 (let ((?x7035 (ite (and $x15865 $x10245 (= idx (bvadd (bvadd %p1 (_ bv1 64)) (_ bv2 64)))) ?x8352 ?x7186)))
 (let ((?x13447 ((_ extract 36 29) %x)))
 (let ((?x10781 (ite (and $x15865 $x10245 (= idx (bvadd (bvadd %p1 (_ bv1 64)) (_ bv3 64)))) ?x13447 ?x7035)))
 (let ((?x23974 ((_ extract 44 37) %x)))
 (let ((?x12461 (ite (and $x15865 $x10245 (= idx (bvadd (bvadd %p1 (_ bv1 64)) (_ bv4 64)))) ?x23974 ?x10781)))
 (let ((?x20203 ((_ extract 52 45) %x)))
 (let ((?x21473 (ite (and $x15865 $x10245 (= idx (bvadd (bvadd %p1 (_ bv1 64)) (_ bv5 64)))) ?x20203 ?x12461)))
 (let (($x17248 (= |ana_equivalentAddressValues(%p1, %p2)| (_ bv1 1))))
 (and (=> $x17248 (= %p1 %p2)) $x17248 (and (distinct ?x21473 ?x21473) true))))))))))))))))))))
(check-sat)
