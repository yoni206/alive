(set-info :source |
 Generated by Alive 0.1
 More info in N. P. Lopes, D. Menendez, S. Nagarakatte, J. Regehr.
 Provably Correct Peephole Optimizations with Alive. In PLDI'15.
|)

(set-info :status unknown)
(declare-fun mem0 () (_ BitVec 8))
(declare-fun |ana_MaskedValueIsZero(%A, lshr(-1, countLeadingZeros(C)))| () (_ BitVec 1))
(declare-fun C () (_ BitVec 33))
(declare-fun %A () (_ BitVec 33))
(assert
 (let (($x927 (and (distinct mem0 mem0) true)))
 (let (($x186517 (= |ana_MaskedValueIsZero(%A, lshr(-1, countLeadingZeros(C)))| (_ bv1 1))))
 (let ((?x187584 (ite (= ((_ extract 1 1) C) (_ bv1 1)) (_ bv31 33) (ite (= ((_ extract 0 0) C) (_ bv1 1)) (_ bv32 33) (_ bv33 33)))))
 (let ((?x187580 (ite (= ((_ extract 3 3) C) (_ bv1 1)) (_ bv29 33) (ite (= ((_ extract 2 2) C) (_ bv1 1)) (_ bv30 33) ?x187584))))
 (let ((?x187573 (ite (= ((_ extract 5 5) C) (_ bv1 1)) (_ bv27 33) (ite (= ((_ extract 4 4) C) (_ bv1 1)) (_ bv28 33) ?x187580))))
 (let ((?x187566 (ite (= ((_ extract 7 7) C) (_ bv1 1)) (_ bv25 33) (ite (= ((_ extract 6 6) C) (_ bv1 1)) (_ bv26 33) ?x187573))))
 (let ((?x187562 (ite (= ((_ extract 9 9) C) (_ bv1 1)) (_ bv23 33) (ite (= ((_ extract 8 8) C) (_ bv1 1)) (_ bv24 33) ?x187566))))
 (let ((?x187558 (ite (= ((_ extract 11 11) C) (_ bv1 1)) (_ bv21 33) (ite (= ((_ extract 10 10) C) (_ bv1 1)) (_ bv22 33) ?x187562))))
 (let ((?x187551 (ite (= ((_ extract 13 13) C) (_ bv1 1)) (_ bv19 33) (ite (= ((_ extract 12 12) C) (_ bv1 1)) (_ bv20 33) ?x187558))))
 (let ((?x187547 (ite (= ((_ extract 15 15) C) (_ bv1 1)) (_ bv17 33) (ite (= ((_ extract 14 14) C) (_ bv1 1)) (_ bv18 33) ?x187551))))
 (let ((?x187543 (ite (= ((_ extract 17 17) C) (_ bv1 1)) (_ bv15 33) (ite (= ((_ extract 16 16) C) (_ bv1 1)) (_ bv16 33) ?x187547))))
 (let ((?x187536 (ite (= ((_ extract 19 19) C) (_ bv1 1)) (_ bv13 33) (ite (= ((_ extract 18 18) C) (_ bv1 1)) (_ bv14 33) ?x187543))))
 (let ((?x187529 (ite (= ((_ extract 21 21) C) (_ bv1 1)) (_ bv11 33) (ite (= ((_ extract 20 20) C) (_ bv1 1)) (_ bv12 33) ?x187536))))
 (let ((?x187525 (ite (= ((_ extract 23 23) C) (_ bv1 1)) (_ bv9 33) (ite (= ((_ extract 22 22) C) (_ bv1 1)) (_ bv10 33) ?x187529))))
 (let ((?x187518 (ite (= ((_ extract 25 25) C) (_ bv1 1)) (_ bv7 33) (ite (= ((_ extract 24 24) C) (_ bv1 1)) (_ bv8 33) ?x187525))))
 (let ((?x187514 (ite (= ((_ extract 27 27) C) (_ bv1 1)) (_ bv5 33) (ite (= ((_ extract 26 26) C) (_ bv1 1)) (_ bv6 33) ?x187518))))
 (let ((?x187510 (ite (= ((_ extract 29 29) C) (_ bv1 1)) (_ bv3 33) (ite (= ((_ extract 28 28) C) (_ bv1 1)) (_ bv4 33) ?x187514))))
 (let ((?x187503 (ite (= ((_ extract 31 31) C) (_ bv1 1)) (_ bv1 33) (ite (= ((_ extract 30 30) C) (_ bv1 1)) (_ bv2 33) ?x187510))))
 (let (($x187654 (= (bvand %A (bvlshr (_ bv8589934591 33) (ite (= ((_ extract 32 32) C) (_ bv1 1)) (_ bv0 33) ?x187503))) (_ bv0 33))))
 (let (($x187655 (=> $x186517 $x187654)))
 (and $x187655 $x186517 $x927))))))))))))))))))))))
(check-sat)
