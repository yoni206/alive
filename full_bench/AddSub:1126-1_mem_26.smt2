(set-info :source |
 Generated by Alive 0.1
 More info in N. P. Lopes, D. Menendez, S. Nagarakatte, J. Regehr.
 Provably Correct Peephole Optimizations with Alive. In PLDI'15.
|)

(set-info :status unknown)
(declare-fun mem0 () (_ BitVec 8))
(declare-fun |ana_MaskedValueIsZero(%Y, (-1 << (log2(C1) + 1)))| () (_ BitVec 1))
(declare-fun C1 () (_ BitVec 31))
(declare-fun C2 () (_ BitVec 31))
(declare-fun %Y () (_ BitVec 31))
(assert
 (let (($x927 (and (distinct mem0 mem0) true)))
 (let (($x8887 (= |ana_MaskedValueIsZero(%Y, (-1 << (log2(C1) + 1)))| (_ bv1 1))))
 (let (($x21891 (and (and (distinct C1 (_ bv0 31)) true) (= (bvand C1 (bvsub C1 (_ bv1 31))) (_ bv0 31)))))
 (let (($x21902 (= C2 (bvneg C1))))
 (let ((?x32406 (ite (and (distinct ((_ extract 3 2) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 3 3) C1) (_ bv0 1)) true) (_ bv3 31) (_ bv2 31)) (ite (and (distinct ((_ extract 1 1) C1) (_ bv0 1)) true) (_ bv1 31) (_ bv0 31)))))
 (let ((?x31106 (ite (and (distinct ((_ extract 7 6) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 7 7) C1) (_ bv0 1)) true) (_ bv7 31) (_ bv6 31)) (ite (and (distinct ((_ extract 5 5) C1) (_ bv0 1)) true) (_ bv5 31) (_ bv4 31)))))
 (let ((?x26573 (ite (and (distinct ((_ extract 11 10) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 11 11) C1) (_ bv0 1)) true) (_ bv11 31) (_ bv10 31)) (ite (and (distinct ((_ extract 9 9) C1) (_ bv0 1)) true) (_ bv9 31) (_ bv8 31)))))
 (let ((?x26564 (ite (and (distinct ((_ extract 15 14) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 15 15) C1) (_ bv0 1)) true) (_ bv15 31) (_ bv14 31)) (ite (and (distinct ((_ extract 13 13) C1) (_ bv0 1)) true) (_ bv13 31) (_ bv12 31)))))
 (let ((?x31133 (ite (and (distinct ((_ extract 15 8) C1) (_ bv0 8)) true) (ite (and (distinct ((_ extract 15 12) C1) (_ bv0 4)) true) ?x26564 ?x26573) (ite (and (distinct ((_ extract 7 4) C1) (_ bv0 4)) true) ?x31106 ?x32406))))
 (let ((?x11895 (ite (and (distinct ((_ extract 19 18) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 19 19) C1) (_ bv0 1)) true) (_ bv19 31) (_ bv18 31)) (ite (and (distinct ((_ extract 17 17) C1) (_ bv0 1)) true) (_ bv17 31) (_ bv16 31)))))
 (let ((?x18577 (ite (and (distinct ((_ extract 23 22) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 23 23) C1) (_ bv0 1)) true) (_ bv23 31) (_ bv22 31)) (ite (and (distinct ((_ extract 21 21) C1) (_ bv0 1)) true) (_ bv21 31) (_ bv20 31)))))
 (let ((?x18788 (ite (and (distinct ((_ extract 27 26) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 27 27) C1) (_ bv0 1)) true) (_ bv27 31) (_ bv26 31)) (ite (and (distinct ((_ extract 25 25) C1) (_ bv0 1)) true) (_ bv25 31) (_ bv24 31)))))
 (let ((?x18611 (ite (and (distinct ((_ extract 30 30) C1) (_ bv0 1)) true) (_ bv30 31) (ite (and (distinct ((_ extract 29 29) C1) (_ bv0 1)) true) (_ bv29 31) (_ bv28 31)))))
 (let ((?x17873 (ite (and (distinct ((_ extract 30 24) C1) (_ bv0 7)) true) (ite (and (distinct ((_ extract 30 28) C1) (_ bv0 3)) true) ?x18611 ?x18788) (ite (and (distinct ((_ extract 23 20) C1) (_ bv0 4)) true) ?x18577 ?x11895))))
 (let ((?x31121 (bvshl (_ bv2147483647 31) (bvadd (ite (and (distinct ((_ extract 30 16) C1) (_ bv0 15)) true) ?x17873 ?x31133) (_ bv1 31)))))
 (let (($x21913 (=> $x8887 (= (bvand %Y ?x31121) (_ bv0 31)))))
 (and $x21913 $x21902 $x21891 $x8887 $x927))))))))))))))))))
(check-sat)
