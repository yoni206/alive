(set-info :status unknown)
(declare-fun %Y () (_ BitVec 11))
(declare-fun C2 () (_ BitVec 11))
(declare-fun C1 () (_ BitVec 33))
(declare-fun %X () (_ BitVec 33))
(assert
 (let ((?x13797 (ite (and (distinct ((_ extract 2 2) C2) (_ bv0 1)) true) (_ bv2 33) (ite (and (distinct ((_ extract 1 1) C2) (_ bv0 1)) true) (_ bv1 33) (_ bv0 33)))))
 (let ((?x11228 (ite (and (distinct ((_ extract 5 5) C2) (_ bv0 1)) true) (_ bv5 33) (ite (and (distinct ((_ extract 4 4) C2) (_ bv0 1)) true) (_ bv4 33) (_ bv3 33)))))
 (let ((?x7685 (ite (and (distinct ((_ extract 8 8) C2) (_ bv0 1)) true) (_ bv8 33) (ite (and (distinct ((_ extract 7 7) C2) (_ bv0 1)) true) (_ bv7 33) (_ bv6 33)))))
 (let ((?x8935 (ite (and (distinct ((_ extract 10 9) C2) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) C2) (_ bv0 1)) true) (_ bv10 33) (_ bv9 33)) ?x7685)))
 (let ((?x18338 (ite (and (distinct ((_ extract 10 6) C2) (_ bv0 5)) true) ?x8935 (ite (and (distinct ((_ extract 5 3) C2) (_ bv0 3)) true) ?x11228 ?x13797))))
 (let ((?x16144 (ite (and (distinct ((_ extract 2 2) C1) (_ bv0 1)) true) (_ bv2 33) (ite (and (distinct ((_ extract 1 1) C1) (_ bv0 1)) true) (_ bv1 33) (_ bv0 33)))))
 (let ((?x8770 (ite (and (distinct ((_ extract 4 3) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 4 4) C1) (_ bv0 1)) true) (_ bv4 33) (_ bv3 33)) ?x16144)))
 (let ((?x14017 (ite (and (distinct ((_ extract 8 7) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 8 8) C1) (_ bv0 1)) true) (_ bv8 33) (_ bv7 33)) (ite (and (distinct ((_ extract 6 6) C1) (_ bv0 1)) true) (_ bv6 33) (_ bv5 33)))))
 (let ((?x8978 (ite (and (distinct ((_ extract 12 11) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 12 12) C1) (_ bv0 1)) true) (_ bv12 33) (_ bv11 33)) (ite (and (distinct ((_ extract 10 10) C1) (_ bv0 1)) true) (_ bv10 33) (_ bv9 33)))))
 (let ((?x13675 (ite (and (distinct ((_ extract 16 15) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 16 16) C1) (_ bv0 1)) true) (_ bv16 33) (_ bv15 33)) (ite (and (distinct ((_ extract 14 14) C1) (_ bv0 1)) true) (_ bv14 33) (_ bv13 33)))))
 (let ((?x19349 (ite (and (distinct ((_ extract 16 9) C1) (_ bv0 8)) true) (ite (and (distinct ((_ extract 16 13) C1) (_ bv0 4)) true) ?x13675 ?x8978) (ite (and (distinct ((_ extract 8 5) C1) (_ bv0 4)) true) ?x14017 ?x8770))))
 (let ((?x9583 (ite (and (distinct ((_ extract 20 19) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 20 20) C1) (_ bv0 1)) true) (_ bv20 33) (_ bv19 33)) (ite (and (distinct ((_ extract 18 18) C1) (_ bv0 1)) true) (_ bv18 33) (_ bv17 33)))))
 (let ((?x10059 (ite (and (distinct ((_ extract 24 23) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 24 24) C1) (_ bv0 1)) true) (_ bv24 33) (_ bv23 33)) (ite (and (distinct ((_ extract 22 22) C1) (_ bv0 1)) true) (_ bv22 33) (_ bv21 33)))))
 (let ((?x6842 (ite (and (distinct ((_ extract 28 27) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 28 28) C1) (_ bv0 1)) true) (_ bv28 33) (_ bv27 33)) (ite (and (distinct ((_ extract 26 26) C1) (_ bv0 1)) true) (_ bv26 33) (_ bv25 33)))))
 (let ((?x12362 (ite (and (distinct ((_ extract 32 31) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 32 32) C1) (_ bv0 1)) true) (_ bv32 33) (_ bv31 33)) (ite (and (distinct ((_ extract 30 30) C1) (_ bv0 1)) true) (_ bv30 33) (_ bv29 33)))))
 (let ((?x1657 (ite (and (distinct ((_ extract 32 25) C1) (_ bv0 8)) true) (ite (and (distinct ((_ extract 32 29) C1) (_ bv0 4)) true) ?x12362 ?x6842) (ite (and (distinct ((_ extract 24 21) C1) (_ bv0 4)) true) ?x10059 ?x9583))))
 (let ((?x23259 (bvsub (ite (and (distinct ((_ extract 32 17) C1) (_ bv0 16)) true) ?x1657 ?x19349) ?x18338)))
 (let ((?x11716 (bvand %X C1)))
 (let (($x18304 (and (distinct (ite (= (ite (= ?x11716 (_ bv0 33)) (_ bv1 1) (_ bv0 1)) (_ bv1 1)) (bvor %Y C2) %Y) (bvor (bvxor ((_ extract 10 0) (bvlshr ?x11716 ?x23259)) C2) %Y)) true)))
 (let ((?x16925 (ite (and (distinct ((_ extract 2 2) C1) (_ bv0 1)) true) (_ bv2 32) (ite (and (distinct ((_ extract 1 1) C1) (_ bv0 1)) true) (_ bv1 32) (_ bv0 32)))))
 (let ((?x3146 (ite (and (distinct ((_ extract 4 3) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 4 4) C1) (_ bv0 1)) true) (_ bv4 32) (_ bv3 32)) ?x16925)))
 (let ((?x15478 (ite (and (distinct ((_ extract 8 7) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 8 8) C1) (_ bv0 1)) true) (_ bv8 32) (_ bv7 32)) (ite (and (distinct ((_ extract 6 6) C1) (_ bv0 1)) true) (_ bv6 32) (_ bv5 32)))))
 (let ((?x18325 (ite (and (distinct ((_ extract 12 11) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 12 12) C1) (_ bv0 1)) true) (_ bv12 32) (_ bv11 32)) (ite (and (distinct ((_ extract 10 10) C1) (_ bv0 1)) true) (_ bv10 32) (_ bv9 32)))))
 (let ((?x12466 (ite (and (distinct ((_ extract 16 15) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 16 16) C1) (_ bv0 1)) true) (_ bv16 32) (_ bv15 32)) (ite (and (distinct ((_ extract 14 14) C1) (_ bv0 1)) true) (_ bv14 32) (_ bv13 32)))))
 (let ((?x19160 (ite (and (distinct ((_ extract 16 9) C1) (_ bv0 8)) true) (ite (and (distinct ((_ extract 16 13) C1) (_ bv0 4)) true) ?x12466 ?x18325) (ite (and (distinct ((_ extract 8 5) C1) (_ bv0 4)) true) ?x15478 ?x3146))))
 (let ((?x8439 (ite (and (distinct ((_ extract 20 19) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 20 20) C1) (_ bv0 1)) true) (_ bv20 32) (_ bv19 32)) (ite (and (distinct ((_ extract 18 18) C1) (_ bv0 1)) true) (_ bv18 32) (_ bv17 32)))))
 (let ((?x7768 (ite (and (distinct ((_ extract 24 23) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 24 24) C1) (_ bv0 1)) true) (_ bv24 32) (_ bv23 32)) (ite (and (distinct ((_ extract 22 22) C1) (_ bv0 1)) true) (_ bv22 32) (_ bv21 32)))))
 (let ((?x21693 (ite (and (distinct ((_ extract 28 27) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 28 28) C1) (_ bv0 1)) true) (_ bv28 32) (_ bv27 32)) (ite (and (distinct ((_ extract 26 26) C1) (_ bv0 1)) true) (_ bv26 32) (_ bv25 32)))))
 (let ((?x18152 (ite (and (distinct ((_ extract 32 31) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 32 32) C1) (_ bv0 1)) true) (_ bv32 32) (_ bv31 32)) (ite (and (distinct ((_ extract 30 30) C1) (_ bv0 1)) true) (_ bv30 32) (_ bv29 32)))))
 (let ((?x6768 (ite (and (distinct ((_ extract 32 25) C1) (_ bv0 8)) true) (ite (and (distinct ((_ extract 32 29) C1) (_ bv0 4)) true) ?x18152 ?x21693) (ite (and (distinct ((_ extract 24 21) C1) (_ bv0 4)) true) ?x7768 ?x8439))))
 (let ((?x4536 (ite (and (distinct ((_ extract 2 2) C2) (_ bv0 1)) true) (_ bv2 32) (ite (and (distinct ((_ extract 1 1) C2) (_ bv0 1)) true) (_ bv1 32) (_ bv0 32)))))
 (let ((?x16933 (ite (and (distinct ((_ extract 5 5) C2) (_ bv0 1)) true) (_ bv5 32) (ite (and (distinct ((_ extract 4 4) C2) (_ bv0 1)) true) (_ bv4 32) (_ bv3 32)))))
 (let ((?x11024 (ite (and (distinct ((_ extract 8 8) C2) (_ bv0 1)) true) (_ bv8 32) (ite (and (distinct ((_ extract 7 7) C2) (_ bv0 1)) true) (_ bv7 32) (_ bv6 32)))))
 (let ((?x5323 (ite (and (distinct ((_ extract 10 9) C2) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) C2) (_ bv0 1)) true) (_ bv10 32) (_ bv9 32)) ?x11024)))
 (let ((?x6929 (ite (and (distinct ((_ extract 10 6) C2) (_ bv0 5)) true) ?x5323 (ite (and (distinct ((_ extract 5 3) C2) (_ bv0 3)) true) ?x16933 ?x4536))))
 (and (and (and (distinct C1 (_ bv0 33)) true) (= (bvand C1 (bvsub C1 (_ bv1 33))) (_ bv0 33))) (and (and (distinct C2 (_ bv0 11)) true) (= (bvand C2 (bvsub C2 (_ bv1 11))) (_ bv0 11))) (bvslt ?x6929 (ite (and (distinct ((_ extract 32 17) C1) (_ bv0 16)) true) ?x6768 ?x19160)) $x18304)))))))))))))))))))))))))))))))))))))
(check-sat)
