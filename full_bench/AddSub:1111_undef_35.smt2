(set-info :status unknown)
(declare-fun C2 () (_ BitVec 41))
(declare-fun C1 () (_ BitVec 41))
(assert
 (let ((?x3556 (ite (and (distinct ((_ extract 2 2) C2) (_ bv0 1)) true) (_ bv2 41) (ite (and (distinct ((_ extract 1 1) C2) (_ bv0 1)) true) (_ bv1 41) (_ bv0 41)))))
 (let ((?x3549 (ite (and (distinct ((_ extract 5 5) C2) (_ bv0 1)) true) (_ bv5 41) (ite (and (distinct ((_ extract 4 4) C2) (_ bv0 1)) true) (_ bv4 41) (_ bv3 41)))))
 (let ((?x5435 (ite (and (distinct ((_ extract 8 8) C2) (_ bv0 1)) true) (_ bv8 41) (ite (and (distinct ((_ extract 7 7) C2) (_ bv0 1)) true) (_ bv7 41) (_ bv6 41)))))
 (let ((?x2014 (ite (and (distinct ((_ extract 10 9) C2) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) C2) (_ bv0 1)) true) (_ bv10 41) (_ bv9 41)) ?x5435)))
 (let ((?x3768 (ite (and (distinct ((_ extract 10 6) C2) (_ bv0 5)) true) ?x2014 (ite (and (distinct ((_ extract 5 3) C2) (_ bv0 3)) true) ?x3549 ?x3556))))
 (let ((?x3806 (ite (and (distinct ((_ extract 13 13) C2) (_ bv0 1)) true) (_ bv13 41) (ite (and (distinct ((_ extract 12 12) C2) (_ bv0 1)) true) (_ bv12 41) (_ bv11 41)))))
 (let ((?x4318 (ite (and (distinct ((_ extract 15 14) C2) (_ bv0 2)) true) (ite (and (distinct ((_ extract 15 15) C2) (_ bv0 1)) true) (_ bv15 41) (_ bv14 41)) ?x3806)))
 (let ((?x4264 (ite (and (distinct ((_ extract 18 18) C2) (_ bv0 1)) true) (_ bv18 41) (ite (and (distinct ((_ extract 17 17) C2) (_ bv0 1)) true) (_ bv17 41) (_ bv16 41)))))
 (let ((?x3381 (ite (and (distinct ((_ extract 20 19) C2) (_ bv0 2)) true) (ite (and (distinct ((_ extract 20 20) C2) (_ bv0 1)) true) (_ bv20 41) (_ bv19 41)) ?x4264)))
 (let ((?x5185 (ite (and (distinct ((_ extract 20 11) C2) (_ bv0 10)) true) (ite (and (distinct ((_ extract 20 16) C2) (_ bv0 5)) true) ?x3381 ?x4318) ?x3768)))
 (let ((?x5442 (ite (and (distinct ((_ extract 23 23) C2) (_ bv0 1)) true) (_ bv23 41) (ite (and (distinct ((_ extract 22 22) C2) (_ bv0 1)) true) (_ bv22 41) (_ bv21 41)))))
 (let ((?x1830 (ite (and (distinct ((_ extract 25 24) C2) (_ bv0 2)) true) (ite (and (distinct ((_ extract 25 25) C2) (_ bv0 1)) true) (_ bv25 41) (_ bv24 41)) ?x5442)))
 (let ((?x2898 (ite (and (distinct ((_ extract 28 28) C2) (_ bv0 1)) true) (_ bv28 41) (ite (and (distinct ((_ extract 27 27) C2) (_ bv0 1)) true) (_ bv27 41) (_ bv26 41)))))
 (let ((?x2252 (ite (and (distinct ((_ extract 30 29) C2) (_ bv0 2)) true) (ite (and (distinct ((_ extract 30 30) C2) (_ bv0 1)) true) (_ bv30 41) (_ bv29 41)) ?x2898)))
 (let ((?x6209 (ite (and (distinct ((_ extract 33 33) C2) (_ bv0 1)) true) (_ bv33 41) (ite (and (distinct ((_ extract 32 32) C2) (_ bv0 1)) true) (_ bv32 41) (_ bv31 41)))))
 (let ((?x4500 (ite (and (distinct ((_ extract 35 34) C2) (_ bv0 2)) true) (ite (and (distinct ((_ extract 35 35) C2) (_ bv0 1)) true) (_ bv35 41) (_ bv34 41)) ?x6209)))
 (let ((?x6697 (ite (and (distinct ((_ extract 38 38) C2) (_ bv0 1)) true) (_ bv38 41) (ite (and (distinct ((_ extract 37 37) C2) (_ bv0 1)) true) (_ bv37 41) (_ bv36 41)))))
 (let ((?x6534 (ite (and (distinct ((_ extract 40 39) C2) (_ bv0 2)) true) (ite (and (distinct ((_ extract 40 40) C2) (_ bv0 1)) true) (_ bv40 41) (_ bv39 41)) ?x6697)))
 (let ((?x4325 (ite (and (distinct ((_ extract 40 31) C2) (_ bv0 10)) true) (ite (and (distinct ((_ extract 40 36) C2) (_ bv0 5)) true) ?x6534 ?x4500) (ite (and (distinct ((_ extract 30 26) C2) (_ bv0 5)) true) ?x2252 ?x1830))))
 (let ((?x3920 (bvsub (bvsub (_ bv41 41) (ite (and (distinct ((_ extract 40 21) C2) (_ bv0 20)) true) ?x4325 ?x5185)) (_ bv1 41))))
 (let ((?x3792 (bvsub (_ bv41 41) ?x3920)))
 (let (($x7200 (bvult ?x3792 (_ bv41 41))))
 (and (= C1 (bvneg C2)) (and (and (distinct C2 (_ bv0 41)) true) (= (bvand C2 (bvsub C2 (_ bv1 41))) (_ bv0 41))) (not (= (bvand C2 (bvshl (_ bv2199023255551 41) ?x3792)) (_ bv0 41))) (not (and $x7200 $x7200))))))))))))))))))))))))))
(check-sat)
