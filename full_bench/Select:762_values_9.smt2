(set-info :status unknown)
(declare-fun C3 () (_ BitVec 11))
(declare-fun C2 () (_ BitVec 11))
(declare-fun C () (_ BitVec 13))
(declare-fun %Op () (_ BitVec 13))
(assert
 (let ((?x21707 (bvsub C2 C3)))
 (let ((?x19725 (ite (and (distinct ((_ extract 2 2) ?x21707) (_ bv0 1)) true) (_ bv2 11) (ite (and (distinct ((_ extract 1 1) ?x21707) (_ bv0 1)) true) (_ bv1 11) (_ bv0 11)))))
 (let ((?x2588 (ite (and (distinct ((_ extract 5 5) ?x21707) (_ bv0 1)) true) (_ bv5 11) (ite (and (distinct ((_ extract 4 4) ?x21707) (_ bv0 1)) true) (_ bv4 11) (_ bv3 11)))))
 (let ((?x15495 (ite (and (distinct ((_ extract 8 8) ?x21707) (_ bv0 1)) true) (_ bv8 11) (ite (and (distinct ((_ extract 7 7) ?x21707) (_ bv0 1)) true) (_ bv7 11) (_ bv6 11)))))
 (let ((?x1970 (ite (and (distinct ((_ extract 10 9) ?x21707) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) ?x21707) (_ bv0 1)) true) (_ bv10 11) (_ bv9 11)) ?x15495)))
 (let ((?x12968 (ite (and (distinct ((_ extract 10 6) ?x21707) (_ bv0 5)) true) ?x1970 (ite (and (distinct ((_ extract 5 3) ?x21707) (_ bv0 3)) true) ?x2588 ?x19725))))
 (let ((?x120 (ite (and (distinct ((_ extract 3 2) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 3 3) C) (_ bv0 1)) true) (_ bv3 11) (_ bv2 11)) (ite (and (distinct ((_ extract 1 1) C) (_ bv0 1)) true) (_ bv1 11) (_ bv0 11)))))
 (let ((?x23441 (ite (and (distinct ((_ extract 6 6) C) (_ bv0 1)) true) (_ bv6 11) (ite (and (distinct ((_ extract 5 5) C) (_ bv0 1)) true) (_ bv5 11) (_ bv4 11)))))
 (let ((?x7663 (ite (and (distinct ((_ extract 9 9) C) (_ bv0 1)) true) (_ bv9 11) (ite (and (distinct ((_ extract 8 8) C) (_ bv0 1)) true) (_ bv8 11) (_ bv7 11)))))
 (let ((?x8687 (ite (and (distinct ((_ extract 12 12) C) (_ bv0 1)) true) (_ bv12 11) (ite (and (distinct ((_ extract 11 11) C) (_ bv0 1)) true) (_ bv11 11) (_ bv10 11)))))
 (let ((?x10409 (ite (and (distinct ((_ extract 12 7) C) (_ bv0 6)) true) (ite (and (distinct ((_ extract 12 10) C) (_ bv0 3)) true) ?x8687 ?x7663) (ite (and (distinct ((_ extract 6 4) C) (_ bv0 3)) true) ?x23441 ?x120))))
 (let ((?x6158 (bvsub ?x10409 ?x12968)))
 (let ((?x13202 (ite (bvsgt (_ bv0 11) ?x6158) (_ bv0 11) ?x6158)))
 (let ((?x20398 (bvsub ?x12968 ?x10409)))
 (let ((?x6411 (ite (bvsgt (_ bv0 11) ?x20398) (_ bv0 11) ?x20398)))
 (let ((?x7483 (bvadd (bvxor (bvlshr (bvshl ((_ extract 10 0) (bvand %Op C)) ?x6411) ?x13202) ?x21707) C3)))
 (let (($x12439 (and (distinct (ite (= (ite (= (bvand %Op C) (_ bv0 13)) (_ bv1 1) (_ bv0 1)) (_ bv1 1)) C2 C3) ?x7483) true)))
 (let ((?x10993 (ite (and (distinct ((_ extract 3 2) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 3 3) C) (_ bv0 1)) true) (_ bv3 32) (_ bv2 32)) (ite (and (distinct ((_ extract 1 1) C) (_ bv0 1)) true) (_ bv1 32) (_ bv0 32)))))
 (let ((?x7052 (ite (and (distinct ((_ extract 6 6) C) (_ bv0 1)) true) (_ bv6 32) (ite (and (distinct ((_ extract 5 5) C) (_ bv0 1)) true) (_ bv5 32) (_ bv4 32)))))
 (let ((?x18984 (ite (and (distinct ((_ extract 9 9) C) (_ bv0 1)) true) (_ bv9 32) (ite (and (distinct ((_ extract 8 8) C) (_ bv0 1)) true) (_ bv8 32) (_ bv7 32)))))
 (let ((?x13045 (ite (and (distinct ((_ extract 12 12) C) (_ bv0 1)) true) (_ bv12 32) (ite (and (distinct ((_ extract 11 11) C) (_ bv0 1)) true) (_ bv11 32) (_ bv10 32)))))
 (let ((?x16661 (ite (and (distinct ((_ extract 12 7) C) (_ bv0 6)) true) (ite (and (distinct ((_ extract 12 10) C) (_ bv0 3)) true) ?x13045 ?x18984) (ite (and (distinct ((_ extract 6 4) C) (_ bv0 3)) true) ?x7052 ?x10993))))
 (and (and (and (distinct C (_ bv0 13)) true) (= (bvand C (bvsub C (_ bv1 13))) (_ bv0 13))) (and (and (distinct ?x21707 (_ bv0 11)) true) (= (bvand ?x21707 (bvsub ?x21707 (_ bv1 11))) (_ bv0 11))) (bvslt ?x16661 (_ bv11 32)) $x12439))))))))))))))))))))))))
(check-sat)
