(set-info :status unknown)
(declare-fun %Y () (_ BitVec 11))
(declare-fun C1 () (_ BitVec 54))
(declare-fun C2 () (_ BitVec 11))
(declare-fun %X () (_ BitVec 54))
(assert
 (let ((?x2630 (ite (and (distinct ((_ extract 3 2) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 3 3) C1) (_ bv0 1)) true) (_ bv3 11) (_ bv2 11)) (ite (and (distinct ((_ extract 1 1) C1) (_ bv0 1)) true) (_ bv1 11) (_ bv0 11)))))
 (let ((?x2481 (ite (and (distinct ((_ extract 6 6) C1) (_ bv0 1)) true) (_ bv6 11) (ite (and (distinct ((_ extract 5 5) C1) (_ bv0 1)) true) (_ bv5 11) (_ bv4 11)))))
 (let ((?x5277 (ite (and (distinct ((_ extract 10 9) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) C1) (_ bv0 1)) true) (_ bv10 11) (_ bv9 11)) (ite (and (distinct ((_ extract 8 8) C1) (_ bv0 1)) true) (_ bv8 11) (_ bv7 11)))))
 (let ((?x5108 (ite (and (distinct ((_ extract 13 13) C1) (_ bv0 1)) true) (_ bv13 11) (ite (and (distinct ((_ extract 12 12) C1) (_ bv0 1)) true) (_ bv12 11) (_ bv11 11)))))
 (let ((?x2366 (ite (and (distinct ((_ extract 13 7) C1) (_ bv0 7)) true) (ite (and (distinct ((_ extract 13 11) C1) (_ bv0 3)) true) ?x5108 ?x5277) (ite (and (distinct ((_ extract 6 4) C1) (_ bv0 3)) true) ?x2481 ?x2630))))
 (let ((?x3813 (ite (and (distinct ((_ extract 17 16) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 17 17) C1) (_ bv0 1)) true) (_ bv17 11) (_ bv16 11)) (ite (and (distinct ((_ extract 15 15) C1) (_ bv0 1)) true) (_ bv15 11) (_ bv14 11)))))
 (let ((?x6853 (ite (and (distinct ((_ extract 20 20) C1) (_ bv0 1)) true) (_ bv20 11) (ite (and (distinct ((_ extract 19 19) C1) (_ bv0 1)) true) (_ bv19 11) (_ bv18 11)))))
 (let ((?x5623 (ite (and (distinct ((_ extract 23 23) C1) (_ bv0 1)) true) (_ bv23 11) (ite (and (distinct ((_ extract 22 22) C1) (_ bv0 1)) true) (_ bv22 11) (_ bv21 11)))))
 (let ((?x5955 (ite (and (distinct ((_ extract 26 26) C1) (_ bv0 1)) true) (_ bv26 11) (ite (and (distinct ((_ extract 25 25) C1) (_ bv0 1)) true) (_ bv25 11) (_ bv24 11)))))
 (let ((?x4040 (ite (and (distinct ((_ extract 26 21) C1) (_ bv0 6)) true) (ite (and (distinct ((_ extract 26 24) C1) (_ bv0 3)) true) ?x5955 ?x5623) (ite (and (distinct ((_ extract 20 18) C1) (_ bv0 3)) true) ?x6853 ?x3813))))
 (let ((?x5461 (ite (and (distinct ((_ extract 30 29) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 30 30) C1) (_ bv0 1)) true) (_ bv30 11) (_ bv29 11)) (ite (and (distinct ((_ extract 28 28) C1) (_ bv0 1)) true) (_ bv28 11) (_ bv27 11)))))
 (let ((?x3771 (ite (and (distinct ((_ extract 33 33) C1) (_ bv0 1)) true) (_ bv33 11) (ite (and (distinct ((_ extract 32 32) C1) (_ bv0 1)) true) (_ bv32 11) (_ bv31 11)))))
 (let ((?x4139 (ite (and (distinct ((_ extract 37 36) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 37 37) C1) (_ bv0 1)) true) (_ bv37 11) (_ bv36 11)) (ite (and (distinct ((_ extract 35 35) C1) (_ bv0 1)) true) (_ bv35 11) (_ bv34 11)))))
 (let ((?x1817 (ite (and (distinct ((_ extract 40 40) C1) (_ bv0 1)) true) (_ bv40 11) (ite (and (distinct ((_ extract 39 39) C1) (_ bv0 1)) true) (_ bv39 11) (_ bv38 11)))))
 (let ((?x2028 (ite (and (distinct ((_ extract 40 34) C1) (_ bv0 7)) true) (ite (and (distinct ((_ extract 40 38) C1) (_ bv0 3)) true) ?x1817 ?x4139) (ite (and (distinct ((_ extract 33 31) C1) (_ bv0 3)) true) ?x3771 ?x5461))))
 (let ((?x5356 (ite (and (distinct ((_ extract 44 43) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 44 44) C1) (_ bv0 1)) true) (_ bv44 11) (_ bv43 11)) (ite (and (distinct ((_ extract 42 42) C1) (_ bv0 1)) true) (_ bv42 11) (_ bv41 11)))))
 (let ((?x4157 (ite (and (distinct ((_ extract 47 47) C1) (_ bv0 1)) true) (_ bv47 11) (ite (and (distinct ((_ extract 46 46) C1) (_ bv0 1)) true) (_ bv46 11) (_ bv45 11)))))
 (let ((?x1905 (ite (and (distinct ((_ extract 50 50) C1) (_ bv0 1)) true) (_ bv50 11) (ite (and (distinct ((_ extract 49 49) C1) (_ bv0 1)) true) (_ bv49 11) (_ bv48 11)))))
 (let ((?x3564 (ite (and (distinct ((_ extract 53 53) C1) (_ bv0 1)) true) (_ bv53 11) (ite (and (distinct ((_ extract 52 52) C1) (_ bv0 1)) true) (_ bv52 11) (_ bv51 11)))))
 (let ((?x1380 (ite (and (distinct ((_ extract 53 48) C1) (_ bv0 6)) true) (ite (and (distinct ((_ extract 53 51) C1) (_ bv0 3)) true) ?x3564 ?x1905) (ite (and (distinct ((_ extract 47 45) C1) (_ bv0 3)) true) ?x4157 ?x5356))))
 (let ((?x1113 (ite (and (distinct ((_ extract 53 27) C1) (_ bv0 27)) true) (ite (and (distinct ((_ extract 53 41) C1) (_ bv0 13)) true) ?x1380 ?x2028) (ite (and (distinct ((_ extract 26 14) C1) (_ bv0 13)) true) ?x4040 ?x2366))))
 (let ((?x2847 (ite (and (distinct ((_ extract 2 2) C2) (_ bv0 1)) true) (_ bv2 11) (ite (and (distinct ((_ extract 1 1) C2) (_ bv0 1)) true) (_ bv1 11) (_ bv0 11)))))
 (let ((?x5065 (ite (and (distinct ((_ extract 5 5) C2) (_ bv0 1)) true) (_ bv5 11) (ite (and (distinct ((_ extract 4 4) C2) (_ bv0 1)) true) (_ bv4 11) (_ bv3 11)))))
 (let ((?x3366 (ite (and (distinct ((_ extract 8 8) C2) (_ bv0 1)) true) (_ bv8 11) (ite (and (distinct ((_ extract 7 7) C2) (_ bv0 1)) true) (_ bv7 11) (_ bv6 11)))))
 (let ((?x1316 (ite (and (distinct ((_ extract 10 9) C2) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) C2) (_ bv0 1)) true) (_ bv10 11) (_ bv9 11)) ?x3366)))
 (let ((?x2799 (ite (and (distinct ((_ extract 10 6) C2) (_ bv0 5)) true) ?x1316 (ite (and (distinct ((_ extract 5 3) C2) (_ bv0 3)) true) ?x5065 ?x2847))))
 (let ((?x1289 (bvsub ?x2799 ?x1113)))
 (let ((?x3264 (bvor %Y C2)))
 (let ((?x5810 (ite (= (ite (and (distinct (bvand %X C1) (_ bv0 54)) true) (_ bv1 1) (_ bv0 1)) (_ bv1 1)) ?x3264 %Y)))
 (let ((?x2900 (ite (and (distinct ((_ extract 3 2) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 3 3) C1) (_ bv0 1)) true) (_ bv3 32) (_ bv2 32)) (ite (and (distinct ((_ extract 1 1) C1) (_ bv0 1)) true) (_ bv1 32) (_ bv0 32)))))
 (let ((?x4346 (ite (and (distinct ((_ extract 6 6) C1) (_ bv0 1)) true) (_ bv6 32) (ite (and (distinct ((_ extract 5 5) C1) (_ bv0 1)) true) (_ bv5 32) (_ bv4 32)))))
 (let ((?x3176 (ite (and (distinct ((_ extract 10 9) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) C1) (_ bv0 1)) true) (_ bv10 32) (_ bv9 32)) (ite (and (distinct ((_ extract 8 8) C1) (_ bv0 1)) true) (_ bv8 32) (_ bv7 32)))))
 (let ((?x4234 (ite (and (distinct ((_ extract 13 13) C1) (_ bv0 1)) true) (_ bv13 32) (ite (and (distinct ((_ extract 12 12) C1) (_ bv0 1)) true) (_ bv12 32) (_ bv11 32)))))
 (let ((?x4364 (ite (and (distinct ((_ extract 13 7) C1) (_ bv0 7)) true) (ite (and (distinct ((_ extract 13 11) C1) (_ bv0 3)) true) ?x4234 ?x3176) (ite (and (distinct ((_ extract 6 4) C1) (_ bv0 3)) true) ?x4346 ?x2900))))
 (let ((?x3778 (ite (and (distinct ((_ extract 17 16) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 17 17) C1) (_ bv0 1)) true) (_ bv17 32) (_ bv16 32)) (ite (and (distinct ((_ extract 15 15) C1) (_ bv0 1)) true) (_ bv15 32) (_ bv14 32)))))
 (let ((?x3659 (ite (and (distinct ((_ extract 20 20) C1) (_ bv0 1)) true) (_ bv20 32) (ite (and (distinct ((_ extract 19 19) C1) (_ bv0 1)) true) (_ bv19 32) (_ bv18 32)))))
 (let ((?x6144 (ite (and (distinct ((_ extract 23 23) C1) (_ bv0 1)) true) (_ bv23 32) (ite (and (distinct ((_ extract 22 22) C1) (_ bv0 1)) true) (_ bv22 32) (_ bv21 32)))))
 (let ((?x6272 (ite (and (distinct ((_ extract 26 26) C1) (_ bv0 1)) true) (_ bv26 32) (ite (and (distinct ((_ extract 25 25) C1) (_ bv0 1)) true) (_ bv25 32) (_ bv24 32)))))
 (let ((?x6746 (ite (and (distinct ((_ extract 26 21) C1) (_ bv0 6)) true) (ite (and (distinct ((_ extract 26 24) C1) (_ bv0 3)) true) ?x6272 ?x6144) (ite (and (distinct ((_ extract 20 18) C1) (_ bv0 3)) true) ?x3659 ?x3778))))
 (let ((?x4790 (ite (and (distinct ((_ extract 30 29) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 30 30) C1) (_ bv0 1)) true) (_ bv30 32) (_ bv29 32)) (ite (and (distinct ((_ extract 28 28) C1) (_ bv0 1)) true) (_ bv28 32) (_ bv27 32)))))
 (let ((?x4579 (ite (and (distinct ((_ extract 33 33) C1) (_ bv0 1)) true) (_ bv33 32) (ite (and (distinct ((_ extract 32 32) C1) (_ bv0 1)) true) (_ bv32 32) (_ bv31 32)))))
 (let ((?x3546 (ite (and (distinct ((_ extract 37 36) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 37 37) C1) (_ bv0 1)) true) (_ bv37 32) (_ bv36 32)) (ite (and (distinct ((_ extract 35 35) C1) (_ bv0 1)) true) (_ bv35 32) (_ bv34 32)))))
 (let ((?x2096 (ite (and (distinct ((_ extract 40 40) C1) (_ bv0 1)) true) (_ bv40 32) (ite (and (distinct ((_ extract 39 39) C1) (_ bv0 1)) true) (_ bv39 32) (_ bv38 32)))))
 (let ((?x5343 (ite (and (distinct ((_ extract 40 34) C1) (_ bv0 7)) true) (ite (and (distinct ((_ extract 40 38) C1) (_ bv0 3)) true) ?x2096 ?x3546) (ite (and (distinct ((_ extract 33 31) C1) (_ bv0 3)) true) ?x4579 ?x4790))))
 (let ((?x1399 (ite (and (distinct ((_ extract 44 43) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 44 44) C1) (_ bv0 1)) true) (_ bv44 32) (_ bv43 32)) (ite (and (distinct ((_ extract 42 42) C1) (_ bv0 1)) true) (_ bv42 32) (_ bv41 32)))))
 (let ((?x4144 (ite (and (distinct ((_ extract 47 47) C1) (_ bv0 1)) true) (_ bv47 32) (ite (and (distinct ((_ extract 46 46) C1) (_ bv0 1)) true) (_ bv46 32) (_ bv45 32)))))
 (let ((?x3104 (ite (and (distinct ((_ extract 50 50) C1) (_ bv0 1)) true) (_ bv50 32) (ite (and (distinct ((_ extract 49 49) C1) (_ bv0 1)) true) (_ bv49 32) (_ bv48 32)))))
 (let ((?x3538 (ite (and (distinct ((_ extract 53 53) C1) (_ bv0 1)) true) (_ bv53 32) (ite (and (distinct ((_ extract 52 52) C1) (_ bv0 1)) true) (_ bv52 32) (_ bv51 32)))))
 (let ((?x1258 (ite (and (distinct ((_ extract 53 48) C1) (_ bv0 6)) true) (ite (and (distinct ((_ extract 53 51) C1) (_ bv0 3)) true) ?x3538 ?x3104) (ite (and (distinct ((_ extract 47 45) C1) (_ bv0 3)) true) ?x4144 ?x1399))))
 (let ((?x6320 (ite (and (distinct ((_ extract 53 27) C1) (_ bv0 27)) true) (ite (and (distinct ((_ extract 53 41) C1) (_ bv0 13)) true) ?x1258 ?x5343) (ite (and (distinct ((_ extract 26 14) C1) (_ bv0 13)) true) ?x6746 ?x4364))))
 (let ((?x6156 (ite (and (distinct ((_ extract 2 2) C2) (_ bv0 1)) true) (_ bv2 32) (ite (and (distinct ((_ extract 1 1) C2) (_ bv0 1)) true) (_ bv1 32) (_ bv0 32)))))
 (let ((?x6229 (ite (and (distinct ((_ extract 5 5) C2) (_ bv0 1)) true) (_ bv5 32) (ite (and (distinct ((_ extract 4 4) C2) (_ bv0 1)) true) (_ bv4 32) (_ bv3 32)))))
 (let ((?x6386 (ite (and (distinct ((_ extract 8 8) C2) (_ bv0 1)) true) (_ bv8 32) (ite (and (distinct ((_ extract 7 7) C2) (_ bv0 1)) true) (_ bv7 32) (_ bv6 32)))))
 (let ((?x2544 (ite (and (distinct ((_ extract 10 9) C2) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) C2) (_ bv0 1)) true) (_ bv10 32) (_ bv9 32)) ?x6386)))
 (let ((?x1435 (ite (and (distinct ((_ extract 10 6) C2) (_ bv0 5)) true) ?x2544 (ite (and (distinct ((_ extract 5 3) C2) (_ bv0 3)) true) ?x6229 ?x6156))))
 (and (and (and (distinct C1 (_ bv0 54)) true) (= (bvand C1 (bvsub C1 (_ bv1 54))) (_ bv0 54))) (and (and (distinct C2 (_ bv0 11)) true) (= (bvand C2 (bvsub C2 (_ bv1 11))) (_ bv0 11))) (bvsge ?x1435 ?x6320) (and (distinct ?x5810 (bvor (bvshl ((_ extract 10 0) (bvand %X C1)) ?x1289) %Y)) true))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
