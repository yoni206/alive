(set-info :status unknown)
(declare-fun %Y () (_ BitVec 11))
(declare-fun C2 () (_ BitVec 11))
(declare-fun C1 () (_ BitVec 3))
(declare-fun %X () (_ BitVec 3))
(assert
 (let ((?x9479 (ite (and (distinct ((_ extract 2 2) C2) (_ bv0 1)) true) (_ bv2 3) (ite (and (distinct ((_ extract 1 1) C2) (_ bv0 1)) true) (_ bv1 3) (_ bv0 3)))))
 (let ((?x21386 (ite (and (distinct ((_ extract 5 5) C2) (_ bv0 1)) true) (_ bv5 3) (ite (and (distinct ((_ extract 4 4) C2) (_ bv0 1)) true) (_ bv4 3) (_ bv3 3)))))
 (let ((?x21116 (ite (and (distinct ((_ extract 8 8) C2) (_ bv0 1)) true) (_ bv0 3) (ite (and (distinct ((_ extract 7 7) C2) (_ bv0 1)) true) (_ bv7 3) (_ bv6 3)))))
 (let ((?x14016 (ite (and (distinct ((_ extract 10 9) C2) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) C2) (_ bv0 1)) true) (_ bv2 3) (_ bv1 3)) ?x21116)))
 (let ((?x16229 (ite (and (distinct ((_ extract 10 6) C2) (_ bv0 5)) true) ?x14016 (ite (and (distinct ((_ extract 5 3) C2) (_ bv0 3)) true) ?x21386 ?x9479))))
 (let ((?x6747 (ite (and (distinct ((_ extract 2 2) C1) (_ bv0 1)) true) (_ bv2 3) (ite (and (distinct ((_ extract 1 1) C1) (_ bv0 1)) true) (_ bv1 3) (_ bv0 3)))))
 (let ((?x9718 (bvsub ?x6747 ?x16229)))
 (let ((?x23442 (bvand %X C1)))
 (let ((?x5458 (bvor %Y C2)))
 (let (($x3638 (and (distinct (ite (= (ite (and (distinct ?x23442 (_ bv0 3)) true) (_ bv1 1) (_ bv0 1)) (_ bv1 1)) ?x5458 %Y) (bvor ((_ zero_extend 8) (bvlshr ?x23442 ?x9718)) %Y)) true)))
 (let ((?x20745 (ite (and (distinct ((_ extract 2 2) C1) (_ bv0 1)) true) (_ bv2 32) (ite (and (distinct ((_ extract 1 1) C1) (_ bv0 1)) true) (_ bv1 32) (_ bv0 32)))))
 (let ((?x12267 (ite (and (distinct ((_ extract 2 2) C2) (_ bv0 1)) true) (_ bv2 32) (ite (and (distinct ((_ extract 1 1) C2) (_ bv0 1)) true) (_ bv1 32) (_ bv0 32)))))
 (let ((?x11996 (ite (and (distinct ((_ extract 5 5) C2) (_ bv0 1)) true) (_ bv5 32) (ite (and (distinct ((_ extract 4 4) C2) (_ bv0 1)) true) (_ bv4 32) (_ bv3 32)))))
 (let ((?x3208 (ite (and (distinct ((_ extract 8 8) C2) (_ bv0 1)) true) (_ bv8 32) (ite (and (distinct ((_ extract 7 7) C2) (_ bv0 1)) true) (_ bv7 32) (_ bv6 32)))))
 (let ((?x10153 (ite (and (distinct ((_ extract 10 9) C2) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) C2) (_ bv0 1)) true) (_ bv10 32) (_ bv9 32)) ?x3208)))
 (let ((?x12308 (ite (and (distinct ((_ extract 10 6) C2) (_ bv0 5)) true) ?x10153 (ite (and (distinct ((_ extract 5 3) C2) (_ bv0 3)) true) ?x11996 ?x12267))))
 (and (and (and (distinct C1 (_ bv0 3)) true) (= (bvand C1 (bvsub C1 (_ bv1 3))) (_ bv0 3))) (and (and (distinct C2 (_ bv0 11)) true) (= (bvand C2 (bvsub C2 (_ bv1 11))) (_ bv0 11))) (bvslt ?x12308 ?x20745) $x3638))))))))))))))))))
(check-sat)
