(set-info :status unknown)
(declare-fun mem0 () (_ BitVec 8))
(declare-fun %x () (_ BitVec 51))
(declare-fun %p1 () (_ BitVec 64))
(declare-fun idx () (_ BitVec 64))
(declare-fun |ana_equivalentAddressValues(%p1, %p2)| () (_ BitVec 1))
(declare-fun %p2 () (_ BitVec 64))
(assert
 (let ((?x4086 (concat ((_ extract 7 3) mem0) ((_ extract 2 0) %x))))
 (let ((?x18741 (ite (and (and (distinct %p1 (_ bv0 64)) true) (or true true) (= idx %p1)) ?x4086 mem0)))
 (let ((?x19806 ((_ extract 10 3) %x)))
 (let (($x12128 (or true true)))
 (let (($x22608 (and (distinct %p1 (_ bv0 64)) true)))
 (let ((?x21161 (ite (and $x22608 $x12128 (= idx (bvadd (bvadd %p1 (_ bv1 64)) (_ bv0 64)))) ?x19806 ?x18741)))
 (let ((?x15971 ((_ extract 18 11) %x)))
 (let ((?x5727 (ite (and $x22608 $x12128 (= idx (bvadd (bvadd %p1 (_ bv1 64)) (_ bv1 64)))) ?x15971 ?x21161)))
 (let ((?x18536 ((_ extract 26 19) %x)))
 (let ((?x15172 (ite (and $x22608 $x12128 (= idx (bvadd (bvadd %p1 (_ bv1 64)) (_ bv2 64)))) ?x18536 ?x5727)))
 (let ((?x11162 ((_ extract 34 27) %x)))
 (let ((?x22765 (ite (and $x22608 $x12128 (= idx (bvadd (bvadd %p1 (_ bv1 64)) (_ bv3 64)))) ?x11162 ?x15172)))
 (let ((?x17826 ((_ extract 42 35) %x)))
 (let ((?x9139 (ite (and $x22608 $x12128 (= idx (bvadd (bvadd %p1 (_ bv1 64)) (_ bv4 64)))) ?x17826 ?x22765)))
 (let ((?x23974 ((_ extract 50 43) %x)))
 (let ((?x19589 (ite (and $x22608 $x12128 (= idx (bvadd (bvadd %p1 (_ bv1 64)) (_ bv5 64)))) ?x23974 ?x9139)))
 (let (($x6560 (= |ana_equivalentAddressValues(%p1, %p2)| (_ bv1 1))))
 (and (=> $x6560 (= %p1 %p2)) $x6560 (and (distinct ?x19589 ?x19589) true))))))))))))))))))))
(check-sat)
