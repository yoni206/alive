(set-info :status unknown)
(declare-fun mem0 () (_ BitVec 8))
(declare-fun %x () (_ BitVec 64))
(declare-fun %p1 () (_ BitVec 64))
(declare-fun idx () (_ BitVec 64))
(declare-fun |ana_equivalentAddressValues(%p1, %p2)| () (_ BitVec 1))
(declare-fun %p2 () (_ BitVec 64))
(assert
 (let ((?x11246 ((_ extract 7 0) %x)))
 (let (($x23534 (or true true)))
 (let (($x6791 (and (distinct %p1 (_ bv0 64)) true)))
 (let ((?x18522 ((_ extract 15 8) %x)))
 (let ((?x2633 (ite (and $x6791 $x23534 (= idx (bvadd %p1 (_ bv1 64)))) ?x18522 (ite (and $x6791 $x23534 (= idx (bvadd %p1 (_ bv0 64)))) ?x11246 mem0))))
 (let ((?x2278 ((_ extract 23 16) %x)))
 (let ((?x8976 ((_ extract 31 24) %x)))
 (let ((?x16927 (ite (and $x6791 $x23534 (= idx (bvadd %p1 (_ bv3 64)))) ?x8976 (ite (and $x6791 $x23534 (= idx (bvadd %p1 (_ bv2 64)))) ?x2278 ?x2633))))
 (let ((?x15655 ((_ extract 39 32) %x)))
 (let ((?x19021 ((_ extract 47 40) %x)))
 (let ((?x14478 (ite (and $x6791 $x23534 (= idx (bvadd %p1 (_ bv5 64)))) ?x19021 (ite (and $x6791 $x23534 (= idx (bvadd %p1 (_ bv4 64)))) ?x15655 ?x16927))))
 (let ((?x23786 ((_ extract 55 48) %x)))
 (let ((?x15865 ((_ extract 63 56) %x)))
 (let ((?x17907 (ite (and $x6791 $x23534 (= idx (bvadd %p1 (_ bv7 64)))) ?x15865 (ite (and $x6791 $x23534 (= idx (bvadd %p1 (_ bv6 64)))) ?x23786 ?x14478))))
 (let (($x11591 (= |ana_equivalentAddressValues(%p1, %p2)| (_ bv1 1))))
 (and (=> $x11591 (= %p1 %p2)) $x11591 (and (distinct ?x17907 ?x17907) true))))))))))))))))))
(check-sat)
