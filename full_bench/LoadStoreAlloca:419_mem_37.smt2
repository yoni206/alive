(set-info :status unknown)
(declare-fun mem0 () (_ BitVec 8))
(declare-fun %x () (_ BitVec 38))
(declare-fun %p1 () (_ BitVec 64))
(declare-fun idx () (_ BitVec 64))
(declare-fun |ana_equivalentAddressValues(%p1, %p2)| () (_ BitVec 1))
(declare-fun %p2 () (_ BitVec 64))
(assert
 (let ((?x15172 (concat ((_ extract 7 6) mem0) ((_ extract 5 0) %x))))
 (let ((?x11770 (ite (and (and (distinct %p1 (_ bv0 64)) true) (or true true) (= idx %p1)) ?x15172 mem0)))
 (let ((?x19053 ((_ extract 13 6) %x)))
 (let (($x13744 (or true true)))
 (let (($x5290 (and (distinct %p1 (_ bv0 64)) true)))
 (let ((?x15883 (ite (and $x5290 $x13744 (= idx (bvadd (bvadd %p1 (_ bv1 64)) (_ bv0 64)))) ?x19053 ?x11770)))
 (let ((?x23999 ((_ extract 21 14) %x)))
 (let ((?x11745 (ite (and $x5290 $x13744 (= idx (bvadd (bvadd %p1 (_ bv1 64)) (_ bv1 64)))) ?x23999 ?x15883)))
 (let ((?x21161 ((_ extract 29 22) %x)))
 (let ((?x8712 (ite (and $x5290 $x13744 (= idx (bvadd (bvadd %p1 (_ bv1 64)) (_ bv2 64)))) ?x21161 ?x11745)))
 (let ((?x23214 ((_ extract 37 30) %x)))
 (let ((?x5280 (ite (and $x5290 $x13744 (= idx (bvadd (bvadd %p1 (_ bv1 64)) (_ bv3 64)))) ?x23214 ?x8712)))
 (let (($x3169 (= |ana_equivalentAddressValues(%p1, %p2)| (_ bv1 1))))
 (and (=> $x3169 (= %p1 %p2)) $x3169 (and (distinct ?x5280 ?x5280) true))))))))))))))))
(check-sat)
