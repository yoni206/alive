(set-info :status unknown)
(declare-fun C2 () (_ BitVec 11))
(declare-fun C3 () (_ BitVec 11))
(declare-fun C () (_ BitVec 33))
(declare-fun %Op () (_ BitVec 33))
(assert
 (let ((?x3202 (bvsub C3 C2)))
 (let ((?x2833 (ite (and (distinct ((_ extract 2 2) ?x3202) (_ bv0 1)) true) (_ bv2 11) (ite (and (distinct ((_ extract 1 1) ?x3202) (_ bv0 1)) true) (_ bv1 11) (_ bv0 11)))))
 (let ((?x4207 (ite (and (distinct ((_ extract 5 5) ?x3202) (_ bv0 1)) true) (_ bv5 11) (ite (and (distinct ((_ extract 4 4) ?x3202) (_ bv0 1)) true) (_ bv4 11) (_ bv3 11)))))
 (let ((?x7152 (ite (and (distinct ((_ extract 8 8) ?x3202) (_ bv0 1)) true) (_ bv8 11) (ite (and (distinct ((_ extract 7 7) ?x3202) (_ bv0 1)) true) (_ bv7 11) (_ bv6 11)))))
 (let ((?x2273 (ite (and (distinct ((_ extract 10 9) ?x3202) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) ?x3202) (_ bv0 1)) true) (_ bv10 11) (_ bv9 11)) ?x7152)))
 (let ((?x3845 (ite (and (distinct ((_ extract 10 6) ?x3202) (_ bv0 5)) true) ?x2273 (ite (and (distinct ((_ extract 5 3) ?x3202) (_ bv0 3)) true) ?x4207 ?x2833))))
 (let ((?x1686 (ite (and (distinct ((_ extract 2 2) C) (_ bv0 1)) true) (_ bv2 11) (ite (and (distinct ((_ extract 1 1) C) (_ bv0 1)) true) (_ bv1 11) (_ bv0 11)))))
 (let ((?x8284 (ite (and (distinct ((_ extract 4 3) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 4 4) C) (_ bv0 1)) true) (_ bv4 11) (_ bv3 11)) ?x1686)))
 (let ((?x6216 (ite (and (distinct ((_ extract 8 7) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 8 8) C) (_ bv0 1)) true) (_ bv8 11) (_ bv7 11)) (ite (and (distinct ((_ extract 6 6) C) (_ bv0 1)) true) (_ bv6 11) (_ bv5 11)))))
 (let ((?x7553 (ite (and (distinct ((_ extract 12 11) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 12 12) C) (_ bv0 1)) true) (_ bv12 11) (_ bv11 11)) (ite (and (distinct ((_ extract 10 10) C) (_ bv0 1)) true) (_ bv10 11) (_ bv9 11)))))
 (let ((?x8098 (ite (and (distinct ((_ extract 16 15) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 16 16) C) (_ bv0 1)) true) (_ bv16 11) (_ bv15 11)) (ite (and (distinct ((_ extract 14 14) C) (_ bv0 1)) true) (_ bv14 11) (_ bv13 11)))))
 (let ((?x7095 (ite (and (distinct ((_ extract 16 9) C) (_ bv0 8)) true) (ite (and (distinct ((_ extract 16 13) C) (_ bv0 4)) true) ?x8098 ?x7553) (ite (and (distinct ((_ extract 8 5) C) (_ bv0 4)) true) ?x6216 ?x8284))))
 (let ((?x7688 (ite (and (distinct ((_ extract 20 19) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 20 20) C) (_ bv0 1)) true) (_ bv20 11) (_ bv19 11)) (ite (and (distinct ((_ extract 18 18) C) (_ bv0 1)) true) (_ bv18 11) (_ bv17 11)))))
 (let ((?x6756 (ite (and (distinct ((_ extract 24 23) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 24 24) C) (_ bv0 1)) true) (_ bv24 11) (_ bv23 11)) (ite (and (distinct ((_ extract 22 22) C) (_ bv0 1)) true) (_ bv22 11) (_ bv21 11)))))
 (let ((?x8133 (ite (and (distinct ((_ extract 28 27) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 28 28) C) (_ bv0 1)) true) (_ bv28 11) (_ bv27 11)) (ite (and (distinct ((_ extract 26 26) C) (_ bv0 1)) true) (_ bv26 11) (_ bv25 11)))))
 (let ((?x5334 (ite (and (distinct ((_ extract 32 31) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 32 32) C) (_ bv0 1)) true) (_ bv32 11) (_ bv31 11)) (ite (and (distinct ((_ extract 30 30) C) (_ bv0 1)) true) (_ bv30 11) (_ bv29 11)))))
 (let ((?x2093 (ite (and (distinct ((_ extract 32 25) C) (_ bv0 8)) true) (ite (and (distinct ((_ extract 32 29) C) (_ bv0 4)) true) ?x5334 ?x8133) (ite (and (distinct ((_ extract 24 21) C) (_ bv0 4)) true) ?x6756 ?x7688))))
 (let ((?x4997 (bvsub (ite (and (distinct ((_ extract 32 17) C) (_ bv0 16)) true) ?x2093 ?x7095) ?x3845)))
 (let ((?x3828 (ite (bvsgt (_ bv0 11) ?x4997) (_ bv0 11) ?x4997)))
 (let ((?x1347 (bvsub ?x3845 (ite (and (distinct ((_ extract 32 17) C) (_ bv0 16)) true) ?x2093 ?x7095))))
 (let ((?x3774 (ite (bvsgt (_ bv0 11) ?x1347) (_ bv0 11) ?x1347)))
 (let ((?x6558 (bvadd (bvxor (bvlshr (bvshl ((_ extract 10 0) (bvand %Op C)) ?x3774) ?x3828) ?x3202) C2)))
 (let ((?x5402 (ite (= (ite (and (distinct (bvand %Op C) (_ bv0 33)) true) (_ bv1 1) (_ bv0 1)) (_ bv1 1)) C2 C3)))
 (let ((?x4878 (ite (and (distinct ((_ extract 2 2) C) (_ bv0 1)) true) (_ bv2 32) (ite (and (distinct ((_ extract 1 1) C) (_ bv0 1)) true) (_ bv1 32) (_ bv0 32)))))
 (let ((?x4548 (ite (and (distinct ((_ extract 4 3) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 4 4) C) (_ bv0 1)) true) (_ bv4 32) (_ bv3 32)) ?x4878)))
 (let ((?x3402 (ite (and (distinct ((_ extract 8 7) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 8 8) C) (_ bv0 1)) true) (_ bv8 32) (_ bv7 32)) (ite (and (distinct ((_ extract 6 6) C) (_ bv0 1)) true) (_ bv6 32) (_ bv5 32)))))
 (let ((?x2122 (ite (and (distinct ((_ extract 12 11) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 12 12) C) (_ bv0 1)) true) (_ bv12 32) (_ bv11 32)) (ite (and (distinct ((_ extract 10 10) C) (_ bv0 1)) true) (_ bv10 32) (_ bv9 32)))))
 (let ((?x7173 (ite (and (distinct ((_ extract 16 15) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 16 16) C) (_ bv0 1)) true) (_ bv16 32) (_ bv15 32)) (ite (and (distinct ((_ extract 14 14) C) (_ bv0 1)) true) (_ bv14 32) (_ bv13 32)))))
 (let ((?x4948 (ite (and (distinct ((_ extract 16 9) C) (_ bv0 8)) true) (ite (and (distinct ((_ extract 16 13) C) (_ bv0 4)) true) ?x7173 ?x2122) (ite (and (distinct ((_ extract 8 5) C) (_ bv0 4)) true) ?x3402 ?x4548))))
 (let ((?x8233 (ite (and (distinct ((_ extract 20 19) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 20 20) C) (_ bv0 1)) true) (_ bv20 32) (_ bv19 32)) (ite (and (distinct ((_ extract 18 18) C) (_ bv0 1)) true) (_ bv18 32) (_ bv17 32)))))
 (let ((?x6388 (ite (and (distinct ((_ extract 24 23) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 24 24) C) (_ bv0 1)) true) (_ bv24 32) (_ bv23 32)) (ite (and (distinct ((_ extract 22 22) C) (_ bv0 1)) true) (_ bv22 32) (_ bv21 32)))))
 (let ((?x4864 (ite (and (distinct ((_ extract 28 27) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 28 28) C) (_ bv0 1)) true) (_ bv28 32) (_ bv27 32)) (ite (and (distinct ((_ extract 26 26) C) (_ bv0 1)) true) (_ bv26 32) (_ bv25 32)))))
 (let ((?x3769 (ite (and (distinct ((_ extract 32 31) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 32 32) C) (_ bv0 1)) true) (_ bv32 32) (_ bv31 32)) (ite (and (distinct ((_ extract 30 30) C) (_ bv0 1)) true) (_ bv30 32) (_ bv29 32)))))
 (let ((?x7908 (ite (and (distinct ((_ extract 32 25) C) (_ bv0 8)) true) (ite (and (distinct ((_ extract 32 29) C) (_ bv0 4)) true) ?x3769 ?x4864) (ite (and (distinct ((_ extract 24 21) C) (_ bv0 4)) true) ?x6388 ?x8233))))
 (and (and (and (distinct C (_ bv0 33)) true) (= (bvand C (bvsub C (_ bv1 33))) (_ bv0 33))) (and (and (distinct ?x3202 (_ bv0 11)) true) (= (bvand ?x3202 (bvsub ?x3202 (_ bv1 11))) (_ bv0 11))) (bvslt (ite (and (distinct ((_ extract 32 17) C) (_ bv0 16)) true) ?x7908 ?x4948) (_ bv11 32)) (and (distinct ?x5402 ?x6558) true)))))))))))))))))))))))))))))))))))))
(check-sat)
