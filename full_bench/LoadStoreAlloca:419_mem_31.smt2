(set-info :status unknown)
(declare-fun mem0 () (_ BitVec 8))
(declare-fun %x () (_ BitVec 32))
(declare-fun %p1 () (_ BitVec 64))
(declare-fun idx () (_ BitVec 64))
(declare-fun |ana_equivalentAddressValues(%p1, %p2)| () (_ BitVec 1))
(declare-fun %p2 () (_ BitVec 64))
(assert
 (let ((?x18896 ((_ extract 7 0) %x)))
 (let (($x6023 (or true true)))
 (let (($x3717 (and (distinct %p1 (_ bv0 64)) true)))
 (let ((?x10633 ((_ extract 15 8) %x)))
 (let ((?x17396 (ite (and $x3717 $x6023 (= idx (bvadd %p1 (_ bv1 64)))) ?x10633 (ite (and $x3717 $x6023 (= idx (bvadd %p1 (_ bv0 64)))) ?x18896 mem0))))
 (let ((?x11474 ((_ extract 23 16) %x)))
 (let ((?x8712 ((_ extract 31 24) %x)))
 (let ((?x1057 (ite (and $x3717 $x6023 (= idx (bvadd %p1 (_ bv3 64)))) ?x8712 (ite (and $x3717 $x6023 (= idx (bvadd %p1 (_ bv2 64)))) ?x11474 ?x17396))))
 (let (($x19589 (= |ana_equivalentAddressValues(%p1, %p2)| (_ bv1 1))))
 (and (=> $x19589 (= %p1 %p2)) $x19589 (and (distinct ?x1057 ?x1057) true))))))))))))
(check-sat)
