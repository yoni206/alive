(set-info :status unknown)
(declare-fun mem0 () (_ BitVec 8))
(declare-fun %p2 () (_ BitVec 64))
(declare-fun idx () (_ BitVec 64))
(declare-fun %p1 () (_ BitVec 64))
(declare-fun |ana_equivalentAddressValues(%p1, %p2)| () (_ BitVec 1))
(assert
 (let ((?x19564 (concat (concat (concat mem0 mem0) mem0) ((_ extract 6 0) mem0))))
 (let (($x12162 (or true true)))
 (let (($x5923 (and (distinct %p2 (_ bv0 64)) true)))
 (let (($x16294 (and (distinct %p1 (_ bv0 64)) true)))
 (let ((?x14748 (ite (and $x16294 $x12162 $x16294 $x12162 $x16294 $x12162 $x5923 $x12162 (= idx %p2)) (concat ((_ extract 7 7) mem0) ((_ extract 6 0) ?x19564)) mem0)))
 (let (($x9886 (and $x16294 $x12162 $x16294 $x12162 $x16294 $x12162 $x5923 $x12162 (= idx (bvadd (bvadd %p2 (_ bv1 64)) (_ bv0 64))))))
 (let (($x6657 (and $x16294 $x12162 $x16294 $x12162 $x16294 $x12162 $x5923 $x12162 (= idx (bvadd (bvadd %p2 (_ bv1 64)) (_ bv1 64))))))
 (let (($x14853 (and $x16294 $x12162 $x16294 $x12162 $x16294 $x12162 $x5923 $x12162 (= idx (bvadd (bvadd %p2 (_ bv1 64)) (_ bv2 64))))))
 (let ((?x15736 (ite $x14853 ((_ extract 30 23) ?x19564) (ite $x6657 ((_ extract 22 15) ?x19564) (ite $x9886 ((_ extract 14 7) ?x19564) ?x14748)))))
 (let (($x22732 (= |ana_equivalentAddressValues(%p1, %p2)| (_ bv1 1))))
 (and (=> $x22732 (= %p1 %p2)) $x22732 (and (distinct ?x15736 mem0) true)))))))))))))
(check-sat)
