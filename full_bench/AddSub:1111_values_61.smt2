(set-info :source |
 Generated by Alive 0.1
 More info in N. P. Lopes, D. Menendez, S. Nagarakatte, J. Regehr.
 Provably Correct Peephole Optimizations with Alive. In PLDI'15.
|)

(set-info :status unknown)
(declare-fun C2 () (_ BitVec 6))
(declare-fun %Y () (_ BitVec 6))
(declare-fun C1 () (_ BitVec 6))
(assert
 (let ((?x33496 (ite (and (distinct ((_ extract 2 2) C2) (_ bv0 1)) true) (_ bv2 6) (ite (and (distinct ((_ extract 1 1) C2) (_ bv0 1)) true) (_ bv1 6) (_ bv0 6)))))
 (let ((?x33493 (ite (and (distinct ((_ extract 5 5) C2) (_ bv0 1)) true) (_ bv5 6) (ite (and (distinct ((_ extract 4 4) C2) (_ bv0 1)) true) (_ bv4 6) (_ bv3 6)))))
 (let ((?x33490 (bvsub (bvsub (_ bv6 6) (ite (and (distinct ((_ extract 5 3) C2) (_ bv0 3)) true) ?x33493 ?x33496)) (_ bv1 6))))
 (let ((?x33027 (bvsub (_ bv6 6) ?x33490)))
 (let (($x32716 (and (distinct (bvadd (bvxor %Y C2) C1) (bvashr (bvshl %Y ?x33027) ?x33027)) true)))
 (let (($x33474 (not (= (bvand C2 (bvshl (_ bv63 6) ?x33027)) (_ bv0 6)))))
 (let (($x32959 (and (and (distinct C2 (_ bv0 6)) true) (= (bvand C2 (bvsub C2 (_ bv1 6))) (_ bv0 6)))))
 (let (($x32987 (= C1 (bvneg C2))))
 (and $x32987 $x32959 $x33474 $x32716))))))))))
(check-sat)
