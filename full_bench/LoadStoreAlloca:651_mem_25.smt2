(set-info :status unknown)
(declare-fun mem0 () (_ BitVec 8))
(declare-fun alloca%a_3019 () (_ BitVec 8))
(declare-fun %a () (_ BitVec 64))
(declare-fun idx () (_ BitVec 64))
(declare-fun %x () (_ BitVec 5))
(declare-fun %idx () (_ BitVec 28))
(declare-fun u_%a () (_ BitVec 8))
(declare-fun u_%ptr () (_ BitVec 8))
(assert
 (forall ((alloca%a_3018 (_ BitVec 8)) (alloca%a_3020 (_ BitVec 8)) )(let (($x8447 (= idx (bvadd %a (_ bv0 64)))))
 (let ((?x14386 (ite $x8447 ((_ extract 7 0) alloca%a_3019) mem0)))
 (let ((?x18116 (ite (= (bvadd %a (bvmul (_ bv1 64) ((_ sign_extend 36) %idx))) (bvadd %a (_ bv0 64))) ((_ extract 7 0) alloca%a_3018) mem0)))
 (let (($x7144 (bvuge (_ bv0 64) (bvsub (bvadd %a (bvmul (_ bv1 64) ((_ sign_extend 36) %idx))) %a))))
 (let (($x17137 (and (distinct %a (_ bv0 64)) true)))
 (let (($x15546 (and $x17137 (and (distinct (bvadd %a (bvmul (_ bv1 64) ((_ sign_extend 36) %idx))) (_ bv0 64)) true) (and (bvuge (bvadd %a (bvmul (_ bv1 64) ((_ sign_extend 36) %idx))) %a) $x7144) (= idx (bvadd %a (bvmul (_ bv1 64) ((_ sign_extend 36) %idx)))))))
 (let ((?x18598 (ite $x15546 (concat ((_ extract 7 5) ?x18116) ((_ extract 4 0) %x)) (ite $x8447 ((_ extract 7 0) alloca%a_3018) mem0))))
 (and $x17137 $x17137 (= u_%ptr (_ bv1 8)) (= u_%a (_ bv1 8)) $x17137 $x17137 $x17137 (and (distinct (ite $x8447 ((_ extract 7 0) alloca%a_3020) ?x18598) ?x14386) true))))))))))
 )
(check-sat)
