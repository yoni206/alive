(set-info :status unknown)
(declare-fun mem0 () (_ BitVec 8))
(declare-fun %p2 () (_ BitVec 64))
(declare-fun idx () (_ BitVec 64))
(declare-fun %p1 () (_ BitVec 64))
(declare-fun |ana_equivalentAddressValues(%p1, %p2)| () (_ BitVec 1))
(assert
 (let ((?x16702 (concat (concat (concat (concat (concat mem0 mem0) mem0) mem0) mem0) mem0)))
 (let ((?x7122 (concat ?x16702 mem0)))
 (let (($x14632 (or true true)))
 (let (($x15398 (and (distinct %p2 (_ bv0 64)) true)))
 (let (($x12194 (and (distinct %p1 (_ bv0 64)) true)))
 (let (($x15736 (and $x12194 $x14632 $x12194 $x14632 $x12194 $x14632 $x15398 $x14632 (= idx (bvadd %p2 (_ bv0 64))))))
 (let (($x3284 (and $x12194 $x14632 $x12194 $x14632 $x12194 $x14632 $x15398 $x14632 (= idx (bvadd %p2 (_ bv1 64))))))
 (let (($x23024 (and $x12194 $x14632 $x12194 $x14632 $x12194 $x14632 $x15398 $x14632 (= idx (bvadd %p2 (_ bv2 64))))))
 (let ((?x7072 (ite $x23024 ((_ extract 23 16) ?x7122) (ite $x3284 ((_ extract 15 8) ?x7122) (ite $x15736 ((_ extract 7 0) ?x7122) mem0)))))
 (let (($x9408 (and $x12194 $x14632 $x12194 $x14632 $x12194 $x14632 $x15398 $x14632 (= idx (bvadd %p2 (_ bv3 64))))))
 (let (($x19564 (and $x12194 $x14632 $x12194 $x14632 $x12194 $x14632 $x15398 $x14632 (= idx (bvadd %p2 (_ bv4 64))))))
 (let (($x15581 (and $x12194 $x14632 $x12194 $x14632 $x12194 $x14632 $x15398 $x14632 (= idx (bvadd %p2 (_ bv5 64))))))
 (let ((?x14303 (ite $x15581 ((_ extract 47 40) ?x7122) (ite $x19564 ((_ extract 39 32) ?x7122) (ite $x9408 ((_ extract 31 24) ?x7122) ?x7072)))))
 (let (($x21907 (and $x12194 $x14632 $x12194 $x14632 $x12194 $x14632 $x15398 $x14632 (= idx (bvadd %p2 (_ bv6 64))))))
 (let ((?x22732 (ite $x21907 ((_ extract 55 48) ?x7122) ?x14303)))
 (let (($x9614 (= |ana_equivalentAddressValues(%p1, %p2)| (_ bv1 1))))
 (and (=> $x9614 (= %p1 %p2)) $x9614 (and (distinct ?x22732 mem0) true)))))))))))))))))))
(check-sat)
