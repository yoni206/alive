(set-info :status unknown)
(declare-fun mem0 () (_ BitVec 8))
(declare-fun %x () (_ BitVec 55))
(declare-fun %p1 () (_ BitVec 64))
(declare-fun idx () (_ BitVec 64))
(declare-fun |ana_equivalentAddressValues(%p1, %p2)| () (_ BitVec 1))
(declare-fun %p2 () (_ BitVec 64))
(assert
 (let ((?x15778 (concat ((_ extract 7 7) mem0) ((_ extract 6 0) %x))))
 (let ((?x15865 (ite (and (and (distinct %p1 (_ bv0 64)) true) (or true true) (= idx %p1)) ?x15778 mem0)))
 (let ((?x4356 ((_ extract 14 7) %x)))
 (let (($x17348 (or true true)))
 (let (($x8765 (and (distinct %p1 (_ bv0 64)) true)))
 (let ((?x18741 (ite (and $x8765 $x17348 (= idx (bvadd (bvadd %p1 (_ bv1 64)) (_ bv0 64)))) ?x4356 ?x15865)))
 (let ((?x4086 ((_ extract 22 15) %x)))
 (let ((?x4998 (ite (and $x8765 $x17348 (= idx (bvadd (bvadd %p1 (_ bv1 64)) (_ bv1 64)))) ?x4086 ?x18741)))
 (let ((?x17826 ((_ extract 30 23) %x)))
 (let ((?x11162 (ite (and $x8765 $x17348 (= idx (bvadd (bvadd %p1 (_ bv1 64)) (_ bv2 64)))) ?x17826 ?x4998)))
 (let ((?x1914 ((_ extract 38 31) %x)))
 (let ((?x7142 (ite (and $x8765 $x17348 (= idx (bvadd (bvadd %p1 (_ bv1 64)) (_ bv3 64)))) ?x1914 ?x11162)))
 (let ((?x20203 ((_ extract 46 39) %x)))
 (let ((?x6560 (ite (and $x8765 $x17348 (= idx (bvadd (bvadd %p1 (_ bv1 64)) (_ bv4 64)))) ?x20203 ?x7142)))
 (let ((?x6201 ((_ extract 54 47) %x)))
 (let ((?x5733 (ite (and $x8765 $x17348 (= idx (bvadd (bvadd %p1 (_ bv1 64)) (_ bv5 64)))) ?x6201 ?x6560)))
 (let (($x7533 (= |ana_equivalentAddressValues(%p1, %p2)| (_ bv1 1))))
 (and (=> $x7533 (= %p1 %p2)) $x7533 (and (distinct ?x5733 ?x5733) true))))))))))))))))))))
(check-sat)
