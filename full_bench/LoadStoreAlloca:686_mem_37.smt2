(set-info :status unknown)
(declare-fun mem0 () (_ BitVec 8))
(declare-fun %p2 () (_ BitVec 64))
(declare-fun idx () (_ BitVec 64))
(declare-fun %p1 () (_ BitVec 64))
(declare-fun |ana_equivalentAddressValues(%p1, %p2)| () (_ BitVec 1))
(assert
 (let ((?x16243 (concat (concat (concat (concat (concat mem0 mem0) mem0) mem0) mem0) ((_ extract 0 0) mem0))))
 (let (($x20180 (or true true)))
 (let (($x1088 (and (distinct %p2 (_ bv0 64)) true)))
 (let (($x17231 (and (distinct %p1 (_ bv0 64)) true)))
 (let ((?x15463 (ite (and $x17231 $x20180 $x17231 $x20180 $x17231 $x20180 $x1088 $x20180 (= idx %p2)) (concat ((_ extract 7 1) mem0) ((_ extract 0 0) ?x16243)) mem0)))
 (let (($x3522 (and $x17231 $x20180 $x17231 $x20180 $x17231 $x20180 $x1088 $x20180 (= idx (bvadd (bvadd %p2 (_ bv1 64)) (_ bv0 64))))))
 (let (($x16294 (and $x17231 $x20180 $x17231 $x20180 $x17231 $x20180 $x1088 $x20180 (= idx (bvadd (bvadd %p2 (_ bv1 64)) (_ bv1 64))))))
 (let (($x13808 (and $x17231 $x20180 $x17231 $x20180 $x17231 $x20180 $x1088 $x20180 (= idx (bvadd (bvadd %p2 (_ bv1 64)) (_ bv2 64))))))
 (let ((?x14172 (ite $x13808 ((_ extract 24 17) ?x16243) (ite $x16294 ((_ extract 16 9) ?x16243) (ite $x3522 ((_ extract 8 1) ?x16243) ?x15463)))))
 (let (($x6657 (and $x17231 $x20180 $x17231 $x20180 $x17231 $x20180 $x1088 $x20180 (= idx (bvadd (bvadd %p2 (_ bv1 64)) (_ bv3 64))))))
 (let (($x11187 (and $x17231 $x20180 $x17231 $x20180 $x17231 $x20180 $x1088 $x20180 (= idx (bvadd (bvadd %p2 (_ bv1 64)) (_ bv4 64))))))
 (let ((?x6046 (ite $x11187 ((_ extract 40 33) ?x16243) (ite $x6657 ((_ extract 32 25) ?x16243) ?x14172))))
 (let (($x15939 (= |ana_equivalentAddressValues(%p1, %p2)| (_ bv1 1))))
 (and (=> $x15939 (= %p1 %p2)) $x15939 (and (distinct ?x6046 mem0) true))))))))))))))))
(check-sat)
