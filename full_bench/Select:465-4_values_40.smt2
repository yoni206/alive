(set-info :status unknown)
(declare-fun %Y () (_ BitVec 11))
(declare-fun C2 () (_ BitVec 11))
(declare-fun C1 () (_ BitVec 45))
(declare-fun %X () (_ BitVec 45))
(assert
 (let ((?x12567 (ite (and (distinct ((_ extract 2 2) C2) (_ bv0 1)) true) (_ bv2 45) (ite (and (distinct ((_ extract 1 1) C2) (_ bv0 1)) true) (_ bv1 45) (_ bv0 45)))))
 (let ((?x23606 (ite (and (distinct ((_ extract 5 5) C2) (_ bv0 1)) true) (_ bv5 45) (ite (and (distinct ((_ extract 4 4) C2) (_ bv0 1)) true) (_ bv4 45) (_ bv3 45)))))
 (let ((?x5327 (ite (and (distinct ((_ extract 8 8) C2) (_ bv0 1)) true) (_ bv8 45) (ite (and (distinct ((_ extract 7 7) C2) (_ bv0 1)) true) (_ bv7 45) (_ bv6 45)))))
 (let ((?x15721 (ite (and (distinct ((_ extract 10 9) C2) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) C2) (_ bv0 1)) true) (_ bv10 45) (_ bv9 45)) ?x5327)))
 (let ((?x8998 (ite (and (distinct ((_ extract 10 6) C2) (_ bv0 5)) true) ?x15721 (ite (and (distinct ((_ extract 5 3) C2) (_ bv0 3)) true) ?x23606 ?x12567))))
 (let ((?x17963 (ite (and (distinct ((_ extract 2 2) C1) (_ bv0 1)) true) (_ bv2 45) (ite (and (distinct ((_ extract 1 1) C1) (_ bv0 1)) true) (_ bv1 45) (_ bv0 45)))))
 (let ((?x12162 (ite (and (distinct ((_ extract 5 5) C1) (_ bv0 1)) true) (_ bv5 45) (ite (and (distinct ((_ extract 4 4) C1) (_ bv0 1)) true) (_ bv4 45) (_ bv3 45)))))
 (let ((?x9111 (ite (and (distinct ((_ extract 8 8) C1) (_ bv0 1)) true) (_ bv8 45) (ite (and (distinct ((_ extract 7 7) C1) (_ bv0 1)) true) (_ bv7 45) (_ bv6 45)))))
 (let ((?x8546 (ite (and (distinct ((_ extract 11 11) C1) (_ bv0 1)) true) (_ bv11 45) (ite (and (distinct ((_ extract 10 10) C1) (_ bv0 1)) true) (_ bv10 45) (_ bv9 45)))))
 (let ((?x5278 (ite (and (distinct ((_ extract 11 6) C1) (_ bv0 6)) true) (ite (and (distinct ((_ extract 11 9) C1) (_ bv0 3)) true) ?x8546 ?x9111) (ite (and (distinct ((_ extract 5 3) C1) (_ bv0 3)) true) ?x12162 ?x17963))))
 (let ((?x23111 (ite (and (distinct ((_ extract 14 14) C1) (_ bv0 1)) true) (_ bv14 45) (ite (and (distinct ((_ extract 13 13) C1) (_ bv0 1)) true) (_ bv13 45) (_ bv12 45)))))
 (let ((?x18164 (ite (and (distinct ((_ extract 17 17) C1) (_ bv0 1)) true) (_ bv17 45) (ite (and (distinct ((_ extract 16 16) C1) (_ bv0 1)) true) (_ bv16 45) (_ bv15 45)))))
 (let ((?x3149 (ite (and (distinct ((_ extract 20 20) C1) (_ bv0 1)) true) (_ bv20 45) (ite (and (distinct ((_ extract 19 19) C1) (_ bv0 1)) true) (_ bv19 45) (_ bv18 45)))))
 (let ((?x18224 (ite (and (distinct ((_ extract 22 21) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 22 22) C1) (_ bv0 1)) true) (_ bv22 45) (_ bv21 45)) ?x3149)))
 (let ((?x15834 (ite (and (distinct ((_ extract 22 18) C1) (_ bv0 5)) true) ?x18224 (ite (and (distinct ((_ extract 17 15) C1) (_ bv0 3)) true) ?x18164 ?x23111))))
 (let ((?x724 (ite (and (distinct ((_ extract 25 25) C1) (_ bv0 1)) true) (_ bv25 45) (ite (and (distinct ((_ extract 24 24) C1) (_ bv0 1)) true) (_ bv24 45) (_ bv23 45)))))
 (let ((?x1600 (ite (and (distinct ((_ extract 28 28) C1) (_ bv0 1)) true) (_ bv28 45) (ite (and (distinct ((_ extract 27 27) C1) (_ bv0 1)) true) (_ bv27 45) (_ bv26 45)))))
 (let ((?x23299 (ite (and (distinct ((_ extract 31 31) C1) (_ bv0 1)) true) (_ bv31 45) (ite (and (distinct ((_ extract 30 30) C1) (_ bv0 1)) true) (_ bv30 45) (_ bv29 45)))))
 (let ((?x6959 (ite (and (distinct ((_ extract 33 32) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 33 33) C1) (_ bv0 1)) true) (_ bv33 45) (_ bv32 45)) ?x23299)))
 (let ((?x20803 (ite (and (distinct ((_ extract 33 29) C1) (_ bv0 5)) true) ?x6959 (ite (and (distinct ((_ extract 28 26) C1) (_ bv0 3)) true) ?x1600 ?x724))))
 (let ((?x17224 (ite (and (distinct ((_ extract 36 36) C1) (_ bv0 1)) true) (_ bv36 45) (ite (and (distinct ((_ extract 35 35) C1) (_ bv0 1)) true) (_ bv35 45) (_ bv34 45)))))
 (let ((?x4020 (ite (and (distinct ((_ extract 39 39) C1) (_ bv0 1)) true) (_ bv39 45) (ite (and (distinct ((_ extract 38 38) C1) (_ bv0 1)) true) (_ bv38 45) (_ bv37 45)))))
 (let ((?x12588 (ite (and (distinct ((_ extract 42 42) C1) (_ bv0 1)) true) (_ bv42 45) (ite (and (distinct ((_ extract 41 41) C1) (_ bv0 1)) true) (_ bv41 45) (_ bv40 45)))))
 (let ((?x12494 (ite (and (distinct ((_ extract 44 43) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 44 44) C1) (_ bv0 1)) true) (_ bv44 45) (_ bv43 45)) ?x12588)))
 (let ((?x6864 (ite (and (distinct ((_ extract 44 40) C1) (_ bv0 5)) true) ?x12494 (ite (and (distinct ((_ extract 39 37) C1) (_ bv0 3)) true) ?x4020 ?x17224))))
 (let ((?x14753 (ite (and (distinct ((_ extract 44 23) C1) (_ bv0 22)) true) (ite (and (distinct ((_ extract 44 34) C1) (_ bv0 11)) true) ?x6864 ?x20803) (ite (and (distinct ((_ extract 22 12) C1) (_ bv0 11)) true) ?x15834 ?x5278))))
 (let ((?x7781 (bvsub ?x14753 ?x8998)))
 (let ((?x21274 (bvand %X C1)))
 (let ((?x22490 (bvor %Y C2)))
 (let (($x4213 (and (distinct (ite (= (ite (and (distinct ?x21274 (_ bv0 45)) true) (_ bv1 1) (_ bv0 1)) (_ bv1 1)) %Y ?x22490) (bvor (bvxor ((_ extract 10 0) (bvlshr ?x21274 ?x7781)) C2) %Y)) true)))
 (let ((?x7832 (ite (and (distinct ((_ extract 2 2) C1) (_ bv0 1)) true) (_ bv2 32) (ite (and (distinct ((_ extract 1 1) C1) (_ bv0 1)) true) (_ bv1 32) (_ bv0 32)))))
 (let ((?x11295 (ite (and (distinct ((_ extract 5 5) C1) (_ bv0 1)) true) (_ bv5 32) (ite (and (distinct ((_ extract 4 4) C1) (_ bv0 1)) true) (_ bv4 32) (_ bv3 32)))))
 (let ((?x16213 (ite (and (distinct ((_ extract 8 8) C1) (_ bv0 1)) true) (_ bv8 32) (ite (and (distinct ((_ extract 7 7) C1) (_ bv0 1)) true) (_ bv7 32) (_ bv6 32)))))
 (let ((?x2973 (ite (and (distinct ((_ extract 11 11) C1) (_ bv0 1)) true) (_ bv11 32) (ite (and (distinct ((_ extract 10 10) C1) (_ bv0 1)) true) (_ bv10 32) (_ bv9 32)))))
 (let ((?x13083 (ite (and (distinct ((_ extract 11 6) C1) (_ bv0 6)) true) (ite (and (distinct ((_ extract 11 9) C1) (_ bv0 3)) true) ?x2973 ?x16213) (ite (and (distinct ((_ extract 5 3) C1) (_ bv0 3)) true) ?x11295 ?x7832))))
 (let ((?x13990 (ite (and (distinct ((_ extract 14 14) C1) (_ bv0 1)) true) (_ bv14 32) (ite (and (distinct ((_ extract 13 13) C1) (_ bv0 1)) true) (_ bv13 32) (_ bv12 32)))))
 (let ((?x14908 (ite (and (distinct ((_ extract 17 17) C1) (_ bv0 1)) true) (_ bv17 32) (ite (and (distinct ((_ extract 16 16) C1) (_ bv0 1)) true) (_ bv16 32) (_ bv15 32)))))
 (let ((?x16884 (ite (and (distinct ((_ extract 20 20) C1) (_ bv0 1)) true) (_ bv20 32) (ite (and (distinct ((_ extract 19 19) C1) (_ bv0 1)) true) (_ bv19 32) (_ bv18 32)))))
 (let ((?x22386 (ite (and (distinct ((_ extract 22 21) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 22 22) C1) (_ bv0 1)) true) (_ bv22 32) (_ bv21 32)) ?x16884)))
 (let ((?x12557 (ite (and (distinct ((_ extract 22 18) C1) (_ bv0 5)) true) ?x22386 (ite (and (distinct ((_ extract 17 15) C1) (_ bv0 3)) true) ?x14908 ?x13990))))
 (let ((?x16379 (ite (and (distinct ((_ extract 25 25) C1) (_ bv0 1)) true) (_ bv25 32) (ite (and (distinct ((_ extract 24 24) C1) (_ bv0 1)) true) (_ bv24 32) (_ bv23 32)))))
 (let ((?x14122 (ite (and (distinct ((_ extract 28 28) C1) (_ bv0 1)) true) (_ bv28 32) (ite (and (distinct ((_ extract 27 27) C1) (_ bv0 1)) true) (_ bv27 32) (_ bv26 32)))))
 (let ((?x8267 (ite (and (distinct ((_ extract 31 31) C1) (_ bv0 1)) true) (_ bv31 32) (ite (and (distinct ((_ extract 30 30) C1) (_ bv0 1)) true) (_ bv30 32) (_ bv29 32)))))
 (let ((?x8954 (ite (and (distinct ((_ extract 33 32) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 33 33) C1) (_ bv0 1)) true) (_ bv33 32) (_ bv32 32)) ?x8267)))
 (let ((?x15678 (ite (and (distinct ((_ extract 33 29) C1) (_ bv0 5)) true) ?x8954 (ite (and (distinct ((_ extract 28 26) C1) (_ bv0 3)) true) ?x14122 ?x16379))))
 (let ((?x1652 (ite (and (distinct ((_ extract 36 36) C1) (_ bv0 1)) true) (_ bv36 32) (ite (and (distinct ((_ extract 35 35) C1) (_ bv0 1)) true) (_ bv35 32) (_ bv34 32)))))
 (let ((?x4478 (ite (and (distinct ((_ extract 39 39) C1) (_ bv0 1)) true) (_ bv39 32) (ite (and (distinct ((_ extract 38 38) C1) (_ bv0 1)) true) (_ bv38 32) (_ bv37 32)))))
 (let ((?x20910 (ite (and (distinct ((_ extract 42 42) C1) (_ bv0 1)) true) (_ bv42 32) (ite (and (distinct ((_ extract 41 41) C1) (_ bv0 1)) true) (_ bv41 32) (_ bv40 32)))))
 (let ((?x4625 (ite (and (distinct ((_ extract 44 43) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 44 44) C1) (_ bv0 1)) true) (_ bv44 32) (_ bv43 32)) ?x20910)))
 (let ((?x2232 (ite (and (distinct ((_ extract 44 40) C1) (_ bv0 5)) true) ?x4625 (ite (and (distinct ((_ extract 39 37) C1) (_ bv0 3)) true) ?x4478 ?x1652))))
 (let ((?x7952 (ite (and (distinct ((_ extract 44 23) C1) (_ bv0 22)) true) (ite (and (distinct ((_ extract 44 34) C1) (_ bv0 11)) true) ?x2232 ?x15678) (ite (and (distinct ((_ extract 22 12) C1) (_ bv0 11)) true) ?x12557 ?x13083))))
 (let ((?x23090 (ite (and (distinct ((_ extract 2 2) C2) (_ bv0 1)) true) (_ bv2 32) (ite (and (distinct ((_ extract 1 1) C2) (_ bv0 1)) true) (_ bv1 32) (_ bv0 32)))))
 (let ((?x11986 (ite (and (distinct ((_ extract 5 5) C2) (_ bv0 1)) true) (_ bv5 32) (ite (and (distinct ((_ extract 4 4) C2) (_ bv0 1)) true) (_ bv4 32) (_ bv3 32)))))
 (let ((?x13392 (ite (and (distinct ((_ extract 8 8) C2) (_ bv0 1)) true) (_ bv8 32) (ite (and (distinct ((_ extract 7 7) C2) (_ bv0 1)) true) (_ bv7 32) (_ bv6 32)))))
 (let ((?x17894 (ite (and (distinct ((_ extract 10 9) C2) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) C2) (_ bv0 1)) true) (_ bv10 32) (_ bv9 32)) ?x13392)))
 (let ((?x10247 (ite (and (distinct ((_ extract 10 6) C2) (_ bv0 5)) true) ?x17894 (ite (and (distinct ((_ extract 5 3) C2) (_ bv0 3)) true) ?x11986 ?x23090))))
 (and (and (and (distinct C1 (_ bv0 45)) true) (= (bvand C1 (bvsub C1 (_ bv1 45))) (_ bv0 45))) (and (and (distinct C2 (_ bv0 11)) true) (= (bvand C2 (bvsub C2 (_ bv1 11))) (_ bv0 11))) (bvslt ?x10247 ?x7952) $x4213))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
