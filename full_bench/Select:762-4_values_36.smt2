(set-info :status unknown)
(declare-fun C2 () (_ BitVec 11))
(declare-fun C3 () (_ BitVec 11))
(declare-fun C () (_ BitVec 40))
(declare-fun %Op () (_ BitVec 40))
(assert
 (let ((?x2030 (bvsub C3 C2)))
 (let ((?x6350 (ite (and (distinct ((_ extract 2 2) ?x2030) (_ bv0 1)) true) (_ bv2 11) (ite (and (distinct ((_ extract 1 1) ?x2030) (_ bv0 1)) true) (_ bv1 11) (_ bv0 11)))))
 (let ((?x10125 (ite (and (distinct ((_ extract 5 5) ?x2030) (_ bv0 1)) true) (_ bv5 11) (ite (and (distinct ((_ extract 4 4) ?x2030) (_ bv0 1)) true) (_ bv4 11) (_ bv3 11)))))
 (let ((?x5692 (ite (and (distinct ((_ extract 8 8) ?x2030) (_ bv0 1)) true) (_ bv8 11) (ite (and (distinct ((_ extract 7 7) ?x2030) (_ bv0 1)) true) (_ bv7 11) (_ bv6 11)))))
 (let ((?x19156 (ite (and (distinct ((_ extract 10 9) ?x2030) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) ?x2030) (_ bv0 1)) true) (_ bv10 11) (_ bv9 11)) ?x5692)))
 (let ((?x22010 (ite (and (distinct ((_ extract 10 6) ?x2030) (_ bv0 5)) true) ?x19156 (ite (and (distinct ((_ extract 5 3) ?x2030) (_ bv0 3)) true) ?x10125 ?x6350))))
 (let ((?x16033 (ite (and (distinct ((_ extract 2 2) C) (_ bv0 1)) true) (_ bv2 11) (ite (and (distinct ((_ extract 1 1) C) (_ bv0 1)) true) (_ bv1 11) (_ bv0 11)))))
 (let ((?x8621 (ite (and (distinct ((_ extract 4 3) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 4 4) C) (_ bv0 1)) true) (_ bv4 11) (_ bv3 11)) ?x16033)))
 (let ((?x12457 (ite (and (distinct ((_ extract 7 7) C) (_ bv0 1)) true) (_ bv7 11) (ite (and (distinct ((_ extract 6 6) C) (_ bv0 1)) true) (_ bv6 11) (_ bv5 11)))))
 (let ((?x1017 (ite (and (distinct ((_ extract 9 8) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 9 9) C) (_ bv0 1)) true) (_ bv9 11) (_ bv8 11)) ?x12457)))
 (let ((?x19679 (ite (and (distinct ((_ extract 12 12) C) (_ bv0 1)) true) (_ bv12 11) (ite (and (distinct ((_ extract 11 11) C) (_ bv0 1)) true) (_ bv11 11) (_ bv10 11)))))
 (let ((?x18843 (ite (and (distinct ((_ extract 14 13) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 14 14) C) (_ bv0 1)) true) (_ bv14 11) (_ bv13 11)) ?x19679)))
 (let ((?x19424 (ite (and (distinct ((_ extract 17 17) C) (_ bv0 1)) true) (_ bv17 11) (ite (and (distinct ((_ extract 16 16) C) (_ bv0 1)) true) (_ bv16 11) (_ bv15 11)))))
 (let ((?x6142 (ite (and (distinct ((_ extract 19 18) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 19 19) C) (_ bv0 1)) true) (_ bv19 11) (_ bv18 11)) ?x19424)))
 (let ((?x6068 (ite (and (distinct ((_ extract 19 10) C) (_ bv0 10)) true) (ite (and (distinct ((_ extract 19 15) C) (_ bv0 5)) true) ?x6142 ?x18843) (ite (and (distinct ((_ extract 9 5) C) (_ bv0 5)) true) ?x1017 ?x8621))))
 (let ((?x8736 (ite (and (distinct ((_ extract 22 22) C) (_ bv0 1)) true) (_ bv22 11) (ite (and (distinct ((_ extract 21 21) C) (_ bv0 1)) true) (_ bv21 11) (_ bv20 11)))))
 (let ((?x8605 (ite (and (distinct ((_ extract 24 23) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 24 24) C) (_ bv0 1)) true) (_ bv24 11) (_ bv23 11)) ?x8736)))
 (let ((?x4582 (ite (and (distinct ((_ extract 27 27) C) (_ bv0 1)) true) (_ bv27 11) (ite (and (distinct ((_ extract 26 26) C) (_ bv0 1)) true) (_ bv26 11) (_ bv25 11)))))
 (let ((?x6922 (ite (and (distinct ((_ extract 29 28) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 29 29) C) (_ bv0 1)) true) (_ bv29 11) (_ bv28 11)) ?x4582)))
 (let ((?x17082 (ite (and (distinct ((_ extract 32 32) C) (_ bv0 1)) true) (_ bv32 11) (ite (and (distinct ((_ extract 31 31) C) (_ bv0 1)) true) (_ bv31 11) (_ bv30 11)))))
 (let ((?x10263 (ite (and (distinct ((_ extract 34 33) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 34 34) C) (_ bv0 1)) true) (_ bv34 11) (_ bv33 11)) ?x17082)))
 (let ((?x4218 (ite (and (distinct ((_ extract 37 37) C) (_ bv0 1)) true) (_ bv37 11) (ite (and (distinct ((_ extract 36 36) C) (_ bv0 1)) true) (_ bv36 11) (_ bv35 11)))))
 (let ((?x4057 (ite (and (distinct ((_ extract 39 38) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 39 39) C) (_ bv0 1)) true) (_ bv39 11) (_ bv38 11)) ?x4218)))
 (let ((?x17103 (ite (and (distinct ((_ extract 39 30) C) (_ bv0 10)) true) (ite (and (distinct ((_ extract 39 35) C) (_ bv0 5)) true) ?x4057 ?x10263) (ite (and (distinct ((_ extract 29 25) C) (_ bv0 5)) true) ?x6922 ?x8605))))
 (let ((?x2576 (bvsub (ite (and (distinct ((_ extract 39 20) C) (_ bv0 20)) true) ?x17103 ?x6068) ?x22010)))
 (let ((?x5272 (ite (bvsgt (_ bv0 11) ?x2576) (_ bv0 11) ?x2576)))
 (let ((?x14415 (bvsub ?x22010 (ite (and (distinct ((_ extract 39 20) C) (_ bv0 20)) true) ?x17103 ?x6068))))
 (let ((?x19652 (ite (bvsgt (_ bv0 11) ?x14415) (_ bv0 11) ?x14415)))
 (let ((?x1470 (bvadd (bvxor (bvlshr (bvshl ((_ extract 10 0) (bvand %Op C)) ?x19652) ?x5272) ?x2030) C2)))
 (let ((?x11506 (ite (= (ite (and (distinct (bvand %Op C) (_ bv0 40)) true) (_ bv1 1) (_ bv0 1)) (_ bv1 1)) C2 C3)))
 (let ((?x16518 (ite (and (distinct ((_ extract 2 2) C) (_ bv0 1)) true) (_ bv2 32) (ite (and (distinct ((_ extract 1 1) C) (_ bv0 1)) true) (_ bv1 32) (_ bv0 32)))))
 (let ((?x16401 (ite (and (distinct ((_ extract 4 3) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 4 4) C) (_ bv0 1)) true) (_ bv4 32) (_ bv3 32)) ?x16518)))
 (let ((?x12907 (ite (and (distinct ((_ extract 7 7) C) (_ bv0 1)) true) (_ bv7 32) (ite (and (distinct ((_ extract 6 6) C) (_ bv0 1)) true) (_ bv6 32) (_ bv5 32)))))
 (let ((?x14700 (ite (and (distinct ((_ extract 9 8) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 9 9) C) (_ bv0 1)) true) (_ bv9 32) (_ bv8 32)) ?x12907)))
 (let ((?x9147 (ite (and (distinct ((_ extract 12 12) C) (_ bv0 1)) true) (_ bv12 32) (ite (and (distinct ((_ extract 11 11) C) (_ bv0 1)) true) (_ bv11 32) (_ bv10 32)))))
 (let ((?x10415 (ite (and (distinct ((_ extract 14 13) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 14 14) C) (_ bv0 1)) true) (_ bv14 32) (_ bv13 32)) ?x9147)))
 (let ((?x2992 (ite (and (distinct ((_ extract 17 17) C) (_ bv0 1)) true) (_ bv17 32) (ite (and (distinct ((_ extract 16 16) C) (_ bv0 1)) true) (_ bv16 32) (_ bv15 32)))))
 (let ((?x2273 (ite (and (distinct ((_ extract 19 18) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 19 19) C) (_ bv0 1)) true) (_ bv19 32) (_ bv18 32)) ?x2992)))
 (let ((?x17007 (ite (and (distinct ((_ extract 19 10) C) (_ bv0 10)) true) (ite (and (distinct ((_ extract 19 15) C) (_ bv0 5)) true) ?x2273 ?x10415) (ite (and (distinct ((_ extract 9 5) C) (_ bv0 5)) true) ?x14700 ?x16401))))
 (let ((?x6912 (ite (and (distinct ((_ extract 22 22) C) (_ bv0 1)) true) (_ bv22 32) (ite (and (distinct ((_ extract 21 21) C) (_ bv0 1)) true) (_ bv21 32) (_ bv20 32)))))
 (let ((?x766 (ite (and (distinct ((_ extract 24 23) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 24 24) C) (_ bv0 1)) true) (_ bv24 32) (_ bv23 32)) ?x6912)))
 (let ((?x6160 (ite (and (distinct ((_ extract 27 27) C) (_ bv0 1)) true) (_ bv27 32) (ite (and (distinct ((_ extract 26 26) C) (_ bv0 1)) true) (_ bv26 32) (_ bv25 32)))))
 (let ((?x19839 (ite (and (distinct ((_ extract 29 28) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 29 29) C) (_ bv0 1)) true) (_ bv29 32) (_ bv28 32)) ?x6160)))
 (let ((?x16597 (ite (and (distinct ((_ extract 32 32) C) (_ bv0 1)) true) (_ bv32 32) (ite (and (distinct ((_ extract 31 31) C) (_ bv0 1)) true) (_ bv31 32) (_ bv30 32)))))
 (let ((?x15513 (ite (and (distinct ((_ extract 34 33) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 34 34) C) (_ bv0 1)) true) (_ bv34 32) (_ bv33 32)) ?x16597)))
 (let ((?x2882 (ite (and (distinct ((_ extract 37 37) C) (_ bv0 1)) true) (_ bv37 32) (ite (and (distinct ((_ extract 36 36) C) (_ bv0 1)) true) (_ bv36 32) (_ bv35 32)))))
 (let ((?x12409 (ite (and (distinct ((_ extract 39 38) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 39 39) C) (_ bv0 1)) true) (_ bv39 32) (_ bv38 32)) ?x2882)))
 (let ((?x20185 (ite (and (distinct ((_ extract 39 30) C) (_ bv0 10)) true) (ite (and (distinct ((_ extract 39 35) C) (_ bv0 5)) true) ?x12409 ?x15513) (ite (and (distinct ((_ extract 29 25) C) (_ bv0 5)) true) ?x19839 ?x766))))
 (and (and (and (distinct C (_ bv0 40)) true) (= (bvand C (bvsub C (_ bv1 40))) (_ bv0 40))) (and (and (distinct ?x2030 (_ bv0 11)) true) (= (bvand ?x2030 (bvsub ?x2030 (_ bv1 11))) (_ bv0 11))) (bvslt (ite (and (distinct ((_ extract 39 20) C) (_ bv0 20)) true) ?x20185 ?x17007) (_ bv11 32)) (and (distinct ?x11506 ?x1470) true)))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
