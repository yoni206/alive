(set-info :status unknown)
(declare-fun mem0 () (_ BitVec 8))
(declare-fun %y () (_ BitVec 46))
(declare-fun %p2 () (_ BitVec 64))
(declare-fun idx () (_ BitVec 64))
(declare-fun %x () (_ BitVec 46))
(declare-fun %p1 () (_ BitVec 64))
(declare-fun |ana_equivalentAddressValues(%p1, %p2)| () (_ BitVec 1))
(assert
 (let ((?x4692 (ite (and (and (distinct %p2 (_ bv0 64)) true) (or true true) (= idx %p2)) (concat ((_ extract 7 6) mem0) ((_ extract 5 0) %y)) mem0)))
 (let (($x3698 (or true true)))
 (let (($x15136 (and (distinct %p2 (_ bv0 64)) true)))
 (let ((?x8696 (ite (and $x15136 $x3698 (= idx (bvadd (bvadd %p2 (_ bv1 64)) (_ bv0 64)))) ((_ extract 13 6) %y) ?x4692)))
 (let ((?x17522 (ite (and $x15136 $x3698 (= idx (bvadd (bvadd %p2 (_ bv1 64)) (_ bv1 64)))) ((_ extract 21 14) %y) ?x8696)))
 (let ((?x389 (ite (and $x15136 $x3698 (= idx (bvadd (bvadd %p2 (_ bv1 64)) (_ bv2 64)))) ((_ extract 29 22) %y) ?x17522)))
 (let ((?x2408 (ite (and $x15136 $x3698 (= idx (bvadd (bvadd %p2 (_ bv1 64)) (_ bv3 64)))) ((_ extract 37 30) %y) ?x389)))
 (let ((?x5878 (ite (and $x15136 $x3698 (= idx (bvadd (bvadd %p2 (_ bv1 64)) (_ bv4 64)))) ((_ extract 45 38) %y) ?x2408)))
 (let ((?x2094 (ite (and (and (distinct %p1 (_ bv0 64)) true) $x3698 (= idx %p1)) (concat ((_ extract 7 6) mem0) ((_ extract 5 0) %x)) mem0)))
 (let (($x17212 (and (distinct %p1 (_ bv0 64)) true)))
 (let ((?x12869 (ite (and $x17212 $x3698 (= idx (bvadd (bvadd %p1 (_ bv1 64)) (_ bv0 64)))) ((_ extract 13 6) %x) ?x2094)))
 (let ((?x17704 (ite (and $x17212 $x3698 (= idx (bvadd (bvadd %p1 (_ bv1 64)) (_ bv1 64)))) ((_ extract 21 14) %x) ?x12869)))
 (let ((?x7644 (ite (and $x17212 $x3698 (= idx (bvadd (bvadd %p1 (_ bv1 64)) (_ bv2 64)))) ((_ extract 29 22) %x) ?x17704)))
 (let ((?x18426 (ite (and $x17212 $x3698 (= idx (bvadd (bvadd %p1 (_ bv1 64)) (_ bv3 64)))) ((_ extract 37 30) %x) ?x7644)))
 (let ((?x6572 (ite (and $x17212 $x3698 (= idx (bvadd (bvadd %p1 (_ bv1 64)) (_ bv4 64)))) ((_ extract 45 38) %x) ?x18426)))
 (let ((?x4757 (ite (and $x17212 $x3698 (= %p2 %p1)) (concat ((_ extract 7 6) mem0) ((_ extract 5 0) %x)) mem0)))
 (let ((?x5000 (ite (and $x17212 $x3698 (= %p2 (bvadd (bvadd %p1 (_ bv1 64)) (_ bv0 64)))) ((_ extract 13 6) %x) ?x4757)))
 (let ((?x10015 (ite (and $x17212 $x3698 (= %p2 (bvadd (bvadd %p1 (_ bv1 64)) (_ bv1 64)))) ((_ extract 21 14) %x) ?x5000)))
 (let ((?x7172 (ite (and $x17212 $x3698 (= %p2 (bvadd (bvadd %p1 (_ bv1 64)) (_ bv2 64)))) ((_ extract 29 22) %x) ?x10015)))
 (let ((?x7397 (ite (and $x17212 $x3698 (= %p2 (bvadd (bvadd %p1 (_ bv1 64)) (_ bv3 64)))) ((_ extract 37 30) %x) ?x7172)))
 (let ((?x469 (ite (and $x17212 $x3698 (= %p2 (bvadd (bvadd %p1 (_ bv1 64)) (_ bv4 64)))) ((_ extract 45 38) %x) ?x7397)))
 (let ((?x1398 (ite (and $x17212 $x3698 $x15136 $x3698 (= idx %p2)) (concat ((_ extract 7 6) ?x469) ((_ extract 5 0) %y)) ?x6572)))
 (let ((?x22023 (ite (and $x17212 $x3698 $x15136 $x3698 (= idx (bvadd (bvadd %p2 (_ bv1 64)) (_ bv0 64)))) ((_ extract 13 6) %y) ?x1398)))
 (let ((?x13774 (ite (and $x17212 $x3698 $x15136 $x3698 (= idx (bvadd (bvadd %p2 (_ bv1 64)) (_ bv1 64)))) ((_ extract 21 14) %y) ?x22023)))
 (let ((?x15086 (ite (and $x17212 $x3698 $x15136 $x3698 (= idx (bvadd (bvadd %p2 (_ bv1 64)) (_ bv2 64)))) ((_ extract 29 22) %y) ?x13774)))
 (let ((?x7501 (ite (and $x17212 $x3698 $x15136 $x3698 (= idx (bvadd (bvadd %p2 (_ bv1 64)) (_ bv3 64)))) ((_ extract 37 30) %y) ?x15086)))
 (let ((?x24067 (ite (and $x17212 $x3698 $x15136 $x3698 (= idx (bvadd (bvadd %p2 (_ bv1 64)) (_ bv4 64)))) ((_ extract 45 38) %y) ?x7501)))
 (let (($x4073 (= |ana_equivalentAddressValues(%p1, %p2)| (_ bv1 1))))
 (and (=> $x4073 (= %p1 %p2)) $x4073 (and (distinct ?x24067 ?x5878) true)))))))))))))))))))))))))))))))
(check-sat)
