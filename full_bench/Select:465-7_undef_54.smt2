(set-info :status unknown)
(declare-fun C2 () (_ BitVec 11))
(declare-fun C1 () (_ BitVec 62))
(assert
 (let ((?x2613 (ite (and (distinct ((_ extract 2 2) C2) (_ bv0 1)) true) (_ bv2 62) (ite (and (distinct ((_ extract 1 1) C2) (_ bv0 1)) true) (_ bv1 62) (_ bv0 62)))))
 (let ((?x3228 (ite (and (distinct ((_ extract 5 5) C2) (_ bv0 1)) true) (_ bv5 62) (ite (and (distinct ((_ extract 4 4) C2) (_ bv0 1)) true) (_ bv4 62) (_ bv3 62)))))
 (let ((?x1236 (ite (and (distinct ((_ extract 8 8) C2) (_ bv0 1)) true) (_ bv8 62) (ite (and (distinct ((_ extract 7 7) C2) (_ bv0 1)) true) (_ bv7 62) (_ bv6 62)))))
 (let ((?x5646 (ite (and (distinct ((_ extract 10 9) C2) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) C2) (_ bv0 1)) true) (_ bv10 62) (_ bv9 62)) ?x1236)))
 (let ((?x3616 (ite (and (distinct ((_ extract 10 6) C2) (_ bv0 5)) true) ?x5646 (ite (and (distinct ((_ extract 5 3) C2) (_ bv0 3)) true) ?x3228 ?x2613))))
 (let ((?x3831 (ite (and (distinct ((_ extract 3 2) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 3 3) C1) (_ bv0 1)) true) (_ bv3 62) (_ bv2 62)) (ite (and (distinct ((_ extract 1 1) C1) (_ bv0 1)) true) (_ bv1 62) (_ bv0 62)))))
 (let ((?x5202 (ite (and (distinct ((_ extract 7 6) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 7 7) C1) (_ bv0 1)) true) (_ bv7 62) (_ bv6 62)) (ite (and (distinct ((_ extract 5 5) C1) (_ bv0 1)) true) (_ bv5 62) (_ bv4 62)))))
 (let ((?x4540 (ite (and (distinct ((_ extract 11 10) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 11 11) C1) (_ bv0 1)) true) (_ bv11 62) (_ bv10 62)) (ite (and (distinct ((_ extract 9 9) C1) (_ bv0 1)) true) (_ bv9 62) (_ bv8 62)))))
 (let ((?x2273 (ite (and (distinct ((_ extract 15 14) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 15 15) C1) (_ bv0 1)) true) (_ bv15 62) (_ bv14 62)) (ite (and (distinct ((_ extract 13 13) C1) (_ bv0 1)) true) (_ bv13 62) (_ bv12 62)))))
 (let ((?x5487 (ite (and (distinct ((_ extract 15 8) C1) (_ bv0 8)) true) (ite (and (distinct ((_ extract 15 12) C1) (_ bv0 4)) true) ?x2273 ?x4540) (ite (and (distinct ((_ extract 7 4) C1) (_ bv0 4)) true) ?x5202 ?x3831))))
 (let ((?x4011 (ite (and (distinct ((_ extract 19 18) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 19 19) C1) (_ bv0 1)) true) (_ bv19 62) (_ bv18 62)) (ite (and (distinct ((_ extract 17 17) C1) (_ bv0 1)) true) (_ bv17 62) (_ bv16 62)))))
 (let ((?x3472 (ite (and (distinct ((_ extract 23 22) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 23 23) C1) (_ bv0 1)) true) (_ bv23 62) (_ bv22 62)) (ite (and (distinct ((_ extract 21 21) C1) (_ bv0 1)) true) (_ bv21 62) (_ bv20 62)))))
 (let ((?x4738 (ite (and (distinct ((_ extract 27 26) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 27 27) C1) (_ bv0 1)) true) (_ bv27 62) (_ bv26 62)) (ite (and (distinct ((_ extract 25 25) C1) (_ bv0 1)) true) (_ bv25 62) (_ bv24 62)))))
 (let ((?x4525 (ite (and (distinct ((_ extract 30 30) C1) (_ bv0 1)) true) (_ bv30 62) (ite (and (distinct ((_ extract 29 29) C1) (_ bv0 1)) true) (_ bv29 62) (_ bv28 62)))))
 (let ((?x6445 (ite (and (distinct ((_ extract 30 24) C1) (_ bv0 7)) true) (ite (and (distinct ((_ extract 30 28) C1) (_ bv0 3)) true) ?x4525 ?x4738) (ite (and (distinct ((_ extract 23 20) C1) (_ bv0 4)) true) ?x3472 ?x4011))))
 (let ((?x1375 (ite (and (distinct ((_ extract 34 33) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 34 34) C1) (_ bv0 1)) true) (_ bv34 62) (_ bv33 62)) (ite (and (distinct ((_ extract 32 32) C1) (_ bv0 1)) true) (_ bv32 62) (_ bv31 62)))))
 (let ((?x5694 (ite (and (distinct ((_ extract 38 37) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 38 38) C1) (_ bv0 1)) true) (_ bv38 62) (_ bv37 62)) (ite (and (distinct ((_ extract 36 36) C1) (_ bv0 1)) true) (_ bv36 62) (_ bv35 62)))))
 (let ((?x3968 (ite (and (distinct ((_ extract 42 41) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 42 42) C1) (_ bv0 1)) true) (_ bv42 62) (_ bv41 62)) (ite (and (distinct ((_ extract 40 40) C1) (_ bv0 1)) true) (_ bv40 62) (_ bv39 62)))))
 (let ((?x4812 (ite (and (distinct ((_ extract 46 45) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 46 46) C1) (_ bv0 1)) true) (_ bv46 62) (_ bv45 62)) (ite (and (distinct ((_ extract 44 44) C1) (_ bv0 1)) true) (_ bv44 62) (_ bv43 62)))))
 (let ((?x3473 (ite (and (distinct ((_ extract 46 39) C1) (_ bv0 8)) true) (ite (and (distinct ((_ extract 46 43) C1) (_ bv0 4)) true) ?x4812 ?x3968) (ite (and (distinct ((_ extract 38 35) C1) (_ bv0 4)) true) ?x5694 ?x1375))))
 (let ((?x6553 (ite (and (distinct ((_ extract 50 49) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 50 50) C1) (_ bv0 1)) true) (_ bv50 62) (_ bv49 62)) (ite (and (distinct ((_ extract 48 48) C1) (_ bv0 1)) true) (_ bv48 62) (_ bv47 62)))))
 (let ((?x3815 (ite (and (distinct ((_ extract 54 53) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 54 54) C1) (_ bv0 1)) true) (_ bv54 62) (_ bv53 62)) (ite (and (distinct ((_ extract 52 52) C1) (_ bv0 1)) true) (_ bv52 62) (_ bv51 62)))))
 (let ((?x5542 (ite (and (distinct ((_ extract 58 57) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 58 58) C1) (_ bv0 1)) true) (_ bv58 62) (_ bv57 62)) (ite (and (distinct ((_ extract 56 56) C1) (_ bv0 1)) true) (_ bv56 62) (_ bv55 62)))))
 (let ((?x1676 (ite (and (distinct ((_ extract 61 61) C1) (_ bv0 1)) true) (_ bv61 62) (ite (and (distinct ((_ extract 60 60) C1) (_ bv0 1)) true) (_ bv60 62) (_ bv59 62)))))
 (let ((?x5238 (ite (and (distinct ((_ extract 61 55) C1) (_ bv0 7)) true) (ite (and (distinct ((_ extract 61 59) C1) (_ bv0 3)) true) ?x1676 ?x5542) (ite (and (distinct ((_ extract 54 51) C1) (_ bv0 4)) true) ?x3815 ?x6553))))
 (let ((?x4049 (ite (and (distinct ((_ extract 61 31) C1) (_ bv0 31)) true) (ite (and (distinct ((_ extract 61 47) C1) (_ bv0 15)) true) ?x5238 ?x3473) (ite (and (distinct ((_ extract 30 16) C1) (_ bv0 15)) true) ?x6445 ?x5487))))
 (let ((?x3733 (bvsub ?x4049 ?x3616)))
 (let ((?x1166 (ite (and (distinct ((_ extract 3 2) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 3 3) C1) (_ bv0 1)) true) (_ bv3 32) (_ bv2 32)) (ite (and (distinct ((_ extract 1 1) C1) (_ bv0 1)) true) (_ bv1 32) (_ bv0 32)))))
 (let ((?x1440 (ite (and (distinct ((_ extract 7 6) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 7 7) C1) (_ bv0 1)) true) (_ bv7 32) (_ bv6 32)) (ite (and (distinct ((_ extract 5 5) C1) (_ bv0 1)) true) (_ bv5 32) (_ bv4 32)))))
 (let ((?x2237 (ite (and (distinct ((_ extract 11 10) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 11 11) C1) (_ bv0 1)) true) (_ bv11 32) (_ bv10 32)) (ite (and (distinct ((_ extract 9 9) C1) (_ bv0 1)) true) (_ bv9 32) (_ bv8 32)))))
 (let ((?x4044 (ite (and (distinct ((_ extract 15 14) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 15 15) C1) (_ bv0 1)) true) (_ bv15 32) (_ bv14 32)) (ite (and (distinct ((_ extract 13 13) C1) (_ bv0 1)) true) (_ bv13 32) (_ bv12 32)))))
 (let ((?x1348 (ite (and (distinct ((_ extract 15 8) C1) (_ bv0 8)) true) (ite (and (distinct ((_ extract 15 12) C1) (_ bv0 4)) true) ?x4044 ?x2237) (ite (and (distinct ((_ extract 7 4) C1) (_ bv0 4)) true) ?x1440 ?x1166))))
 (let ((?x6698 (ite (and (distinct ((_ extract 19 18) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 19 19) C1) (_ bv0 1)) true) (_ bv19 32) (_ bv18 32)) (ite (and (distinct ((_ extract 17 17) C1) (_ bv0 1)) true) (_ bv17 32) (_ bv16 32)))))
 (let ((?x1207 (ite (and (distinct ((_ extract 23 22) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 23 23) C1) (_ bv0 1)) true) (_ bv23 32) (_ bv22 32)) (ite (and (distinct ((_ extract 21 21) C1) (_ bv0 1)) true) (_ bv21 32) (_ bv20 32)))))
 (let ((?x5073 (ite (and (distinct ((_ extract 27 26) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 27 27) C1) (_ bv0 1)) true) (_ bv27 32) (_ bv26 32)) (ite (and (distinct ((_ extract 25 25) C1) (_ bv0 1)) true) (_ bv25 32) (_ bv24 32)))))
 (let ((?x4015 (ite (and (distinct ((_ extract 30 30) C1) (_ bv0 1)) true) (_ bv30 32) (ite (and (distinct ((_ extract 29 29) C1) (_ bv0 1)) true) (_ bv29 32) (_ bv28 32)))))
 (let ((?x2926 (ite (and (distinct ((_ extract 30 24) C1) (_ bv0 7)) true) (ite (and (distinct ((_ extract 30 28) C1) (_ bv0 3)) true) ?x4015 ?x5073) (ite (and (distinct ((_ extract 23 20) C1) (_ bv0 4)) true) ?x1207 ?x6698))))
 (let ((?x6257 (ite (and (distinct ((_ extract 34 33) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 34 34) C1) (_ bv0 1)) true) (_ bv34 32) (_ bv33 32)) (ite (and (distinct ((_ extract 32 32) C1) (_ bv0 1)) true) (_ bv32 32) (_ bv31 32)))))
 (let ((?x5219 (ite (and (distinct ((_ extract 38 37) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 38 38) C1) (_ bv0 1)) true) (_ bv38 32) (_ bv37 32)) (ite (and (distinct ((_ extract 36 36) C1) (_ bv0 1)) true) (_ bv36 32) (_ bv35 32)))))
 (let ((?x4268 (ite (and (distinct ((_ extract 42 41) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 42 42) C1) (_ bv0 1)) true) (_ bv42 32) (_ bv41 32)) (ite (and (distinct ((_ extract 40 40) C1) (_ bv0 1)) true) (_ bv40 32) (_ bv39 32)))))
 (let ((?x3582 (ite (and (distinct ((_ extract 46 45) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 46 46) C1) (_ bv0 1)) true) (_ bv46 32) (_ bv45 32)) (ite (and (distinct ((_ extract 44 44) C1) (_ bv0 1)) true) (_ bv44 32) (_ bv43 32)))))
 (let ((?x6794 (ite (and (distinct ((_ extract 46 39) C1) (_ bv0 8)) true) (ite (and (distinct ((_ extract 46 43) C1) (_ bv0 4)) true) ?x3582 ?x4268) (ite (and (distinct ((_ extract 38 35) C1) (_ bv0 4)) true) ?x5219 ?x6257))))
 (let ((?x2820 (ite (and (distinct ((_ extract 50 49) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 50 50) C1) (_ bv0 1)) true) (_ bv50 32) (_ bv49 32)) (ite (and (distinct ((_ extract 48 48) C1) (_ bv0 1)) true) (_ bv48 32) (_ bv47 32)))))
 (let ((?x1248 (ite (and (distinct ((_ extract 54 53) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 54 54) C1) (_ bv0 1)) true) (_ bv54 32) (_ bv53 32)) (ite (and (distinct ((_ extract 52 52) C1) (_ bv0 1)) true) (_ bv52 32) (_ bv51 32)))))
 (let ((?x5503 (ite (and (distinct ((_ extract 58 57) C1) (_ bv0 2)) true) (ite (and (distinct ((_ extract 58 58) C1) (_ bv0 1)) true) (_ bv58 32) (_ bv57 32)) (ite (and (distinct ((_ extract 56 56) C1) (_ bv0 1)) true) (_ bv56 32) (_ bv55 32)))))
 (let ((?x3005 (ite (and (distinct ((_ extract 61 61) C1) (_ bv0 1)) true) (_ bv61 32) (ite (and (distinct ((_ extract 60 60) C1) (_ bv0 1)) true) (_ bv60 32) (_ bv59 32)))))
 (let ((?x3302 (ite (and (distinct ((_ extract 61 55) C1) (_ bv0 7)) true) (ite (and (distinct ((_ extract 61 59) C1) (_ bv0 3)) true) ?x3005 ?x5503) (ite (and (distinct ((_ extract 54 51) C1) (_ bv0 4)) true) ?x1248 ?x2820))))
 (let ((?x1884 (ite (and (distinct ((_ extract 61 31) C1) (_ bv0 31)) true) (ite (and (distinct ((_ extract 61 47) C1) (_ bv0 15)) true) ?x3302 ?x6794) (ite (and (distinct ((_ extract 30 16) C1) (_ bv0 15)) true) ?x2926 ?x1348))))
 (let ((?x1129 (ite (and (distinct ((_ extract 2 2) C2) (_ bv0 1)) true) (_ bv2 32) (ite (and (distinct ((_ extract 1 1) C2) (_ bv0 1)) true) (_ bv1 32) (_ bv0 32)))))
 (let ((?x1893 (ite (and (distinct ((_ extract 5 5) C2) (_ bv0 1)) true) (_ bv5 32) (ite (and (distinct ((_ extract 4 4) C2) (_ bv0 1)) true) (_ bv4 32) (_ bv3 32)))))
 (let ((?x1219 (ite (and (distinct ((_ extract 8 8) C2) (_ bv0 1)) true) (_ bv8 32) (ite (and (distinct ((_ extract 7 7) C2) (_ bv0 1)) true) (_ bv7 32) (_ bv6 32)))))
 (let ((?x2462 (ite (and (distinct ((_ extract 10 9) C2) (_ bv0 2)) true) (ite (and (distinct ((_ extract 10 10) C2) (_ bv0 1)) true) (_ bv10 32) (_ bv9 32)) ?x1219)))
 (let ((?x4861 (ite (and (distinct ((_ extract 10 6) C2) (_ bv0 5)) true) ?x2462 (ite (and (distinct ((_ extract 5 3) C2) (_ bv0 3)) true) ?x1893 ?x1129))))
 (and (and (and (distinct C1 (_ bv0 62)) true) (= (bvand C1 (bvsub C1 (_ bv1 62))) (_ bv0 62))) (and (and (distinct C2 (_ bv0 11)) true) (= (bvand C2 (bvsub C2 (_ bv1 11))) (_ bv0 11))) (bvslt ?x4861 ?x1884) (not (bvult ?x3733 (_ bv62 62))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
