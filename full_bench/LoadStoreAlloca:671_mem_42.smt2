(set-info :status unknown)
(declare-fun mem0 () (_ BitVec 8))
(declare-fun %y () (_ BitVec 44))
(declare-fun %p2 () (_ BitVec 64))
(declare-fun idx () (_ BitVec 64))
(declare-fun %x () (_ BitVec 44))
(declare-fun %p1 () (_ BitVec 64))
(declare-fun |ana_equivalentAddressValues(%p1, %p2)| () (_ BitVec 1))
(assert
 (let ((?x389 (ite (and (and (distinct %p2 (_ bv0 64)) true) (or true true) (= idx %p2)) (concat ((_ extract 7 4) mem0) ((_ extract 3 0) %y)) mem0)))
 (let (($x10971 (or true true)))
 (let (($x2094 (and (distinct %p2 (_ bv0 64)) true)))
 (let ((?x3207 (ite (and $x2094 $x10971 (= idx (bvadd (bvadd %p2 (_ bv1 64)) (_ bv0 64)))) ((_ extract 11 4) %y) ?x389)))
 (let ((?x22750 (ite (and $x2094 $x10971 (= idx (bvadd (bvadd %p2 (_ bv1 64)) (_ bv1 64)))) ((_ extract 19 12) %y) ?x3207)))
 (let ((?x5638 (ite (and $x2094 $x10971 (= idx (bvadd (bvadd %p2 (_ bv1 64)) (_ bv2 64)))) ((_ extract 27 20) %y) ?x22750)))
 (let ((?x3380 (ite (and $x2094 $x10971 (= idx (bvadd (bvadd %p2 (_ bv1 64)) (_ bv3 64)))) ((_ extract 35 28) %y) ?x5638)))
 (let ((?x6106 (ite (and $x2094 $x10971 (= idx (bvadd (bvadd %p2 (_ bv1 64)) (_ bv4 64)))) ((_ extract 43 36) %y) ?x3380)))
 (let ((?x12869 (ite (and (and (distinct %p1 (_ bv0 64)) true) $x10971 (= idx %p1)) (concat ((_ extract 7 4) mem0) ((_ extract 3 0) %x)) mem0)))
 (let (($x17212 (and (distinct %p1 (_ bv0 64)) true)))
 (let ((?x14788 (ite (and $x17212 $x10971 (= idx (bvadd (bvadd %p1 (_ bv1 64)) (_ bv0 64)))) ((_ extract 11 4) %x) ?x12869)))
 (let ((?x12529 (ite (and $x17212 $x10971 (= idx (bvadd (bvadd %p1 (_ bv1 64)) (_ bv1 64)))) ((_ extract 19 12) %x) ?x14788)))
 (let ((?x6196 (ite (and $x17212 $x10971 (= idx (bvadd (bvadd %p1 (_ bv1 64)) (_ bv2 64)))) ((_ extract 27 20) %x) ?x12529)))
 (let ((?x6727 (ite (and $x17212 $x10971 (= idx (bvadd (bvadd %p1 (_ bv1 64)) (_ bv3 64)))) ((_ extract 35 28) %x) ?x6196)))
 (let ((?x14365 (ite (and $x17212 $x10971 (= idx (bvadd (bvadd %p1 (_ bv1 64)) (_ bv4 64)))) ((_ extract 43 36) %x) ?x6727)))
 (let ((?x6453 (ite (and $x17212 $x10971 (= %p2 %p1)) (concat ((_ extract 7 4) mem0) ((_ extract 3 0) %x)) mem0)))
 (let ((?x18426 (ite (and $x17212 $x10971 (= %p2 (bvadd (bvadd %p1 (_ bv1 64)) (_ bv0 64)))) ((_ extract 11 4) %x) ?x6453)))
 (let ((?x8802 (ite (and $x17212 $x10971 (= %p2 (bvadd (bvadd %p1 (_ bv1 64)) (_ bv1 64)))) ((_ extract 19 12) %x) ?x18426)))
 (let ((?x13454 (ite (and $x17212 $x10971 (= %p2 (bvadd (bvadd %p1 (_ bv1 64)) (_ bv2 64)))) ((_ extract 27 20) %x) ?x8802)))
 (let ((?x29 (ite (and $x17212 $x10971 (= %p2 (bvadd (bvadd %p1 (_ bv1 64)) (_ bv3 64)))) ((_ extract 35 28) %x) ?x13454)))
 (let ((?x1225 (ite (and $x17212 $x10971 (= %p2 (bvadd (bvadd %p1 (_ bv1 64)) (_ bv4 64)))) ((_ extract 43 36) %x) ?x29)))
 (let ((?x10538 (ite (and $x17212 $x10971 $x2094 $x10971 (= idx %p2)) (concat ((_ extract 7 4) ?x1225) ((_ extract 3 0) %y)) ?x14365)))
 (let ((?x11862 (ite (and $x17212 $x10971 $x2094 $x10971 (= idx (bvadd (bvadd %p2 (_ bv1 64)) (_ bv0 64)))) ((_ extract 11 4) %y) ?x10538)))
 (let ((?x11965 (ite (and $x17212 $x10971 $x2094 $x10971 (= idx (bvadd (bvadd %p2 (_ bv1 64)) (_ bv1 64)))) ((_ extract 19 12) %y) ?x11862)))
 (let ((?x9931 (ite (and $x17212 $x10971 $x2094 $x10971 (= idx (bvadd (bvadd %p2 (_ bv1 64)) (_ bv2 64)))) ((_ extract 27 20) %y) ?x11965)))
 (let ((?x1014 (ite (and $x17212 $x10971 $x2094 $x10971 (= idx (bvadd (bvadd %p2 (_ bv1 64)) (_ bv3 64)))) ((_ extract 35 28) %y) ?x9931)))
 (let ((?x4692 (ite (and $x17212 $x10971 $x2094 $x10971 (= idx (bvadd (bvadd %p2 (_ bv1 64)) (_ bv4 64)))) ((_ extract 43 36) %y) ?x1014)))
 (let (($x3549 (= |ana_equivalentAddressValues(%p1, %p2)| (_ bv1 1))))
 (and (=> $x3549 (= %p1 %p2)) $x3549 (and (distinct ?x4692 ?x6106) true)))))))))))))))))))))))))))))))
(check-sat)
