(set-info :status unknown)
(declare-fun C () (_ BitVec 51))
(declare-fun C2 () (_ BitVec 11))
(declare-fun C3 () (_ BitVec 11))
(assert
 (let ((?x17222 (ite (and (distinct ((_ extract 3 2) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 3 3) C) (_ bv0 1)) true) (_ bv3 32) (_ bv2 32)) (ite (and (distinct ((_ extract 1 1) C) (_ bv0 1)) true) (_ bv1 32) (_ bv0 32)))))
 (let ((?x23123 (ite (and (distinct ((_ extract 6 6) C) (_ bv0 1)) true) (_ bv6 32) (ite (and (distinct ((_ extract 5 5) C) (_ bv0 1)) true) (_ bv5 32) (_ bv4 32)))))
 (let ((?x19978 (ite (and (distinct ((_ extract 9 9) C) (_ bv0 1)) true) (_ bv9 32) (ite (and (distinct ((_ extract 8 8) C) (_ bv0 1)) true) (_ bv8 32) (_ bv7 32)))))
 (let ((?x18198 (ite (and (distinct ((_ extract 12 12) C) (_ bv0 1)) true) (_ bv12 32) (ite (and (distinct ((_ extract 11 11) C) (_ bv0 1)) true) (_ bv11 32) (_ bv10 32)))))
 (let ((?x14705 (ite (and (distinct ((_ extract 12 7) C) (_ bv0 6)) true) (ite (and (distinct ((_ extract 12 10) C) (_ bv0 3)) true) ?x18198 ?x19978) (ite (and (distinct ((_ extract 6 4) C) (_ bv0 3)) true) ?x23123 ?x17222))))
 (let ((?x16283 (ite (and (distinct ((_ extract 16 15) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 16 16) C) (_ bv0 1)) true) (_ bv16 32) (_ bv15 32)) (ite (and (distinct ((_ extract 14 14) C) (_ bv0 1)) true) (_ bv14 32) (_ bv13 32)))))
 (let ((?x11286 (ite (and (distinct ((_ extract 19 19) C) (_ bv0 1)) true) (_ bv19 32) (ite (and (distinct ((_ extract 18 18) C) (_ bv0 1)) true) (_ bv18 32) (_ bv17 32)))))
 (let ((?x10380 (ite (and (distinct ((_ extract 22 22) C) (_ bv0 1)) true) (_ bv22 32) (ite (and (distinct ((_ extract 21 21) C) (_ bv0 1)) true) (_ bv21 32) (_ bv20 32)))))
 (let ((?x8878 (ite (and (distinct ((_ extract 25 25) C) (_ bv0 1)) true) (_ bv25 32) (ite (and (distinct ((_ extract 24 24) C) (_ bv0 1)) true) (_ bv24 32) (_ bv23 32)))))
 (let ((?x15754 (ite (and (distinct ((_ extract 25 20) C) (_ bv0 6)) true) (ite (and (distinct ((_ extract 25 23) C) (_ bv0 3)) true) ?x8878 ?x10380) (ite (and (distinct ((_ extract 19 17) C) (_ bv0 3)) true) ?x11286 ?x16283))))
 (let ((?x8589 (ite (and (distinct ((_ extract 29 28) C) (_ bv0 2)) true) (ite (and (distinct ((_ extract 29 29) C) (_ bv0 1)) true) (_ bv29 32) (_ bv28 32)) (ite (and (distinct ((_ extract 27 27) C) (_ bv0 1)) true) (_ bv27 32) (_ bv26 32)))))
 (let ((?x5306 (ite (and (distinct ((_ extract 32 32) C) (_ bv0 1)) true) (_ bv32 32) (ite (and (distinct ((_ extract 31 31) C) (_ bv0 1)) true) (_ bv31 32) (_ bv30 32)))))
 (let ((?x10056 (ite (and (distinct ((_ extract 35 35) C) (_ bv0 1)) true) (_ bv35 32) (ite (and (distinct ((_ extract 34 34) C) (_ bv0 1)) true) (_ bv34 32) (_ bv33 32)))))
 (let ((?x6748 (ite (and (distinct ((_ extract 38 38) C) (_ bv0 1)) true) (_ bv38 32) (ite (and (distinct ((_ extract 37 37) C) (_ bv0 1)) true) (_ bv37 32) (_ bv36 32)))))
 (let ((?x7880 (ite (and (distinct ((_ extract 38 33) C) (_ bv0 6)) true) (ite (and (distinct ((_ extract 38 36) C) (_ bv0 3)) true) ?x6748 ?x10056) (ite (and (distinct ((_ extract 32 30) C) (_ bv0 3)) true) ?x5306 ?x8589))))
 (let ((?x21839 (ite (and (distinct ((_ extract 41 41) C) (_ bv0 1)) true) (_ bv41 32) (ite (and (distinct ((_ extract 40 40) C) (_ bv0 1)) true) (_ bv40 32) (_ bv39 32)))))
 (let ((?x21017 (ite (and (distinct ((_ extract 44 44) C) (_ bv0 1)) true) (_ bv44 32) (ite (and (distinct ((_ extract 43 43) C) (_ bv0 1)) true) (_ bv43 32) (_ bv42 32)))))
 (let ((?x9751 (ite (and (distinct ((_ extract 47 47) C) (_ bv0 1)) true) (_ bv47 32) (ite (and (distinct ((_ extract 46 46) C) (_ bv0 1)) true) (_ bv46 32) (_ bv45 32)))))
 (let ((?x10331 (ite (and (distinct ((_ extract 50 50) C) (_ bv0 1)) true) (_ bv50 32) (ite (and (distinct ((_ extract 49 49) C) (_ bv0 1)) true) (_ bv49 32) (_ bv48 32)))))
 (let ((?x20044 (ite (and (distinct ((_ extract 50 45) C) (_ bv0 6)) true) (ite (and (distinct ((_ extract 50 48) C) (_ bv0 3)) true) ?x10331 ?x9751) (ite (and (distinct ((_ extract 44 42) C) (_ bv0 3)) true) ?x21017 ?x21839))))
 (let ((?x7036 (ite (and (distinct ((_ extract 50 26) C) (_ bv0 25)) true) (ite (and (distinct ((_ extract 50 39) C) (_ bv0 12)) true) ?x20044 ?x7880) (ite (and (distinct ((_ extract 25 13) C) (_ bv0 13)) true) ?x15754 ?x14705))))
 (let (($x18984 (and (and (distinct (bvsub C3 C2) (_ bv0 11)) true) (= (bvand (bvsub C3 C2) (bvsub (bvsub C3 C2) (_ bv1 11))) (_ bv0 11)))))
 (and (and (and (distinct C (_ bv0 51)) true) (= (bvand C (bvsub C (_ bv1 51))) (_ bv0 51))) $x18984 (bvslt ?x7036 (_ bv11 32)) false))))))))))))))))))))))))
(check-sat)
