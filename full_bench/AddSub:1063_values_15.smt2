(set-info :status unknown)
(declare-fun C2 () (_ BitVec 17))
(declare-fun %Z () (_ BitVec 17))
(declare-fun %RHS () (_ BitVec 17))
(declare-fun C1 () (_ BitVec 17))
(assert
 (let (($x3688 (and (distinct (bvadd (bvxor (bvand %Z C2) C1) %RHS) (bvsub %RHS (bvor %Z (bvnot C2)))) true)))
 (let ((?x1351 (ite (= ((_ extract 15 15) C1) (_ bv1 1)) (_ bv15 32) (ite (= ((_ extract 16 16) C1) (_ bv1 1)) (_ bv16 32) (_ bv17 32)))))
 (let ((?x1410 (ite (= ((_ extract 13 13) C1) (_ bv1 1)) (_ bv13 32) (ite (= ((_ extract 14 14) C1) (_ bv1 1)) (_ bv14 32) ?x1351))))
 (let ((?x4601 (ite (= ((_ extract 11 11) C1) (_ bv1 1)) (_ bv11 32) (ite (= ((_ extract 12 12) C1) (_ bv1 1)) (_ bv12 32) ?x1410))))
 (let ((?x916 (ite (= ((_ extract 9 9) C1) (_ bv1 1)) (_ bv9 32) (ite (= ((_ extract 10 10) C1) (_ bv1 1)) (_ bv10 32) ?x4601))))
 (let ((?x4365 (ite (= ((_ extract 7 7) C1) (_ bv1 1)) (_ bv7 32) (ite (= ((_ extract 8 8) C1) (_ bv1 1)) (_ bv8 32) ?x916))))
 (let ((?x3622 (ite (= ((_ extract 5 5) C1) (_ bv1 1)) (_ bv5 32) (ite (= ((_ extract 6 6) C1) (_ bv1 1)) (_ bv6 32) ?x4365))))
 (let ((?x774 (ite (= ((_ extract 3 3) C1) (_ bv1 1)) (_ bv3 32) (ite (= ((_ extract 4 4) C1) (_ bv1 1)) (_ bv4 32) ?x3622))))
 (let ((?x4912 (ite (= ((_ extract 1 1) C1) (_ bv1 1)) (_ bv1 32) (ite (= ((_ extract 2 2) C1) (_ bv1 1)) (_ bv2 32) ?x774))))
 (and (= (ite (= ((_ extract 0 0) C1) (_ bv1 1)) (_ bv0 32) ?x4912) (_ bv0 32)) (= C1 (bvadd C2 (_ bv1 17))) $x3688)))))))))))
(check-sat)
