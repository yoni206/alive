
(declare-fun mem0 () (_ BitVec 8))
(declare-fun |ana_MaskedValueIsZero(%Y, (-1 << (log2(C2) + 1)))| () (_ BitVec 1))
(declare-fun C2 () (_ BitVec 20))
(declare-fun C1 () (_ BitVec 20))
(declare-fun %Y () (_ BitVec 20))
(assert (let ((_let_0 (= |ana_MaskedValueIsZero(%Y, (-1 << (log2(C2) + 1)))| (_ bv1 1)))) (and (=> _let_0 (= (bvand %Y (bvshl (_ bv1048575 20) (bvadd (ite (not (= ((_ extract 19 10) C2) (_ bv0 10))) (ite (not (= ((_ extract 19 15) C2) (_ bv0 5))) (ite (not (= ((_ extract 19 18) C2) (_ bv0 2))) (ite (not (= ((_ extract 19 19) C2) (_ bv0 1))) (_ bv19 20) (_ bv18 20)) (ite (not (= ((_ extract 17 17) C2) (_ bv0 1))) (_ bv17 20) (ite (not (= ((_ extract 16 16) C2) (_ bv0 1))) (_ bv16 20) (_ bv15 20)))) (ite (not (= ((_ extract 14 13) C2) (_ bv0 2))) (ite (not (= ((_ extract 14 14) C2) (_ bv0 1))) (_ bv14 20) (_ bv13 20)) (ite (not (= ((_ extract 12 12) C2) (_ bv0 1))) (_ bv12 20) (ite (not (= ((_ extract 11 11) C2) (_ bv0 1))) (_ bv11 20) (_ bv10 20))))) (ite (not (= ((_ extract 9 5) C2) (_ bv0 5))) (ite (not (= ((_ extract 9 8) C2) (_ bv0 2))) (ite (not (= ((_ extract 9 9) C2) (_ bv0 1))) (_ bv9 20) (_ bv8 20)) (ite (not (= ((_ extract 7 7) C2) (_ bv0 1))) (_ bv7 20) (ite (not (= ((_ extract 6 6) C2) (_ bv0 1))) (_ bv6 20) (_ bv5 20)))) (ite (not (= ((_ extract 4 3) C2) (_ bv0 2))) (ite (not (= ((_ extract 4 4) C2) (_ bv0 1))) (_ bv4 20) (_ bv3 20)) (ite (not (= ((_ extract 2 2) C2) (_ bv0 1))) (_ bv2 20) (ite (not (= ((_ extract 1 1) C2) (_ bv0 1))) (_ bv1 20) (_ bv0 20)))))) (_ bv1 20)))) (_ bv0 20))) (= C2 (bvneg C1)) _let_0 (= (bvand C2 (bvsub C2 (_ bv1 20))) (_ bv0 20)) (not (= mem0 mem0)) (not (= C2 (_ bv0 20))))))
(assert true)
(check-sat)