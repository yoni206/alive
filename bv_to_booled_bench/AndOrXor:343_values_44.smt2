
(declare-fun C2 () (_ BitVec 50))
(declare-fun %B () (_ BitVec 50))
(declare-fun %A () (_ BitVec 50))
(declare-fun C1 () (_ BitVec 50))
(declare-fun |ana_MaskedValueIsZero(%B, ((1 << (width(C2) - countLeadingZeros(((C2 - 1) ^ C2)))) - 1))| () (_ BitVec 1))
(assert (let ((_let_0 (= |ana_MaskedValueIsZero(%B, ((1 << (width(C2) - countLeadingZeros(((C2 - 1) ^ C2)))) - 1))| (_ bv1 1)))) (let ((_let_1 (bvor (bvsub C2 (_ bv1 50)) C2))) (let ((_let_2 (bvadd C2 (_ bv1 50)))) (let ((_let_3 (bvxor (bvsub C2 (_ bv1 50)) C2))) (and (=> _let_0 (= (bvand %B (bvsub (bvshl (_ bv1 50) (bvsub (_ bv50 50) (ite (= ((_ extract 49 49) _let_3) (_ bv1 1)) (_ bv0 50) (ite (= ((_ extract 48 48) _let_3) (_ bv1 1)) (_ bv1 50) (ite (= ((_ extract 47 47) _let_3) (_ bv1 1)) (_ bv2 50) (ite (= ((_ extract 46 46) _let_3) (_ bv1 1)) (_ bv3 50) (ite (= ((_ extract 45 45) _let_3) (_ bv1 1)) (_ bv4 50) (ite (= ((_ extract 44 44) _let_3) (_ bv1 1)) (_ bv5 50) (ite (= ((_ extract 43 43) _let_3) (_ bv1 1)) (_ bv6 50) (ite (= ((_ extract 42 42) _let_3) (_ bv1 1)) (_ bv7 50) (ite (= ((_ extract 41 41) _let_3) (_ bv1 1)) (_ bv8 50) (ite (= ((_ extract 40 40) _let_3) (_ bv1 1)) (_ bv9 50) (ite (= ((_ extract 39 39) _let_3) (_ bv1 1)) (_ bv10 50) (ite (= ((_ extract 38 38) _let_3) (_ bv1 1)) (_ bv11 50) (ite (= ((_ extract 37 37) _let_3) (_ bv1 1)) (_ bv12 50) (ite (= ((_ extract 36 36) _let_3) (_ bv1 1)) (_ bv13 50) (ite (= ((_ extract 35 35) _let_3) (_ bv1 1)) (_ bv14 50) (ite (= ((_ extract 34 34) _let_3) (_ bv1 1)) (_ bv15 50) (ite (= ((_ extract 33 33) _let_3) (_ bv1 1)) (_ bv16 50) (ite (= ((_ extract 32 32) _let_3) (_ bv1 1)) (_ bv17 50) (ite (= ((_ extract 31 31) _let_3) (_ bv1 1)) (_ bv18 50) (ite (= ((_ extract 30 30) _let_3) (_ bv1 1)) (_ bv19 50) (ite (= ((_ extract 29 29) _let_3) (_ bv1 1)) (_ bv20 50) (ite (= ((_ extract 28 28) _let_3) (_ bv1 1)) (_ bv21 50) (ite (= ((_ extract 27 27) _let_3) (_ bv1 1)) (_ bv22 50) (ite (= ((_ extract 26 26) _let_3) (_ bv1 1)) (_ bv23 50) (ite (= ((_ extract 25 25) _let_3) (_ bv1 1)) (_ bv24 50) (ite (= ((_ extract 24 24) _let_3) (_ bv1 1)) (_ bv25 50) (ite (= ((_ extract 23 23) _let_3) (_ bv1 1)) (_ bv26 50) (ite (= ((_ extract 22 22) _let_3) (_ bv1 1)) (_ bv27 50) (ite (= ((_ extract 21 21) _let_3) (_ bv1 1)) (_ bv28 50) (ite (= ((_ extract 20 20) _let_3) (_ bv1 1)) (_ bv29 50) (ite (= ((_ extract 19 19) _let_3) (_ bv1 1)) (_ bv30 50) (ite (= ((_ extract 18 18) _let_3) (_ bv1 1)) (_ bv31 50) (ite (= ((_ extract 17 17) _let_3) (_ bv1 1)) (_ bv32 50) (ite (= ((_ extract 16 16) _let_3) (_ bv1 1)) (_ bv33 50) (ite (= ((_ extract 15 15) _let_3) (_ bv1 1)) (_ bv34 50) (ite (= ((_ extract 14 14) _let_3) (_ bv1 1)) (_ bv35 50) (ite (= ((_ extract 13 13) _let_3) (_ bv1 1)) (_ bv36 50) (ite (= ((_ extract 12 12) _let_3) (_ bv1 1)) (_ bv37 50) (ite (= ((_ extract 11 11) _let_3) (_ bv1 1)) (_ bv38 50) (ite (= ((_ extract 10 10) _let_3) (_ bv1 1)) (_ bv39 50) (ite (= ((_ extract 9 9) _let_3) (_ bv1 1)) (_ bv40 50) (ite (= ((_ extract 8 8) _let_3) (_ bv1 1)) (_ bv41 50) (ite (= ((_ extract 7 7) _let_3) (_ bv1 1)) (_ bv42 50) (ite (= ((_ extract 6 6) _let_3) (_ bv1 1)) (_ bv43 50) (ite (= ((_ extract 5 5) _let_3) (_ bv1 1)) (_ bv44 50) (ite (= ((_ extract 4 4) _let_3) (_ bv1 1)) (_ bv45 50) (ite (= ((_ extract 3 3) _let_3) (_ bv1 1)) (_ bv46 50) (ite (= ((_ extract 2 2) _let_3) (_ bv1 1)) (_ bv47 50) (ite (= ((_ extract 1 1) _let_3) (_ bv1 1)) (_ bv48 50) (ite (= ((_ extract 0 0) _let_3) (_ bv1 1)) (_ bv49 50) (_ bv50 50))))))))))))))))))))))))))))))))))))))))))))))))))))) (_ bv1 50))) (_ bv0 50))) (= (bvand C1 C2) C2) (or (= (bvand _let_2 (bvsub _let_2 (_ bv1 50))) (_ bv0 50)) (and (= (bvand (bvadd _let_1 (_ bv1 50)) _let_1) (_ bv0 50)) _let_0 (not (= _let_1 (_ bv0 50))))) (not (= (bvand (bvadd (bvand %A C1) %B) C2) (bvand (bvadd %A %B) C2)))))))))
(assert true)
(check-sat)